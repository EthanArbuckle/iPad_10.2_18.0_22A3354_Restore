void mlcore::ItemTable::dateDownloadedColumn(mlcore::ItemTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3663) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 455), *((_QWORD *)this + 456));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3640);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 457);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 916);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 919);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3668);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemTable::downloadSourceContainerIDColumn(mlcore::ItemTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3711) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 461), *((_QWORD *)this + 462));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3688);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 463);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 928);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 931);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3716);
  *(_QWORD *)a2 = off_24C336AC0;
}

uint64_t mlcore::Transaction::libraryView@<X0>(uint64_t this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;

  v2 = *(_QWORD *)(this + 24);
  *a2 = *(_QWORD *)(this + 16);
  a2[1] = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return this;
}

void std::shared_ptr<mlcore::DeviceLibraryView>::__enable_weak_this[abi:ne180100]<mlcore::DeviceLibraryView,mlcore::DeviceLibraryView,void>(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t *p_shared_weak_owners;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  if (a2)
  {
    v4 = (std::__shared_weak_count *)a2[1];
    if (!v4 || v4->__shared_owners_ == -1)
    {
      v5 = *(std::__shared_weak_count **)(a1 + 8);
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
        p_shared_weak_owners = (unint64_t *)&v5->__shared_weak_owners_;
        do
          v9 = __ldxr(p_shared_weak_owners);
        while (__stxr(v9 + 1, p_shared_weak_owners));
        v4 = (std::__shared_weak_count *)a2[1];
      }
      *a2 = a3;
      a2[1] = v5;
      if (v4)
        std::__shared_weak_count::__release_weak(v4);
      if (v5)
      {
        v10 = (unint64_t *)&v5->__shared_owners_;
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
      }
    }
  }
}

void std::__shared_ptr_emplace<mlcore::DeviceLibraryView>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33CCC8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mlcore::DeviceLibraryView>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33CCC8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mlcore::Transaction::databaseConnection@<X0>(uint64_t this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  v2 = *(uint64_t **)(this + 48);
  v4 = *v2;
  v3 = v2[1];
  *a2 = v4;
  a2[1] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return this;
}

uint64_t mlcore::Transaction::databaseConnectionCheckout@<X0>(uint64_t this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;

  v2 = *(_QWORD *)(this + 56);
  *a2 = *(_QWORD *)(this + 48);
  a2[1] = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return this;
}

uint64_t mlcore::Transaction::shouldCommit(mlcore::Transaction *this)
{
  return *((unsigned __int8 *)this + 64);
}

uint64_t mlcore::Transaction::setShouldCommit(uint64_t this, char a2)
{
  *(_BYTE *)(this + 64) = a2;
  return this;
}

uint64_t mlcore::Transaction::isReadOnly(mlcore::Transaction *this)
{
  return *((unsigned __int8 *)this + 65);
}

void mlcore::SearchPredicate::~SearchPredicate(void **this)
{
  *this = off_24C338150;
  if (*((char *)this + 39) < 0)
    operator delete(this[2]);
}

{
  *this = off_24C338150;
  if (*((char *)this + 39) < 0)
    operator delete(this[2]);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mlcore::SearchPredicate::description(mlcore::SearchPredicate *this)
{
  int v2;
  char *v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  void *__p[2];
  unsigned __int8 v9;
  _QWORD v10[11];
  char v11;
  uint64_t v12;

  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v10);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"LocalizedStringSearch(", 22);
  std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)", '", 3);
  v2 = *((char *)this + 39);
  if (v2 >= 0)
    v3 = (char *)this + 16;
  else
    v3 = (char *)*((_QWORD *)this + 2);
  if (v2 >= 0)
    v4 = *((unsigned __int8 *)this + 39);
  else
    v4 = *((_QWORD *)this + 3);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)v3, v4);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"', ", 3);
  (*(void (**)(void **__return_ptr))(**((_QWORD **)this + 1) + 40))(__p);
  if ((v9 & 0x80u) == 0)
    v5 = __p;
  else
    v5 = (void **)__p[0];
  if ((v9 & 0x80u) == 0)
    v6 = v9;
  else
    v6 = (uint64_t)__p[1];
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)v5, v6);
  if ((char)v9 < 0)
    operator delete(__p[0]);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)")", 1);
  std::stringbuf::str();
  v10[0] = *MEMORY[0x24BEDB800];
  *(_QWORD *)((char *)v10 + *(_QWORD *)(v10[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB800] + 24);
  v10[1] = MEMORY[0x24BEDB848] + 16;
  if (v11 < 0)
    operator delete((void *)v10[9]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x20BD27A84](&v12);
}

void sub_20A85EA6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
    operator delete(__p);
  std::ostringstream::~ostringstream((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t mlcore::SearchPredicate::matches()
{
  return 0;
}

uint64_t mlcore::SearchPredicate::_allProperties@<X0>(mlcore::SearchPredicate *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3[2];

  v3[1] = *MEMORY[0x24BDAC8D0];
  v3[0] = *((_QWORD *)this + 1);
  return mlcore::OrderedSet<mlcore::ModelPropertyBase *,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>>::OrderedSet(a2, v3, 1);
}

void mlcore::SearchPredicate::_SQLExpression(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  unint64_t *v16;
  unint64_t v17;
  _QWORD *v18;
  __int128 v19;
  uint64_t i;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  __int128 v38;
  __int128 v39;
  _QWORD *v40;
  char *v41;
  _QWORD *v42;
  void (**v43)(mediaplatform::SQLExpressionList *__hidden);
  _QWORD v44[3];
  uint64_t v45;
  std::__shared_weak_count *v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  __int128 v49;
  char v50;
  __int128 v51;
  uint64_t v52;
  std::__shared_weak_count *v53;
  __int128 v54;
  uint64_t v55;

  v55 = *MEMORY[0x24BDAC8D0];
  std::allocate_shared[abi:ne180100]<mediaplatform::DatabaseParameter<std::string>,std::allocator<mediaplatform::DatabaseParameter<std::string>>,std::string&,void>(&v47, a1 + 16);
  std::allocate_shared[abi:ne180100]<mediaplatform::DatabaseBindParameter,std::allocator<mediaplatform::DatabaseBindParameter>,std::shared_ptr<mediaplatform::DatabaseParameter<int>> &,void>(&v45, v47, v48);
  std::allocate_shared[abi:ne180100]<mediaplatform::SQLLiteralValue<long long>,std::allocator<mediaplatform::SQLLiteralValue<long long>>,int,void>(&v39, *(_DWORD *)(a1 + 40));
  v51 = v39;
  v39 = 0uLL;
  v52 = v45;
  v53 = v46;
  if (v46)
  {
    p_shared_owners = (unint64_t *)&v46->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  v8 = *(_QWORD *)(a1 + 8);
  v9 = (std::__shared_weak_count *)a2[1];
  v36 = *a2;
  v37 = v9;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t *))(*(_QWORD *)v8 + 96))(&v38, v8, &v36);
  v54 = v38;
  v38 = 0uLL;
  v41 = 0;
  v42 = 0;
  v40 = 0;
  *(_QWORD *)&v49 = &v40;
  BYTE8(v49) = 0;
  v12 = operator new(0x30uLL);
  v13 = 0;
  v40 = v12;
  v41 = (char *)v12;
  v42 = v12 + 6;
  v14 = (char *)v12;
  do
  {
    v15 = *(&v51 + v13);
    *(_OWORD *)v14 = v15;
    if (*((_QWORD *)&v15 + 1))
    {
      v16 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
      do
        v17 = __ldxr(v16);
      while (__stxr(v17 + 1, v16));
    }
    ++v13;
    v14 += 16;
  }
  while (v13 != 3);
  v41 = v14;
  v43 = &off_24C330FB0;
  memset(v44, 0, sizeof(v44));
  std::vector<std::shared_ptr<mediaplatform::SQLExpression const>>::__init_with_size[abi:ne180100]<std::shared_ptr<mediaplatform::SQLExpression const>*,std::shared_ptr<mediaplatform::SQLExpression const>*>((char *)v44, v12, v14, (v14 - (char *)v12) >> 4);
  v18 = operator new(0x58uLL);
  v18[1] = 0;
  v18[2] = 0;
  *v18 = &off_24C33C050;
  std::string::basic_string[abi:ne180100]<0>(&v49, "LocalizedStringSearch");
  mediaplatform::SQLFunctionExpression::SQLFunctionExpression((uint64_t)(v18 + 3), &v49, (uint64_t)&v43);
  if (v50 < 0)
    operator delete((void *)v49);
  *(_QWORD *)&v19 = v18 + 3;
  *((_QWORD *)&v19 + 1) = v18;
  *a3 = v19;
  v43 = &off_24C330FB0;
  *(_QWORD *)&v49 = v44;
  std::vector<std::shared_ptr<mediaplatform::SQLExpression const>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v49);
  *(_QWORD *)&v49 = &v40;
  std::vector<std::shared_ptr<mediaplatform::SQLExpression const>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v49);
  for (i = 32; i != -16; i -= 16)
    std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&v51 + i);
  v21 = (std::__shared_weak_count *)*((_QWORD *)&v38 + 1);
  if (*((_QWORD *)&v38 + 1))
  {
    v22 = (unint64_t *)(*((_QWORD *)&v38 + 1) + 8);
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
  v24 = v37;
  if (v37)
  {
    v25 = (unint64_t *)&v37->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
  v27 = (std::__shared_weak_count *)*((_QWORD *)&v39 + 1);
  if (*((_QWORD *)&v39 + 1))
  {
    v28 = (unint64_t *)(*((_QWORD *)&v39 + 1) + 8);
    do
      v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
  v30 = v46;
  if (v46)
  {
    v31 = (unint64_t *)&v46->__shared_owners_;
    do
      v32 = __ldaxr(v31);
    while (__stlxr(v32 - 1, v31));
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
      std::__shared_weak_count::__release_weak(v30);
    }
  }
  v33 = v48;
  if (v48)
  {
    v34 = &v48->__shared_owners_;
    do
      v35 = __ldaxr((unint64_t *)v34);
    while (__stlxr(v35 - 1, (unint64_t *)v34));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }
}

void sub_20A85EE44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,char a25,uint64_t a26,char *a27)
{
  std::__shared_weak_count *v27;
  uint64_t v28;
  void *v30;
  uint64_t i;

  if (*(char *)(v28 - 113) < 0)
    operator delete(*(void **)(v28 - 136));
  std::__shared_weak_count::~__shared_weak_count(v27);
  operator delete(v30);
  std::vector<std::shared_ptr<mediaplatform::SQLExpression const>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a27);
  a27 = &a16;
  std::vector<std::shared_ptr<mediaplatform::SQLExpression const>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a27);
  for (i = 32; i != -16; i -= 16)
    std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100](v28 - 112 + i);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a11);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a13);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a23);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a25);
  _Unwind_Resume(a1);
}

void sub_20A85EF2C()
{
  JUMPOUT(0x20A85EF1CLL);
}

void sub_20A85EF34()
{
  JUMPOUT(0x20A85EF24);
}

void std::allocate_shared[abi:ne180100]<mediaplatform::DatabaseParameter<std::string>,std::allocator<mediaplatform::DatabaseParameter<std::string>>,std::string&,void>(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  std::string *v5;

  v4 = operator new(0x38uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = &off_24C33BC98;
  v5 = (std::string *)(v4 + 4);
  v4[3] = off_24C335C70;
  if (*(char *)(a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
    v4[6] = *(_QWORD *)(a2 + 16);
  }
  *a1 = v4 + 3;
  a1[1] = v4;
}

void sub_20A85EFB8(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

uint64_t mlcore::SearchPredicate::SearchPredicate(uint64_t a1, uint64_t a2, __int128 *a3, int a4)
{
  std::string *v6;
  __int128 v7;

  *(_QWORD *)a1 = off_24C338150;
  *(_QWORD *)(a1 + 8) = a2;
  v6 = (std::string *)(a1 + 16);
  if (*((char *)a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v6, *(const std::string::value_type **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    v7 = *a3;
    v6->__r_.__value_.__r.__words[2] = *((_QWORD *)a3 + 2);
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = v7;
  }
  *(_DWORD *)(a1 + 40) = a4;
  return a1;
}

{
  std::string *v6;
  __int128 v7;

  *(_QWORD *)a1 = off_24C338150;
  *(_QWORD *)(a1 + 8) = a2;
  v6 = (std::string *)(a1 + 16);
  if (*((char *)a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v6, *(const std::string::value_type **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    v7 = *a3;
    v6->__r_.__value_.__r.__words[2] = *((_QWORD *)a3 + 2);
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = v7;
  }
  *(_DWORD *)(a1 + 40) = a4;
  return a1;
}

uint64_t mediaplatform::SQLRenderingContext::SQLRenderingContext(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 1065353216;
  std::unordered_set<std::string>::unordered_set(a1 + 48, a2);
  return a1;
}

void sub_20A85F0C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

double mediaplatform::SQLRenderingContext::SQLRenderingContext(mediaplatform::SQLRenderingContext *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *((_DWORD *)this + 10) = 1065353216;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_DWORD *)this + 20) = 1065353216;
  return result;
}

{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *((_DWORD *)this + 10) = 1065353216;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_DWORD *)this + 20) = 1065353216;
  return result;
}

uint64_t mediaplatform::SQLRenderingContext::renderingPhase(mediaplatform::SQLRenderingContext *this)
{
  return *(unsigned int *)this;
}

_DWORD *mediaplatform::SQLRenderingContext::setRenderingPhase(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

BOOL mediaplatform::SQLRenderingContext::hasDefinedAliasName(uint64_t a1, unsigned __int8 *a2)
{
  return std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>((_QWORD *)(a1 + 8), a2) != 0;
}

unsigned __int8 *std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>(_QWORD *a1, unsigned __int8 *a2)
{
  unint64_t v4;
  int8x8_t v5;
  unint64_t v6;
  uint8x8_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned __int8 **v10;
  unsigned __int8 *i;
  unint64_t v12;

  v4 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)a2);
  v5 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v5)
    return 0;
  v6 = v4;
  v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    v9 = v4;
    if (v4 >= *(_QWORD *)&v5)
      v9 = v4 % *(_QWORD *)&v5;
  }
  else
  {
    v9 = (*(_QWORD *)&v5 - 1) & v4;
  }
  v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10)
    return 0;
  for (i = *v10; i; i = *(unsigned __int8 **)i)
  {
    v12 = *((_QWORD *)i + 1);
    if (v12 == v6)
    {
      if (std::equal_to<std::string>::operator()[abi:ne180100](i + 16, a2))
        return i;
    }
    else
    {
      if (v8 > 1)
      {
        if (v12 >= *(_QWORD *)&v5)
          v12 %= *(_QWORD *)&v5;
      }
      else
      {
        v12 &= *(_QWORD *)&v5 - 1;
      }
      if (v12 != v9)
        return 0;
    }
  }
  return i;
}

void mediaplatform::SQLRenderingContext::defineAliasName(uint64_t a1, unsigned __int8 *a2)
{
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(a1 + 8, a2, (uint64_t)a2);
}

BOOL mediaplatform::SQLRenderingContext::hasDefinedTableName(uint64_t a1, unsigned __int8 *a2)
{
  return std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>((_QWORD *)(a1 + 48), a2) != 0;
}

void mediaplatform::SQLRenderingContext::defineTableName(uint64_t a1, unsigned __int8 *a2)
{
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(a1 + 48, a2, (uint64_t)a2);
}

uint64_t mediaplatform::SQLRenderingContext::tableNames@<X0>(mediaplatform::SQLRenderingContext *this@<X0>, uint64_t a2@<X8>)
{
  return std::unordered_set<std::string>::unordered_set(a2, (uint64_t)this + 48);
}

uint64_t mlcore::EntityPropertiesQuery::setPersistentIDPropertyValue(uint64_t this, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(this + 120);
  *(_QWORD *)(v2 + 24) = a2;
  v3 = *(_QWORD *)(v2 + 32);
  if (v3)
    *(_QWORD *)(v3 + 8) = a2;
  return this;
}

const void **mediaplatform::CFPropertyListFromData@<X0>(CFDataRef data@<X0>, CFOptionFlags options@<X1>, const void **a3@<X2>, const void ***a4@<X8>)
{
  const void **result;
  CFErrorRef v7;
  const void *v8;
  CFErrorRef v9;
  CFErrorRef error;

  error = 0;
  result = (const void **)CFPropertyListCreateWithData(0, data, options, 0, &error);
  *a4 = result;
  v7 = error;
  if (error)
  {
    v9 = error;
    CFRetain(error);
    v8 = *a3;
    *a3 = v7;
    if (v8)
      CFRelease(v8);
    return mediaplatform::CFRetainedPointer<__CFError *>::~CFRetainedPointer((const void **)&v9);
  }
  return result;
}

void sub_20A85F370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, const void *a9)
{
  const void **v9;

  mediaplatform::CFRetainedPointer<__CFError *>::~CFRetainedPointer(&a9);
  mediaplatform::CFRetainedPointer<void const*>::~CFRetainedPointer(v9);
  _Unwind_Resume(a1);
}

mlcore::EntityRevisionTable *mlcore::EntityRevisionTable::EntityRevisionTable(mlcore::EntityRevisionTable *this)
{
  int v2;
  uint64_t v3;
  std::string *v4;
  int v5;
  int v6;
  int v7;
  void *v8;
  std::string *v9;
  int v10;
  std::string *v11;
  int v12;
  std::string *v13;
  int v14;
  std::string *v15;
  int v16;
  std::string *v17;
  char v18;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  std::string __str;
  void *v43[2];
  char v44;
  void (**v45)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string __p;
  int v47;
  uint64_t v48;
  void *v49[2];
  char v50;
  void (**v51)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v52;
  int v53;
  uint64_t v54;
  void *v55[2];
  char v56;
  void (**v57)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v58;
  int v59;
  uint64_t v60;
  void *v61[2];
  char v62;
  void (**v63)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v64;
  int v65;
  uint64_t v66;
  int v67;
  void *v68[2];
  char v69;
  void (**v70)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v71;
  int v72;
  uint64_t v73;
  std::string __s;
  uint64_t (**v75)();
  std::string v76;
  int v77;
  uint64_t v78;
  uint64_t (**v79)();
  std::string v80;
  int v81;
  uint64_t v82;
  uint64_t (**v83)();
  std::string v84;
  int v85;
  uint64_t v86;
  uint64_t (**v87)();
  std::string v88;
  int v89;
  uint64_t v90;
  int v91;
  uint64_t (**v92)();
  std::string v93;
  int v94;
  uint64_t v95;
  std::string v96;
  uint64_t (**v97)();
  std::string v98;
  int v99;
  uint64_t v100;
  uint64_t (**v101)();
  std::string v102;
  int v103;
  uint64_t v104;
  uint64_t (**v105)();
  std::string v106;
  int v107;
  uint64_t v108;
  uint64_t (**v109)();
  std::string v110;
  int v111;
  uint64_t v112;
  int v113;
  uint64_t (**v114)();
  std::string v115;
  int v116;
  uint64_t v117;
  uint64_t (**v118)();
  std::string v119;
  int v120;
  uint64_t v121;
  uint64_t (**v122)();
  std::string v123;
  int v124;
  uint64_t v125;
  uint64_t (**v126)();
  std::string v127;
  int v128;
  uint64_t v129;
  uint64_t (**v130)();
  std::string v131;
  int v132;
  uint64_t v133;
  int v134;
  void (**v135)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v136;
  int v137;
  uint64_t v138;
  uint64_t (**v139)();
  std::string v140;
  int v141;
  uint64_t v142;
  uint64_t (**v143)();
  std::string v144;
  int v145;
  uint64_t v146;
  void (**v147)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v148;
  int v149;
  uint64_t v150;
  void (**v151)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v152;
  int v153;
  uint64_t v154;
  void (**v155)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v156;
  int v157;
  uint64_t v158;

  std::string::basic_string[abi:ne180100]<0>(&__s, "entity_revision");
  std::string::basic_string[abi:ne180100]<0>(v68, "revision");
  mlcore::MediaColumn<int>::MediaColumn((uint64_t)&v70, (uint64_t)v68, 1);
  std::string::basic_string[abi:ne180100]<0>(v61, "entity_pid");
  mlcore::MediaColumn<long long>::MediaColumn((uint64_t)&v63, (uint64_t)v61);
  std::string::basic_string[abi:ne180100]<0>(v55, "deleted");
  mlcore::MediaColumn<int>::MediaColumn((uint64_t)&v57, (uint64_t)v55, 0);
  std::string::basic_string[abi:ne180100]<0>(v49, "class");
  mlcore::MediaColumn<int>::MediaColumn((uint64_t)&v51, (uint64_t)v49, 0);
  std::string::basic_string[abi:ne180100]<0>(v43, "revision_type");
  mlcore::MediaColumn<int>::MediaColumn((uint64_t)&v45, (uint64_t)v43, 0);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v96, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v96 = __s;
  if (SHIBYTE(v71.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v93, v71.__r_.__value_.__l.__data_, v71.__r_.__value_.__l.__size_);
  else
    v93 = v71;
  v36 = v72;
  v94 = v72;
  v92 = off_24C335AF8;
  v35 = v73;
  v95 = v73;
  if (SHIBYTE(v64.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v88, v64.__r_.__value_.__l.__data_, v64.__r_.__value_.__l.__size_);
  else
    v88 = v64;
  v87 = off_24C335B18;
  v90 = v66;
  v37 = v65;
  v89 = v65;
  v91 = v67;
  if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v84, v58.__r_.__value_.__l.__data_, v58.__r_.__value_.__l.__size_);
  else
    v84 = v58;
  v39 = v59;
  v85 = v59;
  v83 = off_24C335AF8;
  v38 = v60;
  v86 = v60;
  if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v80, v52.__r_.__value_.__l.__data_, v52.__r_.__value_.__l.__size_);
  else
    v80 = v52;
  v41 = v53;
  v81 = v53;
  v79 = off_24C335AF8;
  v40 = v54;
  v82 = v54;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v76, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  else
    v76 = __p;
  v2 = v47;
  v77 = v47;
  v75 = off_24C335AF8;
  v3 = v48;
  v78 = v48;
  *(_QWORD *)this = &off_24C330F50;
  v4 = (std::string *)((char *)this + 8);
  v34 = SHIBYTE(v96.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v4, v96.__r_.__value_.__l.__data_, v96.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)&v96.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 3) = *((_QWORD *)&v96.__r_.__value_.__l + 2);
  }
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *(_QWORD *)this = &off_24C335440;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  v33 = SHIBYTE(v93.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v93.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v115, v93.__r_.__value_.__l.__data_, v93.__r_.__value_.__l.__size_);
  else
    v115 = v93;
  v116 = v36;
  v114 = off_24C335AF8;
  v117 = v35;
  v32 = SHIBYTE(v88.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v110, v88.__r_.__value_.__l.__data_, v88.__r_.__value_.__l.__size_);
  else
    v110 = v88;
  v109 = off_24C335B18;
  v112 = v90;
  v111 = v37;
  v113 = v91;
  v31 = SHIBYTE(v84.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v106, v84.__r_.__value_.__l.__data_, v84.__r_.__value_.__l.__size_);
  else
    v106 = v84;
  v107 = v39;
  v105 = off_24C335AF8;
  v108 = v38;
  v29 = SHIBYTE(v80.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v102, v80.__r_.__value_.__l.__data_, v80.__r_.__value_.__l.__size_);
  else
    v102 = v80;
  v103 = v41;
  v101 = off_24C335AF8;
  v104 = v40;
  v28 = SHIBYTE(v76.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v98, v76.__r_.__value_.__l.__data_, v76.__r_.__value_.__l.__size_);
  else
    v98 = v76;
  v99 = v2;
  v97 = off_24C335AF8;
  v100 = v3;
  v5 = SHIBYTE(v110.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v110.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v131, v110.__r_.__value_.__l.__data_, v110.__r_.__value_.__l.__size_);
  else
    v131 = v110;
  v130 = off_24C335B18;
  v133 = v90;
  v132 = v37;
  v134 = v91;
  v6 = SHIBYTE(v106.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v106.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v127, v106.__r_.__value_.__l.__data_, v106.__r_.__value_.__l.__size_);
  else
    v127 = v106;
  v128 = v39;
  v126 = off_24C335AF8;
  v129 = v38;
  v26 = SHIBYTE(v102.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v102.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v123, v102.__r_.__value_.__l.__data_, v102.__r_.__value_.__l.__size_);
  else
    v123 = v102;
  v124 = v41;
  v122 = off_24C335AF8;
  v125 = v40;
  v25 = SHIBYTE(v98.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v119, v98.__r_.__value_.__l.__data_, v98.__r_.__value_.__l.__size_);
  else
    v119 = v98;
  v120 = v2;
  v118 = off_24C335AF8;
  v121 = v3;
  v23 = v5;
  v24 = SHIBYTE(v127.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v127.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v144, v127.__r_.__value_.__l.__data_, v127.__r_.__value_.__l.__size_);
  else
    v144 = v127;
  v145 = v39;
  v143 = off_24C335AF8;
  v146 = v38;
  v22 = SHIBYTE(v123.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v123.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v140, v123.__r_.__value_.__l.__data_, v123.__r_.__value_.__l.__size_);
  else
    v140 = v123;
  v141 = v41;
  v139 = off_24C335AF8;
  v142 = v40;
  v135 = off_24C335D90;
  v20 = SHIBYTE(v119.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v119.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v136, v119.__r_.__value_.__l.__data_, v119.__r_.__value_.__l.__size_);
  else
    v136 = v119;
  v137 = v2;
  v138 = v3;
  v151 = off_24C335D90;
  v30 = SHIBYTE(v140.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v152, v140.__r_.__value_.__l.__data_, v140.__r_.__value_.__l.__size_);
  else
    v152 = v140;
  v153 = v41;
  v154 = v40;
  v147 = off_24C335D90;
  v27 = SHIBYTE(v136.__r_.__value_.__r.__words[2]);
  v21 = v6;
  if (SHIBYTE(v136.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v148, v136.__r_.__value_.__l.__data_, v136.__r_.__value_.__l.__size_);
  else
    v148 = v136;
  v149 = v2;
  v150 = v3;
  v155 = off_24C335D90;
  v7 = SHIBYTE(v148.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v148.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v156, v148.__r_.__value_.__l.__data_, v148.__r_.__value_.__l.__size_);
  else
    v156 = v148;
  v157 = v2;
  v158 = v3;
  *((_QWORD *)this + 10) = off_24C335D90;
  if (SHIBYTE(v156.__r_.__value_.__r.__words[2]) < 0)
  {
    v8 = (void *)v156.__r_.__value_.__r.__words[0];
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 88), v156.__r_.__value_.__l.__data_, v156.__r_.__value_.__l.__size_);
    *((_DWORD *)this + 28) = v2;
    *((_QWORD *)this + 10) = off_24C335AF8;
    *(_QWORD *)((char *)this + 116) = v3;
    v155 = off_24C335D90;
    operator delete(v8);
  }
  else
  {
    *(std::string *)((char *)this + 88) = v156;
    *((_DWORD *)this + 28) = v2;
    *((_QWORD *)this + 10) = off_24C335AF8;
    *(_QWORD *)((char *)this + 116) = v3;
    v155 = off_24C335D90;
  }
  *((_QWORD *)this + 16) = off_24C335D90;
  v9 = (std::string *)((char *)this + 136);
  v10 = SHIBYTE(v152.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v152.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v9, v152.__r_.__value_.__l.__data_, v152.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v9->__r_.__value_.__l.__data_ = *(_OWORD *)&v152.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 19) = *((_QWORD *)&v152.__r_.__value_.__l + 2);
  }
  *((_DWORD *)this + 40) = v41;
  *((_QWORD *)this + 16) = off_24C335AF8;
  *(_QWORD *)((char *)this + 164) = v40;
  v147 = off_24C335D90;
  if (v7 < 0)
    operator delete(v148.__r_.__value_.__l.__data_);
  v151 = off_24C335D90;
  if (v10 < 0)
    operator delete(v152.__r_.__value_.__l.__data_);
  *((_QWORD *)this + 22) = off_24C335D90;
  v11 = (std::string *)((char *)this + 184);
  v12 = SHIBYTE(v144.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v144.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v11, v144.__r_.__value_.__l.__data_, v144.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v11->__r_.__value_.__l.__data_ = *(_OWORD *)&v144.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 25) = *((_QWORD *)&v144.__r_.__value_.__l + 2);
  }
  *((_DWORD *)this + 52) = v39;
  *((_QWORD *)this + 22) = off_24C335AF8;
  *(_QWORD *)((char *)this + 212) = v38;
  v135 = off_24C335D90;
  if (v27 < 0)
    operator delete(v136.__r_.__value_.__l.__data_);
  if (v30 < 0)
  {
    operator delete(v140.__r_.__value_.__l.__data_);
    if ((v12 & 0x80000000) == 0)
      goto LABEL_84;
  }
  else if ((v12 & 0x80000000) == 0)
  {
    goto LABEL_84;
  }
  operator delete(v144.__r_.__value_.__l.__data_);
LABEL_84:
  *((_QWORD *)this + 28) = off_24C335D90;
  v13 = (std::string *)((char *)this + 232);
  v14 = SHIBYTE(v131.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v13, v131.__r_.__value_.__l.__data_, v131.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v13->__r_.__value_.__l.__data_ = *(_OWORD *)&v131.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 31) = *((_QWORD *)&v131.__r_.__value_.__l + 2);
  }
  *((_DWORD *)this + 64) = v37;
  *((_QWORD *)this + 28) = off_24C335B18;
  *(_QWORD *)((char *)this + 260) = v133;
  *((_DWORD *)this + 67) = v134;
  if (v20 < 0)
    operator delete(v119.__r_.__value_.__l.__data_);
  if (v22 < 0)
    operator delete(v123.__r_.__value_.__l.__data_);
  if (v24 < 0)
  {
    operator delete(v127.__r_.__value_.__l.__data_);
    if ((v14 & 0x80000000) == 0)
      goto LABEL_95;
  }
  else if ((v14 & 0x80000000) == 0)
  {
    goto LABEL_95;
  }
  operator delete(v131.__r_.__value_.__l.__data_);
LABEL_95:
  *((_QWORD *)this + 34) = off_24C335D90;
  v15 = (std::string *)((char *)this + 280);
  v16 = SHIBYTE(v115.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v115.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v15, v115.__r_.__value_.__l.__data_, v115.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v15->__r_.__value_.__l.__data_ = *(_OWORD *)&v115.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 37) = *((_QWORD *)&v115.__r_.__value_.__l + 2);
  }
  *((_DWORD *)this + 76) = v36;
  *((_QWORD *)this + 34) = off_24C335AF8;
  *(_QWORD *)((char *)this + 308) = v35;
  if (v25 < 0)
    operator delete(v98.__r_.__value_.__l.__data_);
  if (v26 < 0)
  {
    operator delete(v102.__r_.__value_.__l.__data_);
    if ((v21 & 0x80000000) == 0)
      goto LABEL_104;
  }
  else if ((v21 & 0x80000000) == 0)
  {
    goto LABEL_104;
  }
  operator delete(v106.__r_.__value_.__l.__data_);
LABEL_104:
  if (v23 < 0)
  {
    operator delete(v110.__r_.__value_.__l.__data_);
    if ((v16 & 0x80000000) == 0)
      goto LABEL_106;
  }
  else if ((v16 & 0x80000000) == 0)
  {
    goto LABEL_106;
  }
  operator delete(v115.__r_.__value_.__l.__data_);
LABEL_106:
  v75 = (uint64_t (**)())off_24C335D90;
  if (v28 < 0)
    operator delete(v76.__r_.__value_.__l.__data_);
  v79 = (uint64_t (**)())off_24C335D90;
  if (v29 < 0)
    operator delete(v80.__r_.__value_.__l.__data_);
  v83 = (uint64_t (**)())off_24C335D90;
  if (v31 < 0)
    operator delete(v84.__r_.__value_.__l.__data_);
  v87 = (uint64_t (**)())off_24C335D90;
  if (v32 < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  v92 = (uint64_t (**)())off_24C335D90;
  if (v33 < 0)
    operator delete(v93.__r_.__value_.__l.__data_);
  if (v34 < 0)
    operator delete(v96.__r_.__value_.__l.__data_);
  *(_QWORD *)this = off_24C335FA8;
  *((_QWORD *)this + 40) = off_24C335D90;
  if (SHIBYTE(v71.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 328), v71.__r_.__value_.__l.__data_, v71.__r_.__value_.__l.__size_);
  else
    *(std::string *)((char *)this + 328) = v71;
  *((_DWORD *)this + 88) = v72;
  *(_QWORD *)((char *)this + 356) = v73;
  *((_QWORD *)this + 40) = off_24C336AA0;
  *((_QWORD *)this + 46) = off_24C335D90;
  if (SHIBYTE(v64.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 376), v64.__r_.__value_.__l.__data_, v64.__r_.__value_.__l.__size_);
  else
    *(std::string *)((char *)this + 376) = v64;
  *((_DWORD *)this + 100) = v65;
  *(_QWORD *)((char *)this + 404) = v66;
  *((_DWORD *)this + 103) = v67;
  *((_QWORD *)this + 46) = off_24C336AC0;
  *((_QWORD *)this + 52) = off_24C335D90;
  if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 424), v58.__r_.__value_.__l.__data_, v58.__r_.__value_.__l.__size_);
  else
    *(std::string *)((char *)this + 424) = v58;
  *((_DWORD *)this + 112) = v59;
  *(_QWORD *)((char *)this + 452) = v60;
  *((_QWORD *)this + 52) = off_24C336AA0;
  *((_QWORD *)this + 58) = off_24C335D90;
  if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 472), v52.__r_.__value_.__l.__data_, v52.__r_.__value_.__l.__size_);
  else
    *(std::string *)((char *)this + 472) = v52;
  *((_DWORD *)this + 124) = v53;
  *(_QWORD *)((char *)this + 500) = v54;
  *((_QWORD *)this + 58) = off_24C336AA0;
  *((_QWORD *)this + 64) = off_24C335D90;
  v17 = (std::string *)((char *)this + 520);
  v18 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v17, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v18 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else
  {
    *(_OWORD *)&v17->__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 67) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
  }
  *((_DWORD *)this + 136) = v47;
  *(_QWORD *)((char *)this + 548) = v48;
  *((_QWORD *)this + 64) = off_24C336AA0;
  v45 = off_24C335D90;
  if (v18 < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (v44 < 0)
    operator delete(v43[0]);
  v51 = off_24C335D90;
  if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v52.__r_.__value_.__l.__data_);
  if (v50 < 0)
    operator delete(v49[0]);
  v57 = off_24C335D90;
  if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v58.__r_.__value_.__l.__data_);
  if (v56 < 0)
    operator delete(v55[0]);
  v63 = off_24C335D90;
  if (SHIBYTE(v64.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v64.__r_.__value_.__l.__data_);
  if (v62 < 0)
    operator delete(v61[0]);
  v70 = off_24C335D90;
  if (SHIBYTE(v71.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v71.__r_.__value_.__l.__data_);
  if (v69 < 0)
    operator delete(v68[0]);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__s.__r_.__value_.__l.__data_);
  *(_QWORD *)this = off_24C339D50;
  std::string::basic_string[abi:ne180100]<0>(&__str, "UNIQUE (entity_pid, revision_type)");
  std::string::operator=((std::string *)((char *)this + 56), &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  return this;
}

void sub_20A860180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *__p,uint64_t a43,int a44,__int16 a45,char a46,char a47,uint64_t a48,uint64_t a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55,uint64_t a56,void *a57,uint64_t a58,int a59,__int16 a60,char a61,char a62,uint64_t a63)
{
  void *a65;
  char a70;
  void *a72;
  char a73;
  void *a74;
  char a75;
  void *a76;
  char a77;
  void *a78;
  uint64_t v78;
  void **v79;
  void **v80;
  void **v81;
  void **v82;
  uint64_t v83;

  *(_QWORD *)(v78 + 464) = v83;
  if (*(char *)(v78 + 495) < 0)
    operator delete(*v82);
  *(_QWORD *)(v78 + 416) = v83;
  if (*(char *)(v78 + 447) < 0)
    operator delete(*v81);
  *(_QWORD *)(v78 + 368) = v83;
  if (*(char *)(v78 + 399) < 0)
    operator delete(*v80);
  *(_QWORD *)(v78 + 320) = v83;
  if (*(char *)(v78 + 351) < 0)
    operator delete(*v79);
  mediaplatform::DatabaseTable<int,long long,int,int,int>::~DatabaseTable((mediaplatform::DatabaseTableBase *)v78);
  if (a47 < 0)
    operator delete(__p);
  if (a40 < 0)
    operator delete(a35);
  if (a62 < 0)
    operator delete(a57);
  if (a55 < 0)
    operator delete(a50);
  if (a73 < 0)
    operator delete(a72);
  if (a70 < 0)
    operator delete(a65);
  if (a77 < 0)
    operator delete(a76);
  if (a75 < 0)
    operator delete(a74);
  STACK[0x208] = (unint64_t)off_24C335D90;
  if (SLOBYTE(STACK[0x227]) < 0)
    operator delete((void *)STACK[0x210]);
  if (SLOBYTE(STACK[0x207]) < 0)
    operator delete(a78);
  if (SLOBYTE(STACK[0x24F]) < 0)
    operator delete((void *)STACK[0x238]);
  _Unwind_Resume(a1);
}

void sub_20A860510()
{
  JUMPOUT(0x20A860320);
}

void sub_20A860518()
{
  JUMPOUT(0x20A860330);
}

void sub_20A860520()
{
  JUMPOUT(0x20A860340);
}

void sub_20A860528()
{
  JUMPOUT(0x20A860350);
}

void sub_20A860530()
{
  JUMPOUT(0x20A860360);
}

void sub_20A860538()
{
  JUMPOUT(0x20A860370);
}

void sub_20A860540()
{
  JUMPOUT(0x20A860380);
}

void sub_20A860548()
{
  JUMPOUT(0x20A860390);
}

void sub_20A860550()
{
  JUMPOUT(0x20A8603A0);
}

void sub_20A860558()
{
  JUMPOUT(0x20A8603BCLL);
}

void sub_20A860560()
{
  JUMPOUT(0x20A8603CCLL);
}

void sub_20A860568()
{
  JUMPOUT(0x20A8603DCLL);
}

void sub_20A860570()
{
  JUMPOUT(0x20A8603ECLL);
}

void sub_20A860578()
{
  JUMPOUT(0x20A8603FCLL);
}

void sub_20A860580()
{
  JUMPOUT(0x20A86040CLL);
}

void sub_20A860588()
{
  JUMPOUT(0x20A86041CLL);
}

void sub_20A860590(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  mediaplatform::DatabaseTableBase *v37;

  if (a37 < 0)
    operator delete(__p);
  mlcore::MediaTable<int,long long,int,int,int>::~MediaTable(v37);
  JUMPOUT(0x20A860508);
}

void sub_20A8605B8()
{
  JUMPOUT(0x20A860438);
}

void sub_20A8605C0()
{
  JUMPOUT(0x20A860448);
}

void sub_20A8605C8()
{
  JUMPOUT(0x20A860464);
}

void sub_20A8605D0()
{
  JUMPOUT(0x20A860474);
}

void sub_20A8605D8()
{
  JUMPOUT(0x20A860490);
}

void sub_20A8605E0()
{
  JUMPOUT(0x20A8604A0);
}

void sub_20A8605E8()
{
  JUMPOUT(0x20A8604BCLL);
}

void sub_20A8605F0()
{
  JUMPOUT(0x20A8604CCLL);
}

void sub_20A8605F8()
{
  JUMPOUT(0x20A8604E8);
}

void sub_20A860600()
{
  JUMPOUT(0x20A8604F8);
}

void mlcore::MediaTable<int,long long,int,int,int>::~MediaTable(mediaplatform::DatabaseTableBase *this)
{
  *(_QWORD *)this = off_24C335FA8;
  *((_QWORD *)this + 64) = off_24C335D90;
  if (*((char *)this + 543) < 0)
    operator delete(*((void **)this + 65));
  *((_QWORD *)this + 58) = off_24C335D90;
  if (*((char *)this + 495) < 0)
    operator delete(*((void **)this + 59));
  *((_QWORD *)this + 52) = off_24C335D90;
  if (*((char *)this + 447) < 0)
    operator delete(*((void **)this + 53));
  *((_QWORD *)this + 46) = off_24C335D90;
  if (*((char *)this + 399) < 0)
    operator delete(*((void **)this + 47));
  *((_QWORD *)this + 40) = off_24C335D90;
  if (*((char *)this + 351) < 0)
    operator delete(*((void **)this + 41));
  mediaplatform::DatabaseTable<int,long long,int,int,int>::~DatabaseTable(this);
}

{
  *(_QWORD *)this = off_24C335FA8;
  *((_QWORD *)this + 64) = off_24C335D90;
  if (*((char *)this + 543) < 0)
    operator delete(*((void **)this + 65));
  *((_QWORD *)this + 58) = off_24C335D90;
  if (*((char *)this + 495) < 0)
    operator delete(*((void **)this + 59));
  *((_QWORD *)this + 52) = off_24C335D90;
  if (*((char *)this + 447) < 0)
    operator delete(*((void **)this + 53));
  *((_QWORD *)this + 46) = off_24C335D90;
  if (*((char *)this + 399) < 0)
    operator delete(*((void **)this + 47));
  *((_QWORD *)this + 40) = off_24C335D90;
  if (*((char *)this + 351) < 0)
    operator delete(*((void **)this + 41));
  mediaplatform::DatabaseTable<int,long long,int,int,int>::~DatabaseTable(this);
}

{
  *(_QWORD *)this = off_24C335FA8;
  *((_QWORD *)this + 64) = off_24C335D90;
  if (*((char *)this + 543) < 0)
    operator delete(*((void **)this + 65));
  *((_QWORD *)this + 58) = off_24C335D90;
  if (*((char *)this + 495) < 0)
    operator delete(*((void **)this + 59));
  *((_QWORD *)this + 52) = off_24C335D90;
  if (*((char *)this + 447) < 0)
    operator delete(*((void **)this + 53));
  *((_QWORD *)this + 46) = off_24C335D90;
  if (*((char *)this + 399) < 0)
    operator delete(*((void **)this + 47));
  *((_QWORD *)this + 40) = off_24C335D90;
  if (*((char *)this + 351) < 0)
    operator delete(*((void **)this + 41));
  mediaplatform::DatabaseTable<int,long long,int,int,int>::~DatabaseTable(this);
  JUMPOUT(0x20BD27AFCLL);
}

void mediaplatform::DatabaseTable<int,long long,int,int,int>::~DatabaseTable(mediaplatform::DatabaseTableBase *this)
{
  *(_QWORD *)this = &off_24C335440;
  *((_QWORD *)this + 34) = off_24C335D90;
  if (*((char *)this + 303) < 0)
    operator delete(*((void **)this + 35));
  *((_QWORD *)this + 28) = off_24C335D90;
  if (*((char *)this + 255) < 0)
    operator delete(*((void **)this + 29));
  *((_QWORD *)this + 22) = off_24C335D90;
  if (*((char *)this + 207) < 0)
    operator delete(*((void **)this + 23));
  *((_QWORD *)this + 16) = off_24C335D90;
  if (*((char *)this + 159) < 0)
    operator delete(*((void **)this + 17));
  *((_QWORD *)this + 10) = off_24C335D90;
  if (*((char *)this + 111) < 0)
    operator delete(*((void **)this + 11));
  if (*((char *)this + 79) < 0)
    operator delete(*((void **)this + 7));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)this);
}

void mediaplatform::DatabaseTable<int,long long,int,int,int>::~DatabaseTable(mediaplatform::DatabaseTableBase *a1)
{
  mediaplatform::DatabaseTable<int,long long,int,int,int>::~DatabaseTable(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mediaplatform::DatabaseTable<int,long long,int,int,int>::columnCount()
{
  return 5;
}

void mediaplatform::DatabaseTable<int,long long,int,int,int>::columnNames(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 272);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 224);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 176);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 128);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 80);
}

void sub_20A8607E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void mediaplatform::DatabaseTable<int,long long,int,int,int>::targetColumnExpression(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __int128 *v3;
  __int128 *v4[3];
  __int128 **v5;

  v3 = (__int128 *)(a1 + 8);
  (*(void (**)(__int128 **__return_ptr))(*(_QWORD *)a1 + 24))(v4);
  std::allocate_shared[abi:ne180100]<mediaplatform::SQLColumnNameExpression,std::allocator<mediaplatform::SQLColumnNameExpression>,std::string &,std::string const&,void>(a2, v4[0], v3);
  v5 = v4;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v5);
}

void sub_20A86085C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void mlcore::EntityRevisionTable::~EntityRevisionTable(mlcore::EntityRevisionTable *this)
{
  *(_QWORD *)this = off_24C335FA8;
  *((_QWORD *)this + 64) = off_24C335D90;
  if (*((char *)this + 543) < 0)
    operator delete(*((void **)this + 65));
  *((_QWORD *)this + 58) = off_24C335D90;
  if (*((char *)this + 495) < 0)
    operator delete(*((void **)this + 59));
  *((_QWORD *)this + 52) = off_24C335D90;
  if (*((char *)this + 447) < 0)
    operator delete(*((void **)this + 53));
  *((_QWORD *)this + 46) = off_24C335D90;
  if (*((char *)this + 399) < 0)
    operator delete(*((void **)this + 47));
  *((_QWORD *)this + 40) = off_24C335D90;
  if (*((char *)this + 351) < 0)
    operator delete(*((void **)this + 41));
  mediaplatform::DatabaseTable<int,long long,int,int,int>::~DatabaseTable(this);
}

{
  *(_QWORD *)this = off_24C335FA8;
  *((_QWORD *)this + 64) = off_24C335D90;
  if (*((char *)this + 543) < 0)
    operator delete(*((void **)this + 65));
  *((_QWORD *)this + 58) = off_24C335D90;
  if (*((char *)this + 495) < 0)
    operator delete(*((void **)this + 59));
  *((_QWORD *)this + 52) = off_24C335D90;
  if (*((char *)this + 447) < 0)
    operator delete(*((void **)this + 53));
  *((_QWORD *)this + 46) = off_24C335D90;
  if (*((char *)this + 399) < 0)
    operator delete(*((void **)this + 47));
  *((_QWORD *)this + 40) = off_24C335D90;
  if (*((char *)this + 351) < 0)
    operator delete(*((void **)this + 41));
  mediaplatform::DatabaseTable<int,long long,int,int,int>::~DatabaseTable(this);
  JUMPOUT(0x20BD27AFCLL);
}

void mlcore::EntityRevisionTable::revisionColumn(mlcore::EntityRevisionTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 351) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 41), *((_QWORD *)this + 42));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 328);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 43);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 88);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 356);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::EntityRevisionTable::persistentIDColumn(mlcore::EntityRevisionTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 399) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 47), *((_QWORD *)this + 48));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 376);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 49);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 100);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 103);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 404);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::EntityRevisionTable::deletedColumn(mlcore::EntityRevisionTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 447) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 53), *((_QWORD *)this + 54));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 424);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 55);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 112);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 452);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::EntityRevisionTable::classColumn(mlcore::EntityRevisionTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 495) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 59), *((_QWORD *)this + 60));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 472);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 61);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 124);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 500);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::EntityRevisionTable::revisionType(mlcore::EntityRevisionTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 543) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 65), *((_QWORD *)this + 66));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 520);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 67);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 136);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 548);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::TVSeason::~TVSeason(mlcore::TVSeason *this)
{
  *(_QWORD *)this = off_24C33A860;
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase((_QWORD *)this + 1);
}

{
  *(_QWORD *)this = off_24C33A860;
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase((_QWORD *)this + 1);
  JUMPOUT(0x20BD27AFCLL);
}

{
  *(_QWORD *)this = off_24C33A860;
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase((_QWORD *)this + 1);
}

double std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::TypedEntityClass<mlcore::TVSeason>::sharedPointer(void)::{lambda(void)#1} &&>>()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_QWORD *)(v0 + 96) = 0;
  *(_DWORD *)(v0 + 104) = 1065353216;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_DWORD *)(v0 + 144) = 1065353216;
  *(_QWORD *)v0 = &off_24C3394D0;
  *(_QWORD *)(v0 + 8) = 850045863;
  mlcore::TypedEntityClass<mlcore::TVSeason>::sharedPointer(void)::__sharedPointer = v0;
  return result;
}

void mlcore::TypedEntityClass<mlcore::TVSeason>::~TypedEntityClass(mlcore::EntityClass *a1)
{
  mlcore::EntityClass::~EntityClass(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mlcore::TypedEntityClass<mlcore::TVSeason>::description(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1);
}

__n128 mlcore::TypedEntityClass<mlcore::TVSeason>::create@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, __n128 *a4@<X8>)
{
  char *v8;
  uint64_t v9;
  unint64_t *v10;
  uint64_t v11;
  __n128 result;
  __n128 v13;
  unint64_t v14[3];
  unint64_t *v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v8 = (char *)operator new(0x100uLL);
  *((_QWORD *)v8 + 1) = 0;
  *((_QWORD *)v8 + 2) = 0;
  *(_QWORD *)v8 = &off_24C33D5F8;
  *(_OWORD *)(v8 + 40) = 0u;
  *(_OWORD *)(v8 + 56) = 0u;
  *((_DWORD *)v8 + 18) = 1065353216;
  *((_OWORD *)v8 + 5) = 0u;
  *((_OWORD *)v8 + 6) = 0u;
  *((_DWORD *)v8 + 28) = 1065353216;
  *(_OWORD *)(v8 + 120) = 0u;
  *(_OWORD *)(v8 + 136) = 0u;
  *((_DWORD *)v8 + 38) = 1065353216;
  *((_OWORD *)v8 + 10) = 0u;
  *((_OWORD *)v8 + 11) = 0u;
  *((_DWORD *)v8 + 48) = 1065353216;
  *(_OWORD *)(v8 + 216) = 0u;
  *((_DWORD *)v8 + 58) = 1065353216;
  *((_QWORD *)v8 + 30) = &unk_24C3371E8;
  *((_QWORD *)v8 + 31) = a2;
  *(_OWORD *)(v8 + 200) = 0u;
  v9 = (uint64_t)(v8 + 200);
  *((_QWORD *)v8 + 4) = &off_24C3371C0;
  *((_QWORD *)v8 + 3) = &off_24C33AB98;
  v13.n128_u64[0] = (unint64_t)(v8 + 24);
  v13.n128_u64[1] = (unint64_t)v8;
  v14[0] = (unint64_t)&off_24C33B140;
  v15 = v14;
  mlcore::PropertyCache::mergePropertiesFromCache((uint64_t)(v8 + 32), a3, (uint64_t)v14);
  v10 = v15;
  if (v15 == v14)
  {
    v11 = 4;
    v10 = v14;
    goto LABEL_5;
  }
  if (v15)
  {
    v11 = 5;
LABEL_5:
    (*(void (**)(void))(*v10 + 8 * v11))();
  }
  v14[0] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 112))(a1);
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>(v9, v14[0], v14)[3] = a2;
  result = v13;
  *a4 = v13;
  return result;
}

void sub_20A860FE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char *a15)
{
  char *v15;
  char *v17;
  uint64_t v18;

  v17 = a15;
  if (a15 == v15)
  {
    v18 = 4;
    v17 = &a12;
  }
  else
  {
    if (!a15)
      goto LABEL_6;
    v18 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v17 + 8 * v18))();
LABEL_6:
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t mlcore::TypedEntityClass<mlcore::TVSeason>::name(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
}

BOOL mlcore::TypedEntityClass<mlcore::TVSeason>::isRevisionTrackable(uint64_t a1)
{
  return (*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 64))(a1) != -1;
}

uint64_t mlcore::TypedEntityClass<mlcore::TVSeason>::isCloudUpdatable()
{
  return 1;
}

void mlcore::TypedEntityClass<mlcore::TVSeason>::databaseTablesToDeleteFrom(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

void mlcore::TypedEntityClass<mlcore::TVSeason>::databaseTablesToInsertInto(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::TVSeason>::sectionPropertyForOrderingProperty(mlcore *a1, mlcore *a2)
{
  mlcore *HasTitle;

  HasTitle = (mlcore *)mlcore::AlbumPropertyOrder(a1);
  if (HasTitle == a2)
    return mlcore::AlbumPropertyOrderSection(HasTitle);
  HasTitle = (mlcore *)mlcore::AlbumPropertyHasTitle(HasTitle);
  if (HasTitle == a2)
    return mlcore::AlbumPropertyOrderSection(HasTitle);
  else
    return 0;
}

void std::__shared_ptr_emplace<mlcore::TVSeason>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33D5F8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mlcore::TVSeason>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33D5F8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t std::__shared_ptr_emplace<mlcore::TVSeason>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::TVSeasonPropertyEpisodeCount(void)::$_0 &&>>()
{
  uint64_t v0;
  mlcore *v1;
  mlcore *v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  std::string __p;
  __int128 v18;

  v0 = operator new();
  v1 = (mlcore *)mlcore::TypedEntityClass<mlcore::TVEpisode>::sharedPointer();
  v2 = (mlcore *)mlcore::ItemPropertyAlbumPersistentID(v1);
  v3 = mlcore::AlbumPropertyPersistentID(v2);
  v4 = operator new(0x38uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = &off_24C33D240;
  v4[4] = v2;
  v4[5] = 0;
  v4[3] = &off_24C33A5A8;
  v4[6] = v3;
  *(_QWORD *)&v18 = v4 + 3;
  *((_QWORD *)&v18 + 1) = v4;
  std::allocate_shared[abi:ne180100]<mlcore::AggregateFunctionQuery,std::allocator<mlcore::AggregateFunctionQuery>,mlcore::EntityClass *,mlcore::AggregateFunctionQuery::AggregateFunction,decltype(nullptr),std::shared_ptr<mlcore::ComparisonPropertyPredicate>,void>(&__p, (uint64_t)v1, 0, &v18);
  v5 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = 0uLL;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_QWORD *)v0 = &off_24C337228;
  *(_OWORD *)(v0 + 64) = v5;
  if (*((_QWORD *)&v5 + 1))
  {
    v6 = (unint64_t *)(*((_QWORD *)&v5 + 1) + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
    mlcore::TVSeasonPropertyEpisodeCount(void)::property = v0;
    do
      v8 = __ldaxr(v6);
    while (__stlxr(v8 - 1, v6));
    if (!v8)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v5 + 1) + 16))(*((_QWORD *)&v5 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v5 + 1));
    }
  }
  else
  {
    mlcore::TVSeasonPropertyEpisodeCount(void)::property = v0;
  }
  size = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
  if (__p.__r_.__value_.__l.__size_)
  {
    v10 = (unint64_t *)(__p.__r_.__value_.__l.__size_ + 8);
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v18 + 1);
  if (*((_QWORD *)&v18 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v15 = mlcore::TypedEntityClass<mlcore::Album>::sharedPointer();
  v16 = mlcore::TVSeasonPropertyEpisodeCount(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "episodeCount");
  mlcore::EntityClass::setPropertyForName(v15, v16, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20A8612E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::TypedEntityClass<mlcore::Album>::sharedPointer(void)::{lambda(void)#1} &&>>()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_QWORD *)(v0 + 96) = 0;
  *(_DWORD *)(v0 + 104) = 1065353216;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_DWORD *)(v0 + 144) = 1065353216;
  *(_QWORD *)v0 = &off_24C338C48;
  *(_QWORD *)(v0 + 8) = 850045863;
  mlcore::TypedEntityClass<mlcore::Album>::sharedPointer(void)::__sharedPointer = v0;
  return result;
}

void mlcore::TypedEntityClass<mlcore::Album>::~TypedEntityClass(mlcore::EntityClass *a1)
{
  mlcore::EntityClass::~EntityClass(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mlcore::TypedEntityClass<mlcore::Album>::description(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1);
}

double mlcore::TypedEntityClass<mlcore::Album>::create@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _OWORD *a4@<X8>)
{
  double v8;
  unint64_t *v9;
  uint64_t v10;
  double result;
  double v12[3];
  unint64_t v13[3];
  unint64_t *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  std::allocate_shared[abi:ne180100]<mlcore::Album,std::allocator<mlcore::Album>,long long &,void>(v12, a2);
  v8 = v12[0];
  v13[0] = (unint64_t)&off_24C33B140;
  v14 = v13;
  mlcore::PropertyCache::mergePropertiesFromCache(*(_QWORD *)&v12[0] + 8, a3, (uint64_t)v13);
  v9 = v14;
  if (v14 == v13)
  {
    v10 = 4;
    v9 = v13;
    goto LABEL_5;
  }
  if (v14)
  {
    v10 = 5;
LABEL_5:
    (*(void (**)(void))(*v9 + 8 * v10))();
  }
  v13[0] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 112))(a1);
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>(*(_QWORD *)&v8 + 176, v13[0], v13)[3] = a2;
  result = v12[0];
  *a4 = *(_OWORD *)v12;
  return result;
}

void sub_20A8614FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char *a15)
{
  char *v15;
  char *v17;
  uint64_t v18;

  v17 = a15;
  if (a15 == v15)
  {
    v18 = 4;
    v17 = &a12;
  }
  else
  {
    if (!a15)
      goto LABEL_6;
    v18 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v17 + 8 * v18))();
LABEL_6:
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

BOOL mlcore::TypedEntityClass<mlcore::Album>::isRevisionTrackable(uint64_t a1)
{
  return (*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 64))(a1) != -1;
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::TVSeasonPropertyLatestItemDateAdded(void)::$_0 &&>>()
{
  uint64_t v0;
  mlcore *v1;
  mlcore *v2;
  mlcore *v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *size;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::string __p;
  __int128 v19;

  v0 = operator new();
  v1 = (mlcore *)mlcore::TypedEntityClass<mlcore::TVEpisode>::sharedPointer();
  v2 = (mlcore *)mlcore::ItemPropertyDateAdded(v1);
  v3 = (mlcore *)mlcore::ItemPropertyAlbumPersistentID(v2);
  v4 = mlcore::AlbumPropertyPersistentID(v3);
  v5 = operator new(0x38uLL);
  v5[1] = 0;
  v5[2] = 0;
  *v5 = &off_24C33D240;
  v5[4] = v3;
  v5[5] = 0;
  v5[3] = &off_24C33A5A8;
  v5[6] = v4;
  *(_QWORD *)&v19 = v5 + 3;
  *((_QWORD *)&v19 + 1) = v5;
  std::allocate_shared[abi:ne180100]<mlcore::AggregateFunctionQuery,std::allocator<mlcore::AggregateFunctionQuery>,mlcore::EntityClass *,mlcore::AggregateFunctionQuery::AggregateFunction,mlcore::ModelProperty<long long> *,std::shared_ptr<mlcore::ComparisonPropertyPredicate>,void>(&__p, (uint64_t)v1, 2, (uint64_t)v2, &v19);
  v6 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = 0uLL;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_QWORD *)v0 = &off_24C337228;
  *(_OWORD *)(v0 + 64) = v6;
  if (*((_QWORD *)&v6 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v6 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
    mlcore::TVSeasonPropertyLatestItemDateAdded(void)::property = v0;
    do
      v9 = __ldaxr(v7);
    while (__stlxr(v9 - 1, v7));
    if (!v9)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v6 + 1) + 16))(*((_QWORD *)&v6 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v6 + 1));
    }
  }
  else
  {
    mlcore::TVSeasonPropertyLatestItemDateAdded(void)::property = v0;
  }
  size = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
  if (__p.__r_.__value_.__l.__size_)
  {
    v11 = (unint64_t *)(__p.__r_.__value_.__l.__size_ + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v19 + 1);
  if (*((_QWORD *)&v19 + 1))
  {
    v14 = (unint64_t *)(*((_QWORD *)&v19 + 1) + 8);
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  v16 = mlcore::TypedEntityClass<mlcore::Album>::sharedPointer();
  v17 = mlcore::TVSeasonPropertyLatestItemDateAdded(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "latestItemDateAdded");
  mlcore::EntityClass::setPropertyForName(v16, v17, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20A86174C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::TVSeasonPropertyLatestItemDateDownloaded(void)::$_0 &&>>()
{
  uint64_t v0;
  mlcore *v1;
  mlcore *v2;
  mlcore *v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *size;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::string __p;
  __int128 v19;

  v0 = operator new();
  v1 = (mlcore *)mlcore::TypedEntityClass<mlcore::TVEpisode>::sharedPointer();
  v2 = (mlcore *)mlcore::ItemPropertyDateDownloaded(v1);
  v3 = (mlcore *)mlcore::ItemPropertyAlbumPersistentID(v2);
  v4 = mlcore::AlbumPropertyPersistentID(v3);
  v5 = operator new(0x38uLL);
  v5[1] = 0;
  v5[2] = 0;
  *v5 = &off_24C33D240;
  v5[4] = v3;
  v5[5] = 0;
  v5[3] = &off_24C33A5A8;
  v5[6] = v4;
  *(_QWORD *)&v19 = v5 + 3;
  *((_QWORD *)&v19 + 1) = v5;
  std::allocate_shared[abi:ne180100]<mlcore::AggregateFunctionQuery,std::allocator<mlcore::AggregateFunctionQuery>,mlcore::EntityClass *,mlcore::AggregateFunctionQuery::AggregateFunction,mlcore::ModelProperty<long long> *,std::shared_ptr<mlcore::ComparisonPropertyPredicate>,void>(&__p, (uint64_t)v1, 2, (uint64_t)v2, &v19);
  v6 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = 0uLL;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_QWORD *)v0 = &off_24C337228;
  *(_OWORD *)(v0 + 64) = v6;
  if (*((_QWORD *)&v6 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v6 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
    mlcore::TVSeasonPropertyLatestItemDateDownloaded(void)::property = v0;
    do
      v9 = __ldaxr(v7);
    while (__stlxr(v9 - 1, v7));
    if (!v9)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v6 + 1) + 16))(*((_QWORD *)&v6 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v6 + 1));
    }
  }
  else
  {
    mlcore::TVSeasonPropertyLatestItemDateDownloaded(void)::property = v0;
  }
  size = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
  if (__p.__r_.__value_.__l.__size_)
  {
    v11 = (unint64_t *)(__p.__r_.__value_.__l.__size_ + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v19 + 1);
  if (*((_QWORD *)&v19 + 1))
  {
    v14 = (unint64_t *)(*((_QWORD *)&v19 + 1) + 8);
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  v16 = mlcore::TypedEntityClass<mlcore::Album>::sharedPointer();
  v17 = mlcore::TVSeasonPropertyLatestItemDateDownloaded(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "dateDownloaded");
  mlcore::EntityClass::setPropertyForName(v16, v17, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20A8619B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double mlcore::TVSeason::TVSeason(mlcore::TVSeason *this, uint64_t a2)
{
  double result;

  result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 12) = 1065353216;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_DWORD *)this + 22) = 1065353216;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_DWORD *)this + 32) = 1065353216;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_DWORD *)this + 42) = 1065353216;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_DWORD *)this + 52) = 1065353216;
  *((_QWORD *)this + 27) = &unk_24C3371E8;
  *((_QWORD *)this + 28) = a2;
  *(_QWORD *)this = &off_24C33AB98;
  *((_QWORD *)this + 1) = &off_24C3371C0;
  return result;
}

{
  double result;

  result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 12) = 1065353216;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_DWORD *)this + 22) = 1065353216;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_DWORD *)this + 32) = 1065353216;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_DWORD *)this + 42) = 1065353216;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_DWORD *)this + 52) = 1065353216;
  *((_QWORD *)this + 27) = &unk_24C3371E8;
  *((_QWORD *)this + 28) = a2;
  *(_QWORD *)this = &off_24C33AB98;
  *((_QWORD *)this + 1) = &off_24C3371C0;
  return result;
}

void mlcore::Section::localizedTitle(mlcore::Section *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 23) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *(const std::string::value_type **)this, *((_QWORD *)this + 1));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)this;
    a2->__r_.__value_.__r.__words[2] = *((_QWORD *)this + 2);
  }
}

uint64_t mlcore::Section::sectionIndex(mlcore::Section *this)
{
  return *((unsigned int *)this + 10);
}

void mlcore::ArtworkToken::~ArtworkToken(mlcore::ArtworkToken *this)
{
  *(_QWORD *)this = off_24C33A860;
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase((_QWORD *)this + 1);
}

{
  *(_QWORD *)this = off_24C33A860;
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase((_QWORD *)this + 1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mlcore::TypedEntityClass<mlcore::ArtworkToken>::sharedPointer()
{
  unint64_t v0;
  char v2;
  char **v3;
  char *v4;

  v0 = atomic_load(&mlcore::TypedEntityClass<mlcore::ArtworkToken>::sharedPointer(void)::__once);
  if (v0 != -1)
  {
    v4 = &v2;
    v3 = &v4;
    std::__call_once(&mlcore::TypedEntityClass<mlcore::ArtworkToken>::sharedPointer(void)::__once, &v3, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::TypedEntityClass<mlcore::ArtworkToken>::sharedPointer(void)::{lambda(void)#1} &&>>);
  }
  return mlcore::TypedEntityClass<mlcore::ArtworkToken>::sharedPointer(void)::__sharedPointer;
}

double std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::TypedEntityClass<mlcore::ArtworkToken>::sharedPointer(void)::{lambda(void)#1} &&>>()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_QWORD *)(v0 + 96) = 0;
  *(_DWORD *)(v0 + 104) = 1065353216;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_DWORD *)(v0 + 144) = 1065353216;
  *(_QWORD *)v0 = &off_24C3383C0;
  *(_QWORD *)(v0 + 8) = 850045863;
  mlcore::TypedEntityClass<mlcore::ArtworkToken>::sharedPointer(void)::__sharedPointer = v0;
  return result;
}

void mlcore::TypedEntityClass<mlcore::ArtworkToken>::~TypedEntityClass(mlcore::EntityClass *a1)
{
  mlcore::EntityClass::~EntityClass(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mlcore::TypedEntityClass<mlcore::ArtworkToken>::description(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1);
}

__n128 mlcore::TypedEntityClass<mlcore::ArtworkToken>::create@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, __n128 *a4@<X8>)
{
  char *v8;
  uint64_t v9;
  unint64_t *v10;
  uint64_t v11;
  __n128 result;
  __n128 v13;
  unint64_t v14[3];
  unint64_t *v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v8 = (char *)operator new(0x100uLL);
  *((_QWORD *)v8 + 1) = 0;
  *((_QWORD *)v8 + 2) = 0;
  *(_QWORD *)v8 = &off_24C33C520;
  *(_OWORD *)(v8 + 40) = 0u;
  *(_OWORD *)(v8 + 56) = 0u;
  *((_DWORD *)v8 + 18) = 1065353216;
  *((_OWORD *)v8 + 5) = 0u;
  *((_OWORD *)v8 + 6) = 0u;
  *((_DWORD *)v8 + 28) = 1065353216;
  *(_OWORD *)(v8 + 120) = 0u;
  *(_OWORD *)(v8 + 136) = 0u;
  *((_DWORD *)v8 + 38) = 1065353216;
  *((_OWORD *)v8 + 10) = 0u;
  *((_OWORD *)v8 + 11) = 0u;
  *((_DWORD *)v8 + 48) = 1065353216;
  *(_OWORD *)(v8 + 216) = 0u;
  *((_DWORD *)v8 + 58) = 1065353216;
  *((_QWORD *)v8 + 30) = &unk_24C3371E8;
  *((_QWORD *)v8 + 31) = a2;
  *(_OWORD *)(v8 + 200) = 0u;
  v9 = (uint64_t)(v8 + 200);
  *((_QWORD *)v8 + 4) = &off_24C3371C0;
  *((_QWORD *)v8 + 3) = &off_24C336CD0;
  v13.n128_u64[0] = (unint64_t)(v8 + 24);
  v13.n128_u64[1] = (unint64_t)v8;
  v14[0] = (unint64_t)&off_24C33B140;
  v15 = v14;
  mlcore::PropertyCache::mergePropertiesFromCache((uint64_t)(v8 + 32), a3, (uint64_t)v14);
  v10 = v15;
  if (v15 == v14)
  {
    v11 = 4;
    v10 = v14;
    goto LABEL_5;
  }
  if (v15)
  {
    v11 = 5;
LABEL_5:
    (*(void (**)(void))(*v10 + 8 * v11))();
  }
  v14[0] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 112))(a1);
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>(v9, v14[0], v14)[3] = a2;
  result = v13;
  *a4 = v13;
  return result;
}

void sub_20A861E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char *a15)
{
  char *v15;
  char *v17;
  uint64_t v18;

  v17 = a15;
  if (a15 == v15)
  {
    v18 = 4;
    v17 = &a12;
  }
  else
  {
    if (!a15)
      goto LABEL_6;
    v18 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v17 + 8 * v18))();
LABEL_6:
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t mlcore::TypedEntityClass<mlcore::ArtworkToken>::name(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
}

uint64_t mlcore::TypedEntityClass<mlcore::ArtworkToken>::entityType()
{
  return 0xFFFFFFFFLL;
}

BOOL mlcore::TypedEntityClass<mlcore::ArtworkToken>::isRevisionTrackable(uint64_t a1)
{
  return (*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 64))(a1) != -1;
}

uint64_t mlcore::TypedEntityClass<mlcore::ArtworkToken>::isCloudUpdatable()
{
  return 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::ArtworkToken>::databaseTable()
{
  return *(_QWORD *)mediaplatform::Singleton<mlcore::ArtworkTokenTable>::sharedInstance();
}

void mlcore::TypedEntityClass<mlcore::ArtworkToken>::databaseTablesToDeleteFrom(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

void mlcore::TypedEntityClass<mlcore::ArtworkToken>::databaseTablesToInsertInto(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::ArtworkToken>::persistentIDProperty()
{
  return 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::ArtworkToken>::representativeItemPersistentIDProperty()
{
  return 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::ArtworkToken>::trackForeignPersistentIDProperty()
{
  return 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::ArtworkToken>::trackForeignOrderingProperty()
{
  return 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::ArtworkToken>::sectionPropertyForOrderingProperty()
{
  return 0;
}

uint64_t mediaplatform::Singleton<mlcore::ArtworkTokenTable>::sharedInstance()
{
  unsigned __int8 v0;
  mlcore::ArtworkTokenTable **v2;

  if ((v0 & 1) == 0
  {
    v2 = (mlcore::ArtworkTokenTable **)operator new();
    _ZNSt3__115allocate_sharedB8ne180100IN6mlcore17ArtworkTokenTableENS_9allocatorIS2_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(v2);
    mediaplatform::Singleton<mlcore::ArtworkTokenTable>::sharedInstance(void)::_sharedInstance = (uint64_t)v2;
  }
  return mediaplatform::Singleton<mlcore::ArtworkTokenTable>::sharedInstance(void)::_sharedInstance;
}

void sub_20A861FE0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD27AFC](v1, 0x20C40A4A59CD2);
  _Unwind_Resume(a1);
}

mlcore::ArtworkTokenTable *_ZNSt3__115allocate_sharedB8ne180100IN6mlcore17ArtworkTokenTableENS_9allocatorIS2_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(mlcore::ArtworkTokenTable **a1)
{
  _QWORD *v2;
  mlcore::ArtworkTokenTable *result;

  v2 = operator new(0x268uLL);
  v2[1] = 0;
  v2[2] = 0;
  *v2 = &off_24C33CC58;
  result = mlcore::ArtworkTokenTable::ArtworkTokenTable((mlcore::ArtworkTokenTable *)(v2 + 3));
  *a1 = result;
  a1[1] = (mlcore::ArtworkTokenTable *)v2;
  return result;
}

void sub_20A862058(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<mlcore::ArtworkTokenTable>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33CC58;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mlcore::ArtworkTokenTable>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33CC58;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t std::__shared_ptr_emplace<mlcore::ArtworkTokenTable>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void std::__shared_ptr_emplace<mlcore::ArtworkToken>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33C520;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mlcore::ArtworkToken>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33C520;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t std::__shared_ptr_emplace<mlcore::ArtworkToken>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t mlcore::ArtworkTokenPropertyToken(mlcore *this)
{
  unint64_t v1;
  char v3;
  char **v4;
  char *v5;

  v1 = atomic_load(&mlcore::ArtworkTokenPropertyToken(void)::once);
  if (v1 != -1)
  {
    v5 = &v3;
    v4 = &v5;
    std::__call_once(&mlcore::ArtworkTokenPropertyToken(void)::once, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::ArtworkTokenPropertyToken(void)::$_0 &&>>);
  }
  return mlcore::ArtworkTokenPropertyToken(void)::property;
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::ArtworkTokenPropertyToken(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::ArtworkTokenTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __str;
  _QWORD v23[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::ArtworkTokenTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v23[0] = *v1;
  v23[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::ArtworkTokenTable **)mediaplatform::Singleton<mlcore::ArtworkTokenTable>::sharedInstance();
  mlcore::ArtworkTokenTable::artworkTokenColumn(*v5, (uint64_t)&__str);
  mlcore::DatabaseModelProperty<std::string>::DatabaseModelProperty(v0, v23, (uint64_t)&__str);
  mlcore::ArtworkTokenPropertyToken(void)::property = v0;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&__str);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::ArtworkTokenPropertyToken(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__str, "");
  std::string::operator=((std::string *)(v8 + 40), &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::ArtworkToken>::sharedPointer();
  v10 = mlcore::ArtworkTokenPropertyToken(void)::property;
  v11 = mediaplatform::Singleton<mlcore::ArtworkTokenTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "token");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __str.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A862338(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t mlcore::ArtworkTokenPropertySourceType(mlcore *this)
{
  unint64_t v1;
  char v3;
  char **v4;
  char *v5;

  v1 = atomic_load(&mlcore::ArtworkTokenPropertySourceType(void)::once);
  if (v1 != -1)
  {
    v5 = &v3;
    v4 = &v5;
    std::__call_once(&mlcore::ArtworkTokenPropertySourceType(void)::once, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::ArtworkTokenPropertySourceType(void)::$_0 &&>>);
  }
  return mlcore::ArtworkTokenPropertySourceType(void)::property;
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::ArtworkTokenPropertySourceType(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::ArtworkTokenTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __p;
  char v23;
  _QWORD v24[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::ArtworkTokenTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v24[0] = *v1;
  v24[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::ArtworkTokenTable **)mediaplatform::Singleton<mlcore::ArtworkTokenTable>::sharedInstance();
  mlcore::ArtworkTokenTable::artworkSourceTypeColumn(*v5, (uint64_t)&__p);
  mlcore::DatabaseModelProperty<int>::DatabaseModelProperty(v0, v24, (uint64_t)&__p);
  mlcore::ArtworkTokenPropertySourceType(void)::property = v0;
  if (v23 < 0)
    operator delete((void *)__p.__r_.__value_.__l.__size_);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::ArtworkTokenPropertySourceType(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  std::string::operator=((std::string *)(v8 + 40), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::ArtworkToken>::sharedPointer();
  v10 = mlcore::ArtworkTokenPropertySourceType(void)::property;
  v11 = mediaplatform::Singleton<mlcore::ArtworkTokenTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "sourceType");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A86261C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, void *a17, int a18, __int16 a19, char a20,char a21,int a22,__int16 a23,char a24,char a25)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t mlcore::ArtworkTokenPropertyType(mlcore *this)
{
  unint64_t v1;
  char v3;
  char **v4;
  char *v5;

  v1 = atomic_load(&mlcore::ArtworkTokenPropertyType(void)::once);
  if (v1 != -1)
  {
    v5 = &v3;
    v4 = &v5;
    std::__call_once(&mlcore::ArtworkTokenPropertyType(void)::once, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::ArtworkTokenPropertyType(void)::$_0 &&>>);
  }
  return mlcore::ArtworkTokenPropertyType(void)::property;
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::ArtworkTokenPropertyType(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::ArtworkTokenTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __p;
  char v23;
  _QWORD v24[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::ArtworkTokenTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v24[0] = *v1;
  v24[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::ArtworkTokenTable **)mediaplatform::Singleton<mlcore::ArtworkTokenTable>::sharedInstance();
  mlcore::ArtworkTokenTable::artworkTypeColumn(*v5, (uint64_t)&__p);
  mlcore::DatabaseModelProperty<int>::DatabaseModelProperty(v0, v24, (uint64_t)&__p);
  mlcore::ArtworkTokenPropertyType(void)::property = v0;
  if (v23 < 0)
    operator delete((void *)__p.__r_.__value_.__l.__size_);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::ArtworkTokenPropertyType(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  std::string::operator=((std::string *)(v8 + 40), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::ArtworkToken>::sharedPointer();
  v10 = mlcore::ArtworkTokenPropertyType(void)::property;
  v11 = mediaplatform::Singleton<mlcore::ArtworkTokenTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "type");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A862908(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, void *a17, int a18, __int16 a19, char a20,char a21,int a22,__int16 a23,char a24,char a25)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t mlcore::ArtworkTokenPropertyEntityPersistentID(mlcore *this)
{
  unint64_t v1;
  char v3;
  char **v4;
  char *v5;

  v1 = atomic_load(&mlcore::ArtworkTokenPropertyEntityPersistentID(void)::once);
  if (v1 != -1)
  {
    v5 = &v3;
    v4 = &v5;
    std::__call_once(&mlcore::ArtworkTokenPropertyEntityPersistentID(void)::once, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::ArtworkTokenPropertyEntityPersistentID(void)::$_0 &&>>);
  }
  return mlcore::ArtworkTokenPropertyEntityPersistentID(void)::property;
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::ArtworkTokenPropertyEntityPersistentID(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::ArtworkTokenTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __p;
  char v23;
  _QWORD v24[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::ArtworkTokenTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v24[0] = *v1;
  v24[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::ArtworkTokenTable **)mediaplatform::Singleton<mlcore::ArtworkTokenTable>::sharedInstance();
  mlcore::ArtworkTokenTable::entityPersistentIDColumn(*v5, (uint64_t)&__p);
  mlcore::DatabaseModelProperty<long long>::DatabaseModelProperty(v0, v24, (uint64_t)&__p);
  mlcore::ArtworkTokenPropertyEntityPersistentID(void)::property = v0;
  if (v23 < 0)
    operator delete((void *)__p.__r_.__value_.__l.__size_);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::ArtworkTokenPropertyEntityPersistentID(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  std::string::operator=((std::string *)(v8 + 40), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::ArtworkToken>::sharedPointer();
  v10 = mlcore::ArtworkTokenPropertyEntityPersistentID(void)::property;
  v11 = mediaplatform::Singleton<mlcore::ArtworkTokenTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "entityPersistentID");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A862BF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, void *a17, int a18, __int16 a19, char a20,char a21,int a22,__int16 a23,char a24,char a25)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t mlcore::ArtworkTokenPropertyEntityType(mlcore *this)
{
  unint64_t v1;
  char v3;
  char **v4;
  char *v5;

  v1 = atomic_load(&mlcore::ArtworkTokenPropertyEntityType(void)::once);
  if (v1 != -1)
  {
    v5 = &v3;
    v4 = &v5;
    std::__call_once(&mlcore::ArtworkTokenPropertyEntityType(void)::once, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::ArtworkTokenPropertyEntityType(void)::$_0 &&>>);
  }
  return mlcore::ArtworkTokenPropertyEntityType(void)::property;
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::ArtworkTokenPropertyEntityType(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::ArtworkTokenTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __p;
  char v23;
  _QWORD v24[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::ArtworkTokenTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v24[0] = *v1;
  v24[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::ArtworkTokenTable **)mediaplatform::Singleton<mlcore::ArtworkTokenTable>::sharedInstance();
  mlcore::ArtworkTokenTable::entityTypeColumn(*v5, (uint64_t)&__p);
  mlcore::DatabaseModelProperty<int>::DatabaseModelProperty(v0, v24, (uint64_t)&__p);
  mlcore::ArtworkTokenPropertyEntityType(void)::property = v0;
  if (v23 < 0)
    operator delete((void *)__p.__r_.__value_.__l.__size_);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::ArtworkTokenPropertyEntityType(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  std::string::operator=((std::string *)(v8 + 40), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::ArtworkToken>::sharedPointer();
  v10 = mlcore::ArtworkTokenPropertyEntityType(void)::property;
  v11 = mediaplatform::Singleton<mlcore::ArtworkTokenTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "entityType");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A862EE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, void *a17, int a18, __int16 a19, char a20,char a21,int a22,__int16 a23,char a24,char a25)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void mlcore::ArtworkToken::artworkToken(mlcore::ArtworkToken *this@<X0>, std::string *a2@<X8>)
{
  unint64_t v4;

  v4 = mlcore::ArtworkTokenPropertyToken(this);
  mlcore::Entity::valueForProperty<std::string>(a2, (uint64_t)this, v4);
}

void mlcore::ArtworkToken::setArtworkToken(mlcore *a1, uint64_t a2)
{
  std::string::size_type v4;

  v4 = mlcore::ArtworkTokenPropertyToken(a1);
  mlcore::Entity::setValueForProperty<std::string>((uint64_t)a1, a2, v4);
}

uint64_t mlcore::ArtworkToken::artworkSourceType(mlcore::ArtworkToken *this)
{
  unint64_t v2;

  v2 = mlcore::ArtworkTokenPropertySourceType(this);
  return mlcore::Entity::valueForProperty<int>((uint64_t)this, v2);
}

_QWORD *mlcore::ArtworkToken::setArtworkSourceType(mlcore *a1, int a2)
{
  _QWORD *result;
  unint64_t v5;

  v5 = mlcore::ArtworkTokenPropertySourceType(a1);
  result = std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::__emplace_unique_key_args<mlcore::ModelProperty<int> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<int> * const&>,std::tuple<>>((uint64_t)a1 + 136, v5, &v5);
  *((_DWORD *)result + 6) = a2;
  return result;
}

uint64_t mlcore::ArtworkToken::artworkType(mlcore::ArtworkToken *this)
{
  unint64_t v2;

  v2 = mlcore::ArtworkTokenPropertyType(this);
  return mlcore::Entity::valueForProperty<int>((uint64_t)this, v2);
}

_QWORD *mlcore::ArtworkToken::setArtworkType(mlcore *a1, int a2)
{
  _QWORD *result;
  unint64_t v5;

  v5 = mlcore::ArtworkTokenPropertyType(a1);
  result = std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::__emplace_unique_key_args<mlcore::ModelProperty<int> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<int> * const&>,std::tuple<>>((uint64_t)a1 + 136, v5, &v5);
  *((_DWORD *)result + 6) = a2;
  return result;
}

uint64_t mlcore::ArtworkToken::entityPersistentID(mlcore::ArtworkToken *this)
{
  unint64_t v2;

  v2 = mlcore::ArtworkTokenPropertyEntityPersistentID(this);
  return mlcore::Entity::valueForProperty<long long>((uint64_t)this, v2);
}

_QWORD *mlcore::ArtworkToken::setEntityPersistentID(mlcore::ArtworkToken *this, uint64_t a2)
{
  _QWORD *result;
  unint64_t v5;

  v5 = mlcore::ArtworkTokenPropertyEntityPersistentID(this);
  result = std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>((uint64_t)this + 176, v5, &v5);
  result[3] = a2;
  return result;
}

uint64_t mlcore::ArtworkToken::entityType(mlcore::ArtworkToken *this)
{
  unint64_t v2;

  v2 = mlcore::ArtworkTokenPropertyEntityType(this);
  return mlcore::Entity::valueForProperty<int>((uint64_t)this, v2);
}

_QWORD *mlcore::ArtworkToken::setEntityType(mlcore::ArtworkToken *this, int a2)
{
  _QWORD *result;
  unint64_t v5;

  v5 = mlcore::ArtworkTokenPropertyEntityType(this);
  result = std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::__emplace_unique_key_args<mlcore::ModelProperty<int> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<int> * const&>,std::tuple<>>((uint64_t)this + 136, v5, &v5);
  *((_DWORD *)result + 6) = a2;
  return result;
}

uint64_t mlcore::ContentRating::ContentRating(uint64_t a1, std::string *a2)
{
  std::string *v3;
  uint64_t v4;
  unint64_t v5;
  unsigned int v6;
  std::string *v7;
  std::vector<std::string>::pointer begin;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::ios_base *v12;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  std::string *v26;
  std::string *v27;
  void *__p[2];
  uint64_t v30;
  _QWORD v31[10];
  char v32;
  uint64_t v33[19];
  std::vector<std::string> v34;

  *(_OWORD *)(a1 + 48) = 0u;
  v3 = (std::string *)(a1 + 48);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  v27 = (std::string *)(a1 + 24);
  *(_OWORD *)a1 = 0u;
  v26 = (std::string *)(a1 + 48);
  std::string::basic_string[abi:ne180100]<0>(__p, "|");
  mediaplatform::ComponentsSeparatedByString(a2, (char *)__p, &v34);
  if (SHIBYTE(v30) < 0)
    operator delete(__p[0]);
  if (v34.__end_ != v34.__begin_)
  {
    v4 = 0;
    v5 = 0xAAAAAAAAAAAAAAABLL * (((char *)v34.__end_ - (char *)v34.__begin_) >> 3);
    v17 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
    v18 = *(void **)(MEMORY[0x24BEDB7F0] + 64);
    v24 = *(void **)(MEMORY[0x24BEDB7F0] + 24);
    v25 = *(void **)(MEMORY[0x24BEDB7F0] + 16);
    v22 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 40);
    v23 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 32);
    v16 = (void *)*MEMORY[0x24BEDB7F0];
    v20 = *(void **)(MEMORY[0x24BEDB7F0] + 48);
    v21 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 8);
    v6 = 1;
    v15 = MEMORY[0x24BEDB848] + 16;
    v19 = v5;
    do
    {
      v7 = v3;
      switch(v6)
      {
        case 1u:
          goto LABEL_7;
        case 2u:
          v7 = v27;
LABEL_7:
          std::string::operator=(v7, &v34.__begin_[v4]);
          break;
        case 3u:
          begin = v34.__begin_;
          v9 = MEMORY[0x24BEDB858];
          v10 = MEMORY[0x24BEDB858] + 104;
          v33[0] = MEMORY[0x24BEDB858] + 104;
          v11 = MEMORY[0x24BEDB858] + 64;
          v30 = MEMORY[0x24BEDB858] + 64;
          __p[0] = v25;
          *(void **)((char *)__p + *((_QWORD *)v25 - 3)) = v24;
          __p[1] = 0;
          v12 = (std::ios_base *)((char *)__p + *((_QWORD *)__p[0] - 3));
          std::ios_base::init(v12, v31);
          v12[1].__vftable = 0;
          v12[1].__fmtflags_ = -1;
          *(_QWORD *)((char *)&v31[-1] + *(_QWORD *)(v23 - 24)) = v22;
          *(void **)((char *)__p + *(_QWORD *)(v21 - 24)) = v20;
          v33[0] = v10;
          __p[0] = (void *)(v9 + 24);
          v30 = v11;
          std::stringbuf::basic_stringbuf[abi:ne180100]((uint64_t)v31, &begin[v4], 24);
          v3 = v26;
          MEMORY[0x20BD278BC](__p, a1 + 72);
          v5 = v19;
          __p[0] = v16;
          *(void **)((char *)__p + *((_QWORD *)v16 - 3)) = v18;
          v30 = v17;
          v31[0] = v15;
          if (v32 < 0)
            operator delete((void *)v31[8]);
          std::streambuf::~streambuf();
          std::iostream::~basic_iostream();
          MEMORY[0x20BD27A84](v33);
          break;
        case 4u:
          std::string::operator=((std::string *)a1, &v34.__begin_[v4]);
          break;
        default:
          break;
      }
      v4 = v6;
    }
    while (v5 > v6++);
  }
  __p[0] = &v34;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
  return a1;
}

void sub_20A863460(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void **a23,void **a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a31 < 0)
    operator delete(__p);
  if (*(char *)(a25 + 71) < 0)
    operator delete(*a23);
  if (*(char *)(a25 + 47) < 0)
    operator delete(*a24);
  if (*(char *)(a25 + 23) < 0)
    operator delete(*(void **)a25);
  _Unwind_Resume(exception_object);
}

uint64_t std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = MEMORY[0x24BEDB7F0];
  v3 = *MEMORY[0x24BEDB7F0];
  *(_QWORD *)a1 = *MEMORY[0x24BEDB7F0];
  v4 = *(_QWORD *)(v2 + 72);
  *(_QWORD *)(a1 + *(_QWORD *)(v3 - 24)) = *(_QWORD *)(v2 + 64);
  *(_QWORD *)(a1 + 24) = MEMORY[0x24BEDB848] + 16;
  *(_QWORD *)(a1 + 16) = v4;
  if (*(char *)(a1 + 111) < 0)
    operator delete(*(void **)(a1 + 88));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x20BD27A84](a1 + 128);
  return a1;
}

uint64_t std::stringbuf::basic_stringbuf[abi:ne180100](uint64_t a1, const std::string *a2, int a3)
{
  uint64_t v6;
  std::string *v7;
  char v8;
  std::string *v9;
  unint64_t v10;
  int v11;
  std::string::size_type v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v6 = std::streambuf::basic_streambuf();
  *(_QWORD *)v6 = MEMORY[0x24BEDB848] + 16;
  *(_OWORD *)(v6 + 64) = 0u;
  v7 = (std::string *)(v6 + 64);
  *(_OWORD *)(v6 + 80) = 0u;
  *(_DWORD *)(v6 + 96) = a3;
  std::string::operator=((std::string *)(v6 + 64), a2);
  *(_QWORD *)(a1 + 88) = 0;
  v8 = *(_BYTE *)(a1 + 87);
  if (v8 < 0)
  {
    v9 = *(std::string **)(a1 + 64);
    v10 = *(_QWORD *)(a1 + 72);
  }
  else
  {
    v9 = v7;
    v10 = *(unsigned __int8 *)(a1 + 87);
  }
  v11 = *(_DWORD *)(a1 + 96);
  if ((v11 & 8) != 0)
  {
    *(_QWORD *)(a1 + 88) = (char *)v9 + v10;
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = (char *)v9 + v10;
  }
  if ((v11 & 0x10) != 0)
  {
    *(_QWORD *)(a1 + 88) = (char *)v9 + v10;
    v12 = v8 < 0 ? (*(_QWORD *)(a1 + 80) & 0x7FFFFFFFFFFFFFFFLL) - 1 : 22;
    std::string::resize(v7, v12, 0);
    v13 = *(char *)(a1 + 87) < 0 ? *(_QWORD *)(a1 + 72) : *(unsigned __int8 *)(a1 + 87);
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 56) = (char *)v9 + v13;
    if ((*(_BYTE *)(a1 + 96) & 3) != 0)
    {
      if (v10 >> 31)
      {
        v14 = ((v10 - 0x80000000) * (unsigned __int128)0x200000005uLL) >> 64;
        v15 = 0x7FFFFFFF * ((v14 + ((v10 - 0x80000000 - v14) >> 1)) >> 30);
        v9 = (std::string *)((char *)v9 + v15 + 0x7FFFFFFF);
        v10 = v10 - v15 - 0x7FFFFFFF;
        *(_QWORD *)(a1 + 48) = v9;
      }
      if (v10)
        *(_QWORD *)(a1 + 48) = (char *)v9 + v10;
    }
  }
  return a1;
}

void sub_20A8636F8(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 87) < 0)
    operator delete(*v2);
  std::streambuf::~streambuf();
  _Unwind_Resume(a1);
}

mlcore::ContentRating *mlcore::ContentRating::ContentRating(mlcore::ContentRating *this, const mediaplatform::PropertyList *a2)
{
  char *v4;
  CFTypeRef v5;
  const __CFString *v6;
  CFTypeID TypeID;
  unint64_t IntValue;
  const __CFString *v9;
  CFTypeID v10;
  const __CFString *v11;
  CFTypeID v12;
  std::logic_error *exception;
  CFTypeRef cf[2];
  char v16;
  void *__p[2];
  uint64_t v18;
  void (**v19)(mediaplatform::PropertyList *__hidden);
  const void *v20;
  const __CFString *v21;
  const __CFString *v22;
  const __CFString *v23;
  unint64_t valuePtr;

  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  v4 = (char *)this + 24;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  std::string::basic_string[abi:ne180100]<0>(__p, "riaa");
  mediaplatform::PropertyList::_cfValueForKey((uint64_t)a2, (uint64_t)__p, cf);
  v5 = cf[0];
  if (cf[0])
    CFRetain(cf[0]);
  valuePtr = (unint64_t)v5;
  mediaplatform::PlistValueGetter<mediaplatform::PropertyList,void>::value(&v19, v5);
  mediaplatform::CFRetainedPointer<void const*>::~CFRetainedPointer((const void **)&valuePtr);
  mediaplatform::CFRetainedPointer<void const*>::~CFRetainedPointer(cf);
  if (SHIBYTE(v18) < 0)
    operator delete(__p[0]);
  std::string::basic_string[abi:ne180100]<0>(cf, "name");
  mediaplatform::PropertyList::valueForKey<std::string>(__p, (uint64_t)&v19, (uint64_t)cf);
  if (*((char *)this + 47) < 0)
    operator delete(*(void **)v4);
  *(_OWORD *)v4 = *(_OWORD *)__p;
  *((_QWORD *)v4 + 2) = v18;
  HIBYTE(v18) = 0;
  LOBYTE(__p[0]) = 0;
  if (v16 < 0)
    operator delete((void *)cf[0]);
  std::string::basic_string[abi:ne180100]<0>(__p, "value");
  mediaplatform::PropertyList::_cfValueForKey((uint64_t)&v19, (uint64_t)__p, &v22);
  v6 = v22;
  if (v22)
    CFRetain(v22);
  v21 = v6;
  TypeID = CFNumberGetTypeID();
  if (v6 && CFGetTypeID(v6) == TypeID)
  {
    CFRetain(v6);
    cf[0] = v6;
    valuePtr = 0;
    CFNumberGetValue((CFNumberRef)v6, kCFNumberLongLongType, &valuePtr);
    IntValue = valuePtr;
  }
  else
  {
    cf[0] = 0;
    v9 = v21;
    v10 = CFBooleanGetTypeID();
    if (v9 && CFGetTypeID(v9) == v10)
    {
      CFRetain(v9);
      valuePtr = (unint64_t)v9;
      IntValue = CFBooleanGetValue((CFBooleanRef)v9) != 0;
    }
    else
    {
      valuePtr = 0;
      v11 = v21;
      v12 = CFStringGetTypeID();
      if (!v11 || CFGetTypeID(v11) != v12)
      {
        v23 = 0;
        exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
        std::logic_error::logic_error(exception, "not an integer");
        exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
        __cxa_throw(exception, (struct type_info *)off_24C32FBD0, MEMORY[0x24BEDAB88]);
      }
      CFRetain(v11);
      v23 = v11;
      IntValue = CFStringGetIntValue(v11);
      mediaplatform::CFRetainedPointer<__CFString const*>::~CFRetainedPointer((const void **)&v23);
    }
    mediaplatform::CFRetainedPointer<__CFBoolean const*>::~CFRetainedPointer((const void **)&valuePtr);
  }
  mediaplatform::CFRetainedPointer<__CFNumber const*>::~CFRetainedPointer(cf);
  mediaplatform::CFRetainedPointer<void const*>::~CFRetainedPointer((const void **)&v21);
  mediaplatform::CFRetainedPointer<void const*>::~CFRetainedPointer((const void **)&v22);
  *((_QWORD *)this + 9) = IntValue;
  if (SHIBYTE(v18) < 0)
    operator delete(__p[0]);
  v19 = &off_24C330CB0;
  mediaplatform::CFRetainedPointer<__CFDictionary *>::~CFRetainedPointer(&v20);
  return this;
}

void sub_20A8639B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void (**a23)(mediaplatform::PropertyList *__hidden this),const void *a24)
{
  uint64_t v24;
  void **v25;
  uint64_t v26;

  mediaplatform::CFRetainedPointer<__CFBoolean const*>::~CFRetainedPointer((const void **)(v26 - 40));
  mediaplatform::CFRetainedPointer<__CFNumber const*>::~CFRetainedPointer((const void **)&a11);
  mediaplatform::CFRetainedPointer<void const*>::~CFRetainedPointer((const void **)(v26 - 64));
  mediaplatform::CFRetainedPointer<void const*>::~CFRetainedPointer((const void **)(v26 - 56));
  if (a22 < 0)
    operator delete(__p);
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    *(_QWORD *)(v24 + 72) = 0;
    __cxa_end_catch();
    JUMPOUT(0x20A86393CLL);
  }
  a23 = &off_24C330CB0;
  mediaplatform::CFRetainedPointer<__CFDictionary *>::~CFRetainedPointer(&a24);
  if (*(char *)(v24 + 71) < 0)
    operator delete(*(void **)(v24 + 48));
  if (*(char *)(v24 + 47) < 0)
    operator delete(*v25);
  if (*(char *)(v24 + 23) < 0)
    operator delete(*(void **)v24);
  _Unwind_Resume(a1);
}

const void **mediaplatform::PropertyList::valueForKey<std::string>(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  const __CFString *v4;
  const __CFString *v6;
  CFTypeRef cf;

  mediaplatform::PropertyList::_cfValueForKey(a2, a3, &cf);
  v4 = (const __CFString *)cf;
  if (cf)
    CFRetain(cf);
  v6 = v4;
  mediaplatform::PlistValueGetter<std::string,void>::value(a1, v4);
  mediaplatform::CFRetainedPointer<void const*>::~CFRetainedPointer((const void **)&v6);
  return mediaplatform::CFRetainedPointer<void const*>::~CFRetainedPointer(&cf);
}

void sub_20A863BC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  mediaplatform::CFRetainedPointer<void const*>::~CFRetainedPointer((const void **)va);
  _Unwind_Resume(a1);
}

const void **mediaplatform::CFRetainedPointer<__CFBoolean const*>::~CFRetainedPointer(const void **a1)
{
  const void *v2;

  v2 = *a1;
  if (v2)
    CFRelease(v2);
  return a1;
}

const void **mediaplatform::CFRetainedPointer<__CFNumber const*>::~CFRetainedPointer(const void **a1)
{
  const void *v2;

  v2 = *a1;
  if (v2)
    CFRelease(v2);
  return a1;
}

const void **mediaplatform::PlistValueGetter<mediaplatform::PropertyList,void>::value(_QWORD *a1, CFTypeRef cf)
{
  std::logic_error *exception;
  const void *v6;
  const void *v7;

  if (!cf)
  {
    v7 = 0;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "not a plist/dictionary");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C32FBD0, MEMORY[0x24BEDAB88]);
  }
  CFRetain(cf);
  v7 = cf;
  CFRetain(cf);
  v6 = cf;
  *a1 = &off_24C330CB0;
  a1[1] = CFDictionaryCreateMutableCopy((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, (CFDictionaryRef)cf);
  mediaplatform::CFRetainedPointer<__CFDictionary const*>::~CFRetainedPointer(&v6);
  return mediaplatform::CFRetainedPointer<__CFDictionary const*>::~CFRetainedPointer(&v7);
}

void sub_20A863D10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, const void *a10)
{
  void *v10;

  __cxa_free_exception(v10);
  mediaplatform::CFRetainedPointer<__CFDictionary const*>::~CFRetainedPointer(&a10);
  _Unwind_Resume(a1);
}

const void **mediaplatform::CFRetainedPointer<__CFDictionary const*>::~CFRetainedPointer(const void **a1)
{
  const void *v2;

  v2 = *a1;
  if (v2)
    CFRelease(v2);
  return a1;
}

uint64_t mlcore::ContentRating::ratingLabel(mlcore::ContentRating *this)
{
  return (uint64_t)this + 24;
}

uint64_t mlcore::ContentRating::ratingSystemName(mlcore::ContentRating *this)
{
  return (uint64_t)this + 48;
}

uint64_t mlcore::ContentRating::ratingRank(mlcore::ContentRating *this)
{
  return *((_QWORD *)this + 9);
}

double mlcore::SecondsSinceReferenceDate(mlcore *this)
{
  return (double)(std::chrono::system_clock::now().__d_.__rep_ / 1000) / 1000.0 + -978307200.0;
}

void mlcore::InPredicate<long long>::~InPredicate(_QWORD *a1)
{
  *a1 = &unk_24C336998;
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)(a1 + 8));
  std::__hash_table<mlcore::ModelPropertyBase *,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::allocator<mlcore::ModelPropertyBase *>>::~__hash_table((uint64_t)(a1 + 2));
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mlcore::InPredicate<long long>::description(uint64_t a1)
{
  void **v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char i;
  void *__p[2];
  unsigned __int8 v9;
  _QWORD v10[11];
  char v11;
  uint64_t v12;

  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v10);
  (*(void (**)(void **__return_ptr))(**(_QWORD **)(a1 + 8) + 40))(__p);
  if ((v9 & 0x80u) == 0)
    v2 = __p;
  else
    v2 = (void **)__p[0];
  if ((v9 & 0x80u) == 0)
    v3 = v9;
  else
    v3 = (uint64_t)__p[1];
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)v2, v3);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)" in [", 5);
  if ((char)v9 < 0)
    operator delete(__p[0]);
  v4 = *(_QWORD *)(a1 + 64);
  if (!v4)
    v4 = a1 + 16;
  v5 = (_QWORD *)(v4 + 16);
  for (i = 1; ; i = 0)
  {
    v5 = (_QWORD *)*v5;
    if (!v5)
      break;
    if ((i & 1) == 0)
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)", ", 2);
    std::ostream::operator<<();
  }
  LOBYTE(__p[0]) = 93;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)__p, 1);
  std::stringbuf::str();
  v10[0] = *MEMORY[0x24BEDB800];
  *(_QWORD *)((char *)v10 + *(_QWORD *)(v10[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB800] + 24);
  v10[1] = MEMORY[0x24BEDB848] + 16;
  if (v11 < 0)
    operator delete((void *)v10[9]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x20BD27A84](&v12);
}

void sub_20A863FA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  std::ostringstream::~ostringstream((uint64_t)&a15);
  _Unwind_Resume(a1);
}

BOOL mlcore::InPredicate<long long>::matches(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _QWORD *v4;

  v3 = mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::valueForProperty(*a2 + 8, *(_QWORD *)(a1 + 8));
  v4 = (_QWORD *)(a1 + 32);
  do
    v4 = (_QWORD *)*v4;
  while (v4 && v3 != v4[2]);
  return v4 != 0;
}

char *std::allocate_shared[abi:ne180100]<mediaplatform::SQLExpressionList,std::allocator<mediaplatform::SQLExpressionList>,std::vector<std::shared_ptr<mediaplatform::SQLExpression const>> &,void>(_QWORD *a1, char *a2, char *a3)
{
  char *v6;
  char *result;

  v6 = (char *)operator new(0x38uLL);
  *(_OWORD *)(v6 + 8) = 0u;
  *(_QWORD *)v6 = &off_24C33BDB0;
  *((_QWORD *)v6 + 3) = &off_24C330FB0;
  *(_OWORD *)(v6 + 40) = 0u;
  *((_QWORD *)v6 + 4) = 0;
  result = std::vector<std::shared_ptr<mediaplatform::SQLExpression const>>::__init_with_size[abi:ne180100]<std::shared_ptr<mediaplatform::SQLExpression const>*,std::shared_ptr<mediaplatform::SQLExpression const>*>(v6 + 32, a2, a3, (a3 - a2) >> 4);
  *a1 = v6 + 24;
  a1[1] = v6;
  return result;
}

void sub_20A8640A8(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<mediaplatform::SQLExpressionList>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33BDB0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mediaplatform::SQLExpressionList>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33BDB0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD27AFCLL);
}

_QWORD *mlcore::InPredicate<std::string>::~InPredicate(_QWORD *a1)
{
  *a1 = &unk_24C336890;
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)(a1 + 8));
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)(a1 + 2));
  return a1;
}

void mlcore::InPredicate<std::string>::~InPredicate(_QWORD *a1)
{
  *a1 = &unk_24C336890;
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)(a1 + 8));
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)(a1 + 2));
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mlcore::InPredicate<std::string>::description(uint64_t a1)
{
  std::string *p_p;
  std::string::size_type size;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  std::string *v7;
  std::string::size_type v8;
  std::string __p;
  _QWORD v11[11];
  char v12;
  uint64_t v13;

  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v11);
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 40))(&__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)p_p, size);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)" in [", 5);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v4 = *(_QWORD *)(a1 + 64);
  if (!v4)
    v4 = a1 + 16;
  v5 = *(uint64_t **)(v4 + 16);
  if (v5)
  {
    v6 = 1;
    do
    {
      if (*((char *)v5 + 39) < 0)
        std::string::__init_copy_ctor_external(&__p, (const std::string::value_type *)v5[2], v5[3]);
      else
        __p = *(std::string *)(v5 + 2);
      if ((v6 & 1) == 0)
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)", ", 2);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)"\"", 1);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v7 = &__p;
      else
        v7 = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v8 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v8 = __p.__r_.__value_.__l.__size_;
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)v7, v8);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)"\"", 1);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      v6 = 0;
      v5 = (uint64_t *)*v5;
    }
    while (v5);
  }
  __p.__r_.__value_.__s.__data_[0] = 93;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)&__p, 1);
  std::stringbuf::str();
  v11[0] = *MEMORY[0x24BEDB800];
  *(_QWORD *)((char *)v11 + *(_QWORD *)(v11[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB800] + 24);
  v11[1] = MEMORY[0x24BEDB848] + 16;
  if (v12 < 0)
    operator delete((void *)v11[9]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x20BD27A84](&v13);
}

void sub_20A864380(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  std::ostringstream::~ostringstream((uint64_t)&a15);
  _Unwind_Resume(a1);
}

BOOL mlcore::InPredicate<std::string>::matches(uint64_t a1, _QWORD *a2)
{
  uint64_t *v3;
  int v4;
  __int128 v5;
  std::string::size_type size;
  uint64_t v7;
  std::string::size_type v8;
  int v9;
  std::string *p_p;
  std::string *v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  BOOL v18;
  BOOL v19;
  std::string __p;
  std::string v22;

  mlcore::PropertyCacheBase<std::string,mediaplatform::Data>::valueForProperty(&v22, *a2 + 8, *(_QWORD *)(a1 + 8));
  v3 = (uint64_t *)(a1 + 32);
  v4 = SHIBYTE(v22.__r_.__value_.__r.__words[2]);
  v5 = *(_OWORD *)&v22.__r_.__value_.__l.__data_;
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v22.__r_.__value_.__r.__words[2]);
  else
    size = v22.__r_.__value_.__l.__size_;
  v7 = HIBYTE(v22.__r_.__value_.__r.__words[2]) - 1;
  while (1)
  {
    v3 = (uint64_t *)*v3;
    if (!v3)
      break;
    if (*((char *)v3 + 39) < 0)
      std::string::__init_copy_ctor_external(&__p, (const std::string::value_type *)v3[2], v3[3]);
    else
      __p = *(std::string *)(v3 + 2);
    v8 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    v9 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v8 = __p.__r_.__value_.__l.__size_;
    if (size == v8)
    {
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_p = &__p;
      else
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      if (v4 < 0)
      {
        v19 = memcmp((const void *)v5, p_p, *((size_t *)&v5 + 1)) == 0;
      }
      else
      {
        if (!v4)
        {
          v19 = 1;
          if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            goto LABEL_28;
          goto LABEL_31;
        }
        v11 = &v22;
        v12 = v7;
        do
        {
          v14 = v11->__r_.__value_.__s.__data_[0];
          v11 = (std::string *)((char *)v11 + 1);
          v13 = v14;
          v16 = p_p->__r_.__value_.__s.__data_[0];
          p_p = (std::string *)((char *)p_p + 1);
          v15 = v16;
          v18 = v12-- != 0;
          v19 = v13 == v15;
        }
        while (v13 == v15 && v18);
      }
      if ((v9 & 0x80000000) == 0)
        goto LABEL_28;
LABEL_31:
      operator delete(__p.__r_.__value_.__l.__data_);
      if (v19)
        break;
    }
    else
    {
      v19 = 0;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        goto LABEL_31;
LABEL_28:
      if (v19)
        break;
    }
  }
  if (v4 < 0)
    operator delete(v22.__r_.__value_.__l.__data_);
  return v3 != 0;
}

void sub_20A864514(_Unwind_Exception *exception_object)
{
  void *v1;
  int v2;

  if (v2 < 0)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

void mlcore::InPredicate<std::string>::_SQLExpression(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  _OWORD *v11;
  char v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t i;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  uint64_t *j;
  std::__shared_weak_count *v32;
  __int128 v33;
  uint64_t v34;
  _OWORD *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  _QWORD *v43;
  char *v44;
  __int128 v45;
  int64x2_t v46;
  char *v47;
  unint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  std::__shared_weak_count *size;
  unint64_t *v58;
  unint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  __int128 v63;
  uint64_t v64;
  std::__shared_weak_count *v65;
  std::string v66;
  uint64_t v67;
  std::__shared_weak_count *v68;
  __int128 v69;
  __int128 v70;
  int64x2_t v71;
  char *v72;
  __int128 v73;
  _BYTE v74[32];
  char **v75;
  uint64_t v76;

  v76 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a1 + 64))
  {
    v6 = (std::__shared_weak_count *)operator new(0x28uLL);
    v6->__shared_owners_ = 0;
    v6->__shared_weak_owners_ = 0;
    v6->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33BD08;
    v6[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24C335D00;
    LODWORD(v6[1].__shared_owners_) = *(_DWORD *)(a1 + 56);
    *(_QWORD *)&v73 = v6 + 1;
    *((_QWORD *)&v73 + 1) = v6;
    std::allocate_shared[abi:ne180100]<mediaplatform::DatabaseBindParameter,std::allocator<mediaplatform::DatabaseBindParameter>,std::shared_ptr<mediaplatform::DatabaseParameter<int>> &,void>(&v70, (uint64_t)&v6[1], v6);
    *(_OWORD *)v74 = v70;
    v70 = 0uLL;
    v7 = *(_QWORD *)(a1 + 8);
    v8 = (std::__shared_weak_count *)a2[1];
    v67 = *a2;
    v68 = v8;
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
    }
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t *))(*(_QWORD *)v7 + 96))(&v69, v7, &v67);
    *(_OWORD *)&v74[16] = v69;
    v69 = 0uLL;
    v72 = 0;
    v71 = 0uLL;
    v66.__r_.__value_.__r.__words[0] = (std::string::size_type)&v71;
    v66.__r_.__value_.__s.__data_[8] = 0;
    v11 = operator new(0x20uLL);
    v12 = 0;
    v13 = 0;
    v71.i64[0] = (uint64_t)v11;
    v71.i64[1] = (uint64_t)v11;
    v72 = (char *)(v11 + 2);
    do
    {
      v14 = v12;
      v15 = *(_OWORD *)&v74[16 * v13];
      *v11 = v15;
      if (*((_QWORD *)&v15 + 1))
      {
        v16 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
        do
          v17 = __ldxr(v16);
        while (__stxr(v17 + 1, v16));
      }
      ++v11;
      v12 = 1;
      v13 = 1;
    }
    while ((v14 & 1) == 0);
    v71.i64[1] = (uint64_t)v11;
    for (i = 16; i != -16; i -= 16)
      std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&v74[i]);
    v19 = (std::__shared_weak_count *)*((_QWORD *)&v69 + 1);
    if (*((_QWORD *)&v69 + 1))
    {
      v20 = (unint64_t *)(*((_QWORD *)&v69 + 1) + 8);
      do
        v21 = __ldaxr(v20);
      while (__stlxr(v21 - 1, v20));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    v22 = v68;
    if (v68)
    {
      v23 = (unint64_t *)&v68->__shared_owners_;
      do
        v24 = __ldaxr(v23);
      while (__stlxr(v24 - 1, v23));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
    }
    v25 = (std::__shared_weak_count *)*((_QWORD *)&v70 + 1);
    if (*((_QWORD *)&v70 + 1))
    {
      v26 = (unint64_t *)(*((_QWORD *)&v70 + 1) + 8);
      do
        v27 = __ldaxr(v26);
      while (__stlxr(v27 - 1, v26));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v25);
      }
    }
    std::string::basic_string[abi:ne180100]<0>(v74, "HashtableLookupString");
    std::allocate_shared[abi:ne180100]<mediaplatform::SQLFunctionExpression,std::allocator<mediaplatform::SQLFunctionExpression>,std::string,std::vector<std::shared_ptr<mediaplatform::SQLExpression const>> &,void>(&v66, (__int128 *)v74, &v71);
    *a3 = *(_OWORD *)&v66.__r_.__value_.__l.__data_;
    if ((v74[23] & 0x80000000) != 0)
      operator delete(*(void **)v74);
    *(_QWORD *)v74 = &v71;
    std::vector<std::shared_ptr<mediaplatform::SQLExpression const>>::__destroy_vector::operator()[abi:ne180100]((void ***)v74);
    v28 = (std::__shared_weak_count *)*((_QWORD *)&v73 + 1);
    if (*((_QWORD *)&v73 + 1))
    {
      v29 = (unint64_t *)(*((_QWORD *)&v73 + 1) + 8);
      do
        v30 = __ldaxr(v29);
      while (__stlxr(v30 - 1, v29));
      if (!v30)
      {
        ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
        std::__shared_weak_count::__release_weak(v28);
      }
    }
  }
  else
  {
    v71 = 0uLL;
    v72 = 0;
    for (j = *(uint64_t **)(a1 + 32); j; j = (uint64_t *)*j)
    {
      if (*((char *)j + 39) < 0)
        std::string::__init_copy_ctor_external(&v66, (const std::string::value_type *)j[2], j[3]);
      else
        v66 = *(std::string *)(j + 2);
      std::allocate_shared[abi:ne180100]<mediaplatform::DatabaseParameter<std::string>,std::allocator<mediaplatform::DatabaseParameter<std::string>>,std::string&,void>(&v73, (uint64_t)&v66);
      v32 = (std::__shared_weak_count *)*((_QWORD *)&v73 + 1);
      std::allocate_shared[abi:ne180100]<mediaplatform::DatabaseBindParameter,std::allocator<mediaplatform::DatabaseBindParameter>,std::shared_ptr<mediaplatform::DatabaseParameter<int>> &,void>(&v69, v73, *((std::__shared_weak_count **)&v73 + 1));
      v33 = v69;
      v70 = v69;
      v69 = 0uLL;
      v34 = v71.i64[1];
      if (v71.i64[1] >= (unint64_t)v72)
      {
        v63 = v33;
        v36 = (v71.i64[1] - v71.i64[0]) >> 4;
        if ((unint64_t)(v36 + 1) >> 60)
          std::vector<std::string>::__throw_length_error[abi:ne180100]();
        v37 = (uint64_t)&v72[-v71.i64[0]] >> 3;
        if (v37 <= v36 + 1)
          v37 = v36 + 1;
        if ((unint64_t)&v72[-v71.i64[0]] >= 0x7FFFFFFFFFFFFFF0)
          v38 = 0xFFFFFFFFFFFFFFFLL;
        else
          v38 = v37;
        v75 = &v72;
        v39 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<mediaplatform::DatabaseParameterBase>>>(v38);
        v41 = &v39[16 * v36];
        *(_OWORD *)v41 = v63;
        v70 = 0uLL;
        v42 = (_QWORD *)v71.i64[1];
        v43 = (_QWORD *)v71.i64[0];
        if (v71.i64[1] == v71.i64[0])
        {
          v46 = vdupq_n_s64(v71.u64[1]);
          v44 = &v39[16 * v36];
        }
        else
        {
          v44 = &v39[16 * v36];
          do
          {
            v45 = *((_OWORD *)v42 - 1);
            v42 -= 2;
            *((_OWORD *)v44 - 1) = v45;
            v44 -= 16;
            *v42 = 0;
            v42[1] = 0;
          }
          while (v42 != v43);
          v46 = v71;
        }
        v35 = v41 + 16;
        v71.i64[0] = (uint64_t)v44;
        v71.i64[1] = (uint64_t)(v41 + 16);
        *(int64x2_t *)&v74[8] = v46;
        v47 = v72;
        v72 = &v39[16 * v40];
        *(_QWORD *)&v74[24] = v47;
        *(_QWORD *)v74 = v46.i64[0];
        std::__split_buffer<std::shared_ptr<mediaplatform::SQLExpression const>>::~__split_buffer((uint64_t)v74);
      }
      else
      {
        *(_OWORD *)v71.i64[1] = v33;
        v35 = (_OWORD *)(v34 + 16);
        v70 = 0uLL;
      }
      v71.i64[1] = (uint64_t)v35;
      if (v32)
      {
        v48 = (unint64_t *)&v32->__shared_owners_;
        do
          v49 = __ldaxr(v48);
        while (__stlxr(v49 - 1, v48));
        if (!v49)
        {
          ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
          std::__shared_weak_count::__release_weak(v32);
        }
      }
      if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v66.__r_.__value_.__l.__data_);
    }
    v50 = *(_QWORD *)(a1 + 8);
    v51 = (std::__shared_weak_count *)a2[1];
    v64 = *a2;
    v65 = v51;
    if (v51)
    {
      v52 = (unint64_t *)&v51->__shared_owners_;
      do
        v53 = __ldxr(v52);
      while (__stxr(v53 + 1, v52));
    }
    (*(void (**)(_BYTE *__return_ptr, uint64_t, uint64_t *))(*(_QWORD *)v50 + 96))(v74, v50, &v64);
    v54 = v65;
    if (v65)
    {
      v55 = (unint64_t *)&v65->__shared_owners_;
      do
        v56 = __ldaxr(v55);
      while (__stlxr(v56 - 1, v55));
      if (!v56)
      {
        ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
        std::__shared_weak_count::__release_weak(v54);
      }
    }
    std::allocate_shared[abi:ne180100]<mediaplatform::SQLExpressionList,std::allocator<mediaplatform::SQLExpressionList>,std::vector<std::shared_ptr<mediaplatform::SQLExpression const>> &,void>(&v66, (char *)v71.i64[0], (char *)v71.i64[1]);
    LODWORD(v70) = 21;
    std::allocate_shared[abi:ne180100]<mediaplatform::SQLBinaryExpression,std::allocator<mediaplatform::SQLBinaryExpression>,std::shared_ptr<mediaplatform::SQLExpression> &,mediaplatform::SQLBinaryExpression::BinaryOperator,std::shared_ptr<mediaplatform::DatabaseBindParameter> &,void>(&v73, *(uint64_t *)v74, *(std::__shared_weak_count **)&v74[8], (int *)&v70, (uint64_t *)&v66);
    *a3 = v73;
    size = (std::__shared_weak_count *)v66.__r_.__value_.__l.__size_;
    if (v66.__r_.__value_.__l.__size_)
    {
      v58 = (unint64_t *)(v66.__r_.__value_.__l.__size_ + 8);
      do
        v59 = __ldaxr(v58);
      while (__stlxr(v59 - 1, v58));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
        std::__shared_weak_count::__release_weak(size);
      }
    }
    v60 = *(std::__shared_weak_count **)&v74[8];
    if (*(_QWORD *)&v74[8])
    {
      v61 = (unint64_t *)(*(_QWORD *)&v74[8] + 8);
      do
        v62 = __ldaxr(v61);
      while (__stlxr(v62 - 1, v61));
      if (!v62)
      {
        ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
        std::__shared_weak_count::__release_weak(v60);
      }
    }
    *(_QWORD *)v74 = &v71;
    std::vector<std::shared_ptr<mediaplatform::SQLExpression const>>::__destroy_vector::operator()[abi:ne180100]((void ***)v74);
  }
}

void sub_20A864AA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  uint64_t v30;

  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&__p);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100](v30 - 128);
  __p = &a26;
  std::vector<std::shared_ptr<mediaplatform::SQLExpression const>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

_QWORD *mlcore::InPredicate<double>::~InPredicate(_QWORD *a1)
{
  *a1 = &unk_24C3368E8;
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)(a1 + 8));
  std::__hash_table<mlcore::ModelPropertyBase *,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::allocator<mlcore::ModelPropertyBase *>>::~__hash_table((uint64_t)(a1 + 2));
  return a1;
}

void mlcore::InPredicate<double>::~InPredicate(_QWORD *a1)
{
  *a1 = &unk_24C3368E8;
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)(a1 + 8));
  std::__hash_table<mlcore::ModelPropertyBase *,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::allocator<mlcore::ModelPropertyBase *>>::~__hash_table((uint64_t)(a1 + 2));
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mlcore::InPredicate<double>::description(uint64_t a1)
{
  void **v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char i;
  void *__p[2];
  unsigned __int8 v9;
  _QWORD v10[11];
  char v11;
  uint64_t v12;

  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v10);
  (*(void (**)(void **__return_ptr))(**(_QWORD **)(a1 + 8) + 40))(__p);
  if ((v9 & 0x80u) == 0)
    v2 = __p;
  else
    v2 = (void **)__p[0];
  if ((v9 & 0x80u) == 0)
    v3 = v9;
  else
    v3 = (uint64_t)__p[1];
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)v2, v3);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)" in [", 5);
  if ((char)v9 < 0)
    operator delete(__p[0]);
  v4 = *(_QWORD *)(a1 + 64);
  if (!v4)
    v4 = a1 + 16;
  v5 = (_QWORD *)(v4 + 16);
  for (i = 1; ; i = 0)
  {
    v5 = (_QWORD *)*v5;
    if (!v5)
      break;
    if ((i & 1) == 0)
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)", ", 2);
    std::ostream::operator<<();
  }
  LOBYTE(__p[0]) = 93;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)__p, 1);
  std::stringbuf::str();
  v10[0] = *MEMORY[0x24BEDB800];
  *(_QWORD *)((char *)v10 + *(_QWORD *)(v10[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB800] + 24);
  v10[1] = MEMORY[0x24BEDB848] + 16;
  if (v11 < 0)
    operator delete((void *)v10[9]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x20BD27A84](&v12);
}

void sub_20A864DD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  std::ostringstream::~ostringstream((uint64_t)&a15);
  _Unwind_Resume(a1);
}

BOOL mlcore::InPredicate<double>::matches(uint64_t a1, _QWORD *a2)
{
  double v3;
  double *v4;

  v3 = mlcore::PropertyCacheBase<double,std::string,mediaplatform::Data>::valueForProperty(*a2 + 8, *(_QWORD *)(a1 + 8));
  v4 = (double *)(a1 + 32);
  do
    v4 = *(double **)v4;
  while (v4 && v3 != v4[2]);
  return v4 != 0;
}

void mlcore::InPredicate<double>::_SQLExpression(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  _OWORD *v11;
  char v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t i;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  _QWORD *j;
  uint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  __int128 v35;
  uint64_t v36;
  _OWORD *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  _QWORD *v45;
  char *v46;
  __int128 v47;
  int64x2_t v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  __int128 v65;
  uint64_t v66;
  std::__shared_weak_count *v67;
  uint64_t v68;
  std::__shared_weak_count *v69;
  __int128 v70;
  __int128 v71;
  int64x2_t v72;
  char *v73;
  __int128 v74;
  __int128 v75;
  _BYTE __p[32];
  char **v77;
  uint64_t v78;

  v78 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a1 + 64))
  {
    v6 = (std::__shared_weak_count *)operator new(0x28uLL);
    v6->__shared_owners_ = 0;
    v6->__shared_weak_owners_ = 0;
    v6->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33BD08;
    v6[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24C335D00;
    LODWORD(v6[1].__shared_owners_) = *(_DWORD *)(a1 + 56);
    *(_QWORD *)&v74 = v6 + 1;
    *((_QWORD *)&v74 + 1) = v6;
    std::allocate_shared[abi:ne180100]<mediaplatform::DatabaseBindParameter,std::allocator<mediaplatform::DatabaseBindParameter>,std::shared_ptr<mediaplatform::DatabaseParameter<int>> &,void>(&v71, (uint64_t)&v6[1], v6);
    *(_OWORD *)__p = v71;
    v71 = 0uLL;
    v7 = *(_QWORD *)(a1 + 8);
    v8 = (std::__shared_weak_count *)a2[1];
    v68 = *a2;
    v69 = v8;
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
    }
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t *))(*(_QWORD *)v7 + 96))(&v70, v7, &v68);
    *(_OWORD *)&__p[16] = v70;
    v70 = 0uLL;
    v73 = 0;
    v72 = 0uLL;
    *(_QWORD *)&v75 = &v72;
    BYTE8(v75) = 0;
    v11 = operator new(0x20uLL);
    v12 = 0;
    v13 = 0;
    v72.i64[0] = (uint64_t)v11;
    v72.i64[1] = (uint64_t)v11;
    v73 = (char *)(v11 + 2);
    do
    {
      v14 = v12;
      v15 = *(_OWORD *)&__p[16 * v13];
      *v11 = v15;
      if (*((_QWORD *)&v15 + 1))
      {
        v16 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
        do
          v17 = __ldxr(v16);
        while (__stxr(v17 + 1, v16));
      }
      ++v11;
      v12 = 1;
      v13 = 1;
    }
    while ((v14 & 1) == 0);
    v72.i64[1] = (uint64_t)v11;
    for (i = 16; i != -16; i -= 16)
      std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&__p[i]);
    v19 = (std::__shared_weak_count *)*((_QWORD *)&v70 + 1);
    if (*((_QWORD *)&v70 + 1))
    {
      v20 = (unint64_t *)(*((_QWORD *)&v70 + 1) + 8);
      do
        v21 = __ldaxr(v20);
      while (__stlxr(v21 - 1, v20));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    v22 = v69;
    if (v69)
    {
      v23 = (unint64_t *)&v69->__shared_owners_;
      do
        v24 = __ldaxr(v23);
      while (__stlxr(v24 - 1, v23));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
    }
    v25 = (std::__shared_weak_count *)*((_QWORD *)&v71 + 1);
    if (*((_QWORD *)&v71 + 1))
    {
      v26 = (unint64_t *)(*((_QWORD *)&v71 + 1) + 8);
      do
        v27 = __ldaxr(v26);
      while (__stlxr(v27 - 1, v26));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v25);
      }
    }
    std::string::basic_string[abi:ne180100]<0>(__p, "HashtableLookupDouble");
    std::allocate_shared[abi:ne180100]<mediaplatform::SQLFunctionExpression,std::allocator<mediaplatform::SQLFunctionExpression>,std::string,std::vector<std::shared_ptr<mediaplatform::SQLExpression const>> &,void>(&v75, (__int128 *)__p, &v72);
    *a3 = v75;
    if ((__p[23] & 0x80000000) != 0)
      operator delete(*(void **)__p);
    *(_QWORD *)__p = &v72;
    std::vector<std::shared_ptr<mediaplatform::SQLExpression const>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
    v28 = (std::__shared_weak_count *)*((_QWORD *)&v74 + 1);
    if (*((_QWORD *)&v74 + 1))
    {
      v29 = (unint64_t *)(*((_QWORD *)&v74 + 1) + 8);
      do
        v30 = __ldaxr(v29);
      while (__stlxr(v30 - 1, v29));
      if (!v30)
      {
        ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
        std::__shared_weak_count::__release_weak(v28);
      }
    }
  }
  else
  {
    v72 = 0uLL;
    v73 = 0;
    for (j = *(_QWORD **)(a1 + 32); j; j = (_QWORD *)*j)
    {
      v32 = j[2];
      v33 = (std::__shared_weak_count *)operator new(0x28uLL);
      v33->__shared_owners_ = 0;
      v34 = (unint64_t *)&v33->__shared_owners_;
      v33->__shared_weak_owners_ = 0;
      v33->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33BCD0;
      v33[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24C335CB8;
      v33[1].__shared_owners_ = v32;
      *(_QWORD *)&v75 = v33 + 1;
      *((_QWORD *)&v75 + 1) = v33;
      std::allocate_shared[abi:ne180100]<mediaplatform::DatabaseBindParameter,std::allocator<mediaplatform::DatabaseBindParameter>,std::shared_ptr<mediaplatform::DatabaseParameter<int>> &,void>(&v71, (uint64_t)&v33[1], v33);
      v35 = v71;
      v74 = v71;
      v71 = 0uLL;
      v36 = v72.i64[1];
      if (v72.i64[1] >= (unint64_t)v73)
      {
        v65 = v35;
        v38 = (v72.i64[1] - v72.i64[0]) >> 4;
        if ((unint64_t)(v38 + 1) >> 60)
          std::vector<std::string>::__throw_length_error[abi:ne180100]();
        v39 = (uint64_t)&v73[-v72.i64[0]] >> 3;
        if (v39 <= v38 + 1)
          v39 = v38 + 1;
        if ((unint64_t)&v73[-v72.i64[0]] >= 0x7FFFFFFFFFFFFFF0)
          v40 = 0xFFFFFFFFFFFFFFFLL;
        else
          v40 = v39;
        v77 = &v73;
        v41 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<mediaplatform::DatabaseParameterBase>>>(v40);
        v43 = &v41[16 * v38];
        *(_OWORD *)v43 = v65;
        v74 = 0uLL;
        v44 = (_QWORD *)v72.i64[1];
        v45 = (_QWORD *)v72.i64[0];
        if (v72.i64[1] == v72.i64[0])
        {
          v48 = vdupq_n_s64(v72.u64[1]);
          v46 = &v41[16 * v38];
        }
        else
        {
          v46 = &v41[16 * v38];
          do
          {
            v47 = *((_OWORD *)v44 - 1);
            v44 -= 2;
            *((_OWORD *)v46 - 1) = v47;
            v46 -= 16;
            *v44 = 0;
            v44[1] = 0;
          }
          while (v44 != v45);
          v48 = v72;
        }
        v37 = v43 + 16;
        v72.i64[0] = (uint64_t)v46;
        v72.i64[1] = (uint64_t)(v43 + 16);
        *(int64x2_t *)&__p[8] = v48;
        v49 = v73;
        v73 = &v41[16 * v42];
        *(_QWORD *)&__p[24] = v49;
        *(_QWORD *)__p = v48.i64[0];
        std::__split_buffer<std::shared_ptr<mediaplatform::SQLExpression const>>::~__split_buffer((uint64_t)__p);
      }
      else
      {
        *(_OWORD *)v72.i64[1] = v35;
        v37 = (_OWORD *)(v36 + 16);
        v74 = 0uLL;
      }
      v72.i64[1] = (uint64_t)v37;
      do
        v50 = __ldaxr(v34);
      while (__stlxr(v50 - 1, v34));
      if (!v50)
      {
        ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
        std::__shared_weak_count::__release_weak(v33);
      }
    }
    v51 = *(_QWORD *)(a1 + 8);
    v52 = (std::__shared_weak_count *)a2[1];
    v66 = *a2;
    v67 = v52;
    if (v52)
    {
      v53 = (unint64_t *)&v52->__shared_owners_;
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    (*(void (**)(_BYTE *__return_ptr, uint64_t, uint64_t *))(*(_QWORD *)v51 + 96))(__p, v51, &v66);
    v55 = v67;
    if (v67)
    {
      v56 = (unint64_t *)&v67->__shared_owners_;
      do
        v57 = __ldaxr(v56);
      while (__stlxr(v57 - 1, v56));
      if (!v57)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    std::allocate_shared[abi:ne180100]<mediaplatform::SQLExpressionList,std::allocator<mediaplatform::SQLExpressionList>,std::vector<std::shared_ptr<mediaplatform::SQLExpression const>> &,void>(&v75, (char *)v72.i64[0], (char *)v72.i64[1]);
    LODWORD(v71) = 21;
    std::allocate_shared[abi:ne180100]<mediaplatform::SQLBinaryExpression,std::allocator<mediaplatform::SQLBinaryExpression>,std::shared_ptr<mediaplatform::SQLExpression> &,mediaplatform::SQLBinaryExpression::BinaryOperator,std::shared_ptr<mediaplatform::DatabaseBindParameter> &,void>(&v74, *(uint64_t *)__p, *(std::__shared_weak_count **)&__p[8], (int *)&v71, (uint64_t *)&v75);
    *a3 = v74;
    v58 = (std::__shared_weak_count *)*((_QWORD *)&v75 + 1);
    if (*((_QWORD *)&v75 + 1))
    {
      v59 = (unint64_t *)(*((_QWORD *)&v75 + 1) + 8);
      do
        v60 = __ldaxr(v59);
      while (__stlxr(v60 - 1, v59));
      if (!v60)
      {
        ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
        std::__shared_weak_count::__release_weak(v58);
      }
    }
    v61 = *(std::__shared_weak_count **)&__p[8];
    if (*(_QWORD *)&__p[8])
    {
      v62 = (unint64_t *)(*(_QWORD *)&__p[8] + 8);
      do
        v63 = __ldaxr(v62);
      while (__stlxr(v63 - 1, v62));
      if (!v63)
      {
        ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
        std::__shared_weak_count::__release_weak(v61);
      }
    }
    *(_QWORD *)__p = &v72;
    std::vector<std::shared_ptr<mediaplatform::SQLExpression const>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
  }
}

void sub_20A8653C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, char a17, uint64_t a18, char a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,char *a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a27);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&__p);
  a27 = &a21;
  std::vector<std::shared_ptr<mediaplatform::SQLExpression const>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a27);
  _Unwind_Resume(a1);
}

void mlcore::InPredicate<int>::~InPredicate(_QWORD *a1)
{
  *a1 = &unk_24C336940;
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)(a1 + 8));
  std::__hash_table<mlcore::ModelPropertyBase *,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::allocator<mlcore::ModelPropertyBase *>>::~__hash_table((uint64_t)(a1 + 2));
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mlcore::InPredicate<int>::description(uint64_t a1)
{
  void **v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char i;
  void *__p[2];
  unsigned __int8 v9;
  _QWORD v10[11];
  char v11;
  uint64_t v12;

  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v10);
  (*(void (**)(void **__return_ptr))(**(_QWORD **)(a1 + 8) + 40))(__p);
  if ((v9 & 0x80u) == 0)
    v2 = __p;
  else
    v2 = (void **)__p[0];
  if ((v9 & 0x80u) == 0)
    v3 = v9;
  else
    v3 = (uint64_t)__p[1];
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)v2, v3);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)" in [", 5);
  if ((char)v9 < 0)
    operator delete(__p[0]);
  v4 = *(_QWORD *)(a1 + 64);
  if (!v4)
    v4 = a1 + 16;
  v5 = (_QWORD *)(v4 + 16);
  for (i = 1; ; i = 0)
  {
    v5 = (_QWORD *)*v5;
    if (!v5)
      break;
    if ((i & 1) == 0)
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)", ", 2);
    std::ostream::operator<<();
  }
  LOBYTE(__p[0]) = 93;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)__p, 1);
  std::stringbuf::str();
  v10[0] = *MEMORY[0x24BEDB800];
  *(_QWORD *)((char *)v10 + *(_QWORD *)(v10[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB800] + 24);
  v10[1] = MEMORY[0x24BEDB848] + 16;
  if (v11 < 0)
    operator delete((void *)v10[9]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x20BD27A84](&v12);
}

void sub_20A86569C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  std::ostringstream::~ostringstream((uint64_t)&a15);
  _Unwind_Resume(a1);
}

BOOL mlcore::InPredicate<int>::matches(uint64_t a1, _QWORD *a2)
{
  int v3;
  uint64_t *v4;

  v3 = mlcore::PropertyCacheBase<int,double,std::string,mediaplatform::Data>::valueForProperty(*a2 + 8, *(_QWORD *)(a1 + 8));
  v4 = (uint64_t *)(a1 + 32);
  do
    v4 = (uint64_t *)*v4;
  while (v4 && v3 != *((_DWORD *)v4 + 4));
  return v4 != 0;
}

_QWORD *mlcore::InPredicate<mediaplatform::Data>::~InPredicate(_QWORD *a1)
{
  *a1 = &unk_24C336838;
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)(a1 + 8));
  std::__hash_table<mediaplatform::Data,std::hash<mediaplatform::Data>,std::equal_to<mediaplatform::Data>,std::allocator<mediaplatform::Data>>::~__hash_table((uint64_t)(a1 + 2));
  return a1;
}

void mlcore::InPredicate<mediaplatform::Data>::~InPredicate(_QWORD *a1)
{
  *a1 = &unk_24C336838;
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)(a1 + 8));
  std::__hash_table<mediaplatform::Data,std::hash<mediaplatform::Data>,std::equal_to<mediaplatform::Data>,std::allocator<mediaplatform::Data>>::~__hash_table((uint64_t)(a1 + 2));
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mlcore::InPredicate<mediaplatform::Data>::description(uint64_t a1)
{
  void *p_p;
  uint64_t v3;
  _QWORD *v4;
  char v5;
  const void *v6;
  size_t v7;
  void *v8;
  std::string *v9;
  std::string::size_type size;
  std::string v12;
  void *__p;
  size_t v14;
  int64_t v15;
  void *v16;
  char v17;
  _QWORD v18[11];
  char v19;
  uint64_t v20;

  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v18);
  (*(void (**)(void **__return_ptr))(**(_QWORD **)(a1 + 8) + 40))(&__p);
  if (v15 >= 0)
    p_p = &__p;
  else
    p_p = __p;
  if (v15 >= 0)
    v3 = HIBYTE(v15);
  else
    v3 = v14;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18, (uint64_t)p_p, v3);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18, (uint64_t)" in [", 5);
  if (SHIBYTE(v15) < 0)
    operator delete(__p);
  v4 = *(_QWORD **)(a1 + 32);
  if (v4)
  {
    v5 = 1;
    while (1)
    {
      v6 = (const void *)v4[5];
      v7 = v4[3];
      __p = &off_24C331510;
      v14 = v7;
      v15 = v7;
      v8 = v7 ? (void *)operator new[]() : 0;
      v16 = v8;
      v17 = 1;
      if (!v6)
        break;
      memcpy(v8, v6, v7);
      if ((v5 & 1) == 0)
        goto LABEL_18;
LABEL_19:
      mediaplatform::Base16Representation((uint64_t)&__p, &v12);
      if ((v12.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v9 = &v12;
      else
        v9 = (std::string *)v12.__r_.__value_.__r.__words[0];
      if ((v12.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(v12.__r_.__value_.__r.__words[2]);
      else
        size = v12.__r_.__value_.__l.__size_;
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18, (uint64_t)v9, size);
      if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v12.__r_.__value_.__l.__data_);
        if (!v8)
          goto LABEL_28;
LABEL_27:
        MEMORY[0x20BD27AE4](v8, 0x1000C8077774924);
        goto LABEL_28;
      }
      if (v8)
        goto LABEL_27;
LABEL_28:
      v5 = 0;
      v4 = (_QWORD *)*v4;
      if (!v4)
        goto LABEL_32;
    }
    bzero(v8, v7);
    if ((v5 & 1) != 0)
      goto LABEL_19;
LABEL_18:
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18, (uint64_t)", ", 2);
    goto LABEL_19;
  }
LABEL_32:
  LOBYTE(__p) = 93;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18, (uint64_t)&__p, 1);
  std::stringbuf::str();
  v18[0] = *MEMORY[0x24BEDB800];
  *(_QWORD *)((char *)v18 + *(_QWORD *)(v18[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB800] + 24);
  v18[1] = MEMORY[0x24BEDB848] + 16;
  if (v19 < 0)
    operator delete((void *)v18[9]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x20BD27A84](&v20);
}

void sub_20A8659E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,char a23)
{
  std::ostringstream::~ostringstream((uint64_t)&a23);
  _Unwind_Resume(a1);
}

BOOL mlcore::InPredicate<mediaplatform::Data>::matches(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  const void *v4;
  size_t v5;
  void *v6;
  BOOL v7;
  _QWORD v9[3];
  void *__s1;
  char v11;

  mlcore::PropertyCacheBase<mediaplatform::Data>::valueForProperty((mediaplatform::Data *)v9, *a2 + 8, *(_QWORD *)(a1 + 8));
  v3 = (_QWORD *)(a1 + 32);
  do
  {
    v3 = (_QWORD *)*v3;
    if (!v3)
      break;
    v4 = (const void *)v3[5];
    v5 = v3[3];
    if (v5)
      v6 = (void *)operator new[]();
    else
      v6 = 0;
    if (v4)
      memcpy(v6, v4, v5);
    else
      bzero(v6, v5);
    if (v5 == v9[1])
    {
      v7 = memcmp(__s1, v6, v5) == 0;
      if (!v6)
        continue;
LABEL_13:
      MEMORY[0x20BD27AE4](v6, 0x1000C8077774924);
      continue;
    }
    v7 = 0;
    if (v6)
      goto LABEL_13;
  }
  while (!v7);
  v9[0] = &off_24C331510;
  if (v11 && __s1)
    MEMORY[0x20BD27AE4](__s1, 0x1000C8077774924);
  return v3 != 0;
}

void sub_20A865B7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  if (a14)
  {
    if (a13)
      MEMORY[0x20BD27AE4](a13, 0x1000C8077774924);
  }
  _Unwind_Resume(exception_object);
}

void mlcore::InPredicate<mediaplatform::Data>::_SQLExpression(uint64_t a1@<X0>, uint64_t *a2@<X1>, int64x2_t *a3@<X8>)
{
  std::__shared_weak_count *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void (**v11)(mediaplatform::Data *__hidden);
  char v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t i;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  _QWORD *j;
  const void *v32;
  size_t v33;
  void *v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  __int128 v37;
  uint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  _QWORD *v46;
  _QWORD *v47;
  char *v48;
  __int128 v49;
  int64x2_t v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  __int128 v69;
  uint64_t v70;
  std::__shared_weak_count *v71;
  void (**v72)(mediaplatform::Data *__hidden);
  std::__shared_weak_count *v73;
  _QWORD *v74;
  void *v75;
  char v76;
  int64x2_t v77;
  char *v78;
  uint64_t v79;
  std::__shared_weak_count *v80;
  __int128 v81;
  __int128 v82;
  int64x2_t v83;
  _BYTE v84[32];
  char **v85;
  uint64_t v86;

  v86 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a1 + 64))
  {
    v6 = (std::__shared_weak_count *)operator new(0x28uLL);
    v6->__shared_owners_ = 0;
    v6->__shared_weak_owners_ = 0;
    v6->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33BD08;
    v6[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24C335D00;
    LODWORD(v6[1].__shared_owners_) = *(_DWORD *)(a1 + 56);
    v83.i64[0] = (uint64_t)&v6[1];
    v83.i64[1] = (uint64_t)v6;
    std::allocate_shared[abi:ne180100]<mediaplatform::DatabaseBindParameter,std::allocator<mediaplatform::DatabaseBindParameter>,std::shared_ptr<mediaplatform::DatabaseParameter<int>> &,void>(&v82, (uint64_t)&v6[1], v6);
    *(_OWORD *)v84 = v82;
    v82 = 0uLL;
    v7 = *(_QWORD *)(a1 + 8);
    v8 = (std::__shared_weak_count *)a2[1];
    v79 = *a2;
    v80 = v8;
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
    }
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t *))(*(_QWORD *)v7 + 96))(&v81, v7, &v79);
    *(_OWORD *)&v84[16] = v81;
    v81 = 0uLL;
    v73 = 0;
    v74 = 0;
    v72 = 0;
    v77.i64[0] = (uint64_t)&v72;
    v77.i8[8] = 0;
    v11 = (void (**)(mediaplatform::Data *__hidden))operator new(0x20uLL);
    v12 = 0;
    v13 = 0;
    v72 = v11;
    v73 = (std::__shared_weak_count *)v11;
    v74 = v11 + 4;
    do
    {
      v14 = v12;
      v15 = *(_OWORD *)&v84[16 * v13];
      *(_OWORD *)v11 = v15;
      if (*((_QWORD *)&v15 + 1))
      {
        v16 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
        do
          v17 = __ldxr(v16);
        while (__stxr(v17 + 1, v16));
      }
      v11 += 2;
      v12 = 1;
      v13 = 1;
    }
    while ((v14 & 1) == 0);
    v73 = (std::__shared_weak_count *)v11;
    for (i = 16; i != -16; i -= 16)
      std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&v84[i]);
    v19 = (std::__shared_weak_count *)*((_QWORD *)&v81 + 1);
    if (*((_QWORD *)&v81 + 1))
    {
      v20 = (unint64_t *)(*((_QWORD *)&v81 + 1) + 8);
      do
        v21 = __ldaxr(v20);
      while (__stlxr(v21 - 1, v20));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    v22 = v80;
    if (v80)
    {
      v23 = (unint64_t *)&v80->__shared_owners_;
      do
        v24 = __ldaxr(v23);
      while (__stlxr(v24 - 1, v23));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
    }
    v25 = (std::__shared_weak_count *)*((_QWORD *)&v82 + 1);
    if (*((_QWORD *)&v82 + 1))
    {
      v26 = (unint64_t *)(*((_QWORD *)&v82 + 1) + 8);
      do
        v27 = __ldaxr(v26);
      while (__stlxr(v27 - 1, v26));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v25);
      }
    }
    std::string::basic_string[abi:ne180100]<0>(v84, "HashtableLookupData");
    std::allocate_shared[abi:ne180100]<mediaplatform::SQLFunctionExpression,std::allocator<mediaplatform::SQLFunctionExpression>,std::string,std::vector<std::shared_ptr<mediaplatform::SQLExpression const>> &,void>(&v77, (__int128 *)v84, &v72);
    *a3 = v77;
    if ((v84[23] & 0x80000000) != 0)
      operator delete(*(void **)v84);
    *(_QWORD *)v84 = &v72;
    std::vector<std::shared_ptr<mediaplatform::SQLExpression const>>::__destroy_vector::operator()[abi:ne180100]((void ***)v84);
    v28 = (std::__shared_weak_count *)v83.i64[1];
    if (v83.i64[1])
    {
      v29 = (unint64_t *)(v83.i64[1] + 8);
      do
        v30 = __ldaxr(v29);
      while (__stlxr(v30 - 1, v29));
      if (!v30)
      {
        ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
        std::__shared_weak_count::__release_weak(v28);
      }
    }
  }
  else
  {
    v77 = 0uLL;
    v78 = 0;
    for (j = *(_QWORD **)(a1 + 32); j; j = (_QWORD *)*j)
    {
      v32 = (const void *)j[5];
      v33 = j[3];
      v72 = &off_24C331510;
      v73 = (std::__shared_weak_count *)v33;
      v74 = (_QWORD *)v33;
      if (v33)
        v34 = (void *)operator new[]();
      else
        v34 = 0;
      v75 = v34;
      v76 = 1;
      if (v32)
        memcpy(v34, v32, v33);
      else
        bzero(v34, v33);
      v35 = (std::__shared_weak_count *)operator new(0x48uLL);
      v35->__shared_owners_ = 0;
      v36 = (unint64_t *)&v35->__shared_owners_;
      v35->__shared_weak_owners_ = 0;
      v35->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33BC60;
      v35[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24C335C28;
      mediaplatform::Data::Data((mediaplatform::Data *)&v35[1].__shared_owners_, (const mediaplatform::Data *)&v72);
      v83.i64[0] = (uint64_t)&v35[1];
      v83.i64[1] = (uint64_t)v35;
      std::allocate_shared[abi:ne180100]<mediaplatform::DatabaseBindParameter,std::allocator<mediaplatform::DatabaseBindParameter>,std::shared_ptr<mediaplatform::DatabaseParameter<int>> &,void>(&v81, (uint64_t)&v35[1], v35);
      v37 = v81;
      v82 = v81;
      v81 = 0uLL;
      v38 = v77.i64[1];
      if (v77.i64[1] >= (unint64_t)v78)
      {
        v69 = v37;
        v40 = (v77.i64[1] - v77.i64[0]) >> 4;
        if ((unint64_t)(v40 + 1) >> 60)
          std::vector<std::string>::__throw_length_error[abi:ne180100]();
        v41 = (uint64_t)&v78[-v77.i64[0]] >> 3;
        if (v41 <= v40 + 1)
          v41 = v40 + 1;
        if ((unint64_t)&v78[-v77.i64[0]] >= 0x7FFFFFFFFFFFFFF0)
          v42 = 0xFFFFFFFFFFFFFFFLL;
        else
          v42 = v41;
        v85 = &v78;
        v43 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<mediaplatform::DatabaseParameterBase>>>(v42);
        v45 = &v43[16 * v40];
        *(_OWORD *)v45 = v69;
        v82 = 0uLL;
        v46 = (_QWORD *)v77.i64[1];
        v47 = (_QWORD *)v77.i64[0];
        if (v77.i64[1] == v77.i64[0])
        {
          v50 = vdupq_n_s64(v77.u64[1]);
          v48 = &v43[16 * v40];
        }
        else
        {
          v48 = &v43[16 * v40];
          do
          {
            v49 = *((_OWORD *)v46 - 1);
            v46 -= 2;
            *((_OWORD *)v48 - 1) = v49;
            v48 -= 16;
            *v46 = 0;
            v46[1] = 0;
          }
          while (v46 != v47);
          v50 = v77;
        }
        v39 = v45 + 16;
        v77.i64[0] = (uint64_t)v48;
        v77.i64[1] = (uint64_t)(v45 + 16);
        *(int64x2_t *)&v84[8] = v50;
        v51 = v78;
        v78 = &v43[16 * v44];
        *(_QWORD *)&v84[24] = v51;
        *(_QWORD *)v84 = v50.i64[0];
        std::__split_buffer<std::shared_ptr<mediaplatform::SQLExpression const>>::~__split_buffer((uint64_t)v84);
      }
      else
      {
        *(_OWORD *)v77.i64[1] = v37;
        v39 = (_OWORD *)(v38 + 16);
        v82 = 0uLL;
      }
      v77.i64[1] = (uint64_t)v39;
      do
        v52 = __ldaxr(v36);
      while (__stlxr(v52 - 1, v36));
      if (!v52)
      {
        ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
        std::__shared_weak_count::__release_weak(v35);
      }
      if (v76 && v75)
        MEMORY[0x20BD27AE4](v75, 0x1000C8077774924);
    }
    v53 = *(_QWORD *)(a1 + 8);
    v54 = (std::__shared_weak_count *)a2[1];
    v70 = *a2;
    v71 = v54;
    if (v54)
    {
      v55 = (unint64_t *)&v54->__shared_owners_;
      do
        v56 = __ldxr(v55);
      while (__stxr(v56 + 1, v55));
    }
    (*(void (**)(_BYTE *__return_ptr, uint64_t, uint64_t *))(*(_QWORD *)v53 + 96))(v84, v53, &v70);
    v57 = v71;
    if (v71)
    {
      v58 = (unint64_t *)&v71->__shared_owners_;
      do
        v59 = __ldaxr(v58);
      while (__stlxr(v59 - 1, v58));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
        std::__shared_weak_count::__release_weak(v57);
      }
    }
    std::allocate_shared[abi:ne180100]<mediaplatform::SQLExpressionList,std::allocator<mediaplatform::SQLExpressionList>,std::vector<std::shared_ptr<mediaplatform::SQLExpression const>> &,void>(&v72, (char *)v77.i64[0], (char *)v77.i64[1]);
    LODWORD(v82) = 21;
    std::allocate_shared[abi:ne180100]<mediaplatform::SQLBinaryExpression,std::allocator<mediaplatform::SQLBinaryExpression>,std::shared_ptr<mediaplatform::SQLExpression> &,mediaplatform::SQLBinaryExpression::BinaryOperator,std::shared_ptr<mediaplatform::DatabaseBindParameter> &,void>(&v83, *(uint64_t *)v84, *(std::__shared_weak_count **)&v84[8], (int *)&v82, (uint64_t *)&v72);
    *a3 = v83;
    v60 = v73;
    if (v73)
    {
      v61 = (unint64_t *)&v73->__shared_owners_;
      do
        v62 = __ldaxr(v61);
      while (__stlxr(v62 - 1, v61));
      if (!v62)
      {
        ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
        std::__shared_weak_count::__release_weak(v60);
      }
    }
    v63 = *(std::__shared_weak_count **)&v84[8];
    if (*(_QWORD *)&v84[8])
    {
      v64 = (unint64_t *)(*(_QWORD *)&v84[8] + 8);
      do
        v65 = __ldaxr(v64);
      while (__stlxr(v65 - 1, v64));
      if (!v65)
      {
        ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
        std::__shared_weak_count::__release_weak(v63);
      }
    }
    *(_QWORD *)v84 = &v77;
    std::vector<std::shared_ptr<mediaplatform::SQLExpression const>>::__destroy_vector::operator()[abi:ne180100]((void ***)v84);
  }
}

void sub_20A8661D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void **a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  uint64_t v23;

  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a18);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100](v23 - 144);
  a18 = (void **)&a23;
  std::vector<std::shared_ptr<mediaplatform::SQLExpression const>>::__destroy_vector::operator()[abi:ne180100](&a18);
  _Unwind_Resume(a1);
}

void sub_20A86637C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__hash_table<mlcore::ModelPropertyBase *,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::allocator<mlcore::ModelPropertyBase *>>::~__hash_table((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *mlcore::InPredicateBase::InPredicateBase(_QWORD *this, mlcore::ModelPropertyBase *a2)
{
  *this = off_24C337FA0;
  this[1] = a2;
  return this;
}

uint64_t mlcore::InPredicate<long long>::InPredicate(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  *(_QWORD *)result = &unk_24C336998;
  *(_QWORD *)(result + 8) = a2;
  *(_OWORD *)(result + 16) = 0u;
  *(_OWORD *)(result + 32) = 0u;
  *(_DWORD *)(result + 48) = 1065353216;
  *(_DWORD *)(result + 56) = *(_DWORD *)a3;
  v3 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + 64) = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(result + 72) = v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

{
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  *(_QWORD *)result = &unk_24C336998;
  *(_QWORD *)(result + 8) = a2;
  *(_OWORD *)(result + 16) = 0u;
  *(_OWORD *)(result + 32) = 0u;
  *(_DWORD *)(result + 48) = 1065353216;
  *(_DWORD *)(result + 56) = *(_DWORD *)a3;
  v3 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + 64) = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(result + 72) = v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

uint64_t mlcore::InPredicate<long long>::property(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t mlcore::InPredicate<long long>::value(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 64))
    return *(_QWORD *)(a1 + 64);
  else
    return a1 + 16;
}

_QWORD *mlcore::InPredicate<long long>::_lookupFunctionName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "HashtableLookupInt64");
}

uint64_t mlcore::InPredicate<std::string>::InPredicate(uint64_t a1, uint64_t a2, unsigned __int8 **a3)
{
  void *v5;
  void *__p[5];

  std::unordered_set<std::string>::unordered_set<std::__wrap_iter<std::string const*>>((uint64_t)__p, *a3, a3[1]);
  mlcore::InPredicate<std::string>::InPredicate(a1, a2, (uint64_t)__p);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__deallocate_node((void **)__p[2]);
  v5 = __p[0];
  __p[0] = 0;
  if (v5)
    operator delete(v5);
  return a1;
}

{
  void *v5;
  void *__p[5];

  std::unordered_set<std::string>::unordered_set<std::__wrap_iter<std::string const*>>((uint64_t)__p, *a3, a3[1]);
  mlcore::InPredicate<std::string>::InPredicate(a1, a2, (uint64_t)__p);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__deallocate_node((void **)__p[2]);
  v5 = __p[0];
  __p[0] = 0;
  if (v5)
    operator delete(v5);
  return a1;
}

void sub_20A8664C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t mlcore::InPredicate<std::string>::InPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  __int128 v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t *i;
  char *v13;
  uint64_t v14;
  _OWORD *v15;
  __int128 v16;
  int v18;
  __int128 v19;

  *(_QWORD *)a1 = &unk_24C336890;
  *(_QWORD *)(a1 + 8) = a2;
  *(_OWORD *)(a1 + 16) = 0u;
  v4 = a1 + 16;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_DWORD *)(a1 + 48) = 1065353216;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  if (*(_QWORD *)(a3 + 24) < 0x1F5uLL)
  {
    if (v4 != a3)
    {
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a3 + 32);
      for (i = *(uint64_t **)(a3 + 16); i; i = (uint64_t *)*i)
      {
        v13 = (char *)operator new(0x28uLL);
        v14 = (uint64_t)v13;
        v15 = v13 + 16;
        *(_QWORD *)v13 = 0;
        *((_QWORD *)v13 + 1) = 0;
        if (*((char *)i + 39) < 0)
        {
          std::string::__init_copy_ctor_external((std::string *)(v13 + 16), (const std::string::value_type *)i[2], i[3]);
        }
        else
        {
          v16 = *((_OWORD *)i + 1);
          *((_QWORD *)v13 + 4) = i[4];
          *v15 = v16;
        }
        *(_QWORD *)(v14 + 8) = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)v15);
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__node_insert_multi(v4, v14);
      }
    }
  }
  else
  {
    mlcore::SharedObject<std::unordered_set<std::string>,int>::create<std::unordered_set<std::string> const&>((uint64_t)&v18, a3);
    *(_DWORD *)(a1 + 56) = v18;
    v5 = v19;
    v19 = 0uLL;
    v6 = *(std::__shared_weak_count **)(a1 + 72);
    *(_OWORD *)(a1 + 64) = v5;
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
    v9 = (std::__shared_weak_count *)*((_QWORD *)&v19 + 1);
    if (*((_QWORD *)&v19 + 1))
    {
      v10 = (unint64_t *)(*((_QWORD *)&v19 + 1) + 8);
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
  }
  return a1;
}

{
  return __ZN6mlcore11InPredicateINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEC2EPNS_13ModelPropertyIS7_EERKNS1_13unordered_setIS7_NS1_4hashIS7_EENS1_8equal_toIS7_EENS5_IS7_EEEE(a1, a2, a3);
}

void sub_20A866660(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100](v2);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

void std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__node_insert_multi(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unsigned __int8 *v4;
  unint64_t v5;
  float v6;
  float v7;
  _BOOL8 v8;
  unint64_t v9;
  unint64_t v10;
  int8x8_t prime;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint8x8_t v17;
  unint64_t v18;
  unint64_t v19;
  uint8x8_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  void *v27;
  uint8x8_t v28;
  unint64_t v29;
  unint64_t v30;
  unsigned __int8 *v31;
  unsigned __int8 *v32;
  int v33;
  unsigned __int8 *v34;
  unint64_t v35;
  unint64_t v36;
  _BOOL4 v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  unsigned __int8 *v41;
  unint64_t v42;
  unint64_t v43;

  v2 = (_QWORD *)a2;
  v4 = (unsigned __int8 *)(a2 + 16);
  v43 = std::__string_hash<char>::operator()[abi:ne180100](a2 + 16);
  v2[1] = v43;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v7 = *(float *)(a1 + 32);
  if (!v5 || (float)(v7 * (float)v5) < v6)
  {
    v8 = 1;
    if (v5 >= 3)
      v8 = (v5 & (v5 - 1)) != 0;
    v9 = v8 | (2 * v5);
    v10 = vcvtps_u32_f32(v6 / v7);
    if (v9 <= v10)
      prime = (int8x8_t)v10;
    else
      prime = (int8x8_t)v9;
    if (*(_QWORD *)&prime == 1)
    {
      prime = (int8x8_t)2;
    }
    else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
    {
      prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
      v5 = *(_QWORD *)(a1 + 8);
    }
    if (*(_QWORD *)&prime > v5)
      goto LABEL_99;
    if (*(_QWORD *)&prime >= v5)
      goto LABEL_60;
    v19 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (v5 < 3 || (v20 = (uint8x8_t)vcnt_s8((int8x8_t)v5), v20.i16[0] = vaddlv_u8(v20), v20.u32[0] > 1uLL))
    {
      v19 = std::__next_prime(v19);
    }
    else
    {
      v21 = 1 << -(char)__clz(v19 - 1);
      if (v19 >= 2)
        v19 = v21;
    }
    if (*(_QWORD *)&prime <= v19)
      prime = (int8x8_t)v19;
    if (*(_QWORD *)&prime >= v5)
    {
      v5 = *(_QWORD *)(a1 + 8);
      goto LABEL_60;
    }
    if (prime)
    {
LABEL_99:
      if (*(_QWORD *)&prime >> 61)
        std::__throw_bad_array_new_length[abi:ne180100]();
      v12 = operator new(8 * *(_QWORD *)&prime);
      v13 = *(void **)a1;
      *(_QWORD *)a1 = v12;
      if (v13)
        operator delete(v13);
      v41 = v4;
      v14 = 0;
      *(int8x8_t *)(a1 + 8) = prime;
      do
        *(_QWORD *)(*(_QWORD *)a1 + 8 * v14++) = 0;
      while (*(_QWORD *)&prime != v14);
      v15 = *(uint64_t **)(a1 + 16);
      if (v15)
      {
        v16 = v15[1];
        v17 = (uint8x8_t)vcnt_s8(prime);
        v17.i16[0] = vaddlv_u8(v17);
        v18 = v17.u32[0];
        v40 = v2;
        if (v17.u32[0] > 1uLL)
        {
          if (v16 >= *(_QWORD *)&prime)
            v16 %= *(_QWORD *)&prime;
        }
        else
        {
          v16 &= *(_QWORD *)&prime - 1;
        }
        *(_QWORD *)(*(_QWORD *)a1 + 8 * v16) = a1 + 16;
        v22 = *v15;
        if (*v15)
        {
          v42 = v17.u32[0];
          do
          {
            v23 = *(_QWORD *)(v22 + 8);
            if (v18 > 1)
            {
              if (v23 >= *(_QWORD *)&prime)
                v23 %= *(_QWORD *)&prime;
            }
            else
            {
              v23 &= *(_QWORD *)&prime - 1;
            }
            if (v23 == v16)
            {
              v15 = (uint64_t *)v22;
            }
            else if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v23))
            {
              v24 = *(_QWORD **)v22;
              if (*(_QWORD *)v22)
              {
                v25 = (_QWORD *)v22;
                while (1)
                {
                  v26 = v24;
                  if (!std::equal_to<std::string>::operator()[abi:ne180100]((unsigned __int8 *)(v22 + 16), (unsigned __int8 *)v24 + 16))break;
                  v24 = (_QWORD *)*v26;
                  v25 = v26;
                  if (!*v26)
                    goto LABEL_47;
                }
                v24 = v26;
                v26 = v25;
LABEL_47:
                v18 = v42;
              }
              else
              {
                v26 = (_QWORD *)v22;
              }
              *v15 = (uint64_t)v24;
              *v26 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v23);
              **(_QWORD **)(*(_QWORD *)a1 + 8 * v23) = v22;
            }
            else
            {
              *(_QWORD *)(*(_QWORD *)a1 + 8 * v23) = v15;
              v15 = (uint64_t *)v22;
              v16 = v23;
            }
            v22 = *v15;
          }
          while (*v15);
        }
        v5 = (unint64_t)prime;
        v2 = v40;
        v4 = v41;
      }
      else
      {
        v5 = (unint64_t)prime;
        v4 = v41;
      }
    }
    else
    {
      v27 = *(void **)a1;
      *(_QWORD *)a1 = 0;
      if (v27)
        operator delete(v27);
      v5 = 0;
      *(_QWORD *)(a1 + 8) = 0;
    }
  }
LABEL_60:
  v28 = (uint8x8_t)vcnt_s8((int8x8_t)v5);
  v28.i16[0] = vaddlv_u8(v28);
  v29 = v28.u32[0];
  if (v28.u32[0] > 1uLL)
  {
    v30 = v43;
    if (v5 <= v43)
      v30 = v43 % v5;
  }
  else
  {
    v30 = (v5 - 1) & v43;
  }
  v31 = *(unsigned __int8 **)(*(_QWORD *)a1 + 8 * v30);
  if (v31)
  {
    v32 = *(unsigned __int8 **)v31;
    if (*(_QWORD *)v31)
    {
      v33 = 0;
      do
      {
        v34 = v32;
        v35 = *((_QWORD *)v32 + 1);
        if (v29 > 1)
        {
          v36 = v35;
          if (v35 >= v5)
            v36 = v35 % v5;
        }
        else
        {
          v36 = v35 & (v5 - 1);
        }
        if (v36 != v30)
          break;
        v37 = v35 == v43 && std::equal_to<std::string>::operator()[abi:ne180100](v34 + 16, v4);
        if ((v33 & !v37 & 1) != 0)
          break;
        v33 |= v37;
        v32 = *(unsigned __int8 **)v34;
        v31 = v34;
      }
      while (*(_QWORD *)v34);
    }
  }
  v38 = v2[1];
  if (v29 > 1)
  {
    if (v38 >= v5)
      v38 %= v5;
  }
  else
  {
    v38 &= v5 - 1;
  }
  if (!v31)
  {
    *v2 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v2;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v38) = a1 + 16;
    if (!*v2)
      goto LABEL_95;
    v39 = *(_QWORD *)(*v2 + 8);
    if (v29 > 1)
    {
      if (v39 >= v5)
        v39 %= v5;
    }
    else
    {
      v39 &= v5 - 1;
    }
LABEL_94:
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v39) = v2;
    goto LABEL_95;
  }
  *v2 = *(_QWORD *)v31;
  *(_QWORD *)v31 = v2;
  if (*v2)
  {
    v39 = *(_QWORD *)(*v2 + 8);
    if (v29 > 1)
    {
      if (v39 >= v5)
        v39 %= v5;
    }
    else
    {
      v39 &= v5 - 1;
    }
    if (v39 != v38)
      goto LABEL_94;
  }
LABEL_95:
  ++*(_QWORD *)(a1 + 24);
}

void sub_20A866B94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t mlcore::InPredicate<std::string>::InPredicate(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  *(_QWORD *)result = &unk_24C336890;
  *(_QWORD *)(result + 8) = a2;
  *(_OWORD *)(result + 16) = 0u;
  *(_OWORD *)(result + 32) = 0u;
  *(_DWORD *)(result + 48) = 1065353216;
  *(_DWORD *)(result + 56) = *(_DWORD *)a3;
  v3 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + 64) = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(result + 72) = v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

{
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  *(_QWORD *)result = &unk_24C336890;
  *(_QWORD *)(result + 8) = a2;
  *(_OWORD *)(result + 16) = 0u;
  *(_OWORD *)(result + 32) = 0u;
  *(_DWORD *)(result + 48) = 1065353216;
  *(_DWORD *)(result + 56) = *(_DWORD *)a3;
  v3 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + 64) = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(result + 72) = v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

uint64_t mlcore::InPredicate<std::string>::property(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t mlcore::InPredicate<std::string>::value(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 64))
    return *(_QWORD *)(a1 + 64);
  else
    return a1 + 16;
}

_QWORD *mlcore::InPredicate<std::string>::_lookupFunctionName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "HashtableLookupString");
}

uint64_t mlcore::InPredicate<double>::InPredicate(uint64_t a1, uint64_t a2, double **a3)
{
  _BYTE v6[40];

  std::unordered_set<double>::unordered_set<std::__wrap_iter<double const*>>((uint64_t)v6, *a3, a3[1]);
  mlcore::InPredicate<double>::InPredicate(a1, a2, (uint64_t)v6);
  std::__hash_table<mlcore::ModelPropertyBase *,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::allocator<mlcore::ModelPropertyBase *>>::~__hash_table((uint64_t)v6);
  return a1;
}

{
  _BYTE v6[40];

  std::unordered_set<double>::unordered_set<std::__wrap_iter<double const*>>((uint64_t)v6, *a3, a3[1]);
  mlcore::InPredicate<double>::InPredicate(a1, a2, (uint64_t)v6);
  std::__hash_table<mlcore::ModelPropertyBase *,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::allocator<mlcore::ModelPropertyBase *>>::~__hash_table((uint64_t)v6);
  return a1;
}

void sub_20A866CC0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__hash_table<mlcore::ModelPropertyBase *,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::allocator<mlcore::ModelPropertyBase *>>::~__hash_table((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t mlcore::InPredicate<double>::InPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  __int128 v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  double *i;
  void *v13;
  _QWORD *v14;
  double v15;
  unint64_t v16;
  double *inserted;
  int v19;
  __int128 v20;

  *(_QWORD *)a1 = &unk_24C3368E8;
  *(_QWORD *)(a1 + 8) = a2;
  *(_OWORD *)(a1 + 16) = 0u;
  v4 = (_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_DWORD *)(a1 + 48) = 1065353216;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  if (*(_QWORD *)(a3 + 24) < 0x1F5uLL)
  {
    if (v4 != (_QWORD *)a3)
    {
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a3 + 32);
      for (i = *(double **)(a3 + 16); i; i = *(double **)i)
      {
        v13 = operator new(0x18uLL);
        v14 = v13;
        *(_QWORD *)v13 = 0;
        v15 = i[2];
        *((double *)v13 + 2) = v15;
        if (v15 == 0.0)
          v16 = 0;
        else
          v16 = *(_QWORD *)&v15;
        *((_QWORD *)v13 + 1) = v16;
        inserted = std::__hash_table<double,std::hash<double>,std::equal_to<double>,std::allocator<double>>::__node_insert_multi_prepare((uint64_t)v4, v16, (double *)v13 + 2);
        std::__hash_table<unsigned long,std::hash<unsigned long>,std::equal_to<unsigned long>,std::allocator<unsigned long>>::__node_insert_multi_perform(v4, v14, inserted);
      }
    }
  }
  else
  {
    mlcore::SharedObject<std::unordered_set<double>,int>::create<std::unordered_set<double> const&>((uint64_t)&v19, a3);
    *(_DWORD *)(a1 + 56) = v19;
    v5 = v20;
    v20 = 0uLL;
    v6 = *(std::__shared_weak_count **)(a1 + 72);
    *(_OWORD *)(a1 + 64) = v5;
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
    v9 = (std::__shared_weak_count *)*((_QWORD *)&v20 + 1);
    if (*((_QWORD *)&v20 + 1))
    {
      v10 = (unint64_t *)(*((_QWORD *)&v20 + 1) + 8);
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
  }
  return a1;
}

{
  return __ZN6mlcore11InPredicateIdEC2EPNS_13ModelPropertyIdEERKNSt3__113unordered_setIdNS5_4hashIdEENS5_8equal_toIdEENS5_9allocatorIdEEEE(a1, a2, a3);
}

void sub_20A866E44(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100](v2);
  std::__hash_table<mlcore::ModelPropertyBase *,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::allocator<mlcore::ModelPropertyBase *>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

double *std::__hash_table<double,std::hash<double>,std::equal_to<double>,std::allocator<double>>::__node_insert_multi_prepare(uint64_t a1, unint64_t a2, double *a3)
{
  unint64_t v6;
  float v7;
  float v8;
  _BOOL8 v9;
  unint64_t v10;
  unint64_t v11;
  int8x8_t prime;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t **v16;
  unint64_t v17;
  uint8x8_t v18;
  unint64_t v19;
  uint8x8_t v20;
  uint64_t v21;
  uint64_t *i;
  unint64_t v23;
  uint64_t *v24;
  _QWORD *v25;
  uint8x8_t v26;
  unint64_t v27;
  double *v28;
  int v29;
  double *result;
  unint64_t v31;
  unint64_t v32;
  _BOOL4 v33;
  int v34;
  void *v35;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v8 = *(float *)(a1 + 32);
  if (!v6 || (float)(v8 * (float)v6) < v7)
  {
    v9 = 1;
    if (v6 >= 3)
      v9 = (v6 & (v6 - 1)) != 0;
    v10 = v9 | (2 * v6);
    v11 = vcvtps_u32_f32(v7 / v8);
    if (v10 <= v11)
      prime = (int8x8_t)v11;
    else
      prime = (int8x8_t)v10;
    if (*(_QWORD *)&prime == 1)
    {
      prime = (int8x8_t)2;
    }
    else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
    {
      prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
      v6 = *(_QWORD *)(a1 + 8);
    }
    if (*(_QWORD *)&prime > v6)
      goto LABEL_74;
    if (*(_QWORD *)&prime >= v6)
      goto LABEL_43;
    v19 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (v6 < 3 || (v20 = (uint8x8_t)vcnt_s8((int8x8_t)v6), v20.i16[0] = vaddlv_u8(v20), v20.u32[0] > 1uLL))
    {
      v19 = std::__next_prime(v19);
    }
    else
    {
      v21 = 1 << -(char)__clz(v19 - 1);
      if (v19 >= 2)
        v19 = v21;
    }
    if (*(_QWORD *)&prime <= v19)
      prime = (int8x8_t)v19;
    if (*(_QWORD *)&prime >= v6)
    {
      v6 = *(_QWORD *)(a1 + 8);
      goto LABEL_43;
    }
    if (prime)
    {
LABEL_74:
      if (*(_QWORD *)&prime >> 61)
        std::__throw_bad_array_new_length[abi:ne180100]();
      v13 = operator new(8 * *(_QWORD *)&prime);
      v14 = *(void **)a1;
      *(_QWORD *)a1 = v13;
      if (v14)
        operator delete(v14);
      v15 = 0;
      *(int8x8_t *)(a1 + 8) = prime;
      do
        *(_QWORD *)(*(_QWORD *)a1 + 8 * v15++) = 0;
      while (*(_QWORD *)&prime != v15);
      v16 = *(uint64_t ***)(a1 + 16);
      if (v16)
      {
        v17 = (unint64_t)v16[1];
        v18 = (uint8x8_t)vcnt_s8(prime);
        v18.i16[0] = vaddlv_u8(v18);
        if (v18.u32[0] > 1uLL)
        {
          if (v17 >= *(_QWORD *)&prime)
            v17 %= *(_QWORD *)&prime;
        }
        else
        {
          v17 &= *(_QWORD *)&prime - 1;
        }
        *(_QWORD *)(*(_QWORD *)a1 + 8 * v17) = a1 + 16;
        for (i = *v16; *v16; i = *v16)
        {
          v23 = i[1];
          if (v18.u32[0] > 1uLL)
          {
            if (v23 >= *(_QWORD *)&prime)
              v23 %= *(_QWORD *)&prime;
          }
          else
          {
            v23 &= *(_QWORD *)&prime - 1;
          }
          if (v23 == v17)
          {
            v16 = (uint64_t **)i;
          }
          else
          {
            v24 = i;
            if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v23))
            {
              do
              {
                v25 = v24;
                v24 = (uint64_t *)*v24;
              }
              while (v24 && *((double *)i + 2) == *((double *)v24 + 2));
              *v16 = v24;
              *v25 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v23);
              **(_QWORD **)(*(_QWORD *)a1 + 8 * v23) = i;
            }
            else
            {
              *(_QWORD *)(*(_QWORD *)a1 + 8 * v23) = v16;
              v16 = (uint64_t **)i;
              v17 = v23;
            }
          }
        }
      }
      v6 = (unint64_t)prime;
    }
    else
    {
      v35 = *(void **)a1;
      *(_QWORD *)a1 = 0;
      if (v35)
        operator delete(v35);
      v6 = 0;
      *(_QWORD *)(a1 + 8) = 0;
    }
  }
LABEL_43:
  v26 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
  v26.i16[0] = vaddlv_u8(v26);
  if (v26.u32[0] > 1uLL)
  {
    v27 = a2;
    if (v6 <= a2)
      v27 = a2 % v6;
  }
  else
  {
    v27 = (v6 - 1) & a2;
  }
  v28 = *(double **)(*(_QWORD *)a1 + 8 * v27);
  if (!v28)
    return 0;
  v29 = 0;
  do
  {
    result = v28;
    v28 = *(double **)v28;
    if (!v28)
      break;
    v31 = *((_QWORD *)v28 + 1);
    if (v26.u32[0] > 1uLL)
    {
      v32 = *((_QWORD *)v28 + 1);
      if (v31 >= v6)
        v32 = v31 % v6;
    }
    else
    {
      v32 = v31 & (v6 - 1);
    }
    if (v32 != v27)
      break;
    v33 = v31 == a2 && v28[2] == *a3;
    v34 = v29 & !v33;
    v29 |= v33;
  }
  while (v34 != 1);
  return result;
}

void sub_20A867210(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__hash_table<mlcore::ModelPropertyBase *,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::allocator<mlcore::ModelPropertyBase *>>::~__hash_table((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t mlcore::InPredicate<double>::InPredicate(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  *(_QWORD *)result = &unk_24C3368E8;
  *(_QWORD *)(result + 8) = a2;
  *(_OWORD *)(result + 16) = 0u;
  *(_OWORD *)(result + 32) = 0u;
  *(_DWORD *)(result + 48) = 1065353216;
  *(_DWORD *)(result + 56) = *(_DWORD *)a3;
  v3 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + 64) = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(result + 72) = v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

{
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  *(_QWORD *)result = &unk_24C3368E8;
  *(_QWORD *)(result + 8) = a2;
  *(_OWORD *)(result + 16) = 0u;
  *(_OWORD *)(result + 32) = 0u;
  *(_DWORD *)(result + 48) = 1065353216;
  *(_DWORD *)(result + 56) = *(_DWORD *)a3;
  v3 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + 64) = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(result + 72) = v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

uint64_t mlcore::InPredicate<double>::property(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t mlcore::InPredicate<double>::value(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 64))
    return *(_QWORD *)(a1 + 64);
  else
    return a1 + 16;
}

_QWORD *mlcore::InPredicate<double>::_lookupFunctionName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "HashtableLookupDouble");
}

void sub_20A86733C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__hash_table<mlcore::ModelPropertyBase *,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::allocator<mlcore::ModelPropertyBase *>>::~__hash_table((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t mlcore::InPredicate<int>::InPredicate(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  *(_QWORD *)result = &unk_24C336940;
  *(_QWORD *)(result + 8) = a2;
  *(_OWORD *)(result + 16) = 0u;
  *(_OWORD *)(result + 32) = 0u;
  *(_DWORD *)(result + 48) = 1065353216;
  *(_DWORD *)(result + 56) = *(_DWORD *)a3;
  v3 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + 64) = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(result + 72) = v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

{
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  *(_QWORD *)result = &unk_24C336940;
  *(_QWORD *)(result + 8) = a2;
  *(_OWORD *)(result + 16) = 0u;
  *(_OWORD *)(result + 32) = 0u;
  *(_DWORD *)(result + 48) = 1065353216;
  *(_DWORD *)(result + 56) = *(_DWORD *)a3;
  v3 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + 64) = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(result + 72) = v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

uint64_t mlcore::InPredicate<int>::property(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t mlcore::InPredicate<int>::value(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 64))
    return *(_QWORD *)(a1 + 64);
  else
    return a1 + 16;
}

_QWORD *mlcore::InPredicate<int>::_lookupFunctionName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "HashtableLookupInt");
}

uint64_t mlcore::InPredicate<mediaplatform::Data>::InPredicate(uint64_t a1, uint64_t a2, const mediaplatform::Data **a3)
{
  _BYTE v6[40];

  std::unordered_set<mediaplatform::Data>::unordered_set<std::__wrap_iter<mediaplatform::Data const*>>((uint64_t)v6, *a3, a3[1]);
  mlcore::InPredicate<mediaplatform::Data>::InPredicate(a1, a2, (uint64_t)v6);
  std::__hash_table<mediaplatform::Data,std::hash<mediaplatform::Data>,std::equal_to<mediaplatform::Data>,std::allocator<mediaplatform::Data>>::~__hash_table((uint64_t)v6);
  return a1;
}

{
  _BYTE v6[40];

  std::unordered_set<mediaplatform::Data>::unordered_set<std::__wrap_iter<mediaplatform::Data const*>>((uint64_t)v6, *a3, a3[1]);
  mlcore::InPredicate<mediaplatform::Data>::InPredicate(a1, a2, (uint64_t)v6);
  std::__hash_table<mediaplatform::Data,std::hash<mediaplatform::Data>,std::equal_to<mediaplatform::Data>,std::allocator<mediaplatform::Data>>::~__hash_table((uint64_t)v6);
  return a1;
}

void sub_20A867468(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__hash_table<mediaplatform::Data,std::hash<mediaplatform::Data>,std::equal_to<mediaplatform::Data>,std::allocator<mediaplatform::Data>>::~__hash_table((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t mlcore::InPredicate<mediaplatform::Data>::InPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  __int128 v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  _QWORD *i;
  char *v13;
  int v15;
  __int128 v16;

  *(_QWORD *)a1 = &unk_24C336838;
  *(_QWORD *)(a1 + 8) = a2;
  *(_OWORD *)(a1 + 16) = 0u;
  v4 = a1 + 16;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_DWORD *)(a1 + 48) = 1065353216;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  if (*(_QWORD *)(a3 + 24) < 0x1F5uLL)
  {
    if (v4 != a3)
    {
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a3 + 32);
      for (i = *(_QWORD **)(a3 + 16); i; i = (_QWORD *)*i)
      {
        v13 = (char *)operator new(0x38uLL);
        *(_QWORD *)v13 = 0;
        *((_QWORD *)v13 + 1) = 0;
        mediaplatform::Data::Data((mediaplatform::Data *)(v13 + 16), (const mediaplatform::Data *)(i + 2));
        *((_QWORD *)v13 + 1) = std::hash<mediaplatform::Data>::operator()(*((_QWORD *)v13 + 3), *((void **)v13 + 5));
        std::__hash_table<mediaplatform::Data,std::hash<mediaplatform::Data>,std::equal_to<mediaplatform::Data>,std::allocator<mediaplatform::Data>>::__node_insert_multi(v4, (uint64_t *)v13);
      }
    }
  }
  else
  {
    mlcore::SharedObject<std::unordered_set<mediaplatform::Data>,int>::create<std::unordered_set<mediaplatform::Data> const&>((uint64_t)&v15, a3);
    *(_DWORD *)(a1 + 56) = v15;
    v5 = v16;
    v16 = 0uLL;
    v6 = *(std::__shared_weak_count **)(a1 + 72);
    *(_OWORD *)(a1 + 64) = v5;
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
    v9 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
    if (*((_QWORD *)&v16 + 1))
    {
      v10 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
  }
  return a1;
}

{
  return __ZN6mlcore11InPredicateIN13mediaplatform4DataEEC2EPNS_13ModelPropertyIS2_EERKNSt3__113unordered_setIS2_NS7_4hashIS2_EENS7_8equal_toIS2_EENS7_9allocatorIS2_EEEE(a1, a2, a3);
}

void sub_20A8675E4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100](v2);
  std::__hash_table<mediaplatform::Data,std::hash<mediaplatform::Data>,std::equal_to<mediaplatform::Data>,std::allocator<mediaplatform::Data>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

void std::__hash_table<mediaplatform::Data,std::hash<mediaplatform::Data>,std::equal_to<mediaplatform::Data>,std::allocator<mediaplatform::Data>>::__node_insert_multi(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  unint64_t v4;
  unint64_t v5;
  float v6;
  float v7;
  _BOOL8 v8;
  unint64_t v9;
  unint64_t v10;
  int8x8_t prime;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint8x8_t v17;
  unint64_t v18;
  unint64_t v19;
  uint8x8_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  size_t v26;
  _QWORD *v27;
  _QWORD *v28;
  void *v29;
  uint8x8_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t **v33;
  uint64_t *v34;
  int v35;
  uint64_t **v36;
  unint64_t v37;
  unint64_t v38;
  size_t v39;
  _BOOL4 v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  unint64_t v44;

  v2 = a2;
  v4 = std::hash<mediaplatform::Data>::operator()(a2[3], (void *)a2[5]);
  v2[1] = v4;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v7 = *(float *)(a1 + 32);
  if (!v5 || (float)(v7 * (float)v5) < v6)
  {
    v8 = 1;
    if (v5 >= 3)
      v8 = (v5 & (v5 - 1)) != 0;
    v9 = v8 | (2 * v5);
    v10 = vcvtps_u32_f32(v6 / v7);
    if (v9 <= v10)
      prime = (int8x8_t)v10;
    else
      prime = (int8x8_t)v9;
    if (*(_QWORD *)&prime == 1)
    {
      prime = (int8x8_t)2;
    }
    else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
    {
      prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
      v5 = *(_QWORD *)(a1 + 8);
    }
    if (*(_QWORD *)&prime > v5)
      goto LABEL_101;
    if (*(_QWORD *)&prime >= v5)
      goto LABEL_61;
    v19 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (v5 < 3 || (v20 = (uint8x8_t)vcnt_s8((int8x8_t)v5), v20.i16[0] = vaddlv_u8(v20), v20.u32[0] > 1uLL))
    {
      v19 = std::__next_prime(v19);
    }
    else
    {
      v21 = 1 << -(char)__clz(v19 - 1);
      if (v19 >= 2)
        v19 = v21;
    }
    if (*(_QWORD *)&prime <= v19)
      prime = (int8x8_t)v19;
    if (*(_QWORD *)&prime >= v5)
    {
      v5 = *(_QWORD *)(a1 + 8);
      goto LABEL_61;
    }
    if (prime)
    {
LABEL_101:
      if (*(_QWORD *)&prime >> 61)
        std::__throw_bad_array_new_length[abi:ne180100]();
      v12 = operator new(8 * *(_QWORD *)&prime);
      v13 = *(void **)a1;
      *(_QWORD *)a1 = v12;
      if (v13)
        operator delete(v13);
      v44 = v4;
      v14 = 0;
      *(int8x8_t *)(a1 + 8) = prime;
      do
        *(_QWORD *)(*(_QWORD *)a1 + 8 * v14++) = 0;
      while (*(_QWORD *)&prime != v14);
      v15 = *(uint64_t **)(a1 + 16);
      if (v15)
      {
        v16 = v15[1];
        v17 = (uint8x8_t)vcnt_s8(prime);
        v17.i16[0] = vaddlv_u8(v17);
        v18 = v17.u32[0];
        v43 = v2;
        if (v17.u32[0] > 1uLL)
        {
          if (v16 >= *(_QWORD *)&prime)
            v16 %= *(_QWORD *)&prime;
        }
        else
        {
          v16 &= *(_QWORD *)&prime - 1;
        }
        *(_QWORD *)(*(_QWORD *)a1 + 8 * v16) = a1 + 16;
        v22 = *v15;
        if (*v15)
        {
          v23 = *(_QWORD *)&prime - 1;
          do
          {
            v24 = *(_QWORD *)(v22 + 8);
            if (v18 > 1)
            {
              if (v24 >= *(_QWORD *)&prime)
                v24 %= *(_QWORD *)&prime;
            }
            else
            {
              v24 &= v23;
            }
            if (v24 == v16)
            {
              v15 = (uint64_t *)v22;
            }
            else if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v24))
            {
              v25 = *(_QWORD **)v22;
              if (*(_QWORD *)v22)
              {
                v26 = *(_QWORD *)(v22 + 24);
                v27 = (_QWORD *)v22;
                while (1)
                {
                  v28 = v25;
                  if (v25[3] != v26 || memcmp(*(const void **)(v22 + 40), (const void *)v25[5], v26))
                    break;
                  v25 = (_QWORD *)*v28;
                  v27 = v28;
                  if (!*v28)
                    goto LABEL_47;
                }
                v25 = v28;
                v28 = v27;
LABEL_47:
                v23 = *(_QWORD *)&prime - 1;
              }
              else
              {
                v28 = (_QWORD *)v22;
              }
              *v15 = (uint64_t)v25;
              *v28 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v24);
              **(_QWORD **)(*(_QWORD *)a1 + 8 * v24) = v22;
            }
            else
            {
              *(_QWORD *)(*(_QWORD *)a1 + 8 * v24) = v15;
              v15 = (uint64_t *)v22;
              v16 = v24;
            }
            v22 = *v15;
          }
          while (*v15);
        }
        v5 = (unint64_t)prime;
        v2 = v43;
        v4 = v44;
      }
      else
      {
        v5 = (unint64_t)prime;
        v4 = v44;
      }
    }
    else
    {
      v29 = *(void **)a1;
      *(_QWORD *)a1 = 0;
      if (v29)
        operator delete(v29);
      v5 = 0;
      *(_QWORD *)(a1 + 8) = 0;
    }
  }
LABEL_61:
  v30 = (uint8x8_t)vcnt_s8((int8x8_t)v5);
  v30.i16[0] = vaddlv_u8(v30);
  v31 = v30.u32[0];
  if (v30.u32[0] > 1uLL)
  {
    v32 = v4;
    if (v5 <= v4)
      v32 = v4 % v5;
  }
  else
  {
    v32 = (v5 - 1) & v4;
  }
  v33 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v32);
  if (v33)
  {
    v34 = *v33;
    if (*v33)
    {
      v35 = 0;
      do
      {
        v36 = (uint64_t **)v34;
        v37 = v34[1];
        if (v31 > 1)
        {
          v38 = v37;
          if (v37 >= v5)
            v38 = v37 % v5;
        }
        else
        {
          v38 = v37 & (v5 - 1);
        }
        if (v38 != v32)
          break;
        v40 = v37 == v4 && (v39 = v2[3], (uint64_t *)v39 == v36[3]) && memcmp(v36[5], (const void *)v2[5], v39) == 0;
        if ((v35 & !v40 & 1) != 0)
          break;
        v35 |= v40;
        v34 = *v36;
        v33 = v36;
      }
      while (*v36);
    }
  }
  v41 = v2[1];
  if (v31 > 1)
  {
    if (v41 >= v5)
      v41 %= v5;
  }
  else
  {
    v41 &= v5 - 1;
  }
  if (!v33)
  {
    *v2 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v2;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v41) = a1 + 16;
    if (!*v2)
      goto LABEL_97;
    v42 = *(_QWORD *)(*v2 + 8);
    if (v31 > 1)
    {
      if (v42 >= v5)
        v42 %= v5;
    }
    else
    {
      v42 &= v5 - 1;
    }
LABEL_96:
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v42) = v2;
    goto LABEL_97;
  }
  *v2 = (uint64_t)*v33;
  *v33 = v2;
  if (*v2)
  {
    v42 = *(_QWORD *)(*v2 + 8);
    if (v31 > 1)
    {
      if (v42 >= v5)
        v42 %= v5;
    }
    else
    {
      v42 &= v5 - 1;
    }
    if (v42 != v41)
      goto LABEL_96;
  }
LABEL_97:
  ++*(_QWORD *)(a1 + 24);
}

void sub_20A867B34(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__hash_table<mediaplatform::Data,std::hash<mediaplatform::Data>,std::equal_to<mediaplatform::Data>,std::allocator<mediaplatform::Data>>::~__hash_table((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t mlcore::InPredicate<mediaplatform::Data>::InPredicate(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  *(_QWORD *)result = &unk_24C336838;
  *(_QWORD *)(result + 8) = a2;
  *(_OWORD *)(result + 16) = 0u;
  *(_OWORD *)(result + 32) = 0u;
  *(_DWORD *)(result + 48) = 1065353216;
  *(_DWORD *)(result + 56) = *(_DWORD *)a3;
  v3 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + 64) = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(result + 72) = v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

{
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  *(_QWORD *)result = &unk_24C336838;
  *(_QWORD *)(result + 8) = a2;
  *(_OWORD *)(result + 16) = 0u;
  *(_OWORD *)(result + 32) = 0u;
  *(_DWORD *)(result + 48) = 1065353216;
  *(_DWORD *)(result + 56) = *(_DWORD *)a3;
  v3 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + 64) = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(result + 72) = v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

uint64_t mlcore::InPredicate<mediaplatform::Data>::property(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t mlcore::InPredicate<mediaplatform::Data>::value(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 64))
    return *(_QWORD *)(a1 + 64);
  else
    return a1 + 16;
}

_QWORD *mlcore::InPredicate<mediaplatform::Data>::_lookupFunctionName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "HashtableLookupData");
}

void mlcore::LibraryProperty::~LibraryProperty(mlcore::LibraryProperty *this)
{
  *(_QWORD *)this = off_24C33A860;
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase((_QWORD *)this + 1);
}

{
  *(_QWORD *)this = off_24C33A860;
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase((_QWORD *)this + 1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mlcore::TypedEntityClass<mlcore::LibraryProperty>::sharedPointer()
{
  unint64_t v0;
  char v2;
  char **v3;
  char *v4;

  v0 = atomic_load(&mlcore::TypedEntityClass<mlcore::LibraryProperty>::sharedPointer(void)::__once);
  if (v0 != -1)
  {
    v4 = &v2;
    v3 = &v4;
    std::__call_once(&mlcore::TypedEntityClass<mlcore::LibraryProperty>::sharedPointer(void)::__once, &v3, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::TypedEntityClass<mlcore::LibraryProperty>::sharedPointer(void)::{lambda(void)#1} &&>>);
  }
  return mlcore::TypedEntityClass<mlcore::LibraryProperty>::sharedPointer(void)::__sharedPointer;
}

double std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::TypedEntityClass<mlcore::LibraryProperty>::sharedPointer(void)::{lambda(void)#1} &&>>()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_QWORD *)(v0 + 96) = 0;
  *(_DWORD *)(v0 + 104) = 1065353216;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_DWORD *)(v0 + 144) = 1065353216;
  *(_QWORD *)v0 = &off_24C338858;
  *(_QWORD *)(v0 + 8) = 850045863;
  mlcore::TypedEntityClass<mlcore::LibraryProperty>::sharedPointer(void)::__sharedPointer = v0;
  return result;
}

void mlcore::TypedEntityClass<mlcore::LibraryProperty>::~TypedEntityClass(mlcore::EntityClass *a1)
{
  mlcore::EntityClass::~EntityClass(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mlcore::TypedEntityClass<mlcore::LibraryProperty>::description(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1);
}

double mlcore::TypedEntityClass<mlcore::LibraryProperty>::create@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _OWORD *a4@<X8>)
{
  double v8;
  unint64_t *v9;
  uint64_t v10;
  double result;
  double v12[3];
  unint64_t v13[3];
  unint64_t *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  std::allocate_shared[abi:ne180100]<mlcore::LibraryProperty,std::allocator<mlcore::LibraryProperty>,long long &,void>(v12, a2);
  v8 = v12[0];
  v13[0] = (unint64_t)&off_24C33B140;
  v14 = v13;
  mlcore::PropertyCache::mergePropertiesFromCache(*(_QWORD *)&v12[0] + 8, a3, (uint64_t)v13);
  v9 = v14;
  if (v14 == v13)
  {
    v10 = 4;
    v9 = v13;
    goto LABEL_5;
  }
  if (v14)
  {
    v10 = 5;
LABEL_5:
    (*(void (**)(void))(*v9 + 8 * v10))();
  }
  v13[0] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 112))(a1);
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>(*(_QWORD *)&v8 + 176, v13[0], v13)[3] = a2;
  result = v12[0];
  *a4 = *(_OWORD *)v12;
  return result;
}

void sub_20A867E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char *a15)
{
  char *v15;
  char *v17;
  uint64_t v18;

  v17 = a15;
  if (a15 == v15)
  {
    v18 = 4;
    v17 = &a12;
  }
  else
  {
    if (!a15)
      goto LABEL_6;
    v18 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v17 + 8 * v18))();
LABEL_6:
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t mlcore::TypedEntityClass<mlcore::LibraryProperty>::name(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
}

uint64_t mlcore::TypedEntityClass<mlcore::LibraryProperty>::entityType()
{
  return 8;
}

BOOL mlcore::TypedEntityClass<mlcore::LibraryProperty>::isRevisionTrackable(uint64_t a1)
{
  return (*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 64))(a1) != -1;
}

uint64_t mlcore::TypedEntityClass<mlcore::LibraryProperty>::isCloudUpdatable()
{
  return 1;
}

uint64_t mlcore::TypedEntityClass<mlcore::LibraryProperty>::databaseTable()
{
  return *(_QWORD *)mediaplatform::Singleton<mlcore::LibraryPropertyTable>::sharedInstance();
}

void mlcore::TypedEntityClass<mlcore::LibraryProperty>::databaseTablesToDeleteFrom(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

void mlcore::TypedEntityClass<mlcore::LibraryProperty>::databaseTablesToInsertInto(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::LibraryProperty>::representativeItemPersistentIDProperty()
{
  return 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::LibraryProperty>::trackForeignPersistentIDProperty()
{
  return 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::LibraryProperty>::trackForeignOrderingProperty()
{
  return 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::LibraryProperty>::sectionPropertyForOrderingProperty()
{
  return 0;
}

uint64_t mlcore::LibraryPropertyPropertyPersistentID(mlcore *this)
{
  unint64_t v1;
  char v3;
  char **v4;
  char *v5;

  v1 = atomic_load(&mlcore::LibraryPropertyPropertyPersistentID(void)::once);
  if (v1 != -1)
  {
    v5 = &v3;
    v4 = &v5;
    std::__call_once(&mlcore::LibraryPropertyPropertyPersistentID(void)::once, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::LibraryPropertyPropertyPersistentID(void)::$_0 &&>>);
  }
  return mlcore::LibraryPropertyPropertyPersistentID(void)::property;
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::LibraryPropertyPropertyPersistentID(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::LibraryPropertyTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __p;
  char v23;
  _QWORD v24[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::LibraryPropertyTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v24[0] = *v1;
  v24[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::LibraryPropertyTable **)mediaplatform::Singleton<mlcore::LibraryPropertyTable>::sharedInstance();
  mlcore::LibraryPropertyTable::persistentIDColumn(*v5, (uint64_t)&__p);
  mlcore::DatabaseModelProperty<long long>::DatabaseModelProperty(v0, v24, (uint64_t)&__p);
  mlcore::LibraryPropertyPropertyPersistentID(void)::property = v0;
  if (v23 < 0)
    operator delete((void *)__p.__r_.__value_.__l.__size_);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::LibraryPropertyPropertyPersistentID(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  std::string::operator=((std::string *)(v8 + 40), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::LibraryProperty>::sharedPointer();
  v10 = mlcore::LibraryPropertyPropertyPersistentID(void)::property;
  v11 = mediaplatform::Singleton<mlcore::LibraryPropertyTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "persistentID");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A868188(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, void *a17, int a18, __int16 a19, char a20,char a21,int a22,__int16 a23,char a24,char a25)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t mediaplatform::Singleton<mlcore::LibraryPropertyTable>::sharedInstance()
{
  unsigned __int8 v0;
  mlcore::LibraryPropertyTable **v2;

  if ((v0 & 1) == 0
  {
    v2 = (mlcore::LibraryPropertyTable **)operator new();
    _ZNSt3__115allocate_sharedB8ne180100IN6mlcore20LibraryPropertyTableENS_9allocatorIS2_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(v2);
    mediaplatform::Singleton<mlcore::LibraryPropertyTable>::sharedInstance(void)::_sharedInstance = (uint64_t)v2;
  }
  return mediaplatform::Singleton<mlcore::LibraryPropertyTable>::sharedInstance(void)::_sharedInstance;
}

void sub_20A8682B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD27AFC](v1, 0x20C40A4A59CD2);
  _Unwind_Resume(a1);
}

mlcore::LibraryPropertyTable *_ZNSt3__115allocate_sharedB8ne180100IN6mlcore20LibraryPropertyTableENS_9allocatorIS2_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(mlcore::LibraryPropertyTable **a1)
{
  _QWORD *v2;
  mlcore::LibraryPropertyTable *result;

  v2 = operator new(0x228uLL);
  v2[1] = 0;
  v2[2] = 0;
  *v2 = &off_24C33CF68;
  result = mlcore::LibraryPropertyTable::LibraryPropertyTable((mlcore::LibraryPropertyTable *)(v2 + 3));
  *a1 = result;
  a1[1] = (mlcore::LibraryPropertyTable *)v2;
  return result;
}

void sub_20A868330(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<mlcore::LibraryPropertyTable>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33CF68;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mlcore::LibraryPropertyTable>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33CF68;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t std::__shared_ptr_emplace<mlcore::LibraryPropertyTable>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t mlcore::LibraryPropertyPropertySourceID(mlcore *this)
{
  unint64_t v1;
  char v3;
  char **v4;
  char *v5;

  v1 = atomic_load(&mlcore::LibraryPropertyPropertySourceID(void)::once);
  if (v1 != -1)
  {
    v5 = &v3;
    v4 = &v5;
    std::__call_once(&mlcore::LibraryPropertyPropertySourceID(void)::once, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::LibraryPropertyPropertySourceID(void)::$_0 &&>>);
  }
  return mlcore::LibraryPropertyPropertySourceID(void)::property;
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::LibraryPropertyPropertySourceID(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::LibraryPropertyTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __p;
  char v23;
  _QWORD v24[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::LibraryPropertyTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v24[0] = *v1;
  v24[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::LibraryPropertyTable **)mediaplatform::Singleton<mlcore::LibraryPropertyTable>::sharedInstance();
  mlcore::LibraryPropertyTable::sourceIDColumn(*v5, (uint64_t)&__p);
  mlcore::DatabaseModelProperty<long long>::DatabaseModelProperty(v0, v24, (uint64_t)&__p);
  mlcore::LibraryPropertyPropertySourceID(void)::property = v0;
  if (v23 < 0)
    operator delete((void *)__p.__r_.__value_.__l.__size_);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::LibraryPropertyPropertySourceID(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  std::string::operator=((std::string *)(v8 + 40), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::LibraryProperty>::sharedPointer();
  v10 = mlcore::LibraryPropertyPropertySourceID(void)::property;
  v11 = mediaplatform::Singleton<mlcore::LibraryPropertyTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "sourceID");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A8685C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, void *a17, int a18, __int16 a19, char a20,char a21,int a22,__int16 a23,char a24,char a25)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t mlcore::LibraryPropertyPropertyKey(mlcore *this)
{
  unint64_t v1;
  char v3;
  char **v4;
  char *v5;

  v1 = atomic_load(&mlcore::LibraryPropertyPropertyKey(void)::once);
  if (v1 != -1)
  {
    v5 = &v3;
    v4 = &v5;
    std::__call_once(&mlcore::LibraryPropertyPropertyKey(void)::once, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::LibraryPropertyPropertyKey(void)::$_0 &&>>);
  }
  return mlcore::LibraryPropertyPropertyKey(void)::property;
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::LibraryPropertyPropertyKey(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::LibraryPropertyTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __str;
  _QWORD v23[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::LibraryPropertyTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v23[0] = *v1;
  v23[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::LibraryPropertyTable **)mediaplatform::Singleton<mlcore::LibraryPropertyTable>::sharedInstance();
  mlcore::LibraryPropertyTable::keyColumn(*v5, (uint64_t)&__str);
  mlcore::DatabaseModelProperty<std::string>::DatabaseModelProperty(v0, v23, (uint64_t)&__str);
  mlcore::LibraryPropertyPropertyKey(void)::property = v0;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&__str);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::LibraryPropertyPropertyKey(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__str, "");
  std::string::operator=((std::string *)(v8 + 40), &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::LibraryProperty>::sharedPointer();
  v10 = mlcore::LibraryPropertyPropertyKey(void)::property;
  v11 = mediaplatform::Singleton<mlcore::LibraryPropertyTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "key");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __str.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A8688AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t mlcore::LibraryPropertyPropertyValue(mlcore *this)
{
  unint64_t v1;
  char v3;
  char **v4;
  char *v5;

  v1 = atomic_load(&mlcore::LibraryPropertyPropertyValue(void)::once);
  if (v1 != -1)
  {
    v5 = &v3;
    v4 = &v5;
    std::__call_once(&mlcore::LibraryPropertyPropertyValue(void)::once, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::LibraryPropertyPropertyValue(void)::$_0 &&>>);
  }
  return mlcore::LibraryPropertyPropertyValue(void)::property;
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::LibraryPropertyPropertyValue(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::LibraryPropertyTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __str;
  _QWORD v23[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::LibraryPropertyTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v23[0] = *v1;
  v23[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::LibraryPropertyTable **)mediaplatform::Singleton<mlcore::LibraryPropertyTable>::sharedInstance();
  mlcore::LibraryPropertyTable::valueColumn(*v5, (uint64_t)&__str);
  mlcore::DatabaseModelProperty<std::string>::DatabaseModelProperty(v0, v23, (uint64_t)&__str);
  mlcore::LibraryPropertyPropertyValue(void)::property = v0;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&__str);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::LibraryPropertyPropertyValue(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__str, "");
  std::string::operator=((std::string *)(v8 + 40), &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::LibraryProperty>::sharedPointer();
  v10 = mlcore::LibraryPropertyPropertyValue(void)::property;
  v11 = mediaplatform::Singleton<mlcore::LibraryPropertyTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "value");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __str.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A868B88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

double mlcore::LibraryProperty::LibraryProperty(mlcore::LibraryProperty *this, uint64_t a2)
{
  double result;

  result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 12) = 1065353216;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_DWORD *)this + 22) = 1065353216;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_DWORD *)this + 32) = 1065353216;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_DWORD *)this + 42) = 1065353216;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_DWORD *)this + 52) = 1065353216;
  *((_QWORD *)this + 27) = &unk_24C3371E8;
  *((_QWORD *)this + 28) = a2;
  *(_QWORD *)this = &off_24C338068;
  *((_QWORD *)this + 1) = &off_24C3371C0;
  return result;
}

{
  double result;

  result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 12) = 1065353216;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_DWORD *)this + 22) = 1065353216;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_DWORD *)this + 32) = 1065353216;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_DWORD *)this + 42) = 1065353216;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_DWORD *)this + 52) = 1065353216;
  *((_QWORD *)this + 27) = &unk_24C3371E8;
  *((_QWORD *)this + 28) = a2;
  *(_QWORD *)this = &off_24C338068;
  *((_QWORD *)this + 1) = &off_24C3371C0;
  return result;
}

uint64_t mlcore::LibraryProperty::LibraryProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  mlcore *v9;
  std::string::size_type v10;
  mlcore *v11;
  std::string::size_type v12;
  unint64_t v14;

  *(_QWORD *)(a1 + 8) = &off_24C3371C0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_DWORD *)(a1 + 48) = 1065353216;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_DWORD *)(a1 + 88) = 1065353216;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_DWORD *)(a1 + 128) = 1065353216;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_DWORD *)(a1 + 168) = 1065353216;
  *(_OWORD *)(a1 + 176) = 0u;
  v8 = a1 + 176;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_DWORD *)(a1 + 208) = 1065353216;
  *(_QWORD *)(a1 + 216) = &unk_24C3371E8;
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)a1 = &off_24C338068;
  v14 = mlcore::LibraryPropertyPropertySourceID((mlcore *)a1);
  v9 = (mlcore *)std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>(v8, v14, &v14);
  *((_QWORD *)v9 + 3) = a2;
  v10 = mlcore::LibraryPropertyPropertyKey(v9);
  mlcore::Entity::setValueForProperty<std::string>(a1, a3, v10);
  v12 = mlcore::LibraryPropertyPropertyValue(v11);
  mlcore::Entity::setValueForProperty<std::string>(a1, a4, v12);
  return a1;
}

{
  uint64_t v8;
  mlcore *v9;
  std::string::size_type v10;
  mlcore *v11;
  std::string::size_type v12;
  unint64_t v14;

  *(_QWORD *)(a1 + 8) = &off_24C3371C0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_DWORD *)(a1 + 48) = 1065353216;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_DWORD *)(a1 + 88) = 1065353216;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_DWORD *)(a1 + 128) = 1065353216;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_DWORD *)(a1 + 168) = 1065353216;
  *(_OWORD *)(a1 + 176) = 0u;
  v8 = a1 + 176;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_DWORD *)(a1 + 208) = 1065353216;
  *(_QWORD *)(a1 + 216) = &unk_24C3371E8;
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)a1 = &off_24C338068;
  v14 = mlcore::LibraryPropertyPropertySourceID((mlcore *)a1);
  v9 = (mlcore *)std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>(v8, v14, &v14);
  *((_QWORD *)v9 + 3) = a2;
  v10 = mlcore::LibraryPropertyPropertyKey(v9);
  mlcore::Entity::setValueForProperty<std::string>(a1, a3, v10);
  v12 = mlcore::LibraryPropertyPropertyValue(v11);
  mlcore::Entity::setValueForProperty<std::string>(a1, a4, v12);
  return a1;
}

void sub_20A868DD8(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  *v1 = off_24C33A860;
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase(v2);
  _Unwind_Resume(a1);
}

void sub_20A868EE4(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  *v1 = off_24C33A860;
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase(v2);
  _Unwind_Resume(a1);
}

uint64_t mlcore::LibraryProperty::sourceID(mlcore::LibraryProperty *this)
{
  unint64_t v2;

  v2 = mlcore::LibraryPropertyPropertySourceID(this);
  return mlcore::Entity::valueForProperty<long long>((uint64_t)this, v2);
}

_QWORD *mlcore::LibraryProperty::setSourceID(mlcore::LibraryProperty *this, uint64_t a2)
{
  _QWORD *result;
  unint64_t v5;

  v5 = mlcore::LibraryPropertyPropertySourceID(this);
  result = std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>((uint64_t)this + 176, v5, &v5);
  result[3] = a2;
  return result;
}

void mlcore::LibraryProperty::key(mlcore::LibraryProperty *this@<X0>, std::string *a2@<X8>)
{
  unint64_t v4;

  v4 = mlcore::LibraryPropertyPropertyKey(this);
  mlcore::Entity::valueForProperty<std::string>(a2, (uint64_t)this, v4);
}

void mlcore::LibraryProperty::setKey(mlcore *a1, uint64_t a2)
{
  std::string::size_type v4;

  v4 = mlcore::LibraryPropertyPropertyKey(a1);
  mlcore::Entity::setValueForProperty<std::string>((uint64_t)a1, a2, v4);
}

void mlcore::LibraryProperty::value(mlcore::LibraryProperty *this@<X0>, std::string *a2@<X8>)
{
  unint64_t v4;

  v4 = mlcore::LibraryPropertyPropertyValue(this);
  mlcore::Entity::valueForProperty<std::string>(a2, (uint64_t)this, v4);
}

void mlcore::LibraryProperty::setValue(mlcore *a1, uint64_t a2)
{
  std::string::size_type v4;

  v4 = mlcore::LibraryPropertyPropertyValue(a1);
  mlcore::Entity::setValueForProperty<std::string>((uint64_t)a1, a2, v4);
}

uint64_t mediaplatform::DatabaseConnection::DatabaseConnection(uint64_t a1, std::string *a2, char a3)
{
  *(_QWORD *)a1 = 0;
  mediaplatform::FilePath::FilePath((_QWORD *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 136) = 0;
  *(_BYTE *)(a1 + 144) = 0;
  *(_BYTE *)(a1 + 145) = a3;
  *(_BYTE *)(a1 + 146) = 1;
  *(_DWORD *)(a1 + 148) = 0;
  *(_BYTE *)(a1 + 152) = 0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_QWORD *)(a1 + 208) = 50;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_DWORD *)(a1 + 264) = 1065353216;
  *(_QWORD *)(a1 + 272) = a1 + 272;
  *(_QWORD *)(a1 + 280) = a1 + 272;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  return a1;
}

void mediaplatform::DatabaseConnection::~DatabaseConnection(mediaplatform::DatabaseConnection *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  mediaplatform::DatabaseConnection *v6;
  uint64_t v7;
  mediaplatform::DatabaseConnection *v8;
  uint64_t v9;
  mediaplatform::DatabaseConnection *v10;
  uint64_t v11;
  void **v12;

  mediaplatform::DatabaseConnection::close(this);
  if (*((_QWORD *)this + 37))
  {
    std::vector<std::weak_ptr<mediaplatform::DatabaseStatement>>::__clear[abi:ne180100]((uint64_t *)this + 37);
    operator delete(*((void **)this + 37));
  }
  std::__list_imp<mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Cost,std::allocator<mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Cost>>::clear((_QWORD *)this + 34);
  std::__hash_table<std::__hash_value_type<std::string,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>>>::__deallocate_node(*((_QWORD **)this + 31));
  v2 = (void *)*((_QWORD *)this + 29);
  *((_QWORD *)this + 29) = 0;
  if (v2)
    operator delete(v2);
  v12 = (void **)((char *)this + 184);
  std::vector<std::shared_ptr<mediaplatform::DatabaseIndex>>::__destroy_vector::operator()[abi:ne180100](&v12);
  v3 = *((_QWORD *)this + 20);
  if (v3)
  {
    v4 = *((_QWORD *)this + 21);
    v5 = (void *)*((_QWORD *)this + 20);
    if (v4 != v3)
    {
      do
        v4 = std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100](v4 - 16);
      while (v4 != v3);
      v5 = (void *)*((_QWORD *)this + 20);
    }
    *((_QWORD *)this + 21) = v3;
    operator delete(v5);
  }
  v6 = (mediaplatform::DatabaseConnection *)*((_QWORD *)this + 17);
  if (v6 == (mediaplatform::DatabaseConnection *)((char *)this + 112))
  {
    v7 = 4;
    v6 = (mediaplatform::DatabaseConnection *)((char *)this + 112);
  }
  else
  {
    if (!v6)
      goto LABEL_15;
    v7 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v6 + 8 * v7))();
LABEL_15:
  v8 = (mediaplatform::DatabaseConnection *)*((_QWORD *)this + 13);
  if (v8 == (mediaplatform::DatabaseConnection *)((char *)this + 80))
  {
    v9 = 4;
    v8 = (mediaplatform::DatabaseConnection *)((char *)this + 80);
  }
  else
  {
    if (!v8)
      goto LABEL_20;
    v9 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v8 + 8 * v9))();
LABEL_20:
  v10 = (mediaplatform::DatabaseConnection *)*((_QWORD *)this + 9);
  if (v10 == (mediaplatform::DatabaseConnection *)((char *)this + 48))
  {
    v11 = 4;
    v10 = (mediaplatform::DatabaseConnection *)((char *)this + 48);
    goto LABEL_24;
  }
  if (v10)
  {
    v11 = 5;
LABEL_24:
    (*(void (**)(void))(*(_QWORD *)v10 + 8 * v11))();
  }
  *((_QWORD *)this + 1) = &off_24C331570;
  v12 = (void **)((char *)this + 16);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v12);
}

uint64_t mediaplatform::DatabaseConnection::close(mediaplatform::DatabaseConnection *this)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  sqlite3_stmt **v7;
  unint64_t *p_shared_weak_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  uint64_t j;
  uint64_t v15;
  uint64_t result;
  mediaplatform::PlatformErrorCondition *exception;
  _QWORD v18[8];

  if (*((_QWORD *)this + 32))
  {
    std::__hash_table<std::__hash_value_type<std::string,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>>>::__deallocate_node(*((_QWORD **)this + 31));
    *((_QWORD *)this + 31) = 0;
    v2 = *((_QWORD *)this + 30);
    if (v2)
    {
      for (i = 0; i != v2; ++i)
        *(_QWORD *)(*((_QWORD *)this + 29) + 8 * i) = 0;
    }
    *((_QWORD *)this + 32) = 0;
  }
  std::__list_imp<mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Cost,std::allocator<mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Cost>>::clear((_QWORD *)this + 34);
  *((_QWORD *)this + 28) = 0;
  v4 = *((_QWORD *)this + 37);
  v5 = *((_QWORD *)this + 38);
  while (v4 != v5)
  {
    v6 = *(std::__shared_weak_count **)(v4 + 8);
    if (v6)
    {
      v7 = *(sqlite3_stmt ***)v4;
      p_shared_weak_owners = (unint64_t *)&v6->__shared_weak_owners_;
      do
        v9 = __ldxr(p_shared_weak_owners);
      while (__stxr(v9 + 1, p_shared_weak_owners));
      v10 = std::__shared_weak_count::lock(v6);
      v18[1] = v10;
      if (v10)
      {
        v11 = v10;
        v18[0] = v7;
        if (v7)
          mediaplatform::DatabaseStatement::finalize(v7);
        p_shared_owners = (unint64_t *)&v11->__shared_owners_;
        do
          v13 = __ldaxr(p_shared_owners);
        while (__stlxr(v13 - 1, p_shared_owners));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      std::__shared_weak_count::__release_weak(v6);
    }
    v4 += 16;
  }
  std::vector<std::weak_ptr<mediaplatform::DatabaseStatement>>::__clear[abi:ne180100]((uint64_t *)this + 37);
  if (*(_QWORD *)this)
  {
    if (sqlite3_close(*(sqlite3 **)this))
    {
      mediaplatform::DatabaseConnection::_currentSQLiteError((sqlite3 **)this, (uint64_t)v18);
      exception = (mediaplatform::PlatformErrorCondition *)__cxa_allocate_exception(0x40uLL);
      mediaplatform::PlatformErrorCondition::PlatformErrorCondition(exception, (const mediaplatform::PlatformErrorCondition *)v18);
    }
    *(_QWORD *)this = 0;
    *((_BYTE *)this + 144) = 0;
    v15 = *((_QWORD *)this + 20);
    for (j = *((_QWORD *)this + 21); j != v15; j = std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100](j - 16))
      ;
    *((_QWORD *)this + 21) = v15;
  }
  result = *((_QWORD *)this + 17);
  if (result)
    return (*(uint64_t (**)(uint64_t, mediaplatform::DatabaseConnection *))(*(_QWORD *)result + 48))(result, this);
  return result;
}

void sub_20A8693E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::exception a9)
{
  mediaplatform::PlatformErrorCondition::~PlatformErrorCondition(&a9);
  _Unwind_Resume(a1);
}

void std::vector<std::shared_ptr<mediaplatform::DatabaseIndex>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  char *v2;
  char *v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  v1 = *a1;
  v2 = (char *)**a1;
  if (v2)
  {
    v4 = (char *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 16;
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::__hash_table<std::__hash_value_type<std::string,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>>>::__deallocate_node(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  if (a1)
  {
    v1 = a1;
    do
    {
      v2 = (_QWORD *)*v1;
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>,0>((uint64_t)(v1 + 2));
      operator delete(v1);
      v1 = v2;
    }
    while (v2);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>,0>(uint64_t a1)
{
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100](a1 + 24);
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

void std::vector<std::weak_ptr<mediaplatform::DatabaseStatement>>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2;
  uint64_t i;
  std::__shared_weak_count *v4;

  v2 = *a1;
  for (i = a1[1]; i != v2; i -= 16)
  {
    v4 = *(std::__shared_weak_count **)(i - 8);
    if (v4)
      std::__shared_weak_count::__release_weak(v4);
  }
  a1[1] = v2;
}

double mediaplatform::DatabaseConnection::_currentSQLiteError@<D0>(sqlite3 **this@<X0>, uint64_t a2@<X8>)
{
  unsigned int v4;
  double result;
  int v6;
  void **v7;
  const char *v8;
  void *v9[2];
  char v10;
  std::string __p;
  int v12;
  std::string v13;
  int v14;
  unsigned int v15;

  LODWORD(v9[0]) = 36;
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  mediaplatform::PlatformErrorCondition::PlatformErrorCondition(a2, (int *)v9, (__int128 *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (*this)
  {
    v4 = sqlite3_errcode(*this);
    v15 = v4;
    if (v4)
    {
      if (v4 > 0x1A)
        v6 = 36;
      else
        v6 = *(_DWORD *)&asc_20A91932C[4 * v4 - 4];
      v14 = v6;
      std::string::basic_string[abi:ne180100]<0>(v9, "");
      mediaplatform::PlatformErrorCondition::PlatformErrorCondition((uint64_t)&__p, &v14, (__int128 *)v9);
      *(_OWORD *)(a2 + 8) = *(_OWORD *)&__p.__r_.__value_.__r.__words[1];
      *(_DWORD *)(a2 + 32) = v12;
      v7 = (void **)(a2 + 40);
      std::string::operator=((std::string *)(a2 + 40), &v13);
      mediaplatform::PlatformErrorCondition::~PlatformErrorCondition((std::exception *)&__p);
      if (v10 < 0)
        operator delete(v9[0]);
      v8 = sqlite3_errmsg(*this);
      v9[0] = &v8;
      v9[1] = &v15;
      memset(&__p, 0, sizeof(__p));
      mediaplatform::FormatImplementation<int,char const*>((std::string *)"SQLite Error {0}: {1}", &__p, 0, (uint64_t)v9);
      if (*(char *)(a2 + 63) < 0)
        operator delete(*v7);
      result = *(double *)&__p.__r_.__value_.__l.__data_;
      *(_OWORD *)v7 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
      *(_QWORD *)(a2 + 56) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    }
  }
  else
  {
    MEMORY[0x20BD277A8](a2 + 40, "Database connection lost or invalid.");
  }
  return result;
}

void sub_20A8696F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  std::exception *v22;

  mediaplatform::PlatformErrorCondition::~PlatformErrorCondition(v22);
  _Unwind_Resume(a1);
}

void sub_20A869754(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  JUMPOUT(0x20A86974CLL);
}

void mediaplatform::FormatImplementation<int,char const*>(std::string *a1, std::string *a2, std::string::size_type a3, uint64_t a4)
{
  char v8;
  char *v9;
  std::string::size_type i;
  int v11;
  char *v12;
  const char *v13;
  const char *v14;
  const char *v15;
  std::string *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  unsigned __int8 *v26;
  int v27;
  std::runtime_error *exception;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  uint64_t v34[2];
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;

  v8 = 0;
  v39 = *MEMORY[0x24BDAC8D0];
  v9 = (char *)a1;
  for (i = a3; ; ++i)
  {
    v33 = v9;
    if (*v9 == 123)
      break;
    if (!*v9)
    {
      std::string::resize(a2, i, 0);
      if (i != a3)
        mediaplatform::CopyFormatSectionToResult(a1, a2, a3, i - a3, v8 & 1);
      return;
    }
LABEL_7:
    ++v9;
  }
  v11 = v9[1];
  if (v11 == 123)
  {
    v33 = v9 + 1;
    v8 = 1;
    ++v9;
    goto LABEL_7;
  }
  if (v11 == 42)
  {
    v33 = v9 + 2;
    v22 = v9[2];
    if ((v22 - 48) > 9)
    {
      exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      std::runtime_error::runtime_error(exception, "Invalid format string- missing numeric value.");
    }
    else
    {
      v23 = 0;
      v24 = v9 + 3;
      do
      {
        v25 = v24;
        v33 = v24;
        v23 = (v22 - 48) + 10 * v23;
        ++v24;
        v27 = *v25;
        v26 = (unsigned __int8 *)(v25 - 1);
        v22 = v27;
      }
      while ((v27 - 58) >= 0xFFFFFFF6);
      v33 = (char *)(v26 + 2);
      if (*(v24 - 1) == 125)
        mediaplatform::FormatterParameters<0ul,int,char const*>::formatOptionsAtIndex<int,char const*>(v23);
      exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      std::runtime_error::runtime_error(exception, "Invalid format options reference: Must be of form {*<index>} but no trailing '}' found.");
    }
    __cxa_throw(exception, MEMORY[0x24BEDB730], MEMORY[0x24BEDAB60]);
  }
  mediaplatform::FormatOptions::FormatOptions((uint64_t)&v29, (const char **)&v33);
  v12 = v33;
  if (*((_QWORD *)&v29 + 1))
  {
    if (*((_QWORD *)&v29 + 1) != 1)
      mediaplatform::FormatterParameters<2ul>::formatParameterAtIndex<mediaplatform::FormatterParameters<0ul,int,char const*>>();
    v13 = **(const char ***)a4;
    v34[0] = (uint64_t)v13;
    if (v13)
      v13 = (const char *)strlen(v13);
    v34[1] = (uint64_t)v13;
    v35 = v29;
    v36 = v30;
    v37 = v31;
    v38 = v32;
    v14 = (const char *)*((_QWORD *)&v30 + 1);
    if (*((_QWORD *)&v30 + 1) <= (unint64_t)v13)
      v14 = v13;
    if ((_BYTE)v30)
      v15 = v14;
    else
      v15 = v13;
    mediaplatform::FormatImplementation<int,char const*>(v33, a2, &v15[i], a4);
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v16 = a2;
    else
      v16 = (std::string *)a2->__r_.__value_.__r.__words[0];
    mediaplatform::FormatOptions::justifyNativeValueOfLength<std::__wrap_iter<char *>,char const*>(&v29, (_BYTE *)v16 + i, (uint64_t)v34);
  }
  else
  {
    mediaplatform::TypeFormatter<int,void>::TypeFormatter((uint64_t)v34, **(_DWORD **)(a4 + 8), (uint64_t)&v29);
    if ((_BYTE)v37 && !*(_BYTE *)(v34[0] + 48))
      v17 = 32;
    else
      v17 = 33;
    v18 = v17 - *((_QWORD *)&v36 + 1);
    if (*(_BYTE *)(v34[0] + 50) && v18 <= *(_QWORD *)(v34[0] + 24))
      v18 = *(_QWORD *)(v34[0] + 24);
    v19 = *((_QWORD *)&v30 + 1);
    if (*((_QWORD *)&v30 + 1) <= v18)
      v19 = v18;
    if ((_BYTE)v30)
      v20 = v19;
    else
      v20 = v18;
    mediaplatform::FormatImplementation<int,char const*>(v12, a2, v20 + i, a4);
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v21 = (char *)a2;
    else
      v21 = (char *)a2->__r_.__value_.__r.__words[0];
    mediaplatform::FormatOptions::justifyNativeValueOfLength<std::__wrap_iter<char *>,int>((char *)&v29, &v21[i], v34);
  }
  if (i != a3)
    mediaplatform::CopyFormatSectionToResult(a1, a2, a3, i - a3, v8 & 1);
}

void sub_20A869A9C(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void mediaplatform::FormatterParameters<0ul,int,char const*>::formatOptionsAtIndex<int,char const*>(uint64_t a1)
{
  std::runtime_error *exception;

  if (!a1)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Requested parameter is not an FormatOptions instance.");
    __cxa_throw(exception, MEMORY[0x24BEDB730], MEMORY[0x24BEDAB60]);
  }
  mediaplatform::FormatterParameters<1ul,char const*>::formatOptionsAtIndex<int,char const*>(a1);
}

void sub_20A869B00(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void mediaplatform::FormatterParameters<2ul>::formatParameterAtIndex<mediaplatform::FormatterParameters<0ul,int,char const*>>()
{
  std::runtime_error *exception;

  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "Parameter index out of bounds.");
  __cxa_throw(exception, MEMORY[0x24BEDB730], MEMORY[0x24BEDAB60]);
}

void sub_20A869B50(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void mediaplatform::FormatterParameters<1ul,char const*>::formatOptionsAtIndex<int,char const*>(uint64_t a1)
{
  std::runtime_error *exception;

  if (a1 == 1)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Requested parameter is not an FormatOptions instance.");
    __cxa_throw(exception, MEMORY[0x24BEDB730], MEMORY[0x24BEDAB60]);
  }
  mediaplatform::FormatterParameters<2ul>::formatOptionsAtIndex<int,char const*>();
}

void sub_20A869BAC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void mediaplatform::FormatterParameters<2ul>::formatOptionsAtIndex<int,char const*>()
{
  std::runtime_error *exception;

  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "Parameter index out of bounds.");
  __cxa_throw(exception, MEMORY[0x24BEDB730], MEMORY[0x24BEDAB60]);
}

void sub_20A869BFC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void mediaplatform::DatabaseConnection::createInMemoryDatabase(_QWORD *a1@<X8>)
{
  _QWORD *v3;
  std::string __p;

  v3 = operator new(0x158uLL);
  v3[1] = 0;
  v3[2] = 0;
  *v3 = &off_24C3318E0;
  std::string::basic_string[abi:ne180100]<0>(&__p, ":memory:");
  mediaplatform::DatabaseConnection::DatabaseConnection((uint64_t)(v3 + 3), &__p, 0);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  *a1 = v3 + 3;
  a1[1] = v3;
}

void sub_20A869C94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  std::__shared_weak_count *v15;
  void *v17;

  if (a15 < 0)
    operator delete(__p);
  std::__shared_weak_count::~__shared_weak_count(v15);
  operator delete(v17);
  _Unwind_Resume(a1);
}

BOOL mediaplatform::DatabaseConnection::isOpen(mediaplatform::DatabaseConnection *this)
{
  return *((_BYTE *)this + 144) && *(_QWORD *)this != 0;
}

uint64_t mediaplatform::DatabaseConnection::isReadOnly(mediaplatform::DatabaseConnection *this)
{
  return *((unsigned __int8 *)this + 145);
}

BOOL mediaplatform::DatabaseConnection::isInMemoryDatabase(mediaplatform::DatabaseConnection *this)
{
  _BOOL8 v2;
  std::string __p;
  void (**v5)(mediaplatform::FilePath *__hidden);
  uint64_t v6;
  void **v7;

  std::string::basic_string[abi:ne180100]<0>(&__p, ":memory:");
  mediaplatform::FilePath::FilePath(&v5, &__p);
  v2 = mediaplatform::FilePath::operator==((uint64_t)this + 8, (uint64_t)&v5);
  v5 = &off_24C331570;
  v7 = (void **)&v6;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v7);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v2;
}

void sub_20A869D70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *mediaplatform::DatabaseConnection::databasePath@<X0>(__int128 **this@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = &off_24C331570;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 8) = 0;
  return std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>((std::string *)(a2 + 8), this[2], this[3], 0xAAAAAAAAAAAAAAABLL * (((char *)this[3] - (char *)this[2]) >> 3));
}

uint64_t mediaplatform::DatabaseConnection::journalingMode(mediaplatform::DatabaseConnection *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t mediaplatform::DatabaseConnection::setJournalingMode(mediaplatform::DatabaseConnection *a1, int a2)
{
  *((_DWORD *)a1 + 10) = a2;
  return mediaplatform::DatabaseConnection::close(a1);
}

uint64_t mediaplatform::DatabaseConnection::shouldCachePreparedStatements(mediaplatform::DatabaseConnection *this)
{
  return *((unsigned __int8 *)this + 146);
}

uint64_t mediaplatform::DatabaseConnection::setShouldCachePreparedStatements(uint64_t this, char a2)
{
  *(_BYTE *)(this + 146) = a2;
  return this;
}

uint64_t mediaplatform::DatabaseConnection::delegateCallbacks(mediaplatform::DatabaseConnection *this)
{
  return (uint64_t)this + 48;
}

_QWORD *mediaplatform::DatabaseConnection::setDelegateCallbacks(mediaplatform::DatabaseConnection *this, const mediaplatform::DatabaseConnectionCallbacks *a2)
{
  std::function<void ()(mediaplatform::DatabaseConnection &)>::operator=((_QWORD *)this + 6, a2);
  std::function<void ()(mediaplatform::DatabaseConnection &)>::operator=((_QWORD *)this + 10, (_QWORD *)a2 + 4);
  return std::function<void ()(mediaplatform::DatabaseConnection &)>::operator=((_QWORD *)this + 14, (_QWORD *)a2 + 8);
}

uint64_t *mediaplatform::DatabaseConnection::open(mediaplatform::DatabaseConnection *this)
{
  mediaplatform::FilePath *v2;
  _BOOL4 v3;
  int v4;
  int v5;
  void **v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  mediaplatform::PlatformErrorCondition *v12;
  mediaplatform::PlatformErrorCondition *exception;
  mediaplatform::PlatformErrorCondition *v14;
  sqlite3 *v15[2];
  char v16;
  int v17;
  void *__p[2];
  char v19;
  _BYTE v20[24];
  void (**v21)(mediaplatform::File *__hidden);
  uint64_t v22;

  v2 = (mediaplatform::DatabaseConnection *)((char *)this + 8);
  mediaplatform::File::File((mediaplatform::File *)&v21, (mediaplatform::DatabaseConnection *)((char *)this + 8));
  if (!mediaplatform::DatabaseConnection::isInMemoryDatabase(this)
    && mediaplatform::File::exists((mediaplatform::FilePath **)&v21))
  {
    if (!mediaplatform::File::isReadable((mediaplatform::FilePath **)&v21))
    {
      v17 = 7;
      std::string::basic_string[abi:ne180100]<0>(v15, "");
      mediaplatform::PlatformErrorCondition::PlatformErrorCondition((uint64_t)__p, &v17, (__int128 *)v15);
      if (v16 < 0)
        operator delete(v15[0]);
      MEMORY[0x20BD277A8](v20, "Cannot read database file.");
      exception = (mediaplatform::PlatformErrorCondition *)__cxa_allocate_exception(0x40uLL);
      mediaplatform::PlatformErrorCondition::PlatformErrorCondition(exception, (const mediaplatform::PlatformErrorCondition *)__p);
    }
    if (!*((_BYTE *)this + 145) && !mediaplatform::File::isWritable((mediaplatform::FilePath **)&v21))
    {
      v17 = 7;
      std::string::basic_string[abi:ne180100]<0>(v15, "");
      mediaplatform::PlatformErrorCondition::PlatformErrorCondition((uint64_t)__p, &v17, (__int128 *)v15);
      if (v16 < 0)
        operator delete(v15[0]);
      MEMORY[0x20BD277A8](v20, "Tried to open as read/write, but permission is denied to write to database file.");
      v14 = (mediaplatform::PlatformErrorCondition *)__cxa_allocate_exception(0x40uLL);
      mediaplatform::PlatformErrorCondition::PlatformErrorCondition(v14, (const mediaplatform::PlatformErrorCondition *)__p);
    }
  }
  v3 = !mediaplatform::File::exists((mediaplatform::FilePath **)&v21)
    && mediaplatform::File::isWritable((mediaplatform::FilePath **)&v21);
  v4 = *((unsigned __int8 *)this + 145);
  v15[0] = 0;
  mediaplatform::FilePath::str(v2, (uint64_t)__p);
  if (v4)
    v5 = 1;
  else
    v5 = 6;
  if (v19 >= 0)
    v6 = __p;
  else
    v6 = (void **)__p[0];
  v7 = sqlite3_open_v2((const char *)v6, v15, v5, 0);
  if (v19 < 0)
    operator delete(__p[0]);
  if (v7)
  {
    mediaplatform::DatabaseConnection::_currentSQLiteError((sqlite3 **)this, (uint64_t)__p);
    v12 = (mediaplatform::PlatformErrorCondition *)__cxa_allocate_exception(0x40uLL);
    mediaplatform::PlatformErrorCondition::PlatformErrorCondition(v12, (const mediaplatform::PlatformErrorCondition *)__p);
  }
  if (v3)
  {
    v8 = *((_QWORD *)this + 9);
    if (v8)
      (*(void (**)(uint64_t, mediaplatform::DatabaseConnection *))(*(_QWORD *)v8 + 48))(v8, this);
  }
  __p[0] = 0;
  sqlite3_extended_result_codes(v15[0], 1);
  v9 = *((_DWORD *)this + 10);
  if (v9)
  {
    if (v9 == 1)
    {
      v17 = 1;
      sqlite3_file_control(v15[0], 0, 10, &v17);
      sqlite3_exec(v15[0], "PRAGMA journal_mode=WAL", 0, 0, (char **)__p);
    }
  }
  else
  {
    v17 = 0;
    sqlite3_file_control(v15[0], 0, 10, &v17);
    sqlite3_exec(v15[0], "PRAGMA journal_mode=DELETE", 0, 0, (char **)__p);
  }
  *(sqlite3 **)this = v15[0];
  *((_BYTE *)this + 144) = 1;
  v10 = *((_QWORD *)this + 13);
  if (v10)
    (*(void (**)(uint64_t, mediaplatform::DatabaseConnection *))(*(_QWORD *)v10 + 48))(v10, this);
  v21 = &off_24C331550;
  return std::unique_ptr<mediaplatform::File::FilePrivate>::reset[abi:ne180100](&v22);
}

void sub_20A86A134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, std::exception a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  void *v21;
  uint64_t v22;

  __cxa_free_exception(v21);
  mediaplatform::PlatformErrorCondition::~PlatformErrorCondition(&a16);
  *(_QWORD *)(v22 - 64) = &off_24C331550;
  std::unique_ptr<mediaplatform::File::FilePrivate>::reset[abi:ne180100]((uint64_t *)(v22 - 56));
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseConnection::currentUserVersion(mediaplatform::DatabaseConnection *this)
{
  char *v2;
  unint64_t *v3;
  std::string *v4;
  int v5;
  unint64_t v6;
  void *v7;
  int v8;
  std::runtime_error *exception;
  uint64_t v10;
  int v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v20;
  std::__shared_weak_count *v21;
  void *__p[2];
  uint64_t v23;

  v2 = (char *)operator new(0x58uLL);
  *((_QWORD *)v2 + 1) = 0;
  v3 = (unint64_t *)(v2 + 8);
  *((_QWORD *)v2 + 2) = 0;
  *(_QWORD *)v2 = &off_24C331918;
  std::string::basic_string[abi:ne180100]<0>(__p, "user_version");
  *((_QWORD *)v2 + 3) = off_24C331028;
  v4 = (std::string *)(v2 + 32);
  if (SHIBYTE(v23) < 0)
  {
    std::string::__init_copy_ctor_external(v4, (const std::string::value_type *)__p[0], (std::string::size_type)__p[1]);
    v5 = SHIBYTE(v23);
    *((_QWORD *)v2 + 8) = 0;
    *((_QWORD *)v2 + 9) = 0;
    *((_QWORD *)v2 + 7) = 0;
    v2[84] = 0;
    if (v5 < 0)
      operator delete(__p[0]);
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
    *((_QWORD *)v2 + 6) = v23;
    *((_QWORD *)v2 + 8) = 0;
    *((_QWORD *)v2 + 9) = 0;
    *((_QWORD *)v2 + 7) = 0;
    v2[84] = 0;
  }
  v21 = (std::__shared_weak_count *)v2;
  v20 = (std::__shared_weak_count *)v2;
  do
    v6 = __ldxr(v3);
  while (__stxr(v6 + 1, v3));
  mediaplatform::DatabaseConnection::executeQueryStatement<int>((uint64_t *)__p, (uint64_t *)this, (uint64_t)(v2 + 24));
  v7 = __p[0];
  v8 = sqlite3_step(*((sqlite3_stmt **)__p[0] + 3));
  mediaplatform::DatabaseStatement::_checkSQLiteResult((uint64_t)v7, v8);
  *((_DWORD *)v7 + 14) = v8;
  if (v8 != 100)
  {
    if (v8 != -1)
    {
      exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      std::runtime_error::runtime_error(exception, "no column data exists for statement");
      __cxa_throw(exception, MEMORY[0x24BEDB730], MEMORY[0x24BEDAB60]);
    }
    __assert_rtn("hasColumnValueData", "DatabaseStatement.cpp", 102, "_lastStepResult != -1");
  }
  v10 = sqlite3_column_int(*((sqlite3_stmt **)v7 + 3), 0);
  v11 = sqlite3_reset(*((sqlite3_stmt **)v7 + 3));
  mediaplatform::DatabaseStatement::_checkSQLiteResult((uint64_t)v7, v11);
  *((_DWORD *)v7 + 14) = -1;
  v12 = (std::__shared_weak_count *)__p[1];
  if (__p[1])
  {
    v13 = (unint64_t *)((char *)__p[1] + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  if (v21)
  {
    v17 = (unint64_t *)&v21->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
  return v10;
}

void sub_20A86A4B4(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __cxa_free_exception(v1);
  __cxa_end_catch();
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&v5);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&v3);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&v4);
  _Unwind_Resume(a1);
}

void sub_20A86A4D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&v22);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&v20);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&v21);
  _Unwind_Resume(a1);
}

void mediaplatform::DatabaseConnection::executeQueryStatement<int>(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  void *__p[2];
  char v15;
  uint64_t v16;
  std::__shared_weak_count *v17;

  (*(void (**)(void **__return_ptr, uint64_t, _QWORD))(*(_QWORD *)a3 + 16))(__p, a3, 0);
  mediaplatform::DatabaseConnection::_ensureConnectionIsOpen(a2);
  mediaplatform::DatabaseConnection::_prepareStatement((uint64_t)a2, (unsigned __int8 *)__p, &v16);
  v5 = v16;
  v6 = v17;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    *a1 = v5;
    a1[1] = (uint64_t)v6;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  else
  {
    *a1 = v16;
    a1[1] = 0;
  }
  v11 = v17;
  if (v17)
  {
    v12 = (unint64_t *)&v17->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v15 < 0)
    operator delete(__p[0]);
}

void sub_20A86A648(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *mediaplatform::DatabaseConnection::_ensureConnectionIsOpen(uint64_t *this)
{
  uint64_t *v1;
  std::runtime_error *exception;

  if (!*((_BYTE *)this + 144))
  {
    v1 = this;
    this = mediaplatform::DatabaseConnection::open((mediaplatform::DatabaseConnection *)this);
    if (!*((_BYTE *)v1 + 144))
    {
      exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      std::runtime_error::runtime_error(exception, "Could not open database file.");
      __cxa_throw(exception, MEMORY[0x24BEDB730], MEMORY[0x24BEDAB60]);
    }
  }
  return this;
}

void sub_20A86A6C4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void mediaplatform::DatabaseConnection::_prepareStatement(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  std::string::size_type v12;
  unint64_t *v13;
  unint64_t v14;
  std::string::size_type v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  uint64_t v20;
  std::__shared_weak_count *shared_weak_owners;
  unint64_t v22;
  unint64_t *p_shared_weak_owners;
  unint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  std::__shared_weak_count *size;
  unint64_t *v30;
  unint64_t v31;
  __int128 v32;
  uint64_t v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  _QWORD *v38;
  _OWORD *v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  __int128 v48;
  char *v49;
  std::__shared_weak_count *v50;
  std::__shared_weak_count *v51;
  unint64_t *p_shared_owners;
  unint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  int v57;
  unint64_t *v58;
  unint64_t v59;
  void **v60;
  unsigned __int8 *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  std::__shared_weak_count *v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint8x8_t v78;
  unint64_t v79;
  unsigned __int8 **v80;
  unsigned __int8 *v81;
  unint64_t v82;
  char *v83;
  unsigned __int8 **v84;
  std::string *v85;
  float v86;
  float v87;
  _BOOL8 v88;
  unint64_t v89;
  unint64_t v90;
  int8x8_t prime;
  void *v92;
  void *v93;
  uint64_t v94;
  unsigned __int8 *v95;
  unint64_t v96;
  uint8x8_t v97;
  unint64_t v98;
  uint8x8_t v99;
  uint64_t v100;
  unsigned __int8 *v101;
  unint64_t v102;
  unsigned __int8 **v103;
  unsigned __int8 **v104;
  unint64_t v105;
  unint64_t *v106;
  unint64_t v107;
  unint64_t *v108;
  unint64_t v109;
  void *v110;
  std::runtime_error *exception;
  __int128 v112;
  unsigned __int8 **v113;
  std::__shared_weak_count *v114;
  std::string v115;
  __int128 v116;
  _QWORD *v117;
  _QWORD v118[2];
  char v119;

  v3 = (uint64_t)a2;
  *a3 = 0;
  a3[1] = 0;
  if (*(_BYTE *)(a1 + 146))
  {
    v6 = std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>((_QWORD *)(a1 + 232), a2);
    if (v6)
    {
      v7 = v6;
      v8 = (_OWORD *)*((_QWORD *)v6 + 7);
      v9 = operator new(0x20uLL);
      v9[1] = v8[1];
      v10 = *(_QWORD *)(a1 + 272);
      *(_QWORD *)(v10 + 8) = v9;
      *(_QWORD *)(a1 + 272) = v9;
      *(_QWORD *)v9 = v10;
      *((_QWORD *)v9 + 1) = a1 + 272;
      v11 = *(_QWORD *)v8;
      *(_QWORD *)(v11 + 8) = *((_QWORD *)v8 + 1);
      **((_QWORD **)v8 + 1) = v11;
      operator delete(v8);
      *((_QWORD *)v7 + 7) = v9;
      v12 = *((_QWORD *)v7 + 6);
      v115.__r_.__value_.__r.__words[0] = *((_QWORD *)v7 + 5);
      v115.__r_.__value_.__l.__size_ = v12;
      if (v12)
      {
        v13 = (unint64_t *)(v12 + 8);
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
        v115.__r_.__value_.__s.__data_[16] = 1;
        v15 = v115.__r_.__value_.__r.__words[0];
        v16 = (unint64_t *)(v12 + 8);
        do
          v17 = __ldxr(v16);
        while (__stxr(v17 + 1, v16));
      }
      else
      {
        v115.__r_.__value_.__s.__data_[16] = 1;
        v15 = v115.__r_.__value_.__r.__words[0];
      }
      v51 = (std::__shared_weak_count *)a3[1];
      *a3 = v15;
      a3[1] = v12;
      if (v51)
      {
        p_shared_owners = (unint64_t *)&v51->__shared_owners_;
        do
          v53 = __ldaxr(p_shared_owners);
        while (__stlxr(v53 - 1, p_shared_owners));
        if (!v53)
        {
          ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
          std::__shared_weak_count::__release_weak(v51);
        }
      }
      v54 = *a3;
      v55 = sqlite3_reset(*(sqlite3_stmt **)(*a3 + 24));
      mediaplatform::DatabaseStatement::_checkSQLiteResult(v54, v55);
      *(_DWORD *)(v54 + 56) = -1;
      v56 = *a3;
      v57 = sqlite3_clear_bindings(*(sqlite3_stmt **)(*a3 + 24));
      mediaplatform::DatabaseStatement::_checkSQLiteResult(v56, v57);
      if (v115.__r_.__value_.__s.__data_[16] && v115.__r_.__value_.__l.__size_)
      {
        v58 = (unint64_t *)(v115.__r_.__value_.__l.__size_ + 8);
        do
          v59 = __ldaxr(v58);
        while (__stlxr(v59 - 1, v58));
        if (!v59)
        {
          (*(void (**)(std::string::size_type))(*(_QWORD *)v115.__r_.__value_.__l.__size_ + 16))(v115.__r_.__value_.__l.__size_);
          std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v115.__r_.__value_.__l.__size_);
        }
      }
      return;
    }
  }
  v18 = (std::__shared_weak_count *)operator new(0x58uLL);
  v18->__shared_owners_ = 0;
  v19 = (unint64_t *)&v18->__shared_owners_;
  v18->__shared_weak_owners_ = 0;
  v18->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3318A8;
  v20 = mediaplatform::DatabaseStatement::DatabaseStatement((uint64_t)&v18[1], *(sqlite3 **)a1, v3);
  v115.__r_.__value_.__r.__words[0] = v20;
  v115.__r_.__value_.__l.__size_ = (std::string::size_type)v18;
  shared_weak_owners = (std::__shared_weak_count *)v18[1].__shared_weak_owners_;
  if (shared_weak_owners)
  {
    if (shared_weak_owners->__shared_owners_ != -1)
      goto LABEL_22;
    do
      v22 = __ldxr(v19);
    while (__stxr(v22 + 1, v19));
    p_shared_weak_owners = (unint64_t *)&v18->__shared_weak_owners_;
    do
      v24 = __ldxr(p_shared_weak_owners);
    while (__stxr(v24 + 1, p_shared_weak_owners));
    v18[1].__shared_owners_ = v20;
    v18[1].__shared_weak_owners_ = (uint64_t)v18;
    std::__shared_weak_count::__release_weak(shared_weak_owners);
  }
  else
  {
    do
      v25 = __ldxr(v19);
    while (__stxr(v25 + 1, v19));
    v26 = (unint64_t *)&v18->__shared_weak_owners_;
    do
      v27 = __ldxr(v26);
    while (__stxr(v27 + 1, v26));
    v18[1].__shared_owners_ = v20;
    v18[1].__shared_weak_owners_ = (uint64_t)v18;
  }
  do
    v28 = __ldaxr(v19);
  while (__stlxr(v28 - 1, v19));
  if (!v28)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
  }
LABEL_22:
  std::shared_ptr<mlcore::Predicate>::operator=[abi:ne180100]((uint64_t)a3, (__int128 *)&v115);
  size = (std::__shared_weak_count *)v115.__r_.__value_.__l.__size_;
  if (v115.__r_.__value_.__l.__size_)
  {
    v30 = (unint64_t *)(v115.__r_.__value_.__l.__size_ + 8);
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  v32 = *(_OWORD *)a3;
  v33 = a3[1];
  if (v33)
  {
    v34 = (unint64_t *)(v33 + 16);
    do
      v35 = __ldxr(v34);
    while (__stxr(v35 + 1, v34));
  }
  v37 = *(char **)(a1 + 304);
  v36 = *(_QWORD *)(a1 + 312);
  if ((unint64_t)v37 >= v36)
  {
    v40 = *(char **)(a1 + 296);
    v41 = (v37 - v40) >> 4;
    v42 = v41 + 1;
    if ((unint64_t)(v41 + 1) >> 60)
      std::vector<std::string>::__throw_length_error[abi:ne180100]();
    v112 = v32;
    v43 = v36 - (_QWORD)v40;
    if (v43 >> 3 > v42)
      v42 = v43 >> 3;
    if ((unint64_t)v43 >= 0x7FFFFFFFFFFFFFF0)
      v44 = 0xFFFFFFFFFFFFFFFLL;
    else
      v44 = v42;
    if (v44 >> 60)
      std::__throw_bad_array_new_length[abi:ne180100]();
    v45 = (char *)operator new(16 * v44);
    v46 = &v45[16 * v41];
    v47 = &v45[16 * v44];
    *(_OWORD *)v46 = v112;
    v39 = v46 + 16;
    if (v37 == v40)
    {
      *(_QWORD *)(a1 + 296) = v46;
      *(_QWORD *)(a1 + 304) = v39;
      *(_QWORD *)(a1 + 312) = v47;
    }
    else
    {
      do
      {
        v48 = *((_OWORD *)v37 - 1);
        v37 -= 16;
        *((_OWORD *)v46 - 1) = v48;
        v46 -= 16;
        *(_QWORD *)v37 = 0;
        *((_QWORD *)v37 + 1) = 0;
      }
      while (v37 != v40);
      v37 = *(char **)(a1 + 296);
      v49 = *(char **)(a1 + 304);
      *(_QWORD *)(a1 + 296) = v46;
      *(_QWORD *)(a1 + 304) = v39;
      *(_QWORD *)(a1 + 312) = v47;
      while (v49 != v37)
      {
        v50 = (std::__shared_weak_count *)*((_QWORD *)v49 - 1);
        if (v50)
          std::__shared_weak_count::__release_weak(v50);
        v49 -= 16;
      }
    }
    if (v37)
      operator delete(v37);
  }
  else
  {
    *(_OWORD *)v37 = v32;
    v38 = v37 + 16;
    *(_QWORD *)(a1 + 304) = v38;
    v39 = v38;
  }
  *(_QWORD *)(a1 + 304) = v39;
  if (!*(_BYTE *)(a1 + 146))
    return;
  v60 = (void **)(a1 + 232);
  v61 = std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>((_QWORD *)(a1 + 232), (unsigned __int8 *)v3);
  if (v61)
    mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::_removeEntry((_QWORD *)(a1 + 208), v61);
  if (*(_QWORD *)(a1 + 224) > *(_QWORD *)(a1 + 216))
  {
    v62 = a1 + 272;
    v63 = a1 + 280;
    do
    {
      do
      {
        v64 = *(_QWORD *)v63;
        v65 = *(_QWORD *)(*(_QWORD *)v63 + 24);
        v63 = *(_QWORD *)v63 + 8;
      }
      while (v64 != v62 && v65 == 0);
      if (v64 == v62)
      {
        exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
        std::runtime_error::runtime_error(exception, "no room in cache");
        __cxa_throw(exception, MEMORY[0x24BEDB730], MEMORY[0x24BEDAB60]);
      }
      mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::_removeEntry((_QWORD *)(a1 + 208), *(_QWORD **)(v64 + 16));
      v63 = a1 + 280;
    }
    while (*(_QWORD *)(a1 + 224) > *(_QWORD *)(a1 + 216));
  }
  if ((unint64_t)(*(_QWORD *)(a1 + 256) + 1) > *(_QWORD *)(a1 + 208))
    mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::_removeEntry((_QWORD *)(a1 + 208), *(_QWORD **)(*(_QWORD *)(a1 + 280) + 16));
  v67 = operator new(0x20uLL);
  v67[2] = 0;
  v67[3] = 0;
  v68 = *(_QWORD *)(a1 + 272);
  *(_QWORD *)(v68 + 8) = v67;
  *(_QWORD *)(a1 + 272) = v67;
  *v67 = v68;
  v67[1] = a1 + 272;
  ++*(_QWORD *)(a1 + 288);
  v69 = *a3;
  v70 = (std::__shared_weak_count *)a3[1];
  v114 = v70;
  if (v70)
  {
    v71 = (unint64_t *)&v70->__shared_owners_;
    do
      v72 = __ldxr(v71);
    while (__stxr(v72 + 1, v71));
  }
  if (*(char *)(v3 + 23) < 0)
    std::string::__init_copy_ctor_external(&v115, *(const std::string::value_type **)v3, *(_QWORD *)(v3 + 8));
  else
    v115 = *(std::string *)v3;
  v113 = (unsigned __int8 **)(v67 + 2);
  *(_QWORD *)&v116 = v69;
  *((_QWORD *)&v116 + 1) = v70;
  if (v70)
  {
    v73 = (unint64_t *)&v70->__shared_owners_;
    do
      v74 = __ldxr(v73);
    while (__stxr(v74 + 1, v73));
  }
  v117 = v67;
  v75 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)&v115);
  v76 = v75;
  v77 = *(_QWORD *)(a1 + 240);
  if (!v77)
    goto LABEL_100;
  v78 = (uint8x8_t)vcnt_s8((int8x8_t)v77);
  v78.i16[0] = vaddlv_u8(v78);
  v79 = v78.u32[0];
  if (v78.u32[0] > 1uLL)
  {
    v3 = v75;
    if (v75 >= v77)
      v3 = v75 % v77;
  }
  else
  {
    v3 = (v77 - 1) & v75;
  }
  v80 = (unsigned __int8 **)*((_QWORD *)*v60 + v3);
  if (!v80 || (v81 = *v80) == 0)
  {
LABEL_100:
    v83 = (char *)operator new(0x40uLL);
    v84 = (unsigned __int8 **)(a1 + 248);
    v118[0] = v83;
    v118[1] = a1 + 248;
    v119 = 0;
    *(_QWORD *)v83 = 0;
    *((_QWORD *)v83 + 1) = v76;
    v85 = (std::string *)(v83 + 16);
    if (SHIBYTE(v115.__r_.__value_.__r.__words[2]) < 0)
    {
      std::string::__init_copy_ctor_external(v85, v115.__r_.__value_.__l.__data_, v115.__r_.__value_.__l.__size_);
    }
    else
    {
      *(_OWORD *)&v85->__r_.__value_.__l.__data_ = *(_OWORD *)&v115.__r_.__value_.__l.__data_;
      *((_QWORD *)v83 + 4) = *((_QWORD *)&v115.__r_.__value_.__l + 2);
    }
    *(_OWORD *)(v83 + 40) = v116;
    v116 = 0uLL;
    *((_QWORD *)v83 + 7) = v67;
    v119 = 1;
    v86 = (float)(unint64_t)(*(_QWORD *)(a1 + 256) + 1);
    v87 = *(float *)(a1 + 264);
    if (v77 && (float)(v87 * (float)v77) >= v86)
    {
LABEL_149:
      v103 = (unsigned __int8 **)*((_QWORD *)*v60 + v3);
      v81 = (unsigned __int8 *)v118[0];
      if (v103)
      {
        *(_QWORD *)v118[0] = *v103;
        v104 = v113;
      }
      else
      {
        *(_QWORD *)v118[0] = *v84;
        *v84 = v81;
        *((_QWORD *)*v60 + v3) = v84;
        v104 = v113;
        if (!*(_QWORD *)v81)
        {
LABEL_158:
          v118[0] = 0;
          ++*(_QWORD *)(a1 + 256);
          std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>,void *>>>>::reset[abi:ne180100]((uint64_t)v118);
          goto LABEL_159;
        }
        v105 = *(_QWORD *)(*(_QWORD *)v81 + 8);
        if ((v77 & (v77 - 1)) != 0)
        {
          if (v105 >= v77)
            v105 %= v77;
        }
        else
        {
          v105 &= v77 - 1;
        }
        v103 = (unsigned __int8 **)((char *)*v60 + 8 * v105);
      }
      *v103 = v81;
      goto LABEL_158;
    }
    v88 = 1;
    if (v77 >= 3)
      v88 = (v77 & (v77 - 1)) != 0;
    v89 = v88 | (2 * v77);
    v90 = vcvtps_u32_f32(v86 / v87);
    if (v89 <= v90)
      prime = (int8x8_t)v90;
    else
      prime = (int8x8_t)v89;
    if (*(_QWORD *)&prime == 1)
    {
      prime = (int8x8_t)2;
    }
    else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
    {
      prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
    }
    v77 = *(_QWORD *)(a1 + 240);
    if (*(_QWORD *)&prime > v77)
      goto LABEL_115;
    if (*(_QWORD *)&prime < v77)
    {
      v98 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 256) / *(float *)(a1 + 264));
      if (v77 < 3 || (v99 = (uint8x8_t)vcnt_s8((int8x8_t)v77), v99.i16[0] = vaddlv_u8(v99), v99.u32[0] > 1uLL))
      {
        v98 = std::__next_prime(v98);
      }
      else
      {
        v100 = 1 << -(char)__clz(v98 - 1);
        if (v98 >= 2)
          v98 = v100;
      }
      if (*(_QWORD *)&prime <= v98)
        prime = (int8x8_t)v98;
      if (*(_QWORD *)&prime >= v77)
      {
        v77 = *(_QWORD *)(a1 + 240);
      }
      else
      {
        if (prime)
        {
LABEL_115:
          if (*(_QWORD *)&prime >> 61)
            std::__throw_bad_array_new_length[abi:ne180100]();
          v92 = operator new(8 * *(_QWORD *)&prime);
          v93 = *v60;
          *v60 = v92;
          if (v93)
            operator delete(v93);
          v94 = 0;
          *(int8x8_t *)(a1 + 240) = prime;
          do
            *((_QWORD *)*v60 + v94++) = 0;
          while (*(_QWORD *)&prime != v94);
          v95 = *v84;
          if (*v84)
          {
            v96 = *((_QWORD *)v95 + 1);
            v97 = (uint8x8_t)vcnt_s8(prime);
            v97.i16[0] = vaddlv_u8(v97);
            if (v97.u32[0] > 1uLL)
            {
              if (v96 >= *(_QWORD *)&prime)
                v96 %= *(_QWORD *)&prime;
            }
            else
            {
              v96 &= *(_QWORD *)&prime - 1;
            }
            *((_QWORD *)*v60 + v96) = v84;
            v101 = *(unsigned __int8 **)v95;
            if (*(_QWORD *)v95)
            {
              do
              {
                v102 = *((_QWORD *)v101 + 1);
                if (v97.u32[0] > 1uLL)
                {
                  if (v102 >= *(_QWORD *)&prime)
                    v102 %= *(_QWORD *)&prime;
                }
                else
                {
                  v102 &= *(_QWORD *)&prime - 1;
                }
                if (v102 != v96)
                {
                  if (!*((_QWORD *)*v60 + v102))
                  {
                    *((_QWORD *)*v60 + v102) = v95;
                    goto LABEL_140;
                  }
                  *(_QWORD *)v95 = *(_QWORD *)v101;
                  *(_QWORD *)v101 = **((_QWORD **)*v60 + v102);
                  **((_QWORD **)*v60 + v102) = v101;
                  v101 = v95;
                }
                v102 = v96;
LABEL_140:
                v95 = v101;
                v101 = *(unsigned __int8 **)v101;
                v96 = v102;
              }
              while (v101);
            }
          }
          v77 = (unint64_t)prime;
          goto LABEL_144;
        }
        v110 = *v60;
        *v60 = 0;
        if (v110)
          operator delete(v110);
        v77 = 0;
        *(_QWORD *)(a1 + 240) = 0;
      }
    }
LABEL_144:
    if ((v77 & (v77 - 1)) != 0)
    {
      if (v76 >= v77)
        v3 = v76 % v77;
      else
        v3 = v76;
    }
    else
    {
      v3 = (v77 - 1) & v76;
    }
    goto LABEL_149;
  }
  while (1)
  {
    v82 = *((_QWORD *)v81 + 1);
    if (v82 == v76)
      break;
    if (v79 > 1)
    {
      if (v82 >= v77)
        v82 %= v77;
    }
    else
    {
      v82 &= v77 - 1;
    }
    if (v82 != v3)
      goto LABEL_100;
LABEL_99:
    v81 = *(unsigned __int8 **)v81;
    if (!v81)
      goto LABEL_100;
  }
  if (!std::equal_to<std::string>::operator()[abi:ne180100](v81 + 16, (unsigned __int8 *)&v115))
    goto LABEL_99;
  if (v70)
  {
    v108 = (unint64_t *)&v70->__shared_owners_;
    v104 = (unsigned __int8 **)(v67 + 2);
    do
      v109 = __ldaxr(v108);
    while (__stlxr(v109 - 1, v108));
    if (!v109)
    {
      ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
      std::__shared_weak_count::__release_weak(v70);
    }
  }
  else
  {
    v104 = (unsigned __int8 **)(v67 + 2);
  }
LABEL_159:
  if (SHIBYTE(v115.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v115.__r_.__value_.__l.__data_);
  if (v114)
  {
    v106 = (unint64_t *)&v114->__shared_owners_;
    do
      v107 = __ldaxr(v106);
    while (__stlxr(v107 - 1, v106));
    if (!v107)
    {
      ((void (*)(std::__shared_weak_count *))v114->__on_zero_shared)(v114);
      std::__shared_weak_count::__release_weak(v114);
    }
  }
  *v104 = v81;
}

void sub_20A86B0CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, std::chrono::nanoseconds __ns, uint64_t a18, char a19)
{
  uint64_t v19;
  uint64_t v20;
  const mediaplatform::PlatformErrorCondition *v23;
  const mediaplatform::PlatformErrorCondition *v24;
  mediaplatform::PlatformErrorCondition *exception;

  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>,void *>>>>::reset[abi:ne180100](v20 - 104);
  std::pair<std::string const,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>::~pair((uint64_t)&__ns);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a14);
  if (a2 == 1)
  {
    v23 = (const mediaplatform::PlatformErrorCondition *)__cxa_begin_catch(a1);
    v24 = v23;
    if ((*((_DWORD *)v23 + 2) & 0xFFFFFFFE) == 0xC)
    {
      __ns.__rep_ = 1000000000;
      std::this_thread::sleep_for (&__ns);
      exception = (mediaplatform::PlatformErrorCondition *)__cxa_allocate_exception(0x40uLL);
      mediaplatform::PlatformErrorCondition::PlatformErrorCondition(exception, v24);
    }
    mediaplatform::DatabaseConnection::_handleStatementPrepareError((uint64_t)v23, v23);
  }
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100](v19);
  _Unwind_Resume(a1);
}

void sub_20A86B1F0()
{
  void *v0;

  __cxa_free_exception(v0);
  __cxa_end_catch();
  JUMPOUT(0x20A86B208);
}

void mediaplatform::DatabaseConnection::_handleStatementPrepareError(uint64_t a1, const mediaplatform::PlatformErrorCondition *a2)
{
  mediaplatform::PlatformErrorCondition *exception;

  exception = (mediaplatform::PlatformErrorCondition *)__cxa_allocate_exception(0x40uLL);
  mediaplatform::PlatformErrorCondition::PlatformErrorCondition(exception, a2);
}

void sub_20A86B27C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::_removeEntry(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v4;
  uint64_t v5;
  int8x8_t v6;
  unint64_t v7;
  uint8x8_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[2];
  char v17;

  v4 = (uint64_t *)a2[7];
  a1[2] -= v4[3];
  v5 = *v4;
  *(_QWORD *)(v5 + 8) = v4[1];
  *(_QWORD *)v4[1] = v5;
  --a1[10];
  operator delete(v4);
  v6 = (int8x8_t)a1[4];
  v7 = a2[1];
  v8 = (uint8x8_t)vcnt_s8(v6);
  v8.i16[0] = vaddlv_u8(v8);
  if (v8.u32[0] > 1uLL)
  {
    if (v7 >= *(_QWORD *)&v6)
      v7 %= *(_QWORD *)&v6;
  }
  else
  {
    v7 &= *(_QWORD *)&v6 - 1;
  }
  v9 = a1[3];
  v10 = *(_QWORD **)(v9 + 8 * v7);
  do
  {
    v11 = v10;
    v10 = (_QWORD *)*v10;
  }
  while (v10 != a2);
  if (v11 == a1 + 5)
    goto LABEL_18;
  v12 = v11[1];
  if (v8.u32[0] > 1uLL)
  {
    if (v12 >= *(_QWORD *)&v6)
      v12 %= *(_QWORD *)&v6;
  }
  else
  {
    v12 &= *(_QWORD *)&v6 - 1;
  }
  if (v12 != v7)
  {
LABEL_18:
    if (!*a2)
      goto LABEL_19;
    v13 = *(_QWORD *)(*a2 + 8);
    if (v8.u32[0] > 1uLL)
    {
      if (v13 >= *(_QWORD *)&v6)
        v13 %= *(_QWORD *)&v6;
    }
    else
    {
      v13 &= *(_QWORD *)&v6 - 1;
    }
    if (v13 != v7)
LABEL_19:
      *(_QWORD *)(v9 + 8 * v7) = 0;
  }
  v14 = *a2;
  if (*a2)
  {
    v15 = *(_QWORD *)(v14 + 8);
    if (v8.u32[0] > 1uLL)
    {
      if (v15 >= *(_QWORD *)&v6)
        v15 %= *(_QWORD *)&v6;
    }
    else
    {
      v15 &= *(_QWORD *)&v6 - 1;
    }
    if (v15 != v7)
    {
      *(_QWORD *)(a1[3] + 8 * v15) = v11;
      v14 = *a2;
    }
  }
  *v11 = v14;
  *a2 = 0;
  --a1[6];
  v16[0] = a2;
  v16[1] = a1 + 5;
  v17 = 1;
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>,void *>>>>::reset[abi:ne180100]((uint64_t)v16);
}

uint64_t std::pair<std::string const,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>::~pair(uint64_t a1)
{
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100](a1 + 24);
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

void std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v1)
  {
    if (*(_BYTE *)(a1 + 16))
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,mediaplatform::Cache<std::string,std::shared_ptr<mediaplatform::DatabaseStatement>,std::hash<std::string>,std::equal_to<std::string>>::Entry>,0>((uint64_t)v1 + 16);
    operator delete(v1);
  }
}

void std::__shared_ptr_emplace<mediaplatform::DatabaseStatement>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3318A8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mediaplatform::DatabaseStatement>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3318A8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t std::__shared_ptr_emplace<mediaplatform::DatabaseStatement>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t mediaplatform::SQLPragmaStatement<int>::~SQLPragmaStatement(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C331028;
  if (*(char *)(a1 + 55) < 0)
    operator delete(*(void **)(a1 + 32));
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void mediaplatform::SQLPragmaStatement<int>::~SQLPragmaStatement(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C331028;
  if (*(char *)(a1 + 55) < 0)
    operator delete(*(void **)(a1 + 32));
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  JUMPOUT(0x20BD27AFCLL);
}

void mediaplatform::SQLPragmaStatement<int>::sql(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v4;
  std::string *p_p;
  std::string::size_type size;
  std::string __p;

  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  if (*(char *)(a1 + 55) < 0)
    v4 = *(_QWORD *)(a1 + 40);
  else
    v4 = *(unsigned __int8 *)(a1 + 55);
  if (v4)
    mediaplatform::FormatString<std::string,std::string>(&__p, (std::string *)"PRAGMA {0}.{1}", a1 + 32, a1 + 8);
  else
    mediaplatform::FormatString<std::string>(&__p, (std::string *)"PRAGMA {0}", a1 + 8);
  *a2 = __p;
  if (*(_BYTE *)(a1 + 60))
  {
    mediaplatform::FormatString<int>(&__p, (std::string *)" = {0}", (int *)(a1 + 56));
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    std::string::append(a2, (const std::string::value_type *)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_20A86B674(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (a15 < 0)
    operator delete(__p);
  if (*(char *)(v15 + 23) < 0)
    operator delete(*(void **)v15);
  _Unwind_Resume(exception_object);
}

void std::__shared_ptr_emplace<mediaplatform::SQLPragmaStatement<int>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C331918;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mediaplatform::SQLPragmaStatement<int>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C331918;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t std::__shared_ptr_emplace<mediaplatform::SQLPragmaStatement<int>>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

sqlite3_int64 mediaplatform::DatabaseConnection::lastInsertionRowID(sqlite3 **this)
{
  return sqlite3_last_insert_rowid(*this);
}

BOOL mediaplatform::DatabaseConnection::isInTransaction(mediaplatform::DatabaseConnection *this)
{
  return *((_DWORD *)this + 37) != 0;
}

void mediaplatform::DatabaseConnection::pushTransaction(uint64_t a1, int a2)
{
  int v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  std::__shared_weak_count *v19;
  std::__shared_weak_count *v20;

  v3 = *(_DWORD *)(a1 + 148);
  if (v3)
  {
    *(_DWORD *)(a1 + 148) = v3 + 1;
    return;
  }
  v5 = (std::__shared_weak_count *)operator new(0x28uLL);
  v6 = v5;
  v5->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  v5->__shared_weak_owners_ = 0;
  v5->__vftable = (std::__shared_weak_count_vtbl *)&off_24C331988;
  v5[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24C331498;
  LODWORD(v5[1].__shared_owners_) = a2;
  v19 = v5 + 1;
  v20 = v5;
  if (!*(_BYTE *)(a1 + 145))
  {
    *(_BYTE *)(a1 + 152) = 0;
    *(_DWORD *)(a1 + 148) = 1;
LABEL_19:
    v14 = (unint64_t *)&v6->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    return;
  }
  v16 = v5;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  mediaplatform::DatabaseConnection::executeQueryStatement<int>(&v17, (uint64_t *)a1, (uint64_t)&v5[1]);
  v9 = v18;
  if (v18)
  {
    v10 = (unint64_t *)&v18->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (v16)
  {
    v12 = (unint64_t *)&v16->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v6 = v20;
  *(_BYTE *)(a1 + 152) = 0;
  *(_DWORD *)(a1 + 148) = 1;
  if (v6)
    goto LABEL_19;
}

void sub_20A86B87C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a13);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<mediaplatform::SQLBeginTransactionStatement>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C331988;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mediaplatform::SQLBeginTransactionStatement>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C331988;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t std::__shared_ptr_emplace<mediaplatform::SQLBeginTransactionStatement>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void mediaplatform::DatabaseConnection::popTransaction(mediaplatform::DatabaseConnection *this, _BOOL4 a2)
{
  int v2;
  int v4;

  v2 = *((_DWORD *)this + 37);
  if (v2)
  {
    v4 = v2 - 1;
    if (v4)
    {
      *((_DWORD *)this + 37) = v4;
      *((_BYTE *)this + 152) |= !a2;
    }
    else
    {
      if (a2)
        a2 = *((_BYTE *)this + 152) == 0;
      mediaplatform::DatabaseConnection::_internalEndTransaction(this, a2);
      *((_DWORD *)this + 37) = 0;
      *((_BYTE *)this + 152) = 0;
    }
  }
}

void mediaplatform::DatabaseConnection::_internalEndTransaction(mediaplatform::DatabaseConnection *this, int a2)
{
  _QWORD *v3;
  uint64_t v4;
  std::string *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  void *__p[2];
  uint64_t v22;

  v19 = 0;
  v20 = 0;
  if (a2)
  {
    v3 = operator new(0x20uLL);
    v3[1] = 0;
    v3[2] = 0;
    *v3 = &off_24C3319C0;
    v3[3] = &off_24C3314C0;
    v4 = (uint64_t)(v3 + 3);
  }
  else
  {
    v3 = operator new(0x38uLL);
    v3[1] = 0;
    v3[2] = 0;
    *v3 = &off_24C331A30;
    std::string::basic_string[abi:ne180100]<0>(__p, "");
    v3[3] = off_24C3314E8;
    v4 = (uint64_t)(v3 + 3);
    v5 = (std::string *)(v3 + 4);
    if (SHIBYTE(v22) < 0)
    {
      std::string::__init_copy_ctor_external(v5, (const std::string::value_type *)__p[0], (std::string::size_type)__p[1]);
      if (SHIBYTE(v22) < 0)
        operator delete(__p[0]);
    }
    else
    {
      *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
      v3[6] = v22;
    }
  }
  v19 = v4;
  v20 = (std::__shared_weak_count *)v3;
  if (*((_BYTE *)this + 145))
  {
    v16 = (std::__shared_weak_count *)v3;
    v6 = v3 + 1;
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
    mediaplatform::DatabaseConnection::executeQueryStatement<int>(&v17, (uint64_t *)this, v4);
    v8 = v18;
    if (v18)
    {
      p_shared_owners = (unint64_t *)&v18->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    if (v16)
    {
      v11 = (unint64_t *)&v16->__shared_owners_;
      do
        v12 = __ldaxr(v11);
      while (__stlxr(v12 - 1, v11));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
  }
  mediaplatform::DatabaseConnection::_compactPreparedStatementsCache(this);
  v13 = v20;
  if (v20)
  {
    v14 = (unint64_t *)&v20->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
}

void sub_20A86BB08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  std::__shared_weak_count *v21;
  void *v23;

  if (a21 < 0)
    operator delete(__p);
  std::__shared_weak_count::~__shared_weak_count(v21);
  operator delete(v23);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a14);
  _Unwind_Resume(a1);
}

void mediaplatform::DatabaseConnection::_compactPreparedStatementsCache(mediaplatform::DatabaseConnection *this)
{
  __int128 *v2;
  __int128 *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_weak_owners;
  unint64_t v6;
  uint64_t shared_owners;
  __int128 *v8;
  __int128 *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  std::__shared_weak_count *v15;
  __int128 *v16;
  std::__shared_weak_count *v17;

  v2 = (__int128 *)*((_QWORD *)this + 37);
  v3 = (__int128 *)*((_QWORD *)this + 38);
  if (v2 != v3)
  {
    while (1)
    {
      v4 = (std::__shared_weak_count *)*((_QWORD *)v2 + 1);
      if (!v4)
        break;
      p_shared_weak_owners = (unint64_t *)&v4->__shared_weak_owners_;
      do
        v6 = __ldxr(p_shared_weak_owners);
      while (__stxr(v6 + 1, p_shared_weak_owners));
      shared_owners = v4->__shared_owners_;
      std::__shared_weak_count::__release_weak(v4);
      if (shared_owners == -1)
        break;
      if (++v2 == v3)
      {
        v2 = v3;
        goto LABEL_19;
      }
    }
    if (v2 != v3)
    {
      v8 = v2 + 1;
      if (v2 + 1 != v3)
      {
        v9 = v2;
        do
        {
          v10 = (std::__shared_weak_count *)*((_QWORD *)v9 + 3);
          v9 = v8;
          if (v10)
          {
            v11 = (unint64_t *)&v10->__shared_weak_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            v13 = v10->__shared_owners_;
            std::__shared_weak_count::__release_weak(v10);
            if (v13 != -1)
            {
              v14 = *v9;
              *(_QWORD *)v9 = 0;
              *((_QWORD *)v9 + 1) = 0;
              v15 = (std::__shared_weak_count *)*((_QWORD *)v2 + 1);
              *v2 = v14;
              if (v15)
                std::__shared_weak_count::__release_weak(v15);
              ++v2;
            }
          }
          v8 = v9 + 1;
        }
        while (v9 + 1 != v3);
      }
    }
  }
LABEL_19:
  v16 = (__int128 *)*((_QWORD *)this + 38);
  if (v2 != v16)
  {
    while (v16 != v2)
    {
      v17 = (std::__shared_weak_count *)*((_QWORD *)v16 - 1);
      if (v17)
        std::__shared_weak_count::__release_weak(v17);
      --v16;
    }
    *((_QWORD *)this + 38) = v2;
  }
}

void std::__shared_ptr_emplace<mediaplatform::SQLRollbackTransactionStatement>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C331A30;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mediaplatform::SQLRollbackTransactionStatement>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C331A30;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t std::__shared_ptr_emplace<mediaplatform::SQLRollbackTransactionStatement>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void std::__shared_ptr_emplace<mediaplatform::SQLCommitTransactionStatement>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3319C0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mediaplatform::SQLCommitTransactionStatement>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3319C0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t std::__shared_ptr_emplace<mediaplatform::SQLCommitTransactionStatement>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void mediaplatform::DatabaseConnection::popToRootTransaction(mediaplatform::DatabaseConnection *this, int a2)
{
  if (*((_DWORD *)this + 37))
  {
    mediaplatform::DatabaseConnection::_internalEndTransaction(this, a2);
    *((_DWORD *)this + 37) = 0;
    *((_BYTE *)this + 152) = 0;
  }
}

void mediaplatform::DatabaseConnection::performTransaction(mediaplatform::DatabaseConnection *a1, uint64_t a2, int a3)
{
  uint64_t v5;
  int v6;

  mediaplatform::DatabaseConnection::pushTransaction((uint64_t)a1, a3);
  v5 = *(_QWORD *)(a2 + 24);
  if (!v5)
    std::__throw_bad_function_call[abi:ne180100]();
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
  mediaplatform::DatabaseConnection::popTransaction(a1, v6);
}

void mediaplatform::DatabaseConnection::registerDatabaseFunction(uint64_t *a1, const char ***a2)
{
  const char *v4;
  unint64_t v5;
  const char ***v6;
  const char **v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  unint64_t *v19;
  unint64_t v20;
  char *v21;
  __int128 v22;
  int64x2_t v23;
  uint64_t v24;
  void *v25;
  mediaplatform::PlatformErrorCondition *exception;
  void *__p[2];
  char v28;
  int v29;
  _BYTE v30[64];

  mediaplatform::DatabaseConnection::_ensureConnectionIsOpen(a1);
  if (*((char *)*a2 + 23) >= 0)
    v4 = (const char *)*a2;
  else
    v4 = **a2;
  if (sqlite3_create_function_v2((sqlite3 *)*a1, v4, *((_DWORD *)*a2 + 6), *((_DWORD *)*a2 + 16) | 1, *a2, (void (__cdecl *)(sqlite3_context *, int, sqlite3_value **))mediaplatform::_DatabaseConnectionFunctionSQLiteCallback, 0, 0, 0))
  {
    v29 = 31;
    std::string::basic_string[abi:ne180100]<0>(__p, "");
    mediaplatform::PlatformErrorCondition::PlatformErrorCondition((uint64_t)v30, &v29, (__int128 *)__p);
    if (v28 < 0)
      operator delete(__p[0]);
    exception = (mediaplatform::PlatformErrorCondition *)__cxa_allocate_exception(0x40uLL);
    mediaplatform::PlatformErrorCondition::PlatformErrorCondition(exception, (const mediaplatform::PlatformErrorCondition *)v30);
  }
  v6 = (const char ***)a1[21];
  v5 = a1[22];
  if ((unint64_t)v6 >= v5)
  {
    v11 = (char *)a1[20];
    v12 = ((char *)v6 - v11) >> 4;
    v13 = v12 + 1;
    if ((unint64_t)(v12 + 1) >> 60)
      std::vector<std::string>::__throw_length_error[abi:ne180100]();
    v14 = v5 - (_QWORD)v11;
    if (v14 >> 3 > v13)
      v13 = v14 >> 3;
    if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFF0)
      v15 = 0xFFFFFFFFFFFFFFFLL;
    else
      v15 = v13;
    if (v15 >> 60)
      std::__throw_bad_array_new_length[abi:ne180100]();
    v16 = (char *)operator new(16 * v15);
    v17 = &v16[16 * v12];
    v18 = *(_OWORD *)a2;
    *(_OWORD *)v17 = *(_OWORD *)a2;
    if (*((_QWORD *)&v18 + 1))
    {
      v19 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
      v11 = (char *)a1[20];
      v6 = (const char ***)a1[21];
    }
    if (v6 == (const char ***)v11)
    {
      v23 = vdupq_n_s64((unint64_t)v6);
      v21 = &v16[16 * v12];
    }
    else
    {
      v21 = &v16[16 * v12];
      do
      {
        v22 = *((_OWORD *)v6 - 1);
        v6 -= 2;
        *((_OWORD *)v21 - 1) = v22;
        v21 -= 16;
        *v6 = 0;
        v6[1] = 0;
      }
      while (v6 != (const char ***)v11);
      v23 = *((int64x2_t *)a1 + 10);
    }
    v10 = v17 + 16;
    a1[20] = (uint64_t)v21;
    a1[21] = (uint64_t)(v17 + 16);
    a1[22] = (uint64_t)&v16[16 * v15];
    v24 = v23.i64[1];
    v25 = (void *)v23.i64[0];
    while ((void *)v24 != v25)
      v24 = std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100](v24 - 16);
    if (v25)
      operator delete(v25);
  }
  else
  {
    *v6 = *a2;
    v7 = a2[1];
    v6[1] = v7;
    if (v7)
    {
      v8 = (unint64_t *)(v7 + 1);
      do
        v9 = __ldxr(v8);
      while (__stxr(v9 + 1, v8));
    }
    v10 = v6 + 2;
  }
  a1[21] = (uint64_t)v10;
}

void sub_20A86BFD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, std::exception a18)
{
  mediaplatform::PlatformErrorCondition::~PlatformErrorCondition(&a18);
  _Unwind_Resume(a1);
}

_QWORD *mediaplatform::_DatabaseConnectionFunctionSQLiteCallback(mediaplatform *this, sqlite3_context *a2, uint64_t a3, sqlite3_value **a4)
{
  int v5;
  _QWORD *result;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  mediaplatform *v22;
  void *__p;
  void *v24;
  char *v25;
  mediaplatform *v26;
  _BYTE v27[24];
  _BYTE *v28;
  uint64_t v29;

  v5 = (int)a2;
  v29 = *MEMORY[0x24BDAC8D0];
  result = sqlite3_user_data(this);
  if (result)
  {
    v22 = this;
    std::__function::__value_func<void ()(void)>::__value_func[abi:ne180100]((uint64_t)v27, (uint64_t)(result + 4));
    __p = 0;
    v24 = 0;
    v25 = 0;
    if (v5 >= 1)
    {
      v8 = 0;
      v9 = 0;
      v10 = v5;
      do
      {
        v11 = *(_QWORD *)(a3 + 8 * v9);
        if (v8 >= v25)
        {
          v13 = (char *)__p;
          v14 = (v8 - (_BYTE *)__p) >> 3;
          v15 = v14 + 1;
          if ((unint64_t)(v14 + 1) >> 61)
            std::vector<std::string>::__throw_length_error[abi:ne180100]();
          v16 = v25 - (_BYTE *)__p;
          if ((v25 - (_BYTE *)__p) >> 2 > v15)
            v15 = v16 >> 2;
          if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFF8)
            v17 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v17 = v15;
          if (v17)
          {
            if (v17 >> 61)
              std::__throw_bad_array_new_length[abi:ne180100]();
            v18 = (char *)operator new(8 * v17);
          }
          else
          {
            v18 = 0;
          }
          v19 = &v18[8 * v14];
          *(_QWORD *)v19 = v11;
          v12 = v19 + 8;
          if (v8 != v13)
          {
            do
            {
              v20 = *((_QWORD *)v8 - 1);
              v8 -= 8;
              *((_QWORD *)v19 - 1) = v20;
              v19 -= 8;
            }
            while (v8 != v13);
            v8 = (char *)__p;
          }
          __p = v19;
          v24 = v12;
          v25 = &v18[8 * v17];
          if (v8)
            operator delete(v8);
        }
        else
        {
          *(_QWORD *)v8 = v11;
          v12 = v8 + 8;
        }
        v24 = v12;
        ++v9;
        v8 = (char *)v12;
      }
      while (v9 != v10);
    }
    v26 = v22;
    if (!v28)
      std::__throw_bad_function_call[abi:ne180100]();
    (*(void (**)(_BYTE *, mediaplatform **, void **))(*(_QWORD *)v28 + 48))(v28, &v26, &__p);
    if (__p)
    {
      v24 = __p;
      operator delete(__p);
    }
    result = v28;
    if (v28 == v27)
    {
      v21 = 4;
      result = v27;
    }
    else
    {
      if (!v28)
        return result;
      v21 = 5;
    }
    return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v21))();
  }
  return result;
}

void sub_20A86C1FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  _Unwind_Resume(exception_object);
}

_QWORD *mediaplatform::DatabaseConnection::registeredDatabaseIndices@<X0>(_QWORD *this@<X0>, _QWORD *a2@<X8>)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v2 = (char *)this[23];
  v3 = (char *)this[24];
  v4 = v3 - v2;
  if (v3 != v2)
  {
    if (v4 < 0)
      std::vector<std::string>::__throw_length_error[abi:ne180100]();
    this = operator new(v3 - v2);
    *a2 = this;
    a2[1] = this;
    a2[2] = &this[2 * (v4 >> 4)];
    do
    {
      *this = *(_QWORD *)v2;
      v6 = *((_QWORD *)v2 + 1);
      this[1] = v6;
      if (v6)
      {
        v7 = (unint64_t *)(v6 + 8);
        do
          v8 = __ldxr(v7);
        while (__stxr(v8 + 1, v7));
      }
      v2 += 16;
      this += 2;
    }
    while (v2 != v3);
    a2[1] = this;
  }
  return this;
}

void sub_20A86C30C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  std::vector<std::shared_ptr<mediaplatform::DatabaseIndex>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

void mediaplatform::DatabaseConnection::explainQuery(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  int v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  void *v36;
  char v37;
  uint64_t v38;
  int v39;
  std::string v40;
  char *v41;
  uint64_t v42;
  int v43;
  std::string v44;
  char *v45;
  uint64_t v46;
  int v47;
  std::string v48;
  char v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  std::string __p;
  char *v53;
  std::string v54;
  int v55;
  int v56;
  int v57;
  _QWORD v58[3];
  _QWORD *v59;
  _QWORD v60[3];
  _QWORD *v61;
  _BYTE v62[24];
  _BYTE *v63;
  uint64_t v64;

  v64 = *MEMORY[0x24BDAC8D0];
  std::operator+<char>();
  mediaplatform::DatabaseConnection::_ensureConnectionIsOpen(a1);
  mediaplatform::DatabaseConnection::_prepareStatement((uint64_t)a1, (unsigned __int8 *)&v36, &v50);
  v4 = v50;
  v5 = v51;
  if (v51)
  {
    p_shared_owners = (unint64_t *)&v51->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v34 = v4;
    v35 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v34 = v50;
    v35 = 0;
  }
  v10 = v51;
  if (v51)
  {
    v11 = (unint64_t *)&v51->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v58[0] = &off_24C3317C0;
  v58[1] = a2;
  v59 = v58;
  v49 = 0;
  while (1)
  {
    v13 = sqlite3_step(*(sqlite3_stmt **)(v34 + 24));
    mediaplatform::DatabaseStatement::_checkSQLiteResult(v34, v13);
    *(_DWORD *)(v34 + 56) = v13;
    if (v13 != 100)
      break;
    memset(&v48, 0, sizeof(v48));
    v50 = v34;
    LODWORD(v46) = sqlite3_column_int(*(sqlite3_stmt **)(v34 + 24), 0);
    HIDWORD(v46) = sqlite3_column_int(*(sqlite3_stmt **)(v34 + 24), 1);
    LODWORD(v51) = 3;
    v47 = sqlite3_column_int(*(sqlite3_stmt **)(v34 + 24), 2);
    mediaplatform::ColumnResultsFunctor::operator()<std::string>(&v50, (uint64_t)&v48);
    v42 = v46;
    v14 = v47;
    v43 = v47;
    v33 = SHIBYTE(v48.__r_.__value_.__r.__words[2]);
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
    {
      std::string::__init_copy_ctor_external(&v44, v48.__r_.__value_.__l.__data_, v48.__r_.__value_.__l.__size_);
      v14 = v43;
    }
    else
    {
      v44 = v48;
    }
    v45 = &v49;
    v38 = v42;
    v39 = v14;
    v15 = SHIBYTE(v44.__r_.__value_.__r.__words[2]);
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
      std::string::__init_copy_ctor_external(&v40, v44.__r_.__value_.__l.__data_, v44.__r_.__value_.__l.__size_);
    else
      v40 = v44;
    v41 = &v49;
    v16 = (uint64_t)v59;
    v32 = v15;
    if (!v59)
      goto LABEL_26;
    if (v59 != v58)
    {
      v16 = (*(uint64_t (**)(_QWORD *))(*v59 + 16))(v59);
LABEL_26:
      v61 = (_QWORD *)v16;
      goto LABEL_28;
    }
    v61 = v60;
    (*(void (**)(_QWORD *, _QWORD *))(v58[0] + 24))(v58, v60);
LABEL_28:
    v50 = v38;
    LODWORD(v51) = v39;
    v17 = SHIBYTE(v40.__r_.__value_.__r.__words[2]);
    if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
      std::string::__init_copy_ctor_external(&__p, v40.__r_.__value_.__l.__data_, v40.__r_.__value_.__l.__size_);
    else
      __p = v40;
    v53 = &v49;
    v18 = (uint64_t)v61;
    if (!v61)
      goto LABEL_34;
    if (v61 != v60)
    {
      v18 = (*(uint64_t (**)(_QWORD *))(*v61 + 16))(v61);
LABEL_34:
      v63 = (_BYTE *)v18;
      goto LABEL_36;
    }
    v63 = v62;
    (*(void (**)(_QWORD *, _BYTE *))(v60[0] + 24))(v60, v62);
LABEL_36:
    v19 = v50;
    v20 = HIDWORD(v50);
    v21 = (int)v51;
    v22 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      std::string::__init_copy_ctor_external(&v54, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    else
      v54 = __p;
    v56 = v20;
    v57 = v19;
    v55 = v21;
    if (!v63)
      std::__throw_bad_function_call[abi:ne180100]();
    (*(void (**)(_BYTE *, int *, int *, int *, std::string *, char *))(*(_QWORD *)v63 + 48))(v63, &v57, &v56, &v55, &v54, &v49);
    if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v54.__r_.__value_.__l.__data_);
    v23 = v63;
    if (v63 == v62)
    {
      v23 = v62;
      v24 = 4;
    }
    else
    {
      if (!v63)
        goto LABEL_47;
      v24 = 5;
    }
    (*(void (**)(void))(*v23 + 8 * v24))();
LABEL_47:
    if (v22 < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v25 = v61;
    if (v61 == v60)
    {
      v25 = v60;
      v26 = 4;
      goto LABEL_53;
    }
    if (v61)
    {
      v26 = 5;
LABEL_53:
      (*(void (**)(void))(*v25 + 8 * v26))();
    }
    if (v17 < 0)
      operator delete(v40.__r_.__value_.__l.__data_);
    if (v32 < 0)
      operator delete(v44.__r_.__value_.__l.__data_);
    if (v33 < 0)
      operator delete(v48.__r_.__value_.__l.__data_);
    if (v49)
      goto LABEL_64;
  }
  if (v13 == -1)
    __assert_rtn("hasColumnValueData", "DatabaseStatement.cpp", 102, "_lastStepResult != -1");
  v49 = 1;
LABEL_64:
  v27 = sqlite3_reset(*(sqlite3_stmt **)(v34 + 24));
  mediaplatform::DatabaseStatement::_checkSQLiteResult(v34, v27);
  *(_DWORD *)(v34 + 56) = -1;
  v28 = v59;
  if (v59 == v58)
  {
    v29 = 4;
    v28 = v58;
LABEL_68:
    (*(void (**)(void))(*v28 + 8 * v29))();
  }
  else if (v59)
  {
    v29 = 5;
    goto LABEL_68;
  }
  if (v35)
  {
    v30 = (unint64_t *)&v35->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
    }
  }
  if (v37 < 0)
    operator delete(v36);
}

void sub_20A86C8E0(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7[4];
  char v8;

  __cxa_free_exception(v1);
  __cxa_end_catch();
  v4 = *(_QWORD **)(v2 - 168);
  if (v4 == (_QWORD *)(v2 - 192))
  {
    v5 = 4;
    v4 = (_QWORD *)(v2 - 192);
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  if (*(char *)(v6 + 23) < 0)
    operator delete(*(void **)v6);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)v7);
  if (v8 < 0)
    operator delete(v7[2]);
  _Unwind_Resume(a1);
}

void sub_20A86C900(void *a1, int a2)
{
  if (a2)
    __clang_call_terminate(a1);
  JUMPOUT(0x20A86CA80);
}

void sub_20A86C910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  uint64_t v49;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54[4];
  char v55;

  v51 = *(_QWORD **)(v49 - 168);
  if (v51 == (_QWORD *)(v49 - 192))
  {
    v52 = 4;
    v51 = (_QWORD *)(v49 - 192);
  }
  else
  {
    if (!v51)
      goto LABEL_6;
    v52 = 5;
  }
  (*(void (**)(void))(*v51 + 8 * v52))();
LABEL_6:
  if (*(char *)(v53 + 23) < 0)
    operator delete(*(void **)v53);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)v54);
  if (v55 < 0)
    operator delete(v54[2]);
  _Unwind_Resume(a1);
}

void std::__function::__func<mediaplatform::DatabaseConnection::explainQuery(std::string const&)::$_0,std::allocator<mediaplatform::DatabaseConnection::explainQuery(std::string const&)::$_0>,void ()(int,int,int,std::string,BOOL &)>::~__func()
{
  JUMPOUT(0x20BD27AFCLL);
}

_QWORD *std::__function::__func<mediaplatform::DatabaseConnection::explainQuery(std::string const&)::$_0,std::allocator<mediaplatform::DatabaseConnection::explainQuery(std::string const&)::$_0>,void ()(int,int,int,std::string,BOOL &)>::__clone(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24C3317C0;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<mediaplatform::DatabaseConnection::explainQuery(std::string const&)::$_0,std::allocator<mediaplatform::DatabaseConnection::explainQuery(std::string const&)::$_0>,void ()(int,int,int,std::string,BOOL &)>::__clone(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24C3317C0;
  a2[1] = v2;
  return result;
}

void std::__function::__func<mediaplatform::DatabaseConnection::explainQuery(std::string const&)::$_0,std::allocator<mediaplatform::DatabaseConnection::explainQuery(std::string const&)::$_0>,void ()(int,int,int,std::string,BOOL &)>::operator()(uint64_t a1, int *a2, int *a3, int *a4, uint64_t a5)
{
  int v6;
  int v7;
  int v8;
  std::string *p_p;
  std::string::size_type size;
  void *v11[2];
  uint64_t v12;
  std::string __p;
  int v14;
  int v15;
  int v16;
  _QWORD v17[4];

  v6 = *a2;
  v7 = *a3;
  v8 = *a4;
  *(_OWORD *)v11 = *(_OWORD *)a5;
  v12 = *(_QWORD *)(a5 + 16);
  __p.__r_.__value_.__r.__words[0] = 0;
  *(_QWORD *)(a5 + 8) = 0;
  *(_QWORD *)(a5 + 16) = 0;
  *(_QWORD *)a5 = 0;
  v16 = v6;
  v14 = v8;
  v15 = v7;
  v17[0] = v11;
  v17[1] = &v14;
  v17[2] = &v15;
  v17[3] = &v16;
  *(_OWORD *)&__p.__r_.__value_.__r.__words[1] = 0uLL;
  mediaplatform::FormatImplementation<int,int,int,std::string>((std::string *)"{0}|{1}|{2}|{3}\n", &__p, 0, (uint64_t)v17);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  std::string::append(*(std::string **)(a1 + 8), (const std::string::value_type *)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v12) < 0)
    operator delete(v11[0]);
}

void sub_20A86CBB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  if (a14 < 0)
    operator delete(a9);
  _Unwind_Resume(exception_object);
}

uint64_t std::__function::__func<mediaplatform::DatabaseConnection::explainQuery(std::string const&)::$_0,std::allocator<mediaplatform::DatabaseConnection::explainQuery(std::string const&)::$_0>,void ()(int,int,int,std::string,BOOL &)>::target(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(_QWORD *)(a2 + 8), (uint64_t)"ZN13mediaplatform18DatabaseConnection12explainQueryERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE3$_0"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<mediaplatform::DatabaseConnection::explainQuery(std::string const&)::$_0,std::allocator<mediaplatform::DatabaseConnection::explainQuery(std::string const&)::$_0>,void ()(int,int,int,std::string,BOOL &)>::target_type()
{
}

void mediaplatform::FormatImplementation<int,int,int,std::string>(std::string *a1, std::string *a2, std::string::size_type a3, uint64_t a4)
{
  char v8;
  char *v9;
  std::string::size_type i;
  int v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  int v28;
  uint64_t v29;
  char *v30;
  char *v31;
  unsigned __int8 *v32;
  int v33;
  std::runtime_error *exception;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;

  v8 = 0;
  v45 = *MEMORY[0x24BDAC8D0];
  v9 = (char *)a1;
  for (i = a3; ; ++i)
  {
    v39 = v9;
    if (*v9 == 123)
      break;
    if (!*v9)
    {
      std::string::resize(a2, i, 0);
      if (i != a3)
        mediaplatform::CopyFormatSectionToResult(a1, a2, a3, i - a3, v8 & 1);
      return;
    }
LABEL_7:
    ++v9;
  }
  v11 = v9[1];
  if (v11 == 123)
  {
    v39 = v9 + 1;
    v8 = 1;
    ++v9;
    goto LABEL_7;
  }
  if (v11 == 42)
  {
    v39 = v9 + 2;
    v28 = v9[2];
    if ((v28 - 48) > 9)
    {
      exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      std::runtime_error::runtime_error(exception, "Invalid format string- missing numeric value.");
    }
    else
    {
      v29 = 0;
      v30 = v9 + 3;
      do
      {
        v31 = v30;
        v39 = v30;
        v29 = (v28 - 48) + 10 * v29;
        ++v30;
        v33 = *v31;
        v32 = (unsigned __int8 *)(v31 - 1);
        v28 = v33;
      }
      while ((v33 - 58) >= 0xFFFFFFF6);
      v39 = (char *)(v32 + 2);
      if (*(v30 - 1) == 125)
        mediaplatform::FormatterParameters<0ul,int,int,int,std::string>::formatOptionsAtIndex<int,int,int,std::string>(v29);
      exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      std::runtime_error::runtime_error(exception, "Invalid format options reference: Must be of form {*<index>} but no trailing '}' found.");
    }
    __cxa_throw(exception, MEMORY[0x24BEDB730], MEMORY[0x24BEDAB60]);
  }
  mediaplatform::FormatOptions::FormatOptions((uint64_t)&v35, (const char **)&v39);
  v12 = v39;
  switch(*((_QWORD *)&v35 + 1))
  {
    case 0:
      mediaplatform::TypeFormatter<int,void>::TypeFormatter((uint64_t)&v40, **(_DWORD **)(a4 + 24), (uint64_t)&v35);
      if (BYTE8(v43) && !*(_BYTE *)(v40 + 48))
        v13 = 32;
      else
        v13 = 33;
      v23 = v13 - v43;
      if (*(_BYTE *)(v40 + 50) && v23 <= *(_QWORD *)(v40 + 24))
        v23 = *(_QWORD *)(v40 + 24);
      v24 = *((_QWORD *)&v36 + 1);
      if (*((_QWORD *)&v36 + 1) <= v23)
        v24 = v23;
      if ((_BYTE)v36)
        v22 = v24;
      else
        v22 = v23;
      goto LABEL_59;
    case 1:
      mediaplatform::TypeFormatter<int,void>::TypeFormatter((uint64_t)&v40, **(_DWORD **)(a4 + 16), (uint64_t)&v35);
      if (BYTE8(v43) && !*(_BYTE *)(v40 + 48))
        v17 = 32;
      else
        v17 = 33;
      v25 = v17 - v43;
      if (*(_BYTE *)(v40 + 50) && v25 <= *(_QWORD *)(v40 + 24))
        v25 = *(_QWORD *)(v40 + 24);
      v26 = *((_QWORD *)&v36 + 1);
      if (*((_QWORD *)&v36 + 1) <= v25)
        v26 = v25;
      if ((_BYTE)v36)
        v22 = v26;
      else
        v22 = v25;
      goto LABEL_59;
    case 2:
      mediaplatform::TypeFormatter<int,void>::TypeFormatter((uint64_t)&v40, **(_DWORD **)(a4 + 8), (uint64_t)&v35);
      if (BYTE8(v43) && !*(_BYTE *)(v40 + 48))
        v14 = 32;
      else
        v14 = 33;
      v20 = v14 - v43;
      if (*(_BYTE *)(v40 + 50) && v20 <= *(_QWORD *)(v40 + 24))
        v20 = *(_QWORD *)(v40 + 24);
      v21 = *((_QWORD *)&v36 + 1);
      if (*((_QWORD *)&v36 + 1) <= v20)
        v21 = v20;
      if ((_BYTE)v36)
        v22 = v21;
      else
        v22 = v20;
LABEL_59:
      mediaplatform::FormatImplementation<int,int,int,std::string>(v12, a2, v22 + i, a4);
      if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v27 = (char *)a2;
      else
        v27 = (char *)a2->__r_.__value_.__r.__words[0];
      mediaplatform::FormatOptions::justifyNativeValueOfLength<std::__wrap_iter<char *>,int>((char *)&v35, &v27[i], &v40);
      break;
    case 3:
      v15 = *(_QWORD *)a4;
      v40 = v15;
      v41 = v35;
      v42 = v36;
      v43 = v37;
      v44 = v38;
      if (*(char *)(v15 + 23) < 0)
        v16 = *(_QWORD *)(v15 + 8);
      else
        v16 = *(unsigned __int8 *)(v15 + 23);
      v18 = *((_QWORD *)&v36 + 1);
      if (*((_QWORD *)&v36 + 1) <= v16)
        v18 = v16;
      if ((_BYTE)v36)
        v16 = v18;
      mediaplatform::FormatImplementation<int,int,int,std::string>(v39, a2, v16 + i, a4);
      if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v19 = (char *)a2;
      else
        v19 = (char *)a2->__r_.__value_.__r.__words[0];
      mediaplatform::FormatOptions::justifyNativeValueOfLength<std::__wrap_iter<char *>,std::string>(&v35, &v19[i], (uint64_t)&v40);
      break;
    default:
      mediaplatform::FormatterParameters<4ul>::formatParameterAtIndex<mediaplatform::FormatterParameters<0ul,int,int,int,std::string>>();
  }
  if (i != a3)
    mediaplatform::CopyFormatSectionToResult(a1, a2, a3, i - a3, v8 & 1);
}

void sub_20A86D078(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void mediaplatform::FormatterParameters<0ul,int,int,int,std::string>::formatOptionsAtIndex<int,int,int,std::string>(uint64_t a1)
{
  std::runtime_error *exception;

  if (!a1)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Requested parameter is not an FormatOptions instance.");
    __cxa_throw(exception, MEMORY[0x24BEDB730], MEMORY[0x24BEDAB60]);
  }
  mediaplatform::FormatterParameters<1ul,int,int,std::string>::formatOptionsAtIndex<int,int,int,std::string>(a1);
}

void sub_20A86D0DC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void mediaplatform::FormatterParameters<4ul>::formatParameterAtIndex<mediaplatform::FormatterParameters<0ul,int,int,int,std::string>>()
{
  std::runtime_error *exception;

  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "Parameter index out of bounds.");
  __cxa_throw(exception, MEMORY[0x24BEDB730], MEMORY[0x24BEDAB60]);
}

void sub_20A86D12C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void mediaplatform::FormatterParameters<1ul,int,int,std::string>::formatOptionsAtIndex<int,int,int,std::string>(uint64_t a1)
{
  std::runtime_error *exception;

  if (a1 == 1)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Requested parameter is not an FormatOptions instance.");
    __cxa_throw(exception, MEMORY[0x24BEDB730], MEMORY[0x24BEDAB60]);
  }
  mediaplatform::FormatterParameters<2ul,int,std::string>::formatOptionsAtIndex<int,int,int,std::string>(a1);
}

void sub_20A86D188(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void mediaplatform::FormatterParameters<2ul,int,std::string>::formatOptionsAtIndex<int,int,int,std::string>(uint64_t a1)
{
  std::runtime_error *exception;

  if (a1 == 2)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Requested parameter is not an FormatOptions instance.");
    __cxa_throw(exception, MEMORY[0x24BEDB730], MEMORY[0x24BEDAB60]);
  }
  mediaplatform::FormatterParameters<3ul,std::string>::formatOptionsAtIndex<int,int,int,std::string>(a1);
}

void sub_20A86D1E4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void mediaplatform::FormatterParameters<3ul,std::string>::formatOptionsAtIndex<int,int,int,std::string>(uint64_t a1)
{
  std::runtime_error *exception;

  if (a1 == 3)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Requested parameter is not an FormatOptions instance.");
    __cxa_throw(exception, MEMORY[0x24BEDB730], MEMORY[0x24BEDAB60]);
  }
  mediaplatform::FormatterParameters<4ul>::formatOptionsAtIndex<int,int,int,std::string>();
}

void sub_20A86D240(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void mediaplatform::FormatterParameters<4ul>::formatOptionsAtIndex<int,int,int,std::string>()
{
  std::runtime_error *exception;

  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "Parameter index out of bounds.");
  __cxa_throw(exception, MEMORY[0x24BEDB730], MEMORY[0x24BEDAB60]);
}

void sub_20A86D290(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseConnection::_handleBusyLock(mediaplatform::DatabaseConnection *this, unsigned int a2)
{
  std::chrono::nanoseconds __ns;

  if (a2 >= 0xA && *((_DWORD *)this + 10) == 1)
    return 1;
  __ns.__rep_ = 1000000000;
  std::this_thread::sleep_for (&__ns);
  return 0;
}

uint64_t mediaplatform::DatabaseConnection::_executeStatement(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  int v3;
  uint64_t result;

  v2 = *a2;
  v3 = sqlite3_step(*(sqlite3_stmt **)(*a2 + 24));
  result = mediaplatform::DatabaseStatement::_checkSQLiteResult(v2, v3);
  *(_DWORD *)(v2 + 56) = v3;
  return result;
}

void mediaplatform::DatabaseConnection::_handleStatementExecutionError(uint64_t a1, const mediaplatform::PlatformErrorCondition *a2)
{
  mediaplatform::PlatformErrorCondition *exception;

  if (*((_DWORD *)a2 + 2) == 20)
  {
    *(_DWORD *)(a1 + 148) = 0;
    *(_BYTE *)(a1 + 152) = 0;
  }
  exception = (mediaplatform::PlatformErrorCondition *)__cxa_allocate_exception(0x40uLL);
  mediaplatform::PlatformErrorCondition::PlatformErrorCondition(exception, a2);
}

void sub_20A86D4B8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseConnection::_internalCreateModule(mediaplatform::DatabaseConnection *this, sqlite3 *db, const char *zName, sqlite3_module *p, void *pClientData, void (__cdecl *xDestroy)(void *))
{
  return sqlite3_create_module_v2(db, zName, p, pClientData, xDestroy);
}

_QWORD *mlcore::PersistentStringFromMediaType@<X0>(mlcore *this@<X0>, _QWORD *a2@<X8>)
{
  char *v2;

  if ((int)this > 255)
  {
    if ((int)this > 2047)
    {
      switch((_DWORD)this)
      {
        case 0x800:
          v2 = "MediaTypeMovie";
          return std::string::basic_string[abi:ne180100]<0>(a2, v2);
        case 0x2000:
          v2 = "MediaTypeHomeVideo";
          return std::string::basic_string[abi:ne180100]<0>(a2, v2);
        case 0x1000:
          v2 = "MediaTypeVideoITunesU";
          return std::string::basic_string[abi:ne180100]<0>(a2, v2);
      }
    }
    else
    {
      switch((_DWORD)this)
      {
        case 0x100:
          v2 = "MediaTypeVideoPodcast";
          return std::string::basic_string[abi:ne180100]<0>(a2, v2);
        case 0x200:
          v2 = "MediaTypeTVShow";
          return std::string::basic_string[abi:ne180100]<0>(a2, v2);
        case 0x400:
          v2 = "MediaTypeMusicVideo";
          return std::string::basic_string[abi:ne180100]<0>(a2, v2);
      }
    }
LABEL_20:
    v2 = "(unknown)";
    return std::string::basic_string[abi:ne180100]<0>(a2, v2);
  }
  switch((int)this)
  {
    case 1:
      v2 = "MediaTypeMusicQuiz";
      return std::string::basic_string[abi:ne180100]<0>(a2, v2);
    case 2:
      v2 = "MediaTypeAudioBook";
      return std::string::basic_string[abi:ne180100]<0>(a2, v2);
    case 3:
    case 5:
    case 6:
    case 7:
      goto LABEL_20;
    case 4:
      v2 = "MediaTypePodcast";
      return std::string::basic_string[abi:ne180100]<0>(a2, v2);
    case 8:
      v2 = "MediaTypeSong";
      return std::string::basic_string[abi:ne180100]<0>(a2, v2);
    default:
      if ((_DWORD)this == 16)
      {
        v2 = "MediaTypeVoiceMemo";
      }
      else
      {
        if ((_DWORD)this != 32)
          goto LABEL_20;
        v2 = "MediaTypeITunesUAudio";
      }
      break;
  }
  return std::string::basic_string[abi:ne180100]<0>(a2, v2);
}

void mlcore::StringFromMediaType(mlcore *this@<X0>, _QWORD *a2@<X8>)
{
  std::vector<std::string>::pointer v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::vector<std::string>::pointer end;
  __int128 v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::string *v15;
  __int128 v16;
  std::string *v17;
  std::vector<std::string>::pointer v18;
  __int128 v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  std::string *v24;
  __int128 v25;
  std::string *v26;
  std::vector<std::string>::pointer v27;
  __int128 v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  std::vector<std::string>::pointer v36;
  __int128 v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  std::string *v42;
  __int128 v43;
  std::string *v44;
  std::vector<std::string>::pointer v45;
  __int128 v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  std::string *v51;
  __int128 v52;
  std::string *v53;
  __int128 v54;
  unint64_t v55;
  std::string *v56;
  __int128 v57;
  std::string *v58;
  std::vector<std::string>::pointer v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  std::vector<std::string>::pointer v64;
  __int128 v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  std::string *v70;
  __int128 v71;
  std::string *v72;
  std::vector<std::string>::pointer v73;
  __int128 v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  std::string *v79;
  __int128 v80;
  std::string *v81;
  std::vector<std::string>::pointer v82;
  __int128 v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  std::string *v88;
  __int128 v89;
  std::string *v90;
  std::vector<std::string>::pointer v91;
  __int128 v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  std::string *v97;
  __int128 v98;
  std::string *v99;
  std::vector<std::string>::pointer v100;
  __int128 v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  std::string *v106;
  __int128 v107;
  std::string *v108;
  __int128 v109;
  unint64_t v110;
  std::string *v111;
  __int128 v112;
  std::string *v113;
  int v114;
  void *v115;
  std::string *v116;
  __int128 v117;
  std::string *v118;
  __int128 v119;
  int v120;
  void *v121[2];
  char v122;
  std::string v123;
  std::string v124;
  void *__p[2];
  std::string::size_type v126;
  std::vector<std::string> v127;
  std::__split_buffer<std::string> __v;

  if ((_DWORD)this)
  {
    if ((_DWORD)this == 0xFFFFFF)
    {
      std::string::basic_string[abi:ne180100]<0>(&__v, "MediaTypeAny");
      mlcore::_stringForEnumWithStringDesc((uint64_t)a2, 0xFFFFFFLL, (uint64_t)&__v);
      goto LABEL_5;
    }
    memset(&v127, 0, sizeof(v127));
    if ((~(_DWORD)this & 0xFF00) != 0)
    {
      if (((unsigned __int16)this & 0x100) != 0)
      {
        std::string::basic_string[abi:ne180100]<0>(__p, "VideoPodcast");
        end = v127.__end_;
        if (v127.__end_ >= v127.__end_cap_.__value_)
        {
          v11 = 0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_ - (char *)v127.__begin_) >> 3);
          v12 = v11 + 1;
          if (v11 + 1 > 0xAAAAAAAAAAAAAAALL)
            std::vector<std::string>::__throw_length_error[abi:ne180100]();
          if (0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) > v12)
            v12 = 0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3);
          if (0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) >= 0x555555555555555)
            v13 = 0xAAAAAAAAAAAAAAALL;
          else
            v13 = v12;
          __v.__end_cap_.__value_ = (std::allocator<std::string> *)&v127.__end_cap_;
          if (v13)
            v13 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v13);
          else
            v14 = 0;
          v15 = (std::string *)(v13 + 24 * v11);
          __v.__first_ = (std::__split_buffer<std::string>::pointer)v13;
          __v.__begin_ = v15;
          __v.__end_cap_.__value_ = (std::string *)(v13 + 24 * v14);
          v16 = *(_OWORD *)__p;
          v15->__r_.__value_.__r.__words[2] = v126;
          *(_OWORD *)&v15->__r_.__value_.__l.__data_ = v16;
          __p[1] = 0;
          v126 = 0;
          __p[0] = 0;
          __v.__end_ = v15 + 1;
          std::vector<std::string>::__swap_out_circular_buffer(&v127, &__v);
          v17 = v127.__end_;
          std::__split_buffer<std::string>::~__split_buffer(&__v);
          v127.__end_ = v17;
          if (SHIBYTE(v126) < 0)
            operator delete(__p[0]);
        }
        else
        {
          v10 = *(_OWORD *)__p;
          v127.__end_->__r_.__value_.__r.__words[2] = v126;
          *(_OWORD *)&end->__r_.__value_.__l.__data_ = v10;
          v127.__end_ = end + 1;
        }
      }
      if (((unsigned __int16)this & 0x1000) != 0)
      {
        std::string::basic_string[abi:ne180100]<0>(__p, "VideoITunesU");
        v18 = v127.__end_;
        if (v127.__end_ >= v127.__end_cap_.__value_)
        {
          v20 = 0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_ - (char *)v127.__begin_) >> 3);
          v21 = v20 + 1;
          if (v20 + 1 > 0xAAAAAAAAAAAAAAALL)
            std::vector<std::string>::__throw_length_error[abi:ne180100]();
          if (0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) > v21)
            v21 = 0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3);
          if (0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) >= 0x555555555555555)
            v22 = 0xAAAAAAAAAAAAAAALL;
          else
            v22 = v21;
          __v.__end_cap_.__value_ = (std::allocator<std::string> *)&v127.__end_cap_;
          if (v22)
            v22 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v22);
          else
            v23 = 0;
          v24 = (std::string *)(v22 + 24 * v20);
          __v.__first_ = (std::__split_buffer<std::string>::pointer)v22;
          __v.__begin_ = v24;
          __v.__end_cap_.__value_ = (std::string *)(v22 + 24 * v23);
          v25 = *(_OWORD *)__p;
          v24->__r_.__value_.__r.__words[2] = v126;
          *(_OWORD *)&v24->__r_.__value_.__l.__data_ = v25;
          __p[1] = 0;
          v126 = 0;
          __p[0] = 0;
          __v.__end_ = v24 + 1;
          std::vector<std::string>::__swap_out_circular_buffer(&v127, &__v);
          v26 = v127.__end_;
          std::__split_buffer<std::string>::~__split_buffer(&__v);
          v127.__end_ = v26;
          if (SHIBYTE(v126) < 0)
            operator delete(__p[0]);
        }
        else
        {
          v19 = *(_OWORD *)__p;
          v127.__end_->__r_.__value_.__r.__words[2] = v126;
          *(_OWORD *)&v18->__r_.__value_.__l.__data_ = v19;
          v127.__end_ = v18 + 1;
        }
      }
      if (((unsigned __int16)this & 0x200) != 0)
      {
        std::string::basic_string[abi:ne180100]<0>(__p, "TVShow");
        v27 = v127.__end_;
        if (v127.__end_ >= v127.__end_cap_.__value_)
        {
          v29 = 0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_ - (char *)v127.__begin_) >> 3);
          v30 = v29 + 1;
          if (v29 + 1 > 0xAAAAAAAAAAAAAAALL)
            std::vector<std::string>::__throw_length_error[abi:ne180100]();
          if (0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) > v30)
            v30 = 0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3);
          if (0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) >= 0x555555555555555)
            v31 = 0xAAAAAAAAAAAAAAALL;
          else
            v31 = v30;
          __v.__end_cap_.__value_ = (std::allocator<std::string> *)&v127.__end_cap_;
          if (v31)
            v31 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v31);
          else
            v32 = 0;
          v33 = (std::string *)(v31 + 24 * v29);
          __v.__first_ = (std::__split_buffer<std::string>::pointer)v31;
          __v.__begin_ = v33;
          __v.__end_cap_.__value_ = (std::string *)(v31 + 24 * v32);
          v34 = *(_OWORD *)__p;
          v33->__r_.__value_.__r.__words[2] = v126;
          *(_OWORD *)&v33->__r_.__value_.__l.__data_ = v34;
          __p[1] = 0;
          v126 = 0;
          __p[0] = 0;
          __v.__end_ = v33 + 1;
          std::vector<std::string>::__swap_out_circular_buffer(&v127, &__v);
          v35 = v127.__end_;
          std::__split_buffer<std::string>::~__split_buffer(&__v);
          v127.__end_ = v35;
          if (SHIBYTE(v126) < 0)
            operator delete(__p[0]);
        }
        else
        {
          v28 = *(_OWORD *)__p;
          v127.__end_->__r_.__value_.__r.__words[2] = v126;
          *(_OWORD *)&v27->__r_.__value_.__l.__data_ = v28;
          v127.__end_ = v27 + 1;
        }
      }
      if (((unsigned __int16)this & 0x400) != 0)
      {
        std::string::basic_string[abi:ne180100]<0>(__p, "MusicVideo");
        v36 = v127.__end_;
        if (v127.__end_ >= v127.__end_cap_.__value_)
        {
          v38 = 0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_ - (char *)v127.__begin_) >> 3);
          v39 = v38 + 1;
          if (v38 + 1 > 0xAAAAAAAAAAAAAAALL)
            std::vector<std::string>::__throw_length_error[abi:ne180100]();
          if (0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) > v39)
            v39 = 0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3);
          if (0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) >= 0x555555555555555)
            v40 = 0xAAAAAAAAAAAAAAALL;
          else
            v40 = v39;
          __v.__end_cap_.__value_ = (std::allocator<std::string> *)&v127.__end_cap_;
          if (v40)
            v40 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v40);
          else
            v41 = 0;
          v42 = (std::string *)(v40 + 24 * v38);
          __v.__first_ = (std::__split_buffer<std::string>::pointer)v40;
          __v.__begin_ = v42;
          __v.__end_cap_.__value_ = (std::string *)(v40 + 24 * v41);
          v43 = *(_OWORD *)__p;
          v42->__r_.__value_.__r.__words[2] = v126;
          *(_OWORD *)&v42->__r_.__value_.__l.__data_ = v43;
          __p[1] = 0;
          v126 = 0;
          __p[0] = 0;
          __v.__end_ = v42 + 1;
          std::vector<std::string>::__swap_out_circular_buffer(&v127, &__v);
          v44 = v127.__end_;
          std::__split_buffer<std::string>::~__split_buffer(&__v);
          v127.__end_ = v44;
          if (SHIBYTE(v126) < 0)
            operator delete(__p[0]);
        }
        else
        {
          v37 = *(_OWORD *)__p;
          v127.__end_->__r_.__value_.__r.__words[2] = v126;
          *(_OWORD *)&v36->__r_.__value_.__l.__data_ = v37;
          v127.__end_ = v36 + 1;
        }
      }
      if (((unsigned __int16)this & 0x800) != 0)
      {
        std::string::basic_string[abi:ne180100]<0>(__p, "Movie");
        v45 = v127.__end_;
        if (v127.__end_ >= v127.__end_cap_.__value_)
        {
          v47 = 0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_ - (char *)v127.__begin_) >> 3);
          v48 = v47 + 1;
          if (v47 + 1 > 0xAAAAAAAAAAAAAAALL)
            std::vector<std::string>::__throw_length_error[abi:ne180100]();
          if (0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) > v48)
            v48 = 0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3);
          if (0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) >= 0x555555555555555)
            v49 = 0xAAAAAAAAAAAAAAALL;
          else
            v49 = v48;
          __v.__end_cap_.__value_ = (std::allocator<std::string> *)&v127.__end_cap_;
          if (v49)
            v49 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v49);
          else
            v50 = 0;
          v51 = (std::string *)(v49 + 24 * v47);
          __v.__first_ = (std::__split_buffer<std::string>::pointer)v49;
          __v.__begin_ = v51;
          __v.__end_cap_.__value_ = (std::string *)(v49 + 24 * v50);
          v52 = *(_OWORD *)__p;
          v51->__r_.__value_.__r.__words[2] = v126;
          *(_OWORD *)&v51->__r_.__value_.__l.__data_ = v52;
          __p[1] = 0;
          v126 = 0;
          __p[0] = 0;
          __v.__end_ = v51 + 1;
          std::vector<std::string>::__swap_out_circular_buffer(&v127, &__v);
          v53 = v127.__end_;
          std::__split_buffer<std::string>::~__split_buffer(&__v);
          v127.__end_ = v53;
          if (SHIBYTE(v126) < 0)
            operator delete(__p[0]);
        }
        else
        {
          v46 = *(_OWORD *)__p;
          v127.__end_->__r_.__value_.__r.__words[2] = v126;
          *(_OWORD *)&v45->__r_.__value_.__l.__data_ = v46;
          v127.__end_ = v45 + 1;
        }
      }
      if (((unsigned __int16)this & 0x2000) == 0)
      {
LABEL_100:
        if ((_BYTE)this == 0xFF)
        {
          std::string::basic_string[abi:ne180100]<0>(__p, "AnyAudio");
          v59 = v127.__end_;
          if (v127.__end_ >= v127.__end_cap_.__value_)
          {
            v60 = 0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_ - (char *)v127.__begin_) >> 3);
            v61 = v60 + 1;
            if (v60 + 1 > 0xAAAAAAAAAAAAAAALL)
              std::vector<std::string>::__throw_length_error[abi:ne180100]();
            if (0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) > v61)
              v61 = 0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3);
            if (0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) >= 0x555555555555555)
              v62 = 0xAAAAAAAAAAAAAAALL;
            else
              v62 = v61;
            __v.__end_cap_.__value_ = (std::allocator<std::string> *)&v127.__end_cap_;
            if (v62)
            {
LABEL_109:
              v62 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v62);
              goto LABEL_191;
            }
LABEL_190:
            v63 = 0;
LABEL_191:
            v111 = (std::string *)(v62 + 24 * v60);
            __v.__first_ = (std::__split_buffer<std::string>::pointer)v62;
            __v.__begin_ = v111;
            __v.__end_cap_.__value_ = (std::string *)(v62 + 24 * v63);
            v112 = *(_OWORD *)__p;
            v111->__r_.__value_.__r.__words[2] = v126;
            *(_OWORD *)&v111->__r_.__value_.__l.__data_ = v112;
            __p[1] = 0;
            v126 = 0;
            __p[0] = 0;
            __v.__end_ = v111 + 1;
            std::vector<std::string>::__swap_out_circular_buffer(&v127, &__v);
            v113 = v127.__end_;
            std::__split_buffer<std::string>::~__split_buffer(&__v);
            v127.__end_ = v113;
            if (SHIBYTE(v126) < 0)
              operator delete(__p[0]);
            goto LABEL_193;
          }
        }
        else
        {
          if ((this & 1) != 0)
          {
            std::string::basic_string[abi:ne180100]<0>(__p, "MusicQuiz");
            v64 = v127.__end_;
            if (v127.__end_ >= v127.__end_cap_.__value_)
            {
              v66 = 0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_ - (char *)v127.__begin_) >> 3);
              v67 = v66 + 1;
              if (v66 + 1 > 0xAAAAAAAAAAAAAAALL)
                std::vector<std::string>::__throw_length_error[abi:ne180100]();
              if (0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) > v67)
                v67 = 0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3);
              if (0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) >= 0x555555555555555)
                v68 = 0xAAAAAAAAAAAAAAALL;
              else
                v68 = v67;
              __v.__end_cap_.__value_ = (std::allocator<std::string> *)&v127.__end_cap_;
              if (v68)
                v68 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v68);
              else
                v69 = 0;
              v70 = (std::string *)(v68 + 24 * v66);
              __v.__first_ = (std::__split_buffer<std::string>::pointer)v68;
              __v.__begin_ = v70;
              __v.__end_cap_.__value_ = (std::string *)(v68 + 24 * v69);
              v71 = *(_OWORD *)__p;
              v70->__r_.__value_.__r.__words[2] = v126;
              *(_OWORD *)&v70->__r_.__value_.__l.__data_ = v71;
              __p[1] = 0;
              v126 = 0;
              __p[0] = 0;
              __v.__end_ = v70 + 1;
              std::vector<std::string>::__swap_out_circular_buffer(&v127, &__v);
              v72 = v127.__end_;
              std::__split_buffer<std::string>::~__split_buffer(&__v);
              v127.__end_ = v72;
              if (SHIBYTE(v126) < 0)
                operator delete(__p[0]);
            }
            else
            {
              v65 = *(_OWORD *)__p;
              v127.__end_->__r_.__value_.__r.__words[2] = v126;
              *(_OWORD *)&v64->__r_.__value_.__l.__data_ = v65;
              v127.__end_ = v64 + 1;
            }
          }
          if ((this & 2) != 0)
          {
            std::string::basic_string[abi:ne180100]<0>(__p, "AudioBook");
            v73 = v127.__end_;
            if (v127.__end_ >= v127.__end_cap_.__value_)
            {
              v75 = 0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_ - (char *)v127.__begin_) >> 3);
              v76 = v75 + 1;
              if (v75 + 1 > 0xAAAAAAAAAAAAAAALL)
                std::vector<std::string>::__throw_length_error[abi:ne180100]();
              if (0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) > v76)
                v76 = 0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3);
              if (0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) >= 0x555555555555555)
                v77 = 0xAAAAAAAAAAAAAAALL;
              else
                v77 = v76;
              __v.__end_cap_.__value_ = (std::allocator<std::string> *)&v127.__end_cap_;
              if (v77)
                v77 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v77);
              else
                v78 = 0;
              v79 = (std::string *)(v77 + 24 * v75);
              __v.__first_ = (std::__split_buffer<std::string>::pointer)v77;
              __v.__begin_ = v79;
              __v.__end_cap_.__value_ = (std::string *)(v77 + 24 * v78);
              v80 = *(_OWORD *)__p;
              v79->__r_.__value_.__r.__words[2] = v126;
              *(_OWORD *)&v79->__r_.__value_.__l.__data_ = v80;
              __p[1] = 0;
              v126 = 0;
              __p[0] = 0;
              __v.__end_ = v79 + 1;
              std::vector<std::string>::__swap_out_circular_buffer(&v127, &__v);
              v81 = v127.__end_;
              std::__split_buffer<std::string>::~__split_buffer(&__v);
              v127.__end_ = v81;
              if (SHIBYTE(v126) < 0)
                operator delete(__p[0]);
            }
            else
            {
              v74 = *(_OWORD *)__p;
              v127.__end_->__r_.__value_.__r.__words[2] = v126;
              *(_OWORD *)&v73->__r_.__value_.__l.__data_ = v74;
              v127.__end_ = v73 + 1;
            }
          }
          if ((this & 4) != 0)
          {
            std::string::basic_string[abi:ne180100]<0>(__p, "Podcast");
            v82 = v127.__end_;
            if (v127.__end_ >= v127.__end_cap_.__value_)
            {
              v84 = 0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_ - (char *)v127.__begin_) >> 3);
              v85 = v84 + 1;
              if (v84 + 1 > 0xAAAAAAAAAAAAAAALL)
                std::vector<std::string>::__throw_length_error[abi:ne180100]();
              if (0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) > v85)
                v85 = 0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3);
              if (0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) >= 0x555555555555555)
                v86 = 0xAAAAAAAAAAAAAAALL;
              else
                v86 = v85;
              __v.__end_cap_.__value_ = (std::allocator<std::string> *)&v127.__end_cap_;
              if (v86)
                v86 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v86);
              else
                v87 = 0;
              v88 = (std::string *)(v86 + 24 * v84);
              __v.__first_ = (std::__split_buffer<std::string>::pointer)v86;
              __v.__begin_ = v88;
              __v.__end_cap_.__value_ = (std::string *)(v86 + 24 * v87);
              v89 = *(_OWORD *)__p;
              v88->__r_.__value_.__r.__words[2] = v126;
              *(_OWORD *)&v88->__r_.__value_.__l.__data_ = v89;
              __p[1] = 0;
              v126 = 0;
              __p[0] = 0;
              __v.__end_ = v88 + 1;
              std::vector<std::string>::__swap_out_circular_buffer(&v127, &__v);
              v90 = v127.__end_;
              std::__split_buffer<std::string>::~__split_buffer(&__v);
              v127.__end_ = v90;
              if (SHIBYTE(v126) < 0)
                operator delete(__p[0]);
            }
            else
            {
              v83 = *(_OWORD *)__p;
              v127.__end_->__r_.__value_.__r.__words[2] = v126;
              *(_OWORD *)&v82->__r_.__value_.__l.__data_ = v83;
              v127.__end_ = v82 + 1;
            }
          }
          if ((this & 8) != 0)
          {
            std::string::basic_string[abi:ne180100]<0>(__p, "Song");
            v91 = v127.__end_;
            if (v127.__end_ >= v127.__end_cap_.__value_)
            {
              v93 = 0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_ - (char *)v127.__begin_) >> 3);
              v94 = v93 + 1;
              if (v93 + 1 > 0xAAAAAAAAAAAAAAALL)
                std::vector<std::string>::__throw_length_error[abi:ne180100]();
              if (0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) > v94)
                v94 = 0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3);
              if (0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) >= 0x555555555555555)
                v95 = 0xAAAAAAAAAAAAAAALL;
              else
                v95 = v94;
              __v.__end_cap_.__value_ = (std::allocator<std::string> *)&v127.__end_cap_;
              if (v95)
                v95 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v95);
              else
                v96 = 0;
              v97 = (std::string *)(v95 + 24 * v93);
              __v.__first_ = (std::__split_buffer<std::string>::pointer)v95;
              __v.__begin_ = v97;
              __v.__end_cap_.__value_ = (std::string *)(v95 + 24 * v96);
              v98 = *(_OWORD *)__p;
              v97->__r_.__value_.__r.__words[2] = v126;
              *(_OWORD *)&v97->__r_.__value_.__l.__data_ = v98;
              __p[1] = 0;
              v126 = 0;
              __p[0] = 0;
              __v.__end_ = v97 + 1;
              std::vector<std::string>::__swap_out_circular_buffer(&v127, &__v);
              v99 = v127.__end_;
              std::__split_buffer<std::string>::~__split_buffer(&__v);
              v127.__end_ = v99;
              if (SHIBYTE(v126) < 0)
                operator delete(__p[0]);
            }
            else
            {
              v92 = *(_OWORD *)__p;
              v127.__end_->__r_.__value_.__r.__words[2] = v126;
              *(_OWORD *)&v91->__r_.__value_.__l.__data_ = v92;
              v127.__end_ = v91 + 1;
            }
          }
          if ((this & 0x10) != 0)
          {
            std::string::basic_string[abi:ne180100]<0>(__p, "VoiceMemo");
            v100 = v127.__end_;
            if (v127.__end_ >= v127.__end_cap_.__value_)
            {
              v102 = 0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_ - (char *)v127.__begin_) >> 3);
              v103 = v102 + 1;
              if (v102 + 1 > 0xAAAAAAAAAAAAAAALL)
                std::vector<std::string>::__throw_length_error[abi:ne180100]();
              if (0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) > v103)
                v103 = 0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3);
              if (0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) >= 0x555555555555555)
                v104 = 0xAAAAAAAAAAAAAAALL;
              else
                v104 = v103;
              __v.__end_cap_.__value_ = (std::allocator<std::string> *)&v127.__end_cap_;
              if (v104)
                v104 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v104);
              else
                v105 = 0;
              v106 = (std::string *)(v104 + 24 * v102);
              __v.__first_ = (std::__split_buffer<std::string>::pointer)v104;
              __v.__begin_ = v106;
              __v.__end_cap_.__value_ = (std::string *)(v104 + 24 * v105);
              v107 = *(_OWORD *)__p;
              v106->__r_.__value_.__r.__words[2] = v126;
              *(_OWORD *)&v106->__r_.__value_.__l.__data_ = v107;
              __p[1] = 0;
              v126 = 0;
              __p[0] = 0;
              __v.__end_ = v106 + 1;
              std::vector<std::string>::__swap_out_circular_buffer(&v127, &__v);
              v108 = v127.__end_;
              std::__split_buffer<std::string>::~__split_buffer(&__v);
              v127.__end_ = v108;
              if (SHIBYTE(v126) < 0)
                operator delete(__p[0]);
            }
            else
            {
              v101 = *(_OWORD *)__p;
              v127.__end_->__r_.__value_.__r.__words[2] = v126;
              *(_OWORD *)&v100->__r_.__value_.__l.__data_ = v101;
              v127.__end_ = v100 + 1;
            }
          }
          if ((this & 0x20) == 0)
          {
LABEL_193:
            *a2 = 0;
            a2[1] = 0;
            a2[2] = 0;
            if ((std::vector<std::string>::pointer)((char *)v127.__end_ - (char *)v127.__begin_) == (std::vector<std::string>::pointer)24)
            {
              std::operator+<char>();
              mlcore::_stringForEnumWithStringDesc((uint64_t)&__v, (uint64_t)this, (uint64_t)__p);
              v114 = SHIBYTE(v126);
              *(_OWORD *)a2 = *(_OWORD *)&__v.__first_;
              a2[2] = __v.__end_;
              HIBYTE(__v.__end_) = 0;
              LOBYTE(__v.__first_) = 0;
              if ((v114 & 0x80000000) == 0)
              {
LABEL_205:
                __v.__first_ = (std::__split_buffer<std::string>::pointer)&v127;
                std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__v);
                return;
              }
              v115 = __p[0];
            }
            else
            {
              std::string::basic_string[abi:ne180100]<0>(v121, "|");
              mediaplatform::ComponentsJoinedByString<std::string>((uint64_t)&v123, (uint64_t *)&v127, (uint64_t)v121);
              v116 = std::string::insert(&v123, 0, "MediaType [");
              v117 = *(_OWORD *)&v116->__r_.__value_.__l.__data_;
              v124.__r_.__value_.__r.__words[2] = v116->__r_.__value_.__r.__words[2];
              *(_OWORD *)&v124.__r_.__value_.__l.__data_ = v117;
              v116->__r_.__value_.__l.__size_ = 0;
              v116->__r_.__value_.__r.__words[2] = 0;
              v116->__r_.__value_.__r.__words[0] = 0;
              v118 = std::string::append(&v124, "]");
              v119 = *(_OWORD *)&v118->__r_.__value_.__l.__data_;
              v126 = v118->__r_.__value_.__r.__words[2];
              *(_OWORD *)__p = v119;
              v118->__r_.__value_.__l.__size_ = 0;
              v118->__r_.__value_.__r.__words[2] = 0;
              v118->__r_.__value_.__r.__words[0] = 0;
              mlcore::_stringForEnumWithStringDesc((uint64_t)&__v, (uint64_t)this, (uint64_t)__p);
              v120 = SHIBYTE(v126);
              *(_OWORD *)a2 = *(_OWORD *)&__v.__first_;
              a2[2] = __v.__end_;
              HIBYTE(__v.__end_) = 0;
              LOBYTE(__v.__first_) = 0;
              if (v120 < 0)
                operator delete(__p[0]);
              if (SHIBYTE(v124.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v124.__r_.__value_.__l.__data_);
              if (SHIBYTE(v123.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v123.__r_.__value_.__l.__data_);
              if ((v122 & 0x80000000) == 0)
                goto LABEL_205;
              v115 = v121[0];
            }
            operator delete(v115);
            goto LABEL_205;
          }
          std::string::basic_string[abi:ne180100]<0>(__p, "ITunesUAudio");
          v59 = v127.__end_;
          if (v127.__end_ >= v127.__end_cap_.__value_)
          {
            v60 = 0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_ - (char *)v127.__begin_) >> 3);
            v110 = v60 + 1;
            if (v60 + 1 > 0xAAAAAAAAAAAAAAALL)
              std::vector<std::string>::__throw_length_error[abi:ne180100]();
            if (0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) > v110)
              v110 = 0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3);
            if (0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) >= 0x555555555555555)
              v62 = 0xAAAAAAAAAAAAAAALL;
            else
              v62 = v110;
            __v.__end_cap_.__value_ = (std::allocator<std::string> *)&v127.__end_cap_;
            if (v62)
              goto LABEL_109;
            goto LABEL_190;
          }
        }
        v109 = *(_OWORD *)__p;
        v59->__r_.__value_.__r.__words[2] = v126;
        *(_OWORD *)&v59->__r_.__value_.__l.__data_ = v109;
        v127.__end_ = v59 + 1;
        goto LABEL_193;
      }
      std::string::basic_string[abi:ne180100]<0>(__p, "HomeVideo");
      v4 = v127.__end_;
      if (v127.__end_ >= v127.__end_cap_.__value_)
      {
        v5 = 0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_ - (char *)v127.__begin_) >> 3);
        v55 = v5 + 1;
        if (v5 + 1 > 0xAAAAAAAAAAAAAAALL)
          std::vector<std::string>::__throw_length_error[abi:ne180100]();
        if (0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) > v55)
          v55 = 0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3);
        if (0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) >= 0x555555555555555)
          v7 = 0xAAAAAAAAAAAAAAALL;
        else
          v7 = v55;
        __v.__end_cap_.__value_ = (std::allocator<std::string> *)&v127.__end_cap_;
        if (v7)
          goto LABEL_16;
        goto LABEL_97;
      }
    }
    else
    {
      std::string::basic_string[abi:ne180100]<0>(__p, "AnyVideo");
      v4 = v127.__end_;
      if (v127.__end_ >= v127.__end_cap_.__value_)
      {
        v5 = 0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_ - (char *)v127.__begin_) >> 3);
        v6 = v5 + 1;
        if (v5 + 1 > 0xAAAAAAAAAAAAAAALL)
          std::vector<std::string>::__throw_length_error[abi:ne180100]();
        if (0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) > v6)
          v6 = 0x5555555555555556 * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3);
        if (0xAAAAAAAAAAAAAAABLL * (((char *)v127.__end_cap_.__value_ - (char *)v127.__begin_) >> 3) >= 0x555555555555555)
          v7 = 0xAAAAAAAAAAAAAAALL;
        else
          v7 = v6;
        __v.__end_cap_.__value_ = (std::allocator<std::string> *)&v127.__end_cap_;
        if (v7)
        {
LABEL_16:
          v7 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v7);
          goto LABEL_98;
        }
LABEL_97:
        v8 = 0;
LABEL_98:
        v56 = (std::string *)(v7 + 24 * v5);
        __v.__first_ = (std::__split_buffer<std::string>::pointer)v7;
        __v.__begin_ = v56;
        __v.__end_cap_.__value_ = (std::string *)(v7 + 24 * v8);
        v57 = *(_OWORD *)__p;
        v56->__r_.__value_.__r.__words[2] = v126;
        *(_OWORD *)&v56->__r_.__value_.__l.__data_ = v57;
        __p[1] = 0;
        v126 = 0;
        __p[0] = 0;
        __v.__end_ = v56 + 1;
        std::vector<std::string>::__swap_out_circular_buffer(&v127, &__v);
        v58 = v127.__end_;
        std::__split_buffer<std::string>::~__split_buffer(&__v);
        v127.__end_ = v58;
        if (SHIBYTE(v126) < 0)
          operator delete(__p[0]);
        goto LABEL_100;
      }
    }
    v54 = *(_OWORD *)__p;
    v4->__r_.__value_.__r.__words[2] = v126;
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v54;
    v127.__end_ = v4 + 1;
    goto LABEL_100;
  }
  std::string::basic_string[abi:ne180100]<0>(&__v, "MediaTypeUndefined");
  mlcore::_stringForEnumWithStringDesc((uint64_t)a2, 0, (uint64_t)&__v);
LABEL_5:
  if (SHIBYTE(__v.__end_) < 0)
    operator delete(__v.__first_);
}

void sub_20A86E554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,char *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,char a35)
{
  if (a33 < 0)
    operator delete(__p);
  __p = &a35;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_20A86E658()
{
  uint64_t v0;

  if (*(char *)(v0 - 65) < 0)
    operator delete(*(void **)(v0 - 88));
  JUMPOUT(0x20A86E650);
}

uint64_t mlcore::_stringForEnumWithStringDesc(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD v11[11];
  char v12;
  uint64_t v13;

  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v11);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)"(", 1);
  v4 = (_QWORD *)std::ostream::operator<<();
  v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)" => '", 5);
  v6 = *(char *)(a3 + 23);
  if (v6 >= 0)
    v7 = a3;
  else
    v7 = *(_QWORD *)a3;
  if (v6 >= 0)
    v8 = *(unsigned __int8 *)(a3 + 23);
  else
    v8 = *(_QWORD *)(a3 + 8);
  v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, v7, v8);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)"')", 2);
  std::stringbuf::str();
  v11[0] = *MEMORY[0x24BEDB800];
  *(_QWORD *)((char *)v11 + *(_QWORD *)(v11[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB800] + 24);
  v11[1] = MEMORY[0x24BEDB848] + 16;
  if (v12 < 0)
    operator delete((void *)v11[9]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x20BD27A84](&v13);
}

void sub_20A86E77C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::ostringstream::~ostringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::ComponentsJoinedByString<std::string>(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[11];
  char v16;
  uint64_t v17;

  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v15);
  v6 = *a2;
  v5 = a2[1];
  if (v6 != v5)
  {
    v7 = 1;
    do
    {
      if ((v7 & 1) == 0)
      {
        v8 = *(char *)(a3 + 23);
        if (v8 >= 0)
          v9 = a3;
        else
          v9 = *(_QWORD *)a3;
        if (v8 >= 0)
          v10 = *(unsigned __int8 *)(a3 + 23);
        else
          v10 = *(_QWORD *)(a3 + 8);
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v15, v9, v10);
      }
      v11 = *(char *)(v6 + 23);
      if (v11 >= 0)
        v12 = v6;
      else
        v12 = *(_QWORD *)v6;
      if (v11 >= 0)
        v13 = *(unsigned __int8 *)(v6 + 23);
      else
        v13 = *(_QWORD *)(v6 + 8);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v15, v12, v13);
      v7 = 0;
      v6 += 24;
    }
    while (v6 != v5);
  }
  std::stringbuf::str();
  v15[0] = *MEMORY[0x24BEDB800];
  *(_QWORD *)((char *)v15 + *(_QWORD *)(v15[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB800] + 24);
  v15[1] = MEMORY[0x24BEDB848] + 16;
  if (v16 < 0)
    operator delete((void *)v15[9]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x20BD27A84](&v17);
}

void sub_20A86E8A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::ostringstream::~ostringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t mlcore::MediaTypeByStandardizingMediaType(uint64_t this)
{
  if ((this & 0x100) != 0)
    return 256;
  if ((this & 0x1000) != 0)
    return 4096;
  if ((this & 0x800) == 0)
    return this;
  if ((this & 4) != 0)
    return 256;
  if ((this & 0x20) != 0)
    return 4096;
  if ((this & 0x200) != 0)
    return 512;
  if ((this & 0x2000) != 0)
    return 0x2000;
  if ((this & 0x400) != 0)
    return 1024;
  return this;
}

uint64_t mlcore::ITMediaKindForMediaType(mlcore *this)
{
  int v2;
  unsigned int v3;

  switch((_DWORD)this)
  {
    case 0xFF:
      return 301;
    case 0xFFFFFF:
      return 3951;
    case 0xFF00:
      return 3682;
  }
  v2 = this & 4;
  if (((unsigned __int16)this & 0x100) != 0)
    v2 = 6;
  v3 = (4 * (_DWORD)this) & 8 | (this >> 3) & 1 | v2;
  if ((this & 1) != 0)
    v3 |= 0x21u;
  return (this >> 3) & 0x440 | (((this >> 4) & 3) << 20) | (this >> 5) & 0x20 | (this >> 10) & 2 | v3;
}

void mlcore::SmartPlaylistEntityCache::~SmartPlaylistEntityCache(mlcore::SmartPlaylistEntityCache *this)
{
  mlcore::SmartPlaylistEntityCache::~SmartPlaylistEntityCache(this);
  JUMPOUT(0x20BD27AFCLL);
}

{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;
  void *v5;

  *(_QWORD *)this = &off_24C33A4E0;
  v2 = (_QWORD *)*((_QWORD *)this + 32);
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = (void *)*((_QWORD *)this + 30);
  *((_QWORD *)this + 30) = 0;
  if (v4)
    operator delete(v4);
  v5 = (void *)*((_QWORD *)this + 27);
  if (v5)
  {
    *((_QWORD *)this + 28) = v5;
    operator delete(v5);
  }
  mlcore::EntityCache::~EntityCache(this);
}

void mlcore::SmartPlaylistEntityCache::setPropertiesToFetchForEntityClass(uint64_t a1, uint64_t a2, mlcore::EntityClass *a3)
{
  mlcore *v6;
  const void **v7;
  const void **v8;
  mlcore *v9;
  void *v10;
  mlcore *v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t *v15;
  mlcore *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  mlcore *v27;
  unint64_t ForeignPropertyBase;
  uint64_t v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *p_shared_owners;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint8x8_t v38;
  _QWORD **v39;
  _QWORD *i;
  unint64_t v41;
  float v42;
  float v43;
  _BOOL8 v44;
  unint64_t v45;
  unint64_t v46;
  size_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t *v60;
  char *v61;
  char *v62;
  unint64_t v63;
  _QWORD *v64;
  const void **v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  std::__shared_weak_count *v69;
  void *__p;
  void *v71;
  uint64_t v72;

  __p = 0;
  v71 = 0;
  v72 = 0;
  std::vector<mlcore::ModelPropertyBase *>::__init_with_size[abi:ne180100]<mlcore::ModelPropertyBase **,mlcore::ModelPropertyBase **>(&__p, *(const void **)a2, *(_QWORD *)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3);
  mlcore::EntityCache::setPropertiesToFetchForEntityClass(a1, (uint64_t)&__p, a3);
  v6 = (mlcore *)__p;
  if (__p)
  {
    v71 = __p;
    operator delete(__p);
  }
  v8 = *(const void ***)a2;
  v7 = *(const void ***)(a2 + 8);
  if (*(const void ***)a2 != v7)
  {
    v66 = a1;
    v67 = (uint64_t *)(a1 + 240);
    v64 = (_QWORD *)(a1 + 256);
    v65 = *(const void ***)(a2 + 8);
    while (1)
    {
      v9 = (mlcore *)*v8;
      v6 = (mlcore *)mlcore::PlaylistItemPropertyPersistentID(v6);
      if (v9 == v6)
        goto LABEL_100;
      v6 = (mlcore *)mlcore::PlaylistItemPropertyItemPersistentID(v6);
      if (v9 == v6)
        goto LABEL_100;
      v6 = (mlcore *)mlcore::PlaylistItemPropertyPosition(v6);
      if (v9 != v6)
        break;
      *(_BYTE *)(a1 + 280) = 1;
LABEL_100:
      if (++v8 == v7)
        return;
    }
    v6 = (mlcore *)mlcore::PlaylistItemPropertyUUID(v6);
    if (v9 == v6)
      goto LABEL_100;
    v6 = (mlcore *)mlcore::PlaylistItemPropertyPositionUUID(v6);
    if (v9 == v6)
      goto LABEL_100;
    v6 = (mlcore *)mlcore::PlaylistItemPropertyOccurrenceID(v6);
    if (v9 == v6)
      goto LABEL_100;
    if (((*(uint64_t (**)(mlcore *))(*(_QWORD *)v9 + 88))(v9) & 1) == 0)
      __assert_rtn("setPropertiesToFetchForEntityClass", "SmartPlaylistEntityCache.cpp", 68, "property->isForeignProperty()");
    v11 = (mlcore *)(*(uint64_t (**)(void *))(*(_QWORD *)v10 + 16))(v10);
    v12 = (*(uint64_t (**)(void *))(*(_QWORD *)v10 + 24))(v10);
    v13 = (uint64_t *)operator new(8uLL);
    *v13 = v12;
    v14 = (unint64_t)(v13 + 1);
    v15 = v13 + 1;
    while (1)
    {
      v16 = (mlcore *)(*(uint64_t (**)(mlcore *))(*(_QWORD *)v11 + 88))(v11);
      if (!(_DWORD)v16)
        break;
      v11 = (mlcore *)(*(uint64_t (**)(void *))(*(_QWORD *)v17 + 16))(v17);
      v18 = (*(uint64_t (**)(void *))(*(_QWORD *)v17 + 24))(v17);
      v19 = v18;
      if ((unint64_t)v15 >= v14)
      {
        v20 = v15 - v13;
        v21 = v20 + 1;
        if ((unint64_t)(v20 + 1) >> 61)
          std::vector<std::string>::__throw_length_error[abi:ne180100]();
        if ((uint64_t)(v14 - (_QWORD)v13) >> 2 > v21)
          v21 = (uint64_t)(v14 - (_QWORD)v13) >> 2;
        if (v14 - (unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
          v22 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v22 = v21;
        if (v22)
          v22 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v22);
        else
          v23 = 0;
        v24 = (uint64_t *)(v22 + 8 * v20);
        *v24 = v19;
        v25 = v24 + 1;
        if (v15 != v13)
        {
          v26 = 0;
          do
          {
            v24[v26 - 1] = v15[v26 - 1];
            --v26;
          }
          while (&v15[v26] != v13);
          v24 = (uint64_t *)((char *)v24 + v26 * 8);
        }
        v14 = v22 + 8 * v23;
        operator delete(v13);
        v13 = v24;
        v15 = v25;
        v7 = v65;
        a1 = v66;
      }
      else
      {
        *v15++ = v18;
      }
    }
    v27 = (mlcore *)mlcore::PlaylistItemPropertyPersistentID(v16);
    if (v11 == v27)
    {
LABEL_99:
      operator delete(v13);
      goto LABEL_100;
    }
    if (v11 != (mlcore *)mlcore::PlaylistItemPropertyItemPersistentID(v27))
      __assert_rtn("setPropertiesToFetchForEntityClass", "SmartPlaylistEntityCache.cpp", 81, "baseProperty == PlaylistItemPropertyItemPersistentID()");
    if (v15 == v13)
      goto LABEL_105;
    ForeignPropertyBase = 0;
    do
    {
      v30 = *--v15;
      v29 = v30;
      if (ForeignPropertyBase)
      {
        (*(void (**)(uint64_t *__return_ptr, void *))(*(_QWORD *)v10 + 32))(&v68, v10);
        ForeignPropertyBase = mlcore::GetForeignPropertyBase(ForeignPropertyBase, v29, &v68);
        v31 = v69;
        if (v69)
        {
          p_shared_owners = (unint64_t *)&v69->__shared_owners_;
          do
            v33 = __ldaxr(p_shared_owners);
          while (__stlxr(v33 - 1, p_shared_owners));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
      }
      else
      {
        ForeignPropertyBase = v29;
      }
    }
    while (v15 != v13);
    if (!ForeignPropertyBase)
LABEL_105:
      __assert_rtn("setPropertiesToFetchForEntityClass", "SmartPlaylistEntityCache.cpp", 94, "itemProperty != nullptr");
    v34 = 0x9DDFEA08EB382D69 * (((8 * ForeignPropertyBase) + 8) ^ HIDWORD(ForeignPropertyBase));
    v35 = 0x9DDFEA08EB382D69 * (HIDWORD(ForeignPropertyBase) ^ (v34 >> 47) ^ v34);
    v36 = 0x9DDFEA08EB382D69 * (v35 ^ (v35 >> 47));
    v37 = *(_QWORD *)(a1 + 248);
    if (v37)
    {
      v38 = (uint8x8_t)vcnt_s8((int8x8_t)v37);
      v38.i16[0] = vaddlv_u8(v38);
      if (v38.u32[0] > 1uLL)
      {
        v14 = 0x9DDFEA08EB382D69 * (v35 ^ (v35 >> 47));
        if (v36 >= v37)
          v14 = v36 % v37;
      }
      else
      {
        v14 = v36 & (v37 - 1);
      }
      v39 = *(_QWORD ***)(*v67 + 8 * v14);
      if (v39)
      {
        for (i = *v39; i; i = (_QWORD *)*i)
        {
          v41 = i[1];
          if (v41 == v36)
          {
            if (i[2] == ForeignPropertyBase)
              goto LABEL_82;
          }
          else
          {
            if (v38.u32[0] > 1uLL)
            {
              if (v41 >= v37)
                v41 %= v37;
            }
            else
            {
              v41 &= v37 - 1;
            }
            if (v41 != v14)
              break;
          }
        }
      }
    }
    i = operator new(0x20uLL);
    *i = 0;
    i[1] = v36;
    i[2] = ForeignPropertyBase;
    i[3] = 0;
    v42 = (float)(unint64_t)(*(_QWORD *)(a1 + 264) + 1);
    v43 = *(float *)(a1 + 272);
    if (!v37 || (float)(v43 * (float)v37) < v42)
    {
      v44 = (v37 & (v37 - 1)) != 0;
      if (v37 < 3)
        v44 = 1;
      v45 = v44 | (2 * v37);
      v46 = vcvtps_u32_f32(v42 / v43);
      if (v45 <= v46)
        v47 = v46;
      else
        v47 = v45;
      std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>,std::__unordered_map_hasher<mlcore::ModelProperty<std::string> *,std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>,std::hash<mlcore::ModelProperty<std::string> *>,std::equal_to<mlcore::ModelProperty<std::string> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<std::string> *,std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>,std::equal_to<mlcore::ModelProperty<std::string> *>,std::hash<mlcore::ModelProperty<std::string> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>>>::__rehash<true>((uint64_t)v67, v47);
      v37 = *(_QWORD *)(a1 + 248);
      if ((v37 & (v37 - 1)) != 0)
      {
        if (v36 >= v37)
          v14 = v36 % v37;
        else
          v14 = v36;
      }
      else
      {
        v14 = (v37 - 1) & v36;
      }
    }
    v48 = *v67;
    v49 = *(_QWORD **)(*v67 + 8 * v14);
    if (v49)
    {
      *i = *v49;
    }
    else
    {
      *i = *v64;
      *v64 = i;
      *(_QWORD *)(v48 + 8 * v14) = v64;
      if (!*i)
        goto LABEL_81;
      v50 = *(_QWORD *)(*i + 8);
      if ((v37 & (v37 - 1)) != 0)
      {
        if (v50 >= v37)
          v50 %= v37;
      }
      else
      {
        v50 &= v37 - 1;
      }
      v49 = (_QWORD *)(*v67 + 8 * v50);
    }
    *v49 = i;
LABEL_81:
    ++*(_QWORD *)(a1 + 264);
LABEL_82:
    i[3] = v9;
    v52 = *(unint64_t **)(a1 + 224);
    v51 = *(_QWORD *)(a1 + 232);
    if ((unint64_t)v52 >= v51)
    {
      v54 = *(_QWORD *)(a1 + 216);
      v55 = ((uint64_t)v52 - v54) >> 3;
      if ((unint64_t)(v55 + 1) >> 61)
        std::vector<std::string>::__throw_length_error[abi:ne180100]();
      v56 = v51 - v54;
      v57 = v56 >> 2;
      if (v56 >> 2 <= (unint64_t)(v55 + 1))
        v57 = v55 + 1;
      if ((unint64_t)v56 >= 0x7FFFFFFFFFFFFFF8)
        v58 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v58 = v57;
      if (v58)
        v58 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v58);
      else
        v59 = 0;
      v60 = (unint64_t *)(v58 + 8 * v55);
      *v60 = ForeignPropertyBase;
      v53 = v60 + 1;
      v62 = *(char **)(a1 + 216);
      v61 = *(char **)(a1 + 224);
      if (v61 != v62)
      {
        do
        {
          v63 = *((_QWORD *)v61 - 1);
          v61 -= 8;
          *--v60 = v63;
        }
        while (v61 != v62);
        v61 = *(char **)(a1 + 216);
      }
      *(_QWORD *)(a1 + 216) = v60;
      *(_QWORD *)(a1 + 224) = v53;
      *(_QWORD *)(a1 + 232) = v58 + 8 * v59;
      if (v61)
        operator delete(v61);
    }
    else
    {
      *v52 = ForeignPropertyBase;
      v53 = v52 + 1;
    }
    *(_QWORD *)(a1 + 224) = v53;
    goto LABEL_99;
  }
}

void sub_20A86F014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  void *v17;
  void *v18;

  operator delete(v18);
  operator delete(v17);
  _Unwind_Resume(a1);
}

void mlcore::SmartPlaylistEntityCache::entityForClassAndPersistentID(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  _QWORD *v10;
  uint64_t v11;
  mlcore *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  void (***v22)(_QWORD, uint64_t *, uint64_t *, _BYTE *);
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t *v43;
  std::__shared_weak_count *v44;
  uint64_t v45[3];
  std::__shared_weak_count *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  __int128 v50;
  char *v51;
  std::__shared_weak_count *v52;
  uint64_t v53;
  _BYTE dsema[24];
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  _BYTE v58[24];
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  __int128 v62;
  _BYTE v63[24];
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  void *v67;
  __int128 v68;
  uint64_t v69;
  unint64_t v70;
  _BYTE v71[24];
  _BYTE *v72;
  uint64_t v73;

  v73 = *MEMORY[0x24BDAC8D0];
  v69 = a3;
  v70 = a2;
  *(_QWORD *)&v68 = a2;
  *((_QWORD *)&v68 + 1) = a3;
  if (!*(_BYTE *)(a1 + 120))
  {
    mediaplatform::Cache<std::pair<mlcore::EntityClass *,long long>,std::shared_ptr<mlcore::Entity>,mlcore::EntityCache::hash,std::equal_to<std::pair<mlcore::EntityClass *,long long>>>::valueForKey((uint64_t)dsema, a1 + 128, a2, a3);
    if (dsema[16])
    {
      mediaplatform::Optional<std::shared_ptr<mlcore::Entity>>::value((uint64_t)dsema);
      v32 = *(_QWORD *)&dsema[8];
      *a5 = *(_QWORD *)dsema;
      a5[1] = v32;
      if (v32)
      {
        v33 = (unint64_t *)(v32 + 8);
        do
          v34 = __ldxr(v33);
        while (__stxr(v34 + 1, v33));
      }
      if (dsema[16])
      {
        v35 = *(std::__shared_weak_count **)&dsema[8];
        if (*(_QWORD *)&dsema[8])
        {
          v36 = (unint64_t *)(*(_QWORD *)&dsema[8] + 8);
          do
            v37 = __ldaxr(v36);
          while (__stlxr(v37 - 1, v36));
          goto LABEL_52;
        }
      }
      return;
    }
  }
  *(_QWORD *)dsema = a2;
  v10 = std::__hash_table<std::__hash_value_type<mlcore::EntityClass *,std::vector<mlcore::ModelPropertyBase *>>,std::__unordered_map_hasher<mlcore::EntityClass *,std::__hash_value_type<mlcore::EntityClass *,std::vector<mlcore::ModelPropertyBase *>>,std::hash<mlcore::EntityClass *>,std::equal_to<mlcore::EntityClass *>,true>,std::__unordered_map_equal<mlcore::EntityClass *,std::__hash_value_type<mlcore::EntityClass *,std::vector<mlcore::ModelPropertyBase *>>,std::equal_to<mlcore::EntityClass *>,std::hash<mlcore::EntityClass *>,true>,std::allocator<std::__hash_value_type<mlcore::EntityClass *,std::vector<mlcore::ModelPropertyBase *>>>>::__emplace_unique_key_args<mlcore::EntityClass *,std::piecewise_construct_t const&,std::tuple<mlcore::EntityClass * const&>,std::tuple<>>(a1 + 8, a2, dsema);
  if (v10[4] == v10[3])
  {
    v56 = 1065353216;
    *(_OWORD *)&v58[8] = 0u;
    v61 = 1065353216;
    *(_OWORD *)&v63[8] = 0u;
    v67 = &unk_24C3371E8;
    v55 = 0u;
    v57 = 0u;
    *(_OWORD *)v58 = 0u;
    v59 = 0u;
    v60 = 0u;
    v62 = 0u;
    *(_OWORD *)v63 = 0u;
    v65 = 0u;
    v64 = 0u;
    *(_DWORD *)&v58[16] = 1065353216;
    *(_DWORD *)&v63[16] = 1065353216;
    v66 = 1065353216;
    *(_OWORD *)&dsema[8] = 0u;
    *(_QWORD *)dsema = &off_24C3371C0;
    (*(void (**)(unint64_t, uint64_t, _BYTE *))(*(_QWORD *)a2 + 48))(a2, a3, dsema);
    mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase(dsema);
    return;
  }
  v11 = a3 & 0x7FFFFFFFFFFFFFFFLL;
  v53 = a3 & 0x7FFFFFFFFFFFFFFFLL;
  v12 = (mlcore *)mlcore::TypedEntityClass<mlcore::Item>::sharedPointer();
  v13 = mlcore::ItemPropertyPersistentID(v12);
  v14 = (char *)operator new(0x48uLL);
  *(_OWORD *)(v14 + 8) = 0u;
  *(_QWORD *)v14 = &off_24C33CE88;
  *((_QWORD *)v14 + 4) = v13;
  *((_QWORD *)v14 + 5) = 0;
  *((_QWORD *)v14 + 3) = &unk_24C339CA8;
  *((_QWORD *)v14 + 6) = v11;
  *(_OWORD *)(v14 + 56) = 0u;
  *(_QWORD *)&v50 = v14 + 24;
  *((_QWORD *)&v50 + 1) = v14;
  v15 = (char *)operator new(0x80uLL);
  *(_OWORD *)(v15 + 8) = 0u;
  *(_QWORD *)v15 = &off_24C33CB40;
  v44 = (std::__shared_weak_count *)*((_QWORD *)&v50 + 1);
  *(_OWORD *)dsema = v50;
  v50 = 0u;
  mlcore::PropertiesQuery::PropertiesQuery((uint64_t)(v15 + 24), (uint64_t)v12, (uint64_t *)dsema);
  if (v44)
  {
    p_shared_owners = (unint64_t *)&v44->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
      std::__shared_weak_count::__release_weak(v44);
    }
  }
  v51 = v15 + 24;
  v52 = (std::__shared_weak_count *)v15;
  if (*((_QWORD *)&v50 + 1))
  {
    v18 = (unint64_t *)(*((_QWORD *)&v50 + 1) + 8);
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v50 + 1) + 16))(*((_QWORD *)&v50 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v50 + 1));
    }
  }
  v20 = (uint64_t)v51;
  v48 = 0;
  v49 = 0;
  v47 = 0;
  std::vector<mlcore::ModelPropertyBase *>::__init_with_size[abi:ne180100]<mlcore::ModelPropertyBase **,mlcore::ModelPropertyBase **>(&v47, *(const void **)(a1 + 216), *(_QWORD *)(a1 + 224), (uint64_t)(*(_QWORD *)(a1 + 224) - *(_QWORD *)(a1 + 216)) >> 3);
  v21 = v47;
  std::vector<mlcore::ModelPropertyBase *>::__assign_with_size[abi:ne180100]<mlcore::ModelPropertyBase **,mlcore::ModelPropertyBase **>((char *)(v20 + 80), v47, (uint64_t)v48, (v48 - v47) >> 3);
  if (v21)
  {
    v48 = v21;
    operator delete(v21);
  }
  *a5 = 0;
  a5[1] = 0;
  *(_QWORD *)dsema = dispatch_semaphore_create(0);
  v22 = *(void (****)(_QWORD, uint64_t *, uint64_t *, _BYTE *))(a1 + 88);
  v23 = v52;
  v45[2] = v20;
  v46 = v52;
  if (v52)
  {
    v24 = (unint64_t *)&v52->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  v26 = *(std::__shared_weak_count **)(a1 + 112);
  v45[0] = *(_QWORD *)(a1 + 104);
  v45[1] = (uint64_t)v26;
  if (v26)
  {
    v27 = (unint64_t *)&v26->__shared_owners_;
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
  }
  v72 = 0;
  v29 = operator new(0x40uLL);
  *v29 = &off_24C33B718;
  v29[1] = a1;
  v29[2] = a4;
  v29[3] = &v53;
  v29[4] = a5;
  v29[5] = &v70;
  v29[6] = &v69;
  v29[7] = dsema;
  v72 = v29;
  mlcore::LibraryView::performQuery<mlcore::PropertiesQuery>(v22, v20, v23, v45, (uint64_t)v71);
  v30 = v72;
  if (v72 == v71)
  {
    v31 = 4;
    v30 = v71;
    goto LABEL_35;
  }
  if (v72)
  {
    v31 = 5;
LABEL_35:
    (*(void (**)(void))(*v30 + 8 * v31))();
  }
  if (v26)
  {
    v38 = (unint64_t *)&v26->__shared_owners_;
    do
      v39 = __ldaxr(v38);
    while (__stlxr(v39 - 1, v38));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
  v40 = v46;
  if (v46)
  {
    v41 = (unint64_t *)&v46->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  dispatch_semaphore_wait(*(dispatch_semaphore_t *)dsema, 0xFFFFFFFFFFFFFFFFLL);
  if (!*(_BYTE *)(a1 + 120) && *a5)
    mediaplatform::Cache<std::pair<mlcore::EntityClass *,long long>,std::shared_ptr<mlcore::Entity>,mlcore::EntityCache::hash,std::equal_to<std::pair<mlcore::EntityClass *,long long>>>::setValueForKey(a1 + 128, a5, &v68);
  dispatch_release(*(dispatch_object_t *)dsema);
  v35 = v52;
  if (v52)
  {
    v43 = (unint64_t *)&v52->__shared_owners_;
    do
      v37 = __ldaxr(v43);
    while (__stlxr(v37 - 1, v43));
LABEL_52:
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
    }
  }
}

void sub_20A86F538(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,dispatch_object_t object,uint64_t a26,char a27)
{
  uint64_t v27;

  dispatch_release(object);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100](v27);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a22);
  _Unwind_Resume(a1);
}

uint64_t mlcore::SmartPlaylistEntityCache::isSmartPlaylist(mlcore::SmartPlaylistEntityCache *this)
{
  return 1;
}

uint64_t mediaplatform::Optional<std::shared_ptr<mlcore::Entity>>::value(uint64_t result)
{
  std::runtime_error *exception;

  if (!*(_BYTE *)(result + 16))
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Attempt to extract value from invalid optional.");
    __cxa_throw(exception, MEMORY[0x24BEDB730], MEMORY[0x24BEDAB60]);
  }
  return result;
}

void sub_20A86F678(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void mediaplatform::Cache<std::pair<mlcore::EntityClass *,long long>,std::shared_ptr<mlcore::Entity>,mlcore::EntityCache::hash,std::equal_to<std::pair<mlcore::EntityClass *,long long>>>::_removeEntry(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v4;
  uint64_t v5;
  int8x8_t v6;
  unint64_t v7;
  uint8x8_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[2];
  char v17;

  v4 = (uint64_t *)a2[6];
  a1[2] -= v4[3];
  v5 = *v4;
  *(_QWORD *)(v5 + 8) = v4[1];
  *(_QWORD *)v4[1] = v5;
  --a1[10];
  operator delete(v4);
  v6 = (int8x8_t)a1[4];
  v7 = a2[1];
  v8 = (uint8x8_t)vcnt_s8(v6);
  v8.i16[0] = vaddlv_u8(v8);
  if (v8.u32[0] > 1uLL)
  {
    if (v7 >= *(_QWORD *)&v6)
      v7 %= *(_QWORD *)&v6;
  }
  else
  {
    v7 &= *(_QWORD *)&v6 - 1;
  }
  v9 = a1[3];
  v10 = *(_QWORD **)(v9 + 8 * v7);
  do
  {
    v11 = v10;
    v10 = (_QWORD *)*v10;
  }
  while (v10 != a2);
  if (v11 == a1 + 5)
    goto LABEL_18;
  v12 = v11[1];
  if (v8.u32[0] > 1uLL)
  {
    if (v12 >= *(_QWORD *)&v6)
      v12 %= *(_QWORD *)&v6;
  }
  else
  {
    v12 &= *(_QWORD *)&v6 - 1;
  }
  if (v12 != v7)
  {
LABEL_18:
    if (!*a2)
      goto LABEL_19;
    v13 = *(_QWORD *)(*a2 + 8);
    if (v8.u32[0] > 1uLL)
    {
      if (v13 >= *(_QWORD *)&v6)
        v13 %= *(_QWORD *)&v6;
    }
    else
    {
      v13 &= *(_QWORD *)&v6 - 1;
    }
    if (v13 != v7)
LABEL_19:
      *(_QWORD *)(v9 + 8 * v7) = 0;
  }
  v14 = *a2;
  if (*a2)
  {
    v15 = *(_QWORD *)(v14 + 8);
    if (v8.u32[0] > 1uLL)
    {
      if (v15 >= *(_QWORD *)&v6)
        v15 %= *(_QWORD *)&v6;
    }
    else
    {
      v15 &= *(_QWORD *)&v6 - 1;
    }
    if (v15 != v7)
    {
      *(_QWORD *)(a1[3] + 8 * v15) = v11;
      v14 = *a2;
    }
  }
  *v11 = v14;
  *a2 = 0;
  --a1[6];
  v16[0] = a2;
  v16[1] = a1 + 5;
  v17 = 1;
  std::unique_ptr<std::__tree_node<std::shared_ptr<mediaplatform::DatabaseConnection>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::shared_ptr<mediaplatform::DatabaseConnection>,void *>>>>::reset[abi:ne180100]((uint64_t)v16);
}

uint64_t std::__function::__value_func<void ()(std::shared_ptr<mlcore::PropertiesQueryResult>)>::__value_func[abi:ne180100](uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(_QWORD *)(a1 + 24) = a1;
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(_QWORD *)(a1 + 24) = v4;
  }
  else
  {
    v3 = (_QWORD *)(a1 + 24);
  }
  *v3 = 0;
  return a1;
}

_QWORD *std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::PropertiesQuery>(std::shared_ptr<mlcore::PropertiesQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::PropertiesQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::PropertiesQuery>(std::shared_ptr<mlcore::PropertiesQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::PropertiesQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::~__func(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_24C33ADD0;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::PropertiesQuery>(std::shared_ptr<mlcore::PropertiesQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::PropertiesQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::PropertiesQuery>(std::shared_ptr<mlcore::PropertiesQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::PropertiesQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::~__func(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_24C33ADD0;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::PropertiesQuery>(std::shared_ptr<mlcore::PropertiesQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::PropertiesQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::PropertiesQuery>(std::shared_ptr<mlcore::PropertiesQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::PropertiesQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::__clone(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_24C33ADD0;
  return std::__function::__value_func<void ()(void)>::__value_func[abi:ne180100]((uint64_t)(a2 + 1), a1 + 8);
}

_QWORD *std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::PropertiesQuery>(std::shared_ptr<mlcore::PropertiesQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::PropertiesQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::PropertiesQuery>(std::shared_ptr<mlcore::PropertiesQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::PropertiesQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::destroy(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 8);
  result = *(_QWORD **)(a1 + 32);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

uint64_t std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::PropertiesQuery>(std::shared_ptr<mlcore::PropertiesQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::PropertiesQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::PropertiesQuery>(std::shared_ptr<mlcore::PropertiesQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::PropertiesQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::target(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(_QWORD *)(a2 + 8), (uint64_t)"ZN6mlcore11LibraryView12performQueryINS_15PropertiesQueryEEEvNSt3__110shared_ptrIT_EENS4_INS_11TransactionEEENS3_8functionIFvNS4_INS5_6ResultEEEEEEEUlNS4_INS_11QueryResultEEEE_"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::PropertiesQuery>(std::shared_ptr<mlcore::PropertiesQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::PropertiesQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::PropertiesQuery>(std::shared_ptr<mlcore::PropertiesQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::PropertiesQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::target_type()
{
}

void std::__function::__func<mlcore::SmartPlaylistEntityCache::entityForClassAndPersistentID(mlcore::EntityClass *,long long,mlcore::PropertyCache)::$_0,std::allocator<mlcore::SmartPlaylistEntityCache::entityForClassAndPersistentID(mlcore::EntityClass *,long long,mlcore::PropertyCache)::$_0>,void ()(std::shared_ptr<mlcore::PropertiesQueryResult>)>::~__func()
{
  JUMPOUT(0x20BD27AFCLL);
}

__n128 std::__function::__func<mlcore::SmartPlaylistEntityCache::entityForClassAndPersistentID(mlcore::EntityClass *,long long,mlcore::PropertyCache)::$_0,std::allocator<mlcore::SmartPlaylistEntityCache::entityForClassAndPersistentID(mlcore::EntityClass *,long long,mlcore::PropertyCache)::$_0>,void ()(std::shared_ptr<mlcore::PropertiesQueryResult>)>::__clone(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x40uLL);
  *(_QWORD *)v2 = &off_24C33B718;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 24);
  result = *(__n128 *)(a1 + 40);
  *(__n128 *)(v2 + 40) = result;
  *((_QWORD *)v2 + 7) = *(_QWORD *)(a1 + 56);
  return result;
}

__n128 std::__function::__func<mlcore::SmartPlaylistEntityCache::entityForClassAndPersistentID(mlcore::EntityClass *,long long,mlcore::PropertyCache)::$_0,std::allocator<mlcore::SmartPlaylistEntityCache::entityForClassAndPersistentID(mlcore::EntityClass *,long long,mlcore::PropertyCache)::$_0>,void ()(std::shared_ptr<mlcore::PropertiesQueryResult>)>::__clone(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_QWORD *)a2 = &off_24C33B718;
  result = *(__n128 *)(a1 + 8);
  v3 = *(_OWORD *)(a1 + 24);
  v4 = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(a2 + 56) = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 40) = v4;
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void std::__function::__func<mlcore::SmartPlaylistEntityCache::entityForClassAndPersistentID(mlcore::EntityClass *,long long,mlcore::PropertyCache)::$_0,std::allocator<mlcore::SmartPlaylistEntityCache::entityForClassAndPersistentID(mlcore::EntityClass *,long long,mlcore::PropertyCache)::$_0>,void ()(std::shared_ptr<mlcore::PropertiesQueryResult>)>::operator()(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  mlcore *v7;
  mlcore *v8;
  uint64_t v9;
  unint64_t v10;
  mlcore *v11;
  std::string::size_type v12;
  std::string *v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  __int128 v19;
  std::string __p;
  uint64_t v21[2];
  void (**v22)(mlcore::PropertyCache *__hidden);
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  _BYTE v27[24];
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  _BYTE v32[24];
  _BYTE v33[32];
  uint64_t v34;
  void *v35;
  void **v36[27];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  if (!*(_DWORD *)(v3 + 40))
  {
    v5 = *(_QWORD *)(a1 + 8);
    v37 = 0;
    v38 = 0;
    v39 = 0;
    std::vector<mlcore::PropertyCache>::__init_with_size[abi:ne180100]<mlcore::PropertyCache*,mlcore::PropertyCache*>((uint64_t)&v37, *(_QWORD *)(v3 + 160), *(_QWORD *)(v3 + 168), 0x84BDA12F684BDA13 * ((uint64_t)(*(_QWORD *)(v3 + 168) - *(_QWORD *)(v3 + 160)) >> 3));
    if (v38 != v37)
    {
      mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::PropertyCacheBase((uint64_t)v36, v37);
      v36[0] = (void **)&off_24C3371C0;
      v36[26] = (void **)&unk_24C3371E8;
      *(_OWORD *)&v27[8] = 0u;
      v30 = 1065353216;
      *(_OWORD *)&v32[8] = 0u;
      v23 = 0u;
      v24 = 0u;
      v25 = 1065353216;
      v26 = 0u;
      *(_OWORD *)v27 = 0u;
      v28 = 0u;
      v29 = 0u;
      *(_DWORD *)&v27[16] = 1065353216;
      v31 = 0u;
      *(_OWORD *)v32 = 0u;
      *(_DWORD *)&v32[16] = 1065353216;
      memset(v33, 0, sizeof(v33));
      v34 = 1065353216;
      v22 = &off_24C3371C0;
      v35 = &unk_24C3371E8;
      v21[0] = (uint64_t)&v22;
      v21[1] = v5 + 240;
      mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::apply<mlcore::ForeignPropertyCacheMapper>(v36, v21);
      mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::apply<mlcore::ForeignPropertyCacheMapper>(*(_QWORD **)(a1 + 16), v21);
      v6 = **(_QWORD **)(a1 + 24);
      __p.__r_.__value_.__r.__words[0] = mlcore::PlaylistItemPropertyItemPersistentID(v7);
      v8 = (mlcore *)std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>((uint64_t)v33, __p.__r_.__value_.__r.__words[0], &__p);
      *((_QWORD *)v8 + 3) = v6;
      v9 = *(_QWORD *)(a1 + 16);
      v10 = mlcore::PlaylistItemPropertyOccurrenceID(v8);
      mlcore::PropertyCacheBase<std::string,mediaplatform::Data>::valueForProperty(&__p, v9, v10);
      v12 = mlcore::PlaylistItemPropertyOccurrenceID(v11);
      v13 = mlcore::PropertyCacheBase<std::string,mediaplatform::Data>::setValueForProperty((uint64_t)&v22, &__p, v12);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if (*(_BYTE *)(v5 + 280))
      {
        *(_QWORD *)&v19 = mlcore::PlaylistItemPropertyPosition((mlcore *)v13);
        std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>((uint64_t)v33, v19, &v19)[3] = 0;
      }
      (*(void (**)(__int128 *__return_ptr, _QWORD, _QWORD, void (***)(mlcore::PropertyCache *__hidden)))(***(_QWORD ***)(a1 + 40) + 48))(&v19, **(_QWORD **)(a1 + 40), **(_QWORD **)(a1 + 48), &v22);
      std::shared_ptr<mlcore::Predicate>::operator=[abi:ne180100](*(_QWORD *)(a1 + 32), &v19);
      v14 = (std::__shared_weak_count *)*((_QWORD *)&v19 + 1);
      if (*((_QWORD *)&v19 + 1))
      {
        v15 = (unint64_t *)(*((_QWORD *)&v19 + 1) + 8);
        do
          v16 = __ldaxr(v15);
        while (__stlxr(v16 - 1, v15));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
      }
      mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase(&v22);
      mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase(v36);
    }
    v36[0] = (void **)&v37;
    std::vector<mlcore::PropertyCache>::__destroy_vector::operator()[abi:ne180100](v36);
  }
  dispatch_semaphore_signal(**(dispatch_semaphore_t **)(a1 + 56));
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_20A86FCF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  std::__shared_weak_count *v46;
  uint64_t v47;
  unint64_t *p_shared_owners;
  unint64_t v50;

  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase(&a19);
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase(&a46);
  a46 = v47 - 72;
  std::vector<mlcore::PropertyCache>::__destroy_vector::operator()[abi:ne180100]((void ***)&a46);
  if (v46)
  {
    p_shared_owners = (unint64_t *)&v46->__shared_owners_;
    do
      v50 = __ldaxr(p_shared_owners);
    while (__stlxr(v50 - 1, p_shared_owners));
    if (!v50)
    {
      ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
      std::__shared_weak_count::__release_weak(v46);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<mlcore::SmartPlaylistEntityCache::entityForClassAndPersistentID(mlcore::EntityClass *,long long,mlcore::PropertyCache)::$_0,std::allocator<mlcore::SmartPlaylistEntityCache::entityForClassAndPersistentID(mlcore::EntityClass *,long long,mlcore::PropertyCache)::$_0>,void ()(std::shared_ptr<mlcore::PropertiesQueryResult>)>::target(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(_QWORD *)(a2 + 8), (uint64_t)"ZN6mlcore24SmartPlaylistEntityCache29entityForClassAndPersistentIDEPNS_11EntityClassExNS_13PropertyCacheEE3$_0"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<mlcore::SmartPlaylistEntityCache::entityForClassAndPersistentID(mlcore::EntityClass *,long long,mlcore::PropertyCache)::$_0,std::allocator<mlcore::SmartPlaylistEntityCache::entityForClassAndPersistentID(mlcore::EntityClass *,long long,mlcore::PropertyCache)::$_0>,void ()(std::shared_ptr<mlcore::PropertiesQueryResult>)>::target_type()
{
}

void mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::apply<mlcore::ForeignPropertyCacheMapper>(_QWORD *a1, uint64_t *a2)
{
  _QWORD *i;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t *j;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *k;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t *m;
  unint64_t v20;
  uint64_t v21;
  std::string::size_type v22;
  uint64_t v23;
  int v24;
  _QWORD *n;
  unint64_t v26;
  const void *v27;
  size_t v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  void (**v34)(mediaplatform::Data *__hidden);
  std::string __p;
  char v36;
  std::string __str;

  for (i = (_QWORD *)a1[23]; i; i = (_QWORD *)*i)
  {
    v5 = i[3];
    v6 = a2[1];
    v34 = (void (**)(mediaplatform::Data *__hidden))i[2];
    v7 = std::__hash_table<std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<mlcore::ModelPropertyBase *,std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,true>,std::__unordered_map_equal<mlcore::ModelPropertyBase *,std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::hash<mlcore::ModelPropertyBase *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>>>::__emplace_unique_key_args<mlcore::ModelPropertyBase *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelPropertyBase *&&>,std::tuple<>>(v6, (unint64_t)v34, &v34);
    v8 = *a2;
    v34 = (void (**)(mediaplatform::Data *__hidden))v7[3];
    std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>(v8 + 168, (unint64_t)v34, &v34)[3] = v5;
  }
  for (j = (uint64_t *)a1[18]; j; j = (uint64_t *)*j)
  {
    v10 = *((_DWORD *)j + 6);
    v11 = a2[1];
    v34 = (void (**)(mediaplatform::Data *__hidden))j[2];
    v12 = std::__hash_table<std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<mlcore::ModelPropertyBase *,std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,true>,std::__unordered_map_equal<mlcore::ModelPropertyBase *,std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::hash<mlcore::ModelPropertyBase *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>>>::__emplace_unique_key_args<mlcore::ModelPropertyBase *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelPropertyBase *&&>,std::tuple<>>(v11, (unint64_t)v34, &v34);
    v13 = *a2;
    v34 = (void (**)(mediaplatform::Data *__hidden))v12[3];
    *((_DWORD *)std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::__emplace_unique_key_args<mlcore::ModelProperty<int> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<int> * const&>,std::tuple<>>(v13 + 128, (unint64_t)v34, &v34)+ 6) = v10;
  }
  for (k = (_QWORD *)a1[13]; k; k = (_QWORD *)*k)
  {
    v15 = k[3];
    v16 = a2[1];
    v34 = (void (**)(mediaplatform::Data *__hidden))k[2];
    v17 = std::__hash_table<std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<mlcore::ModelPropertyBase *,std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,true>,std::__unordered_map_equal<mlcore::ModelPropertyBase *,std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::hash<mlcore::ModelPropertyBase *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>>>::__emplace_unique_key_args<mlcore::ModelPropertyBase *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelPropertyBase *&&>,std::tuple<>>(v16, (unint64_t)v34, &v34);
    v18 = *a2;
    v34 = (void (**)(mediaplatform::Data *__hidden))v17[3];
    std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<double> *,double>,std::__unordered_map_hasher<mlcore::ModelProperty<double> *,std::__hash_value_type<mlcore::ModelProperty<double> *,double>,std::hash<mlcore::ModelProperty<double> *>,std::equal_to<mlcore::ModelProperty<double> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<double> *,std::__hash_value_type<mlcore::ModelProperty<double> *,double>,std::equal_to<mlcore::ModelProperty<double> *>,std::hash<mlcore::ModelProperty<double> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<double> *,double>>>::__emplace_unique_key_args<mlcore::ModelProperty<double> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<double> * const&>,std::tuple<>>(v18 + 88, (unint64_t)v34, &v34)[3] = v15;
  }
  for (m = (uint64_t *)a1[8]; m; m = (uint64_t *)*m)
  {
    v20 = m[2];
    v34 = (void (**)(mediaplatform::Data *__hidden))v20;
    if (*((char *)m + 47) < 0)
    {
      std::string::__init_copy_ctor_external(&__p, (const std::string::value_type *)m[3], m[4]);
      v20 = (unint64_t)v34;
    }
    else
    {
      __p = *(std::string *)((_BYTE *)m + 1);
    }
    v21 = a2[1];
    __str.__r_.__value_.__r.__words[0] = v20;
    v22 = std::__hash_table<std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<mlcore::ModelPropertyBase *,std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,true>,std::__unordered_map_equal<mlcore::ModelPropertyBase *,std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::hash<mlcore::ModelPropertyBase *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>>>::__emplace_unique_key_args<mlcore::ModelPropertyBase *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelPropertyBase *&&>,std::tuple<>>(v21, v20, &__str)[3];
    v23 = *a2;
    v24 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      std::string::__init_copy_ctor_external(&__str, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    else
      __str = __p;
    mlcore::PropertyCacheBase<std::string,mediaplatform::Data>::setValueForProperty(v23, &__str, v22);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__str.__r_.__value_.__l.__data_);
      if (v24 < 0)
LABEL_19:
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    else if (v24 < 0)
    {
      goto LABEL_19;
    }
  }
  for (n = (_QWORD *)a1[3]; n; n = (_QWORD *)*n)
  {
    v26 = n[2];
    v27 = (const void *)n[6];
    v28 = n[4];
    if (v28)
      v29 = (void *)operator new[]();
    else
      v29 = 0;
    if (v27)
      memcpy(v29, v27, v28);
    else
      bzero(v29, v28);
    v30 = a2[1];
    v34 = (void (**)(mediaplatform::Data *__hidden))v26;
    v31 = std::__hash_table<std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<mlcore::ModelPropertyBase *,std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,true>,std::__unordered_map_equal<mlcore::ModelPropertyBase *,std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::hash<mlcore::ModelPropertyBase *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>>>::__emplace_unique_key_args<mlcore::ModelPropertyBase *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelPropertyBase *&&>,std::tuple<>>(v30, v26, &v34)[3];
    v32 = *a2;
    v34 = &off_24C331510;
    __p.__r_.__value_.__r.__words[0] = v28;
    __p.__r_.__value_.__l.__size_ = v28;
    if (v28)
      v33 = (void *)operator new[]();
    else
      v33 = 0;
    __p.__r_.__value_.__r.__words[2] = (std::string::size_type)v33;
    v36 = 1;
    if (v29)
      memcpy(v33, v29, v28);
    else
      bzero(v33, v28);
    mlcore::PropertyCacheBase<mediaplatform::Data>::setValueForProperty(v32, (uint64_t)&v34, v31);
    v34 = &off_24C331510;
    if (v36 && __p.__r_.__value_.__r.__words[2])
      MEMORY[0x20BD27AE4](__p.__r_.__value_.__r.__words[2], 0x1000C8077774924);
    if (v29)
      MEMORY[0x20BD27AE4](v29, 0x1000C8077774924);
  }
}

void sub_20A8700D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  uint64_t v20;

  if (a14 && a13)
    MEMORY[0x20BD27AE4](a13, 0x1000C8077774924);
  if (v20)
    MEMORY[0x20BD27AE4](v20, 0x1000C8077774924);
  _Unwind_Resume(exception_object);
}

_QWORD *std::__hash_table<std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<mlcore::ModelPropertyBase *,std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,true>,std::__unordered_map_equal<mlcore::ModelPropertyBase *,std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::hash<mlcore::ModelPropertyBase *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase *>>>::__emplace_unique_key_args<mlcore::ModelPropertyBase *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelPropertyBase *&&>,std::tuple<>>(uint64_t a1, unint64_t a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  _QWORD **v11;
  _QWORD *i;
  unint64_t v13;
  float v14;
  float v15;
  _BOOL8 v16;
  unint64_t v17;
  unint64_t v18;
  size_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;

  v6 = 0x9DDFEA08EB382D69 * (((8 * a2) + 8) ^ HIDWORD(a2));
  v7 = 0x9DDFEA08EB382D69 * (HIDWORD(a2) ^ (v6 >> 47) ^ v6);
  v8 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v3 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
      if (v8 >= v9)
        v3 = v8 % v9;
    }
    else
    {
      v3 = v8 & (v9 - 1);
    }
    v11 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v3);
    if (v11)
    {
      for (i = *v11; i; i = (_QWORD *)*i)
      {
        v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == a2)
            return i;
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9)
              v13 %= v9;
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v3)
            break;
        }
      }
    }
  }
  i = operator new(0x20uLL);
  *i = 0;
  i[1] = v8;
  i[2] = *a3;
  i[3] = 0;
  v14 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v15 = *(float *)(a1 + 32);
  if (!v9 || (float)(v15 * (float)v9) < v14)
  {
    v16 = 1;
    if (v9 >= 3)
      v16 = (v9 & (v9 - 1)) != 0;
    v17 = v16 | (2 * v9);
    v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18)
      v19 = v18;
    else
      v19 = v17;
    std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>,std::__unordered_map_hasher<mlcore::ModelProperty<std::string> *,std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>,std::hash<mlcore::ModelProperty<std::string> *>,std::equal_to<mlcore::ModelProperty<std::string> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<std::string> *,std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>,std::equal_to<mlcore::ModelProperty<std::string> *>,std::hash<mlcore::ModelProperty<std::string> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>>>::__rehash<true>(a1, v19);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v3 = v8 % v9;
      else
        v3 = v8;
    }
    else
    {
      v3 = (v9 - 1) & v8;
    }
  }
  v20 = *(_QWORD *)a1;
  v21 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v21)
  {
    *i = *v21;
LABEL_38:
    *v21 = i;
    goto LABEL_39;
  }
  *i = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = i;
  *(_QWORD *)(v20 + 8 * v3) = a1 + 16;
  if (*i)
  {
    v22 = *(_QWORD *)(*i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v22 >= v9)
        v22 %= v9;
    }
    else
    {
      v22 &= v9 - 1;
    }
    v21 = (_QWORD *)(*(_QWORD *)a1 + 8 * v22);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_20A870384(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t mlcore::SmartPlaylistEntityCache::SmartPlaylistEntityCache(uint64_t a1, _QWORD *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  _QWORD v9[2];

  v3 = (std::__shared_weak_count *)a2[1];
  v9[0] = *a2;
  v9[1] = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  mlcore::EntityCache::EntityCache(a1, v9);
  if (v3)
  {
    v6 = (unint64_t *)&v3->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  *(_QWORD *)a1 = &off_24C33A4E0;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_QWORD *)(a1 + 264) = 0;
  *(_DWORD *)(a1 + 272) = 1065353216;
  *(_BYTE *)(a1 + 280) = 0;
  return a1;
}

{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  _QWORD v9[2];

  v3 = (std::__shared_weak_count *)a2[1];
  v9[0] = *a2;
  v9[1] = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  mlcore::EntityCache::EntityCache(a1, v9);
  if (v3)
  {
    v6 = (unint64_t *)&v3->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  *(_QWORD *)a1 = &off_24C33A4E0;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_QWORD *)(a1 + 264) = 0;
  *(_DWORD *)(a1 + 272) = 1065353216;
  *(_BYTE *)(a1 + 280) = 0;
  return a1;
}

void sub_20A8704B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20A87057C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void mlcore::UnaryPredicate<long long>::~UnaryPredicate()
{
  JUMPOUT(0x20BD27AFCLL);
}

void mlcore::UnaryPredicateBase::description(mlcore::UnaryPredicateBase *this)
{
  __asm { BR              X10 }
}

uint64_t sub_20A8705D8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 40))(*(_QWORD *)(a1 + 8));
}

void sub_20A8705F8(uint64_t a1, std::string *a2, std::string *a3)
{
  uint64_t v3;
  std::string *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  std::string v8;
  std::string v9;

  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 40))(&v8);
  v4 = std::string::insert(&v8, 0, "!(");
  v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v9.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v9.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  v6 = std::string::append(&v9, ")");
  v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  *(_QWORD *)(v3 + 16) = *((_QWORD *)&v6->__r_.__value_.__l + 2);
  *(_OWORD *)v3 = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v9.__r_.__value_.__l.__data_);
  if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v8.__r_.__value_.__l.__data_);
}

void sub_20A870704(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

BOOL mlcore::UnaryPredicate<long long>::matches(uint64_t a1, uint64_t a2)
{
  return mlcore::PropertyCache::hasValueForProperty((_QWORD *)(*(_QWORD *)a2 + 8), *(_QWORD *)(a1 + 8));
}

void std::allocate_shared[abi:ne180100]<mediaplatform::SQLNotExpression,std::allocator<mediaplatform::SQLNotExpression>,std::shared_ptr<mediaplatform::SQLExpression>,void>(_QWORD *a1, __int128 *a2)
{
  char *v4;
  __int128 v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  unint64_t v9;

  v4 = (char *)operator new(0x30uLL);
  *(_OWORD *)(v4 + 8) = 0u;
  *((_QWORD *)v4 + 3) = &off_24C330EC8;
  *(_QWORD *)v4 = &off_24C33BC28;
  v5 = *a2;
  *a2 = 0u;
  *((_OWORD *)v4 + 2) = v5;
  v6 = (std::__shared_weak_count *)*((_QWORD *)&v5 + 1);
  if (*((_QWORD *)&v5 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v5 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
    do
      v9 = __ldaxr(v7);
    while (__stlxr(v9 - 1, v7));
    if (!v9)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v5 + 1) + 16))(*((_QWORD *)&v5 + 1));
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  *a1 = v4 + 24;
  a1[1] = v4;
}

void std::allocate_shared[abi:ne180100]<mediaplatform::SQLUnaryExpression,std::allocator<mediaplatform::SQLUnaryExpression>,std::shared_ptr<mediaplatform::SQLExpression>,mediaplatform::SQLUnaryExpression::UnaryOperator,void>(_QWORD *a1, __int128 *a2, int *a3)
{
  char *v6;
  char *v7;
  char *v8;
  __int128 v9;
  int v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;

  v6 = (char *)operator new(0x38uLL);
  v7 = v6;
  *(_OWORD *)(v6 + 8) = 0u;
  *(_QWORD *)v6 = &off_24C33BE90;
  *((_QWORD *)v6 + 3) = &off_24C331078;
  v8 = v6 + 24;
  v9 = *a2;
  *a2 = 0u;
  v10 = *a3;
  *((_OWORD *)v6 + 2) = v9;
  v11 = (std::__shared_weak_count *)*((_QWORD *)&v9 + 1);
  if (*((_QWORD *)&v9 + 1))
  {
    v12 = (unint64_t *)(*((_QWORD *)&v9 + 1) + 8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    *((_DWORD *)v6 + 12) = v10;
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v9 + 1) + 16))(*((_QWORD *)&v9 + 1));
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  else
  {
    *((_DWORD *)v6 + 12) = v10;
  }
  *a1 = v8;
  a1[1] = v7;
}

void std::__shared_ptr_emplace<mediaplatform::SQLNotExpression>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33BC28;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mediaplatform::SQLNotExpression>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33BC28;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD27AFCLL);
}

void std::__shared_ptr_emplace<mediaplatform::SQLUnaryExpression>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33BE90;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mediaplatform::SQLUnaryExpression>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33BE90;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t std::__shared_ptr_emplace<mediaplatform::SQLUnaryExpression>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void mlcore::UnaryPredicate<std::string>::~UnaryPredicate()
{
  JUMPOUT(0x20BD27AFCLL);
}

BOOL mlcore::UnaryPredicate<std::string>::matches(uint64_t a1, uint64_t a2)
{
  return mlcore::PropertyCache::hasValueForProperty((_QWORD *)(*(_QWORD *)a2 + 8), *(_QWORD *)(a1 + 8));
}

void mlcore::UnaryPredicate<double>::~UnaryPredicate()
{
  JUMPOUT(0x20BD27AFCLL);
}

BOOL mlcore::UnaryPredicate<double>::matches(uint64_t a1, uint64_t a2)
{
  return mlcore::PropertyCache::hasValueForProperty((_QWORD *)(*(_QWORD *)a2 + 8), *(_QWORD *)(a1 + 8));
}

void mlcore::UnaryPredicate<int>::~UnaryPredicate()
{
  JUMPOUT(0x20BD27AFCLL);
}

BOOL mlcore::UnaryPredicate<int>::matches(uint64_t a1, uint64_t a2)
{
  return mlcore::PropertyCache::hasValueForProperty((_QWORD *)(*(_QWORD *)a2 + 8), *(_QWORD *)(a1 + 8));
}

void mlcore::UnaryPredicate<mediaplatform::Data>::~UnaryPredicate()
{
  JUMPOUT(0x20BD27AFCLL);
}

BOOL mlcore::UnaryPredicate<mediaplatform::Data>::matches(uint64_t a1, uint64_t a2)
{
  return mlcore::PropertyCache::hasValueForProperty((_QWORD *)(*(_QWORD *)a2 + 8), *(_QWORD *)(a1 + 8));
}

uint64_t mlcore::UnaryPredicateBase::UnaryPredicateBase(uint64_t result, uint64_t a2, int a3)
{
  *(_QWORD *)result = off_24C339AF0;
  *(_QWORD *)(result + 8) = a2;
  *(_DWORD *)(result + 16) = a3;
  return result;
}

uint64_t mlcore::UnaryPredicate<long long>::property(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t mlcore::UnaryPredicateBase::property(mlcore::UnaryPredicateBase *this)
{
  return *((_QWORD *)this + 1);
}

uint64_t mlcore::UnaryPredicate<std::string>::UnaryPredicate(uint64_t result, uint64_t a2, int a3)
{
  *(_DWORD *)(result + 16) = a3;
  *(_QWORD *)result = &unk_24C337708;
  *(_QWORD *)(result + 8) = a2;
  return result;
}

{
  *(_DWORD *)(result + 16) = a3;
  *(_QWORD *)result = &unk_24C337708;
  *(_QWORD *)(result + 8) = a2;
  return result;
}

uint64_t mlcore::UnaryPredicate<std::string>::property(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t mlcore::UnaryPredicate<double>::UnaryPredicate(uint64_t result, uint64_t a2, int a3)
{
  *(_DWORD *)(result + 16) = a3;
  *(_QWORD *)result = &unk_24C337760;
  *(_QWORD *)(result + 8) = a2;
  return result;
}

{
  *(_DWORD *)(result + 16) = a3;
  *(_QWORD *)result = &unk_24C337760;
  *(_QWORD *)(result + 8) = a2;
  return result;
}

uint64_t mlcore::UnaryPredicate<double>::property(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t mlcore::UnaryPredicate<int>::property(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t mlcore::UnaryPredicate<mediaplatform::Data>::UnaryPredicate(uint64_t result, uint64_t a2, int a3)
{
  *(_DWORD *)(result + 16) = a3;
  *(_QWORD *)result = &unk_24C3376B0;
  *(_QWORD *)(result + 8) = a2;
  return result;
}

{
  *(_DWORD *)(result + 16) = a3;
  *(_QWORD *)result = &unk_24C3376B0;
  *(_QWORD *)(result + 8) = a2;
  return result;
}

uint64_t mlcore::UnaryPredicate<mediaplatform::Data>::property(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t mlcore::UnaryPredicateBase::unaryOperator(mlcore::UnaryPredicateBase *this)
{
  return *((unsigned int *)this + 4);
}

mlcore::ItemSearchTable *mlcore::ItemSearchTable::ItemSearchTable(mlcore::ItemSearchTable *this)
{
  std::string *v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  std::string *v10;
  int v11;
  std::string *v12;
  int v13;
  std::string *v14;
  int v15;
  std::string *v16;
  int v17;
  std::string *v18;
  int v19;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  void *v43[2];
  char v44;
  void (**v45)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string __p;
  int v47;
  uint64_t v48;
  int v49;
  void *v50[2];
  char v51;
  void (**v52)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v53;
  int v54;
  uint64_t v55;
  int v56;
  void *v57[2];
  char v58;
  void (**v59)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v60;
  int v61;
  uint64_t v62;
  int v63;
  void *v64[2];
  char v65;
  void (**v66)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v67;
  int v68;
  uint64_t v69;
  int v70;
  void *v71[2];
  char v72;
  void (**v73)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v74;
  int v75;
  uint64_t v76;
  int v77;
  void *v78[2];
  char v79;
  void (**v80)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v81;
  int v82;
  uint64_t v83;
  int v84;
  std::string __s;
  uint64_t (**v86)();
  std::string v87;
  int v88;
  uint64_t v89;
  int v90;
  uint64_t (**v91)();
  std::string v92;
  int v93;
  uint64_t v94;
  int v95;
  uint64_t (**v96)();
  std::string v97;
  int v98;
  uint64_t v99;
  int v100;
  uint64_t (**v101)();
  std::string v102;
  int v103;
  uint64_t v104;
  int v105;
  uint64_t (**v106)();
  std::string v107;
  int v108;
  uint64_t v109;
  int v110;
  uint64_t (**v111)();
  std::string v112;
  int v113;
  uint64_t v114;
  int v115;
  std::string v116;
  uint64_t (**v117)();
  std::string v118;
  int v119;
  uint64_t v120;
  int v121;
  uint64_t (**v122)();
  std::string v123;
  int v124;
  uint64_t v125;
  int v126;
  uint64_t (**v127)();
  std::string v128;
  int v129;
  uint64_t v130;
  int v131;
  uint64_t (**v132)();
  std::string v133;
  int v134;
  uint64_t v135;
  int v136;
  uint64_t (**v137)();
  std::string v138;
  int v139;
  uint64_t v140;
  int v141;
  uint64_t (**v142)();
  std::string v143;
  int v144;
  uint64_t v145;
  int v146;
  uint64_t (**v147)();
  std::string v148;
  int v149;
  uint64_t v150;
  int v151;
  uint64_t (**v152)();
  std::string v153;
  int v154;
  uint64_t v155;
  int v156;
  uint64_t (**v157)();
  std::string v158;
  int v159;
  uint64_t v160;
  int v161;
  uint64_t (**v162)();
  std::string v163;
  int v164;
  uint64_t v165;
  int v166;
  uint64_t (**v167)();
  std::string v168;
  int v169;
  uint64_t v170;
  int v171;
  void (**v172)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v173;
  int v174;
  uint64_t v175;
  int v176;
  uint64_t (**v177)();
  std::string v178;
  int v179;
  uint64_t v180;
  int v181;
  uint64_t (**v182)();
  std::string v183;
  int v184;
  uint64_t v185;
  int v186;
  uint64_t (**v187)();
  std::string v188;
  int v189;
  uint64_t v190;
  int v191;
  void (**v192)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v193;
  int v194;
  uint64_t v195;
  int v196;
  void (**v197)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v198;
  int v199;
  uint64_t v200;
  int v201;
  void (**v202)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v203;
  int v204;
  uint64_t v205;
  int v206;
  uint64_t (**v207)();
  std::string v208;
  int v209;
  uint64_t v210;
  int v211;
  uint64_t (**v212)();
  std::string v213;
  int v214;
  uint64_t v215;
  int v216;

  std::string::basic_string[abi:ne180100]<0>(&__s, "item_search");
  std::string::basic_string[abi:ne180100]<0>(v78, "item_pid");
  mlcore::MediaColumn<long long>::MediaColumn((uint64_t)&v80, (uint64_t)v78, 1);
  std::string::basic_string[abi:ne180100]<0>(v71, "search_title");
  mlcore::MediaColumn<long long>::MediaColumn((uint64_t)&v73, (uint64_t)v71);
  std::string::basic_string[abi:ne180100]<0>(v64, "search_album");
  mlcore::MediaColumn<long long>::MediaColumn((uint64_t)&v66, (uint64_t)v64);
  std::string::basic_string[abi:ne180100]<0>(v57, "search_artist");
  mlcore::MediaColumn<long long>::MediaColumn((uint64_t)&v59, (uint64_t)v57);
  std::string::basic_string[abi:ne180100]<0>(v50, "search_composer");
  mlcore::MediaColumn<long long>::MediaColumn((uint64_t)&v52, (uint64_t)v50);
  std::string::basic_string[abi:ne180100]<0>(v43, "search_album_artist");
  mlcore::MediaColumn<long long>::MediaColumn((uint64_t)&v45, (uint64_t)v43);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v116, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v116 = __s;
  if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v112, v81.__r_.__value_.__l.__data_, v81.__r_.__value_.__l.__size_);
  else
    v112 = v81;
  v111 = off_24C335B18;
  v114 = v83;
  v37 = v82;
  v113 = v82;
  v115 = v84;
  if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v107, v74.__r_.__value_.__l.__data_, v74.__r_.__value_.__l.__size_);
  else
    v107 = v74;
  v106 = off_24C335B18;
  v109 = v76;
  v38 = v75;
  v108 = v75;
  v110 = v77;
  if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v102, v67.__r_.__value_.__l.__data_, v67.__r_.__value_.__l.__size_);
  else
    v102 = v67;
  v101 = off_24C335B18;
  v104 = v69;
  v39 = v68;
  v103 = v68;
  v105 = v70;
  if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v97, v60.__r_.__value_.__l.__data_, v60.__r_.__value_.__l.__size_);
  else
    v97 = v60;
  v96 = off_24C335B18;
  v99 = v62;
  v42 = v61;
  v98 = v61;
  v100 = v63;
  if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v92, v53.__r_.__value_.__l.__data_, v53.__r_.__value_.__l.__size_);
  else
    v92 = v53;
  v91 = off_24C335B18;
  v94 = v55;
  v41 = v54;
  v93 = v54;
  v95 = v56;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v87, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  else
    v87 = __p;
  v86 = off_24C335B18;
  v89 = v48;
  v40 = v47;
  v88 = v47;
  v90 = v49;
  *(_QWORD *)this = &off_24C330F50;
  v2 = (std::string *)((char *)this + 8);
  v3 = SHIBYTE(v116.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v116.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v2, v116.__r_.__value_.__l.__data_, v116.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v2->__r_.__value_.__l.__data_ = *(_OWORD *)&v116.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 3) = *((_QWORD *)&v116.__r_.__value_.__l + 2);
  }
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *(_QWORD *)this = off_24C335A60;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  v36 = SHIBYTE(v112.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v112.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v143, v112.__r_.__value_.__l.__data_, v112.__r_.__value_.__l.__size_);
  else
    v143 = v112;
  v142 = off_24C335B18;
  v145 = v114;
  v144 = v37;
  v146 = v115;
  v35 = SHIBYTE(v107.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v138, v107.__r_.__value_.__l.__data_, v107.__r_.__value_.__l.__size_);
  else
    v138 = v107;
  v137 = off_24C335B18;
  v140 = v109;
  v139 = v38;
  v141 = v110;
  v4 = SHIBYTE(v102.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v102.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v133, v102.__r_.__value_.__l.__data_, v102.__r_.__value_.__l.__size_);
  else
    v133 = v102;
  v132 = off_24C335B18;
  v135 = v104;
  v134 = v39;
  v136 = v105;
  v34 = SHIBYTE(v97.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v97.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v128, v97.__r_.__value_.__l.__data_, v97.__r_.__value_.__l.__size_);
  else
    v128 = v97;
  v127 = off_24C335B18;
  v130 = v99;
  v129 = v42;
  v131 = v100;
  v33 = SHIBYTE(v92.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v92.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v123, v92.__r_.__value_.__l.__data_, v92.__r_.__value_.__l.__size_);
  else
    v123 = v92;
  v122 = off_24C335B18;
  v125 = v94;
  v124 = v41;
  v126 = v95;
  v31 = SHIBYTE(v87.__r_.__value_.__r.__words[2]);
  v32 = v3;
  if (SHIBYTE(v87.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v118, v87.__r_.__value_.__l.__data_, v87.__r_.__value_.__l.__size_);
  else
    v118 = v87;
  v117 = off_24C335B18;
  v120 = v89;
  v119 = v40;
  v121 = v90;
  v30 = SHIBYTE(v138.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v168, v138.__r_.__value_.__l.__data_, v138.__r_.__value_.__l.__size_);
  else
    v168 = v138;
  v167 = off_24C335B18;
  v170 = v109;
  v169 = v38;
  v171 = v110;
  v29 = SHIBYTE(v133.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v133.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v163, v133.__r_.__value_.__l.__data_, v133.__r_.__value_.__l.__size_);
  else
    v163 = v133;
  v162 = off_24C335B18;
  v165 = v104;
  v164 = v39;
  v166 = v105;
  v28 = SHIBYTE(v128.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v128.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v158, v128.__r_.__value_.__l.__data_, v128.__r_.__value_.__l.__size_);
  else
    v158 = v128;
  v157 = off_24C335B18;
  v160 = v99;
  v159 = v42;
  v161 = v100;
  v152 = (uint64_t (**)())off_24C335D90;
  v27 = SHIBYTE(v123.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v123.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v153, v123.__r_.__value_.__l.__data_, v123.__r_.__value_.__l.__size_);
  else
    v153 = v123;
  v152 = off_24C335B18;
  v155 = v94;
  v154 = v41;
  v156 = v95;
  v147 = (uint64_t (**)())off_24C335D90;
  v26 = SHIBYTE(v118.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v118.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v148, v118.__r_.__value_.__l.__data_, v118.__r_.__value_.__l.__size_);
  else
    v148 = v118;
  v147 = off_24C335B18;
  v150 = v89;
  v149 = v40;
  v151 = v90;
  v187 = (uint64_t (**)())off_24C335D90;
  v25 = SHIBYTE(v163.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v163.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v188, v163.__r_.__value_.__l.__data_, v163.__r_.__value_.__l.__size_);
  else
    v188 = v163;
  v187 = off_24C335B18;
  v190 = v104;
  v189 = v39;
  v191 = v105;
  v182 = (uint64_t (**)())off_24C335D90;
  v5 = SHIBYTE(v158.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v158.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v183, v158.__r_.__value_.__l.__data_, v158.__r_.__value_.__l.__size_);
  else
    v183 = v158;
  v182 = off_24C335B18;
  v185 = v99;
  v184 = v42;
  v186 = v100;
  v177 = (uint64_t (**)())off_24C335D90;
  v6 = SHIBYTE(v153.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v153.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v178, v153.__r_.__value_.__l.__data_, v153.__r_.__value_.__l.__size_);
  else
    v178 = v153;
  v177 = off_24C335B18;
  v180 = v94;
  v179 = v41;
  v181 = v95;
  v172 = off_24C335D90;
  v24 = SHIBYTE(v148.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v148.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v173, v148.__r_.__value_.__l.__data_, v148.__r_.__value_.__l.__size_);
  else
    v173 = v148;
  v175 = v89;
  v174 = v40;
  v176 = v90;
  v202 = off_24C335D90;
  v23 = SHIBYTE(v183.__r_.__value_.__r.__words[2]);
  v22 = v6;
  if (SHIBYTE(v183.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v203, v183.__r_.__value_.__l.__data_, v183.__r_.__value_.__l.__size_);
  else
    v203 = v183;
  v205 = v99;
  v204 = v42;
  v206 = v100;
  v197 = off_24C335D90;
  v21 = SHIBYTE(v178.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v178.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v198, v178.__r_.__value_.__l.__data_, v178.__r_.__value_.__l.__size_);
  else
    v198 = v178;
  v200 = v94;
  v199 = v41;
  v201 = v95;
  v192 = off_24C335D90;
  v7 = SHIBYTE(v173.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v173.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v193, v173.__r_.__value_.__l.__data_, v173.__r_.__value_.__l.__size_);
  else
    v193 = v173;
  v195 = v89;
  v194 = v40;
  v196 = v90;
  v212 = (uint64_t (**)())off_24C335D90;
  v8 = SHIBYTE(v198.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v198.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v213, v198.__r_.__value_.__l.__data_, v198.__r_.__value_.__l.__size_);
  else
    v213 = v198;
  v212 = off_24C335B18;
  v215 = v94;
  v214 = v41;
  v216 = v95;
  v207 = (uint64_t (**)())off_24C335D90;
  v9 = SHIBYTE(v193.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v193.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v208, v193.__r_.__value_.__l.__data_, v193.__r_.__value_.__l.__size_);
  else
    v208 = v193;
  v207 = off_24C335B18;
  v210 = v89;
  v209 = v40;
  v211 = v90;
  mediaplatform::DatabaseColumnTuple<4ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>>::DatabaseColumnTuple((uint64_t)this + 80, (uint64_t)&v212, (uint64_t)&v207);
  v207 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v208.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v208.__r_.__value_.__l.__data_);
  v212 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v213.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v213.__r_.__value_.__l.__data_);
  *((_QWORD *)this + 22) = off_24C335D90;
  v10 = (std::string *)((char *)this + 184);
  v11 = SHIBYTE(v203.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v203.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v10, v203.__r_.__value_.__l.__data_, v203.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v10->__r_.__value_.__l.__data_ = *(_OWORD *)&v203.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 25) = *((_QWORD *)&v203.__r_.__value_.__l + 2);
  }
  *((_DWORD *)this + 52) = v42;
  *((_QWORD *)this + 22) = off_24C335B18;
  *(_QWORD *)((char *)this + 212) = v99;
  *((_DWORD *)this + 55) = v100;
  v192 = off_24C335D90;
  if (v9 < 0)
    operator delete(v193.__r_.__value_.__l.__data_);
  v197 = off_24C335D90;
  if (v8 < 0)
    operator delete(v198.__r_.__value_.__l.__data_);
  v202 = off_24C335D90;
  if (v11 < 0)
    operator delete(v203.__r_.__value_.__l.__data_);
  *((_QWORD *)this + 28) = off_24C335D90;
  v12 = (std::string *)((char *)this + 232);
  v13 = SHIBYTE(v188.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v188.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v12, v188.__r_.__value_.__l.__data_, v188.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v12->__r_.__value_.__l.__data_ = *(_OWORD *)&v188.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 31) = *((_QWORD *)&v188.__r_.__value_.__l + 2);
  }
  *((_DWORD *)this + 64) = v39;
  *((_QWORD *)this + 28) = off_24C335B18;
  *(_QWORD *)((char *)this + 260) = v190;
  *((_DWORD *)this + 67) = v191;
  v172 = off_24C335D90;
  if (v7 < 0)
    operator delete(v173.__r_.__value_.__l.__data_);
  v177 = (uint64_t (**)())off_24C335D90;
  if (v21 < 0)
    operator delete(v178.__r_.__value_.__l.__data_);
  v182 = (uint64_t (**)())off_24C335D90;
  if (v23 < 0)
    operator delete(v183.__r_.__value_.__l.__data_);
  v187 = (uint64_t (**)())off_24C335D90;
  if (v13 < 0)
    operator delete(v188.__r_.__value_.__l.__data_);
  *((_QWORD *)this + 34) = off_24C335D90;
  v14 = (std::string *)((char *)this + 280);
  v15 = SHIBYTE(v168.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v168.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v14, v168.__r_.__value_.__l.__data_, v168.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v14->__r_.__value_.__l.__data_ = *(_OWORD *)&v168.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 37) = *((_QWORD *)&v168.__r_.__value_.__l + 2);
  }
  *((_DWORD *)this + 76) = v38;
  *((_QWORD *)this + 34) = off_24C335B18;
  *(_QWORD *)((char *)this + 308) = v170;
  *((_DWORD *)this + 79) = v171;
  v147 = (uint64_t (**)())off_24C335D90;
  if (v24 < 0)
    operator delete(v148.__r_.__value_.__l.__data_);
  v152 = (uint64_t (**)())off_24C335D90;
  if (v22 < 0)
    operator delete(v153.__r_.__value_.__l.__data_);
  v157 = (uint64_t (**)())off_24C335D90;
  if (v5 < 0)
    operator delete(v158.__r_.__value_.__l.__data_);
  if (v25 < 0)
  {
    operator delete(v163.__r_.__value_.__l.__data_);
    if ((v15 & 0x80000000) == 0)
      goto LABEL_120;
  }
  else if ((v15 & 0x80000000) == 0)
  {
    goto LABEL_120;
  }
  operator delete(v168.__r_.__value_.__l.__data_);
LABEL_120:
  *((_QWORD *)this + 40) = off_24C335D90;
  v16 = (std::string *)((char *)this + 328);
  v17 = SHIBYTE(v143.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v16, v143.__r_.__value_.__l.__data_, v143.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v16->__r_.__value_.__l.__data_ = *(_OWORD *)&v143.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 43) = *((_QWORD *)&v143.__r_.__value_.__l + 2);
  }
  *((_DWORD *)this + 88) = v37;
  *((_QWORD *)this + 40) = off_24C335B18;
  *(_QWORD *)((char *)this + 356) = v145;
  *((_DWORD *)this + 91) = v146;
  if (v26 < 0)
    operator delete(v118.__r_.__value_.__l.__data_);
  if (v27 < 0)
    operator delete(v123.__r_.__value_.__l.__data_);
  if (v28 < 0)
    operator delete(v128.__r_.__value_.__l.__data_);
  if (v29 < 0)
    operator delete(v133.__r_.__value_.__l.__data_);
  if (v30 < 0)
  {
    operator delete(v138.__r_.__value_.__l.__data_);
    if ((v17 & 0x80000000) == 0)
      goto LABEL_135;
  }
  else if ((v17 & 0x80000000) == 0)
  {
    goto LABEL_135;
  }
  operator delete(v143.__r_.__value_.__l.__data_);
LABEL_135:
  v86 = (uint64_t (**)())off_24C335D90;
  if (v31 < 0)
    operator delete(v87.__r_.__value_.__l.__data_);
  v91 = (uint64_t (**)())off_24C335D90;
  if (v33 < 0)
    operator delete(v92.__r_.__value_.__l.__data_);
  v96 = (uint64_t (**)())off_24C335D90;
  if (v34 < 0)
    operator delete(v97.__r_.__value_.__l.__data_);
  v101 = (uint64_t (**)())off_24C335D90;
  if (v4 < 0)
    operator delete(v102.__r_.__value_.__l.__data_);
  v106 = (uint64_t (**)())off_24C335D90;
  if (v35 < 0)
    operator delete(v107.__r_.__value_.__l.__data_);
  v111 = (uint64_t (**)())off_24C335D90;
  if (v36 < 0)
  {
    operator delete(v112.__r_.__value_.__l.__data_);
    if ((v32 & 0x80000000) == 0)
      goto LABEL_147;
  }
  else if ((v32 & 0x80000000) == 0)
  {
    goto LABEL_147;
  }
  operator delete(v116.__r_.__value_.__l.__data_);
LABEL_147:
  *(_QWORD *)this = off_24C3365C8;
  *((_QWORD *)this + 46) = off_24C335D90;
  if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 376), v81.__r_.__value_.__l.__data_, v81.__r_.__value_.__l.__size_);
  else
    *(std::string *)((char *)this + 376) = v81;
  *((_DWORD *)this + 100) = v82;
  *(_QWORD *)((char *)this + 404) = v83;
  *((_DWORD *)this + 103) = v84;
  *((_QWORD *)this + 46) = off_24C336AC0;
  *((_QWORD *)this + 52) = off_24C335D90;
  if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 424), v74.__r_.__value_.__l.__data_, v74.__r_.__value_.__l.__size_);
  else
    *(std::string *)((char *)this + 424) = v74;
  *((_DWORD *)this + 112) = v75;
  *(_QWORD *)((char *)this + 452) = v76;
  *((_DWORD *)this + 115) = v77;
  *((_QWORD *)this + 52) = off_24C336AC0;
  *((_QWORD *)this + 58) = off_24C335D90;
  if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 472), v67.__r_.__value_.__l.__data_, v67.__r_.__value_.__l.__size_);
  else
    *(std::string *)((char *)this + 472) = v67;
  *((_DWORD *)this + 124) = v68;
  *(_QWORD *)((char *)this + 500) = v69;
  *((_DWORD *)this + 127) = v70;
  *((_QWORD *)this + 58) = off_24C336AC0;
  *((_QWORD *)this + 64) = off_24C335D90;
  if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 520), v60.__r_.__value_.__l.__data_, v60.__r_.__value_.__l.__size_);
  else
    *(std::string *)((char *)this + 520) = v60;
  *((_DWORD *)this + 136) = v61;
  *(_QWORD *)((char *)this + 548) = v62;
  *((_DWORD *)this + 139) = v63;
  *((_QWORD *)this + 64) = off_24C336AC0;
  *((_QWORD *)this + 70) = off_24C335D90;
  if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 568), v53.__r_.__value_.__l.__data_, v53.__r_.__value_.__l.__size_);
  else
    *(std::string *)((char *)this + 568) = v53;
  *((_DWORD *)this + 148) = v54;
  *(_QWORD *)((char *)this + 596) = v55;
  *((_DWORD *)this + 151) = v56;
  *((_QWORD *)this + 70) = off_24C336AC0;
  *((_QWORD *)this + 76) = off_24C335D90;
  v18 = (std::string *)((char *)this + 616);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v18, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v19 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    *((_DWORD *)this + 160) = v47;
    *(_QWORD *)((char *)this + 644) = v48;
    *((_DWORD *)this + 163) = v49;
    *((_QWORD *)this + 76) = off_24C336AC0;
    v45 = off_24C335D90;
    if (v19 < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    *(_OWORD *)&v18->__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 79) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *((_DWORD *)this + 160) = v47;
    *(_QWORD *)((char *)this + 644) = v48;
    *((_DWORD *)this + 163) = v49;
    *((_QWORD *)this + 76) = off_24C336AC0;
    v45 = off_24C335D90;
  }
  if (v44 < 0)
    operator delete(v43[0]);
  v52 = off_24C335D90;
  if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v53.__r_.__value_.__l.__data_);
  if (v51 < 0)
    operator delete(v50[0]);
  v59 = off_24C335D90;
  if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v60.__r_.__value_.__l.__data_);
  if (v58 < 0)
    operator delete(v57[0]);
  v66 = off_24C335D90;
  if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v67.__r_.__value_.__l.__data_);
  if (v65 < 0)
    operator delete(v64[0]);
  v73 = off_24C335D90;
  if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v74.__r_.__value_.__l.__data_);
  if (v72 < 0)
    operator delete(v71[0]);
  v80 = off_24C335D90;
  if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v81.__r_.__value_.__l.__data_);
  if (v79 < 0)
    operator delete(v78[0]);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__s.__r_.__value_.__l.__data_);
  *(_QWORD *)this = off_24C338030;
  return this;
}

void sub_20A871D28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,void *__p,uint64_t a42,int a43,__int16 a44,char a45,char a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  void *a64;
  char a69;
  void *a71;
  char a72;
  void *a73;
  char a74;
  void *a75;
  char a76;
  void *a77;
  char a78;
  uint64_t v78;
  void **v79;
  void **v80;
  void **v81;
  void **v82;
  void **v83;
  uint64_t v84;

  *(_QWORD *)(v78 + 560) = v84;
  if (*(char *)(v78 + 591) < 0)
    operator delete(*v82);
  *(_QWORD *)(v78 + 512) = off_24C335D90;
  if (*(char *)(v78 + 543) < 0)
    operator delete(*v81);
  *(_QWORD *)(v78 + 464) = off_24C335D90;
  if (*(char *)(v78 + 495) < 0)
    operator delete(*v80);
  *(_QWORD *)(v78 + 416) = off_24C335D90;
  if (*(char *)(v78 + 447) < 0)
    operator delete(*v83);
  *(_QWORD *)(v78 + 368) = off_24C335D90;
  if (*(char *)(v78 + 399) < 0)
    operator delete(*v79);
  mediaplatform::DatabaseTable<long long,long long,long long,long long,long long,long long>::~DatabaseTable(v78);
  if (a46 < 0)
    operator delete(__p);
  if (a39 < 0)
    operator delete(a34);
  if (a61 < 0)
    operator delete(a56);
  if (a54 < 0)
    operator delete(a49);
  if (a72 < 0)
    operator delete(a71);
  if (a69 < 0)
    operator delete(a64);
  if (a76 < 0)
    operator delete(a75);
  if (a74 < 0)
    operator delete(a73);
  STACK[0x200] = (unint64_t)off_24C335D90;
  if (SLOBYTE(STACK[0x21F]) < 0)
    operator delete((void *)STACK[0x208]);
  if (a78 < 0)
    operator delete(a77);
  STACK[0x248] = (unint64_t)off_24C335D90;
  if (SLOBYTE(STACK[0x267]) < 0)
    operator delete((void *)STACK[0x250]);
  if (SLOBYTE(STACK[0x247]) < 0)
    operator delete((void *)STACK[0x230]);
  if (SLOBYTE(STACK[0x28F]) < 0)
    operator delete((void *)STACK[0x278]);
  _Unwind_Resume(a1);
}

void sub_20A8722A0()
{
  JUMPOUT(0x20A87219CLL);
}

void sub_20A8722A8()
{
  JUMPOUT(0x20A8721ACLL);
}

void sub_20A8722B0()
{
  JUMPOUT(0x20A8721C8);
}

void sub_20A8722B8()
{
  JUMPOUT(0x20A8721D8);
}

void sub_20A8722C0()
{
  JUMPOUT(0x20A8721F4);
}

void sub_20A8722C8()
{
  JUMPOUT(0x20A872204);
}

void sub_20A8722D0()
{
  JUMPOUT(0x20A872220);
}

void sub_20A8722D8()
{
  JUMPOUT(0x20A872230);
}

void sub_20A8722E0()
{
  JUMPOUT(0x20A87224CLL);
}

void sub_20A8722E8()
{
  JUMPOUT(0x20A87225CLL);
}

void sub_20A8722F0()
{
  JUMPOUT(0x20A872278);
}

void sub_20A8722F8()
{
  JUMPOUT(0x20A872288);
}

void mlcore::ItemSearchTable::~ItemSearchTable(void **this)
{
  *this = off_24C3365C8;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>>::~__tuple_impl((uint64_t)(this + 46));
  *this = off_24C335A60;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>>::~__tuple_impl((uint64_t)(this + 10));
  if (*((char *)this + 79) < 0)
    operator delete(this[7]);
  mediaplatform::DatabaseTableBase::~DatabaseTableBase(this);
}

{
  *this = off_24C3365C8;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>>::~__tuple_impl((uint64_t)(this + 46));
  *this = off_24C335A60;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>>::~__tuple_impl((uint64_t)(this + 10));
  if (*((char *)this + 79) < 0)
    operator delete(this[7]);
  mediaplatform::DatabaseTableBase::~DatabaseTableBase(this);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mediaplatform::DatabaseTable<long long,long long,long long,long long,long long,long long>::columnCount()
{
  return 6;
}

void mediaplatform::DatabaseTable<long long,long long,long long,long long,long long,long long>::columnNames(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 320);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 272);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 224);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 176);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 128);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 80);
}

void sub_20A872444(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void mediaplatform::DatabaseTable<long long,long long,long long,long long,long long,long long>::targetColumnExpression(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __int128 *v3;
  __int128 *v4[3];
  __int128 **v5;

  v3 = (__int128 *)(a1 + 8);
  (*(void (**)(__int128 **__return_ptr))(*(_QWORD *)a1 + 24))(v4);
  std::allocate_shared[abi:ne180100]<mediaplatform::SQLColumnNameExpression,std::allocator<mediaplatform::SQLColumnNameExpression>,std::string &,std::string const&,void>(a2, v4[0], v3);
  v5 = v4;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v5);
}

void sub_20A8724BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void mediaplatform::DatabaseTable<long long,long long,long long,long long,long long,long long>::~DatabaseTable(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C335A60;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>>::~__tuple_impl(a1 + 80);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
}

{
  *(_QWORD *)a1 = off_24C335A60;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>>::~__tuple_impl(a1 + 80);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
  JUMPOUT(0x20BD27AFCLL);
}

{
  *(_QWORD *)a1 = off_24C335A60;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>>::~__tuple_impl(a1 + 80);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
}

void mlcore::MediaTable<long long,long long,long long,long long,long long,long long>::~MediaTable(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C3365C8;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>>::~__tuple_impl(a1 + 368);
  *(_QWORD *)a1 = off_24C335A60;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>>::~__tuple_impl(a1 + 80);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
}

{
  *(_QWORD *)a1 = off_24C3365C8;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>>::~__tuple_impl(a1 + 368);
  *(_QWORD *)a1 = off_24C335A60;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>>::~__tuple_impl(a1 + 80);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
  JUMPOUT(0x20BD27AFCLL);
}

void mlcore::ItemSearchTable::persistentIDColumn(mlcore::ItemSearchTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 399) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 47), *((_QWORD *)this + 48));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 376);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 49);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 100);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 103);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 404);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemSearchTable::searchTitleColumn(mlcore::ItemSearchTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 447) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 53), *((_QWORD *)this + 54));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 424);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 55);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 112);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 115);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 452);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemSearchTable::searchAlbumColumn(mlcore::ItemSearchTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 495) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 59), *((_QWORD *)this + 60));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 472);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 61);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 124);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 127);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 500);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemSearchTable::searchArtistColumn(mlcore::ItemSearchTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 543) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 65), *((_QWORD *)this + 66));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 520);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 67);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 136);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 139);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 548);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemSearchTable::searchComposerColumn(mlcore::ItemSearchTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 591) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 71), *((_QWORD *)this + 72));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 568);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 73);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 148);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 151);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 596);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemSearchTable::searchAlbumArtistColumn(mlcore::ItemSearchTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 639) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 77), *((_QWORD *)this + 78));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 616);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 79);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 160);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 163);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 644);
  *(_QWORD *)a2 = off_24C336AC0;
}

mlcore::GeniusMetadataTable *mlcore::GeniusMetadataTable::GeniusMetadataTable(mlcore::GeniusMetadataTable *this)
{
  void *__p[2];
  char v4;
  _BYTE v5[80];
  void *v6[2];
  char v7;
  _QWORD v8[3];
  char v9;
  void *v10[2];
  char v11;
  _QWORD v12[3];
  char v13;
  void *v14[2];
  char v15;
  _QWORD v16[3];
  char v17;
  void *v18[2];
  char v19;
  _QWORD v20[3];
  char v21;
  void *v22[2];
  char v23;

  std::string::basic_string[abi:ne180100]<0>(v22, "genius_metadata");
  std::string::basic_string[abi:ne180100]<0>(v18, "genius_id");
  mlcore::MediaColumn<long long>::MediaColumn((uint64_t)v20, (uint64_t)v18, 1);
  std::string::basic_string[abi:ne180100]<0>(v14, "revision_level");
  mlcore::MediaColumn<int>::MediaColumn((uint64_t)v16, (uint64_t)v14, 0);
  std::string::basic_string[abi:ne180100]<0>(v10, "version");
  mlcore::MediaColumn<int>::MediaColumn((uint64_t)v12, (uint64_t)v10, 0);
  std::string::basic_string[abi:ne180100]<0>(v6, "checksum");
  mlcore::MediaColumn<int>::MediaColumn((uint64_t)v8, (uint64_t)v6, 0);
  std::string::basic_string[abi:ne180100]<0>(__p, "data");
  mlcore::MediaColumn<mediaplatform::Data>::MediaColumn((uint64_t)v5, (uint64_t)__p);
  mlcore::MediaTable<long long,int,int,int,mediaplatform::Data>::MediaTable((uint64_t)this, (uint64_t)v22, (uint64_t)v20, (uint64_t)v16, (uint64_t)v12, (uint64_t)v8, (uint64_t)v5);
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)v5);
  if (v4 < 0)
    operator delete(__p[0]);
  v8[0] = off_24C335D90;
  if (v9 < 0)
    operator delete((void *)v8[1]);
  if (v7 < 0)
    operator delete(v6[0]);
  v12[0] = off_24C335D90;
  if (v13 < 0)
    operator delete((void *)v12[1]);
  if (v11 < 0)
    operator delete(v10[0]);
  v16[0] = off_24C335D90;
  if (v17 < 0)
    operator delete((void *)v16[1]);
  if (v15 < 0)
    operator delete(v14[0]);
  v20[0] = off_24C335D90;
  if (v21 < 0)
    operator delete((void *)v20[1]);
  if (v19 < 0)
    operator delete(v18[0]);
  if (v23 < 0)
    operator delete(v22[0]);
  *(_QWORD *)this = off_24C339D88;
  return this;
}

void sub_20A872B44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,void (**a31)(mediaplatform::DatabaseColumnBase *__hidden this),void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,void (**a46)(mediaplatform::DatabaseColumnBase *__hidden this),void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  uint64_t v52;

  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)&a15);
  if (a14 < 0)
    operator delete(__p);
  a31 = off_24C335D90;
  if (a37 < 0)
    operator delete(a32);
  if (a30 < 0)
    operator delete(a25);
  a46 = off_24C335D90;
  if (a52 < 0)
    operator delete(a47);
  if (a45 < 0)
    operator delete(a40);
  *(_QWORD *)(v52 - 176) = off_24C335D90;
  if (*(char *)(v52 - 145) < 0)
    operator delete(*(void **)(v52 - 168));
  if (*(char *)(v52 - 177) < 0)
    operator delete(*(void **)(v52 - 200));
  *(_QWORD *)(v52 - 104) = off_24C335D90;
  if (*(char *)(v52 - 73) < 0)
    operator delete(*(void **)(v52 - 96));
  if (*(char *)(v52 - 105) < 0)
    operator delete(*(void **)(v52 - 128));
  if (*(char *)(v52 - 33) < 0)
    operator delete(*(void **)(v52 - 56));
  _Unwind_Resume(a1);
}

void sub_20A872C68()
{
  JUMPOUT(0x20A872C40);
}

void sub_20A872C70()
{
  JUMPOUT(0x20A872C50);
}

void mlcore::GeniusMetadataTable::~GeniusMetadataTable(mlcore::GeniusMetadataTable *this)
{
  *(_QWORD *)this = off_24C336360;
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)this + 544);
  *((_QWORD *)this + 62) = off_24C335D90;
  if (*((char *)this + 527) < 0)
    operator delete(*((void **)this + 63));
  *((_QWORD *)this + 56) = off_24C335D90;
  if (*((char *)this + 479) < 0)
    operator delete(*((void **)this + 57));
  *((_QWORD *)this + 50) = off_24C335D90;
  if (*((char *)this + 431) < 0)
    operator delete(*((void **)this + 51));
  *((_QWORD *)this + 44) = off_24C335D90;
  if (*((char *)this + 383) < 0)
    operator delete(*((void **)this + 45));
  mediaplatform::DatabaseTable<long long,int,int,int,mediaplatform::Data>::~DatabaseTable((uint64_t)this);
}

{
  *(_QWORD *)this = off_24C336360;
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)this + 544);
  *((_QWORD *)this + 62) = off_24C335D90;
  if (*((char *)this + 527) < 0)
    operator delete(*((void **)this + 63));
  *((_QWORD *)this + 56) = off_24C335D90;
  if (*((char *)this + 479) < 0)
    operator delete(*((void **)this + 57));
  *((_QWORD *)this + 50) = off_24C335D90;
  if (*((char *)this + 431) < 0)
    operator delete(*((void **)this + 51));
  *((_QWORD *)this + 44) = off_24C335D90;
  if (*((char *)this + 383) < 0)
    operator delete(*((void **)this + 45));
  mediaplatform::DatabaseTable<long long,int,int,int,mediaplatform::Data>::~DatabaseTable((uint64_t)this);
  JUMPOUT(0x20BD27AFCLL);
}

void mlcore::GeniusMetadataTable::persistentIDColumn(mlcore::GeniusMetadataTable *this@<X0>, uint64_t a2@<X8>)
{
  mlcore::MediaTable<long long,int,int,int,mediaplatform::Data>::mediaColumnAtIndex<0ul>(a2, (uint64_t)this);
}

void mlcore::GeniusMetadataTable::revisionLevelColumn(mlcore::GeniusMetadataTable *this@<X0>, uint64_t a2@<X8>)
{
  mlcore::MediaTable<long long,int,int,int,mediaplatform::Data>::mediaColumnAtIndex<1ul>(a2, (uint64_t)this);
}

void mlcore::GeniusMetadataTable::versionColumn(mlcore::GeniusMetadataTable *this@<X0>, uint64_t a2@<X8>)
{
  mlcore::MediaTable<long long,int,int,int,mediaplatform::Data>::mediaColumnAtIndex<2ul>(a2, (uint64_t)this);
}

void mlcore::GeniusMetadataTable::checksumColumn(mlcore::GeniusMetadataTable *this@<X0>, uint64_t a2@<X8>)
{
  mlcore::MediaTable<long long,int,int,int,mediaplatform::Data>::mediaColumnAtIndex<3ul>(a2, (uint64_t)this);
}

mediaplatform::Data *mlcore::GeniusMetadataTable::dataColumn@<X0>(mlcore::GeniusMetadataTable *this@<X0>, uint64_t a2@<X8>)
{
  return mlcore::MediaTable<long long,int,int,int,mediaplatform::Data>::mediaColumnAtIndex<4ul>(a2, (uint64_t)this);
}

uint64_t mlcore::MediaTable<long long,long long,long long,long long,long long,long long,long long,long long,std::string,long long,std::string,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,std::string,std::string,std::string,std::string,std::string,long long,long long,std::string,long long,long long,std::string,std::string,long long,long long,long long,int,std::string,std::string,long long,long long,long long,long long,int,int,std::string,long long,std::string,long long,long long,long long,long long,std::string>::MediaTable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  uint64_t v91;
  int v92;
  int v93;
  uint64_t v94;
  int v95;
  int v96;
  uint64_t v97;
  int v98;
  int v99;
  int v100;
  int v101;
  uint64_t v102;
  int v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  int v109;
  int v110;
  int v111;
  uint64_t v112;
  int v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  int v118;
  int v119;
  int v120;
  uint64_t v121;
  int v122;
  int v123;
  int v124;
  int v125;
  uint64_t v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  int v144;
  uint64_t v145;
  int v146;
  int v147;
  uint64_t v148;
  int v149;
  int v150;
  uint64_t v151;
  int v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t *v159;
  int v160;
  uint64_t v161;
  int v162;
  uint64_t v163;
  int v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t *v167;
  int v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t *v171;
  int v172;
  uint64_t v173;
  int v174;
  int v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t *v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  uint64_t v185;
  uint64_t v186;
  std::string *v187;
  uint64_t v188;
  __int128 v189;
  uint64_t v190;
  std::string *v191;
  uint64_t v192;
  __int128 v193;
  uint64_t v194;
  std::string *v195;
  __int128 v196;
  uint64_t v197;
  __int128 v198;
  std::string *v199;
  __int128 v200;
  uint64_t v201;
  __int128 v202;
  uint64_t v203;
  uint64_t v204;
  __int128 v205;
  uint64_t v206;
  __int128 v207;
  std::string *v208;
  uint64_t v209;
  __int128 v210;
  std::string *v211;
  __int128 v212;
  uint64_t v213;
  uint64_t v214;
  __int128 v215;
  uint64_t v216;
  std::string *v217;
  uint64_t v218;
  __int128 v219;
  uint64_t v220;
  __int128 *v221;
  __int128 v222;
  std::string *v223;
  __int128 v224;
  __int128 v225;
  std::string *v226;
  __int128 v227;
  __int128 v228;
  uint64_t v229;
  __int128 v230;
  uint64_t v231;
  uint64_t v232;
  __int128 v233;
  uint64_t v234;
  uint64_t v235;
  __int128 v236;
  uint64_t v237;
  __int128 v238;
  std::string *v239;
  __int128 v240;
  uint64_t v241;
  __int128 v242;
  uint64_t v243;
  uint64_t v244;
  __int128 v245;
  uint64_t v246;
  __int128 v247;
  std::string *v248;
  __int128 v249;
  uint64_t *v251;
  uint64_t *v252;
  uint64_t *v253;
  uint64_t *v254;
  uint64_t *v255;
  uint64_t *v256;
  uint64_t v257;
  uint64_t *v258;
  uint64_t *v259;
  uint64_t v260;
  uint64_t *v261;
  uint64_t v262;
  uint64_t *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t (**v269)();
  std::string v270;
  int v271;
  char v272;
  std::string v273;
  uint64_t (**v274)();
  std::string __p;
  int v276;
  uint64_t v277;
  int v278;
  uint64_t (**v279)();
  std::string v280;
  int v281;
  uint64_t v282;
  int v283;
  uint64_t (**v284)();
  std::string v285;
  int v286;
  uint64_t v287;
  int v288;
  uint64_t (**v289)();
  std::string v290;
  int v291;
  uint64_t v292;
  int v293;
  uint64_t (**v294)();
  std::string v295;
  int v296;
  char v297;
  std::string v298;
  uint64_t (**v299)();
  std::string v300;
  int v301;
  uint64_t v302;
  int v303;
  uint64_t (**v304)();
  std::string v305;
  int v306;
  char v307;
  std::string v308;
  uint64_t (**v309)();
  std::string v310;
  int v311;
  uint64_t v312;
  uint64_t (**v313)();
  std::string v314;
  int v315;
  uint64_t v316;
  uint64_t (**v317)();
  std::string v318;
  int v319;
  uint64_t v320;
  int v321;
  uint64_t (**v322)();
  std::string v323;
  int v324;
  uint64_t v325;
  int v326;
  uint64_t (**v327)();
  std::string v328;
  int v329;
  uint64_t v330;
  int v331;
  uint64_t (**v332)();
  std::string v333;
  int v334;
  uint64_t v335;
  int v336;
  uint64_t (**v337)();
  std::string v338;
  int v339;
  char v340;
  std::string v341;
  uint64_t (**v342)();
  std::string v343;
  int v344;
  char v345;
  std::string v346;
  uint64_t (**v347)();
  std::string v348;
  int v349;
  uint64_t v350;
  uint64_t (**v351)();
  std::string v352;
  int v353;
  uint64_t v354;
  int v355;
  uint64_t (**v356)();
  std::string v357;
  int v358;
  uint64_t v359;
  int v360;
  uint64_t (**v361)();
  std::string v362;
  int v363;
  uint64_t v364;
  int v365;
  uint64_t (**v366)();
  std::string v367;
  int v368;
  char v369;
  std::string v370;
  uint64_t (**v371)();
  std::string v372;
  int v373;
  char v374;
  std::string v375;
  uint64_t (**v376)();
  std::string v377;
  int v378;
  uint64_t v379;
  int v380;
  uint64_t (**v381)();
  std::string v382;
  int v383;
  uint64_t v384;
  int v385;
  uint64_t (**v386)();
  std::string v387;
  int v388;
  char v389;
  std::string v390;
  uint64_t (**v391)();
  std::string v392;
  int v393;
  uint64_t v394;
  int v395;
  uint64_t (**v396)();
  std::string v397;
  int v398;
  uint64_t v399;
  int v400;
  uint64_t (**v401)();
  std::string v402;
  int v403;
  char v404;
  std::string v405;
  uint64_t (**v406)();
  std::string v407;
  int v408;
  char v409;
  std::string v410;
  uint64_t (**v411)();
  std::string v412;
  int v413;
  char v414;
  std::string v415;
  uint64_t (**v416)();
  std::string v417;
  int v418;
  char v419;
  std::string v420;
  uint64_t (**v421)();
  std::string v422;
  int v423;
  char v424;
  std::string v425;
  uint64_t (**v426)();
  std::string v427;
  int v428;
  uint64_t v429;
  int v430;
  uint64_t (**v431)();
  std::string v432;
  int v433;
  uint64_t v434;
  int v435;
  uint64_t (**v436)();
  std::string v437;
  int v438;
  uint64_t v439;
  int v440;
  uint64_t (**v441)();
  std::string v442;
  int v443;
  uint64_t v444;
  int v445;
  uint64_t (**v446)();
  std::string v447;
  int v448;
  uint64_t v449;
  int v450;
  uint64_t (**v451)();
  std::string v452;
  int v453;
  uint64_t v454;
  int v455;
  uint64_t (**v456)();
  std::string v457;
  int v458;
  uint64_t v459;
  int v460;
  uint64_t (**v461)();
  std::string v462;
  int v463;
  uint64_t v464;
  int v465;
  uint64_t (**v466)();
  std::string v467;
  int v468;
  uint64_t v469;
  int v470;
  uint64_t (**v471)();
  std::string v472;
  int v473;
  uint64_t v474;
  int v475;
  uint64_t (**v476)();
  std::string v477;
  int v478;
  uint64_t v479;
  int v480;
  uint64_t (**v481)();
  std::string v482;
  int v483;
  uint64_t v484;
  int v485;
  uint64_t (**v486)();
  std::string v487;
  int v488;
  uint64_t v489;
  int v490;
  uint64_t (**v491)();
  std::string v492;
  int v493;
  uint64_t v494;
  int v495;
  uint64_t (**v496)();
  std::string v497;
  int v498;
  uint64_t v499;
  int v500;
  uint64_t (**v501)();
  std::string v502;
  int v503;
  char v504;
  std::string v505;
  uint64_t (**v506)();
  std::string v507;
  int v508;
  uint64_t v509;
  int v510;
  uint64_t (**v511)();
  std::string v512;
  int v513;
  char v514;
  std::string v515;
  uint64_t (**v516)();
  std::string v517;
  int v518;
  uint64_t v519;
  int v520;
  uint64_t (**v521)();
  std::string v522;
  int v523;
  uint64_t v524;
  int v525;
  uint64_t (**v526)();
  std::string v527;
  int v528;
  uint64_t v529;
  int v530;
  uint64_t (**v531)();
  std::string v532;
  int v533;
  uint64_t v534;
  int v535;
  uint64_t (**v536)();
  std::string v537;
  int v538;
  uint64_t v539;
  int v540;
  uint64_t (**v541)();
  std::string v542;
  int v543;
  uint64_t v544;
  int v545;
  uint64_t (**v546)();
  std::string v547;
  int v548;
  uint64_t v549;
  int v550;
  uint64_t (**v551)();
  std::string v552;
  int v553;
  uint64_t v554;
  int v555;
  std::string v556;

  v60 = MEMORY[0x24BDAC7A8](a1);
  v63 = v62;
  v65 = v64;
  v67 = v66;
  v69 = v68;
  v71 = v70;
  v73 = v72;
  v74 = v60;
  if (*(char *)(v61 + 23) < 0)
    std::string::__init_copy_ctor_external(&v556, *(const std::string::value_type **)v61, *(_QWORD *)(v61 + 8));
  else
    v556 = *(std::string *)v61;
  if (*(char *)(v73 + 31) < 0)
    std::string::__init_copy_ctor_external(&v552, *(const std::string::value_type **)(v73 + 8), *(_QWORD *)(v73 + 16));
  else
    v552 = *(std::string *)(v73 + 8);
  v75 = *(_DWORD *)(v73 + 32);
  v551 = off_24C335B18;
  v554 = *(_QWORD *)(v73 + 36);
  v76 = *(_DWORD *)(v73 + 44);
  v553 = v75;
  v555 = v76;
  if (*(char *)(v71 + 31) < 0)
    std::string::__init_copy_ctor_external(&v547, *(const std::string::value_type **)(v71 + 8), *(_QWORD *)(v71 + 16));
  else
    v547 = *(std::string *)(v71 + 8);
  v77 = *(_DWORD *)(v71 + 32);
  v546 = off_24C335B18;
  v549 = *(_QWORD *)(v71 + 36);
  v78 = *(_DWORD *)(v71 + 44);
  v548 = v77;
  v550 = v78;
  if (*(char *)(v69 + 31) < 0)
    std::string::__init_copy_ctor_external(&v542, *(const std::string::value_type **)(v69 + 8), *(_QWORD *)(v69 + 16));
  else
    v542 = *(std::string *)(v69 + 8);
  v79 = *(_DWORD *)(v69 + 32);
  v541 = off_24C335B18;
  v544 = *(_QWORD *)(v69 + 36);
  v80 = *(_DWORD *)(v69 + 44);
  v543 = v79;
  v545 = v80;
  if (*(char *)(v67 + 31) < 0)
    std::string::__init_copy_ctor_external(&v537, *(const std::string::value_type **)(v67 + 8), *(_QWORD *)(v67 + 16));
  else
    v537 = *(std::string *)(v67 + 8);
  v81 = *(_DWORD *)(v67 + 32);
  v536 = off_24C335B18;
  v539 = *(_QWORD *)(v67 + 36);
  v82 = *(_DWORD *)(v67 + 44);
  v538 = v81;
  v540 = v82;
  if (*(char *)(v65 + 31) < 0)
    std::string::__init_copy_ctor_external(&v532, *(const std::string::value_type **)(v65 + 8), *(_QWORD *)(v65 + 16));
  else
    v532 = *(std::string *)(v65 + 8);
  v83 = *(_DWORD *)(v65 + 32);
  v531 = off_24C335B18;
  v534 = *(_QWORD *)(v65 + 36);
  v84 = *(_DWORD *)(v65 + 44);
  v533 = v83;
  v535 = v84;
  if (*(char *)(v63 + 31) < 0)
    std::string::__init_copy_ctor_external(&v527, *(const std::string::value_type **)(v63 + 8), *(_QWORD *)(v63 + 16));
  else
    v527 = *(std::string *)(v63 + 8);
  v85 = *(_DWORD *)(v63 + 32);
  v526 = off_24C335B18;
  v529 = *(_QWORD *)(v63 + 36);
  v86 = *(_DWORD *)(v63 + 44);
  v528 = v85;
  v530 = v86;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v522, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v522 = *(std::string *)(a9 + 8);
  v87 = *(_DWORD *)(a9 + 32);
  v521 = off_24C335B18;
  v524 = *(_QWORD *)(a9 + 36);
  v88 = *(_DWORD *)(a9 + 44);
  v523 = v87;
  v525 = v88;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v517, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v517 = *(std::string *)(a10 + 8);
  v89 = *(_DWORD *)(a10 + 32);
  v516 = off_24C335B18;
  v519 = *(_QWORD *)(a10 + 36);
  v90 = *(_DWORD *)(a10 + 44);
  v518 = v89;
  v520 = v90;
  v511 = (uint64_t (**)())off_24C335D90;
  v268 = v73;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v512, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v512 = *(std::string *)(a11 + 8);
  v513 = *(_DWORD *)(a11 + 32);
  v511 = &off_24C335AB8;
  v514 = *(_BYTE *)(a11 + 36);
  if (*(char *)(a11 + 63) < 0)
    std::string::__init_copy_ctor_external(&v515, *(const std::string::value_type **)(a11 + 40), *(_QWORD *)(a11 + 48));
  else
    v515 = *(std::string *)(a11 + 40);
  v91 = a12;
  if (*(char *)(a12 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v507, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
    v91 = a12;
  }
  else
  {
    v507 = *(std::string *)(a12 + 8);
  }
  v92 = *(_DWORD *)(v91 + 32);
  v506 = off_24C335B18;
  v509 = *(_QWORD *)(v91 + 36);
  v267 = v91;
  v93 = *(_DWORD *)(v91 + 44);
  v508 = v92;
  v510 = v93;
  v501 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v502, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v502 = *(std::string *)(a13 + 8);
  v503 = *(_DWORD *)(a13 + 32);
  v501 = &off_24C335AB8;
  v504 = *(_BYTE *)(a13 + 36);
  if (*(char *)(a13 + 63) < 0)
    std::string::__init_copy_ctor_external(&v505, *(const std::string::value_type **)(a13 + 40), *(_QWORD *)(a13 + 48));
  else
    v505 = *(std::string *)(a13 + 40);
  v94 = a14;
  if (*(char *)(a14 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v497, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
    v94 = a14;
  }
  else
  {
    v497 = *(std::string *)(a14 + 8);
  }
  v95 = *(_DWORD *)(v94 + 32);
  v496 = off_24C335B18;
  v499 = *(_QWORD *)(v94 + 36);
  v266 = v94;
  v96 = *(_DWORD *)(v94 + 44);
  v498 = v95;
  v500 = v96;
  v97 = a15;
  if (*(char *)(a15 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v492, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
    v97 = a15;
  }
  else
  {
    v492 = *(std::string *)(a15 + 8);
  }
  v98 = *(_DWORD *)(v97 + 32);
  v491 = off_24C335B18;
  v494 = *(_QWORD *)(v97 + 36);
  v265 = v97;
  v99 = *(_DWORD *)(v97 + 44);
  v493 = v98;
  v495 = v99;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v487, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v487 = *(std::string *)(a16 + 8);
  v100 = *(_DWORD *)(a16 + 32);
  v486 = off_24C335B18;
  v489 = *(_QWORD *)(a16 + 36);
  v101 = *(_DWORD *)(a16 + 44);
  v488 = v100;
  v490 = v101;
  v102 = a17;
  if (*(char *)(a17 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v482, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
    v102 = a17;
  }
  else
  {
    v482 = *(std::string *)(a17 + 8);
  }
  v103 = *(_DWORD *)(v102 + 32);
  v481 = off_24C335B18;
  v484 = *(_QWORD *)(v102 + 36);
  v264 = v102;
  v104 = *(_DWORD *)(v102 + 44);
  v483 = v103;
  v485 = v104;
  v105 = a18;
  if (*(char *)(a18 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v477, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
    v105 = a18;
  }
  else
  {
    v477 = *(std::string *)(a18 + 8);
  }
  v106 = a19;
  v108 = (uint64_t *)(v105 + 36);
  v107 = *(_QWORD *)(v105 + 36);
  v109 = *(_DWORD *)(v105 + 32);
  v476 = off_24C335B18;
  v479 = v107;
  v263 = v108;
  LODWORD(v107) = *((_DWORD *)v108 + 2);
  v478 = v109;
  v480 = v107;
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v472, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v472 = *(std::string *)(a19 + 8);
  v110 = *(_DWORD *)(a19 + 32);
  v471 = off_24C335B18;
  v474 = *(_QWORD *)(a19 + 36);
  v111 = *(_DWORD *)(a19 + 44);
  v473 = v110;
  v475 = v111;
  v112 = a20;
  if (*(char *)(a20 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v467, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
    v112 = a20;
    v106 = a19;
  }
  else
  {
    v467 = *(std::string *)(a20 + 8);
  }
  v113 = *(_DWORD *)(v112 + 32);
  v466 = off_24C335B18;
  v469 = *(_QWORD *)(v112 + 36);
  v262 = v112;
  v114 = *(_DWORD *)(v112 + 44);
  v468 = v113;
  v470 = v114;
  v115 = a21;
  if (*(char *)(a21 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v462, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
    v115 = a21;
  }
  else
  {
    v462 = *(std::string *)(a21 + 8);
  }
  v117 = (uint64_t *)(v115 + 36);
  v116 = *(_QWORD *)(v115 + 36);
  v118 = *(_DWORD *)(v115 + 32);
  v461 = off_24C335B18;
  v464 = v116;
  v261 = v117;
  LODWORD(v116) = *((_DWORD *)v117 + 2);
  v463 = v118;
  v465 = v116;
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v457, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v457 = *(std::string *)(a22 + 8);
  v119 = *(_DWORD *)(a22 + 32);
  v456 = off_24C335B18;
  v459 = *(_QWORD *)(a22 + 36);
  v120 = *(_DWORD *)(a22 + 44);
  v458 = v119;
  v460 = v120;
  v121 = a23;
  if (*(char *)(a23 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v452, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
    v121 = a23;
  }
  else
  {
    v452 = *(std::string *)(a23 + 8);
  }
  v122 = *(_DWORD *)(v121 + 32);
  v451 = off_24C335B18;
  v454 = *(_QWORD *)(v121 + 36);
  v260 = v121;
  v123 = *(_DWORD *)(v121 + 44);
  v453 = v122;
  v455 = v123;
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v447, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v447 = *(std::string *)(a24 + 8);
  v124 = *(_DWORD *)(a24 + 32);
  v446 = off_24C335B18;
  v449 = *(_QWORD *)(a24 + 36);
  v125 = *(_DWORD *)(a24 + 44);
  v448 = v124;
  v450 = v125;
  if (*(char *)(a25 + 31) < 0)
    std::string::__init_copy_ctor_external(&v442, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  else
    v442 = *(std::string *)(a25 + 8);
  v126 = *(_QWORD *)(a25 + 36);
  v127 = *(_DWORD *)(a25 + 32);
  v441 = off_24C335B18;
  v444 = v126;
  LODWORD(v126) = *(_DWORD *)(a25 + 44);
  v443 = v127;
  v445 = v126;
  if (*(char *)(a26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v437, *(const std::string::value_type **)(a26 + 8), *(_QWORD *)(a26 + 16));
  else
    v437 = *(std::string *)(a26 + 8);
  v128 = *(_DWORD *)(a26 + 32);
  v436 = off_24C335B18;
  v439 = *(_QWORD *)(a26 + 36);
  v129 = *(_DWORD *)(a26 + 44);
  v438 = v128;
  v440 = v129;
  if (*(char *)(a27 + 31) < 0)
    std::string::__init_copy_ctor_external(&v432, *(const std::string::value_type **)(a27 + 8), *(_QWORD *)(a27 + 16));
  else
    v432 = *(std::string *)(a27 + 8);
  v130 = *(_DWORD *)(a27 + 32);
  v431 = off_24C335B18;
  v434 = *(_QWORD *)(a27 + 36);
  v131 = *(_DWORD *)(a27 + 44);
  v433 = v130;
  v435 = v131;
  if (*(char *)(a28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v427, *(const std::string::value_type **)(a28 + 8), *(_QWORD *)(a28 + 16));
  else
    v427 = *(std::string *)(a28 + 8);
  v132 = *(_DWORD *)(a28 + 32);
  v426 = off_24C335B18;
  v429 = *(_QWORD *)(a28 + 36);
  v133 = *(_DWORD *)(a28 + 44);
  v428 = v132;
  v430 = v133;
  v421 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a29 + 31) < 0)
    std::string::__init_copy_ctor_external(&v422, *(const std::string::value_type **)(a29 + 8), *(_QWORD *)(a29 + 16));
  else
    v422 = *(std::string *)(a29 + 8);
  v423 = *(_DWORD *)(a29 + 32);
  v421 = &off_24C335AB8;
  v424 = *(_BYTE *)(a29 + 36);
  if (*(char *)(a29 + 63) < 0)
    std::string::__init_copy_ctor_external(&v425, *(const std::string::value_type **)(a29 + 40), *(_QWORD *)(a29 + 48));
  else
    v425 = *(std::string *)(a29 + 40);
  v416 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v417, *(const std::string::value_type **)(a30 + 8), *(_QWORD *)(a30 + 16));
  else
    v417 = *(std::string *)(a30 + 8);
  v418 = *(_DWORD *)(a30 + 32);
  v416 = &off_24C335AB8;
  v419 = *(_BYTE *)(a30 + 36);
  if (*(char *)(a30 + 63) < 0)
    std::string::__init_copy_ctor_external(&v420, *(const std::string::value_type **)(a30 + 40), *(_QWORD *)(a30 + 48));
  else
    v420 = *(std::string *)(a30 + 40);
  v134 = a31;
  v411 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a31 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v412, *(const std::string::value_type **)(a31 + 8), *(_QWORD *)(a31 + 16));
    v134 = a31;
  }
  else
  {
    v412 = *(std::string *)(a31 + 8);
  }
  v413 = *(_DWORD *)(v134 + 32);
  v411 = &off_24C335AB8;
  v414 = *(_BYTE *)(v134 + 36);
  if (*(char *)(v134 + 63) < 0)
    std::string::__init_copy_ctor_external(&v415, *(const std::string::value_type **)(v134 + 40), *(_QWORD *)(v134 + 48));
  else
    v415 = *(std::string *)(v134 + 40);
  v135 = a32;
  v406 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a32 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v407, *(const std::string::value_type **)(a32 + 8), *(_QWORD *)(a32 + 16));
    v135 = a32;
  }
  else
  {
    v407 = *(std::string *)(a32 + 8);
  }
  v408 = *(_DWORD *)(v135 + 32);
  v406 = &off_24C335AB8;
  v409 = *(_BYTE *)(v135 + 36);
  if (*(char *)(v135 + 63) < 0)
    std::string::__init_copy_ctor_external(&v410, *(const std::string::value_type **)(v135 + 40), *(_QWORD *)(v135 + 48));
  else
    v410 = *(std::string *)(v135 + 40);
  v136 = a33;
  v401 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a33 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v402, *(const std::string::value_type **)(a33 + 8), *(_QWORD *)(a33 + 16));
    v136 = a33;
  }
  else
  {
    v402 = *(std::string *)(a33 + 8);
  }
  v403 = *(_DWORD *)(v136 + 32);
  v401 = &off_24C335AB8;
  v404 = *(_BYTE *)(v136 + 36);
  if (*(char *)(v136 + 63) < 0)
    std::string::__init_copy_ctor_external(&v405, *(const std::string::value_type **)(v136 + 40), *(_QWORD *)(v136 + 48));
  else
    v405 = *(std::string *)(v136 + 40);
  v137 = a34;
  if (*(char *)(a34 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v397, *(const std::string::value_type **)(a34 + 8), *(_QWORD *)(a34 + 16));
    v137 = a34;
  }
  else
  {
    v397 = *(std::string *)(a34 + 8);
  }
  v139 = (uint64_t *)(v137 + 36);
  v138 = *(_QWORD *)(v137 + 36);
  v140 = *(_DWORD *)(v137 + 32);
  v396 = off_24C335B18;
  v399 = v138;
  v259 = v139;
  LODWORD(v138) = *((_DWORD *)v139 + 2);
  v398 = v140;
  v141 = a35;
  v400 = v138;
  v391 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a35 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v392, *(const std::string::value_type **)(a35 + 8), *(_QWORD *)(a35 + 16));
    v141 = a35;
  }
  else
  {
    v392 = *(std::string *)(a35 + 8);
  }
  v143 = (uint64_t *)(v141 + 36);
  v142 = *(_QWORD *)(v141 + 36);
  v144 = *(_DWORD *)(v141 + 32);
  v391 = off_24C335B18;
  v394 = v142;
  v258 = v143;
  LODWORD(v142) = *((_DWORD *)v143 + 2);
  v393 = v144;
  v395 = v142;
  v386 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a36 + 31) < 0)
    std::string::__init_copy_ctor_external(&v387, *(const std::string::value_type **)(a36 + 8), *(_QWORD *)(a36 + 16));
  else
    v387 = *(std::string *)(a36 + 8);
  v388 = *(_DWORD *)(a36 + 32);
  v386 = &off_24C335AB8;
  v389 = *(_BYTE *)(a36 + 36);
  if (*(char *)(a36 + 63) < 0)
    std::string::__init_copy_ctor_external(&v390, *(const std::string::value_type **)(a36 + 40), *(_QWORD *)(a36 + 48));
  else
    v390 = *(std::string *)(a36 + 40);
  v145 = a37;
  v381 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a37 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v382, *(const std::string::value_type **)(a37 + 8), *(_QWORD *)(a37 + 16));
    v145 = a37;
  }
  else
  {
    v382 = *(std::string *)(a37 + 8);
  }
  v146 = *(_DWORD *)(v145 + 32);
  v381 = off_24C335B18;
  v384 = *(_QWORD *)(v145 + 36);
  v147 = *(_DWORD *)(v145 + 44);
  v383 = v146;
  v385 = v147;
  v148 = a38;
  v376 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a38 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v377, *(const std::string::value_type **)(a38 + 8), *(_QWORD *)(a38 + 16));
    v148 = a38;
  }
  else
  {
    v377 = *(std::string *)(a38 + 8);
  }
  v149 = *(_DWORD *)(v148 + 32);
  v376 = off_24C335B18;
  v379 = *(_QWORD *)(v148 + 36);
  v257 = v148;
  v150 = *(_DWORD *)(v148 + 44);
  v378 = v149;
  v380 = v150;
  v371 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a39 + 31) < 0)
    std::string::__init_copy_ctor_external(&v372, *(const std::string::value_type **)(a39 + 8), *(_QWORD *)(a39 + 16));
  else
    v372 = *(std::string *)(a39 + 8);
  v373 = *(_DWORD *)(a39 + 32);
  v371 = &off_24C335AB8;
  v374 = *(_BYTE *)(a39 + 36);
  if (*(char *)(a39 + 63) < 0)
    std::string::__init_copy_ctor_external(&v375, *(const std::string::value_type **)(a39 + 40), *(_QWORD *)(a39 + 48));
  else
    v375 = *(std::string *)(a39 + 40);
  v366 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a40 + 31) < 0)
    std::string::__init_copy_ctor_external(&v367, *(const std::string::value_type **)(a40 + 8), *(_QWORD *)(a40 + 16));
  else
    v367 = *(std::string *)(a40 + 8);
  v368 = *(_DWORD *)(a40 + 32);
  v366 = &off_24C335AB8;
  v369 = *(_BYTE *)(a40 + 36);
  if (*(char *)(a40 + 63) < 0)
    std::string::__init_copy_ctor_external(&v370, *(const std::string::value_type **)(a40 + 40), *(_QWORD *)(a40 + 48));
  else
    v370 = *(std::string *)(a40 + 40);
  v361 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a41 + 31) < 0)
    std::string::__init_copy_ctor_external(&v362, *(const std::string::value_type **)(a41 + 8), *(_QWORD *)(a41 + 16));
  else
    v362 = *(std::string *)(a41 + 8);
  v151 = *(_QWORD *)(a41 + 36);
  v152 = *(_DWORD *)(a41 + 32);
  v361 = off_24C335B18;
  v364 = v151;
  LODWORD(v151) = *(_DWORD *)(a41 + 44);
  v363 = v152;
  v153 = a42;
  v365 = v151;
  v356 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a42 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v357, *(const std::string::value_type **)(a42 + 8), *(_QWORD *)(a42 + 16));
    v153 = a42;
  }
  else
  {
    v357 = *(std::string *)(a42 + 8);
  }
  v155 = (uint64_t *)(v153 + 36);
  v154 = *(_QWORD *)(v153 + 36);
  v156 = *(_DWORD *)(v153 + 32);
  v356 = off_24C335B18;
  v359 = v154;
  v256 = v155;
  LODWORD(v154) = *((_DWORD *)v155 + 2);
  v358 = v156;
  v157 = a43;
  v360 = v154;
  v351 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a43 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v352, *(const std::string::value_type **)(a43 + 8), *(_QWORD *)(a43 + 16));
    v157 = a43;
  }
  else
  {
    v352 = *(std::string *)(a43 + 8);
  }
  v159 = (uint64_t *)(v157 + 36);
  v158 = *(_QWORD *)(v157 + 36);
  v160 = *(_DWORD *)(v157 + 32);
  v351 = off_24C335B18;
  v354 = v158;
  v255 = v159;
  LODWORD(v158) = *((_DWORD *)v159 + 2);
  v353 = v160;
  v355 = v158;
  v347 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a44 + 31) < 0)
    std::string::__init_copy_ctor_external(&v348, *(const std::string::value_type **)(a44 + 8), *(_QWORD *)(a44 + 16));
  else
    v348 = *(std::string *)(a44 + 8);
  v349 = *(_DWORD *)(a44 + 32);
  v347 = off_24C335AF8;
  v350 = *(_QWORD *)(a44 + 36);
  v342 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a45 + 31) < 0)
    std::string::__init_copy_ctor_external(&v343, *(const std::string::value_type **)(a45 + 8), *(_QWORD *)(a45 + 16));
  else
    v343 = *(std::string *)(a45 + 8);
  v344 = *(_DWORD *)(a45 + 32);
  v342 = &off_24C335AB8;
  v345 = *(_BYTE *)(a45 + 36);
  if (*(char *)(a45 + 63) < 0)
    std::string::__init_copy_ctor_external(&v346, *(const std::string::value_type **)(a45 + 40), *(_QWORD *)(a45 + 48));
  else
    v346 = *(std::string *)(a45 + 40);
  v337 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a46 + 31) < 0)
    std::string::__init_copy_ctor_external(&v338, *(const std::string::value_type **)(a46 + 8), *(_QWORD *)(a46 + 16));
  else
    v338 = *(std::string *)(a46 + 8);
  v339 = *(_DWORD *)(a46 + 32);
  v337 = &off_24C335AB8;
  v340 = *(_BYTE *)(a46 + 36);
  if (*(char *)(a46 + 63) < 0)
    std::string::__init_copy_ctor_external(&v341, *(const std::string::value_type **)(a46 + 40), *(_QWORD *)(a46 + 48));
  else
    v341 = *(std::string *)(a46 + 40);
  v332 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a47 + 31) < 0)
    std::string::__init_copy_ctor_external(&v333, *(const std::string::value_type **)(a47 + 8), *(_QWORD *)(a47 + 16));
  else
    v333 = *(std::string *)(a47 + 8);
  v161 = *(_QWORD *)(a47 + 36);
  v162 = *(_DWORD *)(a47 + 32);
  v332 = off_24C335B18;
  v335 = v161;
  LODWORD(v161) = *(_DWORD *)(a47 + 44);
  v334 = v162;
  v336 = v161;
  v327 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a48 + 31) < 0)
    std::string::__init_copy_ctor_external(&v328, *(const std::string::value_type **)(a48 + 8), *(_QWORD *)(a48 + 16));
  else
    v328 = *(std::string *)(a48 + 8);
  v163 = *(_QWORD *)(a48 + 36);
  v164 = *(_DWORD *)(a48 + 32);
  v327 = off_24C335B18;
  v330 = v163;
  LODWORD(v163) = *(_DWORD *)(a48 + 44);
  v329 = v164;
  v165 = a49;
  v331 = v163;
  v322 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a49 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v323, *(const std::string::value_type **)(a49 + 8), *(_QWORD *)(a49 + 16));
    v165 = a49;
  }
  else
  {
    v323 = *(std::string *)(a49 + 8);
  }
  v167 = (uint64_t *)(v165 + 36);
  v166 = *(_QWORD *)(v165 + 36);
  v168 = *(_DWORD *)(v165 + 32);
  v322 = off_24C335B18;
  v325 = v166;
  v254 = v167;
  LODWORD(v166) = *((_DWORD *)v167 + 2);
  v324 = v168;
  v169 = a50;
  v326 = v166;
  v317 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a50 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v318, *(const std::string::value_type **)(a50 + 8), *(_QWORD *)(a50 + 16));
    v169 = a50;
  }
  else
  {
    v318 = *(std::string *)(a50 + 8);
  }
  v171 = (uint64_t *)(v169 + 36);
  v170 = *(_QWORD *)(v169 + 36);
  v172 = *(_DWORD *)(v169 + 32);
  v317 = off_24C335B18;
  v320 = v170;
  v253 = v171;
  LODWORD(v170) = *((_DWORD *)v171 + 2);
  v319 = v172;
  v321 = v170;
  v313 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a51 + 31) < 0)
    std::string::__init_copy_ctor_external(&v314, *(const std::string::value_type **)(a51 + 8), *(_QWORD *)(a51 + 16));
  else
    v314 = *(std::string *)(a51 + 8);
  v173 = a52;
  v315 = *(_DWORD *)(a51 + 32);
  v313 = off_24C335AF8;
  v316 = *(_QWORD *)(a51 + 36);
  v309 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a52 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v310, *(const std::string::value_type **)(a52 + 8), *(_QWORD *)(a52 + 16));
    v173 = a52;
  }
  else
  {
    v310 = *(std::string *)(a52 + 8);
  }
  v311 = *(_DWORD *)(v173 + 32);
  v309 = off_24C335AF8;
  v312 = *(_QWORD *)(v173 + 36);
  v304 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a53 + 31) < 0)
    std::string::__init_copy_ctor_external(&v305, *(const std::string::value_type **)(a53 + 8), *(_QWORD *)(a53 + 16));
  else
    v305 = *(std::string *)(a53 + 8);
  v306 = *(_DWORD *)(a53 + 32);
  v304 = &off_24C335AB8;
  v307 = *(_BYTE *)(a53 + 36);
  if (*(char *)(a53 + 63) < 0)
    std::string::__init_copy_ctor_external(&v308, *(const std::string::value_type **)(a53 + 40), *(_QWORD *)(a53 + 48));
  else
    v308 = *(std::string *)(a53 + 40);
  v299 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a54 + 31) < 0)
    std::string::__init_copy_ctor_external(&v300, *(const std::string::value_type **)(a54 + 8), *(_QWORD *)(a54 + 16));
  else
    v300 = *(std::string *)(a54 + 8);
  v174 = *(_DWORD *)(a54 + 32);
  v299 = off_24C335B18;
  v302 = *(_QWORD *)(a54 + 36);
  v175 = *(_DWORD *)(a54 + 44);
  v301 = v174;
  v303 = v175;
  v176 = a55;
  v294 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a55 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v295, *(const std::string::value_type **)(a55 + 8), *(_QWORD *)(a55 + 16));
    v176 = a55;
  }
  else
  {
    v295 = *(std::string *)(a55 + 8);
  }
  v296 = *(_DWORD *)(v176 + 32);
  v294 = &off_24C335AB8;
  v297 = *(_BYTE *)(v176 + 36);
  if (*(char *)(v176 + 63) < 0)
    std::string::__init_copy_ctor_external(&v298, *(const std::string::value_type **)(v176 + 40), *(_QWORD *)(v176 + 48));
  else
    v298 = *(std::string *)(v176 + 40);
  v177 = a56;
  v289 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a56 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v290, *(const std::string::value_type **)(a56 + 8), *(_QWORD *)(a56 + 16));
    v177 = a56;
  }
  else
  {
    v290 = *(std::string *)(a56 + 8);
  }
  v179 = (uint64_t *)(v177 + 36);
  v178 = *(_QWORD *)(v177 + 36);
  v180 = *(_DWORD *)(v177 + 32);
  v289 = off_24C335B18;
  v292 = v178;
  v252 = v179;
  LODWORD(v178) = *((_DWORD *)v179 + 2);
  v291 = v180;
  v293 = v178;
  v284 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a57 + 31) < 0)
    std::string::__init_copy_ctor_external(&v285, *(const std::string::value_type **)(a57 + 8), *(_QWORD *)(a57 + 16));
  else
    v285 = *(std::string *)(a57 + 8);
  v181 = *(_DWORD *)(a57 + 32);
  v284 = off_24C335B18;
  v287 = *(_QWORD *)(a57 + 36);
  v182 = *(_DWORD *)(a57 + 44);
  v286 = v181;
  v288 = v182;
  v279 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a58 + 31) < 0)
    std::string::__init_copy_ctor_external(&v280, *(const std::string::value_type **)(a58 + 8), *(_QWORD *)(a58 + 16));
  else
    v280 = *(std::string *)(a58 + 8);
  v183 = *(_DWORD *)(a58 + 32);
  v279 = off_24C335B18;
  v282 = *(_QWORD *)(a58 + 36);
  v184 = *(_DWORD *)(a58 + 44);
  v281 = v183;
  v283 = v184;
  v185 = a59;
  v274 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a59 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)(a59 + 8), *(_QWORD *)(a59 + 16));
    v185 = a59;
  }
  else
  {
    __p = *(std::string *)(a59 + 8);
  }
  v186 = *(_QWORD *)(v185 + 36);
  v276 = *(_DWORD *)(v185 + 32);
  v274 = off_24C335B18;
  v277 = v186;
  v251 = (uint64_t *)(v185 + 36);
  v278 = *(_DWORD *)(v185 + 44);
  v269 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a60 + 31) < 0)
    std::string::__init_copy_ctor_external(&v270, *(const std::string::value_type **)(a60 + 8), *(_QWORD *)(a60 + 16));
  else
    v270 = *(std::string *)(a60 + 8);
  v271 = *(_DWORD *)(a60 + 32);
  v269 = &off_24C335AB8;
  v272 = *(_BYTE *)(a60 + 36);
  if (*(char *)(a60 + 63) < 0)
    std::string::__init_copy_ctor_external(&v273, *(const std::string::value_type **)(a60 + 40), *(_QWORD *)(a60 + 48));
  else
    v273 = *(std::string *)(a60 + 40);
  mediaplatform::DatabaseTable<long long,long long,long long,long long,long long,long long,long long,long long,std::string,long long,std::string,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,std::string,std::string,std::string,std::string,std::string,long long,long long,std::string,long long,long long,std::string,std::string,long long,long long,long long,int,std::string,std::string,long long,long long,long long,long long,int,int,std::string,long long,std::string,long long,long long,long long,long long,std::string>::DatabaseTable(v74, (uint64_t)&v556, (uint64_t)&v551, (uint64_t)&v546, (uint64_t)&v541, (uint64_t)&v536, (uint64_t)&v531, (uint64_t)&v526, (uint64_t)&v521, (uint64_t)&v516, (uint64_t)&v511, (uint64_t)&v506, (uint64_t)&v501, (uint64_t)&v496, (uint64_t)&v491, (uint64_t)&v486, (uint64_t)&v481, (uint64_t)&v476, (uint64_t)&v471,
    (uint64_t)&v466,
    (uint64_t)&v461,
    (uint64_t)&v456,
    (uint64_t)&v451,
    (uint64_t)&v446,
    (uint64_t)&v441,
    (uint64_t)&v436,
    (uint64_t)&v431,
    (uint64_t)&v426,
    (uint64_t)&v421,
    (uint64_t)&v416,
    (uint64_t)&v411,
    (uint64_t)&v406,
    (uint64_t)&v401,
    (uint64_t)&v396,
    (uint64_t)&v391,
    (uint64_t)&v386,
    (uint64_t)&v381,
    (uint64_t)&v376,
    (uint64_t)&v371,
    (uint64_t)&v366,
    (uint64_t)&v361,
    (uint64_t)&v356,
    (uint64_t)&v351,
    (uint64_t)&v347,
    (uint64_t)&v342,
    (uint64_t)&v337,
    (uint64_t)&v332,
    (uint64_t)&v327,
    (uint64_t)&v322,
    (uint64_t)&v317,
    (uint64_t)&v313,
    (uint64_t)&v309,
    (uint64_t)&v304,
    (uint64_t)&v299,
    (uint64_t)&v294,
    (uint64_t)&v289,
    (uint64_t)&v284,
    (uint64_t)&v279,
    (uint64_t)&v274,
    (uint64_t)&v269);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v269);
  v274 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v279 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v280.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v280.__r_.__value_.__l.__data_);
  v284 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v285.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v285.__r_.__value_.__l.__data_);
  v289 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v290.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v290.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v294);
  v299 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v300.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v300.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v304);
  v309 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v310.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v310.__r_.__value_.__l.__data_);
  v313 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v314.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v314.__r_.__value_.__l.__data_);
  v317 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v318.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v318.__r_.__value_.__l.__data_);
  v322 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v323.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v323.__r_.__value_.__l.__data_);
  v327 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v328.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v328.__r_.__value_.__l.__data_);
  v332 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v333.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v333.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v337);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v342);
  v347 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v348.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v348.__r_.__value_.__l.__data_);
  v351 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v352.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v352.__r_.__value_.__l.__data_);
  v356 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v357.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v357.__r_.__value_.__l.__data_);
  v361 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v362.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v362.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v366);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v371);
  v376 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v377.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v377.__r_.__value_.__l.__data_);
  v381 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v382.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v382.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v386);
  v391 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v392.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v392.__r_.__value_.__l.__data_);
  v396 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v397.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v397.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v401);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v406);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v411);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v416);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v421);
  v426 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v427.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v427.__r_.__value_.__l.__data_);
  v431 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v432.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v432.__r_.__value_.__l.__data_);
  v436 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v437.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v437.__r_.__value_.__l.__data_);
  v441 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v442.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v442.__r_.__value_.__l.__data_);
  v446 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v447.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v447.__r_.__value_.__l.__data_);
  v451 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v452.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v452.__r_.__value_.__l.__data_);
  v456 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v457.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v457.__r_.__value_.__l.__data_);
  v461 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v462.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v462.__r_.__value_.__l.__data_);
  v466 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v467.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v467.__r_.__value_.__l.__data_);
  v471 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v472.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v472.__r_.__value_.__l.__data_);
  v476 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v477.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v477.__r_.__value_.__l.__data_);
  v481 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v482.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v482.__r_.__value_.__l.__data_);
  v486 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v487.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v487.__r_.__value_.__l.__data_);
  v491 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v492.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v492.__r_.__value_.__l.__data_);
  v496 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v497.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v497.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v501);
  v506 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v507.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v507.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v511);
  v516 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v517.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v517.__r_.__value_.__l.__data_);
  v521 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v522.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v522.__r_.__value_.__l.__data_);
  v526 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v527.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v527.__r_.__value_.__l.__data_);
  v531 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v532.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v532.__r_.__value_.__l.__data_);
  v536 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v537.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v537.__r_.__value_.__l.__data_);
  v541 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v542.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v542.__r_.__value_.__l.__data_);
  v546 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v547.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v547.__r_.__value_.__l.__data_);
  v551 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v552.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v552.__r_.__value_.__l.__data_);
  if (SHIBYTE(v556.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v556.__r_.__value_.__l.__data_);
  *(_QWORD *)v74 = &off_24C3303D8;
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 3104, v268);
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 3152, v71);
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 3200, v69);
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 3248, v67);
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 3296, v65);
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 3344, v63);
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 3392, a9);
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 3440, a10);
  std::__tuple_leaf<8ul,mlcore::MediaColumn<std::string>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<std::string>&,void>(v74 + 3488, a11);
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 3552, v267);
  std::__tuple_leaf<10ul,mlcore::MediaColumn<std::string>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<std::string>&,void>(v74 + 3600, a13);
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 3664, v266);
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 3712, v265);
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 3760, a16);
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 3808, v264);
  *(_QWORD *)(v74 + 3856) = off_24C335D90;
  v187 = (std::string *)(v74 + 3864);
  v188 = a18;
  if (*(char *)(a18 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v187, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
    v188 = a18;
  }
  else
  {
    v189 = *(_OWORD *)(a18 + 8);
    *(_QWORD *)(v74 + 3880) = *(_QWORD *)(a18 + 24);
    *(_OWORD *)&v187->__r_.__value_.__l.__data_ = v189;
  }
  *(_DWORD *)(v74 + 3888) = *(_DWORD *)(v188 + 32);
  *(_QWORD *)(v74 + 3856) = off_24C335B18;
  v190 = *v263;
  *(_DWORD *)(v74 + 3900) = *((_DWORD *)v263 + 2);
  *(_QWORD *)(v74 + 3892) = v190;
  *(_QWORD *)(v74 + 3856) = off_24C336AC0;
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 3904, v106);
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 3952, v262);
  *(_QWORD *)(v74 + 4000) = off_24C335D90;
  v191 = (std::string *)(v74 + 4008);
  v192 = a21;
  if (*(char *)(a21 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v191, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
    v192 = a21;
  }
  else
  {
    v193 = *(_OWORD *)(a21 + 8);
    *(_QWORD *)(v74 + 4024) = *(_QWORD *)(a21 + 24);
    *(_OWORD *)&v191->__r_.__value_.__l.__data_ = v193;
  }
  *(_DWORD *)(v74 + 4032) = *(_DWORD *)(v192 + 32);
  *(_QWORD *)(v74 + 4000) = off_24C335B18;
  v194 = *v261;
  *(_DWORD *)(v74 + 4044) = *((_DWORD *)v261 + 2);
  *(_QWORD *)(v74 + 4036) = v194;
  *(_QWORD *)(v74 + 4000) = off_24C336AC0;
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 4048, a22);
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 4096, v260);
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 4144, a24);
  *(_QWORD *)(v74 + 4192) = off_24C335D90;
  v195 = (std::string *)(v74 + 4200);
  if (*(char *)(a25 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v195, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  }
  else
  {
    v196 = *(_OWORD *)(a25 + 8);
    *(_QWORD *)(v74 + 4216) = *(_QWORD *)(a25 + 24);
    *(_OWORD *)&v195->__r_.__value_.__l.__data_ = v196;
  }
  *(_DWORD *)(v74 + 4224) = *(_DWORD *)(a25 + 32);
  *(_QWORD *)(v74 + 4192) = off_24C335B18;
  v197 = *(_QWORD *)(a25 + 36);
  *(_DWORD *)(v74 + 4236) = *(_DWORD *)(a25 + 44);
  *(_QWORD *)(v74 + 4228) = v197;
  *(_QWORD *)(v74 + 4192) = off_24C336AC0;
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 4240, a26);
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 4288, a27);
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 4336, a28);
  *(_QWORD *)(v74 + 4384) = off_24C335D90;
  if (*(char *)(a29 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(v74 + 4392), *(const std::string::value_type **)(a29 + 8), *(_QWORD *)(a29 + 16));
  }
  else
  {
    v198 = *(_OWORD *)(a29 + 8);
    *(_QWORD *)(v74 + 4408) = *(_QWORD *)(a29 + 24);
    *(_OWORD *)(v74 + 4392) = v198;
  }
  *(_DWORD *)(v74 + 4416) = *(_DWORD *)(a29 + 32);
  *(_QWORD *)(v74 + 4384) = &off_24C335AB8;
  *(_BYTE *)(v74 + 4420) = *(_BYTE *)(a29 + 36);
  v199 = (std::string *)(v74 + 4424);
  if (*(char *)(a29 + 63) < 0)
  {
    std::string::__init_copy_ctor_external(v199, *(const std::string::value_type **)(a29 + 40), *(_QWORD *)(a29 + 48));
  }
  else
  {
    v200 = *(_OWORD *)(a29 + 40);
    *(_QWORD *)(v74 + 4440) = *(_QWORD *)(a29 + 56);
    *(_OWORD *)&v199->__r_.__value_.__l.__data_ = v200;
  }
  *(_QWORD *)(v74 + 4384) = &off_24C336A60;
  std::__tuple_leaf<27ul,mlcore::MediaColumn<std::string>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<std::string>&,void>(v74 + 4448, a30);
  std::__tuple_leaf<28ul,mlcore::MediaColumn<std::string>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<std::string>&,void>(v74 + 4512, a31);
  std::__tuple_leaf<29ul,mlcore::MediaColumn<std::string>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<std::string>&,void>(v74 + 4576, a32);
  std::__tuple_leaf<30ul,mlcore::MediaColumn<std::string>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<std::string>&,void>(v74 + 4640, a33);
  *(_QWORD *)(v74 + 4704) = off_24C335D90;
  v201 = a34;
  if (*(char *)(a34 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(v74 + 4712), *(const std::string::value_type **)(a34 + 8), *(_QWORD *)(a34 + 16));
    v201 = a34;
  }
  else
  {
    v202 = *(_OWORD *)(a34 + 8);
    *(_QWORD *)(v74 + 4728) = *(_QWORD *)(a34 + 24);
    *(_OWORD *)(v74 + 4712) = v202;
  }
  *(_DWORD *)(v74 + 4736) = *(_DWORD *)(v201 + 32);
  *(_QWORD *)(v74 + 4704) = off_24C335B18;
  v203 = *v259;
  *(_DWORD *)(v74 + 4748) = *((_DWORD *)v259 + 2);
  *(_QWORD *)(v74 + 4740) = v203;
  *(_QWORD *)(v74 + 4704) = off_24C336AC0;
  *(_QWORD *)(v74 + 4752) = off_24C335D90;
  v204 = a35;
  if (*(char *)(a35 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(v74 + 4760), *(const std::string::value_type **)(a35 + 8), *(_QWORD *)(a35 + 16));
    v204 = a35;
  }
  else
  {
    v205 = *(_OWORD *)(a35 + 8);
    *(_QWORD *)(v74 + 4776) = *(_QWORD *)(a35 + 24);
    *(_OWORD *)(v74 + 4760) = v205;
  }
  *(_DWORD *)(v74 + 4784) = *(_DWORD *)(v204 + 32);
  *(_QWORD *)(v74 + 4752) = off_24C335B18;
  v206 = *v258;
  *(_DWORD *)(v74 + 4796) = *((_DWORD *)v258 + 2);
  *(_QWORD *)(v74 + 4788) = v206;
  *(_QWORD *)(v74 + 4752) = off_24C336AC0;
  *(_QWORD *)(v74 + 4800) = off_24C335D90;
  if (*(char *)(a36 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(v74 + 4808), *(const std::string::value_type **)(a36 + 8), *(_QWORD *)(a36 + 16));
  }
  else
  {
    v207 = *(_OWORD *)(a36 + 8);
    *(_QWORD *)(v74 + 4824) = *(_QWORD *)(a36 + 24);
    *(_OWORD *)(v74 + 4808) = v207;
  }
  *(_DWORD *)(v74 + 4832) = *(_DWORD *)(a36 + 32);
  *(_QWORD *)(v74 + 4800) = &off_24C335AB8;
  *(_BYTE *)(v74 + 4836) = *(_BYTE *)(a36 + 36);
  v208 = (std::string *)(v74 + 4840);
  v209 = a37;
  if (*(char *)(a36 + 63) < 0)
  {
    std::string::__init_copy_ctor_external(v208, *(const std::string::value_type **)(a36 + 40), *(_QWORD *)(a36 + 48));
    v209 = a37;
  }
  else
  {
    v210 = *(_OWORD *)(a36 + 40);
    *(_QWORD *)(v74 + 4856) = *(_QWORD *)(a36 + 56);
    *(_OWORD *)&v208->__r_.__value_.__l.__data_ = v210;
  }
  *(_QWORD *)(v74 + 4800) = &off_24C336A60;
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 4864, v209);
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 4912, v257);
  std::__tuple_leaf<36ul,mlcore::MediaColumn<std::string>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<std::string>&,void>(v74 + 4960, a39);
  std::__tuple_leaf<37ul,mlcore::MediaColumn<std::string>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<std::string>&,void>(v74 + 5024, a40);
  *(_QWORD *)(v74 + 5088) = off_24C335D90;
  v211 = (std::string *)(v74 + 5096);
  if (*(char *)(a41 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v211, *(const std::string::value_type **)(a41 + 8), *(_QWORD *)(a41 + 16));
  }
  else
  {
    v212 = *(_OWORD *)(a41 + 8);
    *(_QWORD *)(v74 + 5112) = *(_QWORD *)(a41 + 24);
    *(_OWORD *)&v211->__r_.__value_.__l.__data_ = v212;
  }
  *(_DWORD *)(v74 + 5120) = *(_DWORD *)(a41 + 32);
  *(_QWORD *)(v74 + 5088) = off_24C335B18;
  v213 = *(_QWORD *)(a41 + 36);
  *(_DWORD *)(v74 + 5132) = *(_DWORD *)(a41 + 44);
  *(_QWORD *)(v74 + 5124) = v213;
  *(_QWORD *)(v74 + 5088) = off_24C336AC0;
  *(_QWORD *)(v74 + 5136) = off_24C335D90;
  v214 = a42;
  if (*(char *)(a42 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(v74 + 5144), *(const std::string::value_type **)(a42 + 8), *(_QWORD *)(a42 + 16));
    v214 = a42;
  }
  else
  {
    v215 = *(_OWORD *)(a42 + 8);
    *(_QWORD *)(v74 + 5160) = *(_QWORD *)(a42 + 24);
    *(_OWORD *)(v74 + 5144) = v215;
  }
  *(_DWORD *)(v74 + 5168) = *(_DWORD *)(v214 + 32);
  *(_QWORD *)(v74 + 5136) = off_24C335B18;
  v216 = *v256;
  *(_DWORD *)(v74 + 5180) = *((_DWORD *)v256 + 2);
  *(_QWORD *)(v74 + 5172) = v216;
  *(_QWORD *)(v74 + 5136) = off_24C336AC0;
  *(_QWORD *)(v74 + 5184) = off_24C335D90;
  v217 = (std::string *)(v74 + 5192);
  v218 = a43;
  if (*(char *)(a43 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v217, *(const std::string::value_type **)(a43 + 8), *(_QWORD *)(a43 + 16));
    v218 = a43;
  }
  else
  {
    v219 = *(_OWORD *)(a43 + 8);
    *(_QWORD *)(v74 + 5208) = *(_QWORD *)(a43 + 24);
    *(_OWORD *)&v217->__r_.__value_.__l.__data_ = v219;
  }
  *(_DWORD *)(v74 + 5216) = *(_DWORD *)(v218 + 32);
  *(_QWORD *)(v74 + 5184) = off_24C335B18;
  v220 = *v255;
  *(_DWORD *)(v74 + 5228) = *((_DWORD *)v255 + 2);
  *(_QWORD *)(v74 + 5220) = v220;
  *(_QWORD *)(v74 + 5184) = off_24C336AC0;
  std::__tuple_leaf<3ul,mlcore::MediaColumn<int>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<int>&,void>(v74 + 5232, a44);
  *(_QWORD *)(v74 + 5280) = off_24C335D90;
  v221 = (__int128 *)(a45 + 40);
  if (*(char *)(a45 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(v74 + 5288), *(const std::string::value_type **)(a45 + 8), *(_QWORD *)(a45 + 16));
    v221 = (__int128 *)(a45 + 40);
  }
  else
  {
    v222 = *(_OWORD *)(a45 + 8);
    *(_QWORD *)(v74 + 5304) = *(_QWORD *)(a45 + 24);
    *(_OWORD *)(v74 + 5288) = v222;
  }
  *(_DWORD *)(v74 + 5312) = *(_DWORD *)(a45 + 32);
  *(_QWORD *)(v74 + 5280) = &off_24C335AB8;
  *(_BYTE *)(v74 + 5316) = *(_BYTE *)(a45 + 36);
  v223 = (std::string *)(v74 + 5320);
  if (*(char *)(a45 + 63) < 0)
  {
    std::string::__init_copy_ctor_external(v223, *(const std::string::value_type **)(a45 + 40), *(_QWORD *)(a45 + 48));
  }
  else
  {
    v224 = *v221;
    *(_QWORD *)(v74 + 5336) = *((_QWORD *)v221 + 2);
    *(_OWORD *)&v223->__r_.__value_.__l.__data_ = v224;
  }
  *(_QWORD *)(v74 + 5280) = &off_24C336A60;
  *(_QWORD *)(v74 + 5344) = off_24C335D90;
  if (*(char *)(a46 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(v74 + 5352), *(const std::string::value_type **)(a46 + 8), *(_QWORD *)(a46 + 16));
  }
  else
  {
    v225 = *(_OWORD *)(a46 + 8);
    *(_QWORD *)(v74 + 5368) = *(_QWORD *)(a46 + 24);
    *(_OWORD *)(v74 + 5352) = v225;
  }
  *(_DWORD *)(v74 + 5376) = *(_DWORD *)(a46 + 32);
  *(_QWORD *)(v74 + 5344) = &off_24C335AB8;
  *(_BYTE *)(v74 + 5380) = *(_BYTE *)(a46 + 36);
  v226 = (std::string *)(v74 + 5384);
  if (*(char *)(a46 + 63) < 0)
  {
    std::string::__init_copy_ctor_external(v226, *(const std::string::value_type **)(a46 + 40), *(_QWORD *)(a46 + 48));
  }
  else
  {
    v227 = *(_OWORD *)(a46 + 40);
    *(_QWORD *)(v74 + 5400) = *(_QWORD *)(a46 + 56);
    *(_OWORD *)&v226->__r_.__value_.__l.__data_ = v227;
  }
  *(_QWORD *)(v74 + 5344) = &off_24C336A60;
  *(_QWORD *)(v74 + 5408) = off_24C335D90;
  if (*(char *)(a47 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(v74 + 5416), *(const std::string::value_type **)(a47 + 8), *(_QWORD *)(a47 + 16));
  }
  else
  {
    v228 = *(_OWORD *)(a47 + 8);
    *(_QWORD *)(v74 + 5432) = *(_QWORD *)(a47 + 24);
    *(_OWORD *)(v74 + 5416) = v228;
  }
  *(_DWORD *)(v74 + 5440) = *(_DWORD *)(a47 + 32);
  *(_QWORD *)(v74 + 5408) = off_24C335B18;
  v229 = *(_QWORD *)(a47 + 36);
  *(_DWORD *)(v74 + 5452) = *(_DWORD *)(a47 + 44);
  *(_QWORD *)(v74 + 5444) = v229;
  *(_QWORD *)(v74 + 5408) = off_24C336AC0;
  *(_QWORD *)(v74 + 5456) = off_24C335D90;
  if (*(char *)(a48 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(v74 + 5464), *(const std::string::value_type **)(a48 + 8), *(_QWORD *)(a48 + 16));
  }
  else
  {
    v230 = *(_OWORD *)(a48 + 8);
    *(_QWORD *)(v74 + 5480) = *(_QWORD *)(a48 + 24);
    *(_OWORD *)(v74 + 5464) = v230;
  }
  *(_DWORD *)(v74 + 5488) = *(_DWORD *)(a48 + 32);
  *(_QWORD *)(v74 + 5456) = off_24C335B18;
  v231 = *(_QWORD *)(a48 + 36);
  *(_DWORD *)(v74 + 5500) = *(_DWORD *)(a48 + 44);
  *(_QWORD *)(v74 + 5492) = v231;
  *(_QWORD *)(v74 + 5456) = off_24C336AC0;
  *(_QWORD *)(v74 + 5504) = off_24C335D90;
  v232 = a49;
  if (*(char *)(a49 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(v74 + 5512), *(const std::string::value_type **)(a49 + 8), *(_QWORD *)(a49 + 16));
    v232 = a49;
  }
  else
  {
    v233 = *(_OWORD *)(a49 + 8);
    *(_QWORD *)(v74 + 5528) = *(_QWORD *)(a49 + 24);
    *(_OWORD *)(v74 + 5512) = v233;
  }
  *(_DWORD *)(v74 + 5536) = *(_DWORD *)(v232 + 32);
  *(_QWORD *)(v74 + 5504) = off_24C335B18;
  v234 = *v254;
  *(_DWORD *)(v74 + 5548) = *((_DWORD *)v254 + 2);
  *(_QWORD *)(v74 + 5540) = v234;
  *(_QWORD *)(v74 + 5504) = off_24C336AC0;
  *(_QWORD *)(v74 + 5552) = off_24C335D90;
  v235 = a50;
  if (*(char *)(a50 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(v74 + 5560), *(const std::string::value_type **)(a50 + 8), *(_QWORD *)(a50 + 16));
    v235 = a50;
  }
  else
  {
    v236 = *(_OWORD *)(a50 + 8);
    *(_QWORD *)(v74 + 5576) = *(_QWORD *)(a50 + 24);
    *(_OWORD *)(v74 + 5560) = v236;
  }
  *(_DWORD *)(v74 + 5584) = *(_DWORD *)(v235 + 32);
  *(_QWORD *)(v74 + 5552) = off_24C335B18;
  v237 = *v253;
  *(_DWORD *)(v74 + 5596) = *((_DWORD *)v253 + 2);
  *(_QWORD *)(v74 + 5588) = v237;
  *(_QWORD *)(v74 + 5552) = off_24C336AC0;
  std::__tuple_leaf<3ul,mlcore::MediaColumn<int>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<int>&,void>(v74 + 5600, a51);
  std::__tuple_leaf<3ul,mlcore::MediaColumn<int>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<int>&,void>(v74 + 5648, a52);
  *(_QWORD *)(v74 + 5696) = off_24C335D90;
  if (*(char *)(a53 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(v74 + 5704), *(const std::string::value_type **)(a53 + 8), *(_QWORD *)(a53 + 16));
  }
  else
  {
    v238 = *(_OWORD *)(a53 + 8);
    *(_QWORD *)(v74 + 5720) = *(_QWORD *)(a53 + 24);
    *(_OWORD *)(v74 + 5704) = v238;
  }
  *(_DWORD *)(v74 + 5728) = *(_DWORD *)(a53 + 32);
  *(_QWORD *)(v74 + 5696) = &off_24C335AB8;
  *(_BYTE *)(v74 + 5732) = *(_BYTE *)(a53 + 36);
  v239 = (std::string *)(v74 + 5736);
  if (*(char *)(a53 + 63) < 0)
  {
    std::string::__init_copy_ctor_external(v239, *(const std::string::value_type **)(a53 + 40), *(_QWORD *)(a53 + 48));
  }
  else
  {
    v240 = *(_OWORD *)(a53 + 40);
    *(_QWORD *)(v74 + 5752) = *(_QWORD *)(a53 + 56);
    *(_OWORD *)&v239->__r_.__value_.__l.__data_ = v240;
  }
  *(_QWORD *)(v74 + 5696) = &off_24C336A60;
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 5760, a54);
  std::__tuple_leaf<52ul,mlcore::MediaColumn<std::string>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<std::string>&,void>(v74 + 5808, a55);
  *(_QWORD *)(v74 + 5872) = off_24C335D90;
  v241 = a56;
  if (*(char *)(a56 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(v74 + 5880), *(const std::string::value_type **)(a56 + 8), *(_QWORD *)(a56 + 16));
    v241 = a56;
  }
  else
  {
    v242 = *(_OWORD *)(a56 + 8);
    *(_QWORD *)(v74 + 5896) = *(_QWORD *)(a56 + 24);
    *(_OWORD *)(v74 + 5880) = v242;
  }
  *(_DWORD *)(v74 + 5904) = *(_DWORD *)(v241 + 32);
  *(_QWORD *)(v74 + 5872) = off_24C335B18;
  v243 = *v252;
  *(_DWORD *)(v74 + 5916) = *((_DWORD *)v252 + 2);
  *(_QWORD *)(v74 + 5908) = v243;
  *(_QWORD *)(v74 + 5872) = off_24C336AC0;
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 5920, a57);
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>(v74 + 5968, a58);
  *(_QWORD *)(v74 + 6016) = off_24C335D90;
  v244 = a59;
  if (*(char *)(a59 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(v74 + 6024), *(const std::string::value_type **)(a59 + 8), *(_QWORD *)(a59 + 16));
    v244 = a59;
  }
  else
  {
    v245 = *(_OWORD *)(a59 + 8);
    *(_QWORD *)(v74 + 6040) = *(_QWORD *)(a59 + 24);
    *(_OWORD *)(v74 + 6024) = v245;
  }
  *(_DWORD *)(v74 + 6048) = *(_DWORD *)(v244 + 32);
  *(_QWORD *)(v74 + 6016) = off_24C335B18;
  v246 = *v251;
  *(_DWORD *)(v74 + 6060) = *((_DWORD *)v251 + 2);
  *(_QWORD *)(v74 + 6052) = v246;
  *(_QWORD *)(v74 + 6016) = off_24C336AC0;
  *(_QWORD *)(v74 + 6064) = off_24C335D90;
  if (*(char *)(a60 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(v74 + 6072), *(const std::string::value_type **)(a60 + 8), *(_QWORD *)(a60 + 16));
  }
  else
  {
    v247 = *(_OWORD *)(a60 + 8);
    *(_QWORD *)(v74 + 6088) = *(_QWORD *)(a60 + 24);
    *(_OWORD *)(v74 + 6072) = v247;
  }
  *(_DWORD *)(v74 + 6096) = *(_DWORD *)(a60 + 32);
  *(_QWORD *)(v74 + 6064) = &off_24C335AB8;
  *(_BYTE *)(v74 + 6100) = *(_BYTE *)(a60 + 36);
  v248 = (std::string *)(v74 + 6104);
  if (*(char *)(a60 + 63) < 0)
  {
    std::string::__init_copy_ctor_external(v248, *(const std::string::value_type **)(a60 + 40), *(_QWORD *)(a60 + 48));
  }
  else
  {
    v249 = *(_OWORD *)(a60 + 40);
    *(_QWORD *)(v74 + 6120) = *(_QWORD *)(a60 + 56);
    *(_OWORD *)&v248->__r_.__value_.__l.__data_ = v249;
  }
  *(_QWORD *)(v74 + 6064) = &off_24C336A60;
  return v74;
}

void sub_20A87584C(unint64_t a1)
{
  uint64_t v1;
  void **v2;
  void **v3;
  uint64_t v4;
  void **v5;
  void **v6;
  void **v7;
  uint64_t v8;
  void **v9;

  STACK[0x438] = a1;
  *(_QWORD *)(v1 + 6064) = v8;
  if (*(char *)(STACK[0x478] + 1968) < 0)
    operator delete(*v3);
  *(_QWORD *)(v1 + 6016) = v8;
  if (*(char *)(STACK[0x478] + 1920) < 0)
    operator delete(*v7);
  *(_QWORD *)(v1 + 5968) = v8;
  if (*(char *)(STACK[0x478] + 1872) < 0)
    operator delete(*(void **)(v1 + 5976));
  *(_QWORD *)(v1 + 5920) = v8;
  if (*(char *)(STACK[0x478] + 1824) < 0)
    operator delete(*(void **)(v1 + 5928));
  *(_QWORD *)(v1 + 5872) = v8;
  if (*(char *)(STACK[0x478] + 1776) < 0)
    operator delete(*v6);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(v4);
  *(_QWORD *)(v1 + 5760) = v8;
  if (*(char *)(STACK[0x478] + 1664) < 0)
    operator delete(*(void **)(v1 + 5768));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(v1 + 5696);
  *(_QWORD *)(v1 + 5648) = v8;
  if (*(char *)(STACK[0x478] + 1552) < 0)
    operator delete(*(void **)(v1 + 5656));
  *(_QWORD *)(v1 + 5600) = v8;
  if (*(char *)(STACK[0x478] + 1504) < 0)
    operator delete(*(void **)(v1 + 5608));
  *(_QWORD *)(v1 + 5552) = v8;
  if (*(char *)(STACK[0x478] + 1456) < 0)
    operator delete(*v2);
  *(_QWORD *)(v1 + 5504) = v8;
  if (*(char *)(STACK[0x478] + 1408) < 0)
    operator delete(*v9);
  *(_QWORD *)(v1 + 5456) = v8;
  if (*(char *)(STACK[0x478] + 1360) < 0)
    operator delete(*(void **)STACK[0x440]);
  *(_QWORD *)(v1 + 5408) = v8;
  if (*(char *)(STACK[0x478] + 1312) < 0)
    operator delete(*v5);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(v1 + 5344);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(v1 + 5280);
  *(_QWORD *)(v1 + 5232) = v8;
  if (*(char *)(STACK[0x478] + 1136) < 0)
    operator delete(*(void **)(v1 + 5240));
  *(_QWORD *)(v1 + 5184) = v8;
  if (*(char *)(STACK[0x478] + 1088) < 0)
    operator delete(*(void **)STACK[0x448]);
  *(_QWORD *)(v1 + 5136) = v8;
  if (*(char *)(STACK[0x478] + 1040) < 0)
    operator delete(*(void **)STACK[0x3B0]);
  *(_QWORD *)(v1 + 5088) = v8;
  if (*(char *)(STACK[0x478] + 992) < 0)
    operator delete(*(void **)STACK[0x450]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(STACK[0x458]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(STACK[0x460]);
  *(_QWORD *)(v1 + 4912) = v8;
  if (*(char *)(STACK[0x478] + 816) < 0)
    operator delete(*(void **)(v1 + 4920));
  *(_QWORD *)(v1 + 4864) = v8;
  if (*(char *)(STACK[0x478] + 768) < 0)
    operator delete(*(void **)(v1 + 4872));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(v1 + 4800);
  *(_QWORD *)(v1 + 4752) = v8;
  if (*(char *)(STACK[0x478] + 656) < 0)
    operator delete(*(void **)STACK[0x3B8]);
  *(_QWORD *)(v1 + 4704) = v8;
  if (*(char *)(STACK[0x478] + 608) < 0)
    operator delete(*(void **)STACK[0x408]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(STACK[0x410]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(STACK[0x418]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(STACK[0x468]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(STACK[0x470]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(v1 + 4384);
  *(_QWORD *)(v1 + 4336) = v8;
  if (*(char *)(STACK[0x478] + 240) < 0)
    operator delete(*(void **)(v1 + 4344));
  *(_QWORD *)(v1 + 4288) = v8;
  if (*(char *)(STACK[0x478] + 192) < 0)
    operator delete(*(void **)(v1 + 4296));
  *(_QWORD *)(v1 + 4240) = v8;
  if (*(char *)(STACK[0x478] + 144) < 0)
    operator delete(*(void **)(v1 + 4248));
  *(_QWORD *)(v1 + 4192) = v8;
  if (*(char *)(STACK[0x478] + 96) < 0)
    operator delete(*(void **)STACK[0x3C0]);
  *(_QWORD *)(v1 + 4144) = v8;
  if (*(char *)(STACK[0x478] + 48) < 0)
    operator delete(*(void **)(v1 + 4152));
  *(_QWORD *)(v1 + 4096) = v8;
  if (*(char *)STACK[0x478] < 0)
    operator delete(*(void **)(v1 + 4104));
  *(_QWORD *)(v1 + 4048) = v8;
  if (*(char *)(v1 + 4079) < 0)
    operator delete(*(void **)(v1 + 4056));
  *(_QWORD *)(v1 + 4000) = v8;
  if (*(char *)(v1 + 4031) < 0)
    operator delete(*(void **)STACK[0x3C8]);
  *(_QWORD *)(v1 + 3952) = v8;
  if (*(char *)(v1 + 3983) < 0)
    operator delete(*(void **)(v1 + 3960));
  *(_QWORD *)(v1 + 3904) = v8;
  if (*(char *)(v1 + 3935) < 0)
    operator delete(*(void **)(v1 + 3912));
  *(_QWORD *)(v1 + 3856) = v8;
  if (*(char *)(v1 + 3887) < 0)
    operator delete(*(void **)STACK[0x3D0]);
  *(_QWORD *)(v1 + 3808) = v8;
  if (*(char *)(v1 + 3839) < 0)
    operator delete(*(void **)(v1 + 3816));
  *(_QWORD *)(v1 + 3760) = v8;
  if (*(char *)(v1 + 3791) < 0)
    operator delete(*(void **)(v1 + 3768));
  *(_QWORD *)(v1 + 3712) = v8;
  if (*(char *)(v1 + 3743) < 0)
    operator delete(*(void **)(v1 + 3720));
  *(_QWORD *)(v1 + 3664) = v8;
  if (*(char *)(v1 + 3695) < 0)
    operator delete(*(void **)(v1 + 3672));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(STACK[0x3D8]);
  *(_QWORD *)(v1 + 3552) = v8;
  if (*(char *)(v1 + 3583) < 0)
    operator delete(*(void **)(v1 + 3560));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(STACK[0x3E0]);
  *(_QWORD *)(v1 + 3440) = v8;
  if (*(char *)(v1 + 3471) < 0)
    operator delete(*(void **)(v1 + 3448));
  *(_QWORD *)(v1 + 3392) = v8;
  if (*(char *)(v1 + 3423) < 0)
    operator delete(*(void **)(v1 + 3400));
  *(_QWORD *)(v1 + 3344) = v8;
  if (*(char *)(v1 + 3375) < 0)
    operator delete(*(void **)(v1 + 3352));
  *(_QWORD *)(v1 + 3296) = v8;
  if (*(char *)(v1 + 3327) < 0)
    operator delete(*(void **)(v1 + 3304));
  *(_QWORD *)(v1 + 3248) = v8;
  if (*(char *)(v1 + 3279) < 0)
    operator delete(*(void **)(v1 + 3256));
  *(_QWORD *)(v1 + 3200) = v8;
  if (*(char *)(v1 + 3231) < 0)
    operator delete(*(void **)(v1 + 3208));
  *(_QWORD *)(v1 + 3152) = v8;
  if (*(char *)(v1 + 3183) < 0)
    operator delete(*(void **)(v1 + 3160));
  *(_QWORD *)(v1 + 3104) = v8;
  if (*(char *)(v1 + 3135) < 0)
    operator delete(*(void **)(v1 + 3112));
  mediaplatform::DatabaseTable<long long,long long,long long,long long,long long,long long,long long,long long,std::string,long long,std::string,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,std::string,std::string,std::string,std::string,std::string,long long,long long,std::string,long long,long long,std::string,std::string,long long,long long,long long,int,std::string,std::string,long long,long long,long long,long long,int,int,std::string,long long,std::string,long long,long long,long long,long long,std::string>::~DatabaseTable(v1);
  _Unwind_Resume((_Unwind_Exception *)STACK[0x438]);
}

void mlcore::ItemStoreTable::~ItemStoreTable(mlcore::ItemStoreTable *this)
{
  *(_QWORD *)this = &off_24C3303D8;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul,6ul,7ul,8ul,9ul,10ul,11ul,12ul,13ul,14ul,15ul,16ul,17ul,18ul,19ul,20ul,21ul,22ul,23ul,24ul,25ul,26ul,27ul,28ul,29ul,30ul,31ul,32ul,33ul,34ul,35ul,36ul,37ul,38ul,39ul,40ul,41ul,42ul,43ul,44ul,45ul,46ul,47ul,48ul,49ul,50ul,51ul,52ul,53ul,54ul,55ul,56ul,57ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>>::~__tuple_impl((uint64_t)this + 3104);
  mediaplatform::DatabaseTable<long long,long long,long long,long long,long long,long long,long long,long long,std::string,long long,std::string,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,std::string,std::string,std::string,std::string,std::string,long long,long long,std::string,long long,long long,std::string,std::string,long long,long long,long long,int,std::string,std::string,long long,long long,long long,long long,int,int,std::string,long long,std::string,long long,long long,long long,long long,std::string>::~DatabaseTable((uint64_t)this);
}

{
  *(_QWORD *)this = &off_24C3303D8;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul,6ul,7ul,8ul,9ul,10ul,11ul,12ul,13ul,14ul,15ul,16ul,17ul,18ul,19ul,20ul,21ul,22ul,23ul,24ul,25ul,26ul,27ul,28ul,29ul,30ul,31ul,32ul,33ul,34ul,35ul,36ul,37ul,38ul,39ul,40ul,41ul,42ul,43ul,44ul,45ul,46ul,47ul,48ul,49ul,50ul,51ul,52ul,53ul,54ul,55ul,56ul,57ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>>::~__tuple_impl((uint64_t)this + 3104);
  mediaplatform::DatabaseTable<long long,long long,long long,long long,long long,long long,long long,long long,std::string,long long,std::string,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,std::string,std::string,std::string,std::string,std::string,long long,long long,std::string,long long,long long,std::string,std::string,long long,long long,long long,int,std::string,std::string,long long,long long,long long,long long,int,int,std::string,long long,std::string,long long,long long,long long,long long,std::string>::~DatabaseTable((uint64_t)this);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mediaplatform::DatabaseTable<long long,long long,long long,long long,long long,long long,long long,long long,std::string,long long,std::string,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,std::string,std::string,std::string,std::string,std::string,long long,long long,std::string,long long,long long,std::string,std::string,long long,long long,long long,int,std::string,std::string,long long,long long,long long,long long,int,int,std::string,long long,std::string,long long,long long,long long,long long,std::string>::columnCount()
{
  return 58;
}

void mediaplatform::DatabaseTable<long long,long long,long long,long long,long long,long long,long long,long long,std::string,long long,std::string,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,std::string,std::string,std::string,std::string,std::string,long long,long long,std::string,long long,long long,std::string,std::string,long long,long long,long long,int,std::string,std::string,long long,long long,long long,long long,int,int,std::string,long long,std::string,long long,long long,long long,long long,std::string>::columnNames(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 3056);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 3008);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 2960);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 2912);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 2864);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 2816);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 2768);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 2720);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 2656);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 2608);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 2544);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 2496);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 2448);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 2400);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 2352);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 2304);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 2256);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 2208);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 2160);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 2112);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 2064);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 2016);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 1968);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 1920);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 1872);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 1824);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 1760);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 1696);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 1632);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 1568);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 1504);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 1456);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 1408);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 1344);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 1296);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 1248);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 1184);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 1120);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 1072);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 1024);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 976);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 928);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 864);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 800);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 752);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 704);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 656);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 608);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 560);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 512);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 448);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 400);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 336);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 288);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 240);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 192);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 144);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 80);
}

void sub_20A876B74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void mediaplatform::DatabaseTable<long long,long long,long long,long long,long long,long long,long long,long long,std::string,long long,std::string,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,std::string,std::string,std::string,std::string,std::string,long long,long long,std::string,long long,long long,std::string,std::string,long long,long long,long long,int,std::string,std::string,long long,long long,long long,long long,int,int,std::string,long long,std::string,long long,long long,long long,long long,std::string>::targetColumnExpression(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __int128 *v3;
  __int128 *v4[3];
  __int128 **v5;

  v3 = (__int128 *)(a1 + 8);
  (*(void (**)(__int128 **__return_ptr))(*(_QWORD *)a1 + 24))(v4);
  std::allocate_shared[abi:ne180100]<mediaplatform::SQLColumnNameExpression,std::allocator<mediaplatform::SQLColumnNameExpression>,std::string &,std::string const&,void>(a2, v4[0], v3);
  v5 = v4;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v5);
}

void sub_20A876BEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul,6ul,7ul,8ul,9ul,10ul,11ul,12ul,13ul,14ul,15ul,16ul,17ul,18ul,19ul,20ul,21ul,22ul,23ul,24ul,25ul,26ul,27ul,28ul,29ul,30ul,31ul,32ul,33ul,34ul,35ul,36ul,37ul,38ul,39ul,40ul,41ul,42ul,43ul,44ul,45ul,46ul,47ul,48ul,49ul,50ul,51ul,52ul,53ul,54ul,55ul,56ul,57ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>>::~__tuple_impl(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 2960);
  *(_QWORD *)(a1 + 2912) = off_24C335D90;
  if (*(char *)(a1 + 2943) < 0)
    operator delete(*(void **)(a1 + 2920));
  *(_QWORD *)(a1 + 2864) = off_24C335D90;
  if (*(char *)(a1 + 2895) < 0)
    operator delete(*(void **)(a1 + 2872));
  *(_QWORD *)(a1 + 2816) = off_24C335D90;
  if (*(char *)(a1 + 2847) < 0)
    operator delete(*(void **)(a1 + 2824));
  *(_QWORD *)(a1 + 2768) = off_24C335D90;
  if (*(char *)(a1 + 2799) < 0)
    operator delete(*(void **)(a1 + 2776));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 2704);
  *(_QWORD *)(a1 + 2656) = off_24C335D90;
  if (*(char *)(a1 + 2687) < 0)
    operator delete(*(void **)(a1 + 2664));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 2592);
  *(_QWORD *)(a1 + 2544) = off_24C335D90;
  if (*(char *)(a1 + 2575) < 0)
    operator delete(*(void **)(a1 + 2552));
  *(_QWORD *)(a1 + 2496) = off_24C335D90;
  if (*(char *)(a1 + 2527) < 0)
    operator delete(*(void **)(a1 + 2504));
  *(_QWORD *)(a1 + 2448) = off_24C335D90;
  if (*(char *)(a1 + 2479) < 0)
    operator delete(*(void **)(a1 + 2456));
  *(_QWORD *)(a1 + 2400) = off_24C335D90;
  if (*(char *)(a1 + 2431) < 0)
    operator delete(*(void **)(a1 + 2408));
  *(_QWORD *)(a1 + 2352) = off_24C335D90;
  if (*(char *)(a1 + 2383) < 0)
    operator delete(*(void **)(a1 + 2360));
  *(_QWORD *)(a1 + 2304) = off_24C335D90;
  if (*(char *)(a1 + 2335) < 0)
    operator delete(*(void **)(a1 + 2312));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 2240);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 2176);
  *(_QWORD *)(a1 + 2128) = off_24C335D90;
  if (*(char *)(a1 + 2159) < 0)
    operator delete(*(void **)(a1 + 2136));
  *(_QWORD *)(a1 + 2080) = off_24C335D90;
  if (*(char *)(a1 + 2111) < 0)
    operator delete(*(void **)(a1 + 2088));
  *(_QWORD *)(a1 + 2032) = off_24C335D90;
  if (*(char *)(a1 + 2063) < 0)
    operator delete(*(void **)(a1 + 2040));
  *(_QWORD *)(a1 + 1984) = off_24C335D90;
  if (*(char *)(a1 + 2015) < 0)
    operator delete(*(void **)(a1 + 1992));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1920);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1856);
  *(_QWORD *)(a1 + 1808) = off_24C335D90;
  if (*(char *)(a1 + 1839) < 0)
    operator delete(*(void **)(a1 + 1816));
  *(_QWORD *)(a1 + 1760) = off_24C335D90;
  if (*(char *)(a1 + 1791) < 0)
    operator delete(*(void **)(a1 + 1768));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1696);
  *(_QWORD *)(a1 + 1648) = off_24C335D90;
  if (*(char *)(a1 + 1679) < 0)
    operator delete(*(void **)(a1 + 1656));
  *(_QWORD *)(a1 + 1600) = off_24C335D90;
  if (*(char *)(a1 + 1631) < 0)
    operator delete(*(void **)(a1 + 1608));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1536);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1472);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1408);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1344);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1280);
  *(_QWORD *)(a1 + 1232) = off_24C335D90;
  if (*(char *)(a1 + 1263) < 0)
    operator delete(*(void **)(a1 + 1240));
  *(_QWORD *)(a1 + 1184) = off_24C335D90;
  if (*(char *)(a1 + 1215) < 0)
    operator delete(*(void **)(a1 + 1192));
  *(_QWORD *)(a1 + 1136) = off_24C335D90;
  if (*(char *)(a1 + 1167) < 0)
    operator delete(*(void **)(a1 + 1144));
  *(_QWORD *)(a1 + 1088) = off_24C335D90;
  if (*(char *)(a1 + 1119) < 0)
    operator delete(*(void **)(a1 + 1096));
  *(_QWORD *)(a1 + 1040) = off_24C335D90;
  if (*(char *)(a1 + 1071) < 0)
    operator delete(*(void **)(a1 + 1048));
  *(_QWORD *)(a1 + 992) = off_24C335D90;
  if (*(char *)(a1 + 1023) < 0)
    operator delete(*(void **)(a1 + 1000));
  *(_QWORD *)(a1 + 944) = off_24C335D90;
  if (*(char *)(a1 + 975) < 0)
    operator delete(*(void **)(a1 + 952));
  *(_QWORD *)(a1 + 896) = off_24C335D90;
  if (*(char *)(a1 + 927) < 0)
    operator delete(*(void **)(a1 + 904));
  *(_QWORD *)(a1 + 848) = off_24C335D90;
  if (*(char *)(a1 + 879) < 0)
    operator delete(*(void **)(a1 + 856));
  *(_QWORD *)(a1 + 800) = off_24C335D90;
  if (*(char *)(a1 + 831) < 0)
    operator delete(*(void **)(a1 + 808));
  *(_QWORD *)(a1 + 752) = off_24C335D90;
  if (*(char *)(a1 + 783) < 0)
    operator delete(*(void **)(a1 + 760));
  *(_QWORD *)(a1 + 704) = off_24C335D90;
  if (*(char *)(a1 + 735) < 0)
    operator delete(*(void **)(a1 + 712));
  *(_QWORD *)(a1 + 656) = off_24C335D90;
  if (*(char *)(a1 + 687) < 0)
    operator delete(*(void **)(a1 + 664));
  *(_QWORD *)(a1 + 608) = off_24C335D90;
  if (*(char *)(a1 + 639) < 0)
    operator delete(*(void **)(a1 + 616));
  *(_QWORD *)(a1 + 560) = off_24C335D90;
  if (*(char *)(a1 + 591) < 0)
    operator delete(*(void **)(a1 + 568));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 496);
  *(_QWORD *)(a1 + 448) = off_24C335D90;
  if (*(char *)(a1 + 479) < 0)
    operator delete(*(void **)(a1 + 456));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 384);
  *(_QWORD *)(a1 + 336) = off_24C335D90;
  if (*(char *)(a1 + 367) < 0)
    operator delete(*(void **)(a1 + 344));
  *(_QWORD *)(a1 + 288) = off_24C335D90;
  if (*(char *)(a1 + 319) < 0)
    operator delete(*(void **)(a1 + 296));
  *(_QWORD *)(a1 + 240) = off_24C335D90;
  if (*(char *)(a1 + 271) < 0)
    operator delete(*(void **)(a1 + 248));
  *(_QWORD *)(a1 + 192) = off_24C335D90;
  if (*(char *)(a1 + 223) < 0)
    operator delete(*(void **)(a1 + 200));
  *(_QWORD *)(a1 + 144) = off_24C335D90;
  if (*(char *)(a1 + 175) < 0)
    operator delete(*(void **)(a1 + 152));
  *(_QWORD *)(a1 + 96) = off_24C335D90;
  if (*(char *)(a1 + 127) < 0)
    operator delete(*(void **)(a1 + 104));
  *(_QWORD *)(a1 + 48) = off_24C335D90;
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  *(_QWORD *)a1 = off_24C335D90;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void mediaplatform::DatabaseTable<long long,long long,long long,long long,long long,long long,long long,long long,std::string,long long,std::string,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,std::string,std::string,std::string,std::string,std::string,long long,long long,std::string,long long,long long,std::string,std::string,long long,long long,long long,int,std::string,std::string,long long,long long,long long,long long,int,int,std::string,long long,std::string,long long,long long,long long,long long,std::string>::~DatabaseTable(uint64_t a1)
{
  *(_QWORD *)a1 = &off_24C3303A0;
  *(_QWORD *)(a1 + 3056) = off_24C335D90;
  if (*(char *)(a1 + 3087) < 0)
    operator delete(*(void **)(a1 + 3064));
  *(_QWORD *)(a1 + 3008) = off_24C335D90;
  if (*(char *)(a1 + 3039) < 0)
    operator delete(*(void **)(a1 + 3016));
  *(_QWORD *)(a1 + 2960) = off_24C335D90;
  if (*(char *)(a1 + 2991) < 0)
    operator delete(*(void **)(a1 + 2968));
  *(_QWORD *)(a1 + 2912) = off_24C335D90;
  if (*(char *)(a1 + 2943) < 0)
    operator delete(*(void **)(a1 + 2920));
  mediaplatform::DatabaseColumnTuple<4ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1 + 80);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
}

{
  mediaplatform::DatabaseTable<long long,long long,long long,long long,long long,long long,long long,long long,std::string,long long,std::string,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,std::string,std::string,std::string,std::string,std::string,long long,long long,std::string,long long,long long,std::string,std::string,long long,long long,long long,int,std::string,std::string,long long,long long,long long,long long,int,int,std::string,long long,std::string,long long,long long,long long,long long,std::string>::~DatabaseTable(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mediaplatform::DatabaseColumnTuple<4ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 2784) = off_24C335D90;
  if (*(char *)(a1 + 2815) < 0)
    operator delete(*(void **)(a1 + 2792));
  *(_QWORD *)(a1 + 2736) = off_24C335D90;
  if (*(char *)(a1 + 2767) < 0)
    operator delete(*(void **)(a1 + 2744));
  *(_QWORD *)(a1 + 2688) = off_24C335D90;
  if (*(char *)(a1 + 2719) < 0)
    operator delete(*(void **)(a1 + 2696));
  *(_QWORD *)(a1 + 2640) = off_24C335D90;
  if (*(char *)(a1 + 2671) < 0)
    operator delete(*(void **)(a1 + 2648));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 2576);
  *(_QWORD *)(a1 + 2528) = off_24C335D90;
  if (*(char *)(a1 + 2559) < 0)
    operator delete(*(void **)(a1 + 2536));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 2464);
  return mediaplatform::DatabaseColumnTuple<11ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<11ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 2416) = off_24C335D90;
  if (*(char *)(a1 + 2447) < 0)
    operator delete(*(void **)(a1 + 2424));
  *(_QWORD *)(a1 + 2368) = off_24C335D90;
  if (*(char *)(a1 + 2399) < 0)
    operator delete(*(void **)(a1 + 2376));
  *(_QWORD *)(a1 + 2320) = off_24C335D90;
  if (*(char *)(a1 + 2351) < 0)
    operator delete(*(void **)(a1 + 2328));
  *(_QWORD *)(a1 + 2272) = off_24C335D90;
  if (*(char *)(a1 + 2303) < 0)
    operator delete(*(void **)(a1 + 2280));
  *(_QWORD *)(a1 + 2224) = off_24C335D90;
  if (*(char *)(a1 + 2255) < 0)
    operator delete(*(void **)(a1 + 2232));
  *(_QWORD *)(a1 + 2176) = off_24C335D90;
  if (*(char *)(a1 + 2207) < 0)
    operator delete(*(void **)(a1 + 2184));
  return mediaplatform::DatabaseColumnTuple<17ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<17ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 2128) = off_24C335D90;
  if (*(char *)(a1 + 2159) < 0)
    operator delete(*(void **)(a1 + 2136));
  *(_QWORD *)(a1 + 2080) = off_24C335D90;
  if (*(char *)(a1 + 2111) < 0)
    operator delete(*(void **)(a1 + 2088));
  *(_QWORD *)(a1 + 2032) = off_24C335D90;
  if (*(char *)(a1 + 2063) < 0)
    operator delete(*(void **)(a1 + 2040));
  *(_QWORD *)(a1 + 1984) = off_24C335D90;
  if (*(char *)(a1 + 2015) < 0)
    operator delete(*(void **)(a1 + 1992));
  *(_QWORD *)(a1 + 1936) = off_24C335D90;
  if (*(char *)(a1 + 1967) < 0)
    operator delete(*(void **)(a1 + 1944));
  *(_QWORD *)(a1 + 1888) = off_24C335D90;
  if (*(char *)(a1 + 1919) < 0)
    operator delete(*(void **)(a1 + 1896));
  return mediaplatform::DatabaseColumnTuple<23ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<23ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 1840) = off_24C335D90;
  if (*(char *)(a1 + 1871) < 0)
    operator delete(*(void **)(a1 + 1848));
  *(_QWORD *)(a1 + 1792) = off_24C335D90;
  if (*(char *)(a1 + 1823) < 0)
    operator delete(*(void **)(a1 + 1800));
  *(_QWORD *)(a1 + 1744) = off_24C335D90;
  if (*(char *)(a1 + 1775) < 0)
    operator delete(*(void **)(a1 + 1752));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1680);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1616);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1552);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1488);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1424);
  return mediaplatform::DatabaseColumnTuple<31ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<31ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 1376) = off_24C335D90;
  if (*(char *)(a1 + 1407) < 0)
    operator delete(*(void **)(a1 + 1384));
  *(_QWORD *)(a1 + 1328) = off_24C335D90;
  if (*(char *)(a1 + 1359) < 0)
    operator delete(*(void **)(a1 + 1336));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1264);
  *(_QWORD *)(a1 + 1216) = off_24C335D90;
  if (*(char *)(a1 + 1247) < 0)
    operator delete(*(void **)(a1 + 1224));
  *(_QWORD *)(a1 + 1168) = off_24C335D90;
  if (*(char *)(a1 + 1199) < 0)
    operator delete(*(void **)(a1 + 1176));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1104);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1040);
  return mediaplatform::DatabaseColumnTuple<38ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<38ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 992) = off_24C335D90;
  if (*(char *)(a1 + 1023) < 0)
    operator delete(*(void **)(a1 + 1000));
  *(_QWORD *)(a1 + 944) = off_24C335D90;
  if (*(char *)(a1 + 975) < 0)
    operator delete(*(void **)(a1 + 952));
  *(_QWORD *)(a1 + 896) = off_24C335D90;
  if (*(char *)(a1 + 927) < 0)
    operator delete(*(void **)(a1 + 904));
  *(_QWORD *)(a1 + 848) = off_24C335D90;
  if (*(char *)(a1 + 879) < 0)
    operator delete(*(void **)(a1 + 856));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 784);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 720);
  *(_QWORD *)(a1 + 672) = off_24C335D90;
  if (*(char *)(a1 + 703) < 0)
    operator delete(*(void **)(a1 + 680));
  return mediaplatform::DatabaseColumnTuple<45ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<45ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 624) = off_24C335D90;
  if (*(char *)(a1 + 655) < 0)
    operator delete(*(void **)(a1 + 632));
  *(_QWORD *)(a1 + 576) = off_24C335D90;
  if (*(char *)(a1 + 607) < 0)
    operator delete(*(void **)(a1 + 584));
  *(_QWORD *)(a1 + 528) = off_24C335D90;
  if (*(char *)(a1 + 559) < 0)
    operator delete(*(void **)(a1 + 536));
  *(_QWORD *)(a1 + 480) = off_24C335D90;
  if (*(char *)(a1 + 511) < 0)
    operator delete(*(void **)(a1 + 488));
  *(_QWORD *)(a1 + 432) = off_24C335D90;
  if (*(char *)(a1 + 463) < 0)
    operator delete(*(void **)(a1 + 440));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 368);
  return mediaplatform::DatabaseColumnTuple<51ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<51ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 320) = off_24C335D90;
  if (*(char *)(a1 + 351) < 0)
    operator delete(*(void **)(a1 + 328));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 256);
  *(_QWORD *)(a1 + 208) = off_24C335D90;
  if (*(char *)(a1 + 239) < 0)
    operator delete(*(void **)(a1 + 216));
  *(_QWORD *)(a1 + 160) = off_24C335D90;
  if (*(char *)(a1 + 191) < 0)
    operator delete(*(void **)(a1 + 168));
  *(_QWORD *)(a1 + 112) = off_24C335D90;
  if (*(char *)(a1 + 143) < 0)
    operator delete(*(void **)(a1 + 120));
  *(_QWORD *)(a1 + 64) = off_24C335D90;
  if (*(char *)(a1 + 95) < 0)
    operator delete(*(void **)(a1 + 72));
  return mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1);
}

void mlcore::MediaTable<long long,long long,long long,long long,long long,long long,long long,long long,std::string,long long,std::string,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,std::string,std::string,std::string,std::string,std::string,long long,long long,std::string,long long,long long,std::string,std::string,long long,long long,long long,int,std::string,std::string,long long,long long,long long,long long,int,int,std::string,long long,std::string,long long,long long,long long,long long,std::string>::~MediaTable(_QWORD *a1)
{
  *a1 = &off_24C3303D8;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul,6ul,7ul,8ul,9ul,10ul,11ul,12ul,13ul,14ul,15ul,16ul,17ul,18ul,19ul,20ul,21ul,22ul,23ul,24ul,25ul,26ul,27ul,28ul,29ul,30ul,31ul,32ul,33ul,34ul,35ul,36ul,37ul,38ul,39ul,40ul,41ul,42ul,43ul,44ul,45ul,46ul,47ul,48ul,49ul,50ul,51ul,52ul,53ul,54ul,55ul,56ul,57ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>>::~__tuple_impl((uint64_t)(a1 + 388));
  mediaplatform::DatabaseTable<long long,long long,long long,long long,long long,long long,long long,long long,std::string,long long,std::string,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,std::string,std::string,std::string,std::string,std::string,long long,long long,std::string,long long,long long,std::string,std::string,long long,long long,long long,int,std::string,std::string,long long,long long,long long,long long,int,int,std::string,long long,std::string,long long,long long,long long,long long,std::string>::~DatabaseTable((uint64_t)a1);
}

{
  *a1 = &off_24C3303D8;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul,6ul,7ul,8ul,9ul,10ul,11ul,12ul,13ul,14ul,15ul,16ul,17ul,18ul,19ul,20ul,21ul,22ul,23ul,24ul,25ul,26ul,27ul,28ul,29ul,30ul,31ul,32ul,33ul,34ul,35ul,36ul,37ul,38ul,39ul,40ul,41ul,42ul,43ul,44ul,45ul,46ul,47ul,48ul,49ul,50ul,51ul,52ul,53ul,54ul,55ul,56ul,57ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>>::~__tuple_impl((uint64_t)(a1 + 388));
  mediaplatform::DatabaseTable<long long,long long,long long,long long,long long,long long,long long,long long,std::string,long long,std::string,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,std::string,std::string,std::string,std::string,std::string,long long,long long,std::string,long long,long long,std::string,std::string,long long,long long,long long,int,std::string,std::string,long long,long long,long long,long long,int,int,std::string,long long,std::string,long long,long long,long long,long long,std::string>::~DatabaseTable((uint64_t)a1);
  JUMPOUT(0x20BD27AFCLL);
}

_QWORD *mediaplatform::DatabaseTable<long long,long long,long long,long long,long long,long long,long long,long long,std::string,long long,std::string,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,long long,std::string,std::string,std::string,std::string,std::string,long long,long long,std::string,long long,long long,std::string,std::string,long long,long long,long long,int,std::string,std::string,long long,long long,long long,long long,int,int,std::string,long long,std::string,long long,long long,long long,long long,std::string>::DatabaseTable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  _QWORD *v60;
  __int128 *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  std::string *v74;
  __int128 v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  std::string *v160;
  int v161;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  _QWORD *v174;
  uint64_t (**v175)();
  std::string v176;
  int v177;
  char v178;
  std::string v179;
  uint64_t (**v180)();
  std::string v181;
  int v182;
  uint64_t v183;
  int v184;
  uint64_t (**v185)();
  std::string v186;
  int v187;
  uint64_t v188;
  int v189;
  uint64_t (**v190)();
  std::string v191;
  int v192;
  uint64_t v193;
  int v194;
  uint64_t (**v195)();
  std::string v196;
  int v197;
  uint64_t v198;
  int v199;
  uint64_t (**v200)();
  std::string v201;
  int v202;
  char v203;
  std::string v204;
  uint64_t (**v205)();
  std::string v206;
  int v207;
  uint64_t v208;
  int v209;
  uint64_t (**v210)();
  std::string v211;
  int v212;
  char v213;
  std::string v214;
  uint64_t (**v215)();
  std::string v216;
  int v217;
  uint64_t v218;
  uint64_t (**v219)();
  std::string v220;
  int v221;
  uint64_t v222;
  uint64_t (**v223)();
  std::string v224;
  int v225;
  uint64_t v226;
  int v227;
  uint64_t (**v228)();
  std::string v229;
  int v230;
  uint64_t v231;
  int v232;
  uint64_t (**v233)();
  std::string v234;
  int v235;
  uint64_t v236;
  int v237;
  uint64_t (**v238)();
  std::string v239;
  int v240;
  uint64_t v241;
  int v242;
  uint64_t (**v243)();
  std::string v244;
  int v245;
  char v246;
  std::string v247;
  uint64_t (**v248)();
  std::string v249;
  int v250;
  char v251;
  std::string v252;
  uint64_t (**v253)();
  std::string v254;
  int v255;
  uint64_t v256;
  uint64_t (**v257)();
  std::string v258;
  int v259;
  uint64_t v260;
  int v261;
  uint64_t (**v262)();
  std::string v263;
  int v264;
  uint64_t v265;
  int v266;
  uint64_t (**v267)();
  std::string v268;
  int v269;
  uint64_t v270;
  int v271;
  uint64_t (**v272)();
  std::string v273;
  int v274;
  char v275;
  std::string v276;
  uint64_t (**v277)();
  std::string v278;
  int v279;
  char v280;
  std::string v281;
  uint64_t (**v282)();
  std::string v283;
  int v284;
  uint64_t v285;
  int v286;
  uint64_t (**v287)();
  std::string v288;
  int v289;
  uint64_t v290;
  int v291;
  uint64_t (**v292)();
  std::string v293;
  int v294;
  char v295;
  std::string v296;
  uint64_t (**v297)();
  std::string v298;
  int v299;
  uint64_t v300;
  int v301;
  uint64_t (**v302)();
  std::string v303;
  int v304;
  uint64_t v305;
  int v306;
  uint64_t (**v307)();
  std::string v308;
  int v309;
  char v310;
  std::string v311;
  uint64_t (**v312)();
  std::string v313;
  int v314;
  char v315;
  std::string v316;
  uint64_t (**v317)();
  std::string v318;
  int v319;
  char v320;
  std::string v321;
  uint64_t (**v322)();
  std::string v323;
  int v324;
  char v325;
  std::string v326;
  uint64_t (**v327)();
  std::string v328;
  int v329;
  char v330;
  std::string v331;
  uint64_t (**v332)();
  std::string v333;
  int v334;
  uint64_t v335;
  int v336;
  uint64_t (**v337)();
  std::string v338;
  int v339;
  uint64_t v340;
  int v341;
  uint64_t (**v342)();
  std::string v343;
  int v344;
  uint64_t v345;
  int v346;
  uint64_t (**v347)();
  std::string v348;
  int v349;
  uint64_t v350;
  int v351;
  uint64_t (**v352)();
  std::string v353;
  int v354;
  uint64_t v355;
  int v356;
  uint64_t (**v357)();
  std::string v358;
  int v359;
  uint64_t v360;
  int v361;
  uint64_t (**v362)();
  std::string v363;
  int v364;
  uint64_t v365;
  int v366;
  uint64_t (**v367)();
  std::string v368;
  int v369;
  uint64_t v370;
  int v371;
  uint64_t (**v372)();
  std::string v373;
  int v374;
  uint64_t v375;
  int v376;
  uint64_t (**v377)();
  std::string v378;
  int v379;
  uint64_t v380;
  int v381;
  uint64_t (**v382)();
  std::string v383;
  int v384;
  uint64_t v385;
  int v386;
  uint64_t (**v387)();
  std::string v388;
  int v389;
  uint64_t v390;
  int v391;
  uint64_t (**v392)();
  std::string v393;
  int v394;
  uint64_t v395;
  int v396;
  uint64_t (**v397)();
  std::string v398;
  int v399;
  uint64_t v400;
  int v401;
  uint64_t (**v402)();
  std::string v403;
  int v404;
  uint64_t v405;
  int v406;
  uint64_t (**v407)();
  std::string v408;
  int v409;
  char v410;
  std::string v411;
  uint64_t (**v412)();
  std::string v413;
  int v414;
  uint64_t v415;
  int v416;
  uint64_t (**v417)();
  std::string v418;
  int v419;
  char v420;
  std::string v421;
  uint64_t (**v422)();
  std::string v423;
  int v424;
  uint64_t v425;
  int v426;
  uint64_t (**v427)();
  std::string v428;
  int v429;
  uint64_t v430;
  int v431;
  uint64_t (**v432)();
  std::string v433;
  int v434;
  uint64_t v435;
  int v436;
  uint64_t (**v437)();
  std::string v438;
  int v439;
  uint64_t v440;
  int v441;
  uint64_t (**v442)();
  std::string v443;
  int v444;
  uint64_t v445;
  int v446;
  uint64_t (**v447)();
  std::string v448;
  int v449;
  uint64_t v450;
  int v451;
  uint64_t (**v452)();
  std::string __s;
  int v454;
  uint64_t v455;
  int v456;
  uint64_t (**v457)();
  std::string v458;
  int v459;
  uint64_t v460;
  int v461;
  uint64_t (**v462)();
  std::string v463;
  int v464;
  char v465;
  std::string v466;
  uint64_t (**v467)();
  std::string __p;
  int v469;
  uint64_t v470;
  int v471;
  uint64_t (**v472)();
  std::string v473;
  int v474;
  uint64_t v475;
  int v476;
  uint64_t (**v477)();
  std::string v478;
  int v479;
  uint64_t v480;
  int v481;
  uint64_t (**v482)();
  std::string v483;
  int v484;
  uint64_t v485;
  int v486;
  uint64_t (**v487)();
  std::string v488;
  int v489;
  char v490;
  std::string v491;
  uint64_t (**v492)();
  std::string v493;
  int v494;
  uint64_t v495;
  int v496;
  uint64_t (**v497)();
  std::string v498;
  int v499;
  char v500;
  std::string v501;
  uint64_t (**v502)();
  std::string v503;
  int v504;
  uint64_t v505;
  uint64_t (**v506)();
  std::string v507;
  int v508;
  uint64_t v509;
  uint64_t (**v510)();
  std::string v511;
  int v512;
  uint64_t v513;
  int v514;
  uint64_t (**v515)();
  std::string v516;
  int v517;
  uint64_t v518;
  int v519;
  uint64_t (**v520)();
  std::string v521;
  int v522;
  uint64_t v523;
  int v524;
  uint64_t (**v525)();
  std::string v526;
  int v527;
  uint64_t v528;
  int v529;
  uint64_t (**v530)();
  std::string v531;
  int v532;
  char v533;
  std::string v534;
  uint64_t (**v535)();
  std::string v536;
  int v537;
  char v538;
  std::string v539;
  uint64_t (**v540)();
  std::string v541;
  int v542;
  uint64_t v543;
  uint64_t (**v544)();
  std::string v545;
  int v546;
  uint64_t v547;
  int v548;
  uint64_t (**v549)();
  std::string v550;
  int v551;
  uint64_t v552;
  int v553;
  uint64_t (**v554)();
  std::string v555;
  int v556;
  uint64_t v557;
  int v558;
  uint64_t (**v559)();
  std::string v560;
  int v561;
  char v562;
  std::string v563;
  uint64_t (**v564)();
  std::string v565;
  int v566;
  char v567;
  std::string v568;
  uint64_t (**v569)();
  std::string v570;
  int v571;
  uint64_t v572;
  int v573;
  uint64_t (**v574)();
  std::string v575;
  int v576;
  uint64_t v577;
  int v578;
  uint64_t (**v579)();
  std::string v580;
  int v581;
  char v582;
  std::string v583;
  uint64_t (**v584)();
  std::string v585;
  int v586;
  uint64_t v587;
  int v588;
  uint64_t (**v589)();
  std::string v590;
  int v591;
  uint64_t v592;
  int v593;
  uint64_t (**v594)();
  std::string v595;
  int v596;
  char v597;
  std::string v598;
  uint64_t (**v599)();
  std::string v600;
  int v601;
  char v602;
  std::string v603;
  uint64_t (**v604)();
  std::string v605;
  int v606;
  char v607;
  std::string v608;
  uint64_t (**v609)();
  std::string v610;
  int v611;
  char v612;
  std::string v613;
  uint64_t (**v614)();
  std::string v615;
  int v616;
  char v617;
  std::string v618;
  uint64_t (**v619)();
  std::string v620;
  int v621;
  uint64_t v622;
  int v623;
  uint64_t (**v624)();
  std::string v625;
  int v626;
  uint64_t v627;
  int v628;
  uint64_t (**v629)();
  std::string v630;
  int v631;
  uint64_t v632;
  int v633;
  uint64_t (**v634)();
  std::string v635;
  int v636;
  uint64_t v637;
  int v638;
  uint64_t (**v639)();
  std::string v640;
  int v641;
  uint64_t v642;
  int v643;
  uint64_t (**v644)();
  std::string v645;
  int v646;
  uint64_t v647;
  int v648;
  uint64_t (**v649)();
  std::string v650;
  int v651;
  uint64_t v652;
  int v653;
  uint64_t (**v654)();
  std::string v655;
  int v656;
  uint64_t v657;
  int v658;
  uint64_t (**v659)();
  std::string v660;
  int v661;
  uint64_t v662;
  int v663;
  uint64_t (**v664)();
  std::string v665;
  int v666;
  uint64_t v667;
  int v668;
  uint64_t (**v669)();
  std::string v670;
  int v671;
  uint64_t v672;
  int v673;
  uint64_t (**v674)();
  std::string v675;
  int v676;
  uint64_t v677;
  int v678;
  uint64_t (**v679)();
  std::string v680;
  int v681;
  uint64_t v682;
  int v683;
  uint64_t (**v684)();
  std::string v685;
  int v686;
  uint64_t v687;
  int v688;
  uint64_t (**v689)();
  std::string v690;
  int v691;
  uint64_t v692;
  int v693;
  uint64_t (**v694)();
  std::string v695;
  int v696;
  char v697;
  std::string v698;
  uint64_t (**v699)();
  std::string v700;
  int v701;
  uint64_t v702;
  int v703;
  uint64_t (**v704)();
  std::string v705;
  int v706;
  char v707;
  std::string v708;
  uint64_t (**v709)();
  std::string v710;
  int v711;
  uint64_t v712;
  int v713;
  uint64_t (**v714)();
  std::string v715;
  int v716;
  uint64_t v717;
  int v718;
  uint64_t (**v719)();
  std::string v720;
  int v721;
  uint64_t v722;
  int v723;
  uint64_t (**v724)();
  std::string v725;
  int v726;
  uint64_t v727;
  int v728;
  uint64_t (**v729)();
  std::string v730;
  int v731;
  uint64_t v732;
  int v733;
  uint64_t (**v734)();
  std::string v735;
  int v736;
  uint64_t v737;
  int v738;
  uint64_t (**v739)();
  std::string v740;
  int v741;
  uint64_t v742;
  int v743;

  v60 = (_QWORD *)MEMORY[0x24BDAC7A8](a1);
  v63 = v62;
  v65 = v64;
  v67 = v66;
  v69 = v68;
  v71 = v70;
  v73 = v72;
  v174 = v60;
  *v60 = &off_24C330F50;
  v74 = (std::string *)(v60 + 1);
  if (*((char *)v61 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v74, *(const std::string::value_type **)v61, *((_QWORD *)v61 + 1));
  }
  else
  {
    v75 = *v61;
    v74->__r_.__value_.__r.__words[2] = *((_QWORD *)v61 + 2);
    *(_OWORD *)&v74->__r_.__value_.__l.__data_ = v75;
  }
  v174[4] = 0;
  v174[5] = 0;
  v174[6] = 0;
  v174[7] = 0;
  *v174 = &off_24C3303A0;
  v174[8] = 0;
  v174[9] = 0;
  if (*(char *)(v73 + 31) < 0)
    std::string::__init_copy_ctor_external(&v458, *(const std::string::value_type **)(v73 + 8), *(_QWORD *)(v73 + 16));
  else
    v458 = *(std::string *)(v73 + 8);
  v76 = *(_DWORD *)(v73 + 32);
  v457 = off_24C335B18;
  v460 = *(_QWORD *)(v73 + 36);
  v77 = *(_DWORD *)(v73 + 44);
  v459 = v76;
  v461 = v77;
  if (*(char *)(v71 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(v71 + 8), *(_QWORD *)(v71 + 16));
  else
    __s = *(std::string *)(v71 + 8);
  v78 = *(_DWORD *)(v71 + 32);
  v452 = off_24C335B18;
  v455 = *(_QWORD *)(v71 + 36);
  v79 = *(_DWORD *)(v71 + 44);
  v454 = v78;
  v456 = v79;
  if (*(char *)(v69 + 31) < 0)
    std::string::__init_copy_ctor_external(&v448, *(const std::string::value_type **)(v69 + 8), *(_QWORD *)(v69 + 16));
  else
    v448 = *(std::string *)(v69 + 8);
  v80 = *(_DWORD *)(v69 + 32);
  v447 = off_24C335B18;
  v450 = *(_QWORD *)(v69 + 36);
  v81 = *(_DWORD *)(v69 + 44);
  v449 = v80;
  v451 = v81;
  if (*(char *)(v67 + 31) < 0)
    std::string::__init_copy_ctor_external(&v443, *(const std::string::value_type **)(v67 + 8), *(_QWORD *)(v67 + 16));
  else
    v443 = *(std::string *)(v67 + 8);
  v82 = *(_DWORD *)(v67 + 32);
  v442 = off_24C335B18;
  v445 = *(_QWORD *)(v67 + 36);
  v83 = *(_DWORD *)(v67 + 44);
  v444 = v82;
  v446 = v83;
  if (*(char *)(v65 + 31) < 0)
    std::string::__init_copy_ctor_external(&v438, *(const std::string::value_type **)(v65 + 8), *(_QWORD *)(v65 + 16));
  else
    v438 = *(std::string *)(v65 + 8);
  v84 = *(_DWORD *)(v65 + 32);
  v437 = off_24C335B18;
  v440 = *(_QWORD *)(v65 + 36);
  v85 = *(_DWORD *)(v65 + 44);
  v439 = v84;
  v441 = v85;
  if (*(char *)(v63 + 31) < 0)
    std::string::__init_copy_ctor_external(&v433, *(const std::string::value_type **)(v63 + 8), *(_QWORD *)(v63 + 16));
  else
    v433 = *(std::string *)(v63 + 8);
  v86 = *(_DWORD *)(v63 + 32);
  v432 = off_24C335B18;
  v435 = *(_QWORD *)(v63 + 36);
  v87 = *(_DWORD *)(v63 + 44);
  v434 = v86;
  v436 = v87;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v428, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v428 = *(std::string *)(a9 + 8);
  v88 = *(_DWORD *)(a9 + 32);
  v427 = off_24C335B18;
  v430 = *(_QWORD *)(a9 + 36);
  v89 = *(_DWORD *)(a9 + 44);
  v429 = v88;
  v431 = v89;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v423, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v423 = *(std::string *)(a10 + 8);
  v90 = *(_DWORD *)(a10 + 32);
  v422 = off_24C335B18;
  v425 = *(_QWORD *)(a10 + 36);
  v91 = *(_DWORD *)(a10 + 44);
  v424 = v90;
  v426 = v91;
  v417 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v418, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v418 = *(std::string *)(a11 + 8);
  v419 = *(_DWORD *)(a11 + 32);
  v417 = &off_24C335AB8;
  v420 = *(_BYTE *)(a11 + 36);
  if (*(char *)(a11 + 63) < 0)
    std::string::__init_copy_ctor_external(&v421, *(const std::string::value_type **)(a11 + 40), *(_QWORD *)(a11 + 48));
  else
    v421 = *(std::string *)(a11 + 40);
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v413, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v413 = *(std::string *)(a12 + 8);
  v92 = *(_DWORD *)(a12 + 32);
  v412 = off_24C335B18;
  v415 = *(_QWORD *)(a12 + 36);
  v93 = *(_DWORD *)(a12 + 44);
  v414 = v92;
  v416 = v93;
  v407 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v408, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v408 = *(std::string *)(a13 + 8);
  v409 = *(_DWORD *)(a13 + 32);
  v407 = &off_24C335AB8;
  v410 = *(_BYTE *)(a13 + 36);
  if (*(char *)(a13 + 63) < 0)
    std::string::__init_copy_ctor_external(&v411, *(const std::string::value_type **)(a13 + 40), *(_QWORD *)(a13 + 48));
  else
    v411 = *(std::string *)(a13 + 40);
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v403, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v403 = *(std::string *)(a14 + 8);
  v94 = *(_DWORD *)(a14 + 32);
  v402 = off_24C335B18;
  v405 = *(_QWORD *)(a14 + 36);
  v95 = *(_DWORD *)(a14 + 44);
  v404 = v94;
  v406 = v95;
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v398, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v398 = *(std::string *)(a15 + 8);
  v96 = *(_DWORD *)(a15 + 32);
  v397 = off_24C335B18;
  v400 = *(_QWORD *)(a15 + 36);
  v97 = *(_DWORD *)(a15 + 44);
  v399 = v96;
  v401 = v97;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v393, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v393 = *(std::string *)(a16 + 8);
  v98 = *(_DWORD *)(a16 + 32);
  v392 = off_24C335B18;
  v395 = *(_QWORD *)(a16 + 36);
  v99 = *(_DWORD *)(a16 + 44);
  v394 = v98;
  v396 = v99;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v388, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v388 = *(std::string *)(a17 + 8);
  v100 = *(_DWORD *)(a17 + 32);
  v387 = off_24C335B18;
  v390 = *(_QWORD *)(a17 + 36);
  v101 = *(_DWORD *)(a17 + 44);
  v389 = v100;
  v391 = v101;
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v383, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v383 = *(std::string *)(a18 + 8);
  v102 = *(_DWORD *)(a18 + 32);
  v382 = off_24C335B18;
  v385 = *(_QWORD *)(a18 + 36);
  v103 = *(_DWORD *)(a18 + 44);
  v384 = v102;
  v386 = v103;
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v378, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v378 = *(std::string *)(a19 + 8);
  v104 = *(_DWORD *)(a19 + 32);
  v377 = off_24C335B18;
  v380 = *(_QWORD *)(a19 + 36);
  v105 = *(_DWORD *)(a19 + 44);
  v379 = v104;
  v381 = v105;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v373, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v373 = *(std::string *)(a20 + 8);
  v106 = *(_DWORD *)(a20 + 32);
  v372 = off_24C335B18;
  v375 = *(_QWORD *)(a20 + 36);
  v107 = *(_DWORD *)(a20 + 44);
  v374 = v106;
  v376 = v107;
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v368, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v368 = *(std::string *)(a21 + 8);
  v108 = *(_DWORD *)(a21 + 32);
  v367 = off_24C335B18;
  v370 = *(_QWORD *)(a21 + 36);
  v109 = *(_DWORD *)(a21 + 44);
  v369 = v108;
  v371 = v109;
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v363, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v363 = *(std::string *)(a22 + 8);
  v110 = *(_DWORD *)(a22 + 32);
  v362 = off_24C335B18;
  v365 = *(_QWORD *)(a22 + 36);
  v111 = *(_DWORD *)(a22 + 44);
  v364 = v110;
  v366 = v111;
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v358, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v358 = *(std::string *)(a23 + 8);
  v112 = *(_DWORD *)(a23 + 32);
  v357 = off_24C335B18;
  v360 = *(_QWORD *)(a23 + 36);
  v113 = *(_DWORD *)(a23 + 44);
  v359 = v112;
  v361 = v113;
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v353, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v353 = *(std::string *)(a24 + 8);
  v114 = *(_DWORD *)(a24 + 32);
  v352 = off_24C335B18;
  v355 = *(_QWORD *)(a24 + 36);
  v115 = *(_DWORD *)(a24 + 44);
  v354 = v114;
  v356 = v115;
  if (*(char *)(a25 + 31) < 0)
    std::string::__init_copy_ctor_external(&v348, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  else
    v348 = *(std::string *)(a25 + 8);
  v116 = *(_DWORD *)(a25 + 32);
  v347 = off_24C335B18;
  v350 = *(_QWORD *)(a25 + 36);
  v117 = *(_DWORD *)(a25 + 44);
  v349 = v116;
  v351 = v117;
  if (*(char *)(a26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v343, *(const std::string::value_type **)(a26 + 8), *(_QWORD *)(a26 + 16));
  else
    v343 = *(std::string *)(a26 + 8);
  v118 = *(_DWORD *)(a26 + 32);
  v342 = off_24C335B18;
  v345 = *(_QWORD *)(a26 + 36);
  v119 = *(_DWORD *)(a26 + 44);
  v344 = v118;
  v346 = v119;
  if (*(char *)(a27 + 31) < 0)
    std::string::__init_copy_ctor_external(&v338, *(const std::string::value_type **)(a27 + 8), *(_QWORD *)(a27 + 16));
  else
    v338 = *(std::string *)(a27 + 8);
  v120 = *(_DWORD *)(a27 + 32);
  v337 = off_24C335B18;
  v340 = *(_QWORD *)(a27 + 36);
  v121 = *(_DWORD *)(a27 + 44);
  v339 = v120;
  v341 = v121;
  if (*(char *)(a28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v333, *(const std::string::value_type **)(a28 + 8), *(_QWORD *)(a28 + 16));
  else
    v333 = *(std::string *)(a28 + 8);
  v122 = *(_DWORD *)(a28 + 32);
  v332 = off_24C335B18;
  v335 = *(_QWORD *)(a28 + 36);
  v123 = *(_DWORD *)(a28 + 44);
  v334 = v122;
  v336 = v123;
  v327 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a29 + 31) < 0)
    std::string::__init_copy_ctor_external(&v328, *(const std::string::value_type **)(a29 + 8), *(_QWORD *)(a29 + 16));
  else
    v328 = *(std::string *)(a29 + 8);
  v329 = *(_DWORD *)(a29 + 32);
  v327 = &off_24C335AB8;
  v330 = *(_BYTE *)(a29 + 36);
  if (*(char *)(a29 + 63) < 0)
    std::string::__init_copy_ctor_external(&v331, *(const std::string::value_type **)(a29 + 40), *(_QWORD *)(a29 + 48));
  else
    v331 = *(std::string *)(a29 + 40);
  v322 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v323, *(const std::string::value_type **)(a30 + 8), *(_QWORD *)(a30 + 16));
  else
    v323 = *(std::string *)(a30 + 8);
  v324 = *(_DWORD *)(a30 + 32);
  v322 = &off_24C335AB8;
  v325 = *(_BYTE *)(a30 + 36);
  if (*(char *)(a30 + 63) < 0)
    std::string::__init_copy_ctor_external(&v326, *(const std::string::value_type **)(a30 + 40), *(_QWORD *)(a30 + 48));
  else
    v326 = *(std::string *)(a30 + 40);
  v317 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a31 + 31) < 0)
    std::string::__init_copy_ctor_external(&v318, *(const std::string::value_type **)(a31 + 8), *(_QWORD *)(a31 + 16));
  else
    v318 = *(std::string *)(a31 + 8);
  v319 = *(_DWORD *)(a31 + 32);
  v317 = &off_24C335AB8;
  v320 = *(_BYTE *)(a31 + 36);
  if (*(char *)(a31 + 63) < 0)
    std::string::__init_copy_ctor_external(&v321, *(const std::string::value_type **)(a31 + 40), *(_QWORD *)(a31 + 48));
  else
    v321 = *(std::string *)(a31 + 40);
  v312 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a32 + 31) < 0)
    std::string::__init_copy_ctor_external(&v313, *(const std::string::value_type **)(a32 + 8), *(_QWORD *)(a32 + 16));
  else
    v313 = *(std::string *)(a32 + 8);
  v314 = *(_DWORD *)(a32 + 32);
  v312 = &off_24C335AB8;
  v315 = *(_BYTE *)(a32 + 36);
  if (*(char *)(a32 + 63) < 0)
    std::string::__init_copy_ctor_external(&v316, *(const std::string::value_type **)(a32 + 40), *(_QWORD *)(a32 + 48));
  else
    v316 = *(std::string *)(a32 + 40);
  v307 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a33 + 31) < 0)
    std::string::__init_copy_ctor_external(&v308, *(const std::string::value_type **)(a33 + 8), *(_QWORD *)(a33 + 16));
  else
    v308 = *(std::string *)(a33 + 8);
  v309 = *(_DWORD *)(a33 + 32);
  v307 = &off_24C335AB8;
  v310 = *(_BYTE *)(a33 + 36);
  if (*(char *)(a33 + 63) < 0)
    std::string::__init_copy_ctor_external(&v311, *(const std::string::value_type **)(a33 + 40), *(_QWORD *)(a33 + 48));
  else
    v311 = *(std::string *)(a33 + 40);
  if (*(char *)(a34 + 31) < 0)
    std::string::__init_copy_ctor_external(&v303, *(const std::string::value_type **)(a34 + 8), *(_QWORD *)(a34 + 16));
  else
    v303 = *(std::string *)(a34 + 8);
  v124 = *(_DWORD *)(a34 + 32);
  v302 = off_24C335B18;
  v305 = *(_QWORD *)(a34 + 36);
  v125 = *(_DWORD *)(a34 + 44);
  v304 = v124;
  v306 = v125;
  v297 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a35 + 31) < 0)
    std::string::__init_copy_ctor_external(&v298, *(const std::string::value_type **)(a35 + 8), *(_QWORD *)(a35 + 16));
  else
    v298 = *(std::string *)(a35 + 8);
  v126 = *(_DWORD *)(a35 + 32);
  v297 = off_24C335B18;
  v300 = *(_QWORD *)(a35 + 36);
  v127 = *(_DWORD *)(a35 + 44);
  v299 = v126;
  v301 = v127;
  v292 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a36 + 31) < 0)
    std::string::__init_copy_ctor_external(&v293, *(const std::string::value_type **)(a36 + 8), *(_QWORD *)(a36 + 16));
  else
    v293 = *(std::string *)(a36 + 8);
  v294 = *(_DWORD *)(a36 + 32);
  v292 = &off_24C335AB8;
  v295 = *(_BYTE *)(a36 + 36);
  if (*(char *)(a36 + 63) < 0)
    std::string::__init_copy_ctor_external(&v296, *(const std::string::value_type **)(a36 + 40), *(_QWORD *)(a36 + 48));
  else
    v296 = *(std::string *)(a36 + 40);
  v287 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a37 + 31) < 0)
    std::string::__init_copy_ctor_external(&v288, *(const std::string::value_type **)(a37 + 8), *(_QWORD *)(a37 + 16));
  else
    v288 = *(std::string *)(a37 + 8);
  v128 = *(_DWORD *)(a37 + 32);
  v287 = off_24C335B18;
  v290 = *(_QWORD *)(a37 + 36);
  v129 = *(_DWORD *)(a37 + 44);
  v289 = v128;
  v291 = v129;
  v282 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a38 + 31) < 0)
    std::string::__init_copy_ctor_external(&v283, *(const std::string::value_type **)(a38 + 8), *(_QWORD *)(a38 + 16));
  else
    v283 = *(std::string *)(a38 + 8);
  v130 = *(_DWORD *)(a38 + 32);
  v282 = off_24C335B18;
  v285 = *(_QWORD *)(a38 + 36);
  v131 = *(_DWORD *)(a38 + 44);
  v284 = v130;
  v286 = v131;
  v277 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a39 + 31) < 0)
    std::string::__init_copy_ctor_external(&v278, *(const std::string::value_type **)(a39 + 8), *(_QWORD *)(a39 + 16));
  else
    v278 = *(std::string *)(a39 + 8);
  v279 = *(_DWORD *)(a39 + 32);
  v277 = &off_24C335AB8;
  v280 = *(_BYTE *)(a39 + 36);
  if (*(char *)(a39 + 63) < 0)
    std::string::__init_copy_ctor_external(&v281, *(const std::string::value_type **)(a39 + 40), *(_QWORD *)(a39 + 48));
  else
    v281 = *(std::string *)(a39 + 40);
  v272 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a40 + 31) < 0)
    std::string::__init_copy_ctor_external(&v273, *(const std::string::value_type **)(a40 + 8), *(_QWORD *)(a40 + 16));
  else
    v273 = *(std::string *)(a40 + 8);
  v274 = *(_DWORD *)(a40 + 32);
  v272 = &off_24C335AB8;
  v275 = *(_BYTE *)(a40 + 36);
  if (*(char *)(a40 + 63) < 0)
    std::string::__init_copy_ctor_external(&v276, *(const std::string::value_type **)(a40 + 40), *(_QWORD *)(a40 + 48));
  else
    v276 = *(std::string *)(a40 + 40);
  v267 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a41 + 31) < 0)
    std::string::__init_copy_ctor_external(&v268, *(const std::string::value_type **)(a41 + 8), *(_QWORD *)(a41 + 16));
  else
    v268 = *(std::string *)(a41 + 8);
  v132 = *(_DWORD *)(a41 + 32);
  v267 = off_24C335B18;
  v270 = *(_QWORD *)(a41 + 36);
  v133 = *(_DWORD *)(a41 + 44);
  v269 = v132;
  v271 = v133;
  v262 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a42 + 31) < 0)
    std::string::__init_copy_ctor_external(&v263, *(const std::string::value_type **)(a42 + 8), *(_QWORD *)(a42 + 16));
  else
    v263 = *(std::string *)(a42 + 8);
  v134 = *(_DWORD *)(a42 + 32);
  v262 = off_24C335B18;
  v265 = *(_QWORD *)(a42 + 36);
  v135 = *(_DWORD *)(a42 + 44);
  v264 = v134;
  v266 = v135;
  v257 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a43 + 31) < 0)
    std::string::__init_copy_ctor_external(&v258, *(const std::string::value_type **)(a43 + 8), *(_QWORD *)(a43 + 16));
  else
    v258 = *(std::string *)(a43 + 8);
  v136 = *(_DWORD *)(a43 + 32);
  v257 = off_24C335B18;
  v260 = *(_QWORD *)(a43 + 36);
  v137 = *(_DWORD *)(a43 + 44);
  v259 = v136;
  v261 = v137;
  v253 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a44 + 31) < 0)
    std::string::__init_copy_ctor_external(&v254, *(const std::string::value_type **)(a44 + 8), *(_QWORD *)(a44 + 16));
  else
    v254 = *(std::string *)(a44 + 8);
  v255 = *(_DWORD *)(a44 + 32);
  v253 = off_24C335AF8;
  v256 = *(_QWORD *)(a44 + 36);
  v248 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a45 + 31) < 0)
    std::string::__init_copy_ctor_external(&v249, *(const std::string::value_type **)(a45 + 8), *(_QWORD *)(a45 + 16));
  else
    v249 = *(std::string *)(a45 + 8);
  v250 = *(_DWORD *)(a45 + 32);
  v248 = &off_24C335AB8;
  v251 = *(_BYTE *)(a45 + 36);
  if (*(char *)(a45 + 63) < 0)
    std::string::__init_copy_ctor_external(&v252, *(const std::string::value_type **)(a45 + 40), *(_QWORD *)(a45 + 48));
  else
    v252 = *(std::string *)(a45 + 40);
  v243 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a46 + 31) < 0)
    std::string::__init_copy_ctor_external(&v244, *(const std::string::value_type **)(a46 + 8), *(_QWORD *)(a46 + 16));
  else
    v244 = *(std::string *)(a46 + 8);
  v245 = *(_DWORD *)(a46 + 32);
  v243 = &off_24C335AB8;
  v246 = *(_BYTE *)(a46 + 36);
  if (*(char *)(a46 + 63) < 0)
    std::string::__init_copy_ctor_external(&v247, *(const std::string::value_type **)(a46 + 40), *(_QWORD *)(a46 + 48));
  else
    v247 = *(std::string *)(a46 + 40);
  v238 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a47 + 31) < 0)
    std::string::__init_copy_ctor_external(&v239, *(const std::string::value_type **)(a47 + 8), *(_QWORD *)(a47 + 16));
  else
    v239 = *(std::string *)(a47 + 8);
  v138 = *(_DWORD *)(a47 + 32);
  v238 = off_24C335B18;
  v241 = *(_QWORD *)(a47 + 36);
  v139 = *(_DWORD *)(a47 + 44);
  v240 = v138;
  v242 = v139;
  v233 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a48 + 31) < 0)
    std::string::__init_copy_ctor_external(&v234, *(const std::string::value_type **)(a48 + 8), *(_QWORD *)(a48 + 16));
  else
    v234 = *(std::string *)(a48 + 8);
  v140 = *(_DWORD *)(a48 + 32);
  v233 = off_24C335B18;
  v236 = *(_QWORD *)(a48 + 36);
  v141 = *(_DWORD *)(a48 + 44);
  v235 = v140;
  v237 = v141;
  v228 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a49 + 31) < 0)
    std::string::__init_copy_ctor_external(&v229, *(const std::string::value_type **)(a49 + 8), *(_QWORD *)(a49 + 16));
  else
    v229 = *(std::string *)(a49 + 8);
  v142 = *(_DWORD *)(a49 + 32);
  v228 = off_24C335B18;
  v231 = *(_QWORD *)(a49 + 36);
  v143 = *(_DWORD *)(a49 + 44);
  v230 = v142;
  v232 = v143;
  v223 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a50 + 31) < 0)
    std::string::__init_copy_ctor_external(&v224, *(const std::string::value_type **)(a50 + 8), *(_QWORD *)(a50 + 16));
  else
    v224 = *(std::string *)(a50 + 8);
  v144 = *(_DWORD *)(a50 + 32);
  v223 = off_24C335B18;
  v226 = *(_QWORD *)(a50 + 36);
  v145 = *(_DWORD *)(a50 + 44);
  v225 = v144;
  v227 = v145;
  v219 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a51 + 31) < 0)
    std::string::__init_copy_ctor_external(&v220, *(const std::string::value_type **)(a51 + 8), *(_QWORD *)(a51 + 16));
  else
    v220 = *(std::string *)(a51 + 8);
  v221 = *(_DWORD *)(a51 + 32);
  v219 = off_24C335AF8;
  v222 = *(_QWORD *)(a51 + 36);
  v215 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a52 + 31) < 0)
    std::string::__init_copy_ctor_external(&v216, *(const std::string::value_type **)(a52 + 8), *(_QWORD *)(a52 + 16));
  else
    v216 = *(std::string *)(a52 + 8);
  v217 = *(_DWORD *)(a52 + 32);
  v215 = off_24C335AF8;
  v218 = *(_QWORD *)(a52 + 36);
  v210 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a53 + 31) < 0)
    std::string::__init_copy_ctor_external(&v211, *(const std::string::value_type **)(a53 + 8), *(_QWORD *)(a53 + 16));
  else
    v211 = *(std::string *)(a53 + 8);
  v212 = *(_DWORD *)(a53 + 32);
  v210 = &off_24C335AB8;
  v213 = *(_BYTE *)(a53 + 36);
  if (*(char *)(a53 + 63) < 0)
    std::string::__init_copy_ctor_external(&v214, *(const std::string::value_type **)(a53 + 40), *(_QWORD *)(a53 + 48));
  else
    v214 = *(std::string *)(a53 + 40);
  v205 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a54 + 31) < 0)
    std::string::__init_copy_ctor_external(&v206, *(const std::string::value_type **)(a54 + 8), *(_QWORD *)(a54 + 16));
  else
    v206 = *(std::string *)(a54 + 8);
  v146 = *(_DWORD *)(a54 + 32);
  v205 = off_24C335B18;
  v208 = *(_QWORD *)(a54 + 36);
  v147 = *(_DWORD *)(a54 + 44);
  v207 = v146;
  v209 = v147;
  v200 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a55 + 31) < 0)
    std::string::__init_copy_ctor_external(&v201, *(const std::string::value_type **)(a55 + 8), *(_QWORD *)(a55 + 16));
  else
    v201 = *(std::string *)(a55 + 8);
  v202 = *(_DWORD *)(a55 + 32);
  v200 = &off_24C335AB8;
  v203 = *(_BYTE *)(a55 + 36);
  if (*(char *)(a55 + 63) < 0)
    std::string::__init_copy_ctor_external(&v204, *(const std::string::value_type **)(a55 + 40), *(_QWORD *)(a55 + 48));
  else
    v204 = *(std::string *)(a55 + 40);
  v195 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a56 + 31) < 0)
    std::string::__init_copy_ctor_external(&v196, *(const std::string::value_type **)(a56 + 8), *(_QWORD *)(a56 + 16));
  else
    v196 = *(std::string *)(a56 + 8);
  v148 = *(_DWORD *)(a56 + 32);
  v195 = off_24C335B18;
  v198 = *(_QWORD *)(a56 + 36);
  v149 = *(_DWORD *)(a56 + 44);
  v197 = v148;
  v199 = v149;
  v190 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a57 + 31) < 0)
    std::string::__init_copy_ctor_external(&v191, *(const std::string::value_type **)(a57 + 8), *(_QWORD *)(a57 + 16));
  else
    v191 = *(std::string *)(a57 + 8);
  v150 = *(_DWORD *)(a57 + 32);
  v190 = off_24C335B18;
  v193 = *(_QWORD *)(a57 + 36);
  v151 = *(_DWORD *)(a57 + 44);
  v192 = v150;
  v194 = v151;
  v185 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a58 + 31) < 0)
    std::string::__init_copy_ctor_external(&v186, *(const std::string::value_type **)(a58 + 8), *(_QWORD *)(a58 + 16));
  else
    v186 = *(std::string *)(a58 + 8);
  v152 = *(_DWORD *)(a58 + 32);
  v185 = off_24C335B18;
  v188 = *(_QWORD *)(a58 + 36);
  v153 = *(_DWORD *)(a58 + 44);
  v187 = v152;
  v189 = v153;
  v180 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a59 + 31) < 0)
    std::string::__init_copy_ctor_external(&v181, *(const std::string::value_type **)(a59 + 8), *(_QWORD *)(a59 + 16));
  else
    v181 = *(std::string *)(a59 + 8);
  v182 = *(_DWORD *)(a59 + 32);
  v180 = off_24C335B18;
  v183 = *(_QWORD *)(a59 + 36);
  v184 = *(_DWORD *)(a59 + 44);
  v175 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a60 + 31) < 0)
    std::string::__init_copy_ctor_external(&v176, *(const std::string::value_type **)(a60 + 8), *(_QWORD *)(a60 + 16));
  else
    v176 = *(std::string *)(a60 + 8);
  v177 = *(_DWORD *)(a60 + 32);
  v175 = &off_24C335AB8;
  v178 = *(_BYTE *)(a60 + 36);
  if (*(char *)(a60 + 63) < 0)
    std::string::__init_copy_ctor_external(&v179, *(const std::string::value_type **)(a60 + 40), *(_QWORD *)(a60 + 48));
  else
    v179 = *(std::string *)(a60 + 40);
  v739 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v740, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v740 = __s;
  v739 = off_24C335B18;
  v742 = v455;
  v741 = v454;
  v743 = v456;
  v734 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v448.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v735, v448.__r_.__value_.__l.__data_, v448.__r_.__value_.__l.__size_);
  else
    v735 = v448;
  v734 = off_24C335B18;
  v737 = v450;
  v736 = v449;
  v738 = v451;
  v729 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v443.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v730, v443.__r_.__value_.__l.__data_, v443.__r_.__value_.__l.__size_);
  else
    v730 = v443;
  v729 = off_24C335B18;
  v732 = v445;
  v731 = v444;
  v733 = v446;
  v724 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v438.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v725, v438.__r_.__value_.__l.__data_, v438.__r_.__value_.__l.__size_);
  else
    v725 = v438;
  v724 = off_24C335B18;
  v727 = v440;
  v726 = v439;
  v728 = v441;
  v719 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v433.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v720, v433.__r_.__value_.__l.__data_, v433.__r_.__value_.__l.__size_);
  else
    v720 = v433;
  v719 = off_24C335B18;
  v722 = v435;
  v721 = v434;
  v723 = v436;
  v714 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v428.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v715, v428.__r_.__value_.__l.__data_, v428.__r_.__value_.__l.__size_);
  else
    v715 = v428;
  v714 = off_24C335B18;
  v717 = v430;
  v716 = v429;
  v718 = v431;
  v709 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v423.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v710, v423.__r_.__value_.__l.__data_, v423.__r_.__value_.__l.__size_);
  else
    v710 = v423;
  v709 = off_24C335B18;
  v712 = v425;
  v711 = v424;
  v713 = v426;
  v704 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v418.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v705, v418.__r_.__value_.__l.__data_, v418.__r_.__value_.__l.__size_);
  else
    v705 = v418;
  v706 = v419;
  v704 = &off_24C335AB8;
  v707 = v420;
  if (SHIBYTE(v421.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v708, v421.__r_.__value_.__l.__data_, v421.__r_.__value_.__l.__size_);
  else
    v708 = v421;
  v699 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v413.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v700, v413.__r_.__value_.__l.__data_, v413.__r_.__value_.__l.__size_);
  else
    v700 = v413;
  v699 = off_24C335B18;
  v702 = v415;
  v701 = v414;
  v703 = v416;
  v694 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v408.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v695, v408.__r_.__value_.__l.__data_, v408.__r_.__value_.__l.__size_);
  else
    v695 = v408;
  v696 = v409;
  v694 = &off_24C335AB8;
  v697 = v410;
  if (SHIBYTE(v411.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v698, v411.__r_.__value_.__l.__data_, v411.__r_.__value_.__l.__size_);
  else
    v698 = v411;
  v689 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v403.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v690, v403.__r_.__value_.__l.__data_, v403.__r_.__value_.__l.__size_);
  else
    v690 = v403;
  v689 = off_24C335B18;
  v692 = v405;
  v691 = v404;
  v693 = v406;
  v684 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v398.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v685, v398.__r_.__value_.__l.__data_, v398.__r_.__value_.__l.__size_);
  else
    v685 = v398;
  v684 = off_24C335B18;
  v687 = v400;
  v686 = v399;
  v688 = v401;
  v679 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v393.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v680, v393.__r_.__value_.__l.__data_, v393.__r_.__value_.__l.__size_);
  else
    v680 = v393;
  v679 = off_24C335B18;
  v682 = v395;
  v681 = v394;
  v683 = v396;
  v674 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v388.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v675, v388.__r_.__value_.__l.__data_, v388.__r_.__value_.__l.__size_);
  else
    v675 = v388;
  v674 = off_24C335B18;
  v677 = v390;
  v676 = v389;
  v678 = v391;
  v669 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v383.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v670, v383.__r_.__value_.__l.__data_, v383.__r_.__value_.__l.__size_);
  else
    v670 = v383;
  v669 = off_24C335B18;
  v672 = v385;
  v671 = v384;
  v673 = v386;
  v664 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v378.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v665, v378.__r_.__value_.__l.__data_, v378.__r_.__value_.__l.__size_);
  else
    v665 = v378;
  v664 = off_24C335B18;
  v667 = v380;
  v666 = v379;
  v668 = v381;
  v659 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v373.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v660, v373.__r_.__value_.__l.__data_, v373.__r_.__value_.__l.__size_);
  else
    v660 = v373;
  v659 = off_24C335B18;
  v662 = v375;
  v661 = v374;
  v663 = v376;
  v654 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v368.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v655, v368.__r_.__value_.__l.__data_, v368.__r_.__value_.__l.__size_);
  else
    v655 = v368;
  v654 = off_24C335B18;
  v657 = v370;
  v656 = v369;
  v658 = v371;
  v649 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v363.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v650, v363.__r_.__value_.__l.__data_, v363.__r_.__value_.__l.__size_);
  else
    v650 = v363;
  v649 = off_24C335B18;
  v652 = v365;
  v651 = v364;
  v653 = v366;
  v644 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v358.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v645, v358.__r_.__value_.__l.__data_, v358.__r_.__value_.__l.__size_);
  else
    v645 = v358;
  v644 = off_24C335B18;
  v647 = v360;
  v646 = v359;
  v648 = v361;
  v639 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v353.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v640, v353.__r_.__value_.__l.__data_, v353.__r_.__value_.__l.__size_);
  else
    v640 = v353;
  v639 = off_24C335B18;
  v642 = v355;
  v641 = v354;
  v643 = v356;
  v634 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v348.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v635, v348.__r_.__value_.__l.__data_, v348.__r_.__value_.__l.__size_);
  else
    v635 = v348;
  v634 = off_24C335B18;
  v637 = v350;
  v636 = v349;
  v638 = v351;
  v629 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v343.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v630, v343.__r_.__value_.__l.__data_, v343.__r_.__value_.__l.__size_);
  else
    v630 = v343;
  v629 = off_24C335B18;
  v632 = v345;
  v631 = v344;
  v633 = v346;
  v624 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v338.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v625, v338.__r_.__value_.__l.__data_, v338.__r_.__value_.__l.__size_);
  else
    v625 = v338;
  v624 = off_24C335B18;
  v627 = v340;
  v626 = v339;
  v628 = v341;
  v619 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v333.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v620, v333.__r_.__value_.__l.__data_, v333.__r_.__value_.__l.__size_);
  else
    v620 = v333;
  v619 = off_24C335B18;
  v622 = v335;
  v621 = v334;
  v623 = v336;
  v614 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v328.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v615, v328.__r_.__value_.__l.__data_, v328.__r_.__value_.__l.__size_);
  else
    v615 = v328;
  v616 = v329;
  v614 = &off_24C335AB8;
  v617 = v330;
  if (SHIBYTE(v331.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v618, v331.__r_.__value_.__l.__data_, v331.__r_.__value_.__l.__size_);
  else
    v618 = v331;
  v609 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v323.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v610, v323.__r_.__value_.__l.__data_, v323.__r_.__value_.__l.__size_);
  else
    v610 = v323;
  v611 = v324;
  v609 = &off_24C335AB8;
  v612 = v325;
  if (SHIBYTE(v326.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v613, v326.__r_.__value_.__l.__data_, v326.__r_.__value_.__l.__size_);
  else
    v613 = v326;
  v604 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v318.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v605, v318.__r_.__value_.__l.__data_, v318.__r_.__value_.__l.__size_);
  else
    v605 = v318;
  v606 = v319;
  v604 = &off_24C335AB8;
  v607 = v320;
  if (SHIBYTE(v321.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v608, v321.__r_.__value_.__l.__data_, v321.__r_.__value_.__l.__size_);
  else
    v608 = v321;
  v599 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v313.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v600, v313.__r_.__value_.__l.__data_, v313.__r_.__value_.__l.__size_);
  else
    v600 = v313;
  v601 = v314;
  v599 = &off_24C335AB8;
  v602 = v315;
  if (SHIBYTE(v316.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v603, v316.__r_.__value_.__l.__data_, v316.__r_.__value_.__l.__size_);
  else
    v603 = v316;
  v594 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v595, v308.__r_.__value_.__l.__data_, v308.__r_.__value_.__l.__size_);
  else
    v595 = v308;
  v596 = v309;
  v594 = &off_24C335AB8;
  v597 = v310;
  if (SHIBYTE(v311.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v598, v311.__r_.__value_.__l.__data_, v311.__r_.__value_.__l.__size_);
  else
    v598 = v311;
  v589 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v303.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v590, v303.__r_.__value_.__l.__data_, v303.__r_.__value_.__l.__size_);
  else
    v590 = v303;
  v589 = off_24C335B18;
  v592 = v305;
  v591 = v304;
  v593 = v306;
  v584 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v298.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v585, v298.__r_.__value_.__l.__data_, v298.__r_.__value_.__l.__size_);
  else
    v585 = v298;
  v584 = off_24C335B18;
  v587 = v300;
  v586 = v299;
  v588 = v301;
  v579 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v293.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v580, v293.__r_.__value_.__l.__data_, v293.__r_.__value_.__l.__size_);
  else
    v580 = v293;
  v581 = v294;
  v579 = &off_24C335AB8;
  v582 = v295;
  if (SHIBYTE(v296.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v583, v296.__r_.__value_.__l.__data_, v296.__r_.__value_.__l.__size_);
  else
    v583 = v296;
  v574 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v288.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v575, v288.__r_.__value_.__l.__data_, v288.__r_.__value_.__l.__size_);
  else
    v575 = v288;
  v574 = off_24C335B18;
  v577 = v290;
  v576 = v289;
  v578 = v291;
  v569 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v283.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v570, v283.__r_.__value_.__l.__data_, v283.__r_.__value_.__l.__size_);
  else
    v570 = v283;
  v569 = off_24C335B18;
  v572 = v285;
  v571 = v284;
  v573 = v286;
  v564 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v278.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v565, v278.__r_.__value_.__l.__data_, v278.__r_.__value_.__l.__size_);
  else
    v565 = v278;
  v566 = v279;
  v564 = &off_24C335AB8;
  v567 = v280;
  if (SHIBYTE(v281.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v568, v281.__r_.__value_.__l.__data_, v281.__r_.__value_.__l.__size_);
  else
    v568 = v281;
  v559 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v273.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v560, v273.__r_.__value_.__l.__data_, v273.__r_.__value_.__l.__size_);
  else
    v560 = v273;
  v561 = v274;
  v559 = &off_24C335AB8;
  v562 = v275;
  if (SHIBYTE(v276.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v563, v276.__r_.__value_.__l.__data_, v276.__r_.__value_.__l.__size_);
  else
    v563 = v276;
  v554 = (uint64_t (**)())off_24C335D90;
  v154 = SHIBYTE(v268.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v268.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v555, v268.__r_.__value_.__l.__data_, v268.__r_.__value_.__l.__size_);
  else
    v555 = v268;
  v554 = off_24C335B18;
  v557 = v270;
  v556 = v269;
  v558 = v271;
  v549 = (uint64_t (**)())off_24C335D90;
  v173 = SHIBYTE(v263.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v263.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v550, v263.__r_.__value_.__l.__data_, v263.__r_.__value_.__l.__size_);
  else
    v550 = v263;
  v549 = off_24C335B18;
  v552 = v265;
  v551 = v264;
  v553 = v266;
  v544 = (uint64_t (**)())off_24C335D90;
  v172 = SHIBYTE(v258.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v258.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v545, v258.__r_.__value_.__l.__data_, v258.__r_.__value_.__l.__size_);
  else
    v545 = v258;
  v544 = off_24C335B18;
  v547 = v260;
  v546 = v259;
  v548 = v261;
  v540 = (uint64_t (**)())off_24C335D90;
  v171 = SHIBYTE(v254.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v254.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v541, v254.__r_.__value_.__l.__data_, v254.__r_.__value_.__l.__size_);
  else
    v541 = v254;
  v542 = v255;
  v540 = off_24C335AF8;
  v543 = v256;
  v535 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v249.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v536, v249.__r_.__value_.__l.__data_, v249.__r_.__value_.__l.__size_);
  else
    v536 = v249;
  v537 = v250;
  v535 = &off_24C335AB8;
  v538 = v251;
  if (SHIBYTE(v252.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v539, v252.__r_.__value_.__l.__data_, v252.__r_.__value_.__l.__size_);
  else
    v539 = v252;
  v530 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v244.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v531, v244.__r_.__value_.__l.__data_, v244.__r_.__value_.__l.__size_);
  else
    v531 = v244;
  v532 = v245;
  v530 = &off_24C335AB8;
  v533 = v246;
  if (SHIBYTE(v247.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v534, v247.__r_.__value_.__l.__data_, v247.__r_.__value_.__l.__size_);
  else
    v534 = v247;
  v525 = (uint64_t (**)())off_24C335D90;
  v170 = SHIBYTE(v239.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v239.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v526, v239.__r_.__value_.__l.__data_, v239.__r_.__value_.__l.__size_);
  else
    v526 = v239;
  v525 = off_24C335B18;
  v528 = v241;
  v527 = v240;
  v529 = v242;
  v520 = (uint64_t (**)())off_24C335D90;
  v169 = SHIBYTE(v234.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v234.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v521, v234.__r_.__value_.__l.__data_, v234.__r_.__value_.__l.__size_);
  else
    v521 = v234;
  v520 = off_24C335B18;
  v523 = v236;
  v522 = v235;
  v524 = v237;
  v515 = (uint64_t (**)())off_24C335D90;
  v168 = SHIBYTE(v229.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v229.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v516, v229.__r_.__value_.__l.__data_, v229.__r_.__value_.__l.__size_);
  else
    v516 = v229;
  v515 = off_24C335B18;
  v518 = v231;
  v517 = v230;
  v519 = v232;
  v510 = (uint64_t (**)())off_24C335D90;
  v167 = SHIBYTE(v224.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v224.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v511, v224.__r_.__value_.__l.__data_, v224.__r_.__value_.__l.__size_);
  else
    v511 = v224;
  v510 = off_24C335B18;
  v513 = v226;
  v512 = v225;
  v514 = v227;
  v506 = (uint64_t (**)())off_24C335D90;
  v166 = SHIBYTE(v220.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v220.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v507, v220.__r_.__value_.__l.__data_, v220.__r_.__value_.__l.__size_);
  else
    v507 = v220;
  v508 = v221;
  v506 = off_24C335AF8;
  v509 = v222;
  v502 = (uint64_t (**)())off_24C335D90;
  v165 = SHIBYTE(v216.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v503, v216.__r_.__value_.__l.__data_, v216.__r_.__value_.__l.__size_);
  else
    v503 = v216;
  v504 = v217;
  v502 = off_24C335AF8;
  v505 = v218;
  v497 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v498, v211.__r_.__value_.__l.__data_, v211.__r_.__value_.__l.__size_);
  else
    v498 = v211;
  v499 = v212;
  v497 = &off_24C335AB8;
  v500 = v213;
  if (SHIBYTE(v214.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v501, v214.__r_.__value_.__l.__data_, v214.__r_.__value_.__l.__size_);
  else
    v501 = v214;
  v492 = (uint64_t (**)())off_24C335D90;
  v155 = SHIBYTE(v206.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v206.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v493, v206.__r_.__value_.__l.__data_, v206.__r_.__value_.__l.__size_);
  else
    v493 = v206;
  v492 = off_24C335B18;
  v495 = v208;
  v494 = v207;
  v496 = v209;
  v487 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v201.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v488, v201.__r_.__value_.__l.__data_, v201.__r_.__value_.__l.__size_);
  else
    v488 = v201;
  v489 = v202;
  v487 = &off_24C335AB8;
  v490 = v203;
  if (SHIBYTE(v204.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v491, v204.__r_.__value_.__l.__data_, v204.__r_.__value_.__l.__size_);
  else
    v491 = v204;
  v482 = (uint64_t (**)())off_24C335D90;
  v156 = SHIBYTE(v196.__r_.__value_.__r.__words[2]);
  v164 = v155;
  if (SHIBYTE(v196.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v483, v196.__r_.__value_.__l.__data_, v196.__r_.__value_.__l.__size_);
  else
    v483 = v196;
  v482 = off_24C335B18;
  v485 = v198;
  v484 = v197;
  v486 = v199;
  v477 = (uint64_t (**)())off_24C335D90;
  v157 = SHIBYTE(v191.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v478, v191.__r_.__value_.__l.__data_, v191.__r_.__value_.__l.__size_);
  else
    v478 = v191;
  v477 = off_24C335B18;
  v480 = v193;
  v479 = v192;
  v481 = v194;
  v472 = (uint64_t (**)())off_24C335D90;
  v158 = SHIBYTE(v186.__r_.__value_.__r.__words[2]);
  v163 = v154;
  if (SHIBYTE(v186.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v473, v186.__r_.__value_.__l.__data_, v186.__r_.__value_.__l.__size_);
  else
    v473 = v186;
  v472 = off_24C335B18;
  v475 = v188;
  v474 = v187;
  v476 = v189;
  v467 = (uint64_t (**)())off_24C335D90;
  v159 = SHIBYTE(v181.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v181.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v181.__r_.__value_.__l.__data_, v181.__r_.__value_.__l.__size_);
  else
    __p = v181;
  v467 = off_24C335B18;
  v470 = v183;
  v469 = v182;
  v471 = v184;
  v462 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v176.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v463, v176.__r_.__value_.__l.__data_, v176.__r_.__value_.__l.__size_);
  else
    v463 = v176;
  v464 = v177;
  v462 = &off_24C335AB8;
  v465 = v178;
  if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v466, v179.__r_.__value_.__l.__data_, v179.__r_.__value_.__l.__size_);
  else
    v466 = v179;
  mediaplatform::DatabaseColumnTuple<1ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple((uint64_t)(v174 + 10), (uint64_t)&v739, (uint64_t)&v734, (uint64_t)&v729, (uint64_t)&v724, (uint64_t)&v719, (uint64_t)&v714, (uint64_t)&v709, (uint64_t)&v704, (uint64_t)&v699, (uint64_t)&v694, (uint64_t)&v689, (uint64_t)&v684, (uint64_t)&v679, (uint64_t)&v674, (uint64_t)&v669, (uint64_t)&v664, (uint64_t)&v659, (uint64_t)&v654,
    (uint64_t)&v649,
    (uint64_t)&v644,
    (uint64_t)&v639,
    (uint64_t)&v634,
    (uint64_t)&v629,
    (uint64_t)&v624,
    (uint64_t)&v619,
    (uint64_t)&v614,
    (uint64_t)&v609,
    (uint64_t)&v604,
    (uint64_t)&v599,
    (uint64_t)&v594,
    (uint64_t)&v589,
    (uint64_t)&v584,
    (uint64_t)&v579,
    (uint64_t)&v574,
    (uint64_t)&v569,
    (uint64_t)&v564,
    (uint64_t)&v559,
    (uint64_t)&v554,
    (uint64_t)&v549,
    (uint64_t)&v544,
    (uint64_t)&v540,
    (uint64_t)&v535,
    (uint64_t)&v530,
    (uint64_t)&v525,
    (uint64_t)&v520,
    (uint64_t)&v515,
    (uint64_t)&v510,
    (uint64_t)&v506,
    (uint64_t)&v502,
    (uint64_t)&v497,
    (uint64_t)&v492,
    (uint64_t)&v487,
    (uint64_t)&v482,
    (uint64_t)&v477,
    (uint64_t)&v472,
    (uint64_t)&v467,
    (uint64_t)&v462);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v462);
  v467 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v472 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v473.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v473.__r_.__value_.__l.__data_);
  v477 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v478.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v478.__r_.__value_.__l.__data_);
  v482 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v483.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v483.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v487);
  v492 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v493.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v493.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v497);
  v502 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v503.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v503.__r_.__value_.__l.__data_);
  v506 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v507.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v507.__r_.__value_.__l.__data_);
  v510 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v511.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v511.__r_.__value_.__l.__data_);
  v515 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v516.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v516.__r_.__value_.__l.__data_);
  v520 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v521.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v521.__r_.__value_.__l.__data_);
  v525 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v526.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v526.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v530);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v535);
  v540 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v541.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v541.__r_.__value_.__l.__data_);
  v544 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v545.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v545.__r_.__value_.__l.__data_);
  v549 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v550.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v550.__r_.__value_.__l.__data_);
  v554 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v555.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v555.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v559);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v564);
  v569 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v570.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v570.__r_.__value_.__l.__data_);
  v574 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v575.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v575.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v579);
  v584 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v585.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v585.__r_.__value_.__l.__data_);
  v589 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v590.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v590.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v594);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v599);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v604);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v609);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v614);
  v619 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v620.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v620.__r_.__value_.__l.__data_);
  v624 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v625.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v625.__r_.__value_.__l.__data_);
  v629 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v630.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v630.__r_.__value_.__l.__data_);
  v634 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v635.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v635.__r_.__value_.__l.__data_);
  v639 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v640.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v640.__r_.__value_.__l.__data_);
  v644 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v645.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v645.__r_.__value_.__l.__data_);
  v649 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v650.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v650.__r_.__value_.__l.__data_);
  v654 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v655.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v655.__r_.__value_.__l.__data_);
  v659 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v660.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v660.__r_.__value_.__l.__data_);
  v664 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v665.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v665.__r_.__value_.__l.__data_);
  v669 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v670.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v670.__r_.__value_.__l.__data_);
  v674 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v675.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v675.__r_.__value_.__l.__data_);
  v679 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v680.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v680.__r_.__value_.__l.__data_);
  v684 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v685.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v685.__r_.__value_.__l.__data_);
  v689 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v690.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v690.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v694);
  v699 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v700.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v700.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v704);
  v709 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v710.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v710.__r_.__value_.__l.__data_);
  v714 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v715.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v715.__r_.__value_.__l.__data_);
  v719 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v720.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v720.__r_.__value_.__l.__data_);
  v724 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v725.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v725.__r_.__value_.__l.__data_);
  v729 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v730.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v730.__r_.__value_.__l.__data_);
  v734 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v735.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v735.__r_.__value_.__l.__data_);
  v739 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v740.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v740.__r_.__value_.__l.__data_);
  v174[382] = off_24C335D90;
  v160 = (std::string *)(v174 + 383);
  v161 = SHIBYTE(v458.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v458.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v160, v458.__r_.__value_.__l.__data_, v458.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v160->__r_.__value_.__l.__data_ = *(_OWORD *)&v458.__r_.__value_.__l.__data_;
    v174[385] = *((_QWORD *)&v458.__r_.__value_.__l + 2);
  }
  *((_DWORD *)v174 + 772) = v459;
  v174[382] = off_24C335B18;
  *(_QWORD *)((char *)v174 + 3092) = v460;
  *((_DWORD *)v174 + 775) = v461;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v175);
  v180 = (uint64_t (**)())off_24C335D90;
  if (v159 < 0)
    operator delete(v181.__r_.__value_.__l.__data_);
  v185 = (uint64_t (**)())off_24C335D90;
  if (v158 < 0)
    operator delete(v186.__r_.__value_.__l.__data_);
  v190 = (uint64_t (**)())off_24C335D90;
  if (v157 < 0)
    operator delete(v191.__r_.__value_.__l.__data_);
  v195 = (uint64_t (**)())off_24C335D90;
  if (v156 < 0)
    operator delete(v196.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v200);
  v205 = (uint64_t (**)())off_24C335D90;
  if (v164 < 0)
    operator delete(v206.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v210);
  v215 = (uint64_t (**)())off_24C335D90;
  if (v165 < 0)
    operator delete(v216.__r_.__value_.__l.__data_);
  v219 = (uint64_t (**)())off_24C335D90;
  if (v166 < 0)
    operator delete(v220.__r_.__value_.__l.__data_);
  v223 = (uint64_t (**)())off_24C335D90;
  if (v167 < 0)
    operator delete(v224.__r_.__value_.__l.__data_);
  v228 = (uint64_t (**)())off_24C335D90;
  if (v168 < 0)
    operator delete(v229.__r_.__value_.__l.__data_);
  v233 = (uint64_t (**)())off_24C335D90;
  if (v169 < 0)
    operator delete(v234.__r_.__value_.__l.__data_);
  v238 = (uint64_t (**)())off_24C335D90;
  if (v170 < 0)
    operator delete(v239.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v243);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v248);
  v253 = (uint64_t (**)())off_24C335D90;
  if (v171 < 0)
    operator delete(v254.__r_.__value_.__l.__data_);
  v257 = (uint64_t (**)())off_24C335D90;
  if (v172 < 0)
    operator delete(v258.__r_.__value_.__l.__data_);
  v262 = (uint64_t (**)())off_24C335D90;
  if (v173 < 0)
    operator delete(v263.__r_.__value_.__l.__data_);
  v267 = (uint64_t (**)())off_24C335D90;
  if (v163 < 0)
    operator delete(v268.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v272);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v277);
  v282 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v283.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v283.__r_.__value_.__l.__data_);
  v287 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v288.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v288.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v292);
  v297 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v298.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v298.__r_.__value_.__l.__data_);
  v302 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v303.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v303.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v307);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v312);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v317);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v322);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v327);
  if (SHIBYTE(v333.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v333.__r_.__value_.__l.__data_);
  if (SHIBYTE(v338.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v338.__r_.__value_.__l.__data_);
  if (SHIBYTE(v343.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v343.__r_.__value_.__l.__data_);
  if (SHIBYTE(v348.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v348.__r_.__value_.__l.__data_);
  if (SHIBYTE(v353.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v353.__r_.__value_.__l.__data_);
  if (SHIBYTE(v358.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v358.__r_.__value_.__l.__data_);
  if (SHIBYTE(v363.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v363.__r_.__value_.__l.__data_);
  if (SHIBYTE(v368.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v368.__r_.__value_.__l.__data_);
  if (SHIBYTE(v373.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v373.__r_.__value_.__l.__data_);
  if (SHIBYTE(v378.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v378.__r_.__value_.__l.__data_);
  if (SHIBYTE(v383.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v383.__r_.__value_.__l.__data_);
  if (SHIBYTE(v388.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v388.__r_.__value_.__l.__data_);
  if (SHIBYTE(v393.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v393.__r_.__value_.__l.__data_);
  if (SHIBYTE(v398.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v398.__r_.__value_.__l.__data_);
  if (SHIBYTE(v403.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v403.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v407);
  if (SHIBYTE(v413.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v413.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v417);
  if (SHIBYTE(v423.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v423.__r_.__value_.__l.__data_);
  if (SHIBYTE(v428.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v428.__r_.__value_.__l.__data_);
  if (SHIBYTE(v433.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v433.__r_.__value_.__l.__data_);
  if (SHIBYTE(v438.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v438.__r_.__value_.__l.__data_);
  if (SHIBYTE(v443.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v443.__r_.__value_.__l.__data_);
  if (SHIBYTE(v448.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v448.__r_.__value_.__l.__data_);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__s.__r_.__value_.__l.__data_);
    if ((v161 & 0x80000000) == 0)
      return v174;
LABEL_612:
    operator delete(v458.__r_.__value_.__l.__data_);
    return v174;
  }
  if (v161 < 0)
    goto LABEL_612;
  return v174;
}

void sub_20A87AFD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,void **a60)
{
  uint64_t v60;
  unint64_t v61;

  mediaplatform::DatabaseColumnTuple<1ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(v60);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&STACK[0x3D8]);
  STACK[0x418] = v61;
  if (SLOBYTE(STACK[0x437]) < 0)
    operator delete((void *)STACK[0x420]);
  STACK[0x448] = v61;
  if (SLOBYTE(STACK[0x467]) < 0)
    operator delete((void *)STACK[0x450]);
  STACK[0x478] = v61;
  if (SLOBYTE(STACK[0x497]) < 0)
    operator delete((void *)STACK[0x480]);
  STACK[0x4A8] = v61;
  if (SLOBYTE(STACK[0x4C7]) < 0)
    operator delete((void *)STACK[0x4B0]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&STACK[0x4D8]);
  STACK[0x518] = v61;
  if (SLOBYTE(STACK[0x537]) < 0)
    operator delete((void *)STACK[0x520]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&STACK[0x548]);
  STACK[0x588] = v61;
  if (SLOBYTE(STACK[0x5A7]) < 0)
    operator delete((void *)STACK[0x590]);
  STACK[0x5B8] = v61;
  if (SLOBYTE(STACK[0x5D7]) < 0)
    operator delete((void *)STACK[0x5C0]);
  STACK[0x5E8] = v61;
  if (SLOBYTE(STACK[0x607]) < 0)
    operator delete((void *)STACK[0x5F0]);
  STACK[0x618] = v61;
  if (SLOBYTE(STACK[0x637]) < 0)
    operator delete((void *)STACK[0x620]);
  STACK[0x648] = v61;
  if (SLOBYTE(STACK[0x667]) < 0)
    operator delete((void *)STACK[0x650]);
  STACK[0x678] = v61;
  if (SLOBYTE(STACK[0x697]) < 0)
    operator delete((void *)STACK[0x680]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&STACK[0x6A8]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&STACK[0x6E8]);
  STACK[0x728] = v61;
  if (SLOBYTE(STACK[0x747]) < 0)
    operator delete((void *)STACK[0x730]);
  STACK[0x758] = v61;
  if (SLOBYTE(STACK[0x777]) < 0)
    operator delete((void *)STACK[0x760]);
  STACK[0x788] = v61;
  if (SLOBYTE(STACK[0x7A7]) < 0)
    operator delete((void *)STACK[0x790]);
  STACK[0x7B8] = v61;
  if (SLOBYTE(STACK[0x7D7]) < 0)
    operator delete((void *)STACK[0x7C0]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&STACK[0x7E8]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&STACK[0x828]);
  STACK[0x868] = v61;
  if (SLOBYTE(STACK[0x887]) < 0)
    operator delete((void *)STACK[0x870]);
  STACK[0x898] = v61;
  if (SLOBYTE(STACK[0x8B7]) < 0)
    operator delete((void *)STACK[0x8A0]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&STACK[0x8C8]);
  STACK[0x908] = v61;
  if (SLOBYTE(STACK[0x927]) < 0)
    operator delete((void *)STACK[0x910]);
  STACK[0x938] = v61;
  if (SLOBYTE(STACK[0x957]) < 0)
    operator delete((void *)STACK[0x940]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&STACK[0x968]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&STACK[0x9A8]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&STACK[0x9E8]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&STACK[0xA28]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&STACK[0xA68]);
  STACK[0xAA8] = v61;
  if (SLOBYTE(STACK[0xAC7]) < 0)
    operator delete((void *)STACK[0xAB0]);
  if (SLOBYTE(STACK[0xAF7]) < 0)
    operator delete((void *)STACK[0xAE0]);
  if (SLOBYTE(STACK[0xB27]) < 0)
    operator delete((void *)STACK[0xB10]);
  if (SLOBYTE(STACK[0xB57]) < 0)
    operator delete((void *)STACK[0xB40]);
  if (SLOBYTE(STACK[0xB87]) < 0)
    operator delete((void *)STACK[0xB70]);
  if (SLOBYTE(STACK[0xBB7]) < 0)
    operator delete((void *)STACK[0xBA0]);
  if (SLOBYTE(STACK[0xBE7]) < 0)
    operator delete((void *)STACK[0xBD0]);
  if (SLOBYTE(STACK[0xC17]) < 0)
    operator delete((void *)STACK[0xC00]);
  if (SLOBYTE(STACK[0xC47]) < 0)
    operator delete((void *)STACK[0xC30]);
  if (SLOBYTE(STACK[0xC77]) < 0)
    operator delete((void *)STACK[0xC60]);
  if (SLOBYTE(STACK[0xCA7]) < 0)
    operator delete((void *)STACK[0xC90]);
  if (SLOBYTE(STACK[0xCD7]) < 0)
    operator delete((void *)STACK[0xCC0]);
  if (SLOBYTE(STACK[0xD07]) < 0)
    operator delete((void *)STACK[0xCF0]);
  if (SLOBYTE(STACK[0xD37]) < 0)
    operator delete((void *)STACK[0xD20]);
  if (SLOBYTE(STACK[0xD67]) < 0)
    operator delete((void *)STACK[0xD50]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&STACK[0xD78]);
  if (SLOBYTE(STACK[0xDD7]) < 0)
    operator delete((void *)STACK[0xDC0]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&STACK[0xDE8]);
  if (SLOBYTE(STACK[0xE47]) < 0)
    operator delete((void *)STACK[0xE30]);
  if (SLOBYTE(STACK[0xE77]) < 0)
    operator delete((void *)STACK[0xE60]);
  if (SLOBYTE(STACK[0xEA7]) < 0)
    operator delete((void *)STACK[0xE90]);
  if (SLOBYTE(STACK[0xED7]) < 0)
    operator delete((void *)STACK[0xEC0]);
  if (SLOBYTE(STACK[0xF07]) < 0)
    operator delete((void *)STACK[0xEF0]);
  if (SLOBYTE(STACK[0xF37]) < 0)
    operator delete((void *)STACK[0xF20]);
  if (SLOBYTE(STACK[0xF67]) < 0)
    operator delete((void *)STACK[0xF50]);
  if (SLOBYTE(STACK[0xF97]) < 0)
    operator delete((void *)STACK[0xF80]);
  if (*(char *)(STACK[0x3D0] + 79) < 0)
    operator delete(*a60);
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)STACK[0x3D0]);
  _Unwind_Resume(a1);
}

uint64_t std::__tuple_leaf<27ul,mlcore::MediaColumn<std::string>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<std::string>&,void>(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  std::string *v5;
  __int128 v6;

  *(_QWORD *)a1 = off_24C335D90;
  if (*(char *)(a2 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(a1 + 8), *(const std::string::value_type **)(a2 + 8), *(_QWORD *)(a2 + 16));
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = v4;
  }
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)a1 = &off_24C335AB8;
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  v5 = (std::string *)(a1 + 40);
  if (*(char *)(a2 + 63) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)(a2 + 40), *(_QWORD *)(a2 + 48));
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  *(_QWORD *)a1 = &off_24C336A60;
  return a1;
}

void sub_20A87C1B0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

uint64_t std::__tuple_leaf<28ul,mlcore::MediaColumn<std::string>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<std::string>&,void>(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  std::string *v5;
  __int128 v6;

  *(_QWORD *)a1 = off_24C335D90;
  if (*(char *)(a2 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(a1 + 8), *(const std::string::value_type **)(a2 + 8), *(_QWORD *)(a2 + 16));
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = v4;
  }
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)a1 = &off_24C335AB8;
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  v5 = (std::string *)(a1 + 40);
  if (*(char *)(a2 + 63) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)(a2 + 40), *(_QWORD *)(a2 + 48));
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  *(_QWORD *)a1 = &off_24C336A60;
  return a1;
}

void sub_20A87C28C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

uint64_t std::__tuple_leaf<29ul,mlcore::MediaColumn<std::string>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<std::string>&,void>(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  std::string *v5;
  __int128 v6;

  *(_QWORD *)a1 = off_24C335D90;
  if (*(char *)(a2 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(a1 + 8), *(const std::string::value_type **)(a2 + 8), *(_QWORD *)(a2 + 16));
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = v4;
  }
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)a1 = &off_24C335AB8;
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  v5 = (std::string *)(a1 + 40);
  if (*(char *)(a2 + 63) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)(a2 + 40), *(_QWORD *)(a2 + 48));
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  *(_QWORD *)a1 = &off_24C336A60;
  return a1;
}

void sub_20A87C368(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

uint64_t std::__tuple_leaf<30ul,mlcore::MediaColumn<std::string>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<std::string>&,void>(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  std::string *v5;
  __int128 v6;

  *(_QWORD *)a1 = off_24C335D90;
  if (*(char *)(a2 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(a1 + 8), *(const std::string::value_type **)(a2 + 8), *(_QWORD *)(a2 + 16));
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = v4;
  }
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)a1 = &off_24C335AB8;
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  v5 = (std::string *)(a1 + 40);
  if (*(char *)(a2 + 63) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)(a2 + 40), *(_QWORD *)(a2 + 48));
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  *(_QWORD *)a1 = &off_24C336A60;
  return a1;
}

void sub_20A87C444(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

uint64_t mediaplatform::DatabaseColumnTuple<1ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  std::string *v155;
  int v156;
  std::string *v157;
  __int128 v158;
  uint64_t v159;
  uint64_t v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  uint64_t v171;
  uint64_t (**v172)();
  std::string v173;
  int v174;
  char v175;
  std::string v176;
  uint64_t (**v177)();
  std::string v178;
  int v179;
  uint64_t v180;
  int v181;
  uint64_t (**v182)();
  std::string v183;
  int v184;
  uint64_t v185;
  int v186;
  uint64_t (**v187)();
  std::string v188;
  int v189;
  uint64_t v190;
  int v191;
  uint64_t (**v192)();
  std::string v193;
  int v194;
  uint64_t v195;
  int v196;
  uint64_t (**v197)();
  std::string v198;
  int v199;
  char v200;
  std::string v201;
  uint64_t (**v202)();
  std::string v203;
  int v204;
  uint64_t v205;
  int v206;
  uint64_t (**v207)();
  std::string v208;
  int v209;
  char v210;
  std::string v211;
  uint64_t (**v212)();
  std::string v213;
  int v214;
  uint64_t v215;
  uint64_t (**v216)();
  std::string v217;
  int v218;
  uint64_t v219;
  uint64_t (**v220)();
  std::string v221;
  int v222;
  uint64_t v223;
  int v224;
  uint64_t (**v225)();
  std::string v226;
  int v227;
  uint64_t v228;
  int v229;
  uint64_t (**v230)();
  std::string v231;
  int v232;
  uint64_t v233;
  int v234;
  uint64_t (**v235)();
  std::string v236;
  int v237;
  uint64_t v238;
  int v239;
  uint64_t (**v240)();
  std::string v241;
  int v242;
  char v243;
  std::string v244;
  uint64_t (**v245)();
  std::string v246;
  int v247;
  char v248;
  std::string v249;
  uint64_t (**v250)();
  std::string v251;
  int v252;
  uint64_t v253;
  uint64_t (**v254)();
  std::string v255;
  int v256;
  uint64_t v257;
  int v258;
  uint64_t (**v259)();
  std::string v260;
  int v261;
  uint64_t v262;
  int v263;
  uint64_t (**v264)();
  std::string v265;
  int v266;
  uint64_t v267;
  int v268;
  uint64_t (**v269)();
  std::string v270;
  int v271;
  char v272;
  std::string v273;
  uint64_t (**v274)();
  std::string v275;
  int v276;
  char v277;
  std::string v278;
  uint64_t (**v279)();
  std::string v280;
  int v281;
  uint64_t v282;
  int v283;
  uint64_t (**v284)();
  std::string v285;
  int v286;
  uint64_t v287;
  int v288;
  uint64_t (**v289)();
  std::string v290;
  int v291;
  char v292;
  std::string v293;
  uint64_t (**v294)();
  std::string v295;
  int v296;
  uint64_t v297;
  int v298;
  uint64_t (**v299)();
  std::string v300;
  int v301;
  uint64_t v302;
  int v303;
  uint64_t (**v304)();
  std::string v305;
  int v306;
  char v307;
  std::string v308;
  uint64_t (**v309)();
  std::string v310;
  int v311;
  char v312;
  std::string v313;
  uint64_t (**v314)();
  std::string v315;
  int v316;
  char v317;
  std::string v318;
  uint64_t (**v319)();
  std::string v320;
  int v321;
  char v322;
  std::string v323;
  uint64_t (**v324)();
  std::string v325;
  int v326;
  char v327;
  std::string v328;
  uint64_t (**v329)();
  std::string v330;
  int v331;
  uint64_t v332;
  int v333;
  uint64_t (**v334)();
  std::string v335;
  int v336;
  uint64_t v337;
  int v338;
  uint64_t (**v339)();
  std::string v340;
  int v341;
  uint64_t v342;
  int v343;
  uint64_t (**v344)();
  std::string v345;
  int v346;
  uint64_t v347;
  int v348;
  uint64_t (**v349)();
  std::string v350;
  int v351;
  uint64_t v352;
  int v353;
  uint64_t (**v354)();
  std::string v355;
  int v356;
  uint64_t v357;
  int v358;
  uint64_t (**v359)();
  std::string v360;
  int v361;
  uint64_t v362;
  int v363;
  uint64_t (**v364)();
  std::string v365;
  int v366;
  uint64_t v367;
  int v368;
  uint64_t (**v369)();
  std::string v370;
  int v371;
  uint64_t v372;
  int v373;
  uint64_t (**v374)();
  std::string v375;
  int v376;
  uint64_t v377;
  int v378;
  uint64_t (**v379)();
  std::string v380;
  int v381;
  uint64_t v382;
  int v383;
  uint64_t (**v384)();
  std::string v385;
  int v386;
  uint64_t v387;
  int v388;
  uint64_t (**v389)();
  std::string v390;
  int v391;
  uint64_t v392;
  int v393;
  uint64_t (**v394)();
  std::string v395;
  int v396;
  uint64_t v397;
  int v398;
  uint64_t (**v399)();
  std::string v400;
  int v401;
  uint64_t v402;
  int v403;
  uint64_t (**v404)();
  std::string v405;
  int v406;
  char v407;
  std::string v408;
  uint64_t (**v409)();
  std::string v410;
  int v411;
  uint64_t v412;
  int v413;
  uint64_t (**v414)();
  std::string v415;
  int v416;
  char v417;
  std::string v418;
  uint64_t (**v419)();
  std::string v420;
  int v421;
  uint64_t v422;
  int v423;
  uint64_t (**v424)();
  std::string v425;
  int v426;
  uint64_t v427;
  int v428;
  uint64_t (**v429)();
  std::string v430;
  int v431;
  uint64_t v432;
  int v433;
  uint64_t (**v434)();
  std::string v435;
  int v436;
  uint64_t v437;
  int v438;
  uint64_t (**v439)();
  std::string __s;
  int v441;
  uint64_t v442;
  int v443;
  uint64_t (**v444)();
  std::string v445;
  int v446;
  uint64_t v447;
  int v448;
  uint64_t (**v449)();
  std::string v450;
  int v451;
  char v452;
  std::string v453;
  uint64_t (**v454)();
  std::string __p;
  int v456;
  uint64_t v457;
  int v458;
  uint64_t (**v459)();
  std::string v460;
  int v461;
  uint64_t v462;
  int v463;
  uint64_t (**v464)();
  std::string v465;
  int v466;
  uint64_t v467;
  int v468;
  uint64_t (**v469)();
  std::string v470;
  int v471;
  uint64_t v472;
  int v473;
  uint64_t (**v474)();
  std::string v475;
  int v476;
  char v477;
  std::string v478;
  uint64_t (**v479)();
  std::string v480;
  int v481;
  uint64_t v482;
  int v483;
  uint64_t (**v484)();
  std::string v485;
  int v486;
  char v487;
  std::string v488;
  uint64_t (**v489)();
  std::string v490;
  int v491;
  uint64_t v492;
  uint64_t (**v493)();
  std::string v494;
  int v495;
  uint64_t v496;
  uint64_t (**v497)();
  std::string v498;
  int v499;
  uint64_t v500;
  int v501;
  uint64_t (**v502)();
  std::string v503;
  int v504;
  uint64_t v505;
  int v506;
  uint64_t (**v507)();
  std::string v508;
  int v509;
  uint64_t v510;
  int v511;
  uint64_t (**v512)();
  std::string v513;
  int v514;
  uint64_t v515;
  int v516;
  uint64_t (**v517)();
  std::string v518;
  int v519;
  char v520;
  std::string v521;
  uint64_t (**v522)();
  std::string v523;
  int v524;
  char v525;
  std::string v526;
  uint64_t (**v527)();
  std::string v528;
  int v529;
  uint64_t v530;
  uint64_t (**v531)();
  std::string v532;
  int v533;
  uint64_t v534;
  int v535;
  uint64_t (**v536)();
  std::string v537;
  int v538;
  uint64_t v539;
  int v540;
  uint64_t (**v541)();
  std::string v542;
  int v543;
  uint64_t v544;
  int v545;
  uint64_t (**v546)();
  std::string v547;
  int v548;
  char v549;
  std::string v550;
  uint64_t (**v551)();
  std::string v552;
  int v553;
  char v554;
  std::string v555;
  uint64_t (**v556)();
  std::string v557;
  int v558;
  uint64_t v559;
  int v560;
  uint64_t (**v561)();
  std::string v562;
  int v563;
  uint64_t v564;
  int v565;
  uint64_t (**v566)();
  std::string v567;
  int v568;
  char v569;
  std::string v570;
  uint64_t (**v571)();
  std::string v572;
  int v573;
  uint64_t v574;
  int v575;
  uint64_t (**v576)();
  std::string v577;
  int v578;
  uint64_t v579;
  int v580;
  uint64_t (**v581)();
  std::string v582;
  int v583;
  char v584;
  std::string v585;
  uint64_t (**v586)();
  std::string v587;
  int v588;
  char v589;
  std::string v590;
  uint64_t (**v591)();
  std::string v592;
  int v593;
  char v594;
  std::string v595;
  uint64_t (**v596)();
  std::string v597;
  int v598;
  char v599;
  std::string v600;
  uint64_t (**v601)();
  std::string v602;
  int v603;
  char v604;
  std::string v605;
  uint64_t (**v606)();
  std::string v607;
  int v608;
  uint64_t v609;
  int v610;
  uint64_t (**v611)();
  std::string v612;
  int v613;
  uint64_t v614;
  int v615;
  uint64_t (**v616)();
  std::string v617;
  int v618;
  uint64_t v619;
  int v620;
  uint64_t (**v621)();
  std::string v622;
  int v623;
  uint64_t v624;
  int v625;
  uint64_t (**v626)();
  std::string v627;
  int v628;
  uint64_t v629;
  int v630;
  uint64_t (**v631)();
  std::string v632;
  int v633;
  uint64_t v634;
  int v635;
  uint64_t (**v636)();
  std::string v637;
  int v638;
  uint64_t v639;
  int v640;
  uint64_t (**v641)();
  std::string v642;
  int v643;
  uint64_t v644;
  int v645;
  uint64_t (**v646)();
  std::string v647;
  int v648;
  uint64_t v649;
  int v650;
  uint64_t (**v651)();
  std::string v652;
  int v653;
  uint64_t v654;
  int v655;
  uint64_t (**v656)();
  std::string v657;
  int v658;
  uint64_t v659;
  int v660;
  uint64_t (**v661)();
  std::string v662;
  int v663;
  uint64_t v664;
  int v665;
  uint64_t (**v666)();
  std::string v667;
  int v668;
  uint64_t v669;
  int v670;
  uint64_t (**v671)();
  std::string v672;
  int v673;
  uint64_t v674;
  int v675;
  uint64_t (**v676)();
  std::string v677;
  int v678;
  uint64_t v679;
  int v680;
  uint64_t (**v681)();
  std::string v682;
  int v683;
  char v684;
  std::string v685;
  uint64_t (**v686)();
  std::string v687;
  int v688;
  uint64_t v689;
  int v690;
  uint64_t (**v691)();
  std::string v692;
  int v693;
  char v694;
  std::string v695;
  uint64_t (**v696)();
  std::string v697;
  int v698;
  uint64_t v699;
  int v700;
  uint64_t (**v701)();
  std::string v702;
  int v703;
  uint64_t v704;
  int v705;
  uint64_t (**v706)();
  std::string v707;
  int v708;
  uint64_t v709;
  int v710;
  uint64_t (**v711)();
  std::string v712;
  int v713;
  uint64_t v714;
  int v715;
  uint64_t (**v716)();
  std::string v717;
  int v718;
  uint64_t v719;
  int v720;

  v58 = MEMORY[0x24BDAC7A8](a1);
  v61 = v60;
  v63 = v62;
  v65 = v64;
  v67 = v66;
  v69 = v68;
  v70 = v59;
  v72 = v71;
  v171 = v58;
  if (*(char *)(v59 + 31) < 0)
    std::string::__init_copy_ctor_external(&v445, *(const std::string::value_type **)(v59 + 8), *(_QWORD *)(v59 + 16));
  else
    v445 = *(std::string *)(v59 + 8);
  v73 = *(_DWORD *)(v70 + 32);
  v444 = off_24C335B18;
  v447 = *(_QWORD *)(v70 + 36);
  v74 = *(_DWORD *)(v70 + 44);
  v446 = v73;
  v448 = v74;
  if (*(char *)(v69 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(v69 + 8), *(_QWORD *)(v69 + 16));
  else
    __s = *(std::string *)(v69 + 8);
  v75 = *(_DWORD *)(v69 + 32);
  v439 = off_24C335B18;
  v442 = *(_QWORD *)(v69 + 36);
  v76 = *(_DWORD *)(v69 + 44);
  v441 = v75;
  v443 = v76;
  if (*(char *)(v67 + 31) < 0)
    std::string::__init_copy_ctor_external(&v435, *(const std::string::value_type **)(v67 + 8), *(_QWORD *)(v67 + 16));
  else
    v435 = *(std::string *)(v67 + 8);
  v77 = *(_DWORD *)(v67 + 32);
  v434 = off_24C335B18;
  v437 = *(_QWORD *)(v67 + 36);
  v78 = *(_DWORD *)(v67 + 44);
  v436 = v77;
  v438 = v78;
  if (*(char *)(v65 + 31) < 0)
    std::string::__init_copy_ctor_external(&v430, *(const std::string::value_type **)(v65 + 8), *(_QWORD *)(v65 + 16));
  else
    v430 = *(std::string *)(v65 + 8);
  v79 = *(_DWORD *)(v65 + 32);
  v429 = off_24C335B18;
  v432 = *(_QWORD *)(v65 + 36);
  v80 = *(_DWORD *)(v65 + 44);
  v431 = v79;
  v433 = v80;
  if (*(char *)(v63 + 31) < 0)
    std::string::__init_copy_ctor_external(&v425, *(const std::string::value_type **)(v63 + 8), *(_QWORD *)(v63 + 16));
  else
    v425 = *(std::string *)(v63 + 8);
  v81 = *(_DWORD *)(v63 + 32);
  v424 = off_24C335B18;
  v427 = *(_QWORD *)(v63 + 36);
  v82 = *(_DWORD *)(v63 + 44);
  v426 = v81;
  v428 = v82;
  if (*(char *)(v61 + 31) < 0)
    std::string::__init_copy_ctor_external(&v420, *(const std::string::value_type **)(v61 + 8), *(_QWORD *)(v61 + 16));
  else
    v420 = *(std::string *)(v61 + 8);
  v83 = *(_DWORD *)(v61 + 32);
  v419 = off_24C335B18;
  v422 = *(_QWORD *)(v61 + 36);
  v84 = *(_DWORD *)(v61 + 44);
  v421 = v83;
  v423 = v84;
  v414 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v415, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v415 = *(std::string *)(a9 + 8);
  v416 = *(_DWORD *)(a9 + 32);
  v414 = &off_24C335AB8;
  v417 = *(_BYTE *)(a9 + 36);
  if (*(char *)(a9 + 63) < 0)
    std::string::__init_copy_ctor_external(&v418, *(const std::string::value_type **)(a9 + 40), *(_QWORD *)(a9 + 48));
  else
    v418 = *(std::string *)(a9 + 40);
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v410, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v410 = *(std::string *)(a10 + 8);
  v85 = *(_DWORD *)(a10 + 32);
  v409 = off_24C335B18;
  v412 = *(_QWORD *)(a10 + 36);
  v86 = *(_DWORD *)(a10 + 44);
  v411 = v85;
  v413 = v86;
  v404 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v405, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v405 = *(std::string *)(a11 + 8);
  v406 = *(_DWORD *)(a11 + 32);
  v404 = &off_24C335AB8;
  v407 = *(_BYTE *)(a11 + 36);
  if (*(char *)(a11 + 63) < 0)
    std::string::__init_copy_ctor_external(&v408, *(const std::string::value_type **)(a11 + 40), *(_QWORD *)(a11 + 48));
  else
    v408 = *(std::string *)(a11 + 40);
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v400, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v400 = *(std::string *)(a12 + 8);
  v87 = *(_DWORD *)(a12 + 32);
  v399 = off_24C335B18;
  v402 = *(_QWORD *)(a12 + 36);
  v88 = *(_DWORD *)(a12 + 44);
  v401 = v87;
  v403 = v88;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v395, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v395 = *(std::string *)(a13 + 8);
  v89 = *(_DWORD *)(a13 + 32);
  v394 = off_24C335B18;
  v397 = *(_QWORD *)(a13 + 36);
  v90 = *(_DWORD *)(a13 + 44);
  v396 = v89;
  v398 = v90;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v390, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v390 = *(std::string *)(a14 + 8);
  v91 = *(_DWORD *)(a14 + 32);
  v389 = off_24C335B18;
  v392 = *(_QWORD *)(a14 + 36);
  v92 = *(_DWORD *)(a14 + 44);
  v391 = v91;
  v393 = v92;
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v385, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v385 = *(std::string *)(a15 + 8);
  v93 = *(_DWORD *)(a15 + 32);
  v384 = off_24C335B18;
  v387 = *(_QWORD *)(a15 + 36);
  v94 = *(_DWORD *)(a15 + 44);
  v386 = v93;
  v388 = v94;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v380, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v380 = *(std::string *)(a16 + 8);
  v95 = *(_DWORD *)(a16 + 32);
  v379 = off_24C335B18;
  v382 = *(_QWORD *)(a16 + 36);
  v96 = *(_DWORD *)(a16 + 44);
  v381 = v95;
  v383 = v96;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v375, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v375 = *(std::string *)(a17 + 8);
  v97 = *(_DWORD *)(a17 + 32);
  v374 = off_24C335B18;
  v377 = *(_QWORD *)(a17 + 36);
  v98 = *(_DWORD *)(a17 + 44);
  v376 = v97;
  v378 = v98;
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v370, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v370 = *(std::string *)(a18 + 8);
  v99 = *(_DWORD *)(a18 + 32);
  v369 = off_24C335B18;
  v372 = *(_QWORD *)(a18 + 36);
  v100 = *(_DWORD *)(a18 + 44);
  v371 = v99;
  v373 = v100;
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v365, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v365 = *(std::string *)(a19 + 8);
  v101 = *(_DWORD *)(a19 + 32);
  v364 = off_24C335B18;
  v367 = *(_QWORD *)(a19 + 36);
  v102 = *(_DWORD *)(a19 + 44);
  v366 = v101;
  v368 = v102;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v360, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v360 = *(std::string *)(a20 + 8);
  v103 = *(_DWORD *)(a20 + 32);
  v359 = off_24C335B18;
  v362 = *(_QWORD *)(a20 + 36);
  v104 = *(_DWORD *)(a20 + 44);
  v361 = v103;
  v363 = v104;
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v355, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v355 = *(std::string *)(a21 + 8);
  v105 = *(_DWORD *)(a21 + 32);
  v354 = off_24C335B18;
  v357 = *(_QWORD *)(a21 + 36);
  v106 = *(_DWORD *)(a21 + 44);
  v356 = v105;
  v358 = v106;
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v350, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v350 = *(std::string *)(a22 + 8);
  v107 = *(_DWORD *)(a22 + 32);
  v349 = off_24C335B18;
  v352 = *(_QWORD *)(a22 + 36);
  v108 = *(_DWORD *)(a22 + 44);
  v351 = v107;
  v353 = v108;
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v345, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v345 = *(std::string *)(a23 + 8);
  v109 = *(_DWORD *)(a23 + 32);
  v344 = off_24C335B18;
  v347 = *(_QWORD *)(a23 + 36);
  v110 = *(_DWORD *)(a23 + 44);
  v346 = v109;
  v348 = v110;
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v340, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v340 = *(std::string *)(a24 + 8);
  v111 = *(_DWORD *)(a24 + 32);
  v339 = off_24C335B18;
  v342 = *(_QWORD *)(a24 + 36);
  v112 = *(_DWORD *)(a24 + 44);
  v341 = v111;
  v343 = v112;
  if (*(char *)(a25 + 31) < 0)
    std::string::__init_copy_ctor_external(&v335, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  else
    v335 = *(std::string *)(a25 + 8);
  v113 = *(_DWORD *)(a25 + 32);
  v334 = off_24C335B18;
  v337 = *(_QWORD *)(a25 + 36);
  v114 = *(_DWORD *)(a25 + 44);
  v336 = v113;
  v338 = v114;
  if (*(char *)(a26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v330, *(const std::string::value_type **)(a26 + 8), *(_QWORD *)(a26 + 16));
  else
    v330 = *(std::string *)(a26 + 8);
  v115 = *(_DWORD *)(a26 + 32);
  v329 = off_24C335B18;
  v332 = *(_QWORD *)(a26 + 36);
  v116 = *(_DWORD *)(a26 + 44);
  v331 = v115;
  v333 = v116;
  v324 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a27 + 31) < 0)
    std::string::__init_copy_ctor_external(&v325, *(const std::string::value_type **)(a27 + 8), *(_QWORD *)(a27 + 16));
  else
    v325 = *(std::string *)(a27 + 8);
  v326 = *(_DWORD *)(a27 + 32);
  v324 = &off_24C335AB8;
  v327 = *(_BYTE *)(a27 + 36);
  if (*(char *)(a27 + 63) < 0)
    std::string::__init_copy_ctor_external(&v328, *(const std::string::value_type **)(a27 + 40), *(_QWORD *)(a27 + 48));
  else
    v328 = *(std::string *)(a27 + 40);
  v319 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v320, *(const std::string::value_type **)(a28 + 8), *(_QWORD *)(a28 + 16));
  else
    v320 = *(std::string *)(a28 + 8);
  v321 = *(_DWORD *)(a28 + 32);
  v319 = &off_24C335AB8;
  v322 = *(_BYTE *)(a28 + 36);
  if (*(char *)(a28 + 63) < 0)
    std::string::__init_copy_ctor_external(&v323, *(const std::string::value_type **)(a28 + 40), *(_QWORD *)(a28 + 48));
  else
    v323 = *(std::string *)(a28 + 40);
  v314 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a29 + 31) < 0)
    std::string::__init_copy_ctor_external(&v315, *(const std::string::value_type **)(a29 + 8), *(_QWORD *)(a29 + 16));
  else
    v315 = *(std::string *)(a29 + 8);
  v316 = *(_DWORD *)(a29 + 32);
  v314 = &off_24C335AB8;
  v317 = *(_BYTE *)(a29 + 36);
  if (*(char *)(a29 + 63) < 0)
    std::string::__init_copy_ctor_external(&v318, *(const std::string::value_type **)(a29 + 40), *(_QWORD *)(a29 + 48));
  else
    v318 = *(std::string *)(a29 + 40);
  v309 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v310, *(const std::string::value_type **)(a30 + 8), *(_QWORD *)(a30 + 16));
  else
    v310 = *(std::string *)(a30 + 8);
  v311 = *(_DWORD *)(a30 + 32);
  v309 = &off_24C335AB8;
  v312 = *(_BYTE *)(a30 + 36);
  if (*(char *)(a30 + 63) < 0)
    std::string::__init_copy_ctor_external(&v313, *(const std::string::value_type **)(a30 + 40), *(_QWORD *)(a30 + 48));
  else
    v313 = *(std::string *)(a30 + 40);
  v304 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a31 + 31) < 0)
    std::string::__init_copy_ctor_external(&v305, *(const std::string::value_type **)(a31 + 8), *(_QWORD *)(a31 + 16));
  else
    v305 = *(std::string *)(a31 + 8);
  v306 = *(_DWORD *)(a31 + 32);
  v304 = &off_24C335AB8;
  v307 = *(_BYTE *)(a31 + 36);
  if (*(char *)(a31 + 63) < 0)
    std::string::__init_copy_ctor_external(&v308, *(const std::string::value_type **)(a31 + 40), *(_QWORD *)(a31 + 48));
  else
    v308 = *(std::string *)(a31 + 40);
  if (*(char *)(a32 + 31) < 0)
    std::string::__init_copy_ctor_external(&v300, *(const std::string::value_type **)(a32 + 8), *(_QWORD *)(a32 + 16));
  else
    v300 = *(std::string *)(a32 + 8);
  v117 = *(_DWORD *)(a32 + 32);
  v299 = off_24C335B18;
  v302 = *(_QWORD *)(a32 + 36);
  v118 = *(_DWORD *)(a32 + 44);
  v301 = v117;
  v303 = v118;
  if (*(char *)(a33 + 31) < 0)
    std::string::__init_copy_ctor_external(&v295, *(const std::string::value_type **)(a33 + 8), *(_QWORD *)(a33 + 16));
  else
    v295 = *(std::string *)(a33 + 8);
  v119 = *(_DWORD *)(a33 + 32);
  v294 = off_24C335B18;
  v297 = *(_QWORD *)(a33 + 36);
  v120 = *(_DWORD *)(a33 + 44);
  v296 = v119;
  v298 = v120;
  v289 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a34 + 31) < 0)
    std::string::__init_copy_ctor_external(&v290, *(const std::string::value_type **)(a34 + 8), *(_QWORD *)(a34 + 16));
  else
    v290 = *(std::string *)(a34 + 8);
  v291 = *(_DWORD *)(a34 + 32);
  v289 = &off_24C335AB8;
  v292 = *(_BYTE *)(a34 + 36);
  if (*(char *)(a34 + 63) < 0)
    std::string::__init_copy_ctor_external(&v293, *(const std::string::value_type **)(a34 + 40), *(_QWORD *)(a34 + 48));
  else
    v293 = *(std::string *)(a34 + 40);
  if (*(char *)(a35 + 31) < 0)
    std::string::__init_copy_ctor_external(&v285, *(const std::string::value_type **)(a35 + 8), *(_QWORD *)(a35 + 16));
  else
    v285 = *(std::string *)(a35 + 8);
  v121 = *(_DWORD *)(a35 + 32);
  v284 = off_24C335B18;
  v287 = *(_QWORD *)(a35 + 36);
  v122 = *(_DWORD *)(a35 + 44);
  v286 = v121;
  v288 = v122;
  v279 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a36 + 31) < 0)
    std::string::__init_copy_ctor_external(&v280, *(const std::string::value_type **)(a36 + 8), *(_QWORD *)(a36 + 16));
  else
    v280 = *(std::string *)(a36 + 8);
  v123 = *(_DWORD *)(a36 + 32);
  v279 = off_24C335B18;
  v282 = *(_QWORD *)(a36 + 36);
  v124 = *(_DWORD *)(a36 + 44);
  v281 = v123;
  v283 = v124;
  v274 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a37 + 31) < 0)
    std::string::__init_copy_ctor_external(&v275, *(const std::string::value_type **)(a37 + 8), *(_QWORD *)(a37 + 16));
  else
    v275 = *(std::string *)(a37 + 8);
  v276 = *(_DWORD *)(a37 + 32);
  v274 = &off_24C335AB8;
  v277 = *(_BYTE *)(a37 + 36);
  if (*(char *)(a37 + 63) < 0)
    std::string::__init_copy_ctor_external(&v278, *(const std::string::value_type **)(a37 + 40), *(_QWORD *)(a37 + 48));
  else
    v278 = *(std::string *)(a37 + 40);
  v269 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a38 + 31) < 0)
    std::string::__init_copy_ctor_external(&v270, *(const std::string::value_type **)(a38 + 8), *(_QWORD *)(a38 + 16));
  else
    v270 = *(std::string *)(a38 + 8);
  v271 = *(_DWORD *)(a38 + 32);
  v269 = &off_24C335AB8;
  v272 = *(_BYTE *)(a38 + 36);
  if (*(char *)(a38 + 63) < 0)
    std::string::__init_copy_ctor_external(&v273, *(const std::string::value_type **)(a38 + 40), *(_QWORD *)(a38 + 48));
  else
    v273 = *(std::string *)(a38 + 40);
  v264 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a39 + 31) < 0)
    std::string::__init_copy_ctor_external(&v265, *(const std::string::value_type **)(a39 + 8), *(_QWORD *)(a39 + 16));
  else
    v265 = *(std::string *)(a39 + 8);
  v125 = *(_DWORD *)(a39 + 32);
  v264 = off_24C335B18;
  v267 = *(_QWORD *)(a39 + 36);
  v126 = *(_DWORD *)(a39 + 44);
  v266 = v125;
  v268 = v126;
  v259 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a40 + 31) < 0)
    std::string::__init_copy_ctor_external(&v260, *(const std::string::value_type **)(a40 + 8), *(_QWORD *)(a40 + 16));
  else
    v260 = *(std::string *)(a40 + 8);
  v127 = *(_DWORD *)(a40 + 32);
  v259 = off_24C335B18;
  v262 = *(_QWORD *)(a40 + 36);
  v128 = *(_DWORD *)(a40 + 44);
  v261 = v127;
  v263 = v128;
  v254 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a41 + 31) < 0)
    std::string::__init_copy_ctor_external(&v255, *(const std::string::value_type **)(a41 + 8), *(_QWORD *)(a41 + 16));
  else
    v255 = *(std::string *)(a41 + 8);
  v129 = *(_DWORD *)(a41 + 32);
  v254 = off_24C335B18;
  v257 = *(_QWORD *)(a41 + 36);
  v130 = *(_DWORD *)(a41 + 44);
  v256 = v129;
  v258 = v130;
  v250 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a42 + 31) < 0)
    std::string::__init_copy_ctor_external(&v251, *(const std::string::value_type **)(a42 + 8), *(_QWORD *)(a42 + 16));
  else
    v251 = *(std::string *)(a42 + 8);
  v252 = *(_DWORD *)(a42 + 32);
  v250 = off_24C335AF8;
  v253 = *(_QWORD *)(a42 + 36);
  v245 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a43 + 31) < 0)
    std::string::__init_copy_ctor_external(&v246, *(const std::string::value_type **)(a43 + 8), *(_QWORD *)(a43 + 16));
  else
    v246 = *(std::string *)(a43 + 8);
  v247 = *(_DWORD *)(a43 + 32);
  v245 = &off_24C335AB8;
  v248 = *(_BYTE *)(a43 + 36);
  if (*(char *)(a43 + 63) < 0)
    std::string::__init_copy_ctor_external(&v249, *(const std::string::value_type **)(a43 + 40), *(_QWORD *)(a43 + 48));
  else
    v249 = *(std::string *)(a43 + 40);
  v240 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a44 + 31) < 0)
    std::string::__init_copy_ctor_external(&v241, *(const std::string::value_type **)(a44 + 8), *(_QWORD *)(a44 + 16));
  else
    v241 = *(std::string *)(a44 + 8);
  v242 = *(_DWORD *)(a44 + 32);
  v240 = &off_24C335AB8;
  v243 = *(_BYTE *)(a44 + 36);
  if (*(char *)(a44 + 63) < 0)
    std::string::__init_copy_ctor_external(&v244, *(const std::string::value_type **)(a44 + 40), *(_QWORD *)(a44 + 48));
  else
    v244 = *(std::string *)(a44 + 40);
  v235 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a45 + 31) < 0)
    std::string::__init_copy_ctor_external(&v236, *(const std::string::value_type **)(a45 + 8), *(_QWORD *)(a45 + 16));
  else
    v236 = *(std::string *)(a45 + 8);
  v131 = *(_DWORD *)(a45 + 32);
  v235 = off_24C335B18;
  v238 = *(_QWORD *)(a45 + 36);
  v132 = *(_DWORD *)(a45 + 44);
  v237 = v131;
  v239 = v132;
  v230 = (uint64_t (**)())off_24C335D90;
  v161 = v72;
  if (*(char *)(a46 + 31) < 0)
    std::string::__init_copy_ctor_external(&v231, *(const std::string::value_type **)(a46 + 8), *(_QWORD *)(a46 + 16));
  else
    v231 = *(std::string *)(a46 + 8);
  v133 = *(_DWORD *)(a46 + 32);
  v230 = off_24C335B18;
  v233 = *(_QWORD *)(a46 + 36);
  v134 = *(_DWORD *)(a46 + 44);
  v232 = v133;
  v234 = v134;
  v225 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a47 + 31) < 0)
    std::string::__init_copy_ctor_external(&v226, *(const std::string::value_type **)(a47 + 8), *(_QWORD *)(a47 + 16));
  else
    v226 = *(std::string *)(a47 + 8);
  v135 = *(_DWORD *)(a47 + 32);
  v225 = off_24C335B18;
  v228 = *(_QWORD *)(a47 + 36);
  v136 = *(_DWORD *)(a47 + 44);
  v227 = v135;
  v229 = v136;
  v220 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a48 + 31) < 0)
    std::string::__init_copy_ctor_external(&v221, *(const std::string::value_type **)(a48 + 8), *(_QWORD *)(a48 + 16));
  else
    v221 = *(std::string *)(a48 + 8);
  v137 = *(_DWORD *)(a48 + 32);
  v220 = off_24C335B18;
  v223 = *(_QWORD *)(a48 + 36);
  v138 = *(_DWORD *)(a48 + 44);
  v222 = v137;
  v224 = v138;
  v216 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a49 + 31) < 0)
    std::string::__init_copy_ctor_external(&v217, *(const std::string::value_type **)(a49 + 8), *(_QWORD *)(a49 + 16));
  else
    v217 = *(std::string *)(a49 + 8);
  v218 = *(_DWORD *)(a49 + 32);
  v216 = off_24C335AF8;
  v219 = *(_QWORD *)(a49 + 36);
  v212 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a50 + 31) < 0)
    std::string::__init_copy_ctor_external(&v213, *(const std::string::value_type **)(a50 + 8), *(_QWORD *)(a50 + 16));
  else
    v213 = *(std::string *)(a50 + 8);
  v214 = *(_DWORD *)(a50 + 32);
  v212 = off_24C335AF8;
  v215 = *(_QWORD *)(a50 + 36);
  v207 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a51 + 31) < 0)
    std::string::__init_copy_ctor_external(&v208, *(const std::string::value_type **)(a51 + 8), *(_QWORD *)(a51 + 16));
  else
    v208 = *(std::string *)(a51 + 8);
  v209 = *(_DWORD *)(a51 + 32);
  v207 = &off_24C335AB8;
  v210 = *(_BYTE *)(a51 + 36);
  if (*(char *)(a51 + 63) < 0)
    std::string::__init_copy_ctor_external(&v211, *(const std::string::value_type **)(a51 + 40), *(_QWORD *)(a51 + 48));
  else
    v211 = *(std::string *)(a51 + 40);
  v202 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a52 + 31) < 0)
    std::string::__init_copy_ctor_external(&v203, *(const std::string::value_type **)(a52 + 8), *(_QWORD *)(a52 + 16));
  else
    v203 = *(std::string *)(a52 + 8);
  v139 = *(_DWORD *)(a52 + 32);
  v202 = off_24C335B18;
  v205 = *(_QWORD *)(a52 + 36);
  v140 = *(_DWORD *)(a52 + 44);
  v204 = v139;
  v206 = v140;
  v197 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a53 + 31) < 0)
    std::string::__init_copy_ctor_external(&v198, *(const std::string::value_type **)(a53 + 8), *(_QWORD *)(a53 + 16));
  else
    v198 = *(std::string *)(a53 + 8);
  v199 = *(_DWORD *)(a53 + 32);
  v197 = &off_24C335AB8;
  v200 = *(_BYTE *)(a53 + 36);
  if (*(char *)(a53 + 63) < 0)
    std::string::__init_copy_ctor_external(&v201, *(const std::string::value_type **)(a53 + 40), *(_QWORD *)(a53 + 48));
  else
    v201 = *(std::string *)(a53 + 40);
  v192 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a54 + 31) < 0)
    std::string::__init_copy_ctor_external(&v193, *(const std::string::value_type **)(a54 + 8), *(_QWORD *)(a54 + 16));
  else
    v193 = *(std::string *)(a54 + 8);
  v141 = *(_DWORD *)(a54 + 32);
  v192 = off_24C335B18;
  v195 = *(_QWORD *)(a54 + 36);
  v142 = *(_DWORD *)(a54 + 44);
  v194 = v141;
  v196 = v142;
  v187 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a55 + 31) < 0)
    std::string::__init_copy_ctor_external(&v188, *(const std::string::value_type **)(a55 + 8), *(_QWORD *)(a55 + 16));
  else
    v188 = *(std::string *)(a55 + 8);
  v143 = *(_DWORD *)(a55 + 32);
  v187 = off_24C335B18;
  v190 = *(_QWORD *)(a55 + 36);
  v144 = *(_DWORD *)(a55 + 44);
  v189 = v143;
  v191 = v144;
  v182 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a56 + 31) < 0)
    std::string::__init_copy_ctor_external(&v183, *(const std::string::value_type **)(a56 + 8), *(_QWORD *)(a56 + 16));
  else
    v183 = *(std::string *)(a56 + 8);
  v145 = *(_DWORD *)(a56 + 32);
  v182 = off_24C335B18;
  v185 = *(_QWORD *)(a56 + 36);
  v146 = *(_DWORD *)(a56 + 44);
  v184 = v145;
  v186 = v146;
  v177 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a57 + 31) < 0)
    std::string::__init_copy_ctor_external(&v178, *(const std::string::value_type **)(a57 + 8), *(_QWORD *)(a57 + 16));
  else
    v178 = *(std::string *)(a57 + 8);
  v179 = *(_DWORD *)(a57 + 32);
  v177 = off_24C335B18;
  v180 = *(_QWORD *)(a57 + 36);
  v181 = *(_DWORD *)(a57 + 44);
  v172 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a58 + 31) < 0)
    std::string::__init_copy_ctor_external(&v173, *(const std::string::value_type **)(a58 + 8), *(_QWORD *)(a58 + 16));
  else
    v173 = *(std::string *)(a58 + 8);
  v174 = *(_DWORD *)(a58 + 32);
  v172 = &off_24C335AB8;
  v175 = *(_BYTE *)(a58 + 36);
  if (*(char *)(a58 + 63) < 0)
    std::string::__init_copy_ctor_external(&v176, *(const std::string::value_type **)(a58 + 40), *(_QWORD *)(a58 + 48));
  else
    v176 = *(std::string *)(a58 + 40);
  v716 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v717, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v717 = __s;
  v716 = off_24C335B18;
  v719 = v442;
  v718 = v441;
  v720 = v443;
  v711 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v435.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v712, v435.__r_.__value_.__l.__data_, v435.__r_.__value_.__l.__size_);
  else
    v712 = v435;
  v711 = off_24C335B18;
  v714 = v437;
  v713 = v436;
  v715 = v438;
  v706 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v430.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v707, v430.__r_.__value_.__l.__data_, v430.__r_.__value_.__l.__size_);
  else
    v707 = v430;
  v706 = off_24C335B18;
  v709 = v432;
  v708 = v431;
  v710 = v433;
  v701 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v425.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v702, v425.__r_.__value_.__l.__data_, v425.__r_.__value_.__l.__size_);
  else
    v702 = v425;
  v701 = off_24C335B18;
  v704 = v427;
  v703 = v426;
  v705 = v428;
  v696 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v420.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v697, v420.__r_.__value_.__l.__data_, v420.__r_.__value_.__l.__size_);
  else
    v697 = v420;
  v696 = off_24C335B18;
  v699 = v422;
  v698 = v421;
  v700 = v423;
  v691 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v415.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v692, v415.__r_.__value_.__l.__data_, v415.__r_.__value_.__l.__size_);
  else
    v692 = v415;
  v693 = v416;
  v691 = &off_24C335AB8;
  v694 = v417;
  if (SHIBYTE(v418.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v695, v418.__r_.__value_.__l.__data_, v418.__r_.__value_.__l.__size_);
  else
    v695 = v418;
  v686 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v410.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v687, v410.__r_.__value_.__l.__data_, v410.__r_.__value_.__l.__size_);
  else
    v687 = v410;
  v686 = off_24C335B18;
  v689 = v412;
  v688 = v411;
  v690 = v413;
  v681 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v405.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v682, v405.__r_.__value_.__l.__data_, v405.__r_.__value_.__l.__size_);
  else
    v682 = v405;
  v683 = v406;
  v681 = &off_24C335AB8;
  v684 = v407;
  if (SHIBYTE(v408.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v685, v408.__r_.__value_.__l.__data_, v408.__r_.__value_.__l.__size_);
  else
    v685 = v408;
  v676 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v400.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v677, v400.__r_.__value_.__l.__data_, v400.__r_.__value_.__l.__size_);
  else
    v677 = v400;
  v676 = off_24C335B18;
  v679 = v402;
  v678 = v401;
  v680 = v403;
  v671 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v395.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v672, v395.__r_.__value_.__l.__data_, v395.__r_.__value_.__l.__size_);
  else
    v672 = v395;
  v671 = off_24C335B18;
  v674 = v397;
  v673 = v396;
  v675 = v398;
  v666 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v390.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v667, v390.__r_.__value_.__l.__data_, v390.__r_.__value_.__l.__size_);
  else
    v667 = v390;
  v666 = off_24C335B18;
  v669 = v392;
  v668 = v391;
  v670 = v393;
  v661 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v385.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v662, v385.__r_.__value_.__l.__data_, v385.__r_.__value_.__l.__size_);
  else
    v662 = v385;
  v661 = off_24C335B18;
  v664 = v387;
  v663 = v386;
  v665 = v388;
  v656 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v380.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v657, v380.__r_.__value_.__l.__data_, v380.__r_.__value_.__l.__size_);
  else
    v657 = v380;
  v656 = off_24C335B18;
  v659 = v382;
  v658 = v381;
  v660 = v383;
  v651 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v375.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v652, v375.__r_.__value_.__l.__data_, v375.__r_.__value_.__l.__size_);
  else
    v652 = v375;
  v651 = off_24C335B18;
  v654 = v377;
  v653 = v376;
  v655 = v378;
  v646 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v370.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v647, v370.__r_.__value_.__l.__data_, v370.__r_.__value_.__l.__size_);
  else
    v647 = v370;
  v646 = off_24C335B18;
  v649 = v372;
  v648 = v371;
  v650 = v373;
  v641 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v365.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v642, v365.__r_.__value_.__l.__data_, v365.__r_.__value_.__l.__size_);
  else
    v642 = v365;
  v641 = off_24C335B18;
  v644 = v367;
  v643 = v366;
  v645 = v368;
  v636 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v360.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v637, v360.__r_.__value_.__l.__data_, v360.__r_.__value_.__l.__size_);
  else
    v637 = v360;
  v636 = off_24C335B18;
  v639 = v362;
  v638 = v361;
  v640 = v363;
  v631 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v355.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v632, v355.__r_.__value_.__l.__data_, v355.__r_.__value_.__l.__size_);
  else
    v632 = v355;
  v631 = off_24C335B18;
  v634 = v357;
  v633 = v356;
  v635 = v358;
  v626 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v350.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v627, v350.__r_.__value_.__l.__data_, v350.__r_.__value_.__l.__size_);
  else
    v627 = v350;
  v626 = off_24C335B18;
  v629 = v352;
  v628 = v351;
  v630 = v353;
  v621 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v345.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v622, v345.__r_.__value_.__l.__data_, v345.__r_.__value_.__l.__size_);
  else
    v622 = v345;
  v621 = off_24C335B18;
  v624 = v347;
  v623 = v346;
  v625 = v348;
  v616 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v340.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v617, v340.__r_.__value_.__l.__data_, v340.__r_.__value_.__l.__size_);
  else
    v617 = v340;
  v616 = off_24C335B18;
  v619 = v342;
  v618 = v341;
  v620 = v343;
  v611 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v335.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v612, v335.__r_.__value_.__l.__data_, v335.__r_.__value_.__l.__size_);
  else
    v612 = v335;
  v611 = off_24C335B18;
  v614 = v337;
  v613 = v336;
  v615 = v338;
  v606 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v330.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v607, v330.__r_.__value_.__l.__data_, v330.__r_.__value_.__l.__size_);
  else
    v607 = v330;
  v606 = off_24C335B18;
  v609 = v332;
  v608 = v331;
  v610 = v333;
  v601 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v325.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v602, v325.__r_.__value_.__l.__data_, v325.__r_.__value_.__l.__size_);
  else
    v602 = v325;
  v603 = v326;
  v601 = &off_24C335AB8;
  v604 = v327;
  if (SHIBYTE(v328.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v605, v328.__r_.__value_.__l.__data_, v328.__r_.__value_.__l.__size_);
  else
    v605 = v328;
  v596 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v320.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v597, v320.__r_.__value_.__l.__data_, v320.__r_.__value_.__l.__size_);
  else
    v597 = v320;
  v598 = v321;
  v596 = &off_24C335AB8;
  v599 = v322;
  if (SHIBYTE(v323.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v600, v323.__r_.__value_.__l.__data_, v323.__r_.__value_.__l.__size_);
  else
    v600 = v323;
  v591 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v315.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v592, v315.__r_.__value_.__l.__data_, v315.__r_.__value_.__l.__size_);
  else
    v592 = v315;
  v593 = v316;
  v591 = &off_24C335AB8;
  v594 = v317;
  if (SHIBYTE(v318.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v595, v318.__r_.__value_.__l.__data_, v318.__r_.__value_.__l.__size_);
  else
    v595 = v318;
  v586 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v310.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v587, v310.__r_.__value_.__l.__data_, v310.__r_.__value_.__l.__size_);
  else
    v587 = v310;
  v588 = v311;
  v586 = &off_24C335AB8;
  v589 = v312;
  if (SHIBYTE(v313.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v590, v313.__r_.__value_.__l.__data_, v313.__r_.__value_.__l.__size_);
  else
    v590 = v313;
  v581 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v305.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v582, v305.__r_.__value_.__l.__data_, v305.__r_.__value_.__l.__size_);
  else
    v582 = v305;
  v583 = v306;
  v581 = &off_24C335AB8;
  v584 = v307;
  if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v585, v308.__r_.__value_.__l.__data_, v308.__r_.__value_.__l.__size_);
  else
    v585 = v308;
  v576 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v300.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v577, v300.__r_.__value_.__l.__data_, v300.__r_.__value_.__l.__size_);
  else
    v577 = v300;
  v576 = off_24C335B18;
  v579 = v302;
  v578 = v301;
  v580 = v303;
  v571 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v295.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v572, v295.__r_.__value_.__l.__data_, v295.__r_.__value_.__l.__size_);
  else
    v572 = v295;
  v571 = off_24C335B18;
  v574 = v297;
  v573 = v296;
  v575 = v298;
  v566 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v290.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v567, v290.__r_.__value_.__l.__data_, v290.__r_.__value_.__l.__size_);
  else
    v567 = v290;
  v568 = v291;
  v566 = &off_24C335AB8;
  v569 = v292;
  if (SHIBYTE(v293.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v570, v293.__r_.__value_.__l.__data_, v293.__r_.__value_.__l.__size_);
  else
    v570 = v293;
  v561 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v285.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v562, v285.__r_.__value_.__l.__data_, v285.__r_.__value_.__l.__size_);
  else
    v562 = v285;
  v561 = off_24C335B18;
  v564 = v287;
  v563 = v286;
  v565 = v288;
  v556 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v280.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v557, v280.__r_.__value_.__l.__data_, v280.__r_.__value_.__l.__size_);
  else
    v557 = v280;
  v556 = off_24C335B18;
  v559 = v282;
  v558 = v281;
  v560 = v283;
  v551 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v275.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v552, v275.__r_.__value_.__l.__data_, v275.__r_.__value_.__l.__size_);
  else
    v552 = v275;
  v553 = v276;
  v551 = &off_24C335AB8;
  v554 = v277;
  if (SHIBYTE(v278.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v555, v278.__r_.__value_.__l.__data_, v278.__r_.__value_.__l.__size_);
  else
    v555 = v278;
  v546 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v270.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v547, v270.__r_.__value_.__l.__data_, v270.__r_.__value_.__l.__size_);
  else
    v547 = v270;
  v548 = v271;
  v546 = &off_24C335AB8;
  v549 = v272;
  if (SHIBYTE(v273.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v550, v273.__r_.__value_.__l.__data_, v273.__r_.__value_.__l.__size_);
  else
    v550 = v273;
  v541 = (uint64_t (**)())off_24C335D90;
  v147 = SHIBYTE(v265.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v265.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v542, v265.__r_.__value_.__l.__data_, v265.__r_.__value_.__l.__size_);
  else
    v542 = v265;
  v541 = off_24C335B18;
  v544 = v267;
  v543 = v266;
  v545 = v268;
  v536 = (uint64_t (**)())off_24C335D90;
  v148 = SHIBYTE(v260.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v260.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v537, v260.__r_.__value_.__l.__data_, v260.__r_.__value_.__l.__size_);
  else
    v537 = v260;
  v536 = off_24C335B18;
  v539 = v262;
  v538 = v261;
  v540 = v263;
  v531 = (uint64_t (**)())off_24C335D90;
  v170 = SHIBYTE(v255.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v255.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v532, v255.__r_.__value_.__l.__data_, v255.__r_.__value_.__l.__size_);
  else
    v532 = v255;
  v531 = off_24C335B18;
  v534 = v257;
  v533 = v256;
  v535 = v258;
  v527 = (uint64_t (**)())off_24C335D90;
  v169 = SHIBYTE(v251.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v251.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v528, v251.__r_.__value_.__l.__data_, v251.__r_.__value_.__l.__size_);
  else
    v528 = v251;
  v529 = v252;
  v527 = off_24C335AF8;
  v530 = v253;
  v522 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v246.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v523, v246.__r_.__value_.__l.__data_, v246.__r_.__value_.__l.__size_);
  else
    v523 = v246;
  v524 = v247;
  v522 = &off_24C335AB8;
  v525 = v248;
  if (SHIBYTE(v249.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v526, v249.__r_.__value_.__l.__data_, v249.__r_.__value_.__l.__size_);
  else
    v526 = v249;
  v517 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v241.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v518, v241.__r_.__value_.__l.__data_, v241.__r_.__value_.__l.__size_);
  else
    v518 = v241;
  v519 = v242;
  v517 = &off_24C335AB8;
  v520 = v243;
  if (SHIBYTE(v244.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v521, v244.__r_.__value_.__l.__data_, v244.__r_.__value_.__l.__size_);
  else
    v521 = v244;
  v512 = (uint64_t (**)())off_24C335D90;
  v168 = SHIBYTE(v236.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v236.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v513, v236.__r_.__value_.__l.__data_, v236.__r_.__value_.__l.__size_);
  else
    v513 = v236;
  v512 = off_24C335B18;
  v515 = v238;
  v514 = v237;
  v516 = v239;
  v507 = (uint64_t (**)())off_24C335D90;
  v167 = SHIBYTE(v231.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v231.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v508, v231.__r_.__value_.__l.__data_, v231.__r_.__value_.__l.__size_);
  else
    v508 = v231;
  v507 = off_24C335B18;
  v510 = v233;
  v509 = v232;
  v511 = v234;
  v502 = (uint64_t (**)())off_24C335D90;
  v166 = SHIBYTE(v226.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v226.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v503, v226.__r_.__value_.__l.__data_, v226.__r_.__value_.__l.__size_);
  else
    v503 = v226;
  v502 = off_24C335B18;
  v505 = v228;
  v504 = v227;
  v506 = v229;
  v497 = (uint64_t (**)())off_24C335D90;
  v165 = SHIBYTE(v221.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v221.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v498, v221.__r_.__value_.__l.__data_, v221.__r_.__value_.__l.__size_);
  else
    v498 = v221;
  v497 = off_24C335B18;
  v500 = v223;
  v499 = v222;
  v501 = v224;
  v493 = (uint64_t (**)())off_24C335D90;
  v163 = SHIBYTE(v217.__r_.__value_.__r.__words[2]);
  v164 = v148;
  if (SHIBYTE(v217.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v494, v217.__r_.__value_.__l.__data_, v217.__r_.__value_.__l.__size_);
  else
    v494 = v217;
  v495 = v218;
  v493 = off_24C335AF8;
  v496 = v219;
  v489 = (uint64_t (**)())off_24C335D90;
  v149 = SHIBYTE(v213.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v213.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v490, v213.__r_.__value_.__l.__data_, v213.__r_.__value_.__l.__size_);
  else
    v490 = v213;
  v491 = v214;
  v489 = off_24C335AF8;
  v492 = v215;
  v484 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v208.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v485, v208.__r_.__value_.__l.__data_, v208.__r_.__value_.__l.__size_);
  else
    v485 = v208;
  v486 = v209;
  v484 = &off_24C335AB8;
  v487 = v210;
  v162 = v147;
  if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v488, v211.__r_.__value_.__l.__data_, v211.__r_.__value_.__l.__size_);
  else
    v488 = v211;
  v479 = (uint64_t (**)())off_24C335D90;
  v150 = SHIBYTE(v203.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v203.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v480, v203.__r_.__value_.__l.__data_, v203.__r_.__value_.__l.__size_);
  else
    v480 = v203;
  v479 = off_24C335B18;
  v482 = v205;
  v481 = v204;
  v483 = v206;
  v474 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v198.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v475, v198.__r_.__value_.__l.__data_, v198.__r_.__value_.__l.__size_);
  else
    v475 = v198;
  v476 = v199;
  v474 = &off_24C335AB8;
  v477 = v200;
  if (SHIBYTE(v201.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v478, v201.__r_.__value_.__l.__data_, v201.__r_.__value_.__l.__size_);
  else
    v478 = v201;
  v469 = (uint64_t (**)())off_24C335D90;
  v151 = SHIBYTE(v193.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v193.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v470, v193.__r_.__value_.__l.__data_, v193.__r_.__value_.__l.__size_);
  else
    v470 = v193;
  v469 = off_24C335B18;
  v472 = v195;
  v471 = v194;
  v473 = v196;
  v464 = (uint64_t (**)())off_24C335D90;
  v152 = SHIBYTE(v188.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v188.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v465, v188.__r_.__value_.__l.__data_, v188.__r_.__value_.__l.__size_);
  else
    v465 = v188;
  v464 = off_24C335B18;
  v467 = v190;
  v466 = v189;
  v468 = v191;
  v459 = (uint64_t (**)())off_24C335D90;
  v153 = SHIBYTE(v183.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v183.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v460, v183.__r_.__value_.__l.__data_, v183.__r_.__value_.__l.__size_);
  else
    v460 = v183;
  v459 = off_24C335B18;
  v462 = v185;
  v461 = v184;
  v463 = v186;
  v454 = (uint64_t (**)())off_24C335D90;
  v154 = SHIBYTE(v178.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v178.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v178.__r_.__value_.__l.__data_, v178.__r_.__value_.__l.__size_);
  else
    __p = v178;
  v454 = off_24C335B18;
  v457 = v180;
  v456 = v179;
  v458 = v181;
  v449 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v173.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v450, v173.__r_.__value_.__l.__data_, v173.__r_.__value_.__l.__size_);
  else
    v450 = v173;
  v451 = v174;
  v449 = &off_24C335AB8;
  v452 = v175;
  if (SHIBYTE(v176.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v453, v176.__r_.__value_.__l.__data_, v176.__r_.__value_.__l.__size_);
  else
    v453 = v176;
  mediaplatform::DatabaseColumnTuple<3ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(v171, (uint64_t)&v716, (uint64_t)&v711, (uint64_t)&v706, (uint64_t)&v701, (uint64_t)&v696, (uint64_t)&v691, (uint64_t)&v686, (uint64_t)&v681, (uint64_t)&v676, (uint64_t)&v671, (uint64_t)&v666, (uint64_t)&v661, (uint64_t)&v656, (uint64_t)&v651, (uint64_t)&v646, (uint64_t)&v641, (uint64_t)&v636, (uint64_t)&v631,
    (uint64_t)&v626,
    (uint64_t)&v621,
    (uint64_t)&v616,
    (uint64_t)&v611,
    (uint64_t)&v606,
    (uint64_t)&v601,
    (uint64_t)&v596,
    (uint64_t)&v591,
    (uint64_t)&v586,
    (uint64_t)&v581,
    (uint64_t)&v576,
    (uint64_t)&v571,
    (uint64_t)&v566,
    (uint64_t)&v561,
    (uint64_t)&v556,
    (uint64_t)&v551,
    (uint64_t)&v546,
    (uint64_t)&v541,
    (uint64_t)&v536,
    (uint64_t)&v531,
    (uint64_t)&v527,
    (uint64_t)&v522,
    (uint64_t)&v517,
    (uint64_t)&v512,
    (uint64_t)&v507,
    (uint64_t)&v502,
    (uint64_t)&v497,
    (uint64_t)&v493,
    (uint64_t)&v489,
    (uint64_t)&v484,
    (uint64_t)&v479,
    (uint64_t)&v474,
    (uint64_t)&v469,
    (uint64_t)&v464,
    (uint64_t)&v459,
    (uint64_t)&v454,
    (uint64_t)&v449);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v449);
  v454 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v459 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v460.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v460.__r_.__value_.__l.__data_);
  v464 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v465.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v465.__r_.__value_.__l.__data_);
  v469 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v470.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v470.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v474);
  v479 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v480.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v480.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v484);
  v489 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v490.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v490.__r_.__value_.__l.__data_);
  v493 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v494.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v494.__r_.__value_.__l.__data_);
  v497 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v498.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v498.__r_.__value_.__l.__data_);
  v502 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v503.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v503.__r_.__value_.__l.__data_);
  v507 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v508.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v508.__r_.__value_.__l.__data_);
  v512 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v513.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v513.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v517);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v522);
  v527 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v528.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v528.__r_.__value_.__l.__data_);
  v531 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v532.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v532.__r_.__value_.__l.__data_);
  v536 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v537.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v537.__r_.__value_.__l.__data_);
  v541 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v542.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v542.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v546);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v551);
  v556 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v557.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v557.__r_.__value_.__l.__data_);
  v561 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v562.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v562.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v566);
  v571 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v572.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v572.__r_.__value_.__l.__data_);
  v576 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v577.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v577.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v581);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v586);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v591);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v596);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v601);
  v606 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v607.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v607.__r_.__value_.__l.__data_);
  v611 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v612.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v612.__r_.__value_.__l.__data_);
  v616 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v617.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v617.__r_.__value_.__l.__data_);
  v621 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v622.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v622.__r_.__value_.__l.__data_);
  v626 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v627.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v627.__r_.__value_.__l.__data_);
  v631 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v632.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v632.__r_.__value_.__l.__data_);
  v636 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v637.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v637.__r_.__value_.__l.__data_);
  v641 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v642.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v642.__r_.__value_.__l.__data_);
  v646 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v647.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v647.__r_.__value_.__l.__data_);
  v651 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v652.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v652.__r_.__value_.__l.__data_);
  v656 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v657.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v657.__r_.__value_.__l.__data_);
  v661 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v662.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v662.__r_.__value_.__l.__data_);
  v666 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v667.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v667.__r_.__value_.__l.__data_);
  v671 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v672.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v672.__r_.__value_.__l.__data_);
  v676 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v677.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v677.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v681);
  v686 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v687.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v687.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v691);
  v696 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v697.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v697.__r_.__value_.__l.__data_);
  v701 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v702.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v702.__r_.__value_.__l.__data_);
  v706 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v707.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v707.__r_.__value_.__l.__data_);
  v711 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v712.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v712.__r_.__value_.__l.__data_);
  v716 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v717.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v717.__r_.__value_.__l.__data_);
  *(_QWORD *)(v171 + 2880) = off_24C335D90;
  v155 = (std::string *)(v171 + 2888);
  v156 = SHIBYTE(v445.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v445.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v155, v445.__r_.__value_.__l.__data_, v445.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v155->__r_.__value_.__l.__data_ = *(_OWORD *)&v445.__r_.__value_.__l.__data_;
    *(_QWORD *)(v171 + 2904) = *((_QWORD *)&v445.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(v171 + 2912) = v446;
  *(_QWORD *)(v171 + 2880) = off_24C335B18;
  *(_QWORD *)(v171 + 2916) = v447;
  *(_DWORD *)(v171 + 2924) = v448;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v172);
  v177 = (uint64_t (**)())off_24C335D90;
  if (v154 < 0)
    operator delete(v178.__r_.__value_.__l.__data_);
  v182 = (uint64_t (**)())off_24C335D90;
  if (v153 < 0)
    operator delete(v183.__r_.__value_.__l.__data_);
  v187 = (uint64_t (**)())off_24C335D90;
  if (v152 < 0)
    operator delete(v188.__r_.__value_.__l.__data_);
  v192 = (uint64_t (**)())off_24C335D90;
  if (v151 < 0)
    operator delete(v193.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v197);
  v202 = (uint64_t (**)())off_24C335D90;
  if (v150 < 0)
    operator delete(v203.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v207);
  v212 = (uint64_t (**)())off_24C335D90;
  if (v149 < 0)
    operator delete(v213.__r_.__value_.__l.__data_);
  v216 = (uint64_t (**)())off_24C335D90;
  if (v163 < 0)
    operator delete(v217.__r_.__value_.__l.__data_);
  v220 = (uint64_t (**)())off_24C335D90;
  if (v165 < 0)
    operator delete(v221.__r_.__value_.__l.__data_);
  v225 = (uint64_t (**)())off_24C335D90;
  if (v166 < 0)
    operator delete(v226.__r_.__value_.__l.__data_);
  v230 = (uint64_t (**)())off_24C335D90;
  if (v167 < 0)
    operator delete(v231.__r_.__value_.__l.__data_);
  v235 = (uint64_t (**)())off_24C335D90;
  if (v168 < 0)
    operator delete(v236.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v240);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v245);
  v250 = (uint64_t (**)())off_24C335D90;
  if (v169 < 0)
    operator delete(v251.__r_.__value_.__l.__data_);
  v254 = (uint64_t (**)())off_24C335D90;
  if (v170 < 0)
    operator delete(v255.__r_.__value_.__l.__data_);
  v259 = (uint64_t (**)())off_24C335D90;
  if (v164 < 0)
    operator delete(v260.__r_.__value_.__l.__data_);
  v264 = (uint64_t (**)())off_24C335D90;
  if (v162 < 0)
    operator delete(v265.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v269);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v274);
  v279 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v280.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v280.__r_.__value_.__l.__data_);
  v284 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v285.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v285.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v289);
  v294 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v295.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v295.__r_.__value_.__l.__data_);
  v299 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v300.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v300.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v304);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v309);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v314);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v319);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v324);
  if (SHIBYTE(v330.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v330.__r_.__value_.__l.__data_);
  if (SHIBYTE(v335.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v335.__r_.__value_.__l.__data_);
  if (SHIBYTE(v340.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v340.__r_.__value_.__l.__data_);
  if (SHIBYTE(v345.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v345.__r_.__value_.__l.__data_);
  if (SHIBYTE(v350.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v350.__r_.__value_.__l.__data_);
  if (SHIBYTE(v355.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v355.__r_.__value_.__l.__data_);
  if (SHIBYTE(v360.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v360.__r_.__value_.__l.__data_);
  if (SHIBYTE(v365.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v365.__r_.__value_.__l.__data_);
  if (SHIBYTE(v370.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v370.__r_.__value_.__l.__data_);
  if (SHIBYTE(v375.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v375.__r_.__value_.__l.__data_);
  if (SHIBYTE(v380.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v380.__r_.__value_.__l.__data_);
  if (SHIBYTE(v385.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v385.__r_.__value_.__l.__data_);
  if (SHIBYTE(v390.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v390.__r_.__value_.__l.__data_);
  if (SHIBYTE(v395.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v395.__r_.__value_.__l.__data_);
  if (SHIBYTE(v400.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v400.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v404);
  if (SHIBYTE(v410.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v410.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v414);
  if (SHIBYTE(v420.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v420.__r_.__value_.__l.__data_);
  if (SHIBYTE(v425.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v425.__r_.__value_.__l.__data_);
  if (SHIBYTE(v430.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v430.__r_.__value_.__l.__data_);
  if (SHIBYTE(v435.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v435.__r_.__value_.__l.__data_);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__s.__r_.__value_.__l.__data_);
    if ((v156 & 0x80000000) == 0)
      goto LABEL_587;
  }
  else if ((v156 & 0x80000000) == 0)
  {
    goto LABEL_587;
  }
  operator delete(v445.__r_.__value_.__l.__data_);
LABEL_587:
  *(_QWORD *)(v171 + 2928) = off_24C335D90;
  v157 = (std::string *)(v171 + 2936);
  if (*(char *)(v161 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v157, *(const std::string::value_type **)(v161 + 8), *(_QWORD *)(v161 + 16));
  }
  else
  {
    v158 = *(_OWORD *)(v161 + 8);
    *(_QWORD *)(v171 + 2952) = *(_QWORD *)(v161 + 24);
    *(_OWORD *)&v157->__r_.__value_.__l.__data_ = v158;
  }
  *(_DWORD *)(v171 + 2960) = *(_DWORD *)(v161 + 32);
  *(_QWORD *)(v171 + 2928) = off_24C335B18;
  v159 = *(_QWORD *)(v161 + 36);
  *(_DWORD *)(v171 + 2972) = *(_DWORD *)(v161 + 44);
  *(_QWORD *)(v171 + 2964) = v159;
  return v171;
}

void sub_20A87FBF4(_Unwind_Exception *a1)
{
  uint64_t v1;

  mediaplatform::DatabaseColumnTuple<2ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(v1);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<1ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 2928) = off_24C335D90;
  if (*(char *)(a1 + 2959) < 0)
    operator delete(*(void **)(a1 + 2936));
  *(_QWORD *)(a1 + 2880) = off_24C335D90;
  if (*(char *)(a1 + 2911) < 0)
    operator delete(*(void **)(a1 + 2888));
  *(_QWORD *)(a1 + 2832) = off_24C335D90;
  if (*(char *)(a1 + 2863) < 0)
    operator delete(*(void **)(a1 + 2840));
  return mediaplatform::DatabaseColumnTuple<4ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<2ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 2880) = off_24C335D90;
  if (*(char *)(a1 + 2911) < 0)
    operator delete(*(void **)(a1 + 2888));
  *(_QWORD *)(a1 + 2832) = off_24C335D90;
  if (*(char *)(a1 + 2863) < 0)
    operator delete(*(void **)(a1 + 2840));
  return mediaplatform::DatabaseColumnTuple<4ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<3ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  std::string *v149;
  int v150;
  std::string *v151;
  __int128 v152;
  uint64_t v153;
  uint64_t v155;
  uint64_t v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  uint64_t (**v167)();
  std::string v168;
  int v169;
  char v170;
  std::string v171;
  uint64_t (**v172)();
  std::string v173;
  int v174;
  uint64_t v175;
  int v176;
  uint64_t (**v177)();
  std::string v178;
  int v179;
  uint64_t v180;
  int v181;
  uint64_t (**v182)();
  std::string v183;
  int v184;
  uint64_t v185;
  int v186;
  uint64_t (**v187)();
  std::string v188;
  int v189;
  uint64_t v190;
  int v191;
  uint64_t (**v192)();
  std::string v193;
  int v194;
  char v195;
  std::string v196;
  uint64_t (**v197)();
  std::string v198;
  int v199;
  uint64_t v200;
  int v201;
  uint64_t (**v202)();
  std::string v203;
  int v204;
  char v205;
  std::string v206;
  uint64_t (**v207)();
  std::string v208;
  int v209;
  uint64_t v210;
  uint64_t (**v211)();
  std::string v212;
  int v213;
  uint64_t v214;
  uint64_t (**v215)();
  std::string v216;
  int v217;
  uint64_t v218;
  int v219;
  uint64_t (**v220)();
  std::string v221;
  int v222;
  uint64_t v223;
  int v224;
  uint64_t (**v225)();
  std::string v226;
  int v227;
  uint64_t v228;
  int v229;
  uint64_t (**v230)();
  std::string v231;
  int v232;
  uint64_t v233;
  int v234;
  uint64_t (**v235)();
  std::string v236;
  int v237;
  char v238;
  std::string v239;
  uint64_t (**v240)();
  std::string v241;
  int v242;
  char v243;
  std::string v244;
  uint64_t (**v245)();
  std::string v246;
  int v247;
  uint64_t v248;
  uint64_t (**v249)();
  std::string v250;
  int v251;
  uint64_t v252;
  int v253;
  uint64_t (**v254)();
  std::string v255;
  int v256;
  uint64_t v257;
  int v258;
  uint64_t (**v259)();
  std::string v260;
  int v261;
  uint64_t v262;
  int v263;
  uint64_t (**v264)();
  std::string v265;
  int v266;
  char v267;
  std::string v268;
  uint64_t (**v269)();
  std::string v270;
  int v271;
  char v272;
  std::string v273;
  uint64_t (**v274)();
  std::string v275;
  int v276;
  uint64_t v277;
  int v278;
  uint64_t (**v279)();
  std::string v280;
  int v281;
  uint64_t v282;
  int v283;
  uint64_t (**v284)();
  std::string v285;
  int v286;
  char v287;
  std::string v288;
  uint64_t (**v289)();
  std::string v290;
  int v291;
  uint64_t v292;
  int v293;
  uint64_t (**v294)();
  std::string v295;
  int v296;
  uint64_t v297;
  int v298;
  uint64_t (**v299)();
  std::string v300;
  int v301;
  char v302;
  std::string v303;
  uint64_t (**v304)();
  std::string v305;
  int v306;
  char v307;
  std::string v308;
  uint64_t (**v309)();
  std::string v310;
  int v311;
  char v312;
  std::string v313;
  uint64_t (**v314)();
  std::string v315;
  int v316;
  char v317;
  std::string v318;
  uint64_t (**v319)();
  std::string v320;
  int v321;
  char v322;
  std::string v323;
  uint64_t (**v324)();
  std::string v325;
  int v326;
  uint64_t v327;
  int v328;
  uint64_t (**v329)();
  std::string v330;
  int v331;
  uint64_t v332;
  int v333;
  uint64_t (**v334)();
  std::string v335;
  int v336;
  uint64_t v337;
  int v338;
  uint64_t (**v339)();
  std::string v340;
  int v341;
  uint64_t v342;
  int v343;
  uint64_t (**v344)();
  std::string v345;
  int v346;
  uint64_t v347;
  int v348;
  uint64_t (**v349)();
  std::string v350;
  int v351;
  uint64_t v352;
  int v353;
  uint64_t (**v354)();
  std::string v355;
  int v356;
  uint64_t v357;
  int v358;
  uint64_t (**v359)();
  std::string v360;
  int v361;
  uint64_t v362;
  int v363;
  uint64_t (**v364)();
  std::string v365;
  int v366;
  uint64_t v367;
  int v368;
  uint64_t (**v369)();
  std::string v370;
  int v371;
  uint64_t v372;
  int v373;
  uint64_t (**v374)();
  std::string v375;
  int v376;
  uint64_t v377;
  int v378;
  uint64_t (**v379)();
  std::string v380;
  int v381;
  uint64_t v382;
  int v383;
  uint64_t (**v384)();
  std::string v385;
  int v386;
  uint64_t v387;
  int v388;
  uint64_t (**v389)();
  std::string v390;
  int v391;
  uint64_t v392;
  int v393;
  uint64_t (**v394)();
  std::string v395;
  int v396;
  uint64_t v397;
  int v398;
  uint64_t (**v399)();
  std::string v400;
  int v401;
  char v402;
  std::string v403;
  uint64_t (**v404)();
  std::string v405;
  int v406;
  uint64_t v407;
  int v408;
  uint64_t (**v409)();
  std::string v410;
  int v411;
  char v412;
  std::string v413;
  uint64_t (**v414)();
  std::string v415;
  int v416;
  uint64_t v417;
  int v418;
  uint64_t (**v419)();
  std::string v420;
  int v421;
  uint64_t v422;
  int v423;
  uint64_t (**v424)();
  std::string __s;
  int v426;
  uint64_t v427;
  int v428;
  uint64_t (**v429)();
  std::string v430;
  int v431;
  uint64_t v432;
  int v433;
  uint64_t (**v434)();
  std::string v435;
  int v436;
  char v437;
  std::string v438;
  uint64_t (**v439)();
  std::string __p;
  int v441;
  uint64_t v442;
  int v443;
  uint64_t (**v444)();
  std::string v445;
  int v446;
  uint64_t v447;
  int v448;
  uint64_t (**v449)();
  std::string v450;
  int v451;
  uint64_t v452;
  int v453;
  uint64_t (**v454)();
  std::string v455;
  int v456;
  uint64_t v457;
  int v458;
  uint64_t (**v459)();
  std::string v460;
  int v461;
  char v462;
  std::string v463;
  uint64_t (**v464)();
  std::string v465;
  int v466;
  uint64_t v467;
  int v468;
  uint64_t (**v469)();
  std::string v470;
  int v471;
  char v472;
  std::string v473;
  uint64_t (**v474)();
  std::string v475;
  int v476;
  uint64_t v477;
  uint64_t (**v478)();
  std::string v479;
  int v480;
  uint64_t v481;
  uint64_t (**v482)();
  std::string v483;
  int v484;
  uint64_t v485;
  int v486;
  uint64_t (**v487)();
  std::string v488;
  int v489;
  uint64_t v490;
  int v491;
  uint64_t (**v492)();
  std::string v493;
  int v494;
  uint64_t v495;
  int v496;
  uint64_t (**v497)();
  std::string v498;
  int v499;
  uint64_t v500;
  int v501;
  uint64_t (**v502)();
  std::string v503;
  int v504;
  char v505;
  std::string v506;
  uint64_t (**v507)();
  std::string v508;
  int v509;
  char v510;
  std::string v511;
  uint64_t (**v512)();
  std::string v513;
  int v514;
  uint64_t v515;
  uint64_t (**v516)();
  std::string v517;
  int v518;
  uint64_t v519;
  int v520;
  uint64_t (**v521)();
  std::string v522;
  int v523;
  uint64_t v524;
  int v525;
  uint64_t (**v526)();
  std::string v527;
  int v528;
  uint64_t v529;
  int v530;
  uint64_t (**v531)();
  std::string v532;
  int v533;
  char v534;
  std::string v535;
  uint64_t (**v536)();
  std::string v537;
  int v538;
  char v539;
  std::string v540;
  uint64_t (**v541)();
  std::string v542;
  int v543;
  uint64_t v544;
  int v545;
  uint64_t (**v546)();
  std::string v547;
  int v548;
  uint64_t v549;
  int v550;
  uint64_t (**v551)();
  std::string v552;
  int v553;
  char v554;
  std::string v555;
  uint64_t (**v556)();
  std::string v557;
  int v558;
  uint64_t v559;
  int v560;
  uint64_t (**v561)();
  std::string v562;
  int v563;
  uint64_t v564;
  int v565;
  uint64_t (**v566)();
  std::string v567;
  int v568;
  char v569;
  std::string v570;
  uint64_t (**v571)();
  std::string v572;
  int v573;
  char v574;
  std::string v575;
  uint64_t (**v576)();
  std::string v577;
  int v578;
  char v579;
  std::string v580;
  uint64_t (**v581)();
  std::string v582;
  int v583;
  char v584;
  std::string v585;
  uint64_t (**v586)();
  std::string v587;
  int v588;
  char v589;
  std::string v590;
  uint64_t (**v591)();
  std::string v592;
  int v593;
  uint64_t v594;
  int v595;
  uint64_t (**v596)();
  std::string v597;
  int v598;
  uint64_t v599;
  int v600;
  uint64_t (**v601)();
  std::string v602;
  int v603;
  uint64_t v604;
  int v605;
  uint64_t (**v606)();
  std::string v607;
  int v608;
  uint64_t v609;
  int v610;
  uint64_t (**v611)();
  std::string v612;
  int v613;
  uint64_t v614;
  int v615;
  uint64_t (**v616)();
  std::string v617;
  int v618;
  uint64_t v619;
  int v620;
  uint64_t (**v621)();
  std::string v622;
  int v623;
  uint64_t v624;
  int v625;
  uint64_t (**v626)();
  std::string v627;
  int v628;
  uint64_t v629;
  int v630;
  uint64_t (**v631)();
  std::string v632;
  int v633;
  uint64_t v634;
  int v635;
  uint64_t (**v636)();
  std::string v637;
  int v638;
  uint64_t v639;
  int v640;
  uint64_t (**v641)();
  std::string v642;
  int v643;
  uint64_t v644;
  int v645;
  uint64_t (**v646)();
  std::string v647;
  int v648;
  uint64_t v649;
  int v650;
  uint64_t (**v651)();
  std::string v652;
  int v653;
  uint64_t v654;
  int v655;
  uint64_t (**v656)();
  std::string v657;
  int v658;
  uint64_t v659;
  int v660;
  uint64_t (**v661)();
  std::string v662;
  int v663;
  uint64_t v664;
  int v665;
  uint64_t (**v666)();
  std::string v667;
  int v668;
  char v669;
  std::string v670;
  uint64_t (**v671)();
  std::string v672;
  int v673;
  uint64_t v674;
  int v675;
  uint64_t (**v676)();
  std::string v677;
  int v678;
  char v679;
  std::string v680;
  uint64_t (**v681)();
  std::string v682;
  int v683;
  uint64_t v684;
  int v685;
  uint64_t (**v686)();
  std::string v687;
  int v688;
  uint64_t v689;
  int v690;
  uint64_t (**v691)();
  std::string v692;
  int v693;
  uint64_t v694;
  int v695;

  v56 = MEMORY[0x24BDAC7A8](a1);
  v59 = v58;
  v61 = v60;
  v63 = v62;
  v65 = v64;
  v67 = v66;
  v68 = v57;
  v156 = v69;
  v70 = v56;
  if (*(char *)(v57 + 31) < 0)
    std::string::__init_copy_ctor_external(&v430, *(const std::string::value_type **)(v57 + 8), *(_QWORD *)(v57 + 16));
  else
    v430 = *(std::string *)(v57 + 8);
  v71 = *(_DWORD *)(v68 + 32);
  v429 = off_24C335B18;
  v432 = *(_QWORD *)(v68 + 36);
  v72 = *(_DWORD *)(v68 + 44);
  v431 = v71;
  v433 = v72;
  if (*(char *)(v67 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(v67 + 8), *(_QWORD *)(v67 + 16));
  else
    __s = *(std::string *)(v67 + 8);
  v73 = *(_DWORD *)(v67 + 32);
  v424 = off_24C335B18;
  v427 = *(_QWORD *)(v67 + 36);
  v74 = *(_DWORD *)(v67 + 44);
  v426 = v73;
  v428 = v74;
  if (*(char *)(v65 + 31) < 0)
    std::string::__init_copy_ctor_external(&v420, *(const std::string::value_type **)(v65 + 8), *(_QWORD *)(v65 + 16));
  else
    v420 = *(std::string *)(v65 + 8);
  v75 = *(_DWORD *)(v65 + 32);
  v419 = off_24C335B18;
  v422 = *(_QWORD *)(v65 + 36);
  v76 = *(_DWORD *)(v65 + 44);
  v421 = v75;
  v423 = v76;
  if (*(char *)(v63 + 31) < 0)
    std::string::__init_copy_ctor_external(&v415, *(const std::string::value_type **)(v63 + 8), *(_QWORD *)(v63 + 16));
  else
    v415 = *(std::string *)(v63 + 8);
  v77 = *(_DWORD *)(v63 + 32);
  v414 = off_24C335B18;
  v417 = *(_QWORD *)(v63 + 36);
  v78 = *(_DWORD *)(v63 + 44);
  v416 = v77;
  v418 = v78;
  v409 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v61 + 31) < 0)
    std::string::__init_copy_ctor_external(&v410, *(const std::string::value_type **)(v61 + 8), *(_QWORD *)(v61 + 16));
  else
    v410 = *(std::string *)(v61 + 8);
  v411 = *(_DWORD *)(v61 + 32);
  v409 = &off_24C335AB8;
  v412 = *(_BYTE *)(v61 + 36);
  if (*(char *)(v61 + 63) < 0)
    std::string::__init_copy_ctor_external(&v413, *(const std::string::value_type **)(v61 + 40), *(_QWORD *)(v61 + 48));
  else
    v413 = *(std::string *)(v61 + 40);
  if (*(char *)(v59 + 31) < 0)
    std::string::__init_copy_ctor_external(&v405, *(const std::string::value_type **)(v59 + 8), *(_QWORD *)(v59 + 16));
  else
    v405 = *(std::string *)(v59 + 8);
  v79 = *(_DWORD *)(v59 + 32);
  v404 = off_24C335B18;
  v407 = *(_QWORD *)(v59 + 36);
  v80 = *(_DWORD *)(v59 + 44);
  v406 = v79;
  v408 = v80;
  v399 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v400, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v400 = *(std::string *)(a9 + 8);
  v401 = *(_DWORD *)(a9 + 32);
  v399 = &off_24C335AB8;
  v402 = *(_BYTE *)(a9 + 36);
  if (*(char *)(a9 + 63) < 0)
    std::string::__init_copy_ctor_external(&v403, *(const std::string::value_type **)(a9 + 40), *(_QWORD *)(a9 + 48));
  else
    v403 = *(std::string *)(a9 + 40);
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v395, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v395 = *(std::string *)(a10 + 8);
  v81 = *(_DWORD *)(a10 + 32);
  v394 = off_24C335B18;
  v397 = *(_QWORD *)(a10 + 36);
  v82 = *(_DWORD *)(a10 + 44);
  v396 = v81;
  v398 = v82;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v390, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v390 = *(std::string *)(a11 + 8);
  v83 = *(_DWORD *)(a11 + 32);
  v389 = off_24C335B18;
  v392 = *(_QWORD *)(a11 + 36);
  v84 = *(_DWORD *)(a11 + 44);
  v391 = v83;
  v393 = v84;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v385, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v385 = *(std::string *)(a12 + 8);
  v85 = *(_DWORD *)(a12 + 32);
  v384 = off_24C335B18;
  v387 = *(_QWORD *)(a12 + 36);
  v86 = *(_DWORD *)(a12 + 44);
  v386 = v85;
  v388 = v86;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v380, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v380 = *(std::string *)(a13 + 8);
  v87 = *(_DWORD *)(a13 + 32);
  v379 = off_24C335B18;
  v382 = *(_QWORD *)(a13 + 36);
  v88 = *(_DWORD *)(a13 + 44);
  v381 = v87;
  v383 = v88;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v375, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v375 = *(std::string *)(a14 + 8);
  v89 = *(_DWORD *)(a14 + 32);
  v374 = off_24C335B18;
  v377 = *(_QWORD *)(a14 + 36);
  v90 = *(_DWORD *)(a14 + 44);
  v376 = v89;
  v378 = v90;
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v370, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v370 = *(std::string *)(a15 + 8);
  v91 = *(_DWORD *)(a15 + 32);
  v369 = off_24C335B18;
  v372 = *(_QWORD *)(a15 + 36);
  v92 = *(_DWORD *)(a15 + 44);
  v371 = v91;
  v373 = v92;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v365, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v365 = *(std::string *)(a16 + 8);
  v93 = *(_DWORD *)(a16 + 32);
  v364 = off_24C335B18;
  v367 = *(_QWORD *)(a16 + 36);
  v94 = *(_DWORD *)(a16 + 44);
  v366 = v93;
  v368 = v94;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v360, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v360 = *(std::string *)(a17 + 8);
  v95 = *(_DWORD *)(a17 + 32);
  v359 = off_24C335B18;
  v362 = *(_QWORD *)(a17 + 36);
  v96 = *(_DWORD *)(a17 + 44);
  v361 = v95;
  v363 = v96;
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v355, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v355 = *(std::string *)(a18 + 8);
  v97 = *(_DWORD *)(a18 + 32);
  v354 = off_24C335B18;
  v357 = *(_QWORD *)(a18 + 36);
  v98 = *(_DWORD *)(a18 + 44);
  v356 = v97;
  v358 = v98;
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v350, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v350 = *(std::string *)(a19 + 8);
  v99 = *(_DWORD *)(a19 + 32);
  v349 = off_24C335B18;
  v352 = *(_QWORD *)(a19 + 36);
  v100 = *(_DWORD *)(a19 + 44);
  v351 = v99;
  v353 = v100;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v345, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v345 = *(std::string *)(a20 + 8);
  v101 = *(_DWORD *)(a20 + 32);
  v344 = off_24C335B18;
  v347 = *(_QWORD *)(a20 + 36);
  v102 = *(_DWORD *)(a20 + 44);
  v346 = v101;
  v348 = v102;
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v340, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v340 = *(std::string *)(a21 + 8);
  v103 = *(_DWORD *)(a21 + 32);
  v339 = off_24C335B18;
  v342 = *(_QWORD *)(a21 + 36);
  v104 = *(_DWORD *)(a21 + 44);
  v341 = v103;
  v343 = v104;
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v335, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v335 = *(std::string *)(a22 + 8);
  v105 = *(_DWORD *)(a22 + 32);
  v334 = off_24C335B18;
  v337 = *(_QWORD *)(a22 + 36);
  v106 = *(_DWORD *)(a22 + 44);
  v336 = v105;
  v338 = v106;
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v330, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v330 = *(std::string *)(a23 + 8);
  v107 = *(_DWORD *)(a23 + 32);
  v329 = off_24C335B18;
  v332 = *(_QWORD *)(a23 + 36);
  v108 = *(_DWORD *)(a23 + 44);
  v331 = v107;
  v333 = v108;
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v325, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v325 = *(std::string *)(a24 + 8);
  v109 = *(_DWORD *)(a24 + 32);
  v324 = off_24C335B18;
  v327 = *(_QWORD *)(a24 + 36);
  v110 = *(_DWORD *)(a24 + 44);
  v326 = v109;
  v328 = v110;
  v319 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a25 + 31) < 0)
    std::string::__init_copy_ctor_external(&v320, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  else
    v320 = *(std::string *)(a25 + 8);
  v321 = *(_DWORD *)(a25 + 32);
  v319 = &off_24C335AB8;
  v322 = *(_BYTE *)(a25 + 36);
  if (*(char *)(a25 + 63) < 0)
    std::string::__init_copy_ctor_external(&v323, *(const std::string::value_type **)(a25 + 40), *(_QWORD *)(a25 + 48));
  else
    v323 = *(std::string *)(a25 + 40);
  v314 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v315, *(const std::string::value_type **)(a26 + 8), *(_QWORD *)(a26 + 16));
  else
    v315 = *(std::string *)(a26 + 8);
  v316 = *(_DWORD *)(a26 + 32);
  v314 = &off_24C335AB8;
  v317 = *(_BYTE *)(a26 + 36);
  if (*(char *)(a26 + 63) < 0)
    std::string::__init_copy_ctor_external(&v318, *(const std::string::value_type **)(a26 + 40), *(_QWORD *)(a26 + 48));
  else
    v318 = *(std::string *)(a26 + 40);
  v309 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a27 + 31) < 0)
    std::string::__init_copy_ctor_external(&v310, *(const std::string::value_type **)(a27 + 8), *(_QWORD *)(a27 + 16));
  else
    v310 = *(std::string *)(a27 + 8);
  v311 = *(_DWORD *)(a27 + 32);
  v309 = &off_24C335AB8;
  v312 = *(_BYTE *)(a27 + 36);
  if (*(char *)(a27 + 63) < 0)
    std::string::__init_copy_ctor_external(&v313, *(const std::string::value_type **)(a27 + 40), *(_QWORD *)(a27 + 48));
  else
    v313 = *(std::string *)(a27 + 40);
  v304 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v305, *(const std::string::value_type **)(a28 + 8), *(_QWORD *)(a28 + 16));
  else
    v305 = *(std::string *)(a28 + 8);
  v306 = *(_DWORD *)(a28 + 32);
  v304 = &off_24C335AB8;
  v307 = *(_BYTE *)(a28 + 36);
  if (*(char *)(a28 + 63) < 0)
    std::string::__init_copy_ctor_external(&v308, *(const std::string::value_type **)(a28 + 40), *(_QWORD *)(a28 + 48));
  else
    v308 = *(std::string *)(a28 + 40);
  v299 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a29 + 31) < 0)
    std::string::__init_copy_ctor_external(&v300, *(const std::string::value_type **)(a29 + 8), *(_QWORD *)(a29 + 16));
  else
    v300 = *(std::string *)(a29 + 8);
  v301 = *(_DWORD *)(a29 + 32);
  v299 = &off_24C335AB8;
  v302 = *(_BYTE *)(a29 + 36);
  if (*(char *)(a29 + 63) < 0)
    std::string::__init_copy_ctor_external(&v303, *(const std::string::value_type **)(a29 + 40), *(_QWORD *)(a29 + 48));
  else
    v303 = *(std::string *)(a29 + 40);
  if (*(char *)(a30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v295, *(const std::string::value_type **)(a30 + 8), *(_QWORD *)(a30 + 16));
  else
    v295 = *(std::string *)(a30 + 8);
  v111 = *(_DWORD *)(a30 + 32);
  v294 = off_24C335B18;
  v297 = *(_QWORD *)(a30 + 36);
  v112 = *(_DWORD *)(a30 + 44);
  v296 = v111;
  v298 = v112;
  if (*(char *)(a31 + 31) < 0)
    std::string::__init_copy_ctor_external(&v290, *(const std::string::value_type **)(a31 + 8), *(_QWORD *)(a31 + 16));
  else
    v290 = *(std::string *)(a31 + 8);
  v113 = *(_DWORD *)(a31 + 32);
  v289 = off_24C335B18;
  v292 = *(_QWORD *)(a31 + 36);
  v114 = *(_DWORD *)(a31 + 44);
  v291 = v113;
  v293 = v114;
  v284 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a32 + 31) < 0)
    std::string::__init_copy_ctor_external(&v285, *(const std::string::value_type **)(a32 + 8), *(_QWORD *)(a32 + 16));
  else
    v285 = *(std::string *)(a32 + 8);
  v286 = *(_DWORD *)(a32 + 32);
  v284 = &off_24C335AB8;
  v287 = *(_BYTE *)(a32 + 36);
  if (*(char *)(a32 + 63) < 0)
    std::string::__init_copy_ctor_external(&v288, *(const std::string::value_type **)(a32 + 40), *(_QWORD *)(a32 + 48));
  else
    v288 = *(std::string *)(a32 + 40);
  if (*(char *)(a33 + 31) < 0)
    std::string::__init_copy_ctor_external(&v280, *(const std::string::value_type **)(a33 + 8), *(_QWORD *)(a33 + 16));
  else
    v280 = *(std::string *)(a33 + 8);
  v115 = *(_DWORD *)(a33 + 32);
  v279 = off_24C335B18;
  v282 = *(_QWORD *)(a33 + 36);
  v116 = *(_DWORD *)(a33 + 44);
  v281 = v115;
  v283 = v116;
  if (*(char *)(a34 + 31) < 0)
    std::string::__init_copy_ctor_external(&v275, *(const std::string::value_type **)(a34 + 8), *(_QWORD *)(a34 + 16));
  else
    v275 = *(std::string *)(a34 + 8);
  v117 = *(_DWORD *)(a34 + 32);
  v274 = off_24C335B18;
  v277 = *(_QWORD *)(a34 + 36);
  v118 = *(_DWORD *)(a34 + 44);
  v276 = v117;
  v278 = v118;
  v269 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a35 + 31) < 0)
    std::string::__init_copy_ctor_external(&v270, *(const std::string::value_type **)(a35 + 8), *(_QWORD *)(a35 + 16));
  else
    v270 = *(std::string *)(a35 + 8);
  v271 = *(_DWORD *)(a35 + 32);
  v269 = &off_24C335AB8;
  v272 = *(_BYTE *)(a35 + 36);
  if (*(char *)(a35 + 63) < 0)
    std::string::__init_copy_ctor_external(&v273, *(const std::string::value_type **)(a35 + 40), *(_QWORD *)(a35 + 48));
  else
    v273 = *(std::string *)(a35 + 40);
  v264 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a36 + 31) < 0)
    std::string::__init_copy_ctor_external(&v265, *(const std::string::value_type **)(a36 + 8), *(_QWORD *)(a36 + 16));
  else
    v265 = *(std::string *)(a36 + 8);
  v266 = *(_DWORD *)(a36 + 32);
  v264 = &off_24C335AB8;
  v267 = *(_BYTE *)(a36 + 36);
  if (*(char *)(a36 + 63) < 0)
    std::string::__init_copy_ctor_external(&v268, *(const std::string::value_type **)(a36 + 40), *(_QWORD *)(a36 + 48));
  else
    v268 = *(std::string *)(a36 + 40);
  if (*(char *)(a37 + 31) < 0)
    std::string::__init_copy_ctor_external(&v260, *(const std::string::value_type **)(a37 + 8), *(_QWORD *)(a37 + 16));
  else
    v260 = *(std::string *)(a37 + 8);
  v119 = *(_DWORD *)(a37 + 32);
  v259 = off_24C335B18;
  v262 = *(_QWORD *)(a37 + 36);
  v120 = *(_DWORD *)(a37 + 44);
  v261 = v119;
  v263 = v120;
  v254 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a38 + 31) < 0)
    std::string::__init_copy_ctor_external(&v255, *(const std::string::value_type **)(a38 + 8), *(_QWORD *)(a38 + 16));
  else
    v255 = *(std::string *)(a38 + 8);
  v121 = *(_DWORD *)(a38 + 32);
  v254 = off_24C335B18;
  v257 = *(_QWORD *)(a38 + 36);
  v122 = *(_DWORD *)(a38 + 44);
  v256 = v121;
  v258 = v122;
  v249 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a39 + 31) < 0)
    std::string::__init_copy_ctor_external(&v250, *(const std::string::value_type **)(a39 + 8), *(_QWORD *)(a39 + 16));
  else
    v250 = *(std::string *)(a39 + 8);
  v123 = *(_DWORD *)(a39 + 32);
  v249 = off_24C335B18;
  v252 = *(_QWORD *)(a39 + 36);
  v124 = *(_DWORD *)(a39 + 44);
  v251 = v123;
  v253 = v124;
  v245 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a40 + 31) < 0)
    std::string::__init_copy_ctor_external(&v246, *(const std::string::value_type **)(a40 + 8), *(_QWORD *)(a40 + 16));
  else
    v246 = *(std::string *)(a40 + 8);
  v247 = *(_DWORD *)(a40 + 32);
  v245 = off_24C335AF8;
  v248 = *(_QWORD *)(a40 + 36);
  v240 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a41 + 31) < 0)
    std::string::__init_copy_ctor_external(&v241, *(const std::string::value_type **)(a41 + 8), *(_QWORD *)(a41 + 16));
  else
    v241 = *(std::string *)(a41 + 8);
  v242 = *(_DWORD *)(a41 + 32);
  v240 = &off_24C335AB8;
  v243 = *(_BYTE *)(a41 + 36);
  if (*(char *)(a41 + 63) < 0)
    std::string::__init_copy_ctor_external(&v244, *(const std::string::value_type **)(a41 + 40), *(_QWORD *)(a41 + 48));
  else
    v244 = *(std::string *)(a41 + 40);
  v235 = (uint64_t (**)())off_24C335D90;
  v155 = v70;
  if (*(char *)(a42 + 31) < 0)
    std::string::__init_copy_ctor_external(&v236, *(const std::string::value_type **)(a42 + 8), *(_QWORD *)(a42 + 16));
  else
    v236 = *(std::string *)(a42 + 8);
  v237 = *(_DWORD *)(a42 + 32);
  v235 = &off_24C335AB8;
  v238 = *(_BYTE *)(a42 + 36);
  if (*(char *)(a42 + 63) < 0)
    std::string::__init_copy_ctor_external(&v239, *(const std::string::value_type **)(a42 + 40), *(_QWORD *)(a42 + 48));
  else
    v239 = *(std::string *)(a42 + 40);
  v230 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a43 + 31) < 0)
    std::string::__init_copy_ctor_external(&v231, *(const std::string::value_type **)(a43 + 8), *(_QWORD *)(a43 + 16));
  else
    v231 = *(std::string *)(a43 + 8);
  v125 = *(_DWORD *)(a43 + 32);
  v230 = off_24C335B18;
  v233 = *(_QWORD *)(a43 + 36);
  v126 = *(_DWORD *)(a43 + 44);
  v232 = v125;
  v234 = v126;
  v225 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a44 + 31) < 0)
    std::string::__init_copy_ctor_external(&v226, *(const std::string::value_type **)(a44 + 8), *(_QWORD *)(a44 + 16));
  else
    v226 = *(std::string *)(a44 + 8);
  v127 = *(_DWORD *)(a44 + 32);
  v225 = off_24C335B18;
  v228 = *(_QWORD *)(a44 + 36);
  v128 = *(_DWORD *)(a44 + 44);
  v227 = v127;
  v229 = v128;
  v220 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a45 + 31) < 0)
    std::string::__init_copy_ctor_external(&v221, *(const std::string::value_type **)(a45 + 8), *(_QWORD *)(a45 + 16));
  else
    v221 = *(std::string *)(a45 + 8);
  v129 = *(_DWORD *)(a45 + 32);
  v220 = off_24C335B18;
  v223 = *(_QWORD *)(a45 + 36);
  v130 = *(_DWORD *)(a45 + 44);
  v222 = v129;
  v224 = v130;
  v215 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a46 + 31) < 0)
    std::string::__init_copy_ctor_external(&v216, *(const std::string::value_type **)(a46 + 8), *(_QWORD *)(a46 + 16));
  else
    v216 = *(std::string *)(a46 + 8);
  v131 = *(_DWORD *)(a46 + 32);
  v215 = off_24C335B18;
  v218 = *(_QWORD *)(a46 + 36);
  v132 = *(_DWORD *)(a46 + 44);
  v217 = v131;
  v219 = v132;
  v211 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a47 + 31) < 0)
    std::string::__init_copy_ctor_external(&v212, *(const std::string::value_type **)(a47 + 8), *(_QWORD *)(a47 + 16));
  else
    v212 = *(std::string *)(a47 + 8);
  v213 = *(_DWORD *)(a47 + 32);
  v211 = off_24C335AF8;
  v214 = *(_QWORD *)(a47 + 36);
  v207 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a48 + 31) < 0)
    std::string::__init_copy_ctor_external(&v208, *(const std::string::value_type **)(a48 + 8), *(_QWORD *)(a48 + 16));
  else
    v208 = *(std::string *)(a48 + 8);
  v209 = *(_DWORD *)(a48 + 32);
  v207 = off_24C335AF8;
  v210 = *(_QWORD *)(a48 + 36);
  v202 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a49 + 31) < 0)
    std::string::__init_copy_ctor_external(&v203, *(const std::string::value_type **)(a49 + 8), *(_QWORD *)(a49 + 16));
  else
    v203 = *(std::string *)(a49 + 8);
  v204 = *(_DWORD *)(a49 + 32);
  v202 = &off_24C335AB8;
  v205 = *(_BYTE *)(a49 + 36);
  if (*(char *)(a49 + 63) < 0)
    std::string::__init_copy_ctor_external(&v206, *(const std::string::value_type **)(a49 + 40), *(_QWORD *)(a49 + 48));
  else
    v206 = *(std::string *)(a49 + 40);
  v197 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a50 + 31) < 0)
    std::string::__init_copy_ctor_external(&v198, *(const std::string::value_type **)(a50 + 8), *(_QWORD *)(a50 + 16));
  else
    v198 = *(std::string *)(a50 + 8);
  v133 = *(_DWORD *)(a50 + 32);
  v197 = off_24C335B18;
  v200 = *(_QWORD *)(a50 + 36);
  v134 = *(_DWORD *)(a50 + 44);
  v199 = v133;
  v201 = v134;
  v192 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a51 + 31) < 0)
    std::string::__init_copy_ctor_external(&v193, *(const std::string::value_type **)(a51 + 8), *(_QWORD *)(a51 + 16));
  else
    v193 = *(std::string *)(a51 + 8);
  v194 = *(_DWORD *)(a51 + 32);
  v192 = &off_24C335AB8;
  v195 = *(_BYTE *)(a51 + 36);
  if (*(char *)(a51 + 63) < 0)
    std::string::__init_copy_ctor_external(&v196, *(const std::string::value_type **)(a51 + 40), *(_QWORD *)(a51 + 48));
  else
    v196 = *(std::string *)(a51 + 40);
  v187 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a52 + 31) < 0)
    std::string::__init_copy_ctor_external(&v188, *(const std::string::value_type **)(a52 + 8), *(_QWORD *)(a52 + 16));
  else
    v188 = *(std::string *)(a52 + 8);
  v135 = *(_DWORD *)(a52 + 32);
  v187 = off_24C335B18;
  v190 = *(_QWORD *)(a52 + 36);
  v136 = *(_DWORD *)(a52 + 44);
  v189 = v135;
  v191 = v136;
  v182 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a53 + 31) < 0)
    std::string::__init_copy_ctor_external(&v183, *(const std::string::value_type **)(a53 + 8), *(_QWORD *)(a53 + 16));
  else
    v183 = *(std::string *)(a53 + 8);
  v137 = *(_DWORD *)(a53 + 32);
  v182 = off_24C335B18;
  v185 = *(_QWORD *)(a53 + 36);
  v138 = *(_DWORD *)(a53 + 44);
  v184 = v137;
  v186 = v138;
  v177 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a54 + 31) < 0)
    std::string::__init_copy_ctor_external(&v178, *(const std::string::value_type **)(a54 + 8), *(_QWORD *)(a54 + 16));
  else
    v178 = *(std::string *)(a54 + 8);
  v139 = *(_DWORD *)(a54 + 32);
  v177 = off_24C335B18;
  v180 = *(_QWORD *)(a54 + 36);
  v140 = *(_DWORD *)(a54 + 44);
  v179 = v139;
  v181 = v140;
  v172 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a55 + 31) < 0)
    std::string::__init_copy_ctor_external(&v173, *(const std::string::value_type **)(a55 + 8), *(_QWORD *)(a55 + 16));
  else
    v173 = *(std::string *)(a55 + 8);
  v174 = *(_DWORD *)(a55 + 32);
  v172 = off_24C335B18;
  v175 = *(_QWORD *)(a55 + 36);
  v176 = *(_DWORD *)(a55 + 44);
  v167 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a56 + 31) < 0)
    std::string::__init_copy_ctor_external(&v168, *(const std::string::value_type **)(a56 + 8), *(_QWORD *)(a56 + 16));
  else
    v168 = *(std::string *)(a56 + 8);
  v169 = *(_DWORD *)(a56 + 32);
  v167 = &off_24C335AB8;
  v170 = *(_BYTE *)(a56 + 36);
  if (*(char *)(a56 + 63) < 0)
    std::string::__init_copy_ctor_external(&v171, *(const std::string::value_type **)(a56 + 40), *(_QWORD *)(a56 + 48));
  else
    v171 = *(std::string *)(a56 + 40);
  v691 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v692, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v692 = __s;
  v691 = off_24C335B18;
  v694 = v427;
  v693 = v426;
  v695 = v428;
  v686 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v420.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v687, v420.__r_.__value_.__l.__data_, v420.__r_.__value_.__l.__size_);
  else
    v687 = v420;
  v686 = off_24C335B18;
  v689 = v422;
  v688 = v421;
  v690 = v423;
  v681 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v415.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v682, v415.__r_.__value_.__l.__data_, v415.__r_.__value_.__l.__size_);
  else
    v682 = v415;
  v681 = off_24C335B18;
  v684 = v417;
  v683 = v416;
  v685 = v418;
  v676 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v410.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v677, v410.__r_.__value_.__l.__data_, v410.__r_.__value_.__l.__size_);
  else
    v677 = v410;
  v678 = v411;
  v676 = &off_24C335AB8;
  v679 = v412;
  if (SHIBYTE(v413.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v680, v413.__r_.__value_.__l.__data_, v413.__r_.__value_.__l.__size_);
  else
    v680 = v413;
  v671 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v405.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v672, v405.__r_.__value_.__l.__data_, v405.__r_.__value_.__l.__size_);
  else
    v672 = v405;
  v671 = off_24C335B18;
  v674 = v407;
  v673 = v406;
  v675 = v408;
  v666 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v400.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v667, v400.__r_.__value_.__l.__data_, v400.__r_.__value_.__l.__size_);
  else
    v667 = v400;
  v668 = v401;
  v666 = &off_24C335AB8;
  v669 = v402;
  if (SHIBYTE(v403.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v670, v403.__r_.__value_.__l.__data_, v403.__r_.__value_.__l.__size_);
  else
    v670 = v403;
  v661 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v395.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v662, v395.__r_.__value_.__l.__data_, v395.__r_.__value_.__l.__size_);
  else
    v662 = v395;
  v661 = off_24C335B18;
  v664 = v397;
  v663 = v396;
  v665 = v398;
  v656 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v390.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v657, v390.__r_.__value_.__l.__data_, v390.__r_.__value_.__l.__size_);
  else
    v657 = v390;
  v656 = off_24C335B18;
  v659 = v392;
  v658 = v391;
  v660 = v393;
  v651 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v385.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v652, v385.__r_.__value_.__l.__data_, v385.__r_.__value_.__l.__size_);
  else
    v652 = v385;
  v651 = off_24C335B18;
  v654 = v387;
  v653 = v386;
  v655 = v388;
  v646 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v380.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v647, v380.__r_.__value_.__l.__data_, v380.__r_.__value_.__l.__size_);
  else
    v647 = v380;
  v646 = off_24C335B18;
  v649 = v382;
  v648 = v381;
  v650 = v383;
  v641 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v375.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v642, v375.__r_.__value_.__l.__data_, v375.__r_.__value_.__l.__size_);
  else
    v642 = v375;
  v641 = off_24C335B18;
  v644 = v377;
  v643 = v376;
  v645 = v378;
  v636 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v370.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v637, v370.__r_.__value_.__l.__data_, v370.__r_.__value_.__l.__size_);
  else
    v637 = v370;
  v636 = off_24C335B18;
  v639 = v372;
  v638 = v371;
  v640 = v373;
  v631 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v365.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v632, v365.__r_.__value_.__l.__data_, v365.__r_.__value_.__l.__size_);
  else
    v632 = v365;
  v631 = off_24C335B18;
  v634 = v367;
  v633 = v366;
  v635 = v368;
  v626 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v360.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v627, v360.__r_.__value_.__l.__data_, v360.__r_.__value_.__l.__size_);
  else
    v627 = v360;
  v626 = off_24C335B18;
  v629 = v362;
  v628 = v361;
  v630 = v363;
  v621 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v355.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v622, v355.__r_.__value_.__l.__data_, v355.__r_.__value_.__l.__size_);
  else
    v622 = v355;
  v621 = off_24C335B18;
  v624 = v357;
  v623 = v356;
  v625 = v358;
  v616 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v350.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v617, v350.__r_.__value_.__l.__data_, v350.__r_.__value_.__l.__size_);
  else
    v617 = v350;
  v616 = off_24C335B18;
  v619 = v352;
  v618 = v351;
  v620 = v353;
  v611 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v345.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v612, v345.__r_.__value_.__l.__data_, v345.__r_.__value_.__l.__size_);
  else
    v612 = v345;
  v611 = off_24C335B18;
  v614 = v347;
  v613 = v346;
  v615 = v348;
  v606 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v340.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v607, v340.__r_.__value_.__l.__data_, v340.__r_.__value_.__l.__size_);
  else
    v607 = v340;
  v606 = off_24C335B18;
  v609 = v342;
  v608 = v341;
  v610 = v343;
  v601 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v335.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v602, v335.__r_.__value_.__l.__data_, v335.__r_.__value_.__l.__size_);
  else
    v602 = v335;
  v601 = off_24C335B18;
  v604 = v337;
  v603 = v336;
  v605 = v338;
  v596 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v330.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v597, v330.__r_.__value_.__l.__data_, v330.__r_.__value_.__l.__size_);
  else
    v597 = v330;
  v596 = off_24C335B18;
  v599 = v332;
  v598 = v331;
  v600 = v333;
  v591 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v325.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v592, v325.__r_.__value_.__l.__data_, v325.__r_.__value_.__l.__size_);
  else
    v592 = v325;
  v591 = off_24C335B18;
  v594 = v327;
  v593 = v326;
  v595 = v328;
  v586 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v320.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v587, v320.__r_.__value_.__l.__data_, v320.__r_.__value_.__l.__size_);
  else
    v587 = v320;
  v588 = v321;
  v586 = &off_24C335AB8;
  v589 = v322;
  if (SHIBYTE(v323.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v590, v323.__r_.__value_.__l.__data_, v323.__r_.__value_.__l.__size_);
  else
    v590 = v323;
  v581 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v315.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v582, v315.__r_.__value_.__l.__data_, v315.__r_.__value_.__l.__size_);
  else
    v582 = v315;
  v583 = v316;
  v581 = &off_24C335AB8;
  v584 = v317;
  if (SHIBYTE(v318.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v585, v318.__r_.__value_.__l.__data_, v318.__r_.__value_.__l.__size_);
  else
    v585 = v318;
  v576 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v310.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v577, v310.__r_.__value_.__l.__data_, v310.__r_.__value_.__l.__size_);
  else
    v577 = v310;
  v578 = v311;
  v576 = &off_24C335AB8;
  v579 = v312;
  if (SHIBYTE(v313.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v580, v313.__r_.__value_.__l.__data_, v313.__r_.__value_.__l.__size_);
  else
    v580 = v313;
  v571 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v305.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v572, v305.__r_.__value_.__l.__data_, v305.__r_.__value_.__l.__size_);
  else
    v572 = v305;
  v573 = v306;
  v571 = &off_24C335AB8;
  v574 = v307;
  if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v575, v308.__r_.__value_.__l.__data_, v308.__r_.__value_.__l.__size_);
  else
    v575 = v308;
  v566 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v300.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v567, v300.__r_.__value_.__l.__data_, v300.__r_.__value_.__l.__size_);
  else
    v567 = v300;
  v568 = v301;
  v566 = &off_24C335AB8;
  v569 = v302;
  if (SHIBYTE(v303.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v570, v303.__r_.__value_.__l.__data_, v303.__r_.__value_.__l.__size_);
  else
    v570 = v303;
  v561 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v295.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v562, v295.__r_.__value_.__l.__data_, v295.__r_.__value_.__l.__size_);
  else
    v562 = v295;
  v561 = off_24C335B18;
  v564 = v297;
  v563 = v296;
  v565 = v298;
  v556 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v290.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v557, v290.__r_.__value_.__l.__data_, v290.__r_.__value_.__l.__size_);
  else
    v557 = v290;
  v556 = off_24C335B18;
  v559 = v292;
  v558 = v291;
  v560 = v293;
  v551 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v285.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v552, v285.__r_.__value_.__l.__data_, v285.__r_.__value_.__l.__size_);
  else
    v552 = v285;
  v553 = v286;
  v551 = &off_24C335AB8;
  v554 = v287;
  if (SHIBYTE(v288.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v555, v288.__r_.__value_.__l.__data_, v288.__r_.__value_.__l.__size_);
  else
    v555 = v288;
  v546 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v280.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v547, v280.__r_.__value_.__l.__data_, v280.__r_.__value_.__l.__size_);
  else
    v547 = v280;
  v546 = off_24C335B18;
  v549 = v282;
  v548 = v281;
  v550 = v283;
  v541 = (uint64_t (**)())off_24C335D90;
  v141 = SHIBYTE(v275.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v275.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v542, v275.__r_.__value_.__l.__data_, v275.__r_.__value_.__l.__size_);
  else
    v542 = v275;
  v541 = off_24C335B18;
  v544 = v277;
  v543 = v276;
  v545 = v278;
  v536 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v270.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v537, v270.__r_.__value_.__l.__data_, v270.__r_.__value_.__l.__size_);
  else
    v537 = v270;
  v538 = v271;
  v536 = &off_24C335AB8;
  v539 = v272;
  if (SHIBYTE(v273.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v540, v273.__r_.__value_.__l.__data_, v273.__r_.__value_.__l.__size_);
  else
    v540 = v273;
  v531 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v265.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v532, v265.__r_.__value_.__l.__data_, v265.__r_.__value_.__l.__size_);
  else
    v532 = v265;
  v533 = v266;
  v531 = &off_24C335AB8;
  v534 = v267;
  if (SHIBYTE(v268.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v535, v268.__r_.__value_.__l.__data_, v268.__r_.__value_.__l.__size_);
  else
    v535 = v268;
  v526 = (uint64_t (**)())off_24C335D90;
  v166 = SHIBYTE(v260.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v260.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v527, v260.__r_.__value_.__l.__data_, v260.__r_.__value_.__l.__size_);
  else
    v527 = v260;
  v526 = off_24C335B18;
  v529 = v262;
  v528 = v261;
  v530 = v263;
  v521 = (uint64_t (**)())off_24C335D90;
  v165 = SHIBYTE(v255.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v255.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v522, v255.__r_.__value_.__l.__data_, v255.__r_.__value_.__l.__size_);
  else
    v522 = v255;
  v521 = off_24C335B18;
  v524 = v257;
  v523 = v256;
  v525 = v258;
  v516 = (uint64_t (**)())off_24C335D90;
  v164 = SHIBYTE(v250.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v250.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v517, v250.__r_.__value_.__l.__data_, v250.__r_.__value_.__l.__size_);
  else
    v517 = v250;
  v516 = off_24C335B18;
  v519 = v252;
  v518 = v251;
  v520 = v253;
  v512 = (uint64_t (**)())off_24C335D90;
  v163 = SHIBYTE(v246.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v246.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v513, v246.__r_.__value_.__l.__data_, v246.__r_.__value_.__l.__size_);
  else
    v513 = v246;
  v514 = v247;
  v512 = off_24C335AF8;
  v515 = v248;
  v507 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v241.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v508, v241.__r_.__value_.__l.__data_, v241.__r_.__value_.__l.__size_);
  else
    v508 = v241;
  v509 = v242;
  v507 = &off_24C335AB8;
  v510 = v243;
  if (SHIBYTE(v244.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v511, v244.__r_.__value_.__l.__data_, v244.__r_.__value_.__l.__size_);
  else
    v511 = v244;
  v502 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v236.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v503, v236.__r_.__value_.__l.__data_, v236.__r_.__value_.__l.__size_);
  else
    v503 = v236;
  v504 = v237;
  v502 = &off_24C335AB8;
  v505 = v238;
  if (SHIBYTE(v239.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v506, v239.__r_.__value_.__l.__data_, v239.__r_.__value_.__l.__size_);
  else
    v506 = v239;
  v497 = (uint64_t (**)())off_24C335D90;
  v142 = SHIBYTE(v231.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v231.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v498, v231.__r_.__value_.__l.__data_, v231.__r_.__value_.__l.__size_);
  else
    v498 = v231;
  v497 = off_24C335B18;
  v500 = v233;
  v499 = v232;
  v501 = v234;
  v492 = (uint64_t (**)())off_24C335D90;
  v143 = SHIBYTE(v226.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v226.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v493, v226.__r_.__value_.__l.__data_, v226.__r_.__value_.__l.__size_);
  else
    v493 = v226;
  v492 = off_24C335B18;
  v495 = v228;
  v494 = v227;
  v496 = v229;
  v487 = (uint64_t (**)())off_24C335D90;
  v162 = SHIBYTE(v221.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v221.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v488, v221.__r_.__value_.__l.__data_, v221.__r_.__value_.__l.__size_);
  else
    v488 = v221;
  v487 = off_24C335B18;
  v490 = v223;
  v489 = v222;
  v491 = v224;
  v482 = (uint64_t (**)())off_24C335D90;
  v161 = SHIBYTE(v216.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v483, v216.__r_.__value_.__l.__data_, v216.__r_.__value_.__l.__size_);
  else
    v483 = v216;
  v482 = off_24C335B18;
  v485 = v218;
  v484 = v217;
  v486 = v219;
  v478 = (uint64_t (**)())off_24C335D90;
  v160 = SHIBYTE(v212.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v212.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v479, v212.__r_.__value_.__l.__data_, v212.__r_.__value_.__l.__size_);
  else
    v479 = v212;
  v480 = v213;
  v478 = off_24C335AF8;
  v481 = v214;
  v474 = (uint64_t (**)())off_24C335D90;
  v159 = SHIBYTE(v208.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v208.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v475, v208.__r_.__value_.__l.__data_, v208.__r_.__value_.__l.__size_);
  else
    v475 = v208;
  v476 = v209;
  v474 = off_24C335AF8;
  v477 = v210;
  v469 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v203.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v470, v203.__r_.__value_.__l.__data_, v203.__r_.__value_.__l.__size_);
  else
    v470 = v203;
  v471 = v204;
  v469 = &off_24C335AB8;
  v472 = v205;
  v158 = v143;
  if (SHIBYTE(v206.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v473, v206.__r_.__value_.__l.__data_, v206.__r_.__value_.__l.__size_);
  else
    v473 = v206;
  v464 = (uint64_t (**)())off_24C335D90;
  v144 = SHIBYTE(v198.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v198.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v465, v198.__r_.__value_.__l.__data_, v198.__r_.__value_.__l.__size_);
  else
    v465 = v198;
  v464 = off_24C335B18;
  v467 = v200;
  v466 = v199;
  v468 = v201;
  v459 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v193.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v460, v193.__r_.__value_.__l.__data_, v193.__r_.__value_.__l.__size_);
  else
    v460 = v193;
  v461 = v194;
  v459 = &off_24C335AB8;
  v462 = v195;
  if (SHIBYTE(v196.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v463, v196.__r_.__value_.__l.__data_, v196.__r_.__value_.__l.__size_);
  else
    v463 = v196;
  v454 = (uint64_t (**)())off_24C335D90;
  v145 = SHIBYTE(v188.__r_.__value_.__r.__words[2]);
  v157 = v142;
  if (SHIBYTE(v188.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v455, v188.__r_.__value_.__l.__data_, v188.__r_.__value_.__l.__size_);
  else
    v455 = v188;
  v454 = off_24C335B18;
  v457 = v190;
  v456 = v189;
  v458 = v191;
  v449 = (uint64_t (**)())off_24C335D90;
  v146 = SHIBYTE(v183.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v183.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v450, v183.__r_.__value_.__l.__data_, v183.__r_.__value_.__l.__size_);
  else
    v450 = v183;
  v449 = off_24C335B18;
  v452 = v185;
  v451 = v184;
  v453 = v186;
  v444 = (uint64_t (**)())off_24C335D90;
  v147 = SHIBYTE(v178.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v178.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v445, v178.__r_.__value_.__l.__data_, v178.__r_.__value_.__l.__size_);
  else
    v445 = v178;
  v444 = off_24C335B18;
  v447 = v180;
  v446 = v179;
  v448 = v181;
  v439 = (uint64_t (**)())off_24C335D90;
  v148 = SHIBYTE(v173.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v173.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v173.__r_.__value_.__l.__data_, v173.__r_.__value_.__l.__size_);
  else
    __p = v173;
  v439 = off_24C335B18;
  v442 = v175;
  v441 = v174;
  v443 = v176;
  v434 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v168.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v435, v168.__r_.__value_.__l.__data_, v168.__r_.__value_.__l.__size_);
  else
    v435 = v168;
  v436 = v169;
  v434 = &off_24C335AB8;
  v437 = v170;
  if (SHIBYTE(v171.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v438, v171.__r_.__value_.__l.__data_, v171.__r_.__value_.__l.__size_);
  else
    v438 = v171;
  mediaplatform::DatabaseColumnTuple<5ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(v155, (uint64_t)&v691, (uint64_t)&v686, (uint64_t)&v681, (uint64_t)&v676, (uint64_t)&v671, (uint64_t)&v666, (uint64_t)&v661, (uint64_t)&v656, (uint64_t)&v651, (uint64_t)&v646, (uint64_t)&v641, (uint64_t)&v636, (uint64_t)&v631, (uint64_t)&v626, (uint64_t)&v621, (uint64_t)&v616, (uint64_t)&v611, (uint64_t)&v606,
    (uint64_t)&v601,
    (uint64_t)&v596,
    (uint64_t)&v591,
    (uint64_t)&v586,
    (uint64_t)&v581,
    (uint64_t)&v576,
    (uint64_t)&v571,
    (uint64_t)&v566,
    (uint64_t)&v561,
    (uint64_t)&v556,
    (uint64_t)&v551,
    (uint64_t)&v546,
    (uint64_t)&v541,
    (uint64_t)&v536,
    (uint64_t)&v531,
    (uint64_t)&v526,
    (uint64_t)&v521,
    (uint64_t)&v516,
    (uint64_t)&v512,
    (uint64_t)&v507,
    (uint64_t)&v502,
    (uint64_t)&v497,
    (uint64_t)&v492,
    (uint64_t)&v487,
    (uint64_t)&v482,
    (uint64_t)&v478,
    (uint64_t)&v474,
    (uint64_t)&v469,
    (uint64_t)&v464,
    (uint64_t)&v459,
    (uint64_t)&v454,
    (uint64_t)&v449,
    (uint64_t)&v444,
    (uint64_t)&v439,
    (uint64_t)&v434);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v434);
  v439 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v444 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v445.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v445.__r_.__value_.__l.__data_);
  v449 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v450.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v450.__r_.__value_.__l.__data_);
  v454 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v455.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v455.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v459);
  v464 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v465.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v465.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v469);
  v474 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v475.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v475.__r_.__value_.__l.__data_);
  v478 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v479.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v479.__r_.__value_.__l.__data_);
  v482 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v483.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v483.__r_.__value_.__l.__data_);
  v487 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v488.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v488.__r_.__value_.__l.__data_);
  v492 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v493.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v493.__r_.__value_.__l.__data_);
  v497 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v498.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v498.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v502);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v507);
  v512 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v513.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v513.__r_.__value_.__l.__data_);
  v516 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v517.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v517.__r_.__value_.__l.__data_);
  v521 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v522.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v522.__r_.__value_.__l.__data_);
  v526 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v527.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v527.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v531);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v536);
  v541 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v542.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v542.__r_.__value_.__l.__data_);
  v546 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v547.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v547.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v551);
  v556 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v557.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v557.__r_.__value_.__l.__data_);
  v561 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v562.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v562.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v566);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v571);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v576);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v581);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v586);
  v591 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v592.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v592.__r_.__value_.__l.__data_);
  v596 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v597.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v597.__r_.__value_.__l.__data_);
  v601 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v602.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v602.__r_.__value_.__l.__data_);
  v606 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v607.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v607.__r_.__value_.__l.__data_);
  v611 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v612.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v612.__r_.__value_.__l.__data_);
  v616 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v617.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v617.__r_.__value_.__l.__data_);
  v621 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v622.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v622.__r_.__value_.__l.__data_);
  v626 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v627.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v627.__r_.__value_.__l.__data_);
  v631 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v632.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v632.__r_.__value_.__l.__data_);
  v636 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v637.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v637.__r_.__value_.__l.__data_);
  v641 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v642.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v642.__r_.__value_.__l.__data_);
  v646 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v647.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v647.__r_.__value_.__l.__data_);
  v651 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v652.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v652.__r_.__value_.__l.__data_);
  v656 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v657.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v657.__r_.__value_.__l.__data_);
  v661 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v662.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v662.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v666);
  v671 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v672.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v672.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v676);
  v681 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v682.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v682.__r_.__value_.__l.__data_);
  v686 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v687.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v687.__r_.__value_.__l.__data_);
  v691 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v692.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v692.__r_.__value_.__l.__data_);
  *(_QWORD *)(v155 + 2784) = off_24C335D90;
  v149 = (std::string *)(v155 + 2792);
  v150 = SHIBYTE(v430.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v430.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v149, v430.__r_.__value_.__l.__data_, v430.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v149->__r_.__value_.__l.__data_ = *(_OWORD *)&v430.__r_.__value_.__l.__data_;
    *(_QWORD *)(v155 + 2808) = *((_QWORD *)&v430.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(v155 + 2816) = v431;
  *(_QWORD *)(v155 + 2784) = off_24C335B18;
  *(_QWORD *)(v155 + 2820) = v432;
  *(_DWORD *)(v155 + 2828) = v433;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v167);
  v172 = (uint64_t (**)())off_24C335D90;
  if (v148 < 0)
    operator delete(v173.__r_.__value_.__l.__data_);
  v177 = (uint64_t (**)())off_24C335D90;
  if (v147 < 0)
    operator delete(v178.__r_.__value_.__l.__data_);
  v182 = (uint64_t (**)())off_24C335D90;
  if (v146 < 0)
    operator delete(v183.__r_.__value_.__l.__data_);
  v187 = (uint64_t (**)())off_24C335D90;
  if (v145 < 0)
    operator delete(v188.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v192);
  v197 = (uint64_t (**)())off_24C335D90;
  if (v144 < 0)
    operator delete(v198.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v202);
  v207 = (uint64_t (**)())off_24C335D90;
  if (v159 < 0)
    operator delete(v208.__r_.__value_.__l.__data_);
  v211 = (uint64_t (**)())off_24C335D90;
  if (v160 < 0)
    operator delete(v212.__r_.__value_.__l.__data_);
  v215 = (uint64_t (**)())off_24C335D90;
  if (v161 < 0)
    operator delete(v216.__r_.__value_.__l.__data_);
  v220 = (uint64_t (**)())off_24C335D90;
  if (v162 < 0)
    operator delete(v221.__r_.__value_.__l.__data_);
  v225 = (uint64_t (**)())off_24C335D90;
  if (v158 < 0)
    operator delete(v226.__r_.__value_.__l.__data_);
  v230 = (uint64_t (**)())off_24C335D90;
  if (v157 < 0)
    operator delete(v231.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v235);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v240);
  v245 = (uint64_t (**)())off_24C335D90;
  if (v163 < 0)
    operator delete(v246.__r_.__value_.__l.__data_);
  v249 = (uint64_t (**)())off_24C335D90;
  if (v164 < 0)
    operator delete(v250.__r_.__value_.__l.__data_);
  v254 = (uint64_t (**)())off_24C335D90;
  if (v165 < 0)
    operator delete(v255.__r_.__value_.__l.__data_);
  v259 = (uint64_t (**)())off_24C335D90;
  if (v166 < 0)
    operator delete(v260.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v264);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v269);
  v274 = (uint64_t (**)())off_24C335D90;
  if (v141 < 0)
    operator delete(v275.__r_.__value_.__l.__data_);
  v279 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v280.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v280.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v284);
  v289 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v290.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v290.__r_.__value_.__l.__data_);
  if (SHIBYTE(v295.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v295.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v299);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v304);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v309);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v314);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v319);
  if (SHIBYTE(v325.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v325.__r_.__value_.__l.__data_);
  if (SHIBYTE(v330.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v330.__r_.__value_.__l.__data_);
  if (SHIBYTE(v335.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v335.__r_.__value_.__l.__data_);
  if (SHIBYTE(v340.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v340.__r_.__value_.__l.__data_);
  if (SHIBYTE(v345.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v345.__r_.__value_.__l.__data_);
  if (SHIBYTE(v350.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v350.__r_.__value_.__l.__data_);
  if (SHIBYTE(v355.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v355.__r_.__value_.__l.__data_);
  if (SHIBYTE(v360.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v360.__r_.__value_.__l.__data_);
  if (SHIBYTE(v365.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v365.__r_.__value_.__l.__data_);
  if (SHIBYTE(v370.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v370.__r_.__value_.__l.__data_);
  if (SHIBYTE(v375.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v375.__r_.__value_.__l.__data_);
  if (SHIBYTE(v380.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v380.__r_.__value_.__l.__data_);
  if (SHIBYTE(v385.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v385.__r_.__value_.__l.__data_);
  if (SHIBYTE(v390.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v390.__r_.__value_.__l.__data_);
  if (SHIBYTE(v395.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v395.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v399);
  if (SHIBYTE(v405.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v405.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v409);
  if (SHIBYTE(v415.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v415.__r_.__value_.__l.__data_);
  if (SHIBYTE(v420.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v420.__r_.__value_.__l.__data_);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__s.__r_.__value_.__l.__data_);
    if ((v150 & 0x80000000) == 0)
      goto LABEL_567;
  }
  else if ((v150 & 0x80000000) == 0)
  {
    goto LABEL_567;
  }
  operator delete(v430.__r_.__value_.__l.__data_);
LABEL_567:
  *(_QWORD *)(v155 + 2832) = off_24C335D90;
  v151 = (std::string *)(v155 + 2840);
  if (*(char *)(v156 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v151, *(const std::string::value_type **)(v156 + 8), *(_QWORD *)(v156 + 16));
  }
  else
  {
    v152 = *(_OWORD *)(v156 + 8);
    *(_QWORD *)(v155 + 2856) = *(_QWORD *)(v156 + 24);
    *(_OWORD *)&v151->__r_.__value_.__l.__data_ = v152;
  }
  *(_DWORD *)(v155 + 2864) = *(_DWORD *)(v156 + 32);
  *(_QWORD *)(v155 + 2832) = off_24C335B18;
  v153 = *(_QWORD *)(v156 + 36);
  *(_DWORD *)(v155 + 2876) = *(_DWORD *)(v156 + 44);
  *(_QWORD *)(v155 + 2868) = v153;
  return v155;
}

void sub_20A884148(_Unwind_Exception *a1)
{
  uint64_t v1;

  mediaplatform::DatabaseColumnTuple<4ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(v1);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<3ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 2832) = off_24C335D90;
  if (*(char *)(a1 + 2863) < 0)
    operator delete(*(void **)(a1 + 2840));
  return mediaplatform::DatabaseColumnTuple<4ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<5ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  uint64_t v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  std::string *v147;
  int v148;
  std::string *v149;
  __int128 v150;
  uint64_t v151;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  uint64_t v158;
  int v159;
  uint64_t v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  uint64_t v170;
  int v171;
  int v172;
  uint64_t v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  uint64_t (**v200)();
  std::string v201;
  int v202;
  char v203;
  std::string v204;
  uint64_t (**v205)();
  std::string v206;
  int v207;
  uint64_t v208;
  int v209;
  uint64_t (**v210)();
  std::string v211;
  int v212;
  uint64_t v213;
  int v214;
  uint64_t (**v215)();
  std::string v216;
  int v217;
  uint64_t v218;
  int v219;
  uint64_t (**v220)();
  std::string v221;
  int v222;
  uint64_t v223;
  int v224;
  uint64_t (**v225)();
  std::string v226;
  int v227;
  char v228;
  std::string v229;
  uint64_t (**v230)();
  std::string v231;
  int v232;
  uint64_t v233;
  int v234;
  uint64_t (**v235)();
  std::string v236;
  int v237;
  char v238;
  std::string v239;
  uint64_t (**v240)();
  std::string v241;
  int v242;
  uint64_t v243;
  uint64_t (**v244)();
  std::string v245;
  int v246;
  uint64_t v247;
  uint64_t (**v248)();
  std::string v249;
  int v250;
  uint64_t v251;
  int v252;
  uint64_t (**v253)();
  std::string v254;
  int v255;
  uint64_t v256;
  int v257;
  uint64_t (**v258)();
  std::string v259;
  int v260;
  uint64_t v261;
  int v262;
  uint64_t (**v263)();
  std::string v264;
  int v265;
  uint64_t v266;
  int v267;
  uint64_t (**v268)();
  std::string v269;
  int v270;
  char v271;
  std::string v272;
  uint64_t (**v273)();
  std::string v274;
  int v275;
  char v276;
  std::string v277;
  uint64_t (**v278)();
  std::string v279;
  int v280;
  uint64_t v281;
  uint64_t (**v282)();
  std::string v283;
  int v284;
  uint64_t v285;
  int v286;
  uint64_t (**v287)();
  std::string v288;
  int v289;
  uint64_t v290;
  int v291;
  uint64_t (**v292)();
  std::string v293;
  int v294;
  uint64_t v295;
  int v296;
  uint64_t (**v297)();
  std::string v298;
  int v299;
  char v300;
  std::string v301;
  uint64_t (**v302)();
  std::string v303;
  int v304;
  char v305;
  std::string v306;
  uint64_t (**v307)();
  std::string v308;
  int v309;
  uint64_t v310;
  int v311;
  uint64_t (**v312)();
  std::string v313;
  int v314;
  uint64_t v315;
  int v316;
  uint64_t (**v317)();
  std::string v318;
  int v319;
  char v320;
  std::string v321;
  uint64_t (**v322)();
  std::string v323;
  int v324;
  uint64_t v325;
  int v326;
  uint64_t (**v327)();
  std::string v328;
  int v329;
  uint64_t v330;
  int v331;
  uint64_t (**v332)();
  std::string v333;
  int v334;
  char v335;
  std::string v336;
  uint64_t (**v337)();
  std::string v338;
  int v339;
  char v340;
  std::string v341;
  uint64_t (**v342)();
  std::string v343;
  int v344;
  char v345;
  std::string v346;
  uint64_t (**v347)();
  std::string v348;
  int v349;
  char v350;
  std::string v351;
  uint64_t (**v352)();
  std::string v353;
  int v354;
  char v355;
  std::string v356;
  uint64_t (**v357)();
  std::string v358;
  int v359;
  uint64_t v360;
  int v361;
  uint64_t (**v362)();
  std::string v363;
  int v364;
  uint64_t v365;
  int v366;
  uint64_t (**v367)();
  std::string v368;
  int v369;
  uint64_t v370;
  int v371;
  uint64_t (**v372)();
  std::string v373;
  int v374;
  uint64_t v375;
  int v376;
  uint64_t (**v377)();
  std::string v378;
  int v379;
  uint64_t v380;
  int v381;
  uint64_t (**v382)();
  std::string v383;
  int v384;
  uint64_t v385;
  int v386;
  uint64_t (**v387)();
  std::string v388;
  int v389;
  uint64_t v390;
  int v391;
  uint64_t (**v392)();
  std::string v393;
  int v394;
  uint64_t v395;
  int v396;
  uint64_t (**v397)();
  std::string v398;
  int v399;
  uint64_t v400;
  int v401;
  uint64_t (**v402)();
  std::string v403;
  int v404;
  uint64_t v405;
  int v406;
  uint64_t (**v407)();
  std::string v408;
  int v409;
  uint64_t v410;
  int v411;
  uint64_t (**v412)();
  std::string v413;
  int v414;
  uint64_t v415;
  int v416;
  uint64_t (**v417)();
  std::string v418;
  int v419;
  uint64_t v420;
  int v421;
  uint64_t (**v422)();
  std::string v423;
  int v424;
  uint64_t v425;
  int v426;
  uint64_t (**v427)();
  std::string v428;
  int v429;
  uint64_t v430;
  int v431;
  uint64_t (**v432)();
  std::string v433;
  int v434;
  char v435;
  std::string v436;
  uint64_t (**v437)();
  std::string v438;
  int v439;
  uint64_t v440;
  int v441;
  uint64_t (**v442)();
  std::string v443;
  int v444;
  char v445;
  std::string v446;
  uint64_t (**v447)();
  std::string __s;
  int v449;
  uint64_t v450;
  int v451;
  uint64_t (**v452)();
  std::string v453;
  int v454;
  uint64_t v455;
  int v456;
  uint64_t (**v457)();
  std::string v458;
  int v459;
  char v460;
  std::string v461;
  uint64_t (**v462)();
  std::string __p;
  int v464;
  uint64_t v465;
  int v466;
  uint64_t (**v467)();
  std::string v468;
  int v469;
  uint64_t v470;
  int v471;
  uint64_t (**v472)();
  std::string v473;
  int v474;
  uint64_t v475;
  int v476;
  uint64_t (**v477)();
  std::string v478;
  int v479;
  uint64_t v480;
  int v481;
  uint64_t (**v482)();
  std::string v483;
  int v484;
  char v485;
  std::string v486;
  uint64_t (**v487)();
  std::string v488;
  int v489;
  uint64_t v490;
  int v491;
  uint64_t (**v492)();
  std::string v493;
  int v494;
  char v495;
  std::string v496;
  uint64_t (**v497)();
  std::string v498;
  int v499;
  uint64_t v500;
  uint64_t (**v501)();
  std::string v502;
  int v503;
  uint64_t v504;
  uint64_t (**v505)();
  std::string v506;
  int v507;
  uint64_t v508;
  int v509;
  uint64_t (**v510)();
  std::string v511;
  int v512;
  uint64_t v513;
  int v514;
  uint64_t (**v515)();
  std::string v516;
  int v517;
  uint64_t v518;
  int v519;
  uint64_t (**v520)();
  std::string v521;
  int v522;
  uint64_t v523;
  int v524;
  uint64_t (**v525)();
  std::string v526;
  int v527;
  char v528;
  std::string v529;
  uint64_t (**v530)();
  std::string v531;
  int v532;
  char v533;
  std::string v534;
  uint64_t (**v535)();
  std::string v536;
  int v537;
  uint64_t v538;
  uint64_t (**v539)();
  std::string v540;
  int v541;
  uint64_t v542;
  int v543;
  uint64_t (**v544)();
  std::string v545;
  int v546;
  uint64_t v547;
  int v548;
  uint64_t (**v549)();
  std::string v550;
  int v551;
  uint64_t v552;
  int v553;
  uint64_t (**v554)();
  std::string v555;
  int v556;
  char v557;
  std::string v558;
  uint64_t (**v559)();
  std::string v560;
  int v561;
  char v562;
  std::string v563;
  uint64_t (**v564)();
  std::string v565;
  int v566;
  uint64_t v567;
  int v568;
  uint64_t (**v569)();
  std::string v570;
  int v571;
  uint64_t v572;
  int v573;
  uint64_t (**v574)();
  std::string v575;
  int v576;
  char v577;
  std::string v578;
  uint64_t (**v579)();
  std::string v580;
  int v581;
  uint64_t v582;
  int v583;
  uint64_t (**v584)();
  std::string v585;
  int v586;
  uint64_t v587;
  int v588;
  uint64_t (**v589)();
  std::string v590;
  int v591;
  char v592;
  std::string v593;
  uint64_t (**v594)();
  std::string v595;
  int v596;
  char v597;
  std::string v598;
  uint64_t (**v599)();
  std::string v600;
  int v601;
  char v602;
  std::string v603;
  uint64_t (**v604)();
  std::string v605;
  int v606;
  char v607;
  std::string v608;
  uint64_t (**v609)();
  std::string v610;
  int v611;
  char v612;
  std::string v613;
  uint64_t (**v614)();
  std::string v615;
  int v616;
  uint64_t v617;
  int v618;
  uint64_t (**v619)();
  std::string v620;
  int v621;
  uint64_t v622;
  int v623;
  uint64_t (**v624)();
  std::string v625;
  int v626;
  uint64_t v627;
  int v628;
  uint64_t (**v629)();
  std::string v630;
  int v631;
  uint64_t v632;
  int v633;
  uint64_t (**v634)();
  std::string v635;
  int v636;
  uint64_t v637;
  int v638;
  uint64_t (**v639)();
  std::string v640;
  int v641;
  uint64_t v642;
  int v643;
  uint64_t (**v644)();
  std::string v645;
  int v646;
  uint64_t v647;
  int v648;
  uint64_t (**v649)();
  std::string v650;
  int v651;
  uint64_t v652;
  int v653;
  uint64_t (**v654)();
  std::string v655;
  int v656;
  uint64_t v657;
  int v658;
  uint64_t (**v659)();
  std::string v660;
  int v661;
  uint64_t v662;
  int v663;
  uint64_t (**v664)();
  std::string v665;
  int v666;
  uint64_t v667;
  int v668;
  uint64_t (**v669)();
  std::string v670;
  int v671;
  uint64_t v672;
  int v673;
  uint64_t (**v674)();
  std::string v675;
  int v676;
  uint64_t v677;
  int v678;
  uint64_t (**v679)();
  std::string v680;
  int v681;
  uint64_t v682;
  int v683;
  uint64_t (**v684)();
  std::string v685;
  int v686;
  uint64_t v687;
  int v688;
  uint64_t (**v689)();
  std::string v690;
  int v691;
  char v692;
  std::string v693;
  uint64_t (**v694)();
  std::string v695;
  int v696;
  uint64_t v697;
  int v698;
  uint64_t (**v699)();
  std::string v700;
  int v701;
  char v702;
  std::string v703;
  uint64_t (**v704)();
  std::string v705;
  int v706;
  uint64_t v707;
  int v708;

  v54 = MEMORY[0x24BDAC7A8](a1);
  v57 = v56;
  v59 = v58;
  v61 = v60;
  v63 = v62;
  v65 = v64;
  v66 = v55;
  v68 = v67;
  v69 = v54;
  if (*(char *)(v55 + 31) < 0)
    std::string::__init_copy_ctor_external(&v453, *(const std::string::value_type **)(v55 + 8), *(_QWORD *)(v55 + 16));
  else
    v453 = *(std::string *)(v55 + 8);
  v70 = *(_DWORD *)(v66 + 32);
  v452 = off_24C335B18;
  v455 = *(_QWORD *)(v66 + 36);
  v71 = *(_DWORD *)(v66 + 44);
  v454 = v70;
  v456 = v71;
  if (*(char *)(v65 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(v65 + 8), *(_QWORD *)(v65 + 16));
  else
    __s = *(std::string *)(v65 + 8);
  v72 = *(_DWORD *)(v65 + 32);
  v447 = off_24C335B18;
  v450 = *(_QWORD *)(v65 + 36);
  v73 = *(_DWORD *)(v65 + 44);
  v198 = v72;
  v449 = v72;
  v451 = v73;
  v442 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v63 + 31) < 0)
    std::string::__init_copy_ctor_external(&v443, *(const std::string::value_type **)(v63 + 8), *(_QWORD *)(v63 + 16));
  else
    v443 = *(std::string *)(v63 + 8);
  v444 = *(_DWORD *)(v63 + 32);
  v442 = &off_24C335AB8;
  v445 = *(_BYTE *)(v63 + 36);
  if (*(char *)(v63 + 63) < 0)
    std::string::__init_copy_ctor_external(&v446, *(const std::string::value_type **)(v63 + 40), *(_QWORD *)(v63 + 48));
  else
    v446 = *(std::string *)(v63 + 40);
  if (*(char *)(v61 + 31) < 0)
    std::string::__init_copy_ctor_external(&v438, *(const std::string::value_type **)(v61 + 8), *(_QWORD *)(v61 + 16));
  else
    v438 = *(std::string *)(v61 + 8);
  v74 = *(_DWORD *)(v61 + 32);
  v437 = off_24C335B18;
  v440 = *(_QWORD *)(v61 + 36);
  v75 = *(_DWORD *)(v61 + 44);
  v195 = v74;
  v439 = v74;
  v441 = v75;
  v432 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v59 + 31) < 0)
    std::string::__init_copy_ctor_external(&v433, *(const std::string::value_type **)(v59 + 8), *(_QWORD *)(v59 + 16));
  else
    v433 = *(std::string *)(v59 + 8);
  v434 = *(_DWORD *)(v59 + 32);
  v432 = &off_24C335AB8;
  v435 = *(_BYTE *)(v59 + 36);
  if (*(char *)(v59 + 63) < 0)
    std::string::__init_copy_ctor_external(&v436, *(const std::string::value_type **)(v59 + 40), *(_QWORD *)(v59 + 48));
  else
    v436 = *(std::string *)(v59 + 40);
  v173 = v69;
  if (*(char *)(v57 + 31) < 0)
    std::string::__init_copy_ctor_external(&v428, *(const std::string::value_type **)(v57 + 8), *(_QWORD *)(v57 + 16));
  else
    v428 = *(std::string *)(v57 + 8);
  v76 = *(_DWORD *)(v57 + 32);
  v427 = off_24C335B18;
  v430 = *(_QWORD *)(v57 + 36);
  v77 = *(_DWORD *)(v57 + 44);
  v190 = v76;
  v429 = v76;
  v431 = v77;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v423, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v423 = *(std::string *)(a9 + 8);
  v78 = *(_DWORD *)(a9 + 32);
  v422 = off_24C335B18;
  v425 = *(_QWORD *)(a9 + 36);
  v79 = *(_DWORD *)(a9 + 44);
  v424 = v78;
  v426 = v79;
  v170 = v68;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v418, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v418 = *(std::string *)(a10 + 8);
  v80 = *(_DWORD *)(a10 + 32);
  v417 = off_24C335B18;
  v420 = *(_QWORD *)(a10 + 36);
  v81 = *(_DWORD *)(a10 + 44);
  v419 = v80;
  v421 = v81;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v413, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v413 = *(std::string *)(a11 + 8);
  v82 = *(_DWORD *)(a11 + 32);
  v412 = off_24C335B18;
  v415 = *(_QWORD *)(a11 + 36);
  v83 = *(_DWORD *)(a11 + 44);
  v186 = v82;
  v414 = v82;
  v416 = v83;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v408, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v408 = *(std::string *)(a12 + 8);
  v84 = *(_DWORD *)(a12 + 32);
  v407 = off_24C335B18;
  v410 = *(_QWORD *)(a12 + 36);
  v85 = *(_DWORD *)(a12 + 44);
  v185 = v84;
  v409 = v84;
  v411 = v85;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v403, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v403 = *(std::string *)(a13 + 8);
  v86 = *(_DWORD *)(a13 + 32);
  v402 = off_24C335B18;
  v405 = *(_QWORD *)(a13 + 36);
  v87 = *(_DWORD *)(a13 + 44);
  v184 = v86;
  v404 = v86;
  v406 = v87;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v398, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v398 = *(std::string *)(a14 + 8);
  v88 = *(_DWORD *)(a14 + 32);
  v397 = off_24C335B18;
  v400 = *(_QWORD *)(a14 + 36);
  v89 = *(_DWORD *)(a14 + 44);
  v183 = v88;
  v399 = v88;
  v401 = v89;
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v393, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v393 = *(std::string *)(a15 + 8);
  v90 = *(_DWORD *)(a15 + 32);
  v392 = off_24C335B18;
  v395 = *(_QWORD *)(a15 + 36);
  v91 = *(_DWORD *)(a15 + 44);
  v182 = v90;
  v394 = v90;
  v396 = v91;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v388, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v388 = *(std::string *)(a16 + 8);
  v92 = *(_DWORD *)(a16 + 32);
  v387 = off_24C335B18;
  v390 = *(_QWORD *)(a16 + 36);
  v93 = *(_DWORD *)(a16 + 44);
  v181 = v92;
  v389 = v92;
  v391 = v93;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v383, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v383 = *(std::string *)(a17 + 8);
  v94 = *(_DWORD *)(a17 + 32);
  v382 = off_24C335B18;
  v385 = *(_QWORD *)(a17 + 36);
  v95 = *(_DWORD *)(a17 + 44);
  v180 = v94;
  v384 = v94;
  v386 = v95;
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v378, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v378 = *(std::string *)(a18 + 8);
  v96 = *(_DWORD *)(a18 + 32);
  v377 = off_24C335B18;
  v380 = *(_QWORD *)(a18 + 36);
  v97 = *(_DWORD *)(a18 + 44);
  v379 = v96;
  v381 = v97;
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v373, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v373 = *(std::string *)(a19 + 8);
  v98 = *(_DWORD *)(a19 + 32);
  v372 = off_24C335B18;
  v375 = *(_QWORD *)(a19 + 36);
  v99 = *(_DWORD *)(a19 + 44);
  v179 = v98;
  v374 = v98;
  v376 = v99;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v368, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v368 = *(std::string *)(a20 + 8);
  v100 = *(_DWORD *)(a20 + 32);
  v367 = off_24C335B18;
  v370 = *(_QWORD *)(a20 + 36);
  v101 = *(_DWORD *)(a20 + 44);
  v178 = v100;
  v369 = v100;
  v371 = v101;
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v363, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v363 = *(std::string *)(a21 + 8);
  v102 = *(_DWORD *)(a21 + 32);
  v362 = off_24C335B18;
  v365 = *(_QWORD *)(a21 + 36);
  v103 = *(_DWORD *)(a21 + 44);
  v177 = v102;
  v364 = v102;
  v366 = v103;
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v358, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v358 = *(std::string *)(a22 + 8);
  v104 = *(_DWORD *)(a22 + 32);
  v357 = off_24C335B18;
  v360 = *(_QWORD *)(a22 + 36);
  v105 = *(_DWORD *)(a22 + 44);
  v176 = v104;
  v359 = v104;
  v361 = v105;
  v352 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v353, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v353 = *(std::string *)(a23 + 8);
  v354 = *(_DWORD *)(a23 + 32);
  v352 = &off_24C335AB8;
  v355 = *(_BYTE *)(a23 + 36);
  if (*(char *)(a23 + 63) < 0)
    std::string::__init_copy_ctor_external(&v356, *(const std::string::value_type **)(a23 + 40), *(_QWORD *)(a23 + 48));
  else
    v356 = *(std::string *)(a23 + 40);
  v347 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v348, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v348 = *(std::string *)(a24 + 8);
  v349 = *(_DWORD *)(a24 + 32);
  v347 = &off_24C335AB8;
  v350 = *(_BYTE *)(a24 + 36);
  if (*(char *)(a24 + 63) < 0)
    std::string::__init_copy_ctor_external(&v351, *(const std::string::value_type **)(a24 + 40), *(_QWORD *)(a24 + 48));
  else
    v351 = *(std::string *)(a24 + 40);
  v342 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a25 + 31) < 0)
    std::string::__init_copy_ctor_external(&v343, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  else
    v343 = *(std::string *)(a25 + 8);
  v344 = *(_DWORD *)(a25 + 32);
  v342 = &off_24C335AB8;
  v345 = *(_BYTE *)(a25 + 36);
  if (*(char *)(a25 + 63) < 0)
    std::string::__init_copy_ctor_external(&v346, *(const std::string::value_type **)(a25 + 40), *(_QWORD *)(a25 + 48));
  else
    v346 = *(std::string *)(a25 + 40);
  v337 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v338, *(const std::string::value_type **)(a26 + 8), *(_QWORD *)(a26 + 16));
  else
    v338 = *(std::string *)(a26 + 8);
  v339 = *(_DWORD *)(a26 + 32);
  v337 = &off_24C335AB8;
  v340 = *(_BYTE *)(a26 + 36);
  if (*(char *)(a26 + 63) < 0)
    std::string::__init_copy_ctor_external(&v341, *(const std::string::value_type **)(a26 + 40), *(_QWORD *)(a26 + 48));
  else
    v341 = *(std::string *)(a26 + 40);
  v332 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a27 + 31) < 0)
    std::string::__init_copy_ctor_external(&v333, *(const std::string::value_type **)(a27 + 8), *(_QWORD *)(a27 + 16));
  else
    v333 = *(std::string *)(a27 + 8);
  v334 = *(_DWORD *)(a27 + 32);
  v332 = &off_24C335AB8;
  v335 = *(_BYTE *)(a27 + 36);
  if (*(char *)(a27 + 63) < 0)
    std::string::__init_copy_ctor_external(&v336, *(const std::string::value_type **)(a27 + 40), *(_QWORD *)(a27 + 48));
  else
    v336 = *(std::string *)(a27 + 40);
  if (*(char *)(a28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v328, *(const std::string::value_type **)(a28 + 8), *(_QWORD *)(a28 + 16));
  else
    v328 = *(std::string *)(a28 + 8);
  v106 = *(_DWORD *)(a28 + 32);
  v327 = off_24C335B18;
  v330 = *(_QWORD *)(a28 + 36);
  v107 = *(_DWORD *)(a28 + 44);
  v175 = v106;
  v329 = v106;
  v331 = v107;
  if (*(char *)(a29 + 31) < 0)
    std::string::__init_copy_ctor_external(&v323, *(const std::string::value_type **)(a29 + 8), *(_QWORD *)(a29 + 16));
  else
    v323 = *(std::string *)(a29 + 8);
  v108 = *(_DWORD *)(a29 + 32);
  v322 = off_24C335B18;
  v325 = *(_QWORD *)(a29 + 36);
  v109 = *(_DWORD *)(a29 + 44);
  v174 = v108;
  v324 = v108;
  v326 = v109;
  v317 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v318, *(const std::string::value_type **)(a30 + 8), *(_QWORD *)(a30 + 16));
  else
    v318 = *(std::string *)(a30 + 8);
  v319 = *(_DWORD *)(a30 + 32);
  v317 = &off_24C335AB8;
  v320 = *(_BYTE *)(a30 + 36);
  if (*(char *)(a30 + 63) < 0)
    std::string::__init_copy_ctor_external(&v321, *(const std::string::value_type **)(a30 + 40), *(_QWORD *)(a30 + 48));
  else
    v321 = *(std::string *)(a30 + 40);
  if (*(char *)(a31 + 31) < 0)
    std::string::__init_copy_ctor_external(&v313, *(const std::string::value_type **)(a31 + 8), *(_QWORD *)(a31 + 16));
  else
    v313 = *(std::string *)(a31 + 8);
  v110 = *(_DWORD *)(a31 + 32);
  v312 = off_24C335B18;
  v315 = *(_QWORD *)(a31 + 36);
  v111 = *(_DWORD *)(a31 + 44);
  v172 = v110;
  v314 = v110;
  v316 = v111;
  if (*(char *)(a32 + 31) < 0)
    std::string::__init_copy_ctor_external(&v308, *(const std::string::value_type **)(a32 + 8), *(_QWORD *)(a32 + 16));
  else
    v308 = *(std::string *)(a32 + 8);
  v112 = *(_DWORD *)(a32 + 32);
  v307 = off_24C335B18;
  v310 = *(_QWORD *)(a32 + 36);
  v113 = *(_DWORD *)(a32 + 44);
  v171 = v112;
  v309 = v112;
  v311 = v113;
  v302 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a33 + 31) < 0)
    std::string::__init_copy_ctor_external(&v303, *(const std::string::value_type **)(a33 + 8), *(_QWORD *)(a33 + 16));
  else
    v303 = *(std::string *)(a33 + 8);
  v304 = *(_DWORD *)(a33 + 32);
  v302 = &off_24C335AB8;
  v305 = *(_BYTE *)(a33 + 36);
  if (*(char *)(a33 + 63) < 0)
    std::string::__init_copy_ctor_external(&v306, *(const std::string::value_type **)(a33 + 40), *(_QWORD *)(a33 + 48));
  else
    v306 = *(std::string *)(a33 + 40);
  v297 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a34 + 31) < 0)
    std::string::__init_copy_ctor_external(&v298, *(const std::string::value_type **)(a34 + 8), *(_QWORD *)(a34 + 16));
  else
    v298 = *(std::string *)(a34 + 8);
  v299 = *(_DWORD *)(a34 + 32);
  v297 = &off_24C335AB8;
  v300 = *(_BYTE *)(a34 + 36);
  if (*(char *)(a34 + 63) < 0)
    std::string::__init_copy_ctor_external(&v301, *(const std::string::value_type **)(a34 + 40), *(_QWORD *)(a34 + 48));
  else
    v301 = *(std::string *)(a34 + 40);
  if (*(char *)(a35 + 31) < 0)
    std::string::__init_copy_ctor_external(&v293, *(const std::string::value_type **)(a35 + 8), *(_QWORD *)(a35 + 16));
  else
    v293 = *(std::string *)(a35 + 8);
  v114 = *(_DWORD *)(a35 + 32);
  v292 = off_24C335B18;
  v295 = *(_QWORD *)(a35 + 36);
  v115 = *(_DWORD *)(a35 + 44);
  v169 = v114;
  v294 = v114;
  v296 = v115;
  if (*(char *)(a36 + 31) < 0)
    std::string::__init_copy_ctor_external(&v288, *(const std::string::value_type **)(a36 + 8), *(_QWORD *)(a36 + 16));
  else
    v288 = *(std::string *)(a36 + 8);
  v116 = *(_DWORD *)(a36 + 32);
  v287 = off_24C335B18;
  v290 = *(_QWORD *)(a36 + 36);
  v117 = *(_DWORD *)(a36 + 44);
  v168 = v116;
  v289 = v116;
  v291 = v117;
  if (*(char *)(a37 + 31) < 0)
    std::string::__init_copy_ctor_external(&v283, *(const std::string::value_type **)(a37 + 8), *(_QWORD *)(a37 + 16));
  else
    v283 = *(std::string *)(a37 + 8);
  v118 = *(_DWORD *)(a37 + 32);
  v282 = off_24C335B18;
  v285 = *(_QWORD *)(a37 + 36);
  v119 = *(_DWORD *)(a37 + 44);
  v167 = v118;
  v284 = v118;
  v286 = v119;
  v278 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a38 + 31) < 0)
    std::string::__init_copy_ctor_external(&v279, *(const std::string::value_type **)(a38 + 8), *(_QWORD *)(a38 + 16));
  else
    v279 = *(std::string *)(a38 + 8);
  v166 = *(_DWORD *)(a38 + 32);
  v280 = v166;
  v278 = off_24C335AF8;
  v120 = *(_QWORD *)(a38 + 36);
  v281 = v120;
  v273 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a39 + 31) < 0)
    std::string::__init_copy_ctor_external(&v274, *(const std::string::value_type **)(a39 + 8), *(_QWORD *)(a39 + 16));
  else
    v274 = *(std::string *)(a39 + 8);
  v275 = *(_DWORD *)(a39 + 32);
  v273 = &off_24C335AB8;
  v276 = *(_BYTE *)(a39 + 36);
  if (*(char *)(a39 + 63) < 0)
    std::string::__init_copy_ctor_external(&v277, *(const std::string::value_type **)(a39 + 40), *(_QWORD *)(a39 + 48));
  else
    v277 = *(std::string *)(a39 + 40);
  v268 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a40 + 31) < 0)
    std::string::__init_copy_ctor_external(&v269, *(const std::string::value_type **)(a40 + 8), *(_QWORD *)(a40 + 16));
  else
    v269 = *(std::string *)(a40 + 8);
  v270 = *(_DWORD *)(a40 + 32);
  v268 = &off_24C335AB8;
  v271 = *(_BYTE *)(a40 + 36);
  if (*(char *)(a40 + 63) < 0)
    std::string::__init_copy_ctor_external(&v272, *(const std::string::value_type **)(a40 + 40), *(_QWORD *)(a40 + 48));
  else
    v272 = *(std::string *)(a40 + 40);
  v263 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a41 + 31) < 0)
    std::string::__init_copy_ctor_external(&v264, *(const std::string::value_type **)(a41 + 8), *(_QWORD *)(a41 + 16));
  else
    v264 = *(std::string *)(a41 + 8);
  v121 = *(_DWORD *)(a41 + 32);
  v263 = off_24C335B18;
  v266 = *(_QWORD *)(a41 + 36);
  v122 = *(_DWORD *)(a41 + 44);
  v165 = v121;
  v265 = v121;
  v267 = v122;
  v258 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a42 + 31) < 0)
    std::string::__init_copy_ctor_external(&v259, *(const std::string::value_type **)(a42 + 8), *(_QWORD *)(a42 + 16));
  else
    v259 = *(std::string *)(a42 + 8);
  v123 = *(_DWORD *)(a42 + 32);
  v258 = off_24C335B18;
  v261 = *(_QWORD *)(a42 + 36);
  v124 = *(_DWORD *)(a42 + 44);
  v164 = v123;
  v260 = v123;
  v262 = v124;
  v253 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a43 + 31) < 0)
    std::string::__init_copy_ctor_external(&v254, *(const std::string::value_type **)(a43 + 8), *(_QWORD *)(a43 + 16));
  else
    v254 = *(std::string *)(a43 + 8);
  v125 = *(_DWORD *)(a43 + 32);
  v253 = off_24C335B18;
  v256 = *(_QWORD *)(a43 + 36);
  v126 = *(_DWORD *)(a43 + 44);
  v163 = v125;
  v255 = v125;
  v257 = v126;
  v248 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a44 + 31) < 0)
    std::string::__init_copy_ctor_external(&v249, *(const std::string::value_type **)(a44 + 8), *(_QWORD *)(a44 + 16));
  else
    v249 = *(std::string *)(a44 + 8);
  v127 = *(_DWORD *)(a44 + 32);
  v248 = off_24C335B18;
  v251 = *(_QWORD *)(a44 + 36);
  v128 = *(_DWORD *)(a44 + 44);
  v162 = v127;
  v250 = v127;
  v252 = v128;
  v244 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a45 + 31) < 0)
    std::string::__init_copy_ctor_external(&v245, *(const std::string::value_type **)(a45 + 8), *(_QWORD *)(a45 + 16));
  else
    v245 = *(std::string *)(a45 + 8);
  v161 = *(_DWORD *)(a45 + 32);
  v246 = v161;
  v244 = off_24C335AF8;
  v160 = *(_QWORD *)(a45 + 36);
  v247 = v160;
  v240 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a46 + 31) < 0)
    std::string::__init_copy_ctor_external(&v241, *(const std::string::value_type **)(a46 + 8), *(_QWORD *)(a46 + 16));
  else
    v241 = *(std::string *)(a46 + 8);
  v159 = *(_DWORD *)(a46 + 32);
  v242 = v159;
  v240 = off_24C335AF8;
  v158 = *(_QWORD *)(a46 + 36);
  v243 = v158;
  v235 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a47 + 31) < 0)
    std::string::__init_copy_ctor_external(&v236, *(const std::string::value_type **)(a47 + 8), *(_QWORD *)(a47 + 16));
  else
    v236 = *(std::string *)(a47 + 8);
  v237 = *(_DWORD *)(a47 + 32);
  v235 = &off_24C335AB8;
  v238 = *(_BYTE *)(a47 + 36);
  if (*(char *)(a47 + 63) < 0)
    std::string::__init_copy_ctor_external(&v239, *(const std::string::value_type **)(a47 + 40), *(_QWORD *)(a47 + 48));
  else
    v239 = *(std::string *)(a47 + 40);
  v230 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a48 + 31) < 0)
    std::string::__init_copy_ctor_external(&v231, *(const std::string::value_type **)(a48 + 8), *(_QWORD *)(a48 + 16));
  else
    v231 = *(std::string *)(a48 + 8);
  v129 = *(_DWORD *)(a48 + 32);
  v230 = off_24C335B18;
  v233 = *(_QWORD *)(a48 + 36);
  v130 = *(_DWORD *)(a48 + 44);
  v157 = v129;
  v232 = v129;
  v234 = v130;
  v225 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a49 + 31) < 0)
    std::string::__init_copy_ctor_external(&v226, *(const std::string::value_type **)(a49 + 8), *(_QWORD *)(a49 + 16));
  else
    v226 = *(std::string *)(a49 + 8);
  v227 = *(_DWORD *)(a49 + 32);
  v225 = &off_24C335AB8;
  v228 = *(_BYTE *)(a49 + 36);
  if (*(char *)(a49 + 63) < 0)
    std::string::__init_copy_ctor_external(&v229, *(const std::string::value_type **)(a49 + 40), *(_QWORD *)(a49 + 48));
  else
    v229 = *(std::string *)(a49 + 40);
  v220 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a50 + 31) < 0)
    std::string::__init_copy_ctor_external(&v221, *(const std::string::value_type **)(a50 + 8), *(_QWORD *)(a50 + 16));
  else
    v221 = *(std::string *)(a50 + 8);
  v131 = *(_DWORD *)(a50 + 32);
  v220 = off_24C335B18;
  v223 = *(_QWORD *)(a50 + 36);
  v132 = *(_DWORD *)(a50 + 44);
  v156 = v131;
  v222 = v131;
  v224 = v132;
  v215 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a51 + 31) < 0)
    std::string::__init_copy_ctor_external(&v216, *(const std::string::value_type **)(a51 + 8), *(_QWORD *)(a51 + 16));
  else
    v216 = *(std::string *)(a51 + 8);
  v133 = *(_DWORD *)(a51 + 32);
  v215 = off_24C335B18;
  v218 = *(_QWORD *)(a51 + 36);
  v134 = *(_DWORD *)(a51 + 44);
  v155 = v133;
  v217 = v133;
  v219 = v134;
  v210 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a52 + 31) < 0)
    std::string::__init_copy_ctor_external(&v211, *(const std::string::value_type **)(a52 + 8), *(_QWORD *)(a52 + 16));
  else
    v211 = *(std::string *)(a52 + 8);
  v135 = *(_DWORD *)(a52 + 32);
  v210 = off_24C335B18;
  v213 = *(_QWORD *)(a52 + 36);
  v136 = *(_DWORD *)(a52 + 44);
  v154 = v135;
  v212 = v135;
  v214 = v136;
  v205 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a53 + 31) < 0)
    std::string::__init_copy_ctor_external(&v206, *(const std::string::value_type **)(a53 + 8), *(_QWORD *)(a53 + 16));
  else
    v206 = *(std::string *)(a53 + 8);
  v153 = *(_DWORD *)(a53 + 32);
  v207 = v153;
  v205 = off_24C335B18;
  v208 = *(_QWORD *)(a53 + 36);
  v209 = *(_DWORD *)(a53 + 44);
  v200 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a54 + 31) < 0)
    std::string::__init_copy_ctor_external(&v201, *(const std::string::value_type **)(a54 + 8), *(_QWORD *)(a54 + 16));
  else
    v201 = *(std::string *)(a54 + 8);
  v202 = *(_DWORD *)(a54 + 32);
  v200 = &off_24C335AB8;
  v203 = *(_BYTE *)(a54 + 36);
  if (*(char *)(a54 + 63) < 0)
    std::string::__init_copy_ctor_external(&v204, *(const std::string::value_type **)(a54 + 40), *(_QWORD *)(a54 + 48));
  else
    v204 = *(std::string *)(a54 + 40);
  v704 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v705, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v705 = __s;
  v704 = off_24C335B18;
  v707 = v450;
  v706 = v198;
  v708 = v451;
  v699 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v443.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v700, v443.__r_.__value_.__l.__data_, v443.__r_.__value_.__l.__size_);
  else
    v700 = v443;
  v701 = v444;
  v699 = &off_24C335AB8;
  v702 = v445;
  if (SHIBYTE(v446.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v703, v446.__r_.__value_.__l.__data_, v446.__r_.__value_.__l.__size_);
  else
    v703 = v446;
  v694 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v438.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v695, v438.__r_.__value_.__l.__data_, v438.__r_.__value_.__l.__size_);
  else
    v695 = v438;
  v694 = off_24C335B18;
  v697 = v440;
  v696 = v195;
  v698 = v441;
  v689 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v433.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v690, v433.__r_.__value_.__l.__data_, v433.__r_.__value_.__l.__size_);
  else
    v690 = v433;
  v691 = v434;
  v689 = &off_24C335AB8;
  v692 = v435;
  if (SHIBYTE(v436.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v693, v436.__r_.__value_.__l.__data_, v436.__r_.__value_.__l.__size_);
  else
    v693 = v436;
  v684 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v428.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v685, v428.__r_.__value_.__l.__data_, v428.__r_.__value_.__l.__size_);
  else
    v685 = v428;
  v684 = off_24C335B18;
  v687 = v430;
  v686 = v190;
  v688 = v431;
  v679 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v423.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v680, v423.__r_.__value_.__l.__data_, v423.__r_.__value_.__l.__size_);
  else
    v680 = v423;
  v679 = off_24C335B18;
  v682 = v425;
  v681 = v78;
  v683 = v426;
  v674 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v418.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v675, v418.__r_.__value_.__l.__data_, v418.__r_.__value_.__l.__size_);
  else
    v675 = v418;
  v674 = off_24C335B18;
  v677 = v420;
  v676 = v80;
  v678 = v421;
  v669 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v413.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v670, v413.__r_.__value_.__l.__data_, v413.__r_.__value_.__l.__size_);
  else
    v670 = v413;
  v669 = off_24C335B18;
  v672 = v415;
  v671 = v186;
  v673 = v416;
  v664 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v408.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v665, v408.__r_.__value_.__l.__data_, v408.__r_.__value_.__l.__size_);
  else
    v665 = v408;
  v664 = off_24C335B18;
  v667 = v410;
  v666 = v185;
  v668 = v411;
  v659 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v403.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v660, v403.__r_.__value_.__l.__data_, v403.__r_.__value_.__l.__size_);
  else
    v660 = v403;
  v659 = off_24C335B18;
  v662 = v405;
  v661 = v184;
  v663 = v406;
  v654 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v398.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v655, v398.__r_.__value_.__l.__data_, v398.__r_.__value_.__l.__size_);
  else
    v655 = v398;
  v654 = off_24C335B18;
  v657 = v400;
  v656 = v183;
  v658 = v401;
  v649 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v393.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v650, v393.__r_.__value_.__l.__data_, v393.__r_.__value_.__l.__size_);
  else
    v650 = v393;
  v649 = off_24C335B18;
  v652 = v395;
  v651 = v182;
  v653 = v396;
  v644 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v388.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v645, v388.__r_.__value_.__l.__data_, v388.__r_.__value_.__l.__size_);
  else
    v645 = v388;
  v644 = off_24C335B18;
  v647 = v390;
  v646 = v181;
  v648 = v391;
  v639 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v383.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v640, v383.__r_.__value_.__l.__data_, v383.__r_.__value_.__l.__size_);
  else
    v640 = v383;
  v639 = off_24C335B18;
  v642 = v385;
  v641 = v180;
  v643 = v386;
  v634 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v378.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v635, v378.__r_.__value_.__l.__data_, v378.__r_.__value_.__l.__size_);
  else
    v635 = v378;
  v634 = off_24C335B18;
  v637 = v380;
  v636 = v96;
  v638 = v381;
  v629 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v373.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v630, v373.__r_.__value_.__l.__data_, v373.__r_.__value_.__l.__size_);
  else
    v630 = v373;
  v629 = off_24C335B18;
  v632 = v375;
  v631 = v179;
  v633 = v376;
  v624 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v368.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v625, v368.__r_.__value_.__l.__data_, v368.__r_.__value_.__l.__size_);
  else
    v625 = v368;
  v624 = off_24C335B18;
  v627 = v370;
  v626 = v178;
  v628 = v371;
  v619 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v363.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v620, v363.__r_.__value_.__l.__data_, v363.__r_.__value_.__l.__size_);
  else
    v620 = v363;
  v619 = off_24C335B18;
  v622 = v365;
  v621 = v177;
  v623 = v366;
  v614 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v358.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v615, v358.__r_.__value_.__l.__data_, v358.__r_.__value_.__l.__size_);
  else
    v615 = v358;
  v614 = off_24C335B18;
  v617 = v360;
  v616 = v176;
  v618 = v361;
  v609 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v353.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v610, v353.__r_.__value_.__l.__data_, v353.__r_.__value_.__l.__size_);
  else
    v610 = v353;
  v611 = v354;
  v609 = &off_24C335AB8;
  v612 = v355;
  if (SHIBYTE(v356.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v613, v356.__r_.__value_.__l.__data_, v356.__r_.__value_.__l.__size_);
  else
    v613 = v356;
  v604 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v348.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v605, v348.__r_.__value_.__l.__data_, v348.__r_.__value_.__l.__size_);
  else
    v605 = v348;
  v606 = v349;
  v604 = &off_24C335AB8;
  v607 = v350;
  if (SHIBYTE(v351.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v608, v351.__r_.__value_.__l.__data_, v351.__r_.__value_.__l.__size_);
  else
    v608 = v351;
  v599 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v343.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v600, v343.__r_.__value_.__l.__data_, v343.__r_.__value_.__l.__size_);
  else
    v600 = v343;
  v601 = v344;
  v599 = &off_24C335AB8;
  v602 = v345;
  if (SHIBYTE(v346.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v603, v346.__r_.__value_.__l.__data_, v346.__r_.__value_.__l.__size_);
  else
    v603 = v346;
  v594 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v338.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v595, v338.__r_.__value_.__l.__data_, v338.__r_.__value_.__l.__size_);
  else
    v595 = v338;
  v596 = v339;
  v594 = &off_24C335AB8;
  v597 = v340;
  if (SHIBYTE(v341.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v598, v341.__r_.__value_.__l.__data_, v341.__r_.__value_.__l.__size_);
  else
    v598 = v341;
  v589 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v333.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v590, v333.__r_.__value_.__l.__data_, v333.__r_.__value_.__l.__size_);
  else
    v590 = v333;
  v591 = v334;
  v589 = &off_24C335AB8;
  v592 = v335;
  if (SHIBYTE(v336.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v593, v336.__r_.__value_.__l.__data_, v336.__r_.__value_.__l.__size_);
  else
    v593 = v336;
  v584 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v328.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v585, v328.__r_.__value_.__l.__data_, v328.__r_.__value_.__l.__size_);
  else
    v585 = v328;
  v584 = off_24C335B18;
  v587 = v330;
  v586 = v175;
  v588 = v331;
  v579 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v323.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v580, v323.__r_.__value_.__l.__data_, v323.__r_.__value_.__l.__size_);
  else
    v580 = v323;
  v579 = off_24C335B18;
  v582 = v325;
  v581 = v174;
  v583 = v326;
  v574 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v318.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v575, v318.__r_.__value_.__l.__data_, v318.__r_.__value_.__l.__size_);
  else
    v575 = v318;
  v576 = v319;
  v574 = &off_24C335AB8;
  v577 = v320;
  if (SHIBYTE(v321.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v578, v321.__r_.__value_.__l.__data_, v321.__r_.__value_.__l.__size_);
  else
    v578 = v321;
  v569 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v313.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v570, v313.__r_.__value_.__l.__data_, v313.__r_.__value_.__l.__size_);
  else
    v570 = v313;
  v569 = off_24C335B18;
  v572 = v315;
  v571 = v172;
  v573 = v316;
  v564 = (uint64_t (**)())off_24C335D90;
  v137 = SHIBYTE(v308.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v565, v308.__r_.__value_.__l.__data_, v308.__r_.__value_.__l.__size_);
  else
    v565 = v308;
  v564 = off_24C335B18;
  v567 = v310;
  v566 = v171;
  v568 = v311;
  v559 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v303.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v560, v303.__r_.__value_.__l.__data_, v303.__r_.__value_.__l.__size_);
  else
    v560 = v303;
  v561 = v304;
  v559 = &off_24C335AB8;
  v562 = v305;
  if (SHIBYTE(v306.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v563, v306.__r_.__value_.__l.__data_, v306.__r_.__value_.__l.__size_);
  else
    v563 = v306;
  v554 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v298.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v555, v298.__r_.__value_.__l.__data_, v298.__r_.__value_.__l.__size_);
  else
    v555 = v298;
  v556 = v299;
  v554 = &off_24C335AB8;
  v557 = v300;
  if (SHIBYTE(v301.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v558, v301.__r_.__value_.__l.__data_, v301.__r_.__value_.__l.__size_);
  else
    v558 = v301;
  v549 = (uint64_t (**)())off_24C335D90;
  v138 = SHIBYTE(v293.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v293.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v550, v293.__r_.__value_.__l.__data_, v293.__r_.__value_.__l.__size_);
  else
    v550 = v293;
  v549 = off_24C335B18;
  v552 = v295;
  v551 = v169;
  v553 = v296;
  v544 = (uint64_t (**)())off_24C335D90;
  v199 = SHIBYTE(v288.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v288.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v545, v288.__r_.__value_.__l.__data_, v288.__r_.__value_.__l.__size_);
  else
    v545 = v288;
  v544 = off_24C335B18;
  v547 = v290;
  v546 = v168;
  v548 = v291;
  v539 = (uint64_t (**)())off_24C335D90;
  v139 = SHIBYTE(v283.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v283.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v540, v283.__r_.__value_.__l.__data_, v283.__r_.__value_.__l.__size_);
  else
    v540 = v283;
  v539 = off_24C335B18;
  v542 = v285;
  v541 = v167;
  v543 = v286;
  v535 = (uint64_t (**)())off_24C335D90;
  v140 = SHIBYTE(v279.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v279.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v536, v279.__r_.__value_.__l.__data_, v279.__r_.__value_.__l.__size_);
  else
    v536 = v279;
  v196 = v140;
  v197 = v138;
  v537 = v166;
  v535 = off_24C335AF8;
  v538 = v120;
  v530 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v274.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v531, v274.__r_.__value_.__l.__data_, v274.__r_.__value_.__l.__size_);
  else
    v531 = v274;
  v532 = v275;
  v530 = &off_24C335AB8;
  v533 = v276;
  if (SHIBYTE(v277.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v534, v277.__r_.__value_.__l.__data_, v277.__r_.__value_.__l.__size_);
  else
    v534 = v277;
  v525 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v269.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v526, v269.__r_.__value_.__l.__data_, v269.__r_.__value_.__l.__size_);
  else
    v526 = v269;
  v527 = v270;
  v525 = &off_24C335AB8;
  v528 = v271;
  if (SHIBYTE(v272.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v529, v272.__r_.__value_.__l.__data_, v272.__r_.__value_.__l.__size_);
  else
    v529 = v272;
  v520 = (uint64_t (**)())off_24C335D90;
  v141 = SHIBYTE(v264.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v264.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v521, v264.__r_.__value_.__l.__data_, v264.__r_.__value_.__l.__size_);
  else
    v521 = v264;
  v520 = off_24C335B18;
  v523 = v266;
  v522 = v165;
  v524 = v267;
  v515 = (uint64_t (**)())off_24C335D90;
  v194 = SHIBYTE(v259.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v259.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v516, v259.__r_.__value_.__l.__data_, v259.__r_.__value_.__l.__size_);
  else
    v516 = v259;
  v515 = off_24C335B18;
  v518 = v261;
  v517 = v164;
  v519 = v262;
  v510 = (uint64_t (**)())off_24C335D90;
  v193 = SHIBYTE(v254.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v254.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v511, v254.__r_.__value_.__l.__data_, v254.__r_.__value_.__l.__size_);
  else
    v511 = v254;
  v510 = off_24C335B18;
  v513 = v256;
  v512 = v163;
  v514 = v257;
  v505 = (uint64_t (**)())off_24C335D90;
  v192 = SHIBYTE(v249.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v249.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v506, v249.__r_.__value_.__l.__data_, v249.__r_.__value_.__l.__size_);
  else
    v506 = v249;
  v505 = off_24C335B18;
  v508 = v251;
  v507 = v162;
  v509 = v252;
  v501 = (uint64_t (**)())off_24C335D90;
  v191 = SHIBYTE(v245.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v245.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v502, v245.__r_.__value_.__l.__data_, v245.__r_.__value_.__l.__size_);
  else
    v502 = v245;
  v503 = v161;
  v501 = off_24C335AF8;
  v504 = v160;
  v497 = (uint64_t (**)())off_24C335D90;
  v189 = SHIBYTE(v241.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v241.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v498, v241.__r_.__value_.__l.__data_, v241.__r_.__value_.__l.__size_);
  else
    v498 = v241;
  v188 = v141;
  v499 = v159;
  v497 = off_24C335AF8;
  v500 = v158;
  v492 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v236.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v493, v236.__r_.__value_.__l.__data_, v236.__r_.__value_.__l.__size_);
  else
    v493 = v236;
  v494 = v237;
  v492 = &off_24C335AB8;
  v495 = v238;
  if (SHIBYTE(v239.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v496, v239.__r_.__value_.__l.__data_, v239.__r_.__value_.__l.__size_);
  else
    v496 = v239;
  v487 = (uint64_t (**)())off_24C335D90;
  v142 = SHIBYTE(v231.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v231.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v488, v231.__r_.__value_.__l.__data_, v231.__r_.__value_.__l.__size_);
  else
    v488 = v231;
  v487 = off_24C335B18;
  v490 = v233;
  v489 = v157;
  v491 = v234;
  v482 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v226.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v483, v226.__r_.__value_.__l.__data_, v226.__r_.__value_.__l.__size_);
  else
    v483 = v226;
  v484 = v227;
  v482 = &off_24C335AB8;
  v485 = v228;
  if (SHIBYTE(v229.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v486, v229.__r_.__value_.__l.__data_, v229.__r_.__value_.__l.__size_);
  else
    v486 = v229;
  v477 = (uint64_t (**)())off_24C335D90;
  v143 = SHIBYTE(v221.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v221.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v478, v221.__r_.__value_.__l.__data_, v221.__r_.__value_.__l.__size_);
  else
    v478 = v221;
  v477 = off_24C335B18;
  v480 = v223;
  v479 = v156;
  v481 = v224;
  v472 = (uint64_t (**)())off_24C335D90;
  v144 = SHIBYTE(v216.__r_.__value_.__r.__words[2]);
  v187 = v139;
  if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v473, v216.__r_.__value_.__l.__data_, v216.__r_.__value_.__l.__size_);
  else
    v473 = v216;
  v472 = off_24C335B18;
  v475 = v218;
  v474 = v155;
  v476 = v219;
  v467 = (uint64_t (**)())off_24C335D90;
  v145 = SHIBYTE(v211.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v468, v211.__r_.__value_.__l.__data_, v211.__r_.__value_.__l.__size_);
  else
    v468 = v211;
  v467 = off_24C335B18;
  v470 = v213;
  v469 = v154;
  v471 = v214;
  v462 = (uint64_t (**)())off_24C335D90;
  v146 = SHIBYTE(v206.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v206.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v206.__r_.__value_.__l.__data_, v206.__r_.__value_.__l.__size_);
  else
    __p = v206;
  v462 = off_24C335B18;
  v465 = v208;
  v464 = v153;
  v466 = v209;
  v457 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v201.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v458, v201.__r_.__value_.__l.__data_, v201.__r_.__value_.__l.__size_);
  else
    v458 = v201;
  v459 = v202;
  v457 = &off_24C335AB8;
  v460 = v203;
  if (SHIBYTE(v204.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v461, v204.__r_.__value_.__l.__data_, v204.__r_.__value_.__l.__size_);
  else
    v461 = v204;
  mediaplatform::DatabaseColumnTuple<7ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(v173, (uint64_t)&v704, (uint64_t)&v699, (uint64_t)&v694, (uint64_t)&v689, (uint64_t)&v684, (uint64_t)&v679, (uint64_t)&v674, (uint64_t)&v669, (uint64_t)&v664, (uint64_t)&v659, (uint64_t)&v654, (uint64_t)&v649, (uint64_t)&v644, (uint64_t)&v639, (uint64_t)&v634, (uint64_t)&v629, (uint64_t)&v624, (uint64_t)&v619,
    (uint64_t)&v614,
    (uint64_t)&v609,
    (uint64_t)&v604,
    (uint64_t)&v599,
    (uint64_t)&v594,
    (uint64_t)&v589,
    (uint64_t)&v584,
    (uint64_t)&v579,
    (uint64_t)&v574,
    (uint64_t)&v569,
    (uint64_t)&v564,
    (uint64_t)&v559,
    (uint64_t)&v554,
    (uint64_t)&v549,
    (uint64_t)&v544,
    (uint64_t)&v539,
    (uint64_t)&v535,
    (uint64_t)&v530,
    (uint64_t)&v525,
    (uint64_t)&v520,
    (uint64_t)&v515,
    (uint64_t)&v510,
    (uint64_t)&v505,
    (uint64_t)&v501,
    (uint64_t)&v497,
    (uint64_t)&v492,
    (uint64_t)&v487,
    (uint64_t)&v482,
    (uint64_t)&v477,
    (uint64_t)&v472,
    (uint64_t)&v467,
    (uint64_t)&v462,
    (uint64_t)&v457);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v457);
  v462 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v467 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v468.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v468.__r_.__value_.__l.__data_);
  v472 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v473.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v473.__r_.__value_.__l.__data_);
  v477 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v478.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v478.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v482);
  v487 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v488.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v488.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v492);
  v497 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v498.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v498.__r_.__value_.__l.__data_);
  v501 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v502.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v502.__r_.__value_.__l.__data_);
  v505 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v506.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v506.__r_.__value_.__l.__data_);
  v510 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v511.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v511.__r_.__value_.__l.__data_);
  v515 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v516.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v516.__r_.__value_.__l.__data_);
  v520 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v521.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v521.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v525);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v530);
  v535 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v536.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v536.__r_.__value_.__l.__data_);
  v539 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v540.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v540.__r_.__value_.__l.__data_);
  v544 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v545.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v545.__r_.__value_.__l.__data_);
  v549 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v550.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v550.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v554);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v559);
  v564 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v565.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v565.__r_.__value_.__l.__data_);
  v569 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v570.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v570.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v574);
  v579 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v580.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v580.__r_.__value_.__l.__data_);
  v584 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v585.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v585.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v589);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v594);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v599);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v604);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v609);
  v614 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v615.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v615.__r_.__value_.__l.__data_);
  v619 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v620.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v620.__r_.__value_.__l.__data_);
  v624 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v625.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v625.__r_.__value_.__l.__data_);
  v629 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v630.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v630.__r_.__value_.__l.__data_);
  v634 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v635.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v635.__r_.__value_.__l.__data_);
  v639 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v640.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v640.__r_.__value_.__l.__data_);
  v644 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v645.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v645.__r_.__value_.__l.__data_);
  v649 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v650.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v650.__r_.__value_.__l.__data_);
  v654 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v655.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v655.__r_.__value_.__l.__data_);
  v659 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v660.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v660.__r_.__value_.__l.__data_);
  v664 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v665.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v665.__r_.__value_.__l.__data_);
  v669 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v670.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v670.__r_.__value_.__l.__data_);
  v674 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v675.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v675.__r_.__value_.__l.__data_);
  v679 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v680.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v680.__r_.__value_.__l.__data_);
  v684 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v685.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v685.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v689);
  v694 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v695.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v695.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v699);
  v704 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v705.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v705.__r_.__value_.__l.__data_);
  *(_QWORD *)(v173 + 2688) = off_24C335D90;
  v147 = (std::string *)(v173 + 2696);
  v148 = SHIBYTE(v453.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v453.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v147, v453.__r_.__value_.__l.__data_, v453.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v147->__r_.__value_.__l.__data_ = *(_OWORD *)&v453.__r_.__value_.__l.__data_;
    *(_QWORD *)(v173 + 2712) = *((_QWORD *)&v453.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(v173 + 2720) = v454;
  *(_QWORD *)(v173 + 2688) = off_24C335B18;
  *(_QWORD *)(v173 + 2724) = v455;
  *(_DWORD *)(v173 + 2732) = v456;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v200);
  v205 = (uint64_t (**)())off_24C335D90;
  if (v146 < 0)
    operator delete(v206.__r_.__value_.__l.__data_);
  v210 = (uint64_t (**)())off_24C335D90;
  if (v145 < 0)
    operator delete(v211.__r_.__value_.__l.__data_);
  v215 = (uint64_t (**)())off_24C335D90;
  if (v144 < 0)
    operator delete(v216.__r_.__value_.__l.__data_);
  v220 = (uint64_t (**)())off_24C335D90;
  if (v143 < 0)
    operator delete(v221.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v225);
  v230 = (uint64_t (**)())off_24C335D90;
  if (v142 < 0)
    operator delete(v231.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v235);
  v240 = (uint64_t (**)())off_24C335D90;
  if (v189 < 0)
    operator delete(v241.__r_.__value_.__l.__data_);
  v244 = (uint64_t (**)())off_24C335D90;
  if (v191 < 0)
    operator delete(v245.__r_.__value_.__l.__data_);
  v248 = (uint64_t (**)())off_24C335D90;
  if (v192 < 0)
    operator delete(v249.__r_.__value_.__l.__data_);
  v253 = (uint64_t (**)())off_24C335D90;
  if (v193 < 0)
    operator delete(v254.__r_.__value_.__l.__data_);
  v258 = (uint64_t (**)())off_24C335D90;
  if (v194 < 0)
    operator delete(v259.__r_.__value_.__l.__data_);
  v263 = (uint64_t (**)())off_24C335D90;
  if (v188 < 0)
    operator delete(v264.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v268);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v273);
  v278 = (uint64_t (**)())off_24C335D90;
  if (v196 < 0)
    operator delete(v279.__r_.__value_.__l.__data_);
  v282 = (uint64_t (**)())off_24C335D90;
  if (v187 < 0)
    operator delete(v283.__r_.__value_.__l.__data_);
  v287 = (uint64_t (**)())off_24C335D90;
  if (v199 < 0)
    operator delete(v288.__r_.__value_.__l.__data_);
  v292 = (uint64_t (**)())off_24C335D90;
  if (v197 < 0)
    operator delete(v293.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v297);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v302);
  v307 = (uint64_t (**)())off_24C335D90;
  if (v137 < 0)
    operator delete(v308.__r_.__value_.__l.__data_);
  if (SHIBYTE(v313.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v313.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v317);
  if (SHIBYTE(v323.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v323.__r_.__value_.__l.__data_);
  if (SHIBYTE(v328.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v328.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v332);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v337);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v342);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v347);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v352);
  if (SHIBYTE(v358.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v358.__r_.__value_.__l.__data_);
  if (SHIBYTE(v363.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v363.__r_.__value_.__l.__data_);
  if (SHIBYTE(v368.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v368.__r_.__value_.__l.__data_);
  if (SHIBYTE(v373.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v373.__r_.__value_.__l.__data_);
  if (SHIBYTE(v378.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v378.__r_.__value_.__l.__data_);
  if (SHIBYTE(v383.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v383.__r_.__value_.__l.__data_);
  if (SHIBYTE(v388.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v388.__r_.__value_.__l.__data_);
  if (SHIBYTE(v393.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v393.__r_.__value_.__l.__data_);
  if (SHIBYTE(v398.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v398.__r_.__value_.__l.__data_);
  if (SHIBYTE(v403.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v403.__r_.__value_.__l.__data_);
  if (SHIBYTE(v408.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v408.__r_.__value_.__l.__data_);
  if (SHIBYTE(v413.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v413.__r_.__value_.__l.__data_);
  if (SHIBYTE(v418.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v418.__r_.__value_.__l.__data_);
  if (SHIBYTE(v423.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v423.__r_.__value_.__l.__data_);
  if (SHIBYTE(v428.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v428.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v432);
  if (SHIBYTE(v438.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v438.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v442);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__s.__r_.__value_.__l.__data_);
    if ((v148 & 0x80000000) == 0)
      goto LABEL_547;
  }
  else if ((v148 & 0x80000000) == 0)
  {
    goto LABEL_547;
  }
  operator delete(v453.__r_.__value_.__l.__data_);
LABEL_547:
  *(_QWORD *)(v173 + 2736) = off_24C335D90;
  v149 = (std::string *)(v173 + 2744);
  if (*(char *)(v170 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v149, *(const std::string::value_type **)(v170 + 8), *(_QWORD *)(v170 + 16));
  }
  else
  {
    v150 = *(_OWORD *)(v170 + 8);
    *(_QWORD *)(v173 + 2760) = *(_QWORD *)(v170 + 24);
    *(_OWORD *)&v149->__r_.__value_.__l.__data_ = v150;
  }
  *(_DWORD *)(v173 + 2768) = *(_DWORD *)(v170 + 32);
  *(_QWORD *)(v173 + 2736) = off_24C335B18;
  v151 = *(_QWORD *)(v170 + 36);
  *(_DWORD *)(v173 + 2780) = *(_DWORD *)(v170 + 44);
  *(_QWORD *)(v173 + 2772) = v151;
  return v173;
}

void sub_20A888504(_Unwind_Exception *a1)
{
  uint64_t v1;

  mediaplatform::DatabaseColumnTuple<6ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(v1);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<5ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 2736) = off_24C335D90;
  if (*(char *)(a1 + 2767) < 0)
    operator delete(*(void **)(a1 + 2744));
  *(_QWORD *)(a1 + 2688) = off_24C335D90;
  if (*(char *)(a1 + 2719) < 0)
    operator delete(*(void **)(a1 + 2696));
  *(_QWORD *)(a1 + 2640) = off_24C335D90;
  if (*(char *)(a1 + 2671) < 0)
    operator delete(*(void **)(a1 + 2648));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 2576);
  *(_QWORD *)(a1 + 2528) = off_24C335D90;
  if (*(char *)(a1 + 2559) < 0)
    operator delete(*(void **)(a1 + 2536));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 2464);
  return mediaplatform::DatabaseColumnTuple<11ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<6ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 2688) = off_24C335D90;
  if (*(char *)(a1 + 2719) < 0)
    operator delete(*(void **)(a1 + 2696));
  *(_QWORD *)(a1 + 2640) = off_24C335D90;
  if (*(char *)(a1 + 2671) < 0)
    operator delete(*(void **)(a1 + 2648));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 2576);
  *(_QWORD *)(a1 + 2528) = off_24C335D90;
  if (*(char *)(a1 + 2559) < 0)
    operator delete(*(void **)(a1 + 2536));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 2464);
  return mediaplatform::DatabaseColumnTuple<11ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<7ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  uint64_t v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  std::string *v140;
  std::string *v141;
  std::string *v142;
  __int128 v143;
  uint64_t result;
  uint64_t v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  uint64_t v151;
  int v152;
  uint64_t v153;
  int v154;
  int v155;
  int v156;
  int v157;
  uint64_t v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  uint64_t v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  uint64_t v190;
  uint64_t (**v191)();
  std::string v192;
  int v193;
  char v194;
  std::string v195;
  uint64_t (**v196)();
  std::string v197;
  int v198;
  uint64_t v199;
  int v200;
  uint64_t (**v201)();
  std::string v202;
  int v203;
  uint64_t v204;
  int v205;
  uint64_t (**v206)();
  std::string v207;
  int v208;
  uint64_t v209;
  int v210;
  uint64_t (**v211)();
  std::string v212;
  int v213;
  uint64_t v214;
  int v215;
  uint64_t (**v216)();
  std::string v217;
  int v218;
  char v219;
  std::string v220;
  uint64_t (**v221)();
  std::string v222;
  int v223;
  uint64_t v224;
  int v225;
  uint64_t (**v226)();
  std::string v227;
  int v228;
  char v229;
  std::string v230;
  uint64_t (**v231)();
  std::string v232;
  int v233;
  uint64_t v234;
  uint64_t (**v235)();
  std::string v236;
  int v237;
  uint64_t v238;
  uint64_t (**v239)();
  std::string v240;
  int v241;
  uint64_t v242;
  int v243;
  uint64_t (**v244)();
  std::string v245;
  int v246;
  uint64_t v247;
  int v248;
  uint64_t (**v249)();
  std::string v250;
  int v251;
  uint64_t v252;
  int v253;
  uint64_t (**v254)();
  std::string v255;
  int v256;
  uint64_t v257;
  int v258;
  uint64_t (**v259)();
  std::string v260;
  int v261;
  char v262;
  std::string v263;
  uint64_t (**v264)();
  std::string v265;
  int v266;
  char v267;
  std::string v268;
  uint64_t (**v269)();
  std::string v270;
  int v271;
  uint64_t v272;
  uint64_t (**v273)();
  std::string v274;
  int v275;
  uint64_t v276;
  int v277;
  uint64_t (**v278)();
  std::string v279;
  int v280;
  uint64_t v281;
  int v282;
  uint64_t (**v283)();
  std::string v284;
  int v285;
  uint64_t v286;
  int v287;
  uint64_t (**v288)();
  std::string v289;
  int v290;
  char v291;
  std::string v292;
  uint64_t (**v293)();
  std::string v294;
  int v295;
  char v296;
  std::string v297;
  uint64_t (**v298)();
  std::string v299;
  int v300;
  uint64_t v301;
  int v302;
  uint64_t (**v303)();
  std::string v304;
  int v305;
  uint64_t v306;
  int v307;
  uint64_t (**v308)();
  std::string v309;
  int v310;
  char v311;
  std::string v312;
  uint64_t (**v313)();
  std::string v314;
  int v315;
  uint64_t v316;
  int v317;
  uint64_t (**v318)();
  std::string v319;
  int v320;
  uint64_t v321;
  int v322;
  uint64_t (**v323)();
  std::string v324;
  int v325;
  char v326;
  std::string v327;
  uint64_t (**v328)();
  std::string v329;
  int v330;
  char v331;
  std::string v332;
  uint64_t (**v333)();
  std::string v334;
  int v335;
  char v336;
  std::string v337;
  uint64_t (**v338)();
  std::string v339;
  int v340;
  char v341;
  std::string v342;
  uint64_t (**v343)();
  std::string v344;
  int v345;
  char v346;
  std::string v347;
  uint64_t (**v348)();
  std::string v349;
  int v350;
  uint64_t v351;
  int v352;
  uint64_t (**v353)();
  std::string v354;
  int v355;
  uint64_t v356;
  int v357;
  uint64_t (**v358)();
  std::string v359;
  int v360;
  uint64_t v361;
  int v362;
  uint64_t (**v363)();
  std::string v364;
  int v365;
  uint64_t v366;
  int v367;
  uint64_t (**v368)();
  std::string v369;
  int v370;
  uint64_t v371;
  int v372;
  uint64_t (**v373)();
  std::string v374;
  int v375;
  uint64_t v376;
  int v377;
  uint64_t (**v378)();
  std::string v379;
  int v380;
  uint64_t v381;
  int v382;
  uint64_t (**v383)();
  std::string v384;
  int v385;
  uint64_t v386;
  int v387;
  uint64_t (**v388)();
  std::string v389;
  int v390;
  uint64_t v391;
  int v392;
  uint64_t (**v393)();
  std::string v394;
  int v395;
  uint64_t v396;
  int v397;
  uint64_t (**v398)();
  std::string v399;
  int v400;
  uint64_t v401;
  int v402;
  uint64_t (**v403)();
  std::string v404;
  int v405;
  uint64_t v406;
  int v407;
  uint64_t (**v408)();
  std::string v409;
  int v410;
  uint64_t v411;
  int v412;
  uint64_t (**v413)();
  std::string v414;
  int v415;
  uint64_t v416;
  int v417;
  uint64_t (**v418)();
  std::string v419;
  int v420;
  uint64_t v421;
  int v422;
  uint64_t (**v423)();
  std::string v424;
  int v425;
  char v426;
  std::string v427;
  uint64_t (**v428)();
  std::string __s;
  int v430;
  uint64_t v431;
  int v432;
  uint64_t (**v433)();
  std::string v434;
  int v435;
  char v436;
  std::string v437;
  uint64_t (**v438)();
  std::string v439;
  int v440;
  char v441;
  std::string v442;
  uint64_t (**v443)();
  std::string __p;
  int v445;
  uint64_t v446;
  int v447;
  uint64_t (**v448)();
  std::string v449;
  int v450;
  uint64_t v451;
  int v452;
  uint64_t (**v453)();
  std::string v454;
  int v455;
  uint64_t v456;
  int v457;
  uint64_t (**v458)();
  std::string v459;
  int v460;
  uint64_t v461;
  int v462;
  uint64_t (**v463)();
  std::string v464;
  int v465;
  char v466;
  std::string v467;
  uint64_t (**v468)();
  std::string v469;
  int v470;
  uint64_t v471;
  int v472;
  uint64_t (**v473)();
  std::string v474;
  int v475;
  char v476;
  std::string v477;
  uint64_t (**v478)();
  std::string v479;
  int v480;
  uint64_t v481;
  uint64_t (**v482)();
  std::string v483;
  int v484;
  uint64_t v485;
  uint64_t (**v486)();
  std::string v487;
  int v488;
  uint64_t v489;
  int v490;
  uint64_t (**v491)();
  std::string v492;
  int v493;
  uint64_t v494;
  int v495;
  uint64_t (**v496)();
  std::string v497;
  int v498;
  uint64_t v499;
  int v500;
  uint64_t (**v501)();
  std::string v502;
  int v503;
  uint64_t v504;
  int v505;
  uint64_t (**v506)();
  std::string v507;
  int v508;
  char v509;
  std::string v510;
  uint64_t (**v511)();
  std::string v512;
  int v513;
  char v514;
  std::string v515;
  uint64_t (**v516)();
  std::string v517;
  int v518;
  uint64_t v519;
  uint64_t (**v520)();
  std::string v521;
  int v522;
  uint64_t v523;
  int v524;
  uint64_t (**v525)();
  std::string v526;
  int v527;
  uint64_t v528;
  int v529;
  uint64_t (**v530)();
  std::string v531;
  int v532;
  uint64_t v533;
  int v534;
  uint64_t (**v535)();
  std::string v536;
  int v537;
  char v538;
  std::string v539;
  uint64_t (**v540)();
  std::string v541;
  int v542;
  char v543;
  std::string v544;
  uint64_t (**v545)();
  std::string v546;
  int v547;
  uint64_t v548;
  int v549;
  uint64_t (**v550)();
  std::string v551;
  int v552;
  uint64_t v553;
  int v554;
  uint64_t (**v555)();
  std::string v556;
  int v557;
  char v558;
  std::string v559;
  uint64_t (**v560)();
  std::string v561;
  int v562;
  uint64_t v563;
  int v564;
  uint64_t (**v565)();
  std::string v566;
  int v567;
  uint64_t v568;
  int v569;
  uint64_t (**v570)();
  std::string v571;
  int v572;
  char v573;
  std::string v574;
  uint64_t (**v575)();
  std::string v576;
  int v577;
  char v578;
  std::string v579;
  uint64_t (**v580)();
  std::string v581;
  int v582;
  char v583;
  std::string v584;
  uint64_t (**v585)();
  std::string v586;
  int v587;
  char v588;
  std::string v589;
  uint64_t (**v590)();
  std::string v591;
  int v592;
  char v593;
  std::string v594;
  uint64_t (**v595)();
  std::string v596;
  int v597;
  uint64_t v598;
  int v599;
  uint64_t (**v600)();
  std::string v601;
  int v602;
  uint64_t v603;
  int v604;
  uint64_t (**v605)();
  std::string v606;
  int v607;
  uint64_t v608;
  int v609;
  uint64_t (**v610)();
  std::string v611;
  int v612;
  uint64_t v613;
  int v614;
  uint64_t (**v615)();
  std::string v616;
  int v617;
  uint64_t v618;
  int v619;
  uint64_t (**v620)();
  std::string v621;
  int v622;
  uint64_t v623;
  int v624;
  uint64_t (**v625)();
  std::string v626;
  int v627;
  uint64_t v628;
  int v629;
  uint64_t (**v630)();
  std::string v631;
  int v632;
  uint64_t v633;
  int v634;
  uint64_t (**v635)();
  std::string v636;
  int v637;
  uint64_t v638;
  int v639;
  uint64_t (**v640)();
  std::string v641;
  int v642;
  uint64_t v643;
  int v644;
  uint64_t (**v645)();
  std::string v646;
  int v647;
  uint64_t v648;
  int v649;
  uint64_t (**v650)();
  std::string v651;
  int v652;
  uint64_t v653;
  int v654;
  uint64_t (**v655)();
  std::string v656;
  int v657;
  uint64_t v658;
  int v659;
  uint64_t (**v660)();
  std::string v661;
  int v662;
  uint64_t v663;
  int v664;
  uint64_t (**v665)();
  std::string v666;
  int v667;
  uint64_t v668;
  int v669;
  uint64_t (**v670)();
  std::string v671;
  int v672;
  char v673;
  std::string v674;
  uint64_t (**v675)();
  std::string v676;
  int v677;
  uint64_t v678;
  int v679;

  v52 = MEMORY[0x24BDAC7A8](a1);
  v55 = v54;
  v57 = v56;
  v59 = v58;
  v61 = v60;
  v63 = v62;
  v64 = v53;
  v164 = v65;
  v190 = v52;
  v433 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v53 + 31) < 0)
    std::string::__init_copy_ctor_external(&v434, *(const std::string::value_type **)(v53 + 8), *(_QWORD *)(v53 + 16));
  else
    v434 = *(std::string *)(v53 + 8);
  v435 = *(_DWORD *)(v64 + 32);
  v433 = &off_24C335AB8;
  v436 = *(_BYTE *)(v64 + 36);
  if (*(char *)(v64 + 63) < 0)
    std::string::__init_copy_ctor_external(&v437, *(const std::string::value_type **)(v64 + 40), *(_QWORD *)(v64 + 48));
  else
    v437 = *(std::string *)(v64 + 40);
  if (*(char *)(v63 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(v63 + 8), *(_QWORD *)(v63 + 16));
  else
    __s = *(std::string *)(v63 + 8);
  v66 = *(_DWORD *)(v63 + 32);
  v428 = off_24C335B18;
  v431 = *(_QWORD *)(v63 + 36);
  v67 = *(_DWORD *)(v63 + 44);
  v188 = v66;
  v430 = v66;
  v432 = v67;
  v423 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v61 + 31) < 0)
    std::string::__init_copy_ctor_external(&v424, *(const std::string::value_type **)(v61 + 8), *(_QWORD *)(v61 + 16));
  else
    v424 = *(std::string *)(v61 + 8);
  v425 = *(_DWORD *)(v61 + 32);
  v423 = &off_24C335AB8;
  v426 = *(_BYTE *)(v61 + 36);
  if (*(char *)(v61 + 63) < 0)
    std::string::__init_copy_ctor_external(&v427, *(const std::string::value_type **)(v61 + 40), *(_QWORD *)(v61 + 48));
  else
    v427 = *(std::string *)(v61 + 40);
  if (*(char *)(v59 + 31) < 0)
    std::string::__init_copy_ctor_external(&v419, *(const std::string::value_type **)(v59 + 8), *(_QWORD *)(v59 + 16));
  else
    v419 = *(std::string *)(v59 + 8);
  v68 = *(_DWORD *)(v59 + 32);
  v418 = off_24C335B18;
  v421 = *(_QWORD *)(v59 + 36);
  v69 = *(_DWORD *)(v59 + 44);
  v185 = v68;
  v420 = v68;
  v422 = v69;
  if (*(char *)(v57 + 31) < 0)
    std::string::__init_copy_ctor_external(&v414, *(const std::string::value_type **)(v57 + 8), *(_QWORD *)(v57 + 16));
  else
    v414 = *(std::string *)(v57 + 8);
  v70 = *(_DWORD *)(v57 + 32);
  v413 = off_24C335B18;
  v416 = *(_QWORD *)(v57 + 36);
  v71 = *(_DWORD *)(v57 + 44);
  v415 = v70;
  v417 = v71;
  if (*(char *)(v55 + 31) < 0)
    std::string::__init_copy_ctor_external(&v409, *(const std::string::value_type **)(v55 + 8), *(_QWORD *)(v55 + 16));
  else
    v409 = *(std::string *)(v55 + 8);
  v72 = *(_DWORD *)(v55 + 32);
  v408 = off_24C335B18;
  v411 = *(_QWORD *)(v55 + 36);
  v73 = *(_DWORD *)(v55 + 44);
  v410 = v72;
  v412 = v73;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v404, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v404 = *(std::string *)(a9 + 8);
  v74 = *(_DWORD *)(a9 + 32);
  v403 = off_24C335B18;
  v406 = *(_QWORD *)(a9 + 36);
  v75 = *(_DWORD *)(a9 + 44);
  v183 = v74;
  v405 = v74;
  v407 = v75;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v399, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v399 = *(std::string *)(a10 + 8);
  v76 = *(_DWORD *)(a10 + 32);
  v398 = off_24C335B18;
  v401 = *(_QWORD *)(a10 + 36);
  v77 = *(_DWORD *)(a10 + 44);
  v181 = v76;
  v400 = v76;
  v402 = v77;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v394, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v394 = *(std::string *)(a11 + 8);
  v78 = *(_DWORD *)(a11 + 32);
  v393 = off_24C335B18;
  v396 = *(_QWORD *)(a11 + 36);
  v79 = *(_DWORD *)(a11 + 44);
  v179 = v78;
  v395 = v78;
  v397 = v79;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v389, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v389 = *(std::string *)(a12 + 8);
  v80 = *(_DWORD *)(a12 + 32);
  v388 = off_24C335B18;
  v391 = *(_QWORD *)(a12 + 36);
  v81 = *(_DWORD *)(a12 + 44);
  v177 = v80;
  v390 = v80;
  v392 = v81;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v384, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v384 = *(std::string *)(a13 + 8);
  v82 = *(_DWORD *)(a13 + 32);
  v383 = off_24C335B18;
  v386 = *(_QWORD *)(a13 + 36);
  v83 = *(_DWORD *)(a13 + 44);
  v175 = v82;
  v385 = v82;
  v387 = v83;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v379, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v379 = *(std::string *)(a14 + 8);
  v84 = *(_DWORD *)(a14 + 32);
  v378 = off_24C335B18;
  v381 = *(_QWORD *)(a14 + 36);
  v85 = *(_DWORD *)(a14 + 44);
  v172 = v84;
  v380 = v84;
  v382 = v85;
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v374, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v374 = *(std::string *)(a15 + 8);
  v86 = *(_DWORD *)(a15 + 32);
  v373 = off_24C335B18;
  v376 = *(_QWORD *)(a15 + 36);
  v87 = *(_DWORD *)(a15 + 44);
  v171 = v86;
  v375 = v86;
  v377 = v87;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v369, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v369 = *(std::string *)(a16 + 8);
  v88 = *(_DWORD *)(a16 + 32);
  v368 = off_24C335B18;
  v371 = *(_QWORD *)(a16 + 36);
  v89 = *(_DWORD *)(a16 + 44);
  v370 = v88;
  v372 = v89;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v364, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v364 = *(std::string *)(a17 + 8);
  v90 = *(_DWORD *)(a17 + 32);
  v363 = off_24C335B18;
  v366 = *(_QWORD *)(a17 + 36);
  v91 = *(_DWORD *)(a17 + 44);
  v170 = v90;
  v365 = v90;
  v367 = v91;
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v359, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v359 = *(std::string *)(a18 + 8);
  v92 = *(_DWORD *)(a18 + 32);
  v358 = off_24C335B18;
  v361 = *(_QWORD *)(a18 + 36);
  v93 = *(_DWORD *)(a18 + 44);
  v169 = v92;
  v360 = v92;
  v362 = v93;
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v354, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v354 = *(std::string *)(a19 + 8);
  v94 = *(_DWORD *)(a19 + 32);
  v353 = off_24C335B18;
  v356 = *(_QWORD *)(a19 + 36);
  v95 = *(_DWORD *)(a19 + 44);
  v168 = v94;
  v355 = v94;
  v357 = v95;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v349, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v349 = *(std::string *)(a20 + 8);
  v96 = *(_DWORD *)(a20 + 32);
  v348 = off_24C335B18;
  v351 = *(_QWORD *)(a20 + 36);
  v97 = *(_DWORD *)(a20 + 44);
  v167 = v96;
  v350 = v96;
  v352 = v97;
  v343 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v344, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v344 = *(std::string *)(a21 + 8);
  v345 = *(_DWORD *)(a21 + 32);
  v343 = &off_24C335AB8;
  v346 = *(_BYTE *)(a21 + 36);
  if (*(char *)(a21 + 63) < 0)
    std::string::__init_copy_ctor_external(&v347, *(const std::string::value_type **)(a21 + 40), *(_QWORD *)(a21 + 48));
  else
    v347 = *(std::string *)(a21 + 40);
  v338 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v339, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v339 = *(std::string *)(a22 + 8);
  v340 = *(_DWORD *)(a22 + 32);
  v338 = &off_24C335AB8;
  v341 = *(_BYTE *)(a22 + 36);
  if (*(char *)(a22 + 63) < 0)
    std::string::__init_copy_ctor_external(&v342, *(const std::string::value_type **)(a22 + 40), *(_QWORD *)(a22 + 48));
  else
    v342 = *(std::string *)(a22 + 40);
  v333 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v334, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v334 = *(std::string *)(a23 + 8);
  v335 = *(_DWORD *)(a23 + 32);
  v333 = &off_24C335AB8;
  v336 = *(_BYTE *)(a23 + 36);
  if (*(char *)(a23 + 63) < 0)
    std::string::__init_copy_ctor_external(&v337, *(const std::string::value_type **)(a23 + 40), *(_QWORD *)(a23 + 48));
  else
    v337 = *(std::string *)(a23 + 40);
  v328 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v329, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v329 = *(std::string *)(a24 + 8);
  v330 = *(_DWORD *)(a24 + 32);
  v328 = &off_24C335AB8;
  v331 = *(_BYTE *)(a24 + 36);
  if (*(char *)(a24 + 63) < 0)
    std::string::__init_copy_ctor_external(&v332, *(const std::string::value_type **)(a24 + 40), *(_QWORD *)(a24 + 48));
  else
    v332 = *(std::string *)(a24 + 40);
  v323 = (uint64_t (**)())off_24C335D90;
  v98 = v72;
  if (*(char *)(a25 + 31) < 0)
    std::string::__init_copy_ctor_external(&v324, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  else
    v324 = *(std::string *)(a25 + 8);
  v325 = *(_DWORD *)(a25 + 32);
  v323 = &off_24C335AB8;
  v326 = *(_BYTE *)(a25 + 36);
  if (*(char *)(a25 + 63) < 0)
    std::string::__init_copy_ctor_external(&v327, *(const std::string::value_type **)(a25 + 40), *(_QWORD *)(a25 + 48));
  else
    v327 = *(std::string *)(a25 + 40);
  if (*(char *)(a26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v319, *(const std::string::value_type **)(a26 + 8), *(_QWORD *)(a26 + 16));
  else
    v319 = *(std::string *)(a26 + 8);
  v99 = *(_DWORD *)(a26 + 32);
  v318 = off_24C335B18;
  v321 = *(_QWORD *)(a26 + 36);
  v100 = *(_DWORD *)(a26 + 44);
  v320 = v99;
  v322 = v100;
  if (*(char *)(a27 + 31) < 0)
    std::string::__init_copy_ctor_external(&v314, *(const std::string::value_type **)(a27 + 8), *(_QWORD *)(a27 + 16));
  else
    v314 = *(std::string *)(a27 + 8);
  v101 = *(_DWORD *)(a27 + 32);
  v313 = off_24C335B18;
  v316 = *(_QWORD *)(a27 + 36);
  v102 = *(_DWORD *)(a27 + 44);
  v166 = v101;
  v315 = v101;
  v317 = v102;
  v308 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v309, *(const std::string::value_type **)(a28 + 8), *(_QWORD *)(a28 + 16));
  else
    v309 = *(std::string *)(a28 + 8);
  v310 = *(_DWORD *)(a28 + 32);
  v308 = &off_24C335AB8;
  v311 = *(_BYTE *)(a28 + 36);
  if (*(char *)(a28 + 63) < 0)
    std::string::__init_copy_ctor_external(&v312, *(const std::string::value_type **)(a28 + 40), *(_QWORD *)(a28 + 48));
  else
    v312 = *(std::string *)(a28 + 40);
  if (*(char *)(a29 + 31) < 0)
    std::string::__init_copy_ctor_external(&v304, *(const std::string::value_type **)(a29 + 8), *(_QWORD *)(a29 + 16));
  else
    v304 = *(std::string *)(a29 + 8);
  v103 = *(_DWORD *)(a29 + 32);
  v303 = off_24C335B18;
  v306 = *(_QWORD *)(a29 + 36);
  v104 = *(_DWORD *)(a29 + 44);
  v165 = v103;
  v305 = v103;
  v307 = v104;
  if (*(char *)(a30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v299, *(const std::string::value_type **)(a30 + 8), *(_QWORD *)(a30 + 16));
  else
    v299 = *(std::string *)(a30 + 8);
  v105 = *(_DWORD *)(a30 + 32);
  v298 = off_24C335B18;
  v301 = *(_QWORD *)(a30 + 36);
  v106 = *(_DWORD *)(a30 + 44);
  v163 = v105;
  v300 = v105;
  v302 = v106;
  v293 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a31 + 31) < 0)
    std::string::__init_copy_ctor_external(&v294, *(const std::string::value_type **)(a31 + 8), *(_QWORD *)(a31 + 16));
  else
    v294 = *(std::string *)(a31 + 8);
  v295 = *(_DWORD *)(a31 + 32);
  v293 = &off_24C335AB8;
  v296 = *(_BYTE *)(a31 + 36);
  if (*(char *)(a31 + 63) < 0)
    std::string::__init_copy_ctor_external(&v297, *(const std::string::value_type **)(a31 + 40), *(_QWORD *)(a31 + 48));
  else
    v297 = *(std::string *)(a31 + 40);
  v288 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a32 + 31) < 0)
    std::string::__init_copy_ctor_external(&v289, *(const std::string::value_type **)(a32 + 8), *(_QWORD *)(a32 + 16));
  else
    v289 = *(std::string *)(a32 + 8);
  v290 = *(_DWORD *)(a32 + 32);
  v288 = &off_24C335AB8;
  v291 = *(_BYTE *)(a32 + 36);
  if (*(char *)(a32 + 63) < 0)
    std::string::__init_copy_ctor_external(&v292, *(const std::string::value_type **)(a32 + 40), *(_QWORD *)(a32 + 48));
  else
    v292 = *(std::string *)(a32 + 40);
  if (*(char *)(a33 + 31) < 0)
    std::string::__init_copy_ctor_external(&v284, *(const std::string::value_type **)(a33 + 8), *(_QWORD *)(a33 + 16));
  else
    v284 = *(std::string *)(a33 + 8);
  v107 = *(_DWORD *)(a33 + 32);
  v283 = off_24C335B18;
  v286 = *(_QWORD *)(a33 + 36);
  v108 = *(_DWORD *)(a33 + 44);
  v162 = v107;
  v285 = v107;
  v287 = v108;
  if (*(char *)(a34 + 31) < 0)
    std::string::__init_copy_ctor_external(&v279, *(const std::string::value_type **)(a34 + 8), *(_QWORD *)(a34 + 16));
  else
    v279 = *(std::string *)(a34 + 8);
  v109 = *(_DWORD *)(a34 + 32);
  v278 = off_24C335B18;
  v281 = *(_QWORD *)(a34 + 36);
  v110 = *(_DWORD *)(a34 + 44);
  v161 = v109;
  v280 = v109;
  v282 = v110;
  if (*(char *)(a35 + 31) < 0)
    std::string::__init_copy_ctor_external(&v274, *(const std::string::value_type **)(a35 + 8), *(_QWORD *)(a35 + 16));
  else
    v274 = *(std::string *)(a35 + 8);
  v111 = *(_DWORD *)(a35 + 32);
  v273 = off_24C335B18;
  v276 = *(_QWORD *)(a35 + 36);
  v112 = *(_DWORD *)(a35 + 44);
  v160 = v111;
  v275 = v111;
  v277 = v112;
  if (*(char *)(a36 + 31) < 0)
    std::string::__init_copy_ctor_external(&v270, *(const std::string::value_type **)(a36 + 8), *(_QWORD *)(a36 + 16));
  else
    v270 = *(std::string *)(a36 + 8);
  v159 = *(_DWORD *)(a36 + 32);
  v271 = v159;
  v269 = off_24C335AF8;
  v113 = *(_QWORD *)(a36 + 36);
  v272 = v113;
  v264 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a37 + 31) < 0)
    std::string::__init_copy_ctor_external(&v265, *(const std::string::value_type **)(a37 + 8), *(_QWORD *)(a37 + 16));
  else
    v265 = *(std::string *)(a37 + 8);
  v266 = *(_DWORD *)(a37 + 32);
  v264 = &off_24C335AB8;
  v267 = *(_BYTE *)(a37 + 36);
  v158 = v113;
  if (*(char *)(a37 + 63) < 0)
    std::string::__init_copy_ctor_external(&v268, *(const std::string::value_type **)(a37 + 40), *(_QWORD *)(a37 + 48));
  else
    v268 = *(std::string *)(a37 + 40);
  v259 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a38 + 31) < 0)
    std::string::__init_copy_ctor_external(&v260, *(const std::string::value_type **)(a38 + 8), *(_QWORD *)(a38 + 16));
  else
    v260 = *(std::string *)(a38 + 8);
  v261 = *(_DWORD *)(a38 + 32);
  v259 = &off_24C335AB8;
  v262 = *(_BYTE *)(a38 + 36);
  if (*(char *)(a38 + 63) < 0)
    std::string::__init_copy_ctor_external(&v263, *(const std::string::value_type **)(a38 + 40), *(_QWORD *)(a38 + 48));
  else
    v263 = *(std::string *)(a38 + 40);
  v254 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a39 + 31) < 0)
    std::string::__init_copy_ctor_external(&v255, *(const std::string::value_type **)(a39 + 8), *(_QWORD *)(a39 + 16));
  else
    v255 = *(std::string *)(a39 + 8);
  v114 = *(_DWORD *)(a39 + 32);
  v254 = off_24C335B18;
  v257 = *(_QWORD *)(a39 + 36);
  v115 = *(_DWORD *)(a39 + 44);
  v256 = v114;
  v258 = v115;
  v249 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a40 + 31) < 0)
    std::string::__init_copy_ctor_external(&v250, *(const std::string::value_type **)(a40 + 8), *(_QWORD *)(a40 + 16));
  else
    v250 = *(std::string *)(a40 + 8);
  v116 = *(_DWORD *)(a40 + 32);
  v249 = off_24C335B18;
  v252 = *(_QWORD *)(a40 + 36);
  v117 = *(_DWORD *)(a40 + 44);
  v157 = v116;
  v251 = v116;
  v253 = v117;
  v244 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a41 + 31) < 0)
    std::string::__init_copy_ctor_external(&v245, *(const std::string::value_type **)(a41 + 8), *(_QWORD *)(a41 + 16));
  else
    v245 = *(std::string *)(a41 + 8);
  v118 = *(_DWORD *)(a41 + 32);
  v244 = off_24C335B18;
  v247 = *(_QWORD *)(a41 + 36);
  v119 = *(_DWORD *)(a41 + 44);
  v156 = v118;
  v246 = v118;
  v248 = v119;
  v239 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a42 + 31) < 0)
    std::string::__init_copy_ctor_external(&v240, *(const std::string::value_type **)(a42 + 8), *(_QWORD *)(a42 + 16));
  else
    v240 = *(std::string *)(a42 + 8);
  v120 = *(_DWORD *)(a42 + 32);
  v239 = off_24C335B18;
  v242 = *(_QWORD *)(a42 + 36);
  v121 = *(_DWORD *)(a42 + 44);
  v155 = v120;
  v241 = v120;
  v243 = v121;
  v235 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a43 + 31) < 0)
    std::string::__init_copy_ctor_external(&v236, *(const std::string::value_type **)(a43 + 8), *(_QWORD *)(a43 + 16));
  else
    v236 = *(std::string *)(a43 + 8);
  v154 = *(_DWORD *)(a43 + 32);
  v237 = v154;
  v235 = off_24C335AF8;
  v153 = *(_QWORD *)(a43 + 36);
  v238 = v153;
  v231 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a44 + 31) < 0)
    std::string::__init_copy_ctor_external(&v232, *(const std::string::value_type **)(a44 + 8), *(_QWORD *)(a44 + 16));
  else
    v232 = *(std::string *)(a44 + 8);
  v152 = *(_DWORD *)(a44 + 32);
  v233 = v152;
  v231 = off_24C335AF8;
  v151 = *(_QWORD *)(a44 + 36);
  v234 = v151;
  v226 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a45 + 31) < 0)
    std::string::__init_copy_ctor_external(&v227, *(const std::string::value_type **)(a45 + 8), *(_QWORD *)(a45 + 16));
  else
    v227 = *(std::string *)(a45 + 8);
  v228 = *(_DWORD *)(a45 + 32);
  v226 = &off_24C335AB8;
  v229 = *(_BYTE *)(a45 + 36);
  if (*(char *)(a45 + 63) < 0)
    std::string::__init_copy_ctor_external(&v230, *(const std::string::value_type **)(a45 + 40), *(_QWORD *)(a45 + 48));
  else
    v230 = *(std::string *)(a45 + 40);
  v221 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a46 + 31) < 0)
    std::string::__init_copy_ctor_external(&v222, *(const std::string::value_type **)(a46 + 8), *(_QWORD *)(a46 + 16));
  else
    v222 = *(std::string *)(a46 + 8);
  v122 = *(_DWORD *)(a46 + 32);
  v221 = off_24C335B18;
  v224 = *(_QWORD *)(a46 + 36);
  v123 = *(_DWORD *)(a46 + 44);
  v150 = v122;
  v223 = v122;
  v225 = v123;
  v216 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a47 + 31) < 0)
    std::string::__init_copy_ctor_external(&v217, *(const std::string::value_type **)(a47 + 8), *(_QWORD *)(a47 + 16));
  else
    v217 = *(std::string *)(a47 + 8);
  v218 = *(_DWORD *)(a47 + 32);
  v216 = &off_24C335AB8;
  v219 = *(_BYTE *)(a47 + 36);
  if (*(char *)(a47 + 63) < 0)
    std::string::__init_copy_ctor_external(&v220, *(const std::string::value_type **)(a47 + 40), *(_QWORD *)(a47 + 48));
  else
    v220 = *(std::string *)(a47 + 40);
  v211 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a48 + 31) < 0)
    std::string::__init_copy_ctor_external(&v212, *(const std::string::value_type **)(a48 + 8), *(_QWORD *)(a48 + 16));
  else
    v212 = *(std::string *)(a48 + 8);
  v124 = *(_DWORD *)(a48 + 32);
  v211 = off_24C335B18;
  v214 = *(_QWORD *)(a48 + 36);
  v125 = *(_DWORD *)(a48 + 44);
  v149 = v124;
  v213 = v124;
  v215 = v125;
  v206 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a49 + 31) < 0)
    std::string::__init_copy_ctor_external(&v207, *(const std::string::value_type **)(a49 + 8), *(_QWORD *)(a49 + 16));
  else
    v207 = *(std::string *)(a49 + 8);
  v126 = *(_DWORD *)(a49 + 32);
  v206 = off_24C335B18;
  v209 = *(_QWORD *)(a49 + 36);
  v127 = *(_DWORD *)(a49 + 44);
  v148 = v126;
  v208 = v126;
  v210 = v127;
  v201 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a50 + 31) < 0)
    std::string::__init_copy_ctor_external(&v202, *(const std::string::value_type **)(a50 + 8), *(_QWORD *)(a50 + 16));
  else
    v202 = *(std::string *)(a50 + 8);
  v128 = *(_DWORD *)(a50 + 32);
  v201 = off_24C335B18;
  v204 = *(_QWORD *)(a50 + 36);
  v129 = *(_DWORD *)(a50 + 44);
  v147 = v128;
  v203 = v128;
  v205 = v129;
  v196 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a51 + 31) < 0)
    std::string::__init_copy_ctor_external(&v197, *(const std::string::value_type **)(a51 + 8), *(_QWORD *)(a51 + 16));
  else
    v197 = *(std::string *)(a51 + 8);
  v146 = *(_DWORD *)(a51 + 32);
  v198 = v146;
  v196 = off_24C335B18;
  v199 = *(_QWORD *)(a51 + 36);
  v200 = *(_DWORD *)(a51 + 44);
  v191 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a52 + 31) < 0)
    std::string::__init_copy_ctor_external(&v192, *(const std::string::value_type **)(a52 + 8), *(_QWORD *)(a52 + 16));
  else
    v192 = *(std::string *)(a52 + 8);
  v193 = *(_DWORD *)(a52 + 32);
  v191 = &off_24C335AB8;
  v194 = *(_BYTE *)(a52 + 36);
  if (*(char *)(a52 + 63) < 0)
    std::string::__init_copy_ctor_external(&v195, *(const std::string::value_type **)(a52 + 40), *(_QWORD *)(a52 + 48));
  else
    v195 = *(std::string *)(a52 + 40);
  v675 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v676, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v676 = __s;
  v675 = off_24C335B18;
  v678 = v431;
  v677 = v188;
  v679 = v432;
  v670 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v424.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v671, v424.__r_.__value_.__l.__data_, v424.__r_.__value_.__l.__size_);
  else
    v671 = v424;
  v672 = v425;
  v670 = &off_24C335AB8;
  v673 = v426;
  if (SHIBYTE(v427.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v674, v427.__r_.__value_.__l.__data_, v427.__r_.__value_.__l.__size_);
  else
    v674 = v427;
  v665 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v419.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v666, v419.__r_.__value_.__l.__data_, v419.__r_.__value_.__l.__size_);
  else
    v666 = v419;
  v665 = off_24C335B18;
  v668 = v421;
  v667 = v185;
  v669 = v422;
  v660 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v414.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v661, v414.__r_.__value_.__l.__data_, v414.__r_.__value_.__l.__size_);
  else
    v661 = v414;
  v130 = v114;
  v660 = off_24C335B18;
  v663 = v416;
  v662 = v70;
  v664 = v417;
  v655 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v409.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v656, v409.__r_.__value_.__l.__data_, v409.__r_.__value_.__l.__size_);
  else
    v656 = v409;
  v655 = off_24C335B18;
  v658 = v411;
  v657 = v98;
  v659 = v412;
  v650 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v404.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v651, v404.__r_.__value_.__l.__data_, v404.__r_.__value_.__l.__size_);
  else
    v651 = v404;
  v650 = off_24C335B18;
  v653 = v406;
  v652 = v183;
  v654 = v407;
  v645 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v399.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v646, v399.__r_.__value_.__l.__data_, v399.__r_.__value_.__l.__size_);
  else
    v646 = v399;
  v645 = off_24C335B18;
  v648 = v401;
  v647 = v181;
  v649 = v402;
  v640 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v394.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v641, v394.__r_.__value_.__l.__data_, v394.__r_.__value_.__l.__size_);
  else
    v641 = v394;
  v640 = off_24C335B18;
  v643 = v396;
  v642 = v179;
  v644 = v397;
  v635 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v389.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v636, v389.__r_.__value_.__l.__data_, v389.__r_.__value_.__l.__size_);
  else
    v636 = v389;
  v635 = off_24C335B18;
  v638 = v391;
  v637 = v177;
  v639 = v392;
  v630 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v384.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v631, v384.__r_.__value_.__l.__data_, v384.__r_.__value_.__l.__size_);
  else
    v631 = v384;
  v630 = off_24C335B18;
  v633 = v386;
  v632 = v175;
  v634 = v387;
  v625 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v379.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v626, v379.__r_.__value_.__l.__data_, v379.__r_.__value_.__l.__size_);
  else
    v626 = v379;
  v625 = off_24C335B18;
  v628 = v381;
  v627 = v172;
  v629 = v382;
  v620 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v374.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v621, v374.__r_.__value_.__l.__data_, v374.__r_.__value_.__l.__size_);
  else
    v621 = v374;
  v620 = off_24C335B18;
  v623 = v376;
  v622 = v171;
  v624 = v377;
  v615 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v369.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v616, v369.__r_.__value_.__l.__data_, v369.__r_.__value_.__l.__size_);
  else
    v616 = v369;
  v615 = off_24C335B18;
  v618 = v371;
  v617 = v88;
  v619 = v372;
  v610 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v364.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v611, v364.__r_.__value_.__l.__data_, v364.__r_.__value_.__l.__size_);
  else
    v611 = v364;
  v610 = off_24C335B18;
  v613 = v366;
  v612 = v170;
  v614 = v367;
  v605 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v359.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v606, v359.__r_.__value_.__l.__data_, v359.__r_.__value_.__l.__size_);
  else
    v606 = v359;
  v605 = off_24C335B18;
  v608 = v361;
  v607 = v169;
  v609 = v362;
  v600 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v354.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v601, v354.__r_.__value_.__l.__data_, v354.__r_.__value_.__l.__size_);
  else
    v601 = v354;
  v600 = off_24C335B18;
  v603 = v356;
  v602 = v168;
  v604 = v357;
  v595 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v349.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v596, v349.__r_.__value_.__l.__data_, v349.__r_.__value_.__l.__size_);
  else
    v596 = v349;
  v595 = off_24C335B18;
  v598 = v351;
  v597 = v167;
  v599 = v352;
  v590 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v344.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v591, v344.__r_.__value_.__l.__data_, v344.__r_.__value_.__l.__size_);
  else
    v591 = v344;
  v592 = v345;
  v590 = &off_24C335AB8;
  v593 = v346;
  if (SHIBYTE(v347.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v594, v347.__r_.__value_.__l.__data_, v347.__r_.__value_.__l.__size_);
  else
    v594 = v347;
  v585 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v339.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v586, v339.__r_.__value_.__l.__data_, v339.__r_.__value_.__l.__size_);
  else
    v586 = v339;
  v587 = v340;
  v585 = &off_24C335AB8;
  v588 = v341;
  if (SHIBYTE(v342.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v589, v342.__r_.__value_.__l.__data_, v342.__r_.__value_.__l.__size_);
  else
    v589 = v342;
  v580 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v334.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v581, v334.__r_.__value_.__l.__data_, v334.__r_.__value_.__l.__size_);
  else
    v581 = v334;
  v582 = v335;
  v580 = &off_24C335AB8;
  v583 = v336;
  if (SHIBYTE(v337.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v584, v337.__r_.__value_.__l.__data_, v337.__r_.__value_.__l.__size_);
  else
    v584 = v337;
  v575 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v329.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v576, v329.__r_.__value_.__l.__data_, v329.__r_.__value_.__l.__size_);
  else
    v576 = v329;
  v577 = v330;
  v575 = &off_24C335AB8;
  v578 = v331;
  if (SHIBYTE(v332.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v579, v332.__r_.__value_.__l.__data_, v332.__r_.__value_.__l.__size_);
  else
    v579 = v332;
  v570 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v324.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v571, v324.__r_.__value_.__l.__data_, v324.__r_.__value_.__l.__size_);
  else
    v571 = v324;
  v572 = v325;
  v570 = &off_24C335AB8;
  v573 = v326;
  if (SHIBYTE(v327.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v574, v327.__r_.__value_.__l.__data_, v327.__r_.__value_.__l.__size_);
  else
    v574 = v327;
  v565 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v319.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v566, v319.__r_.__value_.__l.__data_, v319.__r_.__value_.__l.__size_);
  else
    v566 = v319;
  v565 = off_24C335B18;
  v568 = v321;
  v567 = v99;
  v569 = v322;
  v560 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v314.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v561, v314.__r_.__value_.__l.__data_, v314.__r_.__value_.__l.__size_);
  else
    v561 = v314;
  v560 = off_24C335B18;
  v563 = v316;
  v562 = v166;
  v564 = v317;
  v555 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v309.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v556, v309.__r_.__value_.__l.__data_, v309.__r_.__value_.__l.__size_);
  else
    v556 = v309;
  v557 = v310;
  v555 = &off_24C335AB8;
  v558 = v311;
  if (SHIBYTE(v312.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v559, v312.__r_.__value_.__l.__data_, v312.__r_.__value_.__l.__size_);
  else
    v559 = v312;
  v550 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v304.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v551, v304.__r_.__value_.__l.__data_, v304.__r_.__value_.__l.__size_);
  else
    v551 = v304;
  v550 = off_24C335B18;
  v553 = v306;
  v552 = v165;
  v554 = v307;
  v545 = (uint64_t (**)())off_24C335D90;
  v131 = SHIBYTE(v299.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v299.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v546, v299.__r_.__value_.__l.__data_, v299.__r_.__value_.__l.__size_);
  else
    v546 = v299;
  v545 = off_24C335B18;
  v548 = v301;
  v547 = v163;
  v549 = v302;
  v540 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v294.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v541, v294.__r_.__value_.__l.__data_, v294.__r_.__value_.__l.__size_);
  else
    v541 = v294;
  v542 = v295;
  v540 = &off_24C335AB8;
  v543 = v296;
  if (SHIBYTE(v297.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v544, v297.__r_.__value_.__l.__data_, v297.__r_.__value_.__l.__size_);
  else
    v544 = v297;
  v535 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v289.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v536, v289.__r_.__value_.__l.__data_, v289.__r_.__value_.__l.__size_);
  else
    v536 = v289;
  v537 = v290;
  v535 = &off_24C335AB8;
  v538 = v291;
  if (SHIBYTE(v292.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v539, v292.__r_.__value_.__l.__data_, v292.__r_.__value_.__l.__size_);
  else
    v539 = v292;
  v530 = (uint64_t (**)())off_24C335D90;
  v189 = SHIBYTE(v284.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v284.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v531, v284.__r_.__value_.__l.__data_, v284.__r_.__value_.__l.__size_);
  else
    v531 = v284;
  v530 = off_24C335B18;
  v533 = v286;
  v532 = v162;
  v534 = v287;
  v525 = (uint64_t (**)())off_24C335D90;
  v187 = SHIBYTE(v279.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v279.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v526, v279.__r_.__value_.__l.__data_, v279.__r_.__value_.__l.__size_);
  else
    v526 = v279;
  v525 = off_24C335B18;
  v528 = v281;
  v527 = v161;
  v529 = v282;
  v520 = (uint64_t (**)())off_24C335D90;
  v132 = SHIBYTE(v274.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v274.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v521, v274.__r_.__value_.__l.__data_, v274.__r_.__value_.__l.__size_);
  else
    v521 = v274;
  v520 = off_24C335B18;
  v523 = v276;
  v522 = v160;
  v524 = v277;
  v516 = (uint64_t (**)())off_24C335D90;
  v186 = SHIBYTE(v270.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v270.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v517, v270.__r_.__value_.__l.__data_, v270.__r_.__value_.__l.__size_);
  else
    v517 = v270;
  v184 = v132;
  v518 = v159;
  v516 = off_24C335AF8;
  v519 = v158;
  v511 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v265.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v512, v265.__r_.__value_.__l.__data_, v265.__r_.__value_.__l.__size_);
  else
    v512 = v265;
  v513 = v266;
  v511 = &off_24C335AB8;
  v514 = v267;
  if (SHIBYTE(v268.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v515, v268.__r_.__value_.__l.__data_, v268.__r_.__value_.__l.__size_);
  else
    v515 = v268;
  v506 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v260.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v507, v260.__r_.__value_.__l.__data_, v260.__r_.__value_.__l.__size_);
  else
    v507 = v260;
  v508 = v261;
  v506 = &off_24C335AB8;
  v509 = v262;
  if (SHIBYTE(v263.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v510, v263.__r_.__value_.__l.__data_, v263.__r_.__value_.__l.__size_);
  else
    v510 = v263;
  v501 = (uint64_t (**)())off_24C335D90;
  v133 = SHIBYTE(v255.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v255.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v502, v255.__r_.__value_.__l.__data_, v255.__r_.__value_.__l.__size_);
  else
    v502 = v255;
  v501 = off_24C335B18;
  v504 = v257;
  v503 = v130;
  v505 = v258;
  v496 = (uint64_t (**)())off_24C335D90;
  v134 = SHIBYTE(v250.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v250.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v497, v250.__r_.__value_.__l.__data_, v250.__r_.__value_.__l.__size_);
  else
    v497 = v250;
  v496 = off_24C335B18;
  v499 = v252;
  v498 = v157;
  v500 = v253;
  v491 = (uint64_t (**)())off_24C335D90;
  v182 = SHIBYTE(v245.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v245.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v492, v245.__r_.__value_.__l.__data_, v245.__r_.__value_.__l.__size_);
  else
    v492 = v245;
  v491 = off_24C335B18;
  v494 = v247;
  v493 = v156;
  v495 = v248;
  v486 = (uint64_t (**)())off_24C335D90;
  v180 = SHIBYTE(v240.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v240.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v487, v240.__r_.__value_.__l.__data_, v240.__r_.__value_.__l.__size_);
  else
    v487 = v240;
  v486 = off_24C335B18;
  v489 = v242;
  v488 = v155;
  v490 = v243;
  v482 = (uint64_t (**)())off_24C335D90;
  v135 = SHIBYTE(v236.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v236.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v483, v236.__r_.__value_.__l.__data_, v236.__r_.__value_.__l.__size_);
  else
    v483 = v236;
  v484 = v154;
  v482 = off_24C335AF8;
  v485 = v153;
  v478 = (uint64_t (**)())off_24C335D90;
  v178 = SHIBYTE(v232.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v232.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v479, v232.__r_.__value_.__l.__data_, v232.__r_.__value_.__l.__size_);
  else
    v479 = v232;
  v480 = v152;
  v478 = off_24C335AF8;
  v481 = v151;
  v473 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v227.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v474, v227.__r_.__value_.__l.__data_, v227.__r_.__value_.__l.__size_);
  else
    v474 = v227;
  v176 = v135;
  v475 = v228;
  v473 = &off_24C335AB8;
  v476 = v229;
  if (SHIBYTE(v230.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v477, v230.__r_.__value_.__l.__data_, v230.__r_.__value_.__l.__size_);
  else
    v477 = v230;
  v468 = (uint64_t (**)())off_24C335D90;
  v136 = SHIBYTE(v222.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v222.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v469, v222.__r_.__value_.__l.__data_, v222.__r_.__value_.__l.__size_);
  else
    v469 = v222;
  v468 = off_24C335B18;
  v471 = v224;
  v470 = v150;
  v472 = v225;
  v463 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v217.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v464, v217.__r_.__value_.__l.__data_, v217.__r_.__value_.__l.__size_);
  else
    v464 = v217;
  v465 = v218;
  v463 = &off_24C335AB8;
  v466 = v219;
  if (SHIBYTE(v220.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v467, v220.__r_.__value_.__l.__data_, v220.__r_.__value_.__l.__size_);
  else
    v467 = v220;
  v458 = (uint64_t (**)())off_24C335D90;
  v137 = SHIBYTE(v212.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v212.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v459, v212.__r_.__value_.__l.__data_, v212.__r_.__value_.__l.__size_);
  else
    v459 = v212;
  v458 = off_24C335B18;
  v461 = v214;
  v460 = v149;
  v462 = v215;
  v453 = (uint64_t (**)())off_24C335D90;
  v173 = SHIBYTE(v207.__r_.__value_.__r.__words[2]);
  v174 = v133;
  if (SHIBYTE(v207.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v454, v207.__r_.__value_.__l.__data_, v207.__r_.__value_.__l.__size_);
  else
    v454 = v207;
  v453 = off_24C335B18;
  v456 = v209;
  v455 = v148;
  v457 = v210;
  v448 = (uint64_t (**)())off_24C335D90;
  v138 = SHIBYTE(v202.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v202.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v449, v202.__r_.__value_.__l.__data_, v202.__r_.__value_.__l.__size_);
  else
    v449 = v202;
  v448 = off_24C335B18;
  v451 = v204;
  v450 = v147;
  v452 = v205;
  v443 = (uint64_t (**)())off_24C335D90;
  v139 = SHIBYTE(v197.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v197.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v197.__r_.__value_.__l.__data_, v197.__r_.__value_.__l.__size_);
  else
    __p = v197;
  v443 = off_24C335B18;
  v446 = v199;
  v445 = v146;
  v447 = v200;
  v438 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v439, v192.__r_.__value_.__l.__data_, v192.__r_.__value_.__l.__size_);
  else
    v439 = v192;
  v440 = v193;
  v438 = &off_24C335AB8;
  v441 = v194;
  if (SHIBYTE(v195.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v442, v195.__r_.__value_.__l.__data_, v195.__r_.__value_.__l.__size_);
  else
    v442 = v195;
  mediaplatform::DatabaseColumnTuple<9ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(v190, (uint64_t)&v675, (uint64_t)&v670, (uint64_t)&v665, (uint64_t)&v660, (uint64_t)&v655, (uint64_t)&v650, (uint64_t)&v645, (uint64_t)&v640, (uint64_t)&v635, (uint64_t)&v630, (uint64_t)&v625, (uint64_t)&v620, (uint64_t)&v615, (uint64_t)&v610, (uint64_t)&v605, (uint64_t)&v600, (uint64_t)&v595, (uint64_t)&v590,
    (uint64_t)&v585,
    (uint64_t)&v580,
    (uint64_t)&v575,
    (uint64_t)&v570,
    (uint64_t)&v565,
    (uint64_t)&v560,
    (uint64_t)&v555,
    (uint64_t)&v550,
    (uint64_t)&v545,
    (uint64_t)&v540,
    (uint64_t)&v535,
    (uint64_t)&v530,
    (uint64_t)&v525,
    (uint64_t)&v520,
    (uint64_t)&v516,
    (uint64_t)&v511,
    (uint64_t)&v506,
    (uint64_t)&v501,
    (uint64_t)&v496,
    (uint64_t)&v491,
    (uint64_t)&v486,
    (uint64_t)&v482,
    (uint64_t)&v478,
    (uint64_t)&v473,
    (uint64_t)&v468,
    (uint64_t)&v463,
    (uint64_t)&v458,
    (uint64_t)&v453,
    (uint64_t)&v448,
    (uint64_t)&v443,
    (uint64_t)&v438);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v438);
  v443 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v448 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v449.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v449.__r_.__value_.__l.__data_);
  v453 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v454.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v454.__r_.__value_.__l.__data_);
  v458 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v459.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v459.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v463);
  v468 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v469.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v469.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v473);
  v478 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v479.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v479.__r_.__value_.__l.__data_);
  v482 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v483.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v483.__r_.__value_.__l.__data_);
  v486 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v487.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v487.__r_.__value_.__l.__data_);
  v491 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v492.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v492.__r_.__value_.__l.__data_);
  v496 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v497.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v497.__r_.__value_.__l.__data_);
  v501 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v502.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v502.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v506);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v511);
  v516 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v517.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v517.__r_.__value_.__l.__data_);
  v520 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v521.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v521.__r_.__value_.__l.__data_);
  v525 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v526.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v526.__r_.__value_.__l.__data_);
  v530 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v531.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v531.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v535);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v540);
  v545 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v546.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v546.__r_.__value_.__l.__data_);
  v550 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v551.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v551.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v555);
  v560 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v561.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v561.__r_.__value_.__l.__data_);
  v565 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v566.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v566.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v570);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v575);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v580);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v585);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v590);
  v595 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v596.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v596.__r_.__value_.__l.__data_);
  v600 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v601.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v601.__r_.__value_.__l.__data_);
  v605 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v606.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v606.__r_.__value_.__l.__data_);
  v610 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v611.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v611.__r_.__value_.__l.__data_);
  v615 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v616.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v616.__r_.__value_.__l.__data_);
  v620 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v621.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v621.__r_.__value_.__l.__data_);
  v625 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v626.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v626.__r_.__value_.__l.__data_);
  v630 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v631.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v631.__r_.__value_.__l.__data_);
  v635 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v636.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v636.__r_.__value_.__l.__data_);
  v640 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v641.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v641.__r_.__value_.__l.__data_);
  v645 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v646.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v646.__r_.__value_.__l.__data_);
  v650 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v651.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v651.__r_.__value_.__l.__data_);
  v655 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v656.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v656.__r_.__value_.__l.__data_);
  v660 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v661.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v661.__r_.__value_.__l.__data_);
  v665 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v666.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v666.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v670);
  v675 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v676.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v676.__r_.__value_.__l.__data_);
  *(_QWORD *)(v190 + 2576) = off_24C335D90;
  v140 = (std::string *)(v190 + 2584);
  if (SHIBYTE(v434.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v140, v434.__r_.__value_.__l.__data_, v434.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v140->__r_.__value_.__l.__data_ = *(_OWORD *)&v434.__r_.__value_.__l.__data_;
    *(_QWORD *)(v190 + 2600) = *((_QWORD *)&v434.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(v190 + 2608) = v435;
  *(_QWORD *)(v190 + 2576) = &off_24C335AB8;
  *(_BYTE *)(v190 + 2612) = v436;
  v141 = (std::string *)(v190 + 2616);
  if (SHIBYTE(v437.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v141, v437.__r_.__value_.__l.__data_, v437.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v141->__r_.__value_.__l.__data_ = *(_OWORD *)&v437.__r_.__value_.__l.__data_;
    *(_QWORD *)(v190 + 2632) = *((_QWORD *)&v437.__r_.__value_.__l + 2);
  }
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v191);
  v196 = (uint64_t (**)())off_24C335D90;
  if (v139 < 0)
    operator delete(v197.__r_.__value_.__l.__data_);
  v201 = (uint64_t (**)())off_24C335D90;
  if (v138 < 0)
    operator delete(v202.__r_.__value_.__l.__data_);
  v206 = (uint64_t (**)())off_24C335D90;
  if (v173 < 0)
    operator delete(v207.__r_.__value_.__l.__data_);
  v211 = (uint64_t (**)())off_24C335D90;
  if (v137 < 0)
    operator delete(v212.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v216);
  v221 = (uint64_t (**)())off_24C335D90;
  if (v136 < 0)
    operator delete(v222.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v226);
  v231 = (uint64_t (**)())off_24C335D90;
  if (v178 < 0)
    operator delete(v232.__r_.__value_.__l.__data_);
  v235 = (uint64_t (**)())off_24C335D90;
  if (v176 < 0)
    operator delete(v236.__r_.__value_.__l.__data_);
  v239 = (uint64_t (**)())off_24C335D90;
  if (v180 < 0)
    operator delete(v240.__r_.__value_.__l.__data_);
  v244 = (uint64_t (**)())off_24C335D90;
  if (v182 < 0)
    operator delete(v245.__r_.__value_.__l.__data_);
  v249 = (uint64_t (**)())off_24C335D90;
  if (v134 < 0)
    operator delete(v250.__r_.__value_.__l.__data_);
  v254 = (uint64_t (**)())off_24C335D90;
  if (v174 < 0)
    operator delete(v255.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v259);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v264);
  v269 = (uint64_t (**)())off_24C335D90;
  if (v186 < 0)
    operator delete(v270.__r_.__value_.__l.__data_);
  v273 = (uint64_t (**)())off_24C335D90;
  if (v184 < 0)
    operator delete(v274.__r_.__value_.__l.__data_);
  v278 = (uint64_t (**)())off_24C335D90;
  if (v187 < 0)
    operator delete(v279.__r_.__value_.__l.__data_);
  if (v189 < 0)
    operator delete(v284.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v288);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v293);
  if (v131 < 0)
    operator delete(v299.__r_.__value_.__l.__data_);
  if (SHIBYTE(v304.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v304.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v308);
  if (SHIBYTE(v314.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v314.__r_.__value_.__l.__data_);
  if (SHIBYTE(v319.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v319.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v323);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v328);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v333);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v338);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v343);
  if (SHIBYTE(v349.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v349.__r_.__value_.__l.__data_);
  if (SHIBYTE(v354.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v354.__r_.__value_.__l.__data_);
  if (SHIBYTE(v359.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v359.__r_.__value_.__l.__data_);
  if (SHIBYTE(v364.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v364.__r_.__value_.__l.__data_);
  if (SHIBYTE(v369.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v369.__r_.__value_.__l.__data_);
  if (SHIBYTE(v374.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v374.__r_.__value_.__l.__data_);
  if (SHIBYTE(v379.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v379.__r_.__value_.__l.__data_);
  if (SHIBYTE(v384.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v384.__r_.__value_.__l.__data_);
  if (SHIBYTE(v389.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v389.__r_.__value_.__l.__data_);
  if (SHIBYTE(v394.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v394.__r_.__value_.__l.__data_);
  if (SHIBYTE(v399.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v399.__r_.__value_.__l.__data_);
  if (SHIBYTE(v404.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v404.__r_.__value_.__l.__data_);
  if (SHIBYTE(v409.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v409.__r_.__value_.__l.__data_);
  if (SHIBYTE(v414.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v414.__r_.__value_.__l.__data_);
  if (SHIBYTE(v419.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v419.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v423);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__s.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v433);
  *(_QWORD *)(v190 + 2640) = off_24C335D90;
  v142 = (std::string *)(v190 + 2648);
  if (*(char *)(v164 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v142, *(const std::string::value_type **)(v164 + 8), *(_QWORD *)(v164 + 16));
  }
  else
  {
    v143 = *(_OWORD *)(v164 + 8);
    *(_QWORD *)(v190 + 2664) = *(_QWORD *)(v164 + 24);
    *(_OWORD *)&v142->__r_.__value_.__l.__data_ = v143;
  }
  result = v190;
  *(_DWORD *)(v190 + 2672) = *(_DWORD *)(v164 + 32);
  *(_QWORD *)(v190 + 2640) = off_24C335B18;
  v145 = *(_QWORD *)(v164 + 36);
  *(_DWORD *)(v190 + 2684) = *(_DWORD *)(v164 + 44);
  *(_QWORD *)(v190 + 2676) = v145;
  return result;
}

void sub_20A88C934(_Unwind_Exception *a1)
{
  mediaplatform::DatabaseColumnTuple<8ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(STACK[0x410]);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<7ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 2640) = off_24C335D90;
  if (*(char *)(a1 + 2671) < 0)
    operator delete(*(void **)(a1 + 2648));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 2576);
  *(_QWORD *)(a1 + 2528) = off_24C335D90;
  if (*(char *)(a1 + 2559) < 0)
    operator delete(*(void **)(a1 + 2536));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 2464);
  return mediaplatform::DatabaseColumnTuple<11ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<8ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 2576);
  *(_QWORD *)(a1 + 2528) = off_24C335D90;
  if (*(char *)(a1 + 2559) < 0)
    operator delete(*(void **)(a1 + 2536));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 2464);
  return mediaplatform::DatabaseColumnTuple<11ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<9ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  std::string *v135;
  std::string *v136;
  std::string *v137;
  __int128 v138;
  uint64_t v139;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  uint64_t v146;
  int v147;
  int v148;
  uint64_t v149;
  int v150;
  int v151;
  int v152;
  int v153;
  uint64_t v154;
  int v155;
  int v156;
  int v157;
  int v158;
  uint64_t v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  uint64_t v185;
  uint64_t (**v186)();
  std::string v187;
  int v188;
  char v189;
  std::string v190;
  uint64_t (**v191)();
  std::string v192;
  int v193;
  uint64_t v194;
  int v195;
  uint64_t (**v196)();
  std::string v197;
  int v198;
  uint64_t v199;
  int v200;
  uint64_t (**v201)();
  std::string v202;
  int v203;
  uint64_t v204;
  int v205;
  uint64_t (**v206)();
  std::string v207;
  int v208;
  uint64_t v209;
  int v210;
  uint64_t (**v211)();
  std::string v212;
  int v213;
  char v214;
  std::string v215;
  uint64_t (**v216)();
  std::string v217;
  int v218;
  uint64_t v219;
  int v220;
  uint64_t (**v221)();
  std::string v222;
  int v223;
  char v224;
  std::string v225;
  uint64_t (**v226)();
  std::string v227;
  int v228;
  uint64_t v229;
  uint64_t (**v230)();
  std::string v231;
  int v232;
  uint64_t v233;
  uint64_t (**v234)();
  std::string v235;
  int v236;
  uint64_t v237;
  int v238;
  uint64_t (**v239)();
  std::string v240;
  int v241;
  uint64_t v242;
  int v243;
  uint64_t (**v244)();
  std::string v245;
  int v246;
  uint64_t v247;
  int v248;
  uint64_t (**v249)();
  std::string v250;
  int v251;
  uint64_t v252;
  int v253;
  uint64_t (**v254)();
  std::string v255;
  int v256;
  char v257;
  std::string v258;
  uint64_t (**v259)();
  std::string v260;
  int v261;
  char v262;
  std::string v263;
  uint64_t (**v264)();
  std::string v265;
  int v266;
  uint64_t v267;
  uint64_t (**v268)();
  std::string v269;
  int v270;
  uint64_t v271;
  int v272;
  uint64_t (**v273)();
  std::string v274;
  int v275;
  uint64_t v276;
  int v277;
  uint64_t (**v278)();
  std::string v279;
  int v280;
  uint64_t v281;
  int v282;
  uint64_t (**v283)();
  std::string v284;
  int v285;
  char v286;
  std::string v287;
  uint64_t (**v288)();
  std::string v289;
  int v290;
  char v291;
  std::string v292;
  uint64_t (**v293)();
  std::string v294;
  int v295;
  uint64_t v296;
  int v297;
  uint64_t (**v298)();
  std::string v299;
  int v300;
  uint64_t v301;
  int v302;
  uint64_t (**v303)();
  std::string v304;
  int v305;
  char v306;
  std::string v307;
  uint64_t (**v308)();
  std::string v309;
  int v310;
  uint64_t v311;
  int v312;
  uint64_t (**v313)();
  std::string v314;
  int v315;
  uint64_t v316;
  int v317;
  uint64_t (**v318)();
  std::string v319;
  int v320;
  char v321;
  std::string v322;
  uint64_t (**v323)();
  std::string v324;
  int v325;
  char v326;
  std::string v327;
  uint64_t (**v328)();
  std::string v329;
  int v330;
  char v331;
  std::string v332;
  uint64_t (**v333)();
  std::string v334;
  int v335;
  char v336;
  std::string v337;
  uint64_t (**v338)();
  std::string v339;
  int v340;
  char v341;
  std::string v342;
  uint64_t (**v343)();
  std::string v344;
  int v345;
  uint64_t v346;
  int v347;
  uint64_t (**v348)();
  std::string v349;
  int v350;
  uint64_t v351;
  int v352;
  uint64_t (**v353)();
  std::string v354;
  int v355;
  uint64_t v356;
  int v357;
  uint64_t (**v358)();
  std::string v359;
  int v360;
  uint64_t v361;
  int v362;
  uint64_t (**v363)();
  std::string v364;
  int v365;
  uint64_t v366;
  int v367;
  uint64_t (**v368)();
  std::string v369;
  int v370;
  uint64_t v371;
  int v372;
  uint64_t (**v373)();
  std::string v374;
  int v375;
  uint64_t v376;
  int v377;
  uint64_t (**v378)();
  std::string v379;
  int v380;
  uint64_t v381;
  int v382;
  uint64_t (**v383)();
  std::string v384;
  int v385;
  uint64_t v386;
  int v387;
  uint64_t (**v388)();
  std::string v389;
  int v390;
  uint64_t v391;
  int v392;
  uint64_t (**v393)();
  std::string v394;
  int v395;
  uint64_t v396;
  int v397;
  uint64_t (**v398)();
  std::string v399;
  int v400;
  uint64_t v401;
  int v402;
  uint64_t (**v403)();
  std::string v404;
  int v405;
  uint64_t v406;
  int v407;
  uint64_t (**v408)();
  std::string v409;
  int v410;
  uint64_t v411;
  int v412;
  uint64_t (**v413)();
  std::string __s;
  int v415;
  uint64_t v416;
  int v417;
  uint64_t (**v418)();
  std::string v419;
  int v420;
  char v421;
  std::string v422;
  uint64_t (**v423)();
  std::string v424;
  int v425;
  char v426;
  std::string v427;
  uint64_t (**v428)();
  std::string __p;
  int v430;
  uint64_t v431;
  int v432;
  uint64_t (**v433)();
  std::string v434;
  int v435;
  uint64_t v436;
  int v437;
  uint64_t (**v438)();
  std::string v439;
  int v440;
  uint64_t v441;
  int v442;
  uint64_t (**v443)();
  std::string v444;
  int v445;
  uint64_t v446;
  int v447;
  uint64_t (**v448)();
  std::string v449;
  int v450;
  char v451;
  std::string v452;
  uint64_t (**v453)();
  std::string v454;
  int v455;
  uint64_t v456;
  int v457;
  uint64_t (**v458)();
  std::string v459;
  int v460;
  char v461;
  std::string v462;
  uint64_t (**v463)();
  std::string v464;
  int v465;
  uint64_t v466;
  uint64_t (**v467)();
  std::string v468;
  int v469;
  uint64_t v470;
  uint64_t (**v471)();
  std::string v472;
  int v473;
  uint64_t v474;
  int v475;
  uint64_t (**v476)();
  std::string v477;
  int v478;
  uint64_t v479;
  int v480;
  uint64_t (**v481)();
  std::string v482;
  int v483;
  uint64_t v484;
  int v485;
  uint64_t (**v486)();
  std::string v487;
  int v488;
  uint64_t v489;
  int v490;
  uint64_t (**v491)();
  std::string v492;
  int v493;
  char v494;
  std::string v495;
  uint64_t (**v496)();
  std::string v497;
  int v498;
  char v499;
  std::string v500;
  uint64_t (**v501)();
  std::string v502;
  int v503;
  uint64_t v504;
  uint64_t (**v505)();
  std::string v506;
  int v507;
  uint64_t v508;
  int v509;
  uint64_t (**v510)();
  std::string v511;
  int v512;
  uint64_t v513;
  int v514;
  uint64_t (**v515)();
  std::string v516;
  int v517;
  uint64_t v518;
  int v519;
  uint64_t (**v520)();
  std::string v521;
  int v522;
  char v523;
  std::string v524;
  uint64_t (**v525)();
  std::string v526;
  int v527;
  char v528;
  std::string v529;
  uint64_t (**v530)();
  std::string v531;
  int v532;
  uint64_t v533;
  int v534;
  uint64_t (**v535)();
  std::string v536;
  int v537;
  uint64_t v538;
  int v539;
  uint64_t (**v540)();
  std::string v541;
  int v542;
  char v543;
  std::string v544;
  uint64_t (**v545)();
  std::string v546;
  int v547;
  uint64_t v548;
  int v549;
  uint64_t (**v550)();
  std::string v551;
  int v552;
  uint64_t v553;
  int v554;
  uint64_t (**v555)();
  std::string v556;
  int v557;
  char v558;
  std::string v559;
  uint64_t (**v560)();
  std::string v561;
  int v562;
  char v563;
  std::string v564;
  uint64_t (**v565)();
  std::string v566;
  int v567;
  char v568;
  std::string v569;
  uint64_t (**v570)();
  std::string v571;
  int v572;
  char v573;
  std::string v574;
  uint64_t (**v575)();
  std::string v576;
  int v577;
  char v578;
  std::string v579;
  uint64_t (**v580)();
  std::string v581;
  int v582;
  uint64_t v583;
  int v584;
  uint64_t (**v585)();
  std::string v586;
  int v587;
  uint64_t v588;
  int v589;
  uint64_t (**v590)();
  std::string v591;
  int v592;
  uint64_t v593;
  int v594;
  uint64_t (**v595)();
  std::string v596;
  int v597;
  uint64_t v598;
  int v599;
  uint64_t (**v600)();
  std::string v601;
  int v602;
  uint64_t v603;
  int v604;
  uint64_t (**v605)();
  std::string v606;
  int v607;
  uint64_t v608;
  int v609;
  uint64_t (**v610)();
  std::string v611;
  int v612;
  uint64_t v613;
  int v614;
  uint64_t (**v615)();
  std::string v616;
  int v617;
  uint64_t v618;
  int v619;
  uint64_t (**v620)();
  std::string v621;
  int v622;
  uint64_t v623;
  int v624;
  uint64_t (**v625)();
  std::string v626;
  int v627;
  uint64_t v628;
  int v629;
  uint64_t (**v630)();
  std::string v631;
  int v632;
  uint64_t v633;
  int v634;
  uint64_t (**v635)();
  std::string v636;
  int v637;
  uint64_t v638;
  int v639;
  uint64_t (**v640)();
  std::string v641;
  int v642;
  uint64_t v643;
  int v644;
  uint64_t (**v645)();
  std::string v646;
  int v647;
  uint64_t v648;
  int v649;
  uint64_t (**v650)();
  std::string v651;
  int v652;
  uint64_t v653;
  int v654;

  v50 = MEMORY[0x24BDAC7A8](a1);
  v53 = v52;
  v55 = v54;
  v57 = v56;
  v59 = v58;
  v61 = v60;
  v62 = v51;
  v159 = v63;
  v185 = v50;
  v418 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v51 + 31) < 0)
    std::string::__init_copy_ctor_external(&v419, *(const std::string::value_type **)(v51 + 8), *(_QWORD *)(v51 + 16));
  else
    v419 = *(std::string *)(v51 + 8);
  v420 = *(_DWORD *)(v62 + 32);
  v418 = &off_24C335AB8;
  v421 = *(_BYTE *)(v62 + 36);
  if (*(char *)(v62 + 63) < 0)
    std::string::__init_copy_ctor_external(&v422, *(const std::string::value_type **)(v62 + 40), *(_QWORD *)(v62 + 48));
  else
    v422 = *(std::string *)(v62 + 40);
  if (*(char *)(v61 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(v61 + 8), *(_QWORD *)(v61 + 16));
  else
    __s = *(std::string *)(v61 + 8);
  v64 = *(_DWORD *)(v61 + 32);
  v413 = off_24C335B18;
  v416 = *(_QWORD *)(v61 + 36);
  v65 = *(_DWORD *)(v61 + 44);
  v183 = v64;
  v415 = v64;
  v417 = v65;
  if (*(char *)(v59 + 31) < 0)
    std::string::__init_copy_ctor_external(&v409, *(const std::string::value_type **)(v59 + 8), *(_QWORD *)(v59 + 16));
  else
    v409 = *(std::string *)(v59 + 8);
  v66 = *(_DWORD *)(v59 + 32);
  v408 = off_24C335B18;
  v411 = *(_QWORD *)(v59 + 36);
  v67 = *(_DWORD *)(v59 + 44);
  v180 = v66;
  v410 = v66;
  v412 = v67;
  if (*(char *)(v57 + 31) < 0)
    std::string::__init_copy_ctor_external(&v404, *(const std::string::value_type **)(v57 + 8), *(_QWORD *)(v57 + 16));
  else
    v404 = *(std::string *)(v57 + 8);
  v68 = *(_DWORD *)(v57 + 32);
  v403 = off_24C335B18;
  v406 = *(_QWORD *)(v57 + 36);
  v69 = *(_DWORD *)(v57 + 44);
  v405 = v68;
  v407 = v69;
  if (*(char *)(v55 + 31) < 0)
    std::string::__init_copy_ctor_external(&v399, *(const std::string::value_type **)(v55 + 8), *(_QWORD *)(v55 + 16));
  else
    v399 = *(std::string *)(v55 + 8);
  v70 = *(_DWORD *)(v55 + 32);
  v398 = off_24C335B18;
  v401 = *(_QWORD *)(v55 + 36);
  v71 = *(_DWORD *)(v55 + 44);
  v400 = v70;
  v402 = v71;
  v176 = v68;
  if (*(char *)(v53 + 31) < 0)
    std::string::__init_copy_ctor_external(&v394, *(const std::string::value_type **)(v53 + 8), *(_QWORD *)(v53 + 16));
  else
    v394 = *(std::string *)(v53 + 8);
  v72 = *(_DWORD *)(v53 + 32);
  v393 = off_24C335B18;
  v396 = *(_QWORD *)(v53 + 36);
  v73 = *(_DWORD *)(v53 + 44);
  v173 = v72;
  v395 = v72;
  v397 = v73;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v389, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v389 = *(std::string *)(a9 + 8);
  v74 = *(_DWORD *)(a9 + 32);
  v388 = off_24C335B18;
  v391 = *(_QWORD *)(a9 + 36);
  v75 = *(_DWORD *)(a9 + 44);
  v390 = v74;
  v392 = v75;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v384, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v384 = *(std::string *)(a10 + 8);
  v76 = *(_DWORD *)(a10 + 32);
  v383 = off_24C335B18;
  v386 = *(_QWORD *)(a10 + 36);
  v77 = *(_DWORD *)(a10 + 44);
  v385 = v76;
  v387 = v77;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v379, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v379 = *(std::string *)(a11 + 8);
  v78 = *(_DWORD *)(a11 + 32);
  v378 = off_24C335B18;
  v381 = *(_QWORD *)(a11 + 36);
  v79 = *(_DWORD *)(a11 + 44);
  v172 = v78;
  v380 = v78;
  v382 = v79;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v374, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v374 = *(std::string *)(a12 + 8);
  v80 = *(_DWORD *)(a12 + 32);
  v373 = off_24C335B18;
  v376 = *(_QWORD *)(a12 + 36);
  v81 = *(_DWORD *)(a12 + 44);
  v170 = v80;
  v375 = v80;
  v377 = v81;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v369, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v369 = *(std::string *)(a13 + 8);
  v82 = *(_DWORD *)(a13 + 32);
  v368 = off_24C335B18;
  v371 = *(_QWORD *)(a13 + 36);
  v83 = *(_DWORD *)(a13 + 44);
  v168 = v82;
  v370 = v82;
  v372 = v83;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v364, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v364 = *(std::string *)(a14 + 8);
  v84 = *(_DWORD *)(a14 + 32);
  v363 = off_24C335B18;
  v366 = *(_QWORD *)(a14 + 36);
  v85 = *(_DWORD *)(a14 + 44);
  v365 = v84;
  v367 = v85;
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v359, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v359 = *(std::string *)(a15 + 8);
  v86 = *(_DWORD *)(a15 + 32);
  v358 = off_24C335B18;
  v361 = *(_QWORD *)(a15 + 36);
  v87 = *(_DWORD *)(a15 + 44);
  v167 = v86;
  v360 = v86;
  v362 = v87;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v354, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v354 = *(std::string *)(a16 + 8);
  v88 = *(_DWORD *)(a16 + 32);
  v353 = off_24C335B18;
  v356 = *(_QWORD *)(a16 + 36);
  v89 = *(_DWORD *)(a16 + 44);
  v166 = v88;
  v355 = v88;
  v357 = v89;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v349, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v349 = *(std::string *)(a17 + 8);
  v90 = *(_DWORD *)(a17 + 32);
  v348 = off_24C335B18;
  v351 = *(_QWORD *)(a17 + 36);
  v91 = *(_DWORD *)(a17 + 44);
  v165 = v90;
  v350 = v90;
  v352 = v91;
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v344, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v344 = *(std::string *)(a18 + 8);
  v92 = *(_DWORD *)(a18 + 32);
  v343 = off_24C335B18;
  v346 = *(_QWORD *)(a18 + 36);
  v93 = *(_DWORD *)(a18 + 44);
  v164 = v92;
  v345 = v92;
  v347 = v93;
  v338 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v339, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v339 = *(std::string *)(a19 + 8);
  v340 = *(_DWORD *)(a19 + 32);
  v338 = &off_24C335AB8;
  v341 = *(_BYTE *)(a19 + 36);
  if (*(char *)(a19 + 63) < 0)
    std::string::__init_copy_ctor_external(&v342, *(const std::string::value_type **)(a19 + 40), *(_QWORD *)(a19 + 48));
  else
    v342 = *(std::string *)(a19 + 40);
  v333 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v334, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v334 = *(std::string *)(a20 + 8);
  v335 = *(_DWORD *)(a20 + 32);
  v333 = &off_24C335AB8;
  v336 = *(_BYTE *)(a20 + 36);
  if (*(char *)(a20 + 63) < 0)
    std::string::__init_copy_ctor_external(&v337, *(const std::string::value_type **)(a20 + 40), *(_QWORD *)(a20 + 48));
  else
    v337 = *(std::string *)(a20 + 40);
  v328 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v329, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v329 = *(std::string *)(a21 + 8);
  v330 = *(_DWORD *)(a21 + 32);
  v328 = &off_24C335AB8;
  v331 = *(_BYTE *)(a21 + 36);
  if (*(char *)(a21 + 63) < 0)
    std::string::__init_copy_ctor_external(&v332, *(const std::string::value_type **)(a21 + 40), *(_QWORD *)(a21 + 48));
  else
    v332 = *(std::string *)(a21 + 40);
  v323 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v324, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v324 = *(std::string *)(a22 + 8);
  v325 = *(_DWORD *)(a22 + 32);
  v323 = &off_24C335AB8;
  v326 = *(_BYTE *)(a22 + 36);
  if (*(char *)(a22 + 63) < 0)
    std::string::__init_copy_ctor_external(&v327, *(const std::string::value_type **)(a22 + 40), *(_QWORD *)(a22 + 48));
  else
    v327 = *(std::string *)(a22 + 40);
  v318 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v319, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v319 = *(std::string *)(a23 + 8);
  v320 = *(_DWORD *)(a23 + 32);
  v318 = &off_24C335AB8;
  v321 = *(_BYTE *)(a23 + 36);
  if (*(char *)(a23 + 63) < 0)
    std::string::__init_copy_ctor_external(&v322, *(const std::string::value_type **)(a23 + 40), *(_QWORD *)(a23 + 48));
  else
    v322 = *(std::string *)(a23 + 40);
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v314, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v314 = *(std::string *)(a24 + 8);
  v94 = *(_DWORD *)(a24 + 32);
  v313 = off_24C335B18;
  v316 = *(_QWORD *)(a24 + 36);
  v95 = *(_DWORD *)(a24 + 44);
  v163 = v94;
  v315 = v94;
  v317 = v95;
  if (*(char *)(a25 + 31) < 0)
    std::string::__init_copy_ctor_external(&v309, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  else
    v309 = *(std::string *)(a25 + 8);
  v96 = *(_DWORD *)(a25 + 32);
  v308 = off_24C335B18;
  v311 = *(_QWORD *)(a25 + 36);
  v97 = *(_DWORD *)(a25 + 44);
  v162 = v96;
  v310 = v96;
  v312 = v97;
  v303 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v304, *(const std::string::value_type **)(a26 + 8), *(_QWORD *)(a26 + 16));
  else
    v304 = *(std::string *)(a26 + 8);
  v305 = *(_DWORD *)(a26 + 32);
  v303 = &off_24C335AB8;
  v306 = *(_BYTE *)(a26 + 36);
  if (*(char *)(a26 + 63) < 0)
    std::string::__init_copy_ctor_external(&v307, *(const std::string::value_type **)(a26 + 40), *(_QWORD *)(a26 + 48));
  else
    v307 = *(std::string *)(a26 + 40);
  if (*(char *)(a27 + 31) < 0)
    std::string::__init_copy_ctor_external(&v299, *(const std::string::value_type **)(a27 + 8), *(_QWORD *)(a27 + 16));
  else
    v299 = *(std::string *)(a27 + 8);
  v98 = *(_DWORD *)(a27 + 32);
  v298 = off_24C335B18;
  v301 = *(_QWORD *)(a27 + 36);
  v99 = *(_DWORD *)(a27 + 44);
  v161 = v98;
  v300 = v98;
  v302 = v99;
  if (*(char *)(a28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v294, *(const std::string::value_type **)(a28 + 8), *(_QWORD *)(a28 + 16));
  else
    v294 = *(std::string *)(a28 + 8);
  v100 = *(_DWORD *)(a28 + 32);
  v293 = off_24C335B18;
  v296 = *(_QWORD *)(a28 + 36);
  v101 = *(_DWORD *)(a28 + 44);
  v160 = v100;
  v295 = v100;
  v297 = v101;
  v288 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a29 + 31) < 0)
    std::string::__init_copy_ctor_external(&v289, *(const std::string::value_type **)(a29 + 8), *(_QWORD *)(a29 + 16));
  else
    v289 = *(std::string *)(a29 + 8);
  v290 = *(_DWORD *)(a29 + 32);
  v288 = &off_24C335AB8;
  v291 = *(_BYTE *)(a29 + 36);
  if (*(char *)(a29 + 63) < 0)
    std::string::__init_copy_ctor_external(&v292, *(const std::string::value_type **)(a29 + 40), *(_QWORD *)(a29 + 48));
  else
    v292 = *(std::string *)(a29 + 40);
  v283 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v284, *(const std::string::value_type **)(a30 + 8), *(_QWORD *)(a30 + 16));
  else
    v284 = *(std::string *)(a30 + 8);
  v285 = *(_DWORD *)(a30 + 32);
  v283 = &off_24C335AB8;
  v286 = *(_BYTE *)(a30 + 36);
  if (*(char *)(a30 + 63) < 0)
    std::string::__init_copy_ctor_external(&v287, *(const std::string::value_type **)(a30 + 40), *(_QWORD *)(a30 + 48));
  else
    v287 = *(std::string *)(a30 + 40);
  if (*(char *)(a31 + 31) < 0)
    std::string::__init_copy_ctor_external(&v279, *(const std::string::value_type **)(a31 + 8), *(_QWORD *)(a31 + 16));
  else
    v279 = *(std::string *)(a31 + 8);
  v102 = *(_DWORD *)(a31 + 32);
  v278 = off_24C335B18;
  v281 = *(_QWORD *)(a31 + 36);
  v103 = *(_DWORD *)(a31 + 44);
  v158 = v102;
  v280 = v102;
  v282 = v103;
  if (*(char *)(a32 + 31) < 0)
    std::string::__init_copy_ctor_external(&v274, *(const std::string::value_type **)(a32 + 8), *(_QWORD *)(a32 + 16));
  else
    v274 = *(std::string *)(a32 + 8);
  v104 = *(_DWORD *)(a32 + 32);
  v273 = off_24C335B18;
  v276 = *(_QWORD *)(a32 + 36);
  v105 = *(_DWORD *)(a32 + 44);
  v157 = v104;
  v275 = v104;
  v277 = v105;
  if (*(char *)(a33 + 31) < 0)
    std::string::__init_copy_ctor_external(&v269, *(const std::string::value_type **)(a33 + 8), *(_QWORD *)(a33 + 16));
  else
    v269 = *(std::string *)(a33 + 8);
  v106 = *(_DWORD *)(a33 + 32);
  v268 = off_24C335B18;
  v271 = *(_QWORD *)(a33 + 36);
  v107 = *(_DWORD *)(a33 + 44);
  v156 = v106;
  v270 = v106;
  v272 = v107;
  if (*(char *)(a34 + 31) < 0)
    std::string::__init_copy_ctor_external(&v265, *(const std::string::value_type **)(a34 + 8), *(_QWORD *)(a34 + 16));
  else
    v265 = *(std::string *)(a34 + 8);
  v155 = *(_DWORD *)(a34 + 32);
  v266 = v155;
  v264 = off_24C335AF8;
  v154 = *(_QWORD *)(a34 + 36);
  v267 = v154;
  v259 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a35 + 31) < 0)
    std::string::__init_copy_ctor_external(&v260, *(const std::string::value_type **)(a35 + 8), *(_QWORD *)(a35 + 16));
  else
    v260 = *(std::string *)(a35 + 8);
  v261 = *(_DWORD *)(a35 + 32);
  v259 = &off_24C335AB8;
  v262 = *(_BYTE *)(a35 + 36);
  if (*(char *)(a35 + 63) < 0)
    std::string::__init_copy_ctor_external(&v263, *(const std::string::value_type **)(a35 + 40), *(_QWORD *)(a35 + 48));
  else
    v263 = *(std::string *)(a35 + 40);
  v254 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a36 + 31) < 0)
    std::string::__init_copy_ctor_external(&v255, *(const std::string::value_type **)(a36 + 8), *(_QWORD *)(a36 + 16));
  else
    v255 = *(std::string *)(a36 + 8);
  v256 = *(_DWORD *)(a36 + 32);
  v254 = &off_24C335AB8;
  v257 = *(_BYTE *)(a36 + 36);
  if (*(char *)(a36 + 63) < 0)
    std::string::__init_copy_ctor_external(&v258, *(const std::string::value_type **)(a36 + 40), *(_QWORD *)(a36 + 48));
  else
    v258 = *(std::string *)(a36 + 40);
  if (*(char *)(a37 + 31) < 0)
    std::string::__init_copy_ctor_external(&v250, *(const std::string::value_type **)(a37 + 8), *(_QWORD *)(a37 + 16));
  else
    v250 = *(std::string *)(a37 + 8);
  v108 = *(_DWORD *)(a37 + 32);
  v249 = off_24C335B18;
  v252 = *(_QWORD *)(a37 + 36);
  v109 = *(_DWORD *)(a37 + 44);
  v153 = v108;
  v251 = v108;
  v253 = v109;
  v244 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a38 + 31) < 0)
    std::string::__init_copy_ctor_external(&v245, *(const std::string::value_type **)(a38 + 8), *(_QWORD *)(a38 + 16));
  else
    v245 = *(std::string *)(a38 + 8);
  v110 = *(_DWORD *)(a38 + 32);
  v244 = off_24C335B18;
  v247 = *(_QWORD *)(a38 + 36);
  v111 = *(_DWORD *)(a38 + 44);
  v246 = v110;
  v248 = v111;
  v239 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a39 + 31) < 0)
    std::string::__init_copy_ctor_external(&v240, *(const std::string::value_type **)(a39 + 8), *(_QWORD *)(a39 + 16));
  else
    v240 = *(std::string *)(a39 + 8);
  v152 = v110;
  v112 = *(_DWORD *)(a39 + 32);
  v239 = off_24C335B18;
  v242 = *(_QWORD *)(a39 + 36);
  v113 = *(_DWORD *)(a39 + 44);
  v151 = v112;
  v241 = v112;
  v243 = v113;
  v234 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a40 + 31) < 0)
    std::string::__init_copy_ctor_external(&v235, *(const std::string::value_type **)(a40 + 8), *(_QWORD *)(a40 + 16));
  else
    v235 = *(std::string *)(a40 + 8);
  v114 = *(_DWORD *)(a40 + 32);
  v234 = off_24C335B18;
  v237 = *(_QWORD *)(a40 + 36);
  v115 = *(_DWORD *)(a40 + 44);
  v150 = v114;
  v236 = v114;
  v238 = v115;
  v230 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a41 + 31) < 0)
    std::string::__init_copy_ctor_external(&v231, *(const std::string::value_type **)(a41 + 8), *(_QWORD *)(a41 + 16));
  else
    v231 = *(std::string *)(a41 + 8);
  v116 = *(_DWORD *)(a41 + 32);
  v232 = v116;
  v230 = off_24C335AF8;
  v149 = *(_QWORD *)(a41 + 36);
  v233 = v149;
  v226 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a42 + 31) < 0)
    std::string::__init_copy_ctor_external(&v227, *(const std::string::value_type **)(a42 + 8), *(_QWORD *)(a42 + 16));
  else
    v227 = *(std::string *)(a42 + 8);
  v147 = *(_DWORD *)(a42 + 32);
  v228 = v147;
  v226 = off_24C335AF8;
  v146 = *(_QWORD *)(a42 + 36);
  v229 = v146;
  v221 = (uint64_t (**)())off_24C335D90;
  v148 = v116;
  if (*(char *)(a43 + 31) < 0)
    std::string::__init_copy_ctor_external(&v222, *(const std::string::value_type **)(a43 + 8), *(_QWORD *)(a43 + 16));
  else
    v222 = *(std::string *)(a43 + 8);
  v223 = *(_DWORD *)(a43 + 32);
  v221 = &off_24C335AB8;
  v224 = *(_BYTE *)(a43 + 36);
  if (*(char *)(a43 + 63) < 0)
    std::string::__init_copy_ctor_external(&v225, *(const std::string::value_type **)(a43 + 40), *(_QWORD *)(a43 + 48));
  else
    v225 = *(std::string *)(a43 + 40);
  v216 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a44 + 31) < 0)
    std::string::__init_copy_ctor_external(&v217, *(const std::string::value_type **)(a44 + 8), *(_QWORD *)(a44 + 16));
  else
    v217 = *(std::string *)(a44 + 8);
  v117 = *(_DWORD *)(a44 + 32);
  v216 = off_24C335B18;
  v219 = *(_QWORD *)(a44 + 36);
  v118 = *(_DWORD *)(a44 + 44);
  v145 = v117;
  v218 = v117;
  v220 = v118;
  v211 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a45 + 31) < 0)
    std::string::__init_copy_ctor_external(&v212, *(const std::string::value_type **)(a45 + 8), *(_QWORD *)(a45 + 16));
  else
    v212 = *(std::string *)(a45 + 8);
  v213 = *(_DWORD *)(a45 + 32);
  v211 = &off_24C335AB8;
  v214 = *(_BYTE *)(a45 + 36);
  if (*(char *)(a45 + 63) < 0)
    std::string::__init_copy_ctor_external(&v215, *(const std::string::value_type **)(a45 + 40), *(_QWORD *)(a45 + 48));
  else
    v215 = *(std::string *)(a45 + 40);
  v206 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a46 + 31) < 0)
    std::string::__init_copy_ctor_external(&v207, *(const std::string::value_type **)(a46 + 8), *(_QWORD *)(a46 + 16));
  else
    v207 = *(std::string *)(a46 + 8);
  v119 = *(_DWORD *)(a46 + 32);
  v206 = off_24C335B18;
  v209 = *(_QWORD *)(a46 + 36);
  v120 = *(_DWORD *)(a46 + 44);
  v144 = v119;
  v208 = v119;
  v210 = v120;
  v201 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a47 + 31) < 0)
    std::string::__init_copy_ctor_external(&v202, *(const std::string::value_type **)(a47 + 8), *(_QWORD *)(a47 + 16));
  else
    v202 = *(std::string *)(a47 + 8);
  v121 = *(_DWORD *)(a47 + 32);
  v201 = off_24C335B18;
  v204 = *(_QWORD *)(a47 + 36);
  v122 = *(_DWORD *)(a47 + 44);
  v143 = v121;
  v203 = v121;
  v205 = v122;
  v196 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a48 + 31) < 0)
    std::string::__init_copy_ctor_external(&v197, *(const std::string::value_type **)(a48 + 8), *(_QWORD *)(a48 + 16));
  else
    v197 = *(std::string *)(a48 + 8);
  v123 = *(_DWORD *)(a48 + 32);
  v196 = off_24C335B18;
  v199 = *(_QWORD *)(a48 + 36);
  v124 = *(_DWORD *)(a48 + 44);
  v142 = v123;
  v198 = v123;
  v200 = v124;
  v191 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a49 + 31) < 0)
    std::string::__init_copy_ctor_external(&v192, *(const std::string::value_type **)(a49 + 8), *(_QWORD *)(a49 + 16));
  else
    v192 = *(std::string *)(a49 + 8);
  v141 = *(_DWORD *)(a49 + 32);
  v193 = v141;
  v191 = off_24C335B18;
  v194 = *(_QWORD *)(a49 + 36);
  v195 = *(_DWORD *)(a49 + 44);
  v186 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a50 + 31) < 0)
    std::string::__init_copy_ctor_external(&v187, *(const std::string::value_type **)(a50 + 8), *(_QWORD *)(a50 + 16));
  else
    v187 = *(std::string *)(a50 + 8);
  v188 = *(_DWORD *)(a50 + 32);
  v186 = &off_24C335AB8;
  v189 = *(_BYTE *)(a50 + 36);
  if (*(char *)(a50 + 63) < 0)
    std::string::__init_copy_ctor_external(&v190, *(const std::string::value_type **)(a50 + 40), *(_QWORD *)(a50 + 48));
  else
    v190 = *(std::string *)(a50 + 40);
  v650 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v651, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v651 = __s;
  v650 = off_24C335B18;
  v653 = v416;
  v652 = v183;
  v654 = v417;
  v645 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v409.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v646, v409.__r_.__value_.__l.__data_, v409.__r_.__value_.__l.__size_);
  else
    v646 = v409;
  v645 = off_24C335B18;
  v648 = v411;
  v647 = v180;
  v649 = v412;
  v640 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v404.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v641, v404.__r_.__value_.__l.__data_, v404.__r_.__value_.__l.__size_);
  else
    v641 = v404;
  v640 = off_24C335B18;
  v643 = v406;
  v642 = v176;
  v644 = v407;
  v635 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v399.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v636, v399.__r_.__value_.__l.__data_, v399.__r_.__value_.__l.__size_);
  else
    v636 = v399;
  v635 = off_24C335B18;
  v638 = v401;
  v637 = v70;
  v639 = v402;
  v630 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v394.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v631, v394.__r_.__value_.__l.__data_, v394.__r_.__value_.__l.__size_);
  else
    v631 = v394;
  v630 = off_24C335B18;
  v633 = v396;
  v632 = v173;
  v634 = v397;
  v625 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v389.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v626, v389.__r_.__value_.__l.__data_, v389.__r_.__value_.__l.__size_);
  else
    v626 = v389;
  v625 = off_24C335B18;
  v628 = v391;
  v627 = v74;
  v629 = v392;
  v620 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v384.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v621, v384.__r_.__value_.__l.__data_, v384.__r_.__value_.__l.__size_);
  else
    v621 = v384;
  v620 = off_24C335B18;
  v623 = v386;
  v622 = v76;
  v624 = v387;
  v615 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v379.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v616, v379.__r_.__value_.__l.__data_, v379.__r_.__value_.__l.__size_);
  else
    v616 = v379;
  v615 = off_24C335B18;
  v618 = v381;
  v617 = v172;
  v619 = v382;
  v610 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v374.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v611, v374.__r_.__value_.__l.__data_, v374.__r_.__value_.__l.__size_);
  else
    v611 = v374;
  v610 = off_24C335B18;
  v613 = v376;
  v612 = v170;
  v614 = v377;
  v605 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v369.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v606, v369.__r_.__value_.__l.__data_, v369.__r_.__value_.__l.__size_);
  else
    v606 = v369;
  v605 = off_24C335B18;
  v608 = v371;
  v607 = v168;
  v609 = v372;
  v600 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v364.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v601, v364.__r_.__value_.__l.__data_, v364.__r_.__value_.__l.__size_);
  else
    v601 = v364;
  v600 = off_24C335B18;
  v603 = v366;
  v602 = v84;
  v604 = v367;
  v595 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v359.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v596, v359.__r_.__value_.__l.__data_, v359.__r_.__value_.__l.__size_);
  else
    v596 = v359;
  v595 = off_24C335B18;
  v598 = v361;
  v597 = v167;
  v599 = v362;
  v590 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v354.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v591, v354.__r_.__value_.__l.__data_, v354.__r_.__value_.__l.__size_);
  else
    v591 = v354;
  v590 = off_24C335B18;
  v593 = v356;
  v592 = v166;
  v594 = v357;
  v585 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v349.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v586, v349.__r_.__value_.__l.__data_, v349.__r_.__value_.__l.__size_);
  else
    v586 = v349;
  v585 = off_24C335B18;
  v588 = v351;
  v587 = v165;
  v589 = v352;
  v580 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v344.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v581, v344.__r_.__value_.__l.__data_, v344.__r_.__value_.__l.__size_);
  else
    v581 = v344;
  v580 = off_24C335B18;
  v583 = v346;
  v582 = v164;
  v584 = v347;
  v575 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v339.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v576, v339.__r_.__value_.__l.__data_, v339.__r_.__value_.__l.__size_);
  else
    v576 = v339;
  v577 = v340;
  v575 = &off_24C335AB8;
  v578 = v341;
  if (SHIBYTE(v342.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v579, v342.__r_.__value_.__l.__data_, v342.__r_.__value_.__l.__size_);
  else
    v579 = v342;
  v570 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v334.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v571, v334.__r_.__value_.__l.__data_, v334.__r_.__value_.__l.__size_);
  else
    v571 = v334;
  v572 = v335;
  v570 = &off_24C335AB8;
  v573 = v336;
  if (SHIBYTE(v337.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v574, v337.__r_.__value_.__l.__data_, v337.__r_.__value_.__l.__size_);
  else
    v574 = v337;
  v565 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v329.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v566, v329.__r_.__value_.__l.__data_, v329.__r_.__value_.__l.__size_);
  else
    v566 = v329;
  v567 = v330;
  v565 = &off_24C335AB8;
  v568 = v331;
  if (SHIBYTE(v332.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v569, v332.__r_.__value_.__l.__data_, v332.__r_.__value_.__l.__size_);
  else
    v569 = v332;
  v560 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v324.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v561, v324.__r_.__value_.__l.__data_, v324.__r_.__value_.__l.__size_);
  else
    v561 = v324;
  v562 = v325;
  v560 = &off_24C335AB8;
  v563 = v326;
  if (SHIBYTE(v327.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v564, v327.__r_.__value_.__l.__data_, v327.__r_.__value_.__l.__size_);
  else
    v564 = v327;
  v555 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v319.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v556, v319.__r_.__value_.__l.__data_, v319.__r_.__value_.__l.__size_);
  else
    v556 = v319;
  v557 = v320;
  v555 = &off_24C335AB8;
  v558 = v321;
  if (SHIBYTE(v322.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v559, v322.__r_.__value_.__l.__data_, v322.__r_.__value_.__l.__size_);
  else
    v559 = v322;
  v550 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v314.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v551, v314.__r_.__value_.__l.__data_, v314.__r_.__value_.__l.__size_);
  else
    v551 = v314;
  v550 = off_24C335B18;
  v553 = v316;
  v552 = v163;
  v554 = v317;
  v545 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v309.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v546, v309.__r_.__value_.__l.__data_, v309.__r_.__value_.__l.__size_);
  else
    v546 = v309;
  v545 = off_24C335B18;
  v548 = v311;
  v547 = v162;
  v549 = v312;
  v540 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v304.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v541, v304.__r_.__value_.__l.__data_, v304.__r_.__value_.__l.__size_);
  else
    v541 = v304;
  v542 = v305;
  v540 = &off_24C335AB8;
  v543 = v306;
  if (SHIBYTE(v307.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v544, v307.__r_.__value_.__l.__data_, v307.__r_.__value_.__l.__size_);
  else
    v544 = v307;
  v535 = (uint64_t (**)())off_24C335D90;
  v125 = SHIBYTE(v299.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v299.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v536, v299.__r_.__value_.__l.__data_, v299.__r_.__value_.__l.__size_);
  else
    v536 = v299;
  v535 = off_24C335B18;
  v538 = v301;
  v537 = v161;
  v539 = v302;
  v530 = (uint64_t (**)())off_24C335D90;
  v126 = SHIBYTE(v294.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v294.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v531, v294.__r_.__value_.__l.__data_, v294.__r_.__value_.__l.__size_);
  else
    v531 = v294;
  v530 = off_24C335B18;
  v533 = v296;
  v532 = v160;
  v534 = v297;
  v525 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v289.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v526, v289.__r_.__value_.__l.__data_, v289.__r_.__value_.__l.__size_);
  else
    v526 = v289;
  v527 = v290;
  v525 = &off_24C335AB8;
  v528 = v291;
  if (SHIBYTE(v292.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v529, v292.__r_.__value_.__l.__data_, v292.__r_.__value_.__l.__size_);
  else
    v529 = v292;
  v520 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v284.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v521, v284.__r_.__value_.__l.__data_, v284.__r_.__value_.__l.__size_);
  else
    v521 = v284;
  v522 = v285;
  v520 = &off_24C335AB8;
  v523 = v286;
  if (SHIBYTE(v287.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v524, v287.__r_.__value_.__l.__data_, v287.__r_.__value_.__l.__size_);
  else
    v524 = v287;
  v515 = (uint64_t (**)())off_24C335D90;
  v127 = SHIBYTE(v279.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v279.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v516, v279.__r_.__value_.__l.__data_, v279.__r_.__value_.__l.__size_);
  else
    v516 = v279;
  v515 = off_24C335B18;
  v518 = v281;
  v517 = v158;
  v519 = v282;
  v510 = (uint64_t (**)())off_24C335D90;
  v184 = SHIBYTE(v274.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v274.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v511, v274.__r_.__value_.__l.__data_, v274.__r_.__value_.__l.__size_);
  else
    v511 = v274;
  v510 = off_24C335B18;
  v513 = v276;
  v512 = v157;
  v514 = v277;
  v505 = (uint64_t (**)())off_24C335D90;
  v182 = SHIBYTE(v269.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v269.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v506, v269.__r_.__value_.__l.__data_, v269.__r_.__value_.__l.__size_);
  else
    v506 = v269;
  v505 = off_24C335B18;
  v508 = v271;
  v507 = v156;
  v509 = v272;
  v501 = (uint64_t (**)())off_24C335D90;
  v128 = SHIBYTE(v265.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v265.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v502, v265.__r_.__value_.__l.__data_, v265.__r_.__value_.__l.__size_);
  else
    v502 = v265;
  v179 = v128;
  v181 = v127;
  v503 = v155;
  v501 = off_24C335AF8;
  v504 = v154;
  v496 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v260.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v497, v260.__r_.__value_.__l.__data_, v260.__r_.__value_.__l.__size_);
  else
    v497 = v260;
  v498 = v261;
  v496 = &off_24C335AB8;
  v499 = v262;
  if (SHIBYTE(v263.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v500, v263.__r_.__value_.__l.__data_, v263.__r_.__value_.__l.__size_);
  else
    v500 = v263;
  v491 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v255.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v492, v255.__r_.__value_.__l.__data_, v255.__r_.__value_.__l.__size_);
  else
    v492 = v255;
  v493 = v256;
  v491 = &off_24C335AB8;
  v494 = v257;
  if (SHIBYTE(v258.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v495, v258.__r_.__value_.__l.__data_, v258.__r_.__value_.__l.__size_);
  else
    v495 = v258;
  v486 = (uint64_t (**)())off_24C335D90;
  v129 = SHIBYTE(v250.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v250.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v487, v250.__r_.__value_.__l.__data_, v250.__r_.__value_.__l.__size_);
  else
    v487 = v250;
  v486 = off_24C335B18;
  v489 = v252;
  v488 = v153;
  v490 = v253;
  v481 = (uint64_t (**)())off_24C335D90;
  v130 = SHIBYTE(v245.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v245.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v482, v245.__r_.__value_.__l.__data_, v245.__r_.__value_.__l.__size_);
  else
    v482 = v245;
  v481 = off_24C335B18;
  v484 = v247;
  v483 = v152;
  v485 = v248;
  v476 = (uint64_t (**)())off_24C335D90;
  v178 = SHIBYTE(v240.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v240.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v477, v240.__r_.__value_.__l.__data_, v240.__r_.__value_.__l.__size_);
  else
    v477 = v240;
  v476 = off_24C335B18;
  v479 = v242;
  v478 = v151;
  v480 = v243;
  v471 = (uint64_t (**)())off_24C335D90;
  v177 = SHIBYTE(v235.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v235.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v472, v235.__r_.__value_.__l.__data_, v235.__r_.__value_.__l.__size_);
  else
    v472 = v235;
  v471 = off_24C335B18;
  v474 = v237;
  v473 = v150;
  v475 = v238;
  v467 = (uint64_t (**)())off_24C335D90;
  v175 = SHIBYTE(v231.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v231.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v468, v231.__r_.__value_.__l.__data_, v231.__r_.__value_.__l.__size_);
  else
    v468 = v231;
  v469 = v148;
  v467 = off_24C335AF8;
  v470 = v149;
  v463 = (uint64_t (**)())off_24C335D90;
  v174 = SHIBYTE(v227.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v227.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v464, v227.__r_.__value_.__l.__data_, v227.__r_.__value_.__l.__size_);
  else
    v464 = v227;
  v465 = v147;
  v463 = off_24C335AF8;
  v466 = v146;
  v458 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v222.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v459, v222.__r_.__value_.__l.__data_, v222.__r_.__value_.__l.__size_);
  else
    v459 = v222;
  v460 = v223;
  v458 = &off_24C335AB8;
  v461 = v224;
  if (SHIBYTE(v225.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v462, v225.__r_.__value_.__l.__data_, v225.__r_.__value_.__l.__size_);
  else
    v462 = v225;
  v453 = (uint64_t (**)())off_24C335D90;
  v131 = SHIBYTE(v217.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v217.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v454, v217.__r_.__value_.__l.__data_, v217.__r_.__value_.__l.__size_);
  else
    v454 = v217;
  v453 = off_24C335B18;
  v456 = v219;
  v455 = v145;
  v457 = v220;
  v448 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v212.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v449, v212.__r_.__value_.__l.__data_, v212.__r_.__value_.__l.__size_);
  else
    v449 = v212;
  v450 = v213;
  v448 = &off_24C335AB8;
  v451 = v214;
  if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v452, v215.__r_.__value_.__l.__data_, v215.__r_.__value_.__l.__size_);
  else
    v452 = v215;
  v443 = (uint64_t (**)())off_24C335D90;
  v132 = SHIBYTE(v207.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v207.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v444, v207.__r_.__value_.__l.__data_, v207.__r_.__value_.__l.__size_);
  else
    v444 = v207;
  v443 = off_24C335B18;
  v446 = v209;
  v445 = v144;
  v447 = v210;
  v438 = (uint64_t (**)())off_24C335D90;
  v171 = SHIBYTE(v202.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v202.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v439, v202.__r_.__value_.__l.__data_, v202.__r_.__value_.__l.__size_);
  else
    v439 = v202;
  v438 = off_24C335B18;
  v441 = v204;
  v440 = v143;
  v442 = v205;
  v433 = (uint64_t (**)())off_24C335D90;
  v133 = SHIBYTE(v197.__r_.__value_.__r.__words[2]);
  v169 = v129;
  if (SHIBYTE(v197.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v434, v197.__r_.__value_.__l.__data_, v197.__r_.__value_.__l.__size_);
  else
    v434 = v197;
  v433 = off_24C335B18;
  v436 = v199;
  v435 = v142;
  v437 = v200;
  v428 = (uint64_t (**)())off_24C335D90;
  v134 = SHIBYTE(v192.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v192.__r_.__value_.__l.__data_, v192.__r_.__value_.__l.__size_);
  else
    __p = v192;
  v428 = off_24C335B18;
  v431 = v194;
  v430 = v141;
  v432 = v195;
  v423 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v187.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v424, v187.__r_.__value_.__l.__data_, v187.__r_.__value_.__l.__size_);
  else
    v424 = v187;
  v425 = v188;
  v423 = &off_24C335AB8;
  v426 = v189;
  if (SHIBYTE(v190.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v427, v190.__r_.__value_.__l.__data_, v190.__r_.__value_.__l.__size_);
  else
    v427 = v190;
  mediaplatform::DatabaseColumnTuple<11ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(v185, (uint64_t)&v650, (uint64_t)&v645, (uint64_t)&v640, (uint64_t)&v635, (uint64_t)&v630, (uint64_t)&v625, (uint64_t)&v620, (uint64_t)&v615, (uint64_t)&v610, (uint64_t)&v605, (uint64_t)&v600, (uint64_t)&v595, (uint64_t)&v590, (uint64_t)&v585, (uint64_t)&v580, (uint64_t)&v575, (uint64_t)&v570, (uint64_t)&v565,
    (uint64_t)&v560,
    (uint64_t)&v555,
    (uint64_t)&v550,
    (uint64_t)&v545,
    (uint64_t)&v540,
    (uint64_t)&v535,
    (uint64_t)&v530,
    (uint64_t)&v525,
    (uint64_t)&v520,
    (uint64_t)&v515,
    (uint64_t)&v510,
    (uint64_t)&v505,
    (uint64_t)&v501,
    (uint64_t)&v496,
    (uint64_t)&v491,
    (uint64_t)&v486,
    (uint64_t)&v481,
    (uint64_t)&v476,
    (uint64_t)&v471,
    (uint64_t)&v467,
    (uint64_t)&v463,
    (uint64_t)&v458,
    (uint64_t)&v453,
    (uint64_t)&v448,
    (uint64_t)&v443,
    (uint64_t)&v438,
    (uint64_t)&v433,
    (uint64_t)&v428,
    (uint64_t)&v423);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v423);
  v428 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v433 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v434.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v434.__r_.__value_.__l.__data_);
  v438 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v439.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v439.__r_.__value_.__l.__data_);
  v443 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v444.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v444.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v448);
  v453 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v454.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v454.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v458);
  v463 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v464.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v464.__r_.__value_.__l.__data_);
  v467 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v468.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v468.__r_.__value_.__l.__data_);
  v471 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v472.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v472.__r_.__value_.__l.__data_);
  v476 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v477.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v477.__r_.__value_.__l.__data_);
  v481 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v482.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v482.__r_.__value_.__l.__data_);
  v486 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v487.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v487.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v491);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v496);
  v501 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v502.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v502.__r_.__value_.__l.__data_);
  v505 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v506.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v506.__r_.__value_.__l.__data_);
  v510 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v511.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v511.__r_.__value_.__l.__data_);
  v515 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v516.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v516.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v520);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v525);
  v530 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v531.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v531.__r_.__value_.__l.__data_);
  v535 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v536.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v536.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v540);
  v545 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v546.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v546.__r_.__value_.__l.__data_);
  v550 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v551.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v551.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v555);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v560);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v565);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v570);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v575);
  v580 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v581.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v581.__r_.__value_.__l.__data_);
  v585 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v586.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v586.__r_.__value_.__l.__data_);
  v590 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v591.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v591.__r_.__value_.__l.__data_);
  v595 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v596.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v596.__r_.__value_.__l.__data_);
  v600 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v601.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v601.__r_.__value_.__l.__data_);
  v605 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v606.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v606.__r_.__value_.__l.__data_);
  v610 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v611.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v611.__r_.__value_.__l.__data_);
  v615 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v616.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v616.__r_.__value_.__l.__data_);
  v620 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v621.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v621.__r_.__value_.__l.__data_);
  v625 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v626.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v626.__r_.__value_.__l.__data_);
  v630 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v631.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v631.__r_.__value_.__l.__data_);
  v635 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v636.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v636.__r_.__value_.__l.__data_);
  v640 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v641.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v641.__r_.__value_.__l.__data_);
  v645 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v646.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v646.__r_.__value_.__l.__data_);
  v650 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v651.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v651.__r_.__value_.__l.__data_);
  *(_QWORD *)(v185 + 2464) = off_24C335D90;
  v135 = (std::string *)(v185 + 2472);
  if (SHIBYTE(v419.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v135, v419.__r_.__value_.__l.__data_, v419.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v135->__r_.__value_.__l.__data_ = *(_OWORD *)&v419.__r_.__value_.__l.__data_;
    *(_QWORD *)(v185 + 2488) = *((_QWORD *)&v419.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(v185 + 2496) = v420;
  *(_QWORD *)(v185 + 2464) = &off_24C335AB8;
  *(_BYTE *)(v185 + 2500) = v421;
  v136 = (std::string *)(v185 + 2504);
  if (SHIBYTE(v422.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v136, v422.__r_.__value_.__l.__data_, v422.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v136->__r_.__value_.__l.__data_ = *(_OWORD *)&v422.__r_.__value_.__l.__data_;
    *(_QWORD *)(v185 + 2520) = *((_QWORD *)&v422.__r_.__value_.__l + 2);
  }
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v186);
  v191 = (uint64_t (**)())off_24C335D90;
  if (v134 < 0)
    operator delete(v192.__r_.__value_.__l.__data_);
  v196 = (uint64_t (**)())off_24C335D90;
  if (v133 < 0)
    operator delete(v197.__r_.__value_.__l.__data_);
  v201 = (uint64_t (**)())off_24C335D90;
  if (v171 < 0)
    operator delete(v202.__r_.__value_.__l.__data_);
  v206 = (uint64_t (**)())off_24C335D90;
  if (v132 < 0)
    operator delete(v207.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v211);
  v216 = (uint64_t (**)())off_24C335D90;
  if (v131 < 0)
    operator delete(v217.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v221);
  v226 = (uint64_t (**)())off_24C335D90;
  if (v174 < 0)
    operator delete(v227.__r_.__value_.__l.__data_);
  v230 = (uint64_t (**)())off_24C335D90;
  if (v175 < 0)
    operator delete(v231.__r_.__value_.__l.__data_);
  v234 = (uint64_t (**)())off_24C335D90;
  if (v177 < 0)
    operator delete(v235.__r_.__value_.__l.__data_);
  v239 = (uint64_t (**)())off_24C335D90;
  if (v178 < 0)
    operator delete(v240.__r_.__value_.__l.__data_);
  v244 = (uint64_t (**)())off_24C335D90;
  if (v130 < 0)
    operator delete(v245.__r_.__value_.__l.__data_);
  v249 = (uint64_t (**)())off_24C335D90;
  if (v169 < 0)
    operator delete(v250.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v254);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v259);
  v264 = (uint64_t (**)())off_24C335D90;
  if (v179 < 0)
    operator delete(v265.__r_.__value_.__l.__data_);
  v268 = (uint64_t (**)())off_24C335D90;
  if (v182 < 0)
    operator delete(v269.__r_.__value_.__l.__data_);
  if (v184 < 0)
    operator delete(v274.__r_.__value_.__l.__data_);
  if (v181 < 0)
    operator delete(v279.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v283);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v288);
  if (v126 < 0)
  {
    operator delete(v294.__r_.__value_.__l.__data_);
    if ((v125 & 0x80000000) == 0)
      goto LABEL_473;
  }
  else if ((v125 & 0x80000000) == 0)
  {
    goto LABEL_473;
  }
  operator delete(v299.__r_.__value_.__l.__data_);
LABEL_473:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v303);
  if (SHIBYTE(v309.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v309.__r_.__value_.__l.__data_);
  if (SHIBYTE(v314.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v314.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v318);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v323);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v328);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v333);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v338);
  if (SHIBYTE(v344.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v344.__r_.__value_.__l.__data_);
  if (SHIBYTE(v349.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v349.__r_.__value_.__l.__data_);
  if (SHIBYTE(v354.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v354.__r_.__value_.__l.__data_);
  if (SHIBYTE(v359.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v359.__r_.__value_.__l.__data_);
  if (SHIBYTE(v364.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v364.__r_.__value_.__l.__data_);
  if (SHIBYTE(v369.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v369.__r_.__value_.__l.__data_);
  if (SHIBYTE(v374.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v374.__r_.__value_.__l.__data_);
  if (SHIBYTE(v379.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v379.__r_.__value_.__l.__data_);
  if (SHIBYTE(v384.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v384.__r_.__value_.__l.__data_);
  if (SHIBYTE(v389.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v389.__r_.__value_.__l.__data_);
  if (SHIBYTE(v394.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v394.__r_.__value_.__l.__data_);
  if (SHIBYTE(v399.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v399.__r_.__value_.__l.__data_);
  if (SHIBYTE(v404.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v404.__r_.__value_.__l.__data_);
  if (SHIBYTE(v409.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v409.__r_.__value_.__l.__data_);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__s.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v418);
  *(_QWORD *)(v185 + 2528) = off_24C335D90;
  v137 = (std::string *)(v185 + 2536);
  if (*(char *)(v159 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v137, *(const std::string::value_type **)(v159 + 8), *(_QWORD *)(v159 + 16));
  }
  else
  {
    v138 = *(_OWORD *)(v159 + 8);
    *(_QWORD *)(v185 + 2552) = *(_QWORD *)(v159 + 24);
    *(_OWORD *)&v137->__r_.__value_.__l.__data_ = v138;
  }
  *(_DWORD *)(v185 + 2560) = *(_DWORD *)(v159 + 32);
  *(_QWORD *)(v185 + 2528) = off_24C335B18;
  v139 = *(_QWORD *)(v159 + 36);
  *(_DWORD *)(v185 + 2572) = *(_DWORD *)(v159 + 44);
  *(_QWORD *)(v185 + 2564) = v139;
  return v185;
}

void sub_20A8908D0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(v1);
  mediaplatform::DatabaseColumnTuple<11ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(v2);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<9ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 2528) = off_24C335D90;
  if (*(char *)(a1 + 2559) < 0)
    operator delete(*(void **)(a1 + 2536));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 2464);
  return mediaplatform::DatabaseColumnTuple<11ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<11ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  std::string *v130;
  int v131;
  std::string *v132;
  __int128 v133;
  uint64_t v134;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  uint64_t v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  uint64_t v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  uint64_t (**v182)();
  std::string v183;
  int v184;
  char v185;
  std::string v186;
  uint64_t (**v187)();
  std::string v188;
  int v189;
  uint64_t v190;
  int v191;
  uint64_t (**v192)();
  std::string v193;
  int v194;
  uint64_t v195;
  int v196;
  uint64_t (**v197)();
  std::string v198;
  int v199;
  uint64_t v200;
  int v201;
  uint64_t (**v202)();
  std::string v203;
  int v204;
  uint64_t v205;
  int v206;
  uint64_t (**v207)();
  std::string v208;
  int v209;
  char v210;
  std::string v211;
  uint64_t (**v212)();
  std::string v213;
  int v214;
  uint64_t v215;
  int v216;
  uint64_t (**v217)();
  std::string v218;
  int v219;
  char v220;
  std::string v221;
  uint64_t (**v222)();
  std::string v223;
  int v224;
  uint64_t v225;
  uint64_t (**v226)();
  std::string v227;
  int v228;
  uint64_t v229;
  uint64_t (**v230)();
  std::string v231;
  int v232;
  uint64_t v233;
  int v234;
  uint64_t (**v235)();
  std::string v236;
  int v237;
  uint64_t v238;
  int v239;
  uint64_t (**v240)();
  std::string v241;
  int v242;
  uint64_t v243;
  int v244;
  uint64_t (**v245)();
  std::string v246;
  int v247;
  uint64_t v248;
  int v249;
  uint64_t (**v250)();
  std::string v251;
  int v252;
  char v253;
  std::string v254;
  uint64_t (**v255)();
  std::string v256;
  int v257;
  char v258;
  std::string v259;
  uint64_t (**v260)();
  std::string v261;
  int v262;
  uint64_t v263;
  uint64_t (**v264)();
  std::string v265;
  int v266;
  uint64_t v267;
  int v268;
  uint64_t (**v269)();
  std::string v270;
  int v271;
  uint64_t v272;
  int v273;
  uint64_t (**v274)();
  std::string v275;
  int v276;
  uint64_t v277;
  int v278;
  uint64_t (**v279)();
  std::string v280;
  int v281;
  char v282;
  std::string v283;
  uint64_t (**v284)();
  std::string v285;
  int v286;
  char v287;
  std::string v288;
  uint64_t (**v289)();
  std::string v290;
  int v291;
  uint64_t v292;
  int v293;
  uint64_t (**v294)();
  std::string v295;
  int v296;
  uint64_t v297;
  int v298;
  uint64_t (**v299)();
  std::string v300;
  int v301;
  char v302;
  std::string v303;
  uint64_t (**v304)();
  std::string v305;
  int v306;
  uint64_t v307;
  int v308;
  uint64_t (**v309)();
  std::string v310;
  int v311;
  uint64_t v312;
  int v313;
  uint64_t (**v314)();
  std::string v315;
  int v316;
  char v317;
  std::string v318;
  uint64_t (**v319)();
  std::string v320;
  int v321;
  char v322;
  std::string v323;
  uint64_t (**v324)();
  std::string v325;
  int v326;
  char v327;
  std::string v328;
  uint64_t (**v329)();
  std::string v330;
  int v331;
  char v332;
  std::string v333;
  uint64_t (**v334)();
  std::string v335;
  int v336;
  char v337;
  std::string v338;
  uint64_t (**v339)();
  std::string v340;
  int v341;
  uint64_t v342;
  int v343;
  uint64_t (**v344)();
  std::string v345;
  int v346;
  uint64_t v347;
  int v348;
  uint64_t (**v349)();
  std::string v350;
  int v351;
  uint64_t v352;
  int v353;
  uint64_t (**v354)();
  std::string v355;
  int v356;
  uint64_t v357;
  int v358;
  uint64_t (**v359)();
  std::string v360;
  int v361;
  uint64_t v362;
  int v363;
  uint64_t (**v364)();
  std::string v365;
  int v366;
  uint64_t v367;
  int v368;
  uint64_t (**v369)();
  std::string v370;
  int v371;
  uint64_t v372;
  int v373;
  uint64_t (**v374)();
  std::string v375;
  int v376;
  uint64_t v377;
  int v378;
  uint64_t (**v379)();
  std::string v380;
  int v381;
  uint64_t v382;
  int v383;
  uint64_t (**v384)();
  std::string v385;
  int v386;
  uint64_t v387;
  int v388;
  uint64_t (**v389)();
  std::string v390;
  int v391;
  uint64_t v392;
  int v393;
  uint64_t (**v394)();
  std::string v395;
  int v396;
  uint64_t v397;
  int v398;
  uint64_t (**v399)();
  std::string __s;
  int v401;
  uint64_t v402;
  int v403;
  uint64_t (**v404)();
  std::string v405;
  int v406;
  uint64_t v407;
  int v408;
  uint64_t (**v409)();
  std::string v410;
  int v411;
  char v412;
  std::string v413;
  uint64_t (**v414)();
  std::string __p;
  int v416;
  uint64_t v417;
  int v418;
  uint64_t (**v419)();
  std::string v420;
  int v421;
  uint64_t v422;
  int v423;
  uint64_t (**v424)();
  std::string v425;
  int v426;
  uint64_t v427;
  int v428;
  uint64_t (**v429)();
  std::string v430;
  int v431;
  uint64_t v432;
  int v433;
  uint64_t (**v434)();
  std::string v435;
  int v436;
  char v437;
  std::string v438;
  uint64_t (**v439)();
  std::string v440;
  int v441;
  uint64_t v442;
  int v443;
  uint64_t (**v444)();
  std::string v445;
  int v446;
  char v447;
  std::string v448;
  uint64_t (**v449)();
  std::string v450;
  int v451;
  uint64_t v452;
  uint64_t (**v453)();
  std::string v454;
  int v455;
  uint64_t v456;
  uint64_t (**v457)();
  std::string v458;
  int v459;
  uint64_t v460;
  int v461;
  uint64_t (**v462)();
  std::string v463;
  int v464;
  uint64_t v465;
  int v466;
  uint64_t (**v467)();
  std::string v468;
  int v469;
  uint64_t v470;
  int v471;
  uint64_t (**v472)();
  std::string v473;
  int v474;
  uint64_t v475;
  int v476;
  uint64_t (**v477)();
  std::string v478;
  int v479;
  char v480;
  std::string v481;
  uint64_t (**v482)();
  std::string v483;
  int v484;
  char v485;
  std::string v486;
  uint64_t (**v487)();
  std::string v488;
  int v489;
  uint64_t v490;
  uint64_t (**v491)();
  std::string v492;
  int v493;
  uint64_t v494;
  int v495;
  uint64_t (**v496)();
  std::string v497;
  int v498;
  uint64_t v499;
  int v500;
  uint64_t (**v501)();
  std::string v502;
  int v503;
  uint64_t v504;
  int v505;
  uint64_t (**v506)();
  std::string v507;
  int v508;
  char v509;
  std::string v510;
  uint64_t (**v511)();
  std::string v512;
  int v513;
  char v514;
  std::string v515;
  uint64_t (**v516)();
  std::string v517;
  int v518;
  uint64_t v519;
  int v520;
  uint64_t (**v521)();
  std::string v522;
  int v523;
  uint64_t v524;
  int v525;
  uint64_t (**v526)();
  std::string v527;
  int v528;
  char v529;
  std::string v530;
  uint64_t (**v531)();
  std::string v532;
  int v533;
  uint64_t v534;
  int v535;
  uint64_t (**v536)();
  std::string v537;
  int v538;
  uint64_t v539;
  int v540;
  uint64_t (**v541)();
  std::string v542;
  int v543;
  char v544;
  std::string v545;
  uint64_t (**v546)();
  std::string v547;
  int v548;
  char v549;
  std::string v550;
  uint64_t (**v551)();
  std::string v552;
  int v553;
  char v554;
  std::string v555;
  uint64_t (**v556)();
  std::string v557;
  int v558;
  char v559;
  std::string v560;
  uint64_t (**v561)();
  std::string v562;
  int v563;
  char v564;
  std::string v565;
  uint64_t (**v566)();
  std::string v567;
  int v568;
  uint64_t v569;
  int v570;
  uint64_t (**v571)();
  std::string v572;
  int v573;
  uint64_t v574;
  int v575;
  uint64_t (**v576)();
  std::string v577;
  int v578;
  uint64_t v579;
  int v580;
  uint64_t (**v581)();
  std::string v582;
  int v583;
  uint64_t v584;
  int v585;
  uint64_t (**v586)();
  std::string v587;
  int v588;
  uint64_t v589;
  int v590;
  uint64_t (**v591)();
  std::string v592;
  int v593;
  uint64_t v594;
  int v595;
  uint64_t (**v596)();
  std::string v597;
  int v598;
  uint64_t v599;
  int v600;
  uint64_t (**v601)();
  std::string v602;
  int v603;
  uint64_t v604;
  int v605;
  uint64_t (**v606)();
  std::string v607;
  int v608;
  uint64_t v609;
  int v610;
  uint64_t (**v611)();
  std::string v612;
  int v613;
  uint64_t v614;
  int v615;
  uint64_t (**v616)();
  std::string v617;
  int v618;
  uint64_t v619;
  int v620;
  uint64_t (**v621)();
  std::string v622;
  int v623;
  uint64_t v624;
  int v625;
  uint64_t (**v626)();
  std::string v627;
  int v628;
  uint64_t v629;
  int v630;

  v48 = MEMORY[0x24BDAC7A8](a1);
  v51 = v50;
  v53 = v52;
  v55 = v54;
  v57 = v56;
  v59 = v58;
  v60 = v49;
  v62 = v61;
  v63 = v48;
  if (*(char *)(v49 + 31) < 0)
    std::string::__init_copy_ctor_external(&v405, *(const std::string::value_type **)(v49 + 8), *(_QWORD *)(v49 + 16));
  else
    v405 = *(std::string *)(v49 + 8);
  v64 = *(_DWORD *)(v60 + 32);
  v404 = off_24C335B18;
  v407 = *(_QWORD *)(v60 + 36);
  v65 = *(_DWORD *)(v60 + 44);
  v406 = v64;
  v408 = v65;
  if (*(char *)(v59 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(v59 + 8), *(_QWORD *)(v59 + 16));
  else
    __s = *(std::string *)(v59 + 8);
  v66 = *(_DWORD *)(v59 + 32);
  v399 = off_24C335B18;
  v402 = *(_QWORD *)(v59 + 36);
  v67 = *(_DWORD *)(v59 + 44);
  v180 = v66;
  v401 = v66;
  v403 = v67;
  if (*(char *)(v57 + 31) < 0)
    std::string::__init_copy_ctor_external(&v395, *(const std::string::value_type **)(v57 + 8), *(_QWORD *)(v57 + 16));
  else
    v395 = *(std::string *)(v57 + 8);
  v68 = *(_DWORD *)(v57 + 32);
  v394 = off_24C335B18;
  v397 = *(_QWORD *)(v57 + 36);
  v69 = *(_DWORD *)(v57 + 44);
  v178 = v68;
  v396 = v68;
  v398 = v69;
  if (*(char *)(v55 + 31) < 0)
    std::string::__init_copy_ctor_external(&v390, *(const std::string::value_type **)(v55 + 8), *(_QWORD *)(v55 + 16));
  else
    v390 = *(std::string *)(v55 + 8);
  v70 = *(_DWORD *)(v55 + 32);
  v389 = off_24C335B18;
  v392 = *(_QWORD *)(v55 + 36);
  v71 = *(_DWORD *)(v55 + 44);
  v176 = v70;
  v391 = v70;
  v393 = v71;
  if (*(char *)(v53 + 31) < 0)
    std::string::__init_copy_ctor_external(&v385, *(const std::string::value_type **)(v53 + 8), *(_QWORD *)(v53 + 16));
  else
    v385 = *(std::string *)(v53 + 8);
  v72 = *(_DWORD *)(v53 + 32);
  v384 = off_24C335B18;
  v387 = *(_QWORD *)(v53 + 36);
  v73 = *(_DWORD *)(v53 + 44);
  v386 = v72;
  v388 = v73;
  if (*(char *)(v51 + 31) < 0)
    std::string::__init_copy_ctor_external(&v380, *(const std::string::value_type **)(v51 + 8), *(_QWORD *)(v51 + 16));
  else
    v380 = *(std::string *)(v51 + 8);
  v74 = *(_DWORD *)(v51 + 32);
  v379 = off_24C335B18;
  v382 = *(_QWORD *)(v51 + 36);
  v75 = *(_DWORD *)(v51 + 44);
  v172 = v74;
  v381 = v74;
  v383 = v75;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v375, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v375 = *(std::string *)(a9 + 8);
  v76 = *(_DWORD *)(a9 + 32);
  v374 = off_24C335B18;
  v377 = *(_QWORD *)(a9 + 36);
  v77 = *(_DWORD *)(a9 + 44);
  v170 = v76;
  v376 = v76;
  v378 = v77;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v370, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v370 = *(std::string *)(a10 + 8);
  v78 = *(_DWORD *)(a10 + 32);
  v369 = off_24C335B18;
  v372 = *(_QWORD *)(a10 + 36);
  v79 = *(_DWORD *)(a10 + 44);
  v168 = v78;
  v371 = v78;
  v373 = v79;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v365, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v365 = *(std::string *)(a11 + 8);
  v80 = *(_DWORD *)(a11 + 32);
  v364 = off_24C335B18;
  v367 = *(_QWORD *)(a11 + 36);
  v81 = *(_DWORD *)(a11 + 44);
  v166 = v80;
  v366 = v80;
  v368 = v81;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v360, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v360 = *(std::string *)(a12 + 8);
  v82 = *(_DWORD *)(a12 + 32);
  v359 = off_24C335B18;
  v362 = *(_QWORD *)(a12 + 36);
  v83 = *(_DWORD *)(a12 + 44);
  v164 = v82;
  v361 = v82;
  v363 = v83;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v355, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v355 = *(std::string *)(a13 + 8);
  v84 = *(_DWORD *)(a13 + 32);
  v354 = off_24C335B18;
  v357 = *(_QWORD *)(a13 + 36);
  v85 = *(_DWORD *)(a13 + 44);
  v162 = v84;
  v356 = v84;
  v358 = v85;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v350, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v350 = *(std::string *)(a14 + 8);
  v86 = *(_DWORD *)(a14 + 32);
  v349 = off_24C335B18;
  v352 = *(_QWORD *)(a14 + 36);
  v87 = *(_DWORD *)(a14 + 44);
  v161 = v86;
  v351 = v86;
  v353 = v87;
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v345, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v345 = *(std::string *)(a15 + 8);
  v88 = *(_DWORD *)(a15 + 32);
  v344 = off_24C335B18;
  v347 = *(_QWORD *)(a15 + 36);
  v89 = *(_DWORD *)(a15 + 44);
  v160 = v88;
  v346 = v88;
  v348 = v89;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v340, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v340 = *(std::string *)(a16 + 8);
  v90 = *(_DWORD *)(a16 + 32);
  v339 = off_24C335B18;
  v342 = *(_QWORD *)(a16 + 36);
  v91 = *(_DWORD *)(a16 + 44);
  v159 = v90;
  v341 = v90;
  v343 = v91;
  v334 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v335, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v335 = *(std::string *)(a17 + 8);
  v336 = *(_DWORD *)(a17 + 32);
  v334 = &off_24C335AB8;
  v337 = *(_BYTE *)(a17 + 36);
  if (*(char *)(a17 + 63) < 0)
    std::string::__init_copy_ctor_external(&v338, *(const std::string::value_type **)(a17 + 40), *(_QWORD *)(a17 + 48));
  else
    v338 = *(std::string *)(a17 + 40);
  v329 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v330, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v330 = *(std::string *)(a18 + 8);
  v331 = *(_DWORD *)(a18 + 32);
  v329 = &off_24C335AB8;
  v332 = *(_BYTE *)(a18 + 36);
  if (*(char *)(a18 + 63) < 0)
    std::string::__init_copy_ctor_external(&v333, *(const std::string::value_type **)(a18 + 40), *(_QWORD *)(a18 + 48));
  else
    v333 = *(std::string *)(a18 + 40);
  v324 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v325, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v325 = *(std::string *)(a19 + 8);
  v326 = *(_DWORD *)(a19 + 32);
  v324 = &off_24C335AB8;
  v327 = *(_BYTE *)(a19 + 36);
  if (*(char *)(a19 + 63) < 0)
    std::string::__init_copy_ctor_external(&v328, *(const std::string::value_type **)(a19 + 40), *(_QWORD *)(a19 + 48));
  else
    v328 = *(std::string *)(a19 + 40);
  v319 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v320, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v320 = *(std::string *)(a20 + 8);
  v321 = *(_DWORD *)(a20 + 32);
  v319 = &off_24C335AB8;
  v322 = *(_BYTE *)(a20 + 36);
  if (*(char *)(a20 + 63) < 0)
    std::string::__init_copy_ctor_external(&v323, *(const std::string::value_type **)(a20 + 40), *(_QWORD *)(a20 + 48));
  else
    v323 = *(std::string *)(a20 + 40);
  v314 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v315, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v315 = *(std::string *)(a21 + 8);
  v316 = *(_DWORD *)(a21 + 32);
  v314 = &off_24C335AB8;
  v317 = *(_BYTE *)(a21 + 36);
  if (*(char *)(a21 + 63) < 0)
    std::string::__init_copy_ctor_external(&v318, *(const std::string::value_type **)(a21 + 40), *(_QWORD *)(a21 + 48));
  else
    v318 = *(std::string *)(a21 + 40);
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v310, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v310 = *(std::string *)(a22 + 8);
  v92 = *(_DWORD *)(a22 + 32);
  v309 = off_24C335B18;
  v312 = *(_QWORD *)(a22 + 36);
  v93 = *(_DWORD *)(a22 + 44);
  v158 = v92;
  v311 = v92;
  v313 = v93;
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v305, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v305 = *(std::string *)(a23 + 8);
  v94 = *(_DWORD *)(a23 + 32);
  v304 = off_24C335B18;
  v307 = *(_QWORD *)(a23 + 36);
  v95 = *(_DWORD *)(a23 + 44);
  v157 = v94;
  v306 = v94;
  v308 = v95;
  v299 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v300, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v300 = *(std::string *)(a24 + 8);
  v301 = *(_DWORD *)(a24 + 32);
  v299 = &off_24C335AB8;
  v302 = *(_BYTE *)(a24 + 36);
  if (*(char *)(a24 + 63) < 0)
    std::string::__init_copy_ctor_external(&v303, *(const std::string::value_type **)(a24 + 40), *(_QWORD *)(a24 + 48));
  else
    v303 = *(std::string *)(a24 + 40);
  if (*(char *)(a25 + 31) < 0)
    std::string::__init_copy_ctor_external(&v295, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  else
    v295 = *(std::string *)(a25 + 8);
  v96 = *(_DWORD *)(a25 + 32);
  v294 = off_24C335B18;
  v297 = *(_QWORD *)(a25 + 36);
  v97 = *(_DWORD *)(a25 + 44);
  v156 = v96;
  v296 = v96;
  v298 = v97;
  if (*(char *)(a26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v290, *(const std::string::value_type **)(a26 + 8), *(_QWORD *)(a26 + 16));
  else
    v290 = *(std::string *)(a26 + 8);
  v98 = *(_DWORD *)(a26 + 32);
  v289 = off_24C335B18;
  v292 = *(_QWORD *)(a26 + 36);
  v99 = *(_DWORD *)(a26 + 44);
  v155 = v98;
  v291 = v98;
  v293 = v99;
  v284 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a27 + 31) < 0)
    std::string::__init_copy_ctor_external(&v285, *(const std::string::value_type **)(a27 + 8), *(_QWORD *)(a27 + 16));
  else
    v285 = *(std::string *)(a27 + 8);
  v286 = *(_DWORD *)(a27 + 32);
  v284 = &off_24C335AB8;
  v287 = *(_BYTE *)(a27 + 36);
  if (*(char *)(a27 + 63) < 0)
    std::string::__init_copy_ctor_external(&v288, *(const std::string::value_type **)(a27 + 40), *(_QWORD *)(a27 + 48));
  else
    v288 = *(std::string *)(a27 + 40);
  v279 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v280, *(const std::string::value_type **)(a28 + 8), *(_QWORD *)(a28 + 16));
  else
    v280 = *(std::string *)(a28 + 8);
  v281 = *(_DWORD *)(a28 + 32);
  v279 = &off_24C335AB8;
  v282 = *(_BYTE *)(a28 + 36);
  if (*(char *)(a28 + 63) < 0)
    std::string::__init_copy_ctor_external(&v283, *(const std::string::value_type **)(a28 + 40), *(_QWORD *)(a28 + 48));
  else
    v283 = *(std::string *)(a28 + 40);
  if (*(char *)(a29 + 31) < 0)
    std::string::__init_copy_ctor_external(&v275, *(const std::string::value_type **)(a29 + 8), *(_QWORD *)(a29 + 16));
  else
    v275 = *(std::string *)(a29 + 8);
  v100 = *(_DWORD *)(a29 + 32);
  v274 = off_24C335B18;
  v277 = *(_QWORD *)(a29 + 36);
  v101 = *(_DWORD *)(a29 + 44);
  v154 = v100;
  v276 = v100;
  v278 = v101;
  if (*(char *)(a30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v270, *(const std::string::value_type **)(a30 + 8), *(_QWORD *)(a30 + 16));
  else
    v270 = *(std::string *)(a30 + 8);
  v102 = *(_DWORD *)(a30 + 32);
  v269 = off_24C335B18;
  v272 = *(_QWORD *)(a30 + 36);
  v103 = *(_DWORD *)(a30 + 44);
  v153 = v102;
  v271 = v102;
  v273 = v103;
  if (*(char *)(a31 + 31) < 0)
    std::string::__init_copy_ctor_external(&v265, *(const std::string::value_type **)(a31 + 8), *(_QWORD *)(a31 + 16));
  else
    v265 = *(std::string *)(a31 + 8);
  v104 = *(_DWORD *)(a31 + 32);
  v264 = off_24C335B18;
  v267 = *(_QWORD *)(a31 + 36);
  v105 = *(_DWORD *)(a31 + 44);
  v152 = v104;
  v266 = v104;
  v268 = v105;
  v141 = v62;
  if (*(char *)(a32 + 31) < 0)
    std::string::__init_copy_ctor_external(&v261, *(const std::string::value_type **)(a32 + 8), *(_QWORD *)(a32 + 16));
  else
    v261 = *(std::string *)(a32 + 8);
  v151 = *(_DWORD *)(a32 + 32);
  v262 = v151;
  v260 = off_24C335AF8;
  v150 = *(_QWORD *)(a32 + 36);
  v263 = v150;
  v255 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a33 + 31) < 0)
    std::string::__init_copy_ctor_external(&v256, *(const std::string::value_type **)(a33 + 8), *(_QWORD *)(a33 + 16));
  else
    v256 = *(std::string *)(a33 + 8);
  v257 = *(_DWORD *)(a33 + 32);
  v255 = &off_24C335AB8;
  v258 = *(_BYTE *)(a33 + 36);
  if (*(char *)(a33 + 63) < 0)
    std::string::__init_copy_ctor_external(&v259, *(const std::string::value_type **)(a33 + 40), *(_QWORD *)(a33 + 48));
  else
    v259 = *(std::string *)(a33 + 40);
  v250 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a34 + 31) < 0)
    std::string::__init_copy_ctor_external(&v251, *(const std::string::value_type **)(a34 + 8), *(_QWORD *)(a34 + 16));
  else
    v251 = *(std::string *)(a34 + 8);
  v252 = *(_DWORD *)(a34 + 32);
  v250 = &off_24C335AB8;
  v253 = *(_BYTE *)(a34 + 36);
  if (*(char *)(a34 + 63) < 0)
    std::string::__init_copy_ctor_external(&v254, *(const std::string::value_type **)(a34 + 40), *(_QWORD *)(a34 + 48));
  else
    v254 = *(std::string *)(a34 + 40);
  if (*(char *)(a35 + 31) < 0)
    std::string::__init_copy_ctor_external(&v246, *(const std::string::value_type **)(a35 + 8), *(_QWORD *)(a35 + 16));
  else
    v246 = *(std::string *)(a35 + 8);
  v106 = *(_DWORD *)(a35 + 32);
  v245 = off_24C335B18;
  v248 = *(_QWORD *)(a35 + 36);
  v107 = *(_DWORD *)(a35 + 44);
  v149 = v106;
  v247 = v106;
  v249 = v107;
  if (*(char *)(a36 + 31) < 0)
    std::string::__init_copy_ctor_external(&v241, *(const std::string::value_type **)(a36 + 8), *(_QWORD *)(a36 + 16));
  else
    v241 = *(std::string *)(a36 + 8);
  v108 = *(_DWORD *)(a36 + 32);
  v240 = off_24C335B18;
  v243 = *(_QWORD *)(a36 + 36);
  v109 = *(_DWORD *)(a36 + 44);
  v148 = v108;
  v242 = v108;
  v244 = v109;
  if (*(char *)(a37 + 31) < 0)
    std::string::__init_copy_ctor_external(&v236, *(const std::string::value_type **)(a37 + 8), *(_QWORD *)(a37 + 16));
  else
    v236 = *(std::string *)(a37 + 8);
  v110 = *(_DWORD *)(a37 + 32);
  v235 = off_24C335B18;
  v238 = *(_QWORD *)(a37 + 36);
  v111 = *(_DWORD *)(a37 + 44);
  v147 = v110;
  v237 = v110;
  v239 = v111;
  v230 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a38 + 31) < 0)
    std::string::__init_copy_ctor_external(&v231, *(const std::string::value_type **)(a38 + 8), *(_QWORD *)(a38 + 16));
  else
    v231 = *(std::string *)(a38 + 8);
  v112 = *(_DWORD *)(a38 + 32);
  v230 = off_24C335B18;
  v233 = *(_QWORD *)(a38 + 36);
  v113 = *(_DWORD *)(a38 + 44);
  v146 = v112;
  v232 = v112;
  v234 = v113;
  v226 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a39 + 31) < 0)
    std::string::__init_copy_ctor_external(&v227, *(const std::string::value_type **)(a39 + 8), *(_QWORD *)(a39 + 16));
  else
    v227 = *(std::string *)(a39 + 8);
  v145 = *(_DWORD *)(a39 + 32);
  v228 = v145;
  v226 = off_24C335AF8;
  v144 = *(_QWORD *)(a39 + 36);
  v229 = v144;
  v222 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a40 + 31) < 0)
    std::string::__init_copy_ctor_external(&v223, *(const std::string::value_type **)(a40 + 8), *(_QWORD *)(a40 + 16));
  else
    v223 = *(std::string *)(a40 + 8);
  v143 = *(_DWORD *)(a40 + 32);
  v224 = v143;
  v222 = off_24C335AF8;
  v142 = *(_QWORD *)(a40 + 36);
  v225 = v142;
  v217 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a41 + 31) < 0)
    std::string::__init_copy_ctor_external(&v218, *(const std::string::value_type **)(a41 + 8), *(_QWORD *)(a41 + 16));
  else
    v218 = *(std::string *)(a41 + 8);
  v219 = *(_DWORD *)(a41 + 32);
  v217 = &off_24C335AB8;
  v220 = *(_BYTE *)(a41 + 36);
  if (*(char *)(a41 + 63) < 0)
    std::string::__init_copy_ctor_external(&v221, *(const std::string::value_type **)(a41 + 40), *(_QWORD *)(a41 + 48));
  else
    v221 = *(std::string *)(a41 + 40);
  v212 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a42 + 31) < 0)
    std::string::__init_copy_ctor_external(&v213, *(const std::string::value_type **)(a42 + 8), *(_QWORD *)(a42 + 16));
  else
    v213 = *(std::string *)(a42 + 8);
  v114 = *(_DWORD *)(a42 + 32);
  v212 = off_24C335B18;
  v215 = *(_QWORD *)(a42 + 36);
  v115 = *(_DWORD *)(a42 + 44);
  v140 = v114;
  v214 = v114;
  v216 = v115;
  v207 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a43 + 31) < 0)
    std::string::__init_copy_ctor_external(&v208, *(const std::string::value_type **)(a43 + 8), *(_QWORD *)(a43 + 16));
  else
    v208 = *(std::string *)(a43 + 8);
  v209 = *(_DWORD *)(a43 + 32);
  v207 = &off_24C335AB8;
  v210 = *(_BYTE *)(a43 + 36);
  if (*(char *)(a43 + 63) < 0)
    std::string::__init_copy_ctor_external(&v211, *(const std::string::value_type **)(a43 + 40), *(_QWORD *)(a43 + 48));
  else
    v211 = *(std::string *)(a43 + 40);
  v202 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a44 + 31) < 0)
    std::string::__init_copy_ctor_external(&v203, *(const std::string::value_type **)(a44 + 8), *(_QWORD *)(a44 + 16));
  else
    v203 = *(std::string *)(a44 + 8);
  v116 = *(_DWORD *)(a44 + 32);
  v202 = off_24C335B18;
  v205 = *(_QWORD *)(a44 + 36);
  v117 = *(_DWORD *)(a44 + 44);
  v139 = v116;
  v204 = v116;
  v206 = v117;
  v197 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a45 + 31) < 0)
    std::string::__init_copy_ctor_external(&v198, *(const std::string::value_type **)(a45 + 8), *(_QWORD *)(a45 + 16));
  else
    v198 = *(std::string *)(a45 + 8);
  v118 = *(_DWORD *)(a45 + 32);
  v197 = off_24C335B18;
  v200 = *(_QWORD *)(a45 + 36);
  v119 = *(_DWORD *)(a45 + 44);
  v138 = v118;
  v199 = v118;
  v201 = v119;
  v192 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a46 + 31) < 0)
    std::string::__init_copy_ctor_external(&v193, *(const std::string::value_type **)(a46 + 8), *(_QWORD *)(a46 + 16));
  else
    v193 = *(std::string *)(a46 + 8);
  v120 = *(_DWORD *)(a46 + 32);
  v192 = off_24C335B18;
  v195 = *(_QWORD *)(a46 + 36);
  v121 = *(_DWORD *)(a46 + 44);
  v137 = v120;
  v194 = v120;
  v196 = v121;
  v187 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a47 + 31) < 0)
    std::string::__init_copy_ctor_external(&v188, *(const std::string::value_type **)(a47 + 8), *(_QWORD *)(a47 + 16));
  else
    v188 = *(std::string *)(a47 + 8);
  v136 = *(_DWORD *)(a47 + 32);
  v189 = v136;
  v187 = off_24C335B18;
  v190 = *(_QWORD *)(a47 + 36);
  v191 = *(_DWORD *)(a47 + 44);
  v182 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a48 + 31) < 0)
    std::string::__init_copy_ctor_external(&v183, *(const std::string::value_type **)(a48 + 8), *(_QWORD *)(a48 + 16));
  else
    v183 = *(std::string *)(a48 + 8);
  v184 = *(_DWORD *)(a48 + 32);
  v182 = &off_24C335AB8;
  v185 = *(_BYTE *)(a48 + 36);
  if (*(char *)(a48 + 63) < 0)
    std::string::__init_copy_ctor_external(&v186, *(const std::string::value_type **)(a48 + 40), *(_QWORD *)(a48 + 48));
  else
    v186 = *(std::string *)(a48 + 40);
  v626 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v627, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v627 = __s;
  v626 = off_24C335B18;
  v629 = v402;
  v628 = v180;
  v630 = v403;
  v621 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v395.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v622, v395.__r_.__value_.__l.__data_, v395.__r_.__value_.__l.__size_);
  else
    v622 = v395;
  v621 = off_24C335B18;
  v624 = v397;
  v623 = v178;
  v625 = v398;
  v616 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v390.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v617, v390.__r_.__value_.__l.__data_, v390.__r_.__value_.__l.__size_);
  else
    v617 = v390;
  v616 = off_24C335B18;
  v619 = v392;
  v618 = v176;
  v620 = v393;
  v611 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v385.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v612, v385.__r_.__value_.__l.__data_, v385.__r_.__value_.__l.__size_);
  else
    v612 = v385;
  v611 = off_24C335B18;
  v614 = v387;
  v613 = v72;
  v615 = v388;
  v606 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v380.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v607, v380.__r_.__value_.__l.__data_, v380.__r_.__value_.__l.__size_);
  else
    v607 = v380;
  v606 = off_24C335B18;
  v609 = v382;
  v608 = v172;
  v610 = v383;
  v601 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v375.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v602, v375.__r_.__value_.__l.__data_, v375.__r_.__value_.__l.__size_);
  else
    v602 = v375;
  v601 = off_24C335B18;
  v604 = v377;
  v603 = v170;
  v605 = v378;
  v596 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v370.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v597, v370.__r_.__value_.__l.__data_, v370.__r_.__value_.__l.__size_);
  else
    v597 = v370;
  v596 = off_24C335B18;
  v599 = v372;
  v598 = v168;
  v600 = v373;
  v591 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v365.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v592, v365.__r_.__value_.__l.__data_, v365.__r_.__value_.__l.__size_);
  else
    v592 = v365;
  v591 = off_24C335B18;
  v594 = v367;
  v593 = v166;
  v595 = v368;
  v586 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v360.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v587, v360.__r_.__value_.__l.__data_, v360.__r_.__value_.__l.__size_);
  else
    v587 = v360;
  v586 = off_24C335B18;
  v589 = v362;
  v588 = v164;
  v590 = v363;
  v581 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v355.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v582, v355.__r_.__value_.__l.__data_, v355.__r_.__value_.__l.__size_);
  else
    v582 = v355;
  v581 = off_24C335B18;
  v584 = v357;
  v583 = v162;
  v585 = v358;
  v576 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v350.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v577, v350.__r_.__value_.__l.__data_, v350.__r_.__value_.__l.__size_);
  else
    v577 = v350;
  v576 = off_24C335B18;
  v579 = v352;
  v578 = v161;
  v580 = v353;
  v571 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v345.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v572, v345.__r_.__value_.__l.__data_, v345.__r_.__value_.__l.__size_);
  else
    v572 = v345;
  v571 = off_24C335B18;
  v574 = v347;
  v573 = v160;
  v575 = v348;
  v566 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v340.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v567, v340.__r_.__value_.__l.__data_, v340.__r_.__value_.__l.__size_);
  else
    v567 = v340;
  v566 = off_24C335B18;
  v569 = v342;
  v568 = v159;
  v570 = v343;
  v561 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v335.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v562, v335.__r_.__value_.__l.__data_, v335.__r_.__value_.__l.__size_);
  else
    v562 = v335;
  v563 = v336;
  v561 = &off_24C335AB8;
  v564 = v337;
  if (SHIBYTE(v338.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v565, v338.__r_.__value_.__l.__data_, v338.__r_.__value_.__l.__size_);
  else
    v565 = v338;
  v556 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v330.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v557, v330.__r_.__value_.__l.__data_, v330.__r_.__value_.__l.__size_);
  else
    v557 = v330;
  v558 = v331;
  v556 = &off_24C335AB8;
  v559 = v332;
  if (SHIBYTE(v333.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v560, v333.__r_.__value_.__l.__data_, v333.__r_.__value_.__l.__size_);
  else
    v560 = v333;
  v551 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v325.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v552, v325.__r_.__value_.__l.__data_, v325.__r_.__value_.__l.__size_);
  else
    v552 = v325;
  v553 = v326;
  v551 = &off_24C335AB8;
  v554 = v327;
  if (SHIBYTE(v328.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v555, v328.__r_.__value_.__l.__data_, v328.__r_.__value_.__l.__size_);
  else
    v555 = v328;
  v546 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v320.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v547, v320.__r_.__value_.__l.__data_, v320.__r_.__value_.__l.__size_);
  else
    v547 = v320;
  v548 = v321;
  v546 = &off_24C335AB8;
  v549 = v322;
  if (SHIBYTE(v323.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v550, v323.__r_.__value_.__l.__data_, v323.__r_.__value_.__l.__size_);
  else
    v550 = v323;
  v541 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v315.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v542, v315.__r_.__value_.__l.__data_, v315.__r_.__value_.__l.__size_);
  else
    v542 = v315;
  v543 = v316;
  v541 = &off_24C335AB8;
  v544 = v317;
  if (SHIBYTE(v318.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v545, v318.__r_.__value_.__l.__data_, v318.__r_.__value_.__l.__size_);
  else
    v545 = v318;
  v536 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v310.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v537, v310.__r_.__value_.__l.__data_, v310.__r_.__value_.__l.__size_);
  else
    v537 = v310;
  v536 = off_24C335B18;
  v539 = v312;
  v538 = v158;
  v540 = v313;
  v531 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v305.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v532, v305.__r_.__value_.__l.__data_, v305.__r_.__value_.__l.__size_);
  else
    v532 = v305;
  v531 = off_24C335B18;
  v534 = v307;
  v533 = v157;
  v535 = v308;
  v526 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v300.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v527, v300.__r_.__value_.__l.__data_, v300.__r_.__value_.__l.__size_);
  else
    v527 = v300;
  v528 = v301;
  v526 = &off_24C335AB8;
  v529 = v302;
  if (SHIBYTE(v303.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v530, v303.__r_.__value_.__l.__data_, v303.__r_.__value_.__l.__size_);
  else
    v530 = v303;
  v521 = (uint64_t (**)())off_24C335D90;
  v122 = SHIBYTE(v295.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v295.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v522, v295.__r_.__value_.__l.__data_, v295.__r_.__value_.__l.__size_);
  else
    v522 = v295;
  v521 = off_24C335B18;
  v524 = v297;
  v523 = v156;
  v525 = v298;
  v516 = (uint64_t (**)())off_24C335D90;
  v181 = SHIBYTE(v290.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v290.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v517, v290.__r_.__value_.__l.__data_, v290.__r_.__value_.__l.__size_);
  else
    v517 = v290;
  v516 = off_24C335B18;
  v519 = v292;
  v518 = v155;
  v520 = v293;
  v511 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v285.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v512, v285.__r_.__value_.__l.__data_, v285.__r_.__value_.__l.__size_);
  else
    v512 = v285;
  v513 = v286;
  v511 = &off_24C335AB8;
  v514 = v287;
  if (SHIBYTE(v288.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v515, v288.__r_.__value_.__l.__data_, v288.__r_.__value_.__l.__size_);
  else
    v515 = v288;
  v506 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v280.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v507, v280.__r_.__value_.__l.__data_, v280.__r_.__value_.__l.__size_);
  else
    v507 = v280;
  v508 = v281;
  v506 = &off_24C335AB8;
  v509 = v282;
  if (SHIBYTE(v283.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v510, v283.__r_.__value_.__l.__data_, v283.__r_.__value_.__l.__size_);
  else
    v510 = v283;
  v501 = (uint64_t (**)())off_24C335D90;
  v179 = SHIBYTE(v275.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v275.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v502, v275.__r_.__value_.__l.__data_, v275.__r_.__value_.__l.__size_);
  else
    v502 = v275;
  v501 = off_24C335B18;
  v504 = v277;
  v503 = v154;
  v505 = v278;
  v496 = (uint64_t (**)())off_24C335D90;
  v177 = SHIBYTE(v270.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v270.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v497, v270.__r_.__value_.__l.__data_, v270.__r_.__value_.__l.__size_);
  else
    v497 = v270;
  v496 = off_24C335B18;
  v499 = v272;
  v498 = v153;
  v500 = v273;
  v491 = (uint64_t (**)())off_24C335D90;
  v175 = SHIBYTE(v265.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v265.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v492, v265.__r_.__value_.__l.__data_, v265.__r_.__value_.__l.__size_);
  else
    v492 = v265;
  v491 = off_24C335B18;
  v494 = v267;
  v493 = v152;
  v495 = v268;
  v487 = (uint64_t (**)())off_24C335D90;
  v174 = SHIBYTE(v261.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v261.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v488, v261.__r_.__value_.__l.__data_, v261.__r_.__value_.__l.__size_);
  else
    v488 = v261;
  v489 = v151;
  v487 = off_24C335AF8;
  v490 = v150;
  v482 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v256.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v483, v256.__r_.__value_.__l.__data_, v256.__r_.__value_.__l.__size_);
  else
    v483 = v256;
  v484 = v257;
  v482 = &off_24C335AB8;
  v485 = v258;
  if (SHIBYTE(v259.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v486, v259.__r_.__value_.__l.__data_, v259.__r_.__value_.__l.__size_);
  else
    v486 = v259;
  v477 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v251.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v478, v251.__r_.__value_.__l.__data_, v251.__r_.__value_.__l.__size_);
  else
    v478 = v251;
  v479 = v252;
  v477 = &off_24C335AB8;
  v480 = v253;
  if (SHIBYTE(v254.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v481, v254.__r_.__value_.__l.__data_, v254.__r_.__value_.__l.__size_);
  else
    v481 = v254;
  v472 = (uint64_t (**)())off_24C335D90;
  v123 = SHIBYTE(v246.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v246.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v473, v246.__r_.__value_.__l.__data_, v246.__r_.__value_.__l.__size_);
  else
    v473 = v246;
  v472 = off_24C335B18;
  v475 = v248;
  v474 = v149;
  v476 = v249;
  v467 = (uint64_t (**)())off_24C335D90;
  v173 = SHIBYTE(v241.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v241.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v468, v241.__r_.__value_.__l.__data_, v241.__r_.__value_.__l.__size_);
  else
    v468 = v241;
  v467 = off_24C335B18;
  v470 = v243;
  v469 = v148;
  v471 = v244;
  v462 = (uint64_t (**)())off_24C335D90;
  v171 = SHIBYTE(v236.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v236.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v463, v236.__r_.__value_.__l.__data_, v236.__r_.__value_.__l.__size_);
  else
    v463 = v236;
  v462 = off_24C335B18;
  v465 = v238;
  v464 = v147;
  v466 = v239;
  v457 = (uint64_t (**)())off_24C335D90;
  v169 = SHIBYTE(v231.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v231.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v458, v231.__r_.__value_.__l.__data_, v231.__r_.__value_.__l.__size_);
  else
    v458 = v231;
  v457 = off_24C335B18;
  v460 = v233;
  v459 = v146;
  v461 = v234;
  v453 = (uint64_t (**)())off_24C335D90;
  v124 = SHIBYTE(v227.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v227.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v454, v227.__r_.__value_.__l.__data_, v227.__r_.__value_.__l.__size_);
  else
    v454 = v227;
  v167 = v124;
  v455 = v145;
  v453 = off_24C335AF8;
  v456 = v144;
  v449 = (uint64_t (**)())off_24C335D90;
  v165 = SHIBYTE(v223.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v223.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v450, v223.__r_.__value_.__l.__data_, v223.__r_.__value_.__l.__size_);
  else
    v450 = v223;
  v163 = v122;
  v451 = v143;
  v449 = off_24C335AF8;
  v452 = v142;
  v444 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v218.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v445, v218.__r_.__value_.__l.__data_, v218.__r_.__value_.__l.__size_);
  else
    v445 = v218;
  v446 = v219;
  v444 = &off_24C335AB8;
  v447 = v220;
  if (SHIBYTE(v221.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v448, v221.__r_.__value_.__l.__data_, v221.__r_.__value_.__l.__size_);
  else
    v448 = v221;
  v439 = (uint64_t (**)())off_24C335D90;
  v125 = SHIBYTE(v213.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v213.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v440, v213.__r_.__value_.__l.__data_, v213.__r_.__value_.__l.__size_);
  else
    v440 = v213;
  v439 = off_24C335B18;
  v442 = v215;
  v441 = v140;
  v443 = v216;
  v434 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v208.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v435, v208.__r_.__value_.__l.__data_, v208.__r_.__value_.__l.__size_);
  else
    v435 = v208;
  v436 = v209;
  v434 = &off_24C335AB8;
  v437 = v210;
  if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v438, v211.__r_.__value_.__l.__data_, v211.__r_.__value_.__l.__size_);
  else
    v438 = v211;
  v429 = (uint64_t (**)())off_24C335D90;
  v126 = SHIBYTE(v203.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v203.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v430, v203.__r_.__value_.__l.__data_, v203.__r_.__value_.__l.__size_);
  else
    v430 = v203;
  v429 = off_24C335B18;
  v432 = v205;
  v431 = v139;
  v433 = v206;
  v424 = (uint64_t (**)())off_24C335D90;
  v127 = SHIBYTE(v198.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v198.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v425, v198.__r_.__value_.__l.__data_, v198.__r_.__value_.__l.__size_);
  else
    v425 = v198;
  v424 = off_24C335B18;
  v427 = v200;
  v426 = v138;
  v428 = v201;
  v419 = (uint64_t (**)())off_24C335D90;
  v128 = SHIBYTE(v193.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v193.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v420, v193.__r_.__value_.__l.__data_, v193.__r_.__value_.__l.__size_);
  else
    v420 = v193;
  v419 = off_24C335B18;
  v422 = v195;
  v421 = v137;
  v423 = v196;
  v414 = (uint64_t (**)())off_24C335D90;
  v129 = SHIBYTE(v188.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v188.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v188.__r_.__value_.__l.__data_, v188.__r_.__value_.__l.__size_);
  else
    __p = v188;
  v414 = off_24C335B18;
  v417 = v190;
  v416 = v136;
  v418 = v191;
  v409 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v183.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v410, v183.__r_.__value_.__l.__data_, v183.__r_.__value_.__l.__size_);
  else
    v410 = v183;
  v411 = v184;
  v409 = &off_24C335AB8;
  v412 = v185;
  if (SHIBYTE(v186.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v413, v186.__r_.__value_.__l.__data_, v186.__r_.__value_.__l.__size_);
  else
    v413 = v186;
  mediaplatform::DatabaseColumnTuple<13ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(v63, (uint64_t)&v626, (uint64_t)&v621, (uint64_t)&v616, (uint64_t)&v611, (uint64_t)&v606, (uint64_t)&v601, (uint64_t)&v596, (uint64_t)&v591, (uint64_t)&v586, (uint64_t)&v581, (uint64_t)&v576, (uint64_t)&v571, (uint64_t)&v566, (uint64_t)&v561, (uint64_t)&v556, (uint64_t)&v551, (uint64_t)&v546, (uint64_t)&v541,
    (uint64_t)&v536,
    (uint64_t)&v531,
    (uint64_t)&v526,
    (uint64_t)&v521,
    (uint64_t)&v516,
    (uint64_t)&v511,
    (uint64_t)&v506,
    (uint64_t)&v501,
    (uint64_t)&v496,
    (uint64_t)&v491,
    (uint64_t)&v487,
    (uint64_t)&v482,
    (uint64_t)&v477,
    (uint64_t)&v472,
    (uint64_t)&v467,
    (uint64_t)&v462,
    (uint64_t)&v457,
    (uint64_t)&v453,
    (uint64_t)&v449,
    (uint64_t)&v444,
    (uint64_t)&v439,
    (uint64_t)&v434,
    (uint64_t)&v429,
    (uint64_t)&v424,
    (uint64_t)&v419,
    (uint64_t)&v414,
    (uint64_t)&v409);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v409);
  v414 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v419 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v420.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v420.__r_.__value_.__l.__data_);
  v424 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v425.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v425.__r_.__value_.__l.__data_);
  v429 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v430.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v430.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v434);
  v439 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v440.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v440.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v444);
  v449 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v450.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v450.__r_.__value_.__l.__data_);
  v453 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v454.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v454.__r_.__value_.__l.__data_);
  v457 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v458.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v458.__r_.__value_.__l.__data_);
  v462 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v463.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v463.__r_.__value_.__l.__data_);
  v467 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v468.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v468.__r_.__value_.__l.__data_);
  v472 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v473.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v473.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v477);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v482);
  v487 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v488.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v488.__r_.__value_.__l.__data_);
  v491 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v492.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v492.__r_.__value_.__l.__data_);
  v496 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v497.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v497.__r_.__value_.__l.__data_);
  v501 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v502.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v502.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v506);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v511);
  v516 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v517.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v517.__r_.__value_.__l.__data_);
  v521 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v522.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v522.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v526);
  v531 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v532.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v532.__r_.__value_.__l.__data_);
  v536 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v537.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v537.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v541);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v546);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v551);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v556);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v561);
  v566 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v567.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v567.__r_.__value_.__l.__data_);
  v571 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v572.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v572.__r_.__value_.__l.__data_);
  v576 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v577.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v577.__r_.__value_.__l.__data_);
  v581 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v582.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v582.__r_.__value_.__l.__data_);
  v586 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v587.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v587.__r_.__value_.__l.__data_);
  v591 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v592.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v592.__r_.__value_.__l.__data_);
  v596 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v597.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v597.__r_.__value_.__l.__data_);
  v601 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v602.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v602.__r_.__value_.__l.__data_);
  v606 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v607.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v607.__r_.__value_.__l.__data_);
  v611 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v612.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v612.__r_.__value_.__l.__data_);
  v616 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v617.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v617.__r_.__value_.__l.__data_);
  v621 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v622.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v622.__r_.__value_.__l.__data_);
  v626 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v627.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v627.__r_.__value_.__l.__data_);
  *(_QWORD *)(v63 + 2368) = off_24C335D90;
  v130 = (std::string *)(v63 + 2376);
  v131 = SHIBYTE(v405.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v405.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v130, v405.__r_.__value_.__l.__data_, v405.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v130->__r_.__value_.__l.__data_ = *(_OWORD *)&v405.__r_.__value_.__l.__data_;
    *(_QWORD *)(v63 + 2392) = *((_QWORD *)&v405.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(v63 + 2400) = v406;
  *(_QWORD *)(v63 + 2368) = off_24C335B18;
  *(_QWORD *)(v63 + 2404) = v407;
  *(_DWORD *)(v63 + 2412) = v408;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v182);
  v187 = (uint64_t (**)())off_24C335D90;
  if (v129 < 0)
    operator delete(v188.__r_.__value_.__l.__data_);
  v192 = (uint64_t (**)())off_24C335D90;
  if (v128 < 0)
    operator delete(v193.__r_.__value_.__l.__data_);
  v197 = (uint64_t (**)())off_24C335D90;
  if (v127 < 0)
    operator delete(v198.__r_.__value_.__l.__data_);
  v202 = (uint64_t (**)())off_24C335D90;
  if (v126 < 0)
    operator delete(v203.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v207);
  v212 = (uint64_t (**)())off_24C335D90;
  if (v125 < 0)
    operator delete(v213.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v217);
  v222 = (uint64_t (**)())off_24C335D90;
  if (v165 < 0)
    operator delete(v223.__r_.__value_.__l.__data_);
  v226 = (uint64_t (**)())off_24C335D90;
  if (v167 < 0)
    operator delete(v227.__r_.__value_.__l.__data_);
  v230 = (uint64_t (**)())off_24C335D90;
  if (v169 < 0)
    operator delete(v231.__r_.__value_.__l.__data_);
  v235 = (uint64_t (**)())off_24C335D90;
  if (v171 < 0)
    operator delete(v236.__r_.__value_.__l.__data_);
  v240 = (uint64_t (**)())off_24C335D90;
  if (v173 < 0)
    operator delete(v241.__r_.__value_.__l.__data_);
  v245 = (uint64_t (**)())off_24C335D90;
  if (v123 < 0)
    operator delete(v246.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v250);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v255);
  if (v174 < 0)
    operator delete(v261.__r_.__value_.__l.__data_);
  if (v175 < 0)
    operator delete(v265.__r_.__value_.__l.__data_);
  if (v177 < 0)
    operator delete(v270.__r_.__value_.__l.__data_);
  if (v179 < 0)
    operator delete(v275.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v279);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v284);
  if (v181 < 0)
  {
    operator delete(v290.__r_.__value_.__l.__data_);
    if ((v163 & 0x80000000) == 0)
      goto LABEL_451;
  }
  else if ((v163 & 0x80000000) == 0)
  {
    goto LABEL_451;
  }
  operator delete(v295.__r_.__value_.__l.__data_);
LABEL_451:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v299);
  if (SHIBYTE(v305.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v305.__r_.__value_.__l.__data_);
  if (SHIBYTE(v310.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v310.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v314);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v319);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v324);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v329);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v334);
  if (SHIBYTE(v340.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v340.__r_.__value_.__l.__data_);
  if (SHIBYTE(v345.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v345.__r_.__value_.__l.__data_);
  if (SHIBYTE(v350.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v350.__r_.__value_.__l.__data_);
  if (SHIBYTE(v355.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v355.__r_.__value_.__l.__data_);
  if (SHIBYTE(v360.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v360.__r_.__value_.__l.__data_);
  if (SHIBYTE(v365.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v365.__r_.__value_.__l.__data_);
  if (SHIBYTE(v370.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v370.__r_.__value_.__l.__data_);
  if (SHIBYTE(v375.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v375.__r_.__value_.__l.__data_);
  if (SHIBYTE(v380.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v380.__r_.__value_.__l.__data_);
  if (SHIBYTE(v385.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v385.__r_.__value_.__l.__data_);
  if (SHIBYTE(v390.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v390.__r_.__value_.__l.__data_);
  if (SHIBYTE(v395.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v395.__r_.__value_.__l.__data_);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__s.__r_.__value_.__l.__data_);
    if ((v131 & 0x80000000) == 0)
      goto LABEL_481;
  }
  else if ((v131 & 0x80000000) == 0)
  {
    goto LABEL_481;
  }
  operator delete(v405.__r_.__value_.__l.__data_);
LABEL_481:
  *(_QWORD *)(v63 + 2416) = off_24C335D90;
  v132 = (std::string *)(v63 + 2424);
  if (*(char *)(v141 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v132, *(const std::string::value_type **)(v141 + 8), *(_QWORD *)(v141 + 16));
  }
  else
  {
    v133 = *(_OWORD *)(v141 + 8);
    *(_QWORD *)(v63 + 2440) = *(_QWORD *)(v141 + 24);
    *(_OWORD *)&v132->__r_.__value_.__l.__data_ = v133;
  }
  *(_DWORD *)(v63 + 2448) = *(_DWORD *)(v141 + 32);
  *(_QWORD *)(v63 + 2416) = off_24C335B18;
  v134 = *(_QWORD *)(v141 + 36);
  *(_DWORD *)(v63 + 2460) = *(_DWORD *)(v141 + 44);
  *(_QWORD *)(v63 + 2452) = v134;
  return v63;
}

void sub_20A8945DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  mediaplatform::DatabaseColumnTuple<12ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(v1);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<12ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 2368) = off_24C335D90;
  if (*(char *)(a1 + 2399) < 0)
    operator delete(*(void **)(a1 + 2376));
  *(_QWORD *)(a1 + 2320) = off_24C335D90;
  if (*(char *)(a1 + 2351) < 0)
    operator delete(*(void **)(a1 + 2328));
  *(_QWORD *)(a1 + 2272) = off_24C335D90;
  if (*(char *)(a1 + 2303) < 0)
    operator delete(*(void **)(a1 + 2280));
  *(_QWORD *)(a1 + 2224) = off_24C335D90;
  if (*(char *)(a1 + 2255) < 0)
    operator delete(*(void **)(a1 + 2232));
  *(_QWORD *)(a1 + 2176) = off_24C335D90;
  if (*(char *)(a1 + 2207) < 0)
    operator delete(*(void **)(a1 + 2184));
  return mediaplatform::DatabaseColumnTuple<17ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<13ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  std::string *v125;
  int v126;
  std::string *v127;
  __int128 v128;
  uint64_t v129;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  uint64_t v136;
  int v137;
  uint64_t v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  uint64_t v144;
  int v145;
  int v146;
  int v147;
  int v148;
  uint64_t v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  uint64_t v174;
  uint64_t (**v175)();
  std::string v176;
  int v177;
  char v178;
  std::string v179;
  uint64_t (**v180)();
  std::string v181;
  int v182;
  uint64_t v183;
  int v184;
  uint64_t (**v185)();
  std::string v186;
  int v187;
  uint64_t v188;
  int v189;
  uint64_t (**v190)();
  std::string v191;
  int v192;
  uint64_t v193;
  int v194;
  uint64_t (**v195)();
  std::string v196;
  int v197;
  uint64_t v198;
  int v199;
  uint64_t (**v200)();
  std::string v201;
  int v202;
  char v203;
  std::string v204;
  uint64_t (**v205)();
  std::string v206;
  int v207;
  uint64_t v208;
  int v209;
  uint64_t (**v210)();
  std::string v211;
  int v212;
  char v213;
  std::string v214;
  uint64_t (**v215)();
  std::string v216;
  int v217;
  uint64_t v218;
  uint64_t (**v219)();
  std::string v220;
  int v221;
  uint64_t v222;
  uint64_t (**v223)();
  std::string v224;
  int v225;
  uint64_t v226;
  int v227;
  uint64_t (**v228)();
  std::string v229;
  int v230;
  uint64_t v231;
  int v232;
  uint64_t (**v233)();
  std::string v234;
  int v235;
  uint64_t v236;
  int v237;
  uint64_t (**v238)();
  std::string v239;
  int v240;
  uint64_t v241;
  int v242;
  uint64_t (**v243)();
  std::string v244;
  int v245;
  char v246;
  std::string v247;
  uint64_t (**v248)();
  std::string v249;
  int v250;
  char v251;
  std::string v252;
  uint64_t (**v253)();
  std::string v254;
  int v255;
  uint64_t v256;
  uint64_t (**v257)();
  std::string v258;
  int v259;
  uint64_t v260;
  int v261;
  uint64_t (**v262)();
  std::string v263;
  int v264;
  uint64_t v265;
  int v266;
  uint64_t (**v267)();
  std::string v268;
  int v269;
  uint64_t v270;
  int v271;
  uint64_t (**v272)();
  std::string v273;
  int v274;
  char v275;
  std::string v276;
  uint64_t (**v277)();
  std::string v278;
  int v279;
  char v280;
  std::string v281;
  uint64_t (**v282)();
  std::string v283;
  int v284;
  uint64_t v285;
  int v286;
  uint64_t (**v287)();
  std::string v288;
  int v289;
  uint64_t v290;
  int v291;
  uint64_t (**v292)();
  std::string v293;
  int v294;
  char v295;
  std::string v296;
  uint64_t (**v297)();
  std::string v298;
  int v299;
  uint64_t v300;
  int v301;
  uint64_t (**v302)();
  std::string v303;
  int v304;
  uint64_t v305;
  int v306;
  uint64_t (**v307)();
  std::string v308;
  int v309;
  char v310;
  std::string v311;
  uint64_t (**v312)();
  std::string v313;
  int v314;
  char v315;
  std::string v316;
  uint64_t (**v317)();
  std::string v318;
  int v319;
  char v320;
  std::string v321;
  uint64_t (**v322)();
  std::string v323;
  int v324;
  char v325;
  std::string v326;
  uint64_t (**v327)();
  std::string v328;
  int v329;
  char v330;
  std::string v331;
  uint64_t (**v332)();
  std::string v333;
  int v334;
  uint64_t v335;
  int v336;
  uint64_t (**v337)();
  std::string v338;
  int v339;
  uint64_t v340;
  int v341;
  uint64_t (**v342)();
  std::string v343;
  int v344;
  uint64_t v345;
  int v346;
  uint64_t (**v347)();
  std::string v348;
  int v349;
  uint64_t v350;
  int v351;
  uint64_t (**v352)();
  std::string v353;
  int v354;
  uint64_t v355;
  int v356;
  uint64_t (**v357)();
  std::string v358;
  int v359;
  uint64_t v360;
  int v361;
  uint64_t (**v362)();
  std::string v363;
  int v364;
  uint64_t v365;
  int v366;
  uint64_t (**v367)();
  std::string v368;
  int v369;
  uint64_t v370;
  int v371;
  uint64_t (**v372)();
  std::string v373;
  int v374;
  uint64_t v375;
  int v376;
  uint64_t (**v377)();
  std::string v378;
  int v379;
  uint64_t v380;
  int v381;
  uint64_t (**v382)();
  std::string __s;
  int v384;
  uint64_t v385;
  int v386;
  uint64_t (**v387)();
  std::string v388;
  int v389;
  uint64_t v390;
  int v391;
  uint64_t (**v392)();
  std::string v393;
  int v394;
  char v395;
  std::string v396;
  uint64_t (**v397)();
  std::string __p;
  int v399;
  uint64_t v400;
  int v401;
  uint64_t (**v402)();
  std::string v403;
  int v404;
  uint64_t v405;
  int v406;
  uint64_t (**v407)();
  std::string v408;
  int v409;
  uint64_t v410;
  int v411;
  uint64_t (**v412)();
  std::string v413;
  int v414;
  uint64_t v415;
  int v416;
  uint64_t (**v417)();
  std::string v418;
  int v419;
  char v420;
  std::string v421;
  uint64_t (**v422)();
  std::string v423;
  int v424;
  uint64_t v425;
  int v426;
  uint64_t (**v427)();
  std::string v428;
  int v429;
  char v430;
  std::string v431;
  uint64_t (**v432)();
  std::string v433;
  int v434;
  uint64_t v435;
  uint64_t (**v436)();
  std::string v437;
  int v438;
  uint64_t v439;
  uint64_t (**v440)();
  std::string v441;
  int v442;
  uint64_t v443;
  int v444;
  uint64_t (**v445)();
  std::string v446;
  int v447;
  uint64_t v448;
  int v449;
  uint64_t (**v450)();
  std::string v451;
  int v452;
  uint64_t v453;
  int v454;
  uint64_t (**v455)();
  std::string v456;
  int v457;
  uint64_t v458;
  int v459;
  uint64_t (**v460)();
  std::string v461;
  int v462;
  char v463;
  std::string v464;
  uint64_t (**v465)();
  std::string v466;
  int v467;
  char v468;
  std::string v469;
  uint64_t (**v470)();
  std::string v471;
  int v472;
  uint64_t v473;
  uint64_t (**v474)();
  std::string v475;
  int v476;
  uint64_t v477;
  int v478;
  uint64_t (**v479)();
  std::string v480;
  int v481;
  uint64_t v482;
  int v483;
  uint64_t (**v484)();
  std::string v485;
  int v486;
  uint64_t v487;
  int v488;
  uint64_t (**v489)();
  std::string v490;
  int v491;
  char v492;
  std::string v493;
  uint64_t (**v494)();
  std::string v495;
  int v496;
  char v497;
  std::string v498;
  uint64_t (**v499)();
  std::string v500;
  int v501;
  uint64_t v502;
  int v503;
  uint64_t (**v504)();
  std::string v505;
  int v506;
  uint64_t v507;
  int v508;
  uint64_t (**v509)();
  std::string v510;
  int v511;
  char v512;
  std::string v513;
  uint64_t (**v514)();
  std::string v515;
  int v516;
  uint64_t v517;
  int v518;
  uint64_t (**v519)();
  std::string v520;
  int v521;
  uint64_t v522;
  int v523;
  uint64_t (**v524)();
  std::string v525;
  int v526;
  char v527;
  std::string v528;
  uint64_t (**v529)();
  std::string v530;
  int v531;
  char v532;
  std::string v533;
  uint64_t (**v534)();
  std::string v535;
  int v536;
  char v537;
  std::string v538;
  uint64_t (**v539)();
  std::string v540;
  int v541;
  char v542;
  std::string v543;
  uint64_t (**v544)();
  std::string v545;
  int v546;
  char v547;
  std::string v548;
  uint64_t (**v549)();
  std::string v550;
  int v551;
  uint64_t v552;
  int v553;
  uint64_t (**v554)();
  std::string v555;
  int v556;
  uint64_t v557;
  int v558;
  uint64_t (**v559)();
  std::string v560;
  int v561;
  uint64_t v562;
  int v563;
  uint64_t (**v564)();
  std::string v565;
  int v566;
  uint64_t v567;
  int v568;
  uint64_t (**v569)();
  std::string v570;
  int v571;
  uint64_t v572;
  int v573;
  uint64_t (**v574)();
  std::string v575;
  int v576;
  uint64_t v577;
  int v578;
  uint64_t (**v579)();
  std::string v580;
  int v581;
  uint64_t v582;
  int v583;
  uint64_t (**v584)();
  std::string v585;
  int v586;
  uint64_t v587;
  int v588;
  uint64_t (**v589)();
  std::string v590;
  int v591;
  uint64_t v592;
  int v593;
  uint64_t (**v594)();
  std::string v595;
  int v596;
  uint64_t v597;
  int v598;
  uint64_t (**v599)();
  std::string v600;
  int v601;
  uint64_t v602;
  int v603;

  v46 = MEMORY[0x24BDAC7A8](a1);
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v55 = v54;
  v57 = v56;
  v58 = v47;
  v60 = v59;
  v174 = v46;
  if (*(char *)(v47 + 31) < 0)
    std::string::__init_copy_ctor_external(&v388, *(const std::string::value_type **)(v47 + 8), *(_QWORD *)(v47 + 16));
  else
    v388 = *(std::string *)(v47 + 8);
  v61 = *(_DWORD *)(v58 + 32);
  v387 = off_24C335B18;
  v390 = *(_QWORD *)(v58 + 36);
  v62 = *(_DWORD *)(v58 + 44);
  v389 = v61;
  v391 = v62;
  if (*(char *)(v57 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(v57 + 8), *(_QWORD *)(v57 + 16));
  else
    __s = *(std::string *)(v57 + 8);
  v63 = *(_DWORD *)(v57 + 32);
  v382 = off_24C335B18;
  v385 = *(_QWORD *)(v57 + 36);
  v64 = *(_DWORD *)(v57 + 44);
  v384 = v63;
  v386 = v64;
  v149 = v60;
  if (*(char *)(v55 + 31) < 0)
    std::string::__init_copy_ctor_external(&v378, *(const std::string::value_type **)(v55 + 8), *(_QWORD *)(v55 + 16));
  else
    v378 = *(std::string *)(v55 + 8);
  v65 = *(_DWORD *)(v55 + 32);
  v377 = off_24C335B18;
  v380 = *(_QWORD *)(v55 + 36);
  v66 = *(_DWORD *)(v55 + 44);
  v379 = v65;
  v381 = v66;
  if (*(char *)(v53 + 31) < 0)
    std::string::__init_copy_ctor_external(&v373, *(const std::string::value_type **)(v53 + 8), *(_QWORD *)(v53 + 16));
  else
    v373 = *(std::string *)(v53 + 8);
  v67 = *(_DWORD *)(v53 + 32);
  v372 = off_24C335B18;
  v375 = *(_QWORD *)(v53 + 36);
  v68 = *(_DWORD *)(v53 + 44);
  v374 = v67;
  v376 = v68;
  v171 = v65;
  if (*(char *)(v51 + 31) < 0)
    std::string::__init_copy_ctor_external(&v368, *(const std::string::value_type **)(v51 + 8), *(_QWORD *)(v51 + 16));
  else
    v368 = *(std::string *)(v51 + 8);
  v69 = *(_DWORD *)(v51 + 32);
  v367 = off_24C335B18;
  v370 = *(_QWORD *)(v51 + 36);
  v70 = *(_DWORD *)(v51 + 44);
  v369 = v69;
  v371 = v70;
  if (*(char *)(v49 + 31) < 0)
    std::string::__init_copy_ctor_external(&v363, *(const std::string::value_type **)(v49 + 8), *(_QWORD *)(v49 + 16));
  else
    v363 = *(std::string *)(v49 + 8);
  v71 = *(_DWORD *)(v49 + 32);
  v362 = off_24C335B18;
  v365 = *(_QWORD *)(v49 + 36);
  v72 = *(_DWORD *)(v49 + 44);
  v168 = v71;
  v364 = v71;
  v366 = v72;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v358, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v358 = *(std::string *)(a9 + 8);
  v73 = *(_DWORD *)(a9 + 32);
  v357 = off_24C335B18;
  v360 = *(_QWORD *)(a9 + 36);
  v74 = *(_DWORD *)(a9 + 44);
  v165 = v73;
  v359 = v73;
  v361 = v74;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v353, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v353 = *(std::string *)(a10 + 8);
  v75 = *(_DWORD *)(a10 + 32);
  v352 = off_24C335B18;
  v355 = *(_QWORD *)(a10 + 36);
  v76 = *(_DWORD *)(a10 + 44);
  v163 = v75;
  v354 = v75;
  v356 = v76;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v348, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v348 = *(std::string *)(a11 + 8);
  v77 = *(_DWORD *)(a11 + 32);
  v347 = off_24C335B18;
  v350 = *(_QWORD *)(a11 + 36);
  v78 = *(_DWORD *)(a11 + 44);
  v161 = v77;
  v349 = v77;
  v351 = v78;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v343, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v343 = *(std::string *)(a12 + 8);
  v79 = *(_DWORD *)(a12 + 32);
  v342 = off_24C335B18;
  v345 = *(_QWORD *)(a12 + 36);
  v80 = *(_DWORD *)(a12 + 44);
  v158 = v79;
  v344 = v79;
  v346 = v80;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v338, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v338 = *(std::string *)(a13 + 8);
  v81 = *(_DWORD *)(a13 + 32);
  v337 = off_24C335B18;
  v340 = *(_QWORD *)(a13 + 36);
  v82 = *(_DWORD *)(a13 + 44);
  v156 = v81;
  v339 = v81;
  v341 = v82;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v333, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v333 = *(std::string *)(a14 + 8);
  v83 = *(_DWORD *)(a14 + 32);
  v332 = off_24C335B18;
  v335 = *(_QWORD *)(a14 + 36);
  v84 = *(_DWORD *)(a14 + 44);
  v154 = v83;
  v334 = v83;
  v336 = v84;
  v327 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v328, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v328 = *(std::string *)(a15 + 8);
  v329 = *(_DWORD *)(a15 + 32);
  v327 = &off_24C335AB8;
  v330 = *(_BYTE *)(a15 + 36);
  if (*(char *)(a15 + 63) < 0)
    std::string::__init_copy_ctor_external(&v331, *(const std::string::value_type **)(a15 + 40), *(_QWORD *)(a15 + 48));
  else
    v331 = *(std::string *)(a15 + 40);
  v322 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v323, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v323 = *(std::string *)(a16 + 8);
  v324 = *(_DWORD *)(a16 + 32);
  v322 = &off_24C335AB8;
  v325 = *(_BYTE *)(a16 + 36);
  if (*(char *)(a16 + 63) < 0)
    std::string::__init_copy_ctor_external(&v326, *(const std::string::value_type **)(a16 + 40), *(_QWORD *)(a16 + 48));
  else
    v326 = *(std::string *)(a16 + 40);
  v317 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v318, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v318 = *(std::string *)(a17 + 8);
  v319 = *(_DWORD *)(a17 + 32);
  v317 = &off_24C335AB8;
  v320 = *(_BYTE *)(a17 + 36);
  if (*(char *)(a17 + 63) < 0)
    std::string::__init_copy_ctor_external(&v321, *(const std::string::value_type **)(a17 + 40), *(_QWORD *)(a17 + 48));
  else
    v321 = *(std::string *)(a17 + 40);
  v312 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v313, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v313 = *(std::string *)(a18 + 8);
  v314 = *(_DWORD *)(a18 + 32);
  v312 = &off_24C335AB8;
  v315 = *(_BYTE *)(a18 + 36);
  if (*(char *)(a18 + 63) < 0)
    std::string::__init_copy_ctor_external(&v316, *(const std::string::value_type **)(a18 + 40), *(_QWORD *)(a18 + 48));
  else
    v316 = *(std::string *)(a18 + 40);
  v307 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v308, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v308 = *(std::string *)(a19 + 8);
  v309 = *(_DWORD *)(a19 + 32);
  v307 = &off_24C335AB8;
  v310 = *(_BYTE *)(a19 + 36);
  if (*(char *)(a19 + 63) < 0)
    std::string::__init_copy_ctor_external(&v311, *(const std::string::value_type **)(a19 + 40), *(_QWORD *)(a19 + 48));
  else
    v311 = *(std::string *)(a19 + 40);
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v303, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v303 = *(std::string *)(a20 + 8);
  v85 = *(_DWORD *)(a20 + 32);
  v302 = off_24C335B18;
  v305 = *(_QWORD *)(a20 + 36);
  v86 = *(_DWORD *)(a20 + 44);
  v153 = v85;
  v304 = v85;
  v306 = v86;
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v298, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v298 = *(std::string *)(a21 + 8);
  v87 = *(_DWORD *)(a21 + 32);
  v297 = off_24C335B18;
  v300 = *(_QWORD *)(a21 + 36);
  v88 = *(_DWORD *)(a21 + 44);
  v152 = v87;
  v299 = v87;
  v301 = v88;
  v292 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v293, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v293 = *(std::string *)(a22 + 8);
  v294 = *(_DWORD *)(a22 + 32);
  v292 = &off_24C335AB8;
  v295 = *(_BYTE *)(a22 + 36);
  if (*(char *)(a22 + 63) < 0)
    std::string::__init_copy_ctor_external(&v296, *(const std::string::value_type **)(a22 + 40), *(_QWORD *)(a22 + 48));
  else
    v296 = *(std::string *)(a22 + 40);
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v288, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v288 = *(std::string *)(a23 + 8);
  v89 = *(_DWORD *)(a23 + 32);
  v287 = off_24C335B18;
  v290 = *(_QWORD *)(a23 + 36);
  v90 = *(_DWORD *)(a23 + 44);
  v151 = v89;
  v289 = v89;
  v291 = v90;
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v283, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v283 = *(std::string *)(a24 + 8);
  v91 = *(_DWORD *)(a24 + 32);
  v282 = off_24C335B18;
  v285 = *(_QWORD *)(a24 + 36);
  v92 = *(_DWORD *)(a24 + 44);
  v150 = v91;
  v284 = v91;
  v286 = v92;
  v277 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a25 + 31) < 0)
    std::string::__init_copy_ctor_external(&v278, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  else
    v278 = *(std::string *)(a25 + 8);
  v279 = *(_DWORD *)(a25 + 32);
  v277 = &off_24C335AB8;
  v280 = *(_BYTE *)(a25 + 36);
  if (*(char *)(a25 + 63) < 0)
    std::string::__init_copy_ctor_external(&v281, *(const std::string::value_type **)(a25 + 40), *(_QWORD *)(a25 + 48));
  else
    v281 = *(std::string *)(a25 + 40);
  v272 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v273, *(const std::string::value_type **)(a26 + 8), *(_QWORD *)(a26 + 16));
  else
    v273 = *(std::string *)(a26 + 8);
  v274 = *(_DWORD *)(a26 + 32);
  v272 = &off_24C335AB8;
  v275 = *(_BYTE *)(a26 + 36);
  if (*(char *)(a26 + 63) < 0)
    std::string::__init_copy_ctor_external(&v276, *(const std::string::value_type **)(a26 + 40), *(_QWORD *)(a26 + 48));
  else
    v276 = *(std::string *)(a26 + 40);
  if (*(char *)(a27 + 31) < 0)
    std::string::__init_copy_ctor_external(&v268, *(const std::string::value_type **)(a27 + 8), *(_QWORD *)(a27 + 16));
  else
    v268 = *(std::string *)(a27 + 8);
  v93 = *(_DWORD *)(a27 + 32);
  v267 = off_24C335B18;
  v270 = *(_QWORD *)(a27 + 36);
  v94 = *(_DWORD *)(a27 + 44);
  v148 = v93;
  v269 = v93;
  v271 = v94;
  if (*(char *)(a28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v263, *(const std::string::value_type **)(a28 + 8), *(_QWORD *)(a28 + 16));
  else
    v263 = *(std::string *)(a28 + 8);
  v95 = *(_DWORD *)(a28 + 32);
  v262 = off_24C335B18;
  v265 = *(_QWORD *)(a28 + 36);
  v96 = *(_DWORD *)(a28 + 44);
  v147 = v95;
  v264 = v95;
  v266 = v96;
  if (*(char *)(a29 + 31) < 0)
    std::string::__init_copy_ctor_external(&v258, *(const std::string::value_type **)(a29 + 8), *(_QWORD *)(a29 + 16));
  else
    v258 = *(std::string *)(a29 + 8);
  v97 = *(_DWORD *)(a29 + 32);
  v257 = off_24C335B18;
  v260 = *(_QWORD *)(a29 + 36);
  v98 = *(_DWORD *)(a29 + 44);
  v146 = v97;
  v259 = v97;
  v261 = v98;
  if (*(char *)(a30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v254, *(const std::string::value_type **)(a30 + 8), *(_QWORD *)(a30 + 16));
  else
    v254 = *(std::string *)(a30 + 8);
  v145 = *(_DWORD *)(a30 + 32);
  v255 = v145;
  v253 = off_24C335AF8;
  v144 = *(_QWORD *)(a30 + 36);
  v256 = v144;
  v248 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a31 + 31) < 0)
    std::string::__init_copy_ctor_external(&v249, *(const std::string::value_type **)(a31 + 8), *(_QWORD *)(a31 + 16));
  else
    v249 = *(std::string *)(a31 + 8);
  v250 = *(_DWORD *)(a31 + 32);
  v248 = &off_24C335AB8;
  v251 = *(_BYTE *)(a31 + 36);
  if (*(char *)(a31 + 63) < 0)
    std::string::__init_copy_ctor_external(&v252, *(const std::string::value_type **)(a31 + 40), *(_QWORD *)(a31 + 48));
  else
    v252 = *(std::string *)(a31 + 40);
  v243 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a32 + 31) < 0)
    std::string::__init_copy_ctor_external(&v244, *(const std::string::value_type **)(a32 + 8), *(_QWORD *)(a32 + 16));
  else
    v244 = *(std::string *)(a32 + 8);
  v245 = *(_DWORD *)(a32 + 32);
  v243 = &off_24C335AB8;
  v246 = *(_BYTE *)(a32 + 36);
  if (*(char *)(a32 + 63) < 0)
    std::string::__init_copy_ctor_external(&v247, *(const std::string::value_type **)(a32 + 40), *(_QWORD *)(a32 + 48));
  else
    v247 = *(std::string *)(a32 + 40);
  if (*(char *)(a33 + 31) < 0)
    std::string::__init_copy_ctor_external(&v239, *(const std::string::value_type **)(a33 + 8), *(_QWORD *)(a33 + 16));
  else
    v239 = *(std::string *)(a33 + 8);
  v99 = *(_DWORD *)(a33 + 32);
  v238 = off_24C335B18;
  v241 = *(_QWORD *)(a33 + 36);
  v100 = *(_DWORD *)(a33 + 44);
  v143 = v99;
  v240 = v99;
  v242 = v100;
  if (*(char *)(a34 + 31) < 0)
    std::string::__init_copy_ctor_external(&v234, *(const std::string::value_type **)(a34 + 8), *(_QWORD *)(a34 + 16));
  else
    v234 = *(std::string *)(a34 + 8);
  v101 = *(_DWORD *)(a34 + 32);
  v233 = off_24C335B18;
  v236 = *(_QWORD *)(a34 + 36);
  v102 = *(_DWORD *)(a34 + 44);
  v142 = v101;
  v235 = v101;
  v237 = v102;
  if (*(char *)(a35 + 31) < 0)
    std::string::__init_copy_ctor_external(&v229, *(const std::string::value_type **)(a35 + 8), *(_QWORD *)(a35 + 16));
  else
    v229 = *(std::string *)(a35 + 8);
  v103 = *(_DWORD *)(a35 + 32);
  v228 = off_24C335B18;
  v231 = *(_QWORD *)(a35 + 36);
  v104 = *(_DWORD *)(a35 + 44);
  v141 = v103;
  v230 = v103;
  v232 = v104;
  if (*(char *)(a36 + 31) < 0)
    std::string::__init_copy_ctor_external(&v224, *(const std::string::value_type **)(a36 + 8), *(_QWORD *)(a36 + 16));
  else
    v224 = *(std::string *)(a36 + 8);
  v105 = *(_DWORD *)(a36 + 32);
  v223 = off_24C335B18;
  v226 = *(_QWORD *)(a36 + 36);
  v106 = *(_DWORD *)(a36 + 44);
  v140 = v105;
  v225 = v105;
  v227 = v106;
  if (*(char *)(a37 + 31) < 0)
    std::string::__init_copy_ctor_external(&v220, *(const std::string::value_type **)(a37 + 8), *(_QWORD *)(a37 + 16));
  else
    v220 = *(std::string *)(a37 + 8);
  v139 = *(_DWORD *)(a37 + 32);
  v221 = v139;
  v219 = off_24C335AF8;
  v138 = *(_QWORD *)(a37 + 36);
  v222 = v138;
  v215 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a38 + 31) < 0)
    std::string::__init_copy_ctor_external(&v216, *(const std::string::value_type **)(a38 + 8), *(_QWORD *)(a38 + 16));
  else
    v216 = *(std::string *)(a38 + 8);
  v137 = *(_DWORD *)(a38 + 32);
  v217 = v137;
  v215 = off_24C335AF8;
  v136 = *(_QWORD *)(a38 + 36);
  v218 = v136;
  v210 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a39 + 31) < 0)
    std::string::__init_copy_ctor_external(&v211, *(const std::string::value_type **)(a39 + 8), *(_QWORD *)(a39 + 16));
  else
    v211 = *(std::string *)(a39 + 8);
  v212 = *(_DWORD *)(a39 + 32);
  v210 = &off_24C335AB8;
  v213 = *(_BYTE *)(a39 + 36);
  if (*(char *)(a39 + 63) < 0)
    std::string::__init_copy_ctor_external(&v214, *(const std::string::value_type **)(a39 + 40), *(_QWORD *)(a39 + 48));
  else
    v214 = *(std::string *)(a39 + 40);
  v205 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a40 + 31) < 0)
    std::string::__init_copy_ctor_external(&v206, *(const std::string::value_type **)(a40 + 8), *(_QWORD *)(a40 + 16));
  else
    v206 = *(std::string *)(a40 + 8);
  v107 = *(_DWORD *)(a40 + 32);
  v205 = off_24C335B18;
  v208 = *(_QWORD *)(a40 + 36);
  v108 = *(_DWORD *)(a40 + 44);
  v135 = v107;
  v207 = v107;
  v209 = v108;
  v200 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a41 + 31) < 0)
    std::string::__init_copy_ctor_external(&v201, *(const std::string::value_type **)(a41 + 8), *(_QWORD *)(a41 + 16));
  else
    v201 = *(std::string *)(a41 + 8);
  v202 = *(_DWORD *)(a41 + 32);
  v200 = &off_24C335AB8;
  v203 = *(_BYTE *)(a41 + 36);
  if (*(char *)(a41 + 63) < 0)
    std::string::__init_copy_ctor_external(&v204, *(const std::string::value_type **)(a41 + 40), *(_QWORD *)(a41 + 48));
  else
    v204 = *(std::string *)(a41 + 40);
  v195 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a42 + 31) < 0)
    std::string::__init_copy_ctor_external(&v196, *(const std::string::value_type **)(a42 + 8), *(_QWORD *)(a42 + 16));
  else
    v196 = *(std::string *)(a42 + 8);
  v109 = *(_DWORD *)(a42 + 32);
  v195 = off_24C335B18;
  v198 = *(_QWORD *)(a42 + 36);
  v110 = *(_DWORD *)(a42 + 44);
  v134 = v109;
  v197 = v109;
  v199 = v110;
  v190 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a43 + 31) < 0)
    std::string::__init_copy_ctor_external(&v191, *(const std::string::value_type **)(a43 + 8), *(_QWORD *)(a43 + 16));
  else
    v191 = *(std::string *)(a43 + 8);
  v111 = *(_DWORD *)(a43 + 32);
  v190 = off_24C335B18;
  v193 = *(_QWORD *)(a43 + 36);
  v112 = *(_DWORD *)(a43 + 44);
  v133 = v111;
  v192 = v111;
  v194 = v112;
  v185 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a44 + 31) < 0)
    std::string::__init_copy_ctor_external(&v186, *(const std::string::value_type **)(a44 + 8), *(_QWORD *)(a44 + 16));
  else
    v186 = *(std::string *)(a44 + 8);
  v113 = *(_DWORD *)(a44 + 32);
  v185 = off_24C335B18;
  v188 = *(_QWORD *)(a44 + 36);
  v114 = *(_DWORD *)(a44 + 44);
  v132 = v113;
  v187 = v113;
  v189 = v114;
  v180 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a45 + 31) < 0)
    std::string::__init_copy_ctor_external(&v181, *(const std::string::value_type **)(a45 + 8), *(_QWORD *)(a45 + 16));
  else
    v181 = *(std::string *)(a45 + 8);
  v131 = *(_DWORD *)(a45 + 32);
  v182 = v131;
  v180 = off_24C335B18;
  v183 = *(_QWORD *)(a45 + 36);
  v184 = *(_DWORD *)(a45 + 44);
  v175 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a46 + 31) < 0)
    std::string::__init_copy_ctor_external(&v176, *(const std::string::value_type **)(a46 + 8), *(_QWORD *)(a46 + 16));
  else
    v176 = *(std::string *)(a46 + 8);
  v177 = *(_DWORD *)(a46 + 32);
  v175 = &off_24C335AB8;
  v178 = *(_BYTE *)(a46 + 36);
  if (*(char *)(a46 + 63) < 0)
    std::string::__init_copy_ctor_external(&v179, *(const std::string::value_type **)(a46 + 40), *(_QWORD *)(a46 + 48));
  else
    v179 = *(std::string *)(a46 + 40);
  v599 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v600, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v600 = __s;
  v599 = off_24C335B18;
  v602 = v385;
  v601 = v63;
  v603 = v386;
  v594 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v378.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v595, v378.__r_.__value_.__l.__data_, v378.__r_.__value_.__l.__size_);
  else
    v595 = v378;
  v594 = off_24C335B18;
  v597 = v380;
  v596 = v171;
  v598 = v381;
  v589 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v373.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v590, v373.__r_.__value_.__l.__data_, v373.__r_.__value_.__l.__size_);
  else
    v590 = v373;
  v589 = off_24C335B18;
  v592 = v375;
  v591 = v67;
  v593 = v376;
  v584 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v368.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v585, v368.__r_.__value_.__l.__data_, v368.__r_.__value_.__l.__size_);
  else
    v585 = v368;
  v584 = off_24C335B18;
  v587 = v370;
  v586 = v69;
  v588 = v371;
  v579 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v363.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v580, v363.__r_.__value_.__l.__data_, v363.__r_.__value_.__l.__size_);
  else
    v580 = v363;
  v579 = off_24C335B18;
  v582 = v365;
  v581 = v168;
  v583 = v366;
  v574 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v358.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v575, v358.__r_.__value_.__l.__data_, v358.__r_.__value_.__l.__size_);
  else
    v575 = v358;
  v574 = off_24C335B18;
  v577 = v360;
  v576 = v165;
  v578 = v361;
  v569 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v353.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v570, v353.__r_.__value_.__l.__data_, v353.__r_.__value_.__l.__size_);
  else
    v570 = v353;
  v569 = off_24C335B18;
  v572 = v355;
  v571 = v163;
  v573 = v356;
  v564 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v348.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v565, v348.__r_.__value_.__l.__data_, v348.__r_.__value_.__l.__size_);
  else
    v565 = v348;
  v564 = off_24C335B18;
  v567 = v350;
  v566 = v161;
  v568 = v351;
  v559 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v343.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v560, v343.__r_.__value_.__l.__data_, v343.__r_.__value_.__l.__size_);
  else
    v560 = v343;
  v559 = off_24C335B18;
  v562 = v345;
  v561 = v158;
  v563 = v346;
  v554 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v338.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v555, v338.__r_.__value_.__l.__data_, v338.__r_.__value_.__l.__size_);
  else
    v555 = v338;
  v554 = off_24C335B18;
  v557 = v340;
  v556 = v156;
  v558 = v341;
  v549 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v333.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v550, v333.__r_.__value_.__l.__data_, v333.__r_.__value_.__l.__size_);
  else
    v550 = v333;
  v549 = off_24C335B18;
  v552 = v335;
  v551 = v154;
  v553 = v336;
  v544 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v328.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v545, v328.__r_.__value_.__l.__data_, v328.__r_.__value_.__l.__size_);
  else
    v545 = v328;
  v546 = v329;
  v544 = &off_24C335AB8;
  v547 = v330;
  if (SHIBYTE(v331.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v548, v331.__r_.__value_.__l.__data_, v331.__r_.__value_.__l.__size_);
  else
    v548 = v331;
  v539 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v323.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v540, v323.__r_.__value_.__l.__data_, v323.__r_.__value_.__l.__size_);
  else
    v540 = v323;
  v541 = v324;
  v539 = &off_24C335AB8;
  v542 = v325;
  if (SHIBYTE(v326.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v543, v326.__r_.__value_.__l.__data_, v326.__r_.__value_.__l.__size_);
  else
    v543 = v326;
  v534 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v318.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v535, v318.__r_.__value_.__l.__data_, v318.__r_.__value_.__l.__size_);
  else
    v535 = v318;
  v536 = v319;
  v534 = &off_24C335AB8;
  v537 = v320;
  if (SHIBYTE(v321.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v538, v321.__r_.__value_.__l.__data_, v321.__r_.__value_.__l.__size_);
  else
    v538 = v321;
  v529 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v313.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v530, v313.__r_.__value_.__l.__data_, v313.__r_.__value_.__l.__size_);
  else
    v530 = v313;
  v531 = v314;
  v529 = &off_24C335AB8;
  v532 = v315;
  if (SHIBYTE(v316.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v533, v316.__r_.__value_.__l.__data_, v316.__r_.__value_.__l.__size_);
  else
    v533 = v316;
  v524 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v525, v308.__r_.__value_.__l.__data_, v308.__r_.__value_.__l.__size_);
  else
    v525 = v308;
  v526 = v309;
  v524 = &off_24C335AB8;
  v527 = v310;
  if (SHIBYTE(v311.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v528, v311.__r_.__value_.__l.__data_, v311.__r_.__value_.__l.__size_);
  else
    v528 = v311;
  v519 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v303.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v520, v303.__r_.__value_.__l.__data_, v303.__r_.__value_.__l.__size_);
  else
    v520 = v303;
  v519 = off_24C335B18;
  v522 = v305;
  v521 = v153;
  v523 = v306;
  v514 = (uint64_t (**)())off_24C335D90;
  v115 = SHIBYTE(v298.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v298.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v515, v298.__r_.__value_.__l.__data_, v298.__r_.__value_.__l.__size_);
  else
    v515 = v298;
  v514 = off_24C335B18;
  v517 = v300;
  v516 = v152;
  v518 = v301;
  v509 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v293.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v510, v293.__r_.__value_.__l.__data_, v293.__r_.__value_.__l.__size_);
  else
    v510 = v293;
  v511 = v294;
  v509 = &off_24C335AB8;
  v512 = v295;
  if (SHIBYTE(v296.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v513, v296.__r_.__value_.__l.__data_, v296.__r_.__value_.__l.__size_);
  else
    v513 = v296;
  v504 = (uint64_t (**)())off_24C335D90;
  v116 = SHIBYTE(v288.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v288.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v505, v288.__r_.__value_.__l.__data_, v288.__r_.__value_.__l.__size_);
  else
    v505 = v288;
  v504 = off_24C335B18;
  v507 = v290;
  v506 = v151;
  v508 = v291;
  v499 = (uint64_t (**)())off_24C335D90;
  v117 = SHIBYTE(v283.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v283.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v500, v283.__r_.__value_.__l.__data_, v283.__r_.__value_.__l.__size_);
  else
    v500 = v283;
  v499 = off_24C335B18;
  v502 = v285;
  v501 = v150;
  v503 = v286;
  v494 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v278.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v495, v278.__r_.__value_.__l.__data_, v278.__r_.__value_.__l.__size_);
  else
    v495 = v278;
  v496 = v279;
  v494 = &off_24C335AB8;
  v497 = v280;
  if (SHIBYTE(v281.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v498, v281.__r_.__value_.__l.__data_, v281.__r_.__value_.__l.__size_);
  else
    v498 = v281;
  v489 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v273.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v490, v273.__r_.__value_.__l.__data_, v273.__r_.__value_.__l.__size_);
  else
    v490 = v273;
  v491 = v274;
  v489 = &off_24C335AB8;
  v492 = v275;
  if (SHIBYTE(v276.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v493, v276.__r_.__value_.__l.__data_, v276.__r_.__value_.__l.__size_);
  else
    v493 = v276;
  v484 = (uint64_t (**)())off_24C335D90;
  v173 = SHIBYTE(v268.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v268.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v485, v268.__r_.__value_.__l.__data_, v268.__r_.__value_.__l.__size_);
  else
    v485 = v268;
  v484 = off_24C335B18;
  v487 = v270;
  v486 = v148;
  v488 = v271;
  v479 = (uint64_t (**)())off_24C335D90;
  v172 = SHIBYTE(v263.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v263.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v480, v263.__r_.__value_.__l.__data_, v263.__r_.__value_.__l.__size_);
  else
    v480 = v263;
  v479 = off_24C335B18;
  v482 = v265;
  v481 = v147;
  v483 = v266;
  v474 = (uint64_t (**)())off_24C335D90;
  v170 = SHIBYTE(v258.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v258.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v475, v258.__r_.__value_.__l.__data_, v258.__r_.__value_.__l.__size_);
  else
    v475 = v258;
  v474 = off_24C335B18;
  v477 = v260;
  v476 = v146;
  v478 = v261;
  v470 = (uint64_t (**)())off_24C335D90;
  v118 = SHIBYTE(v254.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v254.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v471, v254.__r_.__value_.__l.__data_, v254.__r_.__value_.__l.__size_);
  else
    v471 = v254;
  v472 = v145;
  v470 = off_24C335AF8;
  v473 = v144;
  v465 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v249.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v466, v249.__r_.__value_.__l.__data_, v249.__r_.__value_.__l.__size_);
  else
    v466 = v249;
  v169 = v118;
  v467 = v250;
  v465 = &off_24C335AB8;
  v468 = v251;
  if (SHIBYTE(v252.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v469, v252.__r_.__value_.__l.__data_, v252.__r_.__value_.__l.__size_);
  else
    v469 = v252;
  v460 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v244.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v461, v244.__r_.__value_.__l.__data_, v244.__r_.__value_.__l.__size_);
  else
    v461 = v244;
  v462 = v245;
  v460 = &off_24C335AB8;
  v463 = v246;
  if (SHIBYTE(v247.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v464, v247.__r_.__value_.__l.__data_, v247.__r_.__value_.__l.__size_);
  else
    v464 = v247;
  v455 = (uint64_t (**)())off_24C335D90;
  v167 = SHIBYTE(v239.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v239.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v456, v239.__r_.__value_.__l.__data_, v239.__r_.__value_.__l.__size_);
  else
    v456 = v239;
  v455 = off_24C335B18;
  v458 = v241;
  v457 = v143;
  v459 = v242;
  v450 = (uint64_t (**)())off_24C335D90;
  v166 = SHIBYTE(v234.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v234.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v451, v234.__r_.__value_.__l.__data_, v234.__r_.__value_.__l.__size_);
  else
    v451 = v234;
  v450 = off_24C335B18;
  v453 = v236;
  v452 = v142;
  v454 = v237;
  v445 = (uint64_t (**)())off_24C335D90;
  v164 = SHIBYTE(v229.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v229.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v446, v229.__r_.__value_.__l.__data_, v229.__r_.__value_.__l.__size_);
  else
    v446 = v229;
  v445 = off_24C335B18;
  v448 = v231;
  v447 = v141;
  v449 = v232;
  v440 = (uint64_t (**)())off_24C335D90;
  v162 = SHIBYTE(v224.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v224.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v441, v224.__r_.__value_.__l.__data_, v224.__r_.__value_.__l.__size_);
  else
    v441 = v224;
  v440 = off_24C335B18;
  v443 = v226;
  v442 = v140;
  v444 = v227;
  v436 = (uint64_t (**)())off_24C335D90;
  v159 = SHIBYTE(v220.__r_.__value_.__r.__words[2]);
  v160 = v117;
  if (SHIBYTE(v220.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v437, v220.__r_.__value_.__l.__data_, v220.__r_.__value_.__l.__size_);
  else
    v437 = v220;
  v438 = v139;
  v436 = off_24C335AF8;
  v439 = v138;
  v432 = (uint64_t (**)())off_24C335D90;
  v119 = SHIBYTE(v216.__r_.__value_.__r.__words[2]);
  v157 = v116;
  if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v433, v216.__r_.__value_.__l.__data_, v216.__r_.__value_.__l.__size_);
  else
    v433 = v216;
  v434 = v137;
  v432 = off_24C335AF8;
  v435 = v136;
  v427 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v428, v211.__r_.__value_.__l.__data_, v211.__r_.__value_.__l.__size_);
  else
    v428 = v211;
  v429 = v212;
  v427 = &off_24C335AB8;
  v430 = v213;
  if (SHIBYTE(v214.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v431, v214.__r_.__value_.__l.__data_, v214.__r_.__value_.__l.__size_);
  else
    v431 = v214;
  v422 = (uint64_t (**)())off_24C335D90;
  v120 = SHIBYTE(v206.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v206.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v423, v206.__r_.__value_.__l.__data_, v206.__r_.__value_.__l.__size_);
  else
    v423 = v206;
  v422 = off_24C335B18;
  v425 = v208;
  v424 = v135;
  v426 = v209;
  v417 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v201.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v418, v201.__r_.__value_.__l.__data_, v201.__r_.__value_.__l.__size_);
  else
    v418 = v201;
  v419 = v202;
  v417 = &off_24C335AB8;
  v420 = v203;
  if (SHIBYTE(v204.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v421, v204.__r_.__value_.__l.__data_, v204.__r_.__value_.__l.__size_);
  else
    v421 = v204;
  v412 = (uint64_t (**)())off_24C335D90;
  v121 = SHIBYTE(v196.__r_.__value_.__r.__words[2]);
  v155 = v115;
  if (SHIBYTE(v196.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v413, v196.__r_.__value_.__l.__data_, v196.__r_.__value_.__l.__size_);
  else
    v413 = v196;
  v412 = off_24C335B18;
  v415 = v198;
  v414 = v134;
  v416 = v199;
  v407 = (uint64_t (**)())off_24C335D90;
  v122 = SHIBYTE(v191.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v408, v191.__r_.__value_.__l.__data_, v191.__r_.__value_.__l.__size_);
  else
    v408 = v191;
  v407 = off_24C335B18;
  v410 = v193;
  v409 = v133;
  v411 = v194;
  v402 = (uint64_t (**)())off_24C335D90;
  v123 = SHIBYTE(v186.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v186.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v403, v186.__r_.__value_.__l.__data_, v186.__r_.__value_.__l.__size_);
  else
    v403 = v186;
  v402 = off_24C335B18;
  v405 = v188;
  v404 = v132;
  v406 = v189;
  v397 = (uint64_t (**)())off_24C335D90;
  v124 = SHIBYTE(v181.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v181.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v181.__r_.__value_.__l.__data_, v181.__r_.__value_.__l.__size_);
  else
    __p = v181;
  v397 = off_24C335B18;
  v400 = v183;
  v399 = v131;
  v401 = v184;
  v392 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v176.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v393, v176.__r_.__value_.__l.__data_, v176.__r_.__value_.__l.__size_);
  else
    v393 = v176;
  v394 = v177;
  v392 = &off_24C335AB8;
  v395 = v178;
  if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v396, v179.__r_.__value_.__l.__data_, v179.__r_.__value_.__l.__size_);
  else
    v396 = v179;
  mediaplatform::DatabaseColumnTuple<15ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(v174, (uint64_t)&v599, (uint64_t)&v594, (uint64_t)&v589, (uint64_t)&v584, (uint64_t)&v579, (uint64_t)&v574, (uint64_t)&v569, (uint64_t)&v564, (uint64_t)&v559, (uint64_t)&v554, (uint64_t)&v549, (uint64_t)&v544, (uint64_t)&v539, (uint64_t)&v534, (uint64_t)&v529, (uint64_t)&v524, (uint64_t)&v519, (uint64_t)&v514,
    (uint64_t)&v509,
    (uint64_t)&v504,
    (uint64_t)&v499,
    (uint64_t)&v494,
    (uint64_t)&v489,
    (uint64_t)&v484,
    (uint64_t)&v479,
    (uint64_t)&v474,
    (uint64_t)&v470,
    (uint64_t)&v465,
    (uint64_t)&v460,
    (uint64_t)&v455,
    (uint64_t)&v450,
    (uint64_t)&v445,
    (uint64_t)&v440,
    (uint64_t)&v436,
    (uint64_t)&v432,
    (uint64_t)&v427,
    (uint64_t)&v422,
    (uint64_t)&v417,
    (uint64_t)&v412,
    (uint64_t)&v407,
    (uint64_t)&v402,
    (uint64_t)&v397,
    (uint64_t)&v392);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v392);
  v397 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v402 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v403.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v403.__r_.__value_.__l.__data_);
  v407 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v408.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v408.__r_.__value_.__l.__data_);
  v412 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v413.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v413.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v417);
  v422 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v423.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v423.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v427);
  v432 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v433.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v433.__r_.__value_.__l.__data_);
  v436 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v437.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v437.__r_.__value_.__l.__data_);
  v440 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v441.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v441.__r_.__value_.__l.__data_);
  v445 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v446.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v446.__r_.__value_.__l.__data_);
  v450 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v451.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v451.__r_.__value_.__l.__data_);
  v455 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v456.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v456.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v460);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v465);
  v470 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v471.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v471.__r_.__value_.__l.__data_);
  v474 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v475.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v475.__r_.__value_.__l.__data_);
  v479 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v480.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v480.__r_.__value_.__l.__data_);
  v484 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v485.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v485.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v489);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v494);
  v499 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v500.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v500.__r_.__value_.__l.__data_);
  v504 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v505.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v505.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v509);
  v514 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v515.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v515.__r_.__value_.__l.__data_);
  v519 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v520.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v520.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v524);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v529);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v534);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v539);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v544);
  v549 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v550.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v550.__r_.__value_.__l.__data_);
  v554 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v555.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v555.__r_.__value_.__l.__data_);
  v559 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v560.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v560.__r_.__value_.__l.__data_);
  v564 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v565.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v565.__r_.__value_.__l.__data_);
  v569 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v570.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v570.__r_.__value_.__l.__data_);
  v574 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v575.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v575.__r_.__value_.__l.__data_);
  v579 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v580.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v580.__r_.__value_.__l.__data_);
  v584 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v585.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v585.__r_.__value_.__l.__data_);
  v589 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v590.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v590.__r_.__value_.__l.__data_);
  v594 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v595.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v595.__r_.__value_.__l.__data_);
  v599 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v600.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v600.__r_.__value_.__l.__data_);
  *(_QWORD *)(v174 + 2272) = off_24C335D90;
  v125 = (std::string *)(v174 + 2280);
  v126 = SHIBYTE(v388.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v388.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v125, v388.__r_.__value_.__l.__data_, v388.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v125->__r_.__value_.__l.__data_ = *(_OWORD *)&v388.__r_.__value_.__l.__data_;
    *(_QWORD *)(v174 + 2296) = *((_QWORD *)&v388.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(v174 + 2304) = v389;
  *(_QWORD *)(v174 + 2272) = off_24C335B18;
  *(_QWORD *)(v174 + 2308) = v390;
  *(_DWORD *)(v174 + 2316) = v391;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v175);
  v180 = (uint64_t (**)())off_24C335D90;
  if (v124 < 0)
    operator delete(v181.__r_.__value_.__l.__data_);
  v185 = (uint64_t (**)())off_24C335D90;
  if (v123 < 0)
    operator delete(v186.__r_.__value_.__l.__data_);
  v190 = (uint64_t (**)())off_24C335D90;
  if (v122 < 0)
    operator delete(v191.__r_.__value_.__l.__data_);
  v195 = (uint64_t (**)())off_24C335D90;
  if (v121 < 0)
    operator delete(v196.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v200);
  v205 = (uint64_t (**)())off_24C335D90;
  if (v120 < 0)
    operator delete(v206.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v210);
  v215 = (uint64_t (**)())off_24C335D90;
  if (v119 < 0)
    operator delete(v216.__r_.__value_.__l.__data_);
  v219 = (uint64_t (**)())off_24C335D90;
  if (v159 < 0)
    operator delete(v220.__r_.__value_.__l.__data_);
  v223 = (uint64_t (**)())off_24C335D90;
  if (v162 < 0)
    operator delete(v224.__r_.__value_.__l.__data_);
  v228 = (uint64_t (**)())off_24C335D90;
  if (v164 < 0)
    operator delete(v229.__r_.__value_.__l.__data_);
  if (v166 < 0)
    operator delete(v234.__r_.__value_.__l.__data_);
  if (v167 < 0)
    operator delete(v239.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v243);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v248);
  if (v169 < 0)
    operator delete(v254.__r_.__value_.__l.__data_);
  if (v170 < 0)
    operator delete(v258.__r_.__value_.__l.__data_);
  if (v172 < 0)
    operator delete(v263.__r_.__value_.__l.__data_);
  if (v173 < 0)
    operator delete(v268.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v272);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v277);
  if (v160 < 0)
    operator delete(v283.__r_.__value_.__l.__data_);
  if (v157 < 0)
    operator delete(v288.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v292);
  if (v155 < 0)
    operator delete(v298.__r_.__value_.__l.__data_);
  if (SHIBYTE(v303.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v303.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v307);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v312);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v317);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v322);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v327);
  if (SHIBYTE(v333.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v333.__r_.__value_.__l.__data_);
  if (SHIBYTE(v338.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v338.__r_.__value_.__l.__data_);
  if (SHIBYTE(v343.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v343.__r_.__value_.__l.__data_);
  if (SHIBYTE(v348.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v348.__r_.__value_.__l.__data_);
  if (SHIBYTE(v353.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v353.__r_.__value_.__l.__data_);
  if (SHIBYTE(v358.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v358.__r_.__value_.__l.__data_);
  if (SHIBYTE(v363.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v363.__r_.__value_.__l.__data_);
  if (SHIBYTE(v368.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v368.__r_.__value_.__l.__data_);
  if (SHIBYTE(v373.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v373.__r_.__value_.__l.__data_);
  if (SHIBYTE(v378.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v378.__r_.__value_.__l.__data_);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__s.__r_.__value_.__l.__data_);
    if ((v126 & 0x80000000) == 0)
      goto LABEL_463;
  }
  else if ((v126 & 0x80000000) == 0)
  {
    goto LABEL_463;
  }
  operator delete(v388.__r_.__value_.__l.__data_);
LABEL_463:
  *(_QWORD *)(v174 + 2320) = off_24C335D90;
  v127 = (std::string *)(v174 + 2328);
  if (*(char *)(v149 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v127, *(const std::string::value_type **)(v149 + 8), *(_QWORD *)(v149 + 16));
  }
  else
  {
    v128 = *(_OWORD *)(v149 + 8);
    *(_QWORD *)(v174 + 2344) = *(_QWORD *)(v149 + 24);
    *(_OWORD *)&v127->__r_.__value_.__l.__data_ = v128;
  }
  *(_DWORD *)(v174 + 2352) = *(_DWORD *)(v149 + 32);
  *(_QWORD *)(v174 + 2320) = off_24C335B18;
  v129 = *(_QWORD *)(v149 + 36);
  *(_DWORD *)(v174 + 2364) = *(_DWORD *)(v149 + 44);
  *(_QWORD *)(v174 + 2356) = v129;
  return v174;
}

void sub_20A898128(_Unwind_Exception *a1)
{
  uint64_t v1;

  mediaplatform::DatabaseColumnTuple<14ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(v1);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<13ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 2320) = off_24C335D90;
  if (*(char *)(a1 + 2351) < 0)
    operator delete(*(void **)(a1 + 2328));
  *(_QWORD *)(a1 + 2272) = off_24C335D90;
  if (*(char *)(a1 + 2303) < 0)
    operator delete(*(void **)(a1 + 2280));
  *(_QWORD *)(a1 + 2224) = off_24C335D90;
  if (*(char *)(a1 + 2255) < 0)
    operator delete(*(void **)(a1 + 2232));
  *(_QWORD *)(a1 + 2176) = off_24C335D90;
  if (*(char *)(a1 + 2207) < 0)
    operator delete(*(void **)(a1 + 2184));
  return mediaplatform::DatabaseColumnTuple<17ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<14ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 2272) = off_24C335D90;
  if (*(char *)(a1 + 2303) < 0)
    operator delete(*(void **)(a1 + 2280));
  *(_QWORD *)(a1 + 2224) = off_24C335D90;
  if (*(char *)(a1 + 2255) < 0)
    operator delete(*(void **)(a1 + 2232));
  *(_QWORD *)(a1 + 2176) = off_24C335D90;
  if (*(char *)(a1 + 2207) < 0)
    operator delete(*(void **)(a1 + 2184));
  return mediaplatform::DatabaseColumnTuple<17ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<15ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  std::string *v119;
  int v120;
  std::string *v121;
  __int128 v122;
  uint64_t v123;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  uint64_t v138;
  int v139;
  int v140;
  int v141;
  uint64_t v142;
  int v143;
  int v144;
  int v145;
  int v146;
  uint64_t v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  uint64_t (**v167)();
  std::string v168;
  int v169;
  char v170;
  std::string v171;
  uint64_t (**v172)();
  std::string v173;
  int v174;
  uint64_t v175;
  int v176;
  uint64_t (**v177)();
  std::string v178;
  int v179;
  uint64_t v180;
  int v181;
  uint64_t (**v182)();
  std::string v183;
  int v184;
  uint64_t v185;
  int v186;
  uint64_t (**v187)();
  std::string v188;
  int v189;
  uint64_t v190;
  int v191;
  uint64_t (**v192)();
  std::string v193;
  int v194;
  char v195;
  std::string v196;
  uint64_t (**v197)();
  std::string v198;
  int v199;
  uint64_t v200;
  int v201;
  uint64_t (**v202)();
  std::string v203;
  int v204;
  char v205;
  std::string v206;
  uint64_t (**v207)();
  std::string v208;
  int v209;
  uint64_t v210;
  uint64_t (**v211)();
  std::string v212;
  int v213;
  uint64_t v214;
  uint64_t (**v215)();
  std::string v216;
  int v217;
  uint64_t v218;
  int v219;
  uint64_t (**v220)();
  std::string v221;
  int v222;
  uint64_t v223;
  int v224;
  uint64_t (**v225)();
  std::string v226;
  int v227;
  uint64_t v228;
  int v229;
  uint64_t (**v230)();
  std::string v231;
  int v232;
  uint64_t v233;
  int v234;
  uint64_t (**v235)();
  std::string v236;
  int v237;
  char v238;
  std::string v239;
  uint64_t (**v240)();
  std::string v241;
  int v242;
  char v243;
  std::string v244;
  uint64_t (**v245)();
  std::string v246;
  int v247;
  uint64_t v248;
  uint64_t (**v249)();
  std::string v250;
  int v251;
  uint64_t v252;
  int v253;
  uint64_t (**v254)();
  std::string v255;
  int v256;
  uint64_t v257;
  int v258;
  uint64_t (**v259)();
  std::string v260;
  int v261;
  uint64_t v262;
  int v263;
  uint64_t (**v264)();
  std::string v265;
  int v266;
  char v267;
  std::string v268;
  uint64_t (**v269)();
  std::string v270;
  int v271;
  char v272;
  std::string v273;
  uint64_t (**v274)();
  std::string v275;
  int v276;
  uint64_t v277;
  int v278;
  uint64_t (**v279)();
  std::string v280;
  int v281;
  uint64_t v282;
  int v283;
  uint64_t (**v284)();
  std::string v285;
  int v286;
  char v287;
  std::string v288;
  uint64_t (**v289)();
  std::string v290;
  int v291;
  uint64_t v292;
  int v293;
  uint64_t (**v294)();
  std::string v295;
  int v296;
  uint64_t v297;
  int v298;
  uint64_t (**v299)();
  std::string v300;
  int v301;
  char v302;
  std::string v303;
  uint64_t (**v304)();
  std::string v305;
  int v306;
  char v307;
  std::string v308;
  uint64_t (**v309)();
  std::string v310;
  int v311;
  char v312;
  std::string v313;
  uint64_t (**v314)();
  std::string v315;
  int v316;
  char v317;
  std::string v318;
  uint64_t (**v319)();
  std::string v320;
  int v321;
  char v322;
  std::string v323;
  uint64_t (**v324)();
  std::string v325;
  int v326;
  uint64_t v327;
  int v328;
  uint64_t (**v329)();
  std::string v330;
  int v331;
  uint64_t v332;
  int v333;
  uint64_t (**v334)();
  std::string v335;
  int v336;
  uint64_t v337;
  int v338;
  uint64_t (**v339)();
  std::string v340;
  int v341;
  uint64_t v342;
  int v343;
  uint64_t (**v344)();
  std::string v345;
  int v346;
  uint64_t v347;
  int v348;
  uint64_t (**v349)();
  std::string v350;
  int v351;
  uint64_t v352;
  int v353;
  uint64_t (**v354)();
  std::string v355;
  int v356;
  uint64_t v357;
  int v358;
  uint64_t (**v359)();
  std::string v360;
  int v361;
  uint64_t v362;
  int v363;
  uint64_t (**v364)();
  std::string __s;
  int v366;
  uint64_t v367;
  int v368;
  uint64_t (**v369)();
  std::string v370;
  int v371;
  uint64_t v372;
  int v373;
  uint64_t (**v374)();
  std::string v375;
  int v376;
  char v377;
  std::string v378;
  uint64_t (**v379)();
  std::string __p;
  int v381;
  uint64_t v382;
  int v383;
  uint64_t (**v384)();
  std::string v385;
  int v386;
  uint64_t v387;
  int v388;
  uint64_t (**v389)();
  std::string v390;
  int v391;
  uint64_t v392;
  int v393;
  uint64_t (**v394)();
  std::string v395;
  int v396;
  uint64_t v397;
  int v398;
  uint64_t (**v399)();
  std::string v400;
  int v401;
  char v402;
  std::string v403;
  uint64_t (**v404)();
  std::string v405;
  int v406;
  uint64_t v407;
  int v408;
  uint64_t (**v409)();
  std::string v410;
  int v411;
  char v412;
  std::string v413;
  uint64_t (**v414)();
  std::string v415;
  int v416;
  uint64_t v417;
  uint64_t (**v418)();
  std::string v419;
  int v420;
  uint64_t v421;
  uint64_t (**v422)();
  std::string v423;
  int v424;
  uint64_t v425;
  int v426;
  uint64_t (**v427)();
  std::string v428;
  int v429;
  uint64_t v430;
  int v431;
  uint64_t (**v432)();
  std::string v433;
  int v434;
  uint64_t v435;
  int v436;
  uint64_t (**v437)();
  std::string v438;
  int v439;
  uint64_t v440;
  int v441;
  uint64_t (**v442)();
  std::string v443;
  int v444;
  char v445;
  std::string v446;
  uint64_t (**v447)();
  std::string v448;
  int v449;
  char v450;
  std::string v451;
  uint64_t (**v452)();
  std::string v453;
  int v454;
  uint64_t v455;
  uint64_t (**v456)();
  std::string v457;
  int v458;
  uint64_t v459;
  int v460;
  uint64_t (**v461)();
  std::string v462;
  int v463;
  uint64_t v464;
  int v465;
  uint64_t (**v466)();
  std::string v467;
  int v468;
  uint64_t v469;
  int v470;
  uint64_t (**v471)();
  std::string v472;
  int v473;
  char v474;
  std::string v475;
  uint64_t (**v476)();
  std::string v477;
  int v478;
  char v479;
  std::string v480;
  uint64_t (**v481)();
  std::string v482;
  int v483;
  uint64_t v484;
  int v485;
  uint64_t (**v486)();
  std::string v487;
  int v488;
  uint64_t v489;
  int v490;
  uint64_t (**v491)();
  std::string v492;
  int v493;
  char v494;
  std::string v495;
  uint64_t (**v496)();
  std::string v497;
  int v498;
  uint64_t v499;
  int v500;
  uint64_t (**v501)();
  std::string v502;
  int v503;
  uint64_t v504;
  int v505;
  uint64_t (**v506)();
  std::string v507;
  int v508;
  char v509;
  std::string v510;
  uint64_t (**v511)();
  std::string v512;
  int v513;
  char v514;
  std::string v515;
  uint64_t (**v516)();
  std::string v517;
  int v518;
  char v519;
  std::string v520;
  uint64_t (**v521)();
  std::string v522;
  int v523;
  char v524;
  std::string v525;
  uint64_t (**v526)();
  std::string v527;
  int v528;
  char v529;
  std::string v530;
  uint64_t (**v531)();
  std::string v532;
  int v533;
  uint64_t v534;
  int v535;
  uint64_t (**v536)();
  std::string v537;
  int v538;
  uint64_t v539;
  int v540;
  uint64_t (**v541)();
  std::string v542;
  int v543;
  uint64_t v544;
  int v545;
  uint64_t (**v546)();
  std::string v547;
  int v548;
  uint64_t v549;
  int v550;
  uint64_t (**v551)();
  std::string v552;
  int v553;
  uint64_t v554;
  int v555;
  uint64_t (**v556)();
  std::string v557;
  int v558;
  uint64_t v559;
  int v560;
  uint64_t (**v561)();
  std::string v562;
  int v563;
  uint64_t v564;
  int v565;
  uint64_t (**v566)();
  std::string v567;
  int v568;
  uint64_t v569;
  int v570;
  uint64_t (**v571)();
  std::string v572;
  int v573;
  uint64_t v574;
  int v575;

  v44 = MEMORY[0x24BDAC7A8](a1);
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v55 = v54;
  v56 = v45;
  v142 = v57;
  v58 = v44;
  if (*(char *)(v45 + 31) < 0)
    std::string::__init_copy_ctor_external(&v370, *(const std::string::value_type **)(v45 + 8), *(_QWORD *)(v45 + 16));
  else
    v370 = *(std::string *)(v45 + 8);
  v59 = *(_DWORD *)(v56 + 32);
  v369 = off_24C335B18;
  v372 = *(_QWORD *)(v56 + 36);
  v60 = *(_DWORD *)(v56 + 44);
  v371 = v59;
  v373 = v60;
  if (*(char *)(v55 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(v55 + 8), *(_QWORD *)(v55 + 16));
  else
    __s = *(std::string *)(v55 + 8);
  v61 = *(_DWORD *)(v55 + 32);
  v364 = off_24C335B18;
  v367 = *(_QWORD *)(v55 + 36);
  v62 = *(_DWORD *)(v55 + 44);
  v366 = v61;
  v368 = v62;
  if (*(char *)(v53 + 31) < 0)
    std::string::__init_copy_ctor_external(&v360, *(const std::string::value_type **)(v53 + 8), *(_QWORD *)(v53 + 16));
  else
    v360 = *(std::string *)(v53 + 8);
  v63 = *(_DWORD *)(v53 + 32);
  v359 = off_24C335B18;
  v362 = *(_QWORD *)(v53 + 36);
  v64 = *(_DWORD *)(v53 + 44);
  v164 = v63;
  v361 = v63;
  v363 = v64;
  if (*(char *)(v51 + 31) < 0)
    std::string::__init_copy_ctor_external(&v355, *(const std::string::value_type **)(v51 + 8), *(_QWORD *)(v51 + 16));
  else
    v355 = *(std::string *)(v51 + 8);
  v65 = *(_DWORD *)(v51 + 32);
  v354 = off_24C335B18;
  v357 = *(_QWORD *)(v51 + 36);
  v66 = *(_DWORD *)(v51 + 44);
  v162 = v65;
  v356 = v65;
  v358 = v66;
  if (*(char *)(v49 + 31) < 0)
    std::string::__init_copy_ctor_external(&v350, *(const std::string::value_type **)(v49 + 8), *(_QWORD *)(v49 + 16));
  else
    v350 = *(std::string *)(v49 + 8);
  v67 = *(_DWORD *)(v49 + 32);
  v349 = off_24C335B18;
  v352 = *(_QWORD *)(v49 + 36);
  v68 = *(_DWORD *)(v49 + 44);
  v351 = v67;
  v353 = v68;
  if (*(char *)(v47 + 31) < 0)
    std::string::__init_copy_ctor_external(&v345, *(const std::string::value_type **)(v47 + 8), *(_QWORD *)(v47 + 16));
  else
    v345 = *(std::string *)(v47 + 8);
  v69 = *(_DWORD *)(v47 + 32);
  v344 = off_24C335B18;
  v347 = *(_QWORD *)(v47 + 36);
  v70 = *(_DWORD *)(v47 + 44);
  v160 = v69;
  v346 = v69;
  v348 = v70;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v340, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v340 = *(std::string *)(a9 + 8);
  v71 = *(_DWORD *)(a9 + 32);
  v339 = off_24C335B18;
  v342 = *(_QWORD *)(a9 + 36);
  v72 = *(_DWORD *)(a9 + 44);
  v157 = v71;
  v341 = v71;
  v343 = v72;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v335, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v335 = *(std::string *)(a10 + 8);
  v73 = *(_DWORD *)(a10 + 32);
  v334 = off_24C335B18;
  v337 = *(_QWORD *)(a10 + 36);
  v74 = *(_DWORD *)(a10 + 44);
  v155 = v73;
  v336 = v73;
  v338 = v74;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v330, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v330 = *(std::string *)(a11 + 8);
  v75 = *(_DWORD *)(a11 + 32);
  v329 = off_24C335B18;
  v332 = *(_QWORD *)(a11 + 36);
  v76 = *(_DWORD *)(a11 + 44);
  v152 = v75;
  v331 = v75;
  v333 = v76;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v325, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v325 = *(std::string *)(a12 + 8);
  v77 = *(_DWORD *)(a12 + 32);
  v324 = off_24C335B18;
  v327 = *(_QWORD *)(a12 + 36);
  v78 = *(_DWORD *)(a12 + 44);
  v149 = v77;
  v326 = v77;
  v328 = v78;
  v319 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v320, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v320 = *(std::string *)(a13 + 8);
  v321 = *(_DWORD *)(a13 + 32);
  v319 = &off_24C335AB8;
  v322 = *(_BYTE *)(a13 + 36);
  if (*(char *)(a13 + 63) < 0)
    std::string::__init_copy_ctor_external(&v323, *(const std::string::value_type **)(a13 + 40), *(_QWORD *)(a13 + 48));
  else
    v323 = *(std::string *)(a13 + 40);
  v314 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v315, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v315 = *(std::string *)(a14 + 8);
  v316 = *(_DWORD *)(a14 + 32);
  v314 = &off_24C335AB8;
  v317 = *(_BYTE *)(a14 + 36);
  if (*(char *)(a14 + 63) < 0)
    std::string::__init_copy_ctor_external(&v318, *(const std::string::value_type **)(a14 + 40), *(_QWORD *)(a14 + 48));
  else
    v318 = *(std::string *)(a14 + 40);
  v309 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v310, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v310 = *(std::string *)(a15 + 8);
  v311 = *(_DWORD *)(a15 + 32);
  v309 = &off_24C335AB8;
  v312 = *(_BYTE *)(a15 + 36);
  if (*(char *)(a15 + 63) < 0)
    std::string::__init_copy_ctor_external(&v313, *(const std::string::value_type **)(a15 + 40), *(_QWORD *)(a15 + 48));
  else
    v313 = *(std::string *)(a15 + 40);
  v304 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v305, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v305 = *(std::string *)(a16 + 8);
  v306 = *(_DWORD *)(a16 + 32);
  v304 = &off_24C335AB8;
  v307 = *(_BYTE *)(a16 + 36);
  if (*(char *)(a16 + 63) < 0)
    std::string::__init_copy_ctor_external(&v308, *(const std::string::value_type **)(a16 + 40), *(_QWORD *)(a16 + 48));
  else
    v308 = *(std::string *)(a16 + 40);
  v299 = (uint64_t (**)())off_24C335D90;
  v147 = v58;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v300, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v300 = *(std::string *)(a17 + 8);
  v301 = *(_DWORD *)(a17 + 32);
  v299 = &off_24C335AB8;
  v302 = *(_BYTE *)(a17 + 36);
  if (*(char *)(a17 + 63) < 0)
    std::string::__init_copy_ctor_external(&v303, *(const std::string::value_type **)(a17 + 40), *(_QWORD *)(a17 + 48));
  else
    v303 = *(std::string *)(a17 + 40);
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v295, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v295 = *(std::string *)(a18 + 8);
  v79 = *(_DWORD *)(a18 + 32);
  v294 = off_24C335B18;
  v297 = *(_QWORD *)(a18 + 36);
  v80 = *(_DWORD *)(a18 + 44);
  v146 = v79;
  v296 = v79;
  v298 = v80;
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v290, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v290 = *(std::string *)(a19 + 8);
  v81 = *(_DWORD *)(a19 + 32);
  v289 = off_24C335B18;
  v292 = *(_QWORD *)(a19 + 36);
  v82 = *(_DWORD *)(a19 + 44);
  v145 = v81;
  v291 = v81;
  v293 = v82;
  v284 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v285, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v285 = *(std::string *)(a20 + 8);
  v286 = *(_DWORD *)(a20 + 32);
  v284 = &off_24C335AB8;
  v287 = *(_BYTE *)(a20 + 36);
  if (*(char *)(a20 + 63) < 0)
    std::string::__init_copy_ctor_external(&v288, *(const std::string::value_type **)(a20 + 40), *(_QWORD *)(a20 + 48));
  else
    v288 = *(std::string *)(a20 + 40);
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v280, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v280 = *(std::string *)(a21 + 8);
  v83 = *(_DWORD *)(a21 + 32);
  v279 = off_24C335B18;
  v282 = *(_QWORD *)(a21 + 36);
  v84 = *(_DWORD *)(a21 + 44);
  v144 = v83;
  v281 = v83;
  v283 = v84;
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v275, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v275 = *(std::string *)(a22 + 8);
  v85 = *(_DWORD *)(a22 + 32);
  v274 = off_24C335B18;
  v277 = *(_QWORD *)(a22 + 36);
  v86 = *(_DWORD *)(a22 + 44);
  v143 = v85;
  v276 = v85;
  v278 = v86;
  v269 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v270, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v270 = *(std::string *)(a23 + 8);
  v271 = *(_DWORD *)(a23 + 32);
  v269 = &off_24C335AB8;
  v272 = *(_BYTE *)(a23 + 36);
  if (*(char *)(a23 + 63) < 0)
    std::string::__init_copy_ctor_external(&v273, *(const std::string::value_type **)(a23 + 40), *(_QWORD *)(a23 + 48));
  else
    v273 = *(std::string *)(a23 + 40);
  v264 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v265, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v265 = *(std::string *)(a24 + 8);
  v266 = *(_DWORD *)(a24 + 32);
  v264 = &off_24C335AB8;
  v267 = *(_BYTE *)(a24 + 36);
  if (*(char *)(a24 + 63) < 0)
    std::string::__init_copy_ctor_external(&v268, *(const std::string::value_type **)(a24 + 40), *(_QWORD *)(a24 + 48));
  else
    v268 = *(std::string *)(a24 + 40);
  if (*(char *)(a25 + 31) < 0)
    std::string::__init_copy_ctor_external(&v260, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  else
    v260 = *(std::string *)(a25 + 8);
  v87 = *(_DWORD *)(a25 + 32);
  v259 = off_24C335B18;
  v262 = *(_QWORD *)(a25 + 36);
  v88 = *(_DWORD *)(a25 + 44);
  v141 = v87;
  v261 = v87;
  v263 = v88;
  if (*(char *)(a26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v255, *(const std::string::value_type **)(a26 + 8), *(_QWORD *)(a26 + 16));
  else
    v255 = *(std::string *)(a26 + 8);
  v89 = *(_DWORD *)(a26 + 32);
  v254 = off_24C335B18;
  v257 = *(_QWORD *)(a26 + 36);
  v90 = *(_DWORD *)(a26 + 44);
  v140 = v89;
  v256 = v89;
  v258 = v90;
  if (*(char *)(a27 + 31) < 0)
    std::string::__init_copy_ctor_external(&v250, *(const std::string::value_type **)(a27 + 8), *(_QWORD *)(a27 + 16));
  else
    v250 = *(std::string *)(a27 + 8);
  v91 = *(_DWORD *)(a27 + 32);
  v249 = off_24C335B18;
  v252 = *(_QWORD *)(a27 + 36);
  v92 = *(_DWORD *)(a27 + 44);
  v139 = v91;
  v251 = v91;
  v253 = v92;
  if (*(char *)(a28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v246, *(const std::string::value_type **)(a28 + 8), *(_QWORD *)(a28 + 16));
  else
    v246 = *(std::string *)(a28 + 8);
  v93 = *(_DWORD *)(a28 + 32);
  v247 = v93;
  v245 = off_24C335AF8;
  v138 = *(_QWORD *)(a28 + 36);
  v248 = v138;
  v240 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a29 + 31) < 0)
    std::string::__init_copy_ctor_external(&v241, *(const std::string::value_type **)(a29 + 8), *(_QWORD *)(a29 + 16));
  else
    v241 = *(std::string *)(a29 + 8);
  v242 = *(_DWORD *)(a29 + 32);
  v240 = &off_24C335AB8;
  v243 = *(_BYTE *)(a29 + 36);
  if (*(char *)(a29 + 63) < 0)
    std::string::__init_copy_ctor_external(&v244, *(const std::string::value_type **)(a29 + 40), *(_QWORD *)(a29 + 48));
  else
    v244 = *(std::string *)(a29 + 40);
  v235 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v236, *(const std::string::value_type **)(a30 + 8), *(_QWORD *)(a30 + 16));
  else
    v236 = *(std::string *)(a30 + 8);
  v237 = *(_DWORD *)(a30 + 32);
  v235 = &off_24C335AB8;
  v238 = *(_BYTE *)(a30 + 36);
  if (*(char *)(a30 + 63) < 0)
    std::string::__init_copy_ctor_external(&v239, *(const std::string::value_type **)(a30 + 40), *(_QWORD *)(a30 + 48));
  else
    v239 = *(std::string *)(a30 + 40);
  if (*(char *)(a31 + 31) < 0)
    std::string::__init_copy_ctor_external(&v231, *(const std::string::value_type **)(a31 + 8), *(_QWORD *)(a31 + 16));
  else
    v231 = *(std::string *)(a31 + 8);
  v94 = *(_DWORD *)(a31 + 32);
  v230 = off_24C335B18;
  v233 = *(_QWORD *)(a31 + 36);
  v95 = *(_DWORD *)(a31 + 44);
  v137 = v94;
  v232 = v94;
  v234 = v95;
  if (*(char *)(a32 + 31) < 0)
    std::string::__init_copy_ctor_external(&v226, *(const std::string::value_type **)(a32 + 8), *(_QWORD *)(a32 + 16));
  else
    v226 = *(std::string *)(a32 + 8);
  v96 = *(_DWORD *)(a32 + 32);
  v225 = off_24C335B18;
  v228 = *(_QWORD *)(a32 + 36);
  v97 = *(_DWORD *)(a32 + 44);
  v136 = v96;
  v227 = v96;
  v229 = v97;
  if (*(char *)(a33 + 31) < 0)
    std::string::__init_copy_ctor_external(&v221, *(const std::string::value_type **)(a33 + 8), *(_QWORD *)(a33 + 16));
  else
    v221 = *(std::string *)(a33 + 8);
  v98 = *(_DWORD *)(a33 + 32);
  v220 = off_24C335B18;
  v223 = *(_QWORD *)(a33 + 36);
  v99 = *(_DWORD *)(a33 + 44);
  v135 = v98;
  v222 = v98;
  v224 = v99;
  if (*(char *)(a34 + 31) < 0)
    std::string::__init_copy_ctor_external(&v216, *(const std::string::value_type **)(a34 + 8), *(_QWORD *)(a34 + 16));
  else
    v216 = *(std::string *)(a34 + 8);
  v100 = *(_DWORD *)(a34 + 32);
  v215 = off_24C335B18;
  v218 = *(_QWORD *)(a34 + 36);
  v101 = *(_DWORD *)(a34 + 44);
  v134 = v100;
  v217 = v100;
  v219 = v101;
  if (*(char *)(a35 + 31) < 0)
    std::string::__init_copy_ctor_external(&v212, *(const std::string::value_type **)(a35 + 8), *(_QWORD *)(a35 + 16));
  else
    v212 = *(std::string *)(a35 + 8);
  v133 = *(_DWORD *)(a35 + 32);
  v213 = v133;
  v211 = off_24C335AF8;
  v132 = *(_QWORD *)(a35 + 36);
  v214 = v132;
  if (*(char *)(a36 + 31) < 0)
    std::string::__init_copy_ctor_external(&v208, *(const std::string::value_type **)(a36 + 8), *(_QWORD *)(a36 + 16));
  else
    v208 = *(std::string *)(a36 + 8);
  v131 = *(_DWORD *)(a36 + 32);
  v209 = v131;
  v207 = off_24C335AF8;
  v130 = *(_QWORD *)(a36 + 36);
  v210 = v130;
  v202 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a37 + 31) < 0)
    std::string::__init_copy_ctor_external(&v203, *(const std::string::value_type **)(a37 + 8), *(_QWORD *)(a37 + 16));
  else
    v203 = *(std::string *)(a37 + 8);
  v204 = *(_DWORD *)(a37 + 32);
  v202 = &off_24C335AB8;
  v205 = *(_BYTE *)(a37 + 36);
  if (*(char *)(a37 + 63) < 0)
    std::string::__init_copy_ctor_external(&v206, *(const std::string::value_type **)(a37 + 40), *(_QWORD *)(a37 + 48));
  else
    v206 = *(std::string *)(a37 + 40);
  v197 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a38 + 31) < 0)
    std::string::__init_copy_ctor_external(&v198, *(const std::string::value_type **)(a38 + 8), *(_QWORD *)(a38 + 16));
  else
    v198 = *(std::string *)(a38 + 8);
  v102 = *(_DWORD *)(a38 + 32);
  v197 = off_24C335B18;
  v200 = *(_QWORD *)(a38 + 36);
  v103 = *(_DWORD *)(a38 + 44);
  v129 = v102;
  v199 = v102;
  v201 = v103;
  v192 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a39 + 31) < 0)
    std::string::__init_copy_ctor_external(&v193, *(const std::string::value_type **)(a39 + 8), *(_QWORD *)(a39 + 16));
  else
    v193 = *(std::string *)(a39 + 8);
  v194 = *(_DWORD *)(a39 + 32);
  v192 = &off_24C335AB8;
  v195 = *(_BYTE *)(a39 + 36);
  if (*(char *)(a39 + 63) < 0)
    std::string::__init_copy_ctor_external(&v196, *(const std::string::value_type **)(a39 + 40), *(_QWORD *)(a39 + 48));
  else
    v196 = *(std::string *)(a39 + 40);
  v187 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a40 + 31) < 0)
    std::string::__init_copy_ctor_external(&v188, *(const std::string::value_type **)(a40 + 8), *(_QWORD *)(a40 + 16));
  else
    v188 = *(std::string *)(a40 + 8);
  v104 = *(_DWORD *)(a40 + 32);
  v187 = off_24C335B18;
  v190 = *(_QWORD *)(a40 + 36);
  v105 = *(_DWORD *)(a40 + 44);
  v128 = v104;
  v189 = v104;
  v191 = v105;
  v182 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a41 + 31) < 0)
    std::string::__init_copy_ctor_external(&v183, *(const std::string::value_type **)(a41 + 8), *(_QWORD *)(a41 + 16));
  else
    v183 = *(std::string *)(a41 + 8);
  v106 = *(_DWORD *)(a41 + 32);
  v182 = off_24C335B18;
  v185 = *(_QWORD *)(a41 + 36);
  v107 = *(_DWORD *)(a41 + 44);
  v127 = v106;
  v184 = v106;
  v186 = v107;
  v177 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a42 + 31) < 0)
    std::string::__init_copy_ctor_external(&v178, *(const std::string::value_type **)(a42 + 8), *(_QWORD *)(a42 + 16));
  else
    v178 = *(std::string *)(a42 + 8);
  v108 = *(_DWORD *)(a42 + 32);
  v177 = off_24C335B18;
  v180 = *(_QWORD *)(a42 + 36);
  v109 = *(_DWORD *)(a42 + 44);
  v126 = v108;
  v179 = v108;
  v181 = v109;
  v172 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a43 + 31) < 0)
    std::string::__init_copy_ctor_external(&v173, *(const std::string::value_type **)(a43 + 8), *(_QWORD *)(a43 + 16));
  else
    v173 = *(std::string *)(a43 + 8);
  v125 = *(_DWORD *)(a43 + 32);
  v174 = v125;
  v172 = off_24C335B18;
  v175 = *(_QWORD *)(a43 + 36);
  v176 = *(_DWORD *)(a43 + 44);
  v167 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a44 + 31) < 0)
    std::string::__init_copy_ctor_external(&v168, *(const std::string::value_type **)(a44 + 8), *(_QWORD *)(a44 + 16));
  else
    v168 = *(std::string *)(a44 + 8);
  v169 = *(_DWORD *)(a44 + 32);
  v167 = &off_24C335AB8;
  v170 = *(_BYTE *)(a44 + 36);
  if (*(char *)(a44 + 63) < 0)
    std::string::__init_copy_ctor_external(&v171, *(const std::string::value_type **)(a44 + 40), *(_QWORD *)(a44 + 48));
  else
    v171 = *(std::string *)(a44 + 40);
  v571 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v572, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v572 = __s;
  v571 = off_24C335B18;
  v574 = v367;
  v573 = v61;
  v575 = v368;
  v566 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v360.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v567, v360.__r_.__value_.__l.__data_, v360.__r_.__value_.__l.__size_);
  else
    v567 = v360;
  v566 = off_24C335B18;
  v569 = v362;
  v568 = v164;
  v570 = v363;
  v561 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v355.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v562, v355.__r_.__value_.__l.__data_, v355.__r_.__value_.__l.__size_);
  else
    v562 = v355;
  v561 = off_24C335B18;
  v564 = v357;
  v563 = v162;
  v565 = v358;
  v556 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v350.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v557, v350.__r_.__value_.__l.__data_, v350.__r_.__value_.__l.__size_);
  else
    v557 = v350;
  v556 = off_24C335B18;
  v559 = v352;
  v558 = v67;
  v560 = v353;
  v551 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v345.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v552, v345.__r_.__value_.__l.__data_, v345.__r_.__value_.__l.__size_);
  else
    v552 = v345;
  v551 = off_24C335B18;
  v554 = v347;
  v553 = v160;
  v555 = v348;
  v546 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v340.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v547, v340.__r_.__value_.__l.__data_, v340.__r_.__value_.__l.__size_);
  else
    v547 = v340;
  v546 = off_24C335B18;
  v549 = v342;
  v548 = v157;
  v550 = v343;
  v541 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v335.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v542, v335.__r_.__value_.__l.__data_, v335.__r_.__value_.__l.__size_);
  else
    v542 = v335;
  v541 = off_24C335B18;
  v544 = v337;
  v543 = v155;
  v545 = v338;
  v536 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v330.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v537, v330.__r_.__value_.__l.__data_, v330.__r_.__value_.__l.__size_);
  else
    v537 = v330;
  v536 = off_24C335B18;
  v539 = v332;
  v538 = v152;
  v540 = v333;
  v531 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v325.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v532, v325.__r_.__value_.__l.__data_, v325.__r_.__value_.__l.__size_);
  else
    v532 = v325;
  v531 = off_24C335B18;
  v534 = v327;
  v533 = v149;
  v535 = v328;
  v526 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v320.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v527, v320.__r_.__value_.__l.__data_, v320.__r_.__value_.__l.__size_);
  else
    v527 = v320;
  v528 = v321;
  v526 = &off_24C335AB8;
  v529 = v322;
  if (SHIBYTE(v323.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v530, v323.__r_.__value_.__l.__data_, v323.__r_.__value_.__l.__size_);
  else
    v530 = v323;
  v521 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v315.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v522, v315.__r_.__value_.__l.__data_, v315.__r_.__value_.__l.__size_);
  else
    v522 = v315;
  v523 = v316;
  v521 = &off_24C335AB8;
  v524 = v317;
  if (SHIBYTE(v318.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v525, v318.__r_.__value_.__l.__data_, v318.__r_.__value_.__l.__size_);
  else
    v525 = v318;
  v516 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v310.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v517, v310.__r_.__value_.__l.__data_, v310.__r_.__value_.__l.__size_);
  else
    v517 = v310;
  v518 = v311;
  v516 = &off_24C335AB8;
  v519 = v312;
  if (SHIBYTE(v313.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v520, v313.__r_.__value_.__l.__data_, v313.__r_.__value_.__l.__size_);
  else
    v520 = v313;
  v511 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v305.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v512, v305.__r_.__value_.__l.__data_, v305.__r_.__value_.__l.__size_);
  else
    v512 = v305;
  v513 = v306;
  v511 = &off_24C335AB8;
  v514 = v307;
  if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v515, v308.__r_.__value_.__l.__data_, v308.__r_.__value_.__l.__size_);
  else
    v515 = v308;
  v506 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v300.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v507, v300.__r_.__value_.__l.__data_, v300.__r_.__value_.__l.__size_);
  else
    v507 = v300;
  v508 = v301;
  v506 = &off_24C335AB8;
  v509 = v302;
  if (SHIBYTE(v303.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v510, v303.__r_.__value_.__l.__data_, v303.__r_.__value_.__l.__size_);
  else
    v510 = v303;
  v501 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v295.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v502, v295.__r_.__value_.__l.__data_, v295.__r_.__value_.__l.__size_);
  else
    v502 = v295;
  v501 = off_24C335B18;
  v504 = v297;
  v503 = v146;
  v505 = v298;
  v496 = (uint64_t (**)())off_24C335D90;
  v110 = SHIBYTE(v290.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v290.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v497, v290.__r_.__value_.__l.__data_, v290.__r_.__value_.__l.__size_);
  else
    v497 = v290;
  v496 = off_24C335B18;
  v499 = v292;
  v498 = v145;
  v500 = v293;
  v491 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v285.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v492, v285.__r_.__value_.__l.__data_, v285.__r_.__value_.__l.__size_);
  else
    v492 = v285;
  v493 = v286;
  v491 = &off_24C335AB8;
  v494 = v287;
  if (SHIBYTE(v288.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v495, v288.__r_.__value_.__l.__data_, v288.__r_.__value_.__l.__size_);
  else
    v495 = v288;
  v486 = (uint64_t (**)())off_24C335D90;
  v111 = SHIBYTE(v280.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v280.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v487, v280.__r_.__value_.__l.__data_, v280.__r_.__value_.__l.__size_);
  else
    v487 = v280;
  v486 = off_24C335B18;
  v489 = v282;
  v488 = v144;
  v490 = v283;
  v481 = (uint64_t (**)())off_24C335D90;
  v112 = SHIBYTE(v275.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v275.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v482, v275.__r_.__value_.__l.__data_, v275.__r_.__value_.__l.__size_);
  else
    v482 = v275;
  v481 = off_24C335B18;
  v484 = v277;
  v483 = v143;
  v485 = v278;
  v476 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v270.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v477, v270.__r_.__value_.__l.__data_, v270.__r_.__value_.__l.__size_);
  else
    v477 = v270;
  v478 = v271;
  v476 = &off_24C335AB8;
  v479 = v272;
  if (SHIBYTE(v273.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v480, v273.__r_.__value_.__l.__data_, v273.__r_.__value_.__l.__size_);
  else
    v480 = v273;
  v471 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v265.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v472, v265.__r_.__value_.__l.__data_, v265.__r_.__value_.__l.__size_);
  else
    v472 = v265;
  v473 = v266;
  v471 = &off_24C335AB8;
  v474 = v267;
  if (SHIBYTE(v268.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v475, v268.__r_.__value_.__l.__data_, v268.__r_.__value_.__l.__size_);
  else
    v475 = v268;
  v466 = (uint64_t (**)())off_24C335D90;
  v166 = SHIBYTE(v260.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v260.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v467, v260.__r_.__value_.__l.__data_, v260.__r_.__value_.__l.__size_);
  else
    v467 = v260;
  v466 = off_24C335B18;
  v469 = v262;
  v468 = v141;
  v470 = v263;
  v461 = (uint64_t (**)())off_24C335D90;
  v165 = SHIBYTE(v255.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v255.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v462, v255.__r_.__value_.__l.__data_, v255.__r_.__value_.__l.__size_);
  else
    v462 = v255;
  v461 = off_24C335B18;
  v464 = v257;
  v463 = v140;
  v465 = v258;
  v456 = (uint64_t (**)())off_24C335D90;
  v163 = SHIBYTE(v250.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v250.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v457, v250.__r_.__value_.__l.__data_, v250.__r_.__value_.__l.__size_);
  else
    v457 = v250;
  v456 = off_24C335B18;
  v459 = v252;
  v458 = v139;
  v460 = v253;
  v452 = (uint64_t (**)())off_24C335D90;
  v161 = SHIBYTE(v246.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v246.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v453, v246.__r_.__value_.__l.__data_, v246.__r_.__value_.__l.__size_);
  else
    v453 = v246;
  v454 = v93;
  v452 = off_24C335AF8;
  v455 = v138;
  v447 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v241.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v448, v241.__r_.__value_.__l.__data_, v241.__r_.__value_.__l.__size_);
  else
    v448 = v241;
  v449 = v242;
  v447 = &off_24C335AB8;
  v450 = v243;
  if (SHIBYTE(v244.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v451, v244.__r_.__value_.__l.__data_, v244.__r_.__value_.__l.__size_);
  else
    v451 = v244;
  v442 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v236.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v443, v236.__r_.__value_.__l.__data_, v236.__r_.__value_.__l.__size_);
  else
    v443 = v236;
  v444 = v237;
  v442 = &off_24C335AB8;
  v445 = v238;
  if (SHIBYTE(v239.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v446, v239.__r_.__value_.__l.__data_, v239.__r_.__value_.__l.__size_);
  else
    v446 = v239;
  v437 = (uint64_t (**)())off_24C335D90;
  v113 = SHIBYTE(v231.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v231.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v438, v231.__r_.__value_.__l.__data_, v231.__r_.__value_.__l.__size_);
  else
    v438 = v231;
  v437 = off_24C335B18;
  v440 = v233;
  v439 = v137;
  v441 = v234;
  v432 = (uint64_t (**)())off_24C335D90;
  v159 = SHIBYTE(v226.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v226.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v433, v226.__r_.__value_.__l.__data_, v226.__r_.__value_.__l.__size_);
  else
    v433 = v226;
  v432 = off_24C335B18;
  v435 = v228;
  v434 = v136;
  v436 = v229;
  v427 = (uint64_t (**)())off_24C335D90;
  v158 = SHIBYTE(v221.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v221.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v428, v221.__r_.__value_.__l.__data_, v221.__r_.__value_.__l.__size_);
  else
    v428 = v221;
  v427 = off_24C335B18;
  v430 = v223;
  v429 = v135;
  v431 = v224;
  v422 = (uint64_t (**)())off_24C335D90;
  v156 = SHIBYTE(v216.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v423, v216.__r_.__value_.__l.__data_, v216.__r_.__value_.__l.__size_);
  else
    v423 = v216;
  v422 = off_24C335B18;
  v425 = v218;
  v424 = v134;
  v426 = v219;
  v418 = (uint64_t (**)())off_24C335D90;
  v154 = SHIBYTE(v212.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v212.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v419, v212.__r_.__value_.__l.__data_, v212.__r_.__value_.__l.__size_);
  else
    v419 = v212;
  v420 = v133;
  v418 = off_24C335AF8;
  v421 = v132;
  v414 = (uint64_t (**)())off_24C335D90;
  v153 = SHIBYTE(v208.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v208.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v415, v208.__r_.__value_.__l.__data_, v208.__r_.__value_.__l.__size_);
  else
    v415 = v208;
  v151 = v112;
  v416 = v131;
  v414 = off_24C335AF8;
  v417 = v130;
  v409 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v203.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v410, v203.__r_.__value_.__l.__data_, v203.__r_.__value_.__l.__size_);
  else
    v410 = v203;
  v411 = v204;
  v409 = &off_24C335AB8;
  v412 = v205;
  v150 = v113;
  if (SHIBYTE(v206.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v413, v206.__r_.__value_.__l.__data_, v206.__r_.__value_.__l.__size_);
  else
    v413 = v206;
  v404 = (uint64_t (**)())off_24C335D90;
  v114 = SHIBYTE(v198.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v198.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v405, v198.__r_.__value_.__l.__data_, v198.__r_.__value_.__l.__size_);
  else
    v405 = v198;
  v404 = off_24C335B18;
  v407 = v200;
  v406 = v129;
  v408 = v201;
  v399 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v193.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v400, v193.__r_.__value_.__l.__data_, v193.__r_.__value_.__l.__size_);
  else
    v400 = v193;
  v401 = v194;
  v399 = &off_24C335AB8;
  v402 = v195;
  v148 = v111;
  if (SHIBYTE(v196.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v403, v196.__r_.__value_.__l.__data_, v196.__r_.__value_.__l.__size_);
  else
    v403 = v196;
  v394 = (uint64_t (**)())off_24C335D90;
  v115 = SHIBYTE(v188.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v188.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v395, v188.__r_.__value_.__l.__data_, v188.__r_.__value_.__l.__size_);
  else
    v395 = v188;
  v394 = off_24C335B18;
  v397 = v190;
  v396 = v128;
  v398 = v191;
  v389 = (uint64_t (**)())off_24C335D90;
  v116 = SHIBYTE(v183.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v183.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v390, v183.__r_.__value_.__l.__data_, v183.__r_.__value_.__l.__size_);
  else
    v390 = v183;
  v389 = off_24C335B18;
  v392 = v185;
  v391 = v127;
  v393 = v186;
  v384 = (uint64_t (**)())off_24C335D90;
  v117 = SHIBYTE(v178.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v178.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v385, v178.__r_.__value_.__l.__data_, v178.__r_.__value_.__l.__size_);
  else
    v385 = v178;
  v384 = off_24C335B18;
  v387 = v180;
  v386 = v126;
  v388 = v181;
  v379 = (uint64_t (**)())off_24C335D90;
  v118 = SHIBYTE(v173.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v173.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v173.__r_.__value_.__l.__data_, v173.__r_.__value_.__l.__size_);
  else
    __p = v173;
  v379 = off_24C335B18;
  v382 = v175;
  v381 = v125;
  v383 = v176;
  v374 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v168.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v375, v168.__r_.__value_.__l.__data_, v168.__r_.__value_.__l.__size_);
  else
    v375 = v168;
  v376 = v169;
  v374 = &off_24C335AB8;
  v377 = v170;
  if (SHIBYTE(v171.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v378, v171.__r_.__value_.__l.__data_, v171.__r_.__value_.__l.__size_);
  else
    v378 = v171;
  mediaplatform::DatabaseColumnTuple<17ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(v147, (uint64_t)&v571, (uint64_t)&v566, (uint64_t)&v561, (uint64_t)&v556, (uint64_t)&v551, (uint64_t)&v546, (uint64_t)&v541, (uint64_t)&v536, (uint64_t)&v531, (uint64_t)&v526, (uint64_t)&v521, (uint64_t)&v516, (uint64_t)&v511, (uint64_t)&v506, (uint64_t)&v501, (uint64_t)&v496, (uint64_t)&v491, (uint64_t)&v486,
    (uint64_t)&v481,
    (uint64_t)&v476,
    (uint64_t)&v471,
    (uint64_t)&v466,
    (uint64_t)&v461,
    (uint64_t)&v456,
    (uint64_t)&v452,
    (uint64_t)&v447,
    (uint64_t)&v442,
    (uint64_t)&v437,
    (uint64_t)&v432,
    (uint64_t)&v427,
    (uint64_t)&v422,
    (uint64_t)&v418,
    (uint64_t)&v414,
    (uint64_t)&v409,
    (uint64_t)&v404,
    (uint64_t)&v399,
    (uint64_t)&v394,
    (uint64_t)&v389,
    (uint64_t)&v384,
    (uint64_t)&v379,
    (uint64_t)&v374);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v374);
  v379 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v384 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v385.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v385.__r_.__value_.__l.__data_);
  v389 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v390.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v390.__r_.__value_.__l.__data_);
  v394 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v395.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v395.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v399);
  v404 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v405.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v405.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v409);
  v414 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v415.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v415.__r_.__value_.__l.__data_);
  v418 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v419.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v419.__r_.__value_.__l.__data_);
  v422 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v423.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v423.__r_.__value_.__l.__data_);
  v427 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v428.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v428.__r_.__value_.__l.__data_);
  v432 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v433.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v433.__r_.__value_.__l.__data_);
  v437 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v438.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v438.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v442);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v447);
  v452 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v453.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v453.__r_.__value_.__l.__data_);
  v456 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v457.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v457.__r_.__value_.__l.__data_);
  v461 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v462.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v462.__r_.__value_.__l.__data_);
  v466 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v467.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v467.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v471);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v476);
  v481 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v482.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v482.__r_.__value_.__l.__data_);
  v486 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v487.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v487.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v491);
  v496 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v497.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v497.__r_.__value_.__l.__data_);
  v501 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v502.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v502.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v506);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v511);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v516);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v521);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v526);
  v531 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v532.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v532.__r_.__value_.__l.__data_);
  v536 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v537.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v537.__r_.__value_.__l.__data_);
  v541 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v542.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v542.__r_.__value_.__l.__data_);
  v546 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v547.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v547.__r_.__value_.__l.__data_);
  v551 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v552.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v552.__r_.__value_.__l.__data_);
  v556 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v557.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v557.__r_.__value_.__l.__data_);
  v561 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v562.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v562.__r_.__value_.__l.__data_);
  v566 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v567.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v567.__r_.__value_.__l.__data_);
  v571 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v572.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v572.__r_.__value_.__l.__data_);
  *(_QWORD *)(v147 + 2176) = off_24C335D90;
  v119 = (std::string *)(v147 + 2184);
  v120 = SHIBYTE(v370.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v370.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v119, v370.__r_.__value_.__l.__data_, v370.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v119->__r_.__value_.__l.__data_ = *(_OWORD *)&v370.__r_.__value_.__l.__data_;
    *(_QWORD *)(v147 + 2200) = *((_QWORD *)&v370.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(v147 + 2208) = v371;
  *(_QWORD *)(v147 + 2176) = off_24C335B18;
  *(_QWORD *)(v147 + 2212) = v372;
  *(_DWORD *)(v147 + 2220) = v373;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v167);
  v172 = (uint64_t (**)())off_24C335D90;
  if (v118 < 0)
    operator delete(v173.__r_.__value_.__l.__data_);
  v177 = (uint64_t (**)())off_24C335D90;
  if (v117 < 0)
    operator delete(v178.__r_.__value_.__l.__data_);
  v182 = (uint64_t (**)())off_24C335D90;
  if (v116 < 0)
    operator delete(v183.__r_.__value_.__l.__data_);
  v187 = (uint64_t (**)())off_24C335D90;
  if (v115 < 0)
    operator delete(v188.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v192);
  v197 = (uint64_t (**)())off_24C335D90;
  if (v114 < 0)
    operator delete(v198.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v202);
  v207 = (uint64_t (**)())off_24C335D90;
  if (v153 < 0)
    operator delete(v208.__r_.__value_.__l.__data_);
  if (v154 < 0)
    operator delete(v212.__r_.__value_.__l.__data_);
  if (v156 < 0)
    operator delete(v216.__r_.__value_.__l.__data_);
  if (v158 < 0)
    operator delete(v221.__r_.__value_.__l.__data_);
  if (v159 < 0)
  {
    operator delete(v226.__r_.__value_.__l.__data_);
    if ((v150 & 0x80000000) == 0)
      goto LABEL_407;
  }
  else if ((v150 & 0x80000000) == 0)
  {
    goto LABEL_407;
  }
  operator delete(v231.__r_.__value_.__l.__data_);
LABEL_407:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v235);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v240);
  if (v161 < 0)
    operator delete(v246.__r_.__value_.__l.__data_);
  if (v163 < 0)
    operator delete(v250.__r_.__value_.__l.__data_);
  if (v165 < 0)
    operator delete(v255.__r_.__value_.__l.__data_);
  if (v166 < 0)
    operator delete(v260.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v264);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v269);
  if (v151 < 0)
  {
    operator delete(v275.__r_.__value_.__l.__data_);
    if ((v148 & 0x80000000) == 0)
      goto LABEL_417;
  }
  else if ((v148 & 0x80000000) == 0)
  {
    goto LABEL_417;
  }
  operator delete(v280.__r_.__value_.__l.__data_);
LABEL_417:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v284);
  if (v110 < 0)
    operator delete(v290.__r_.__value_.__l.__data_);
  if (SHIBYTE(v295.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v295.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v299);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v304);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v309);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v314);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v319);
  if (SHIBYTE(v325.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v325.__r_.__value_.__l.__data_);
  if (SHIBYTE(v330.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v330.__r_.__value_.__l.__data_);
  if (SHIBYTE(v335.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v335.__r_.__value_.__l.__data_);
  if (SHIBYTE(v340.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v340.__r_.__value_.__l.__data_);
  if (SHIBYTE(v345.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v345.__r_.__value_.__l.__data_);
  if (SHIBYTE(v350.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v350.__r_.__value_.__l.__data_);
  if (SHIBYTE(v355.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v355.__r_.__value_.__l.__data_);
  if (SHIBYTE(v360.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v360.__r_.__value_.__l.__data_);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__s.__r_.__value_.__l.__data_);
    if ((v120 & 0x80000000) == 0)
      goto LABEL_439;
  }
  else if ((v120 & 0x80000000) == 0)
  {
    goto LABEL_439;
  }
  operator delete(v370.__r_.__value_.__l.__data_);
LABEL_439:
  *(_QWORD *)(v147 + 2224) = off_24C335D90;
  v121 = (std::string *)(v147 + 2232);
  if (*(char *)(v142 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v121, *(const std::string::value_type **)(v142 + 8), *(_QWORD *)(v142 + 16));
  }
  else
  {
    v122 = *(_OWORD *)(v142 + 8);
    *(_QWORD *)(v147 + 2248) = *(_QWORD *)(v142 + 24);
    *(_OWORD *)&v121->__r_.__value_.__l.__data_ = v122;
  }
  *(_DWORD *)(v147 + 2256) = *(_DWORD *)(v142 + 32);
  *(_QWORD *)(v147 + 2224) = off_24C335B18;
  v123 = *(_QWORD *)(v142 + 36);
  *(_DWORD *)(v147 + 2268) = *(_DWORD *)(v142 + 44);
  *(_QWORD *)(v147 + 2260) = v123;
  return v147;
}

void sub_20A89B968(_Unwind_Exception *a1)
{
  uint64_t v1;

  mediaplatform::DatabaseColumnTuple<16ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(v1);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<15ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 2224) = off_24C335D90;
  if (*(char *)(a1 + 2255) < 0)
    operator delete(*(void **)(a1 + 2232));
  *(_QWORD *)(a1 + 2176) = off_24C335D90;
  if (*(char *)(a1 + 2207) < 0)
    operator delete(*(void **)(a1 + 2184));
  return mediaplatform::DatabaseColumnTuple<17ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<16ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 2176) = off_24C335D90;
  if (*(char *)(a1 + 2207) < 0)
    operator delete(*(void **)(a1 + 2184));
  return mediaplatform::DatabaseColumnTuple<17ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<17ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  uint64_t v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  uint64_t v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  std::string *v115;
  int v116;
  std::string *v117;
  __int128 v118;
  uint64_t v119;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  uint64_t v161;
  uint64_t (**v162)();
  std::string v163;
  int v164;
  char v165;
  std::string v166;
  uint64_t (**v167)();
  std::string v168;
  int v169;
  uint64_t v170;
  int v171;
  uint64_t (**v172)();
  std::string v173;
  int v174;
  uint64_t v175;
  int v176;
  uint64_t (**v177)();
  std::string v178;
  int v179;
  uint64_t v180;
  int v181;
  uint64_t (**v182)();
  std::string v183;
  int v184;
  uint64_t v185;
  int v186;
  uint64_t (**v187)();
  std::string v188;
  int v189;
  char v190;
  std::string v191;
  uint64_t (**v192)();
  std::string v193;
  int v194;
  uint64_t v195;
  int v196;
  uint64_t (**v197)();
  std::string v198;
  int v199;
  char v200;
  std::string v201;
  uint64_t (**v202)();
  std::string v203;
  int v204;
  uint64_t v205;
  uint64_t (**v206)();
  std::string v207;
  int v208;
  uint64_t v209;
  uint64_t (**v210)();
  std::string v211;
  int v212;
  uint64_t v213;
  int v214;
  uint64_t (**v215)();
  std::string v216;
  int v217;
  uint64_t v218;
  int v219;
  uint64_t (**v220)();
  std::string v221;
  int v222;
  uint64_t v223;
  int v224;
  uint64_t (**v225)();
  std::string v226;
  int v227;
  uint64_t v228;
  int v229;
  uint64_t (**v230)();
  std::string v231;
  int v232;
  char v233;
  std::string v234;
  uint64_t (**v235)();
  std::string v236;
  int v237;
  char v238;
  std::string v239;
  uint64_t (**v240)();
  std::string v241;
  int v242;
  uint64_t v243;
  uint64_t (**v244)();
  std::string v245;
  int v246;
  uint64_t v247;
  int v248;
  uint64_t (**v249)();
  std::string v250;
  int v251;
  uint64_t v252;
  int v253;
  uint64_t (**v254)();
  std::string v255;
  int v256;
  uint64_t v257;
  int v258;
  uint64_t (**v259)();
  std::string v260;
  int v261;
  char v262;
  std::string v263;
  uint64_t (**v264)();
  std::string v265;
  int v266;
  char v267;
  std::string v268;
  uint64_t (**v269)();
  std::string v270;
  int v271;
  uint64_t v272;
  int v273;
  uint64_t (**v274)();
  std::string v275;
  int v276;
  uint64_t v277;
  int v278;
  uint64_t (**v279)();
  std::string v280;
  int v281;
  char v282;
  std::string v283;
  uint64_t (**v284)();
  std::string v285;
  int v286;
  uint64_t v287;
  int v288;
  uint64_t (**v289)();
  std::string v290;
  int v291;
  uint64_t v292;
  int v293;
  uint64_t (**v294)();
  std::string v295;
  int v296;
  char v297;
  std::string v298;
  uint64_t (**v299)();
  std::string v300;
  int v301;
  char v302;
  std::string v303;
  uint64_t (**v304)();
  std::string v305;
  int v306;
  char v307;
  std::string v308;
  uint64_t (**v309)();
  std::string v310;
  int v311;
  char v312;
  std::string v313;
  uint64_t (**v314)();
  std::string v315;
  int v316;
  char v317;
  std::string v318;
  uint64_t (**v319)();
  std::string v320;
  int v321;
  uint64_t v322;
  int v323;
  uint64_t (**v324)();
  std::string v325;
  int v326;
  uint64_t v327;
  int v328;
  uint64_t (**v329)();
  std::string v330;
  int v331;
  uint64_t v332;
  int v333;
  uint64_t (**v334)();
  std::string v335;
  int v336;
  uint64_t v337;
  int v338;
  uint64_t (**v339)();
  std::string v340;
  int v341;
  uint64_t v342;
  int v343;
  uint64_t (**v344)();
  std::string v345;
  int v346;
  uint64_t v347;
  int v348;
  uint64_t (**v349)();
  std::string __s;
  int v351;
  uint64_t v352;
  int v353;
  uint64_t (**v354)();
  std::string v355;
  int v356;
  uint64_t v357;
  int v358;
  uint64_t (**v359)();
  std::string v360;
  int v361;
  char v362;
  std::string v363;
  uint64_t (**v364)();
  std::string __p;
  int v366;
  uint64_t v367;
  int v368;
  uint64_t (**v369)();
  std::string v370;
  int v371;
  uint64_t v372;
  int v373;
  uint64_t (**v374)();
  std::string v375;
  int v376;
  uint64_t v377;
  int v378;
  uint64_t (**v379)();
  std::string v380;
  int v381;
  uint64_t v382;
  int v383;
  uint64_t (**v384)();
  std::string v385;
  int v386;
  char v387;
  std::string v388;
  uint64_t (**v389)();
  std::string v390;
  int v391;
  uint64_t v392;
  int v393;
  uint64_t (**v394)();
  std::string v395;
  int v396;
  char v397;
  std::string v398;
  uint64_t (**v399)();
  std::string v400;
  int v401;
  uint64_t v402;
  uint64_t (**v403)();
  std::string v404;
  int v405;
  uint64_t v406;
  uint64_t (**v407)();
  std::string v408;
  int v409;
  uint64_t v410;
  int v411;
  uint64_t (**v412)();
  std::string v413;
  int v414;
  uint64_t v415;
  int v416;
  uint64_t (**v417)();
  std::string v418;
  int v419;
  uint64_t v420;
  int v421;
  uint64_t (**v422)();
  std::string v423;
  int v424;
  uint64_t v425;
  int v426;
  uint64_t (**v427)();
  std::string v428;
  int v429;
  char v430;
  std::string v431;
  uint64_t (**v432)();
  std::string v433;
  int v434;
  char v435;
  std::string v436;
  uint64_t (**v437)();
  std::string v438;
  int v439;
  uint64_t v440;
  uint64_t (**v441)();
  std::string v442;
  int v443;
  uint64_t v444;
  int v445;
  uint64_t (**v446)();
  std::string v447;
  int v448;
  uint64_t v449;
  int v450;
  uint64_t (**v451)();
  std::string v452;
  int v453;
  uint64_t v454;
  int v455;
  uint64_t (**v456)();
  std::string v457;
  int v458;
  char v459;
  std::string v460;
  uint64_t (**v461)();
  std::string v462;
  int v463;
  char v464;
  std::string v465;
  uint64_t (**v466)();
  std::string v467;
  int v468;
  uint64_t v469;
  int v470;
  uint64_t (**v471)();
  std::string v472;
  int v473;
  uint64_t v474;
  int v475;
  uint64_t (**v476)();
  std::string v477;
  int v478;
  char v479;
  std::string v480;
  uint64_t (**v481)();
  std::string v482;
  int v483;
  uint64_t v484;
  int v485;
  uint64_t (**v486)();
  std::string v487;
  int v488;
  uint64_t v489;
  int v490;
  uint64_t (**v491)();
  std::string v492;
  int v493;
  char v494;
  std::string v495;
  uint64_t (**v496)();
  std::string v497;
  int v498;
  char v499;
  std::string v500;
  uint64_t (**v501)();
  std::string v502;
  int v503;
  char v504;
  std::string v505;
  uint64_t (**v506)();
  std::string v507;
  int v508;
  char v509;
  std::string v510;
  uint64_t (**v511)();
  std::string v512;
  int v513;
  char v514;
  std::string v515;
  uint64_t (**v516)();
  std::string v517;
  int v518;
  uint64_t v519;
  int v520;
  uint64_t (**v521)();
  std::string v522;
  int v523;
  uint64_t v524;
  int v525;
  uint64_t (**v526)();
  std::string v527;
  int v528;
  uint64_t v529;
  int v530;
  uint64_t (**v531)();
  std::string v532;
  int v533;
  uint64_t v534;
  int v535;
  uint64_t (**v536)();
  std::string v537;
  int v538;
  uint64_t v539;
  int v540;
  uint64_t (**v541)();
  std::string v542;
  int v543;
  uint64_t v544;
  int v545;
  uint64_t (**v546)();
  std::string v547;
  int v548;
  uint64_t v549;
  int v550;

  v42 = MEMORY[0x24BDAC7A8](a1);
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v54 = v43;
  v56 = v55;
  v161 = v42;
  if (*(char *)(v43 + 31) < 0)
    std::string::__init_copy_ctor_external(&v355, *(const std::string::value_type **)(v43 + 8), *(_QWORD *)(v43 + 16));
  else
    v355 = *(std::string *)(v43 + 8);
  v57 = *(_DWORD *)(v54 + 32);
  v354 = off_24C335B18;
  v357 = *(_QWORD *)(v54 + 36);
  v58 = *(_DWORD *)(v54 + 44);
  v356 = v57;
  v358 = v58;
  if (*(char *)(v53 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(v53 + 8), *(_QWORD *)(v53 + 16));
  else
    __s = *(std::string *)(v53 + 8);
  v59 = *(_DWORD *)(v53 + 32);
  v349 = off_24C335B18;
  v352 = *(_QWORD *)(v53 + 36);
  v60 = *(_DWORD *)(v53 + 44);
  v351 = v59;
  v353 = v60;
  if (*(char *)(v51 + 31) < 0)
    std::string::__init_copy_ctor_external(&v345, *(const std::string::value_type **)(v51 + 8), *(_QWORD *)(v51 + 16));
  else
    v345 = *(std::string *)(v51 + 8);
  v61 = *(_DWORD *)(v51 + 32);
  v344 = off_24C335B18;
  v347 = *(_QWORD *)(v51 + 36);
  v62 = *(_DWORD *)(v51 + 44);
  v346 = v61;
  v348 = v62;
  v157 = v59;
  if (*(char *)(v49 + 31) < 0)
    std::string::__init_copy_ctor_external(&v340, *(const std::string::value_type **)(v49 + 8), *(_QWORD *)(v49 + 16));
  else
    v340 = *(std::string *)(v49 + 8);
  v63 = *(_DWORD *)(v49 + 32);
  v339 = off_24C335B18;
  v342 = *(_QWORD *)(v49 + 36);
  v64 = *(_DWORD *)(v49 + 44);
  v341 = v63;
  v343 = v64;
  v155 = v61;
  if (*(char *)(v47 + 31) < 0)
    std::string::__init_copy_ctor_external(&v335, *(const std::string::value_type **)(v47 + 8), *(_QWORD *)(v47 + 16));
  else
    v335 = *(std::string *)(v47 + 8);
  v65 = *(_DWORD *)(v47 + 32);
  v334 = off_24C335B18;
  v337 = *(_QWORD *)(v47 + 36);
  v66 = *(_DWORD *)(v47 + 44);
  v336 = v65;
  v338 = v66;
  if (*(char *)(v45 + 31) < 0)
    std::string::__init_copy_ctor_external(&v330, *(const std::string::value_type **)(v45 + 8), *(_QWORD *)(v45 + 16));
  else
    v330 = *(std::string *)(v45 + 8);
  v67 = *(_DWORD *)(v45 + 32);
  v329 = off_24C335B18;
  v332 = *(_QWORD *)(v45 + 36);
  v68 = *(_DWORD *)(v45 + 44);
  v331 = v67;
  v333 = v68;
  v153 = v63;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v325, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v325 = *(std::string *)(a9 + 8);
  v69 = *(_DWORD *)(a9 + 32);
  v324 = off_24C335B18;
  v327 = *(_QWORD *)(a9 + 36);
  v70 = *(_DWORD *)(a9 + 44);
  v326 = v69;
  v328 = v70;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v320, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v320 = *(std::string *)(a10 + 8);
  v71 = *(_DWORD *)(a10 + 32);
  v319 = off_24C335B18;
  v322 = *(_QWORD *)(a10 + 36);
  v72 = *(_DWORD *)(a10 + 44);
  v151 = v71;
  v321 = v71;
  v323 = v72;
  v314 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v315, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v315 = *(std::string *)(a11 + 8);
  v316 = *(_DWORD *)(a11 + 32);
  v314 = &off_24C335AB8;
  v317 = *(_BYTE *)(a11 + 36);
  if (*(char *)(a11 + 63) < 0)
    std::string::__init_copy_ctor_external(&v318, *(const std::string::value_type **)(a11 + 40), *(_QWORD *)(a11 + 48));
  else
    v318 = *(std::string *)(a11 + 40);
  v309 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v310, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v310 = *(std::string *)(a12 + 8);
  v311 = *(_DWORD *)(a12 + 32);
  v309 = &off_24C335AB8;
  v312 = *(_BYTE *)(a12 + 36);
  if (*(char *)(a12 + 63) < 0)
    std::string::__init_copy_ctor_external(&v313, *(const std::string::value_type **)(a12 + 40), *(_QWORD *)(a12 + 48));
  else
    v313 = *(std::string *)(a12 + 40);
  v304 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v305, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v305 = *(std::string *)(a13 + 8);
  v306 = *(_DWORD *)(a13 + 32);
  v304 = &off_24C335AB8;
  v307 = *(_BYTE *)(a13 + 36);
  if (*(char *)(a13 + 63) < 0)
    std::string::__init_copy_ctor_external(&v308, *(const std::string::value_type **)(a13 + 40), *(_QWORD *)(a13 + 48));
  else
    v308 = *(std::string *)(a13 + 40);
  v299 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v300, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v300 = *(std::string *)(a14 + 8);
  v301 = *(_DWORD *)(a14 + 32);
  v299 = &off_24C335AB8;
  v302 = *(_BYTE *)(a14 + 36);
  v159 = v67;
  if (*(char *)(a14 + 63) < 0)
    std::string::__init_copy_ctor_external(&v303, *(const std::string::value_type **)(a14 + 40), *(_QWORD *)(a14 + 48));
  else
    v303 = *(std::string *)(a14 + 40);
  v73 = v65;
  v294 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v295, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v295 = *(std::string *)(a15 + 8);
  v296 = *(_DWORD *)(a15 + 32);
  v294 = &off_24C335AB8;
  v297 = *(_BYTE *)(a15 + 36);
  if (*(char *)(a15 + 63) < 0)
    std::string::__init_copy_ctor_external(&v298, *(const std::string::value_type **)(a15 + 40), *(_QWORD *)(a15 + 48));
  else
    v298 = *(std::string *)(a15 + 40);
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v290, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v290 = *(std::string *)(a16 + 8);
  v74 = *(_DWORD *)(a16 + 32);
  v289 = off_24C335B18;
  v292 = *(_QWORD *)(a16 + 36);
  v75 = *(_DWORD *)(a16 + 44);
  v142 = v74;
  v291 = v74;
  v293 = v75;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v285, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v285 = *(std::string *)(a17 + 8);
  v76 = *(_DWORD *)(a17 + 32);
  v284 = off_24C335B18;
  v287 = *(_QWORD *)(a17 + 36);
  v77 = *(_DWORD *)(a17 + 44);
  v141 = v76;
  v286 = v76;
  v288 = v77;
  v279 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v280, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v280 = *(std::string *)(a18 + 8);
  v281 = *(_DWORD *)(a18 + 32);
  v279 = &off_24C335AB8;
  v282 = *(_BYTE *)(a18 + 36);
  if (*(char *)(a18 + 63) < 0)
    std::string::__init_copy_ctor_external(&v283, *(const std::string::value_type **)(a18 + 40), *(_QWORD *)(a18 + 48));
  else
    v283 = *(std::string *)(a18 + 40);
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v275, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v275 = *(std::string *)(a19 + 8);
  v78 = *(_DWORD *)(a19 + 32);
  v274 = off_24C335B18;
  v277 = *(_QWORD *)(a19 + 36);
  v79 = *(_DWORD *)(a19 + 44);
  v140 = v78;
  v276 = v78;
  v278 = v79;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v270, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v270 = *(std::string *)(a20 + 8);
  v80 = *(_DWORD *)(a20 + 32);
  v269 = off_24C335B18;
  v272 = *(_QWORD *)(a20 + 36);
  v81 = *(_DWORD *)(a20 + 44);
  v139 = v80;
  v271 = v80;
  v273 = v81;
  v264 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v265, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v265 = *(std::string *)(a21 + 8);
  v266 = *(_DWORD *)(a21 + 32);
  v264 = &off_24C335AB8;
  v267 = *(_BYTE *)(a21 + 36);
  if (*(char *)(a21 + 63) < 0)
    std::string::__init_copy_ctor_external(&v268, *(const std::string::value_type **)(a21 + 40), *(_QWORD *)(a21 + 48));
  else
    v268 = *(std::string *)(a21 + 40);
  v259 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v260, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v260 = *(std::string *)(a22 + 8);
  v261 = *(_DWORD *)(a22 + 32);
  v259 = &off_24C335AB8;
  v262 = *(_BYTE *)(a22 + 36);
  if (*(char *)(a22 + 63) < 0)
    std::string::__init_copy_ctor_external(&v263, *(const std::string::value_type **)(a22 + 40), *(_QWORD *)(a22 + 48));
  else
    v263 = *(std::string *)(a22 + 40);
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v255, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v255 = *(std::string *)(a23 + 8);
  v82 = *(_DWORD *)(a23 + 32);
  v254 = off_24C335B18;
  v257 = *(_QWORD *)(a23 + 36);
  v83 = *(_DWORD *)(a23 + 44);
  v138 = v82;
  v256 = v82;
  v258 = v83;
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v250, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v250 = *(std::string *)(a24 + 8);
  v84 = *(_DWORD *)(a24 + 32);
  v249 = off_24C335B18;
  v252 = *(_QWORD *)(a24 + 36);
  v85 = *(_DWORD *)(a24 + 44);
  v137 = v84;
  v251 = v84;
  v253 = v85;
  if (*(char *)(a25 + 31) < 0)
    std::string::__init_copy_ctor_external(&v245, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  else
    v245 = *(std::string *)(a25 + 8);
  v86 = *(_DWORD *)(a25 + 32);
  v244 = off_24C335B18;
  v247 = *(_QWORD *)(a25 + 36);
  v87 = *(_DWORD *)(a25 + 44);
  v136 = v86;
  v246 = v86;
  v248 = v87;
  v126 = v56;
  if (*(char *)(a26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v241, *(const std::string::value_type **)(a26 + 8), *(_QWORD *)(a26 + 16));
  else
    v241 = *(std::string *)(a26 + 8);
  v135 = *(_DWORD *)(a26 + 32);
  v242 = v135;
  v240 = off_24C335AF8;
  v88 = *(_QWORD *)(a26 + 36);
  v243 = v88;
  v235 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a27 + 31) < 0)
    std::string::__init_copy_ctor_external(&v236, *(const std::string::value_type **)(a27 + 8), *(_QWORD *)(a27 + 16));
  else
    v236 = *(std::string *)(a27 + 8);
  v237 = *(_DWORD *)(a27 + 32);
  v235 = &off_24C335AB8;
  v238 = *(_BYTE *)(a27 + 36);
  if (*(char *)(a27 + 63) < 0)
    std::string::__init_copy_ctor_external(&v239, *(const std::string::value_type **)(a27 + 40), *(_QWORD *)(a27 + 48));
  else
    v239 = *(std::string *)(a27 + 40);
  v230 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v231, *(const std::string::value_type **)(a28 + 8), *(_QWORD *)(a28 + 16));
  else
    v231 = *(std::string *)(a28 + 8);
  v232 = *(_DWORD *)(a28 + 32);
  v230 = &off_24C335AB8;
  v233 = *(_BYTE *)(a28 + 36);
  if (*(char *)(a28 + 63) < 0)
    std::string::__init_copy_ctor_external(&v234, *(const std::string::value_type **)(a28 + 40), *(_QWORD *)(a28 + 48));
  else
    v234 = *(std::string *)(a28 + 40);
  if (*(char *)(a29 + 31) < 0)
    std::string::__init_copy_ctor_external(&v226, *(const std::string::value_type **)(a29 + 8), *(_QWORD *)(a29 + 16));
  else
    v226 = *(std::string *)(a29 + 8);
  v89 = *(_DWORD *)(a29 + 32);
  v225 = off_24C335B18;
  v228 = *(_QWORD *)(a29 + 36);
  v90 = *(_DWORD *)(a29 + 44);
  v134 = v89;
  v227 = v89;
  v229 = v90;
  if (*(char *)(a30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v221, *(const std::string::value_type **)(a30 + 8), *(_QWORD *)(a30 + 16));
  else
    v221 = *(std::string *)(a30 + 8);
  v91 = *(_DWORD *)(a30 + 32);
  v220 = off_24C335B18;
  v223 = *(_QWORD *)(a30 + 36);
  v92 = *(_DWORD *)(a30 + 44);
  v133 = v91;
  v222 = v91;
  v224 = v92;
  if (*(char *)(a31 + 31) < 0)
    std::string::__init_copy_ctor_external(&v216, *(const std::string::value_type **)(a31 + 8), *(_QWORD *)(a31 + 16));
  else
    v216 = *(std::string *)(a31 + 8);
  v93 = *(_DWORD *)(a31 + 32);
  v215 = off_24C335B18;
  v218 = *(_QWORD *)(a31 + 36);
  v94 = *(_DWORD *)(a31 + 44);
  v132 = v93;
  v217 = v93;
  v219 = v94;
  if (*(char *)(a32 + 31) < 0)
    std::string::__init_copy_ctor_external(&v211, *(const std::string::value_type **)(a32 + 8), *(_QWORD *)(a32 + 16));
  else
    v211 = *(std::string *)(a32 + 8);
  v95 = *(_DWORD *)(a32 + 32);
  v210 = off_24C335B18;
  v213 = *(_QWORD *)(a32 + 36);
  v96 = *(_DWORD *)(a32 + 44);
  v131 = v95;
  v212 = v95;
  v214 = v96;
  if (*(char *)(a33 + 31) < 0)
    std::string::__init_copy_ctor_external(&v207, *(const std::string::value_type **)(a33 + 8), *(_QWORD *)(a33 + 16));
  else
    v207 = *(std::string *)(a33 + 8);
  v130 = *(_DWORD *)(a33 + 32);
  v208 = v130;
  v206 = off_24C335AF8;
  v129 = *(_QWORD *)(a33 + 36);
  v209 = v129;
  if (*(char *)(a34 + 31) < 0)
    std::string::__init_copy_ctor_external(&v203, *(const std::string::value_type **)(a34 + 8), *(_QWORD *)(a34 + 16));
  else
    v203 = *(std::string *)(a34 + 8);
  v128 = *(_DWORD *)(a34 + 32);
  v204 = v128;
  v202 = off_24C335AF8;
  v97 = *(_QWORD *)(a34 + 36);
  v205 = v97;
  v197 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a35 + 31) < 0)
    std::string::__init_copy_ctor_external(&v198, *(const std::string::value_type **)(a35 + 8), *(_QWORD *)(a35 + 16));
  else
    v198 = *(std::string *)(a35 + 8);
  v199 = *(_DWORD *)(a35 + 32);
  v197 = &off_24C335AB8;
  v200 = *(_BYTE *)(a35 + 36);
  if (*(char *)(a35 + 63) < 0)
    std::string::__init_copy_ctor_external(&v201, *(const std::string::value_type **)(a35 + 40), *(_QWORD *)(a35 + 48));
  else
    v201 = *(std::string *)(a35 + 40);
  if (*(char *)(a36 + 31) < 0)
    std::string::__init_copy_ctor_external(&v193, *(const std::string::value_type **)(a36 + 8), *(_QWORD *)(a36 + 16));
  else
    v193 = *(std::string *)(a36 + 8);
  v98 = *(_DWORD *)(a36 + 32);
  v192 = off_24C335B18;
  v195 = *(_QWORD *)(a36 + 36);
  v99 = *(_DWORD *)(a36 + 44);
  v125 = v98;
  v194 = v98;
  v196 = v99;
  v187 = (uint64_t (**)())off_24C335D90;
  v127 = v97;
  if (*(char *)(a37 + 31) < 0)
    std::string::__init_copy_ctor_external(&v188, *(const std::string::value_type **)(a37 + 8), *(_QWORD *)(a37 + 16));
  else
    v188 = *(std::string *)(a37 + 8);
  v189 = *(_DWORD *)(a37 + 32);
  v187 = &off_24C335AB8;
  v190 = *(_BYTE *)(a37 + 36);
  if (*(char *)(a37 + 63) < 0)
    std::string::__init_copy_ctor_external(&v191, *(const std::string::value_type **)(a37 + 40), *(_QWORD *)(a37 + 48));
  else
    v191 = *(std::string *)(a37 + 40);
  if (*(char *)(a38 + 31) < 0)
    std::string::__init_copy_ctor_external(&v183, *(const std::string::value_type **)(a38 + 8), *(_QWORD *)(a38 + 16));
  else
    v183 = *(std::string *)(a38 + 8);
  v100 = *(_DWORD *)(a38 + 32);
  v182 = off_24C335B18;
  v185 = *(_QWORD *)(a38 + 36);
  v101 = *(_DWORD *)(a38 + 44);
  v124 = v100;
  v184 = v100;
  v186 = v101;
  v177 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a39 + 31) < 0)
    std::string::__init_copy_ctor_external(&v178, *(const std::string::value_type **)(a39 + 8), *(_QWORD *)(a39 + 16));
  else
    v178 = *(std::string *)(a39 + 8);
  v102 = *(_DWORD *)(a39 + 32);
  v177 = off_24C335B18;
  v180 = *(_QWORD *)(a39 + 36);
  v103 = *(_DWORD *)(a39 + 44);
  v123 = v102;
  v179 = v102;
  v181 = v103;
  v172 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a40 + 31) < 0)
    std::string::__init_copy_ctor_external(&v173, *(const std::string::value_type **)(a40 + 8), *(_QWORD *)(a40 + 16));
  else
    v173 = *(std::string *)(a40 + 8);
  v104 = *(_DWORD *)(a40 + 32);
  v172 = off_24C335B18;
  v175 = *(_QWORD *)(a40 + 36);
  v105 = *(_DWORD *)(a40 + 44);
  v122 = v104;
  v174 = v104;
  v176 = v105;
  v167 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a41 + 31) < 0)
    std::string::__init_copy_ctor_external(&v168, *(const std::string::value_type **)(a41 + 8), *(_QWORD *)(a41 + 16));
  else
    v168 = *(std::string *)(a41 + 8);
  v121 = *(_DWORD *)(a41 + 32);
  v169 = v121;
  v167 = off_24C335B18;
  v170 = *(_QWORD *)(a41 + 36);
  v171 = *(_DWORD *)(a41 + 44);
  v162 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a42 + 31) < 0)
    std::string::__init_copy_ctor_external(&v163, *(const std::string::value_type **)(a42 + 8), *(_QWORD *)(a42 + 16));
  else
    v163 = *(std::string *)(a42 + 8);
  v164 = *(_DWORD *)(a42 + 32);
  v162 = &off_24C335AB8;
  v165 = *(_BYTE *)(a42 + 36);
  if (*(char *)(a42 + 63) < 0)
    std::string::__init_copy_ctor_external(&v166, *(const std::string::value_type **)(a42 + 40), *(_QWORD *)(a42 + 48));
  else
    v166 = *(std::string *)(a42 + 40);
  v546 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v547, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v547 = __s;
  v546 = off_24C335B18;
  v549 = v352;
  v548 = v157;
  v550 = v353;
  v541 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v345.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v542, v345.__r_.__value_.__l.__data_, v345.__r_.__value_.__l.__size_);
  else
    v542 = v345;
  v541 = off_24C335B18;
  v544 = v347;
  v543 = v155;
  v545 = v348;
  v536 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v340.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v537, v340.__r_.__value_.__l.__data_, v340.__r_.__value_.__l.__size_);
  else
    v537 = v340;
  v536 = off_24C335B18;
  v539 = v342;
  v538 = v153;
  v540 = v343;
  v531 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v335.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v532, v335.__r_.__value_.__l.__data_, v335.__r_.__value_.__l.__size_);
  else
    v532 = v335;
  v531 = off_24C335B18;
  v534 = v337;
  v533 = v73;
  v535 = v338;
  v526 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v330.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v527, v330.__r_.__value_.__l.__data_, v330.__r_.__value_.__l.__size_);
  else
    v527 = v330;
  v526 = off_24C335B18;
  v529 = v332;
  v528 = v159;
  v530 = v333;
  v521 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v325.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v522, v325.__r_.__value_.__l.__data_, v325.__r_.__value_.__l.__size_);
  else
    v522 = v325;
  v521 = off_24C335B18;
  v524 = v327;
  v523 = v69;
  v525 = v328;
  v516 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v320.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v517, v320.__r_.__value_.__l.__data_, v320.__r_.__value_.__l.__size_);
  else
    v517 = v320;
  v516 = off_24C335B18;
  v519 = v322;
  v518 = v151;
  v520 = v323;
  v511 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v315.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v512, v315.__r_.__value_.__l.__data_, v315.__r_.__value_.__l.__size_);
  else
    v512 = v315;
  v513 = v316;
  v511 = &off_24C335AB8;
  v514 = v317;
  if (SHIBYTE(v318.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v515, v318.__r_.__value_.__l.__data_, v318.__r_.__value_.__l.__size_);
  else
    v515 = v318;
  v506 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v310.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v507, v310.__r_.__value_.__l.__data_, v310.__r_.__value_.__l.__size_);
  else
    v507 = v310;
  v508 = v311;
  v506 = &off_24C335AB8;
  v509 = v312;
  if (SHIBYTE(v313.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v510, v313.__r_.__value_.__l.__data_, v313.__r_.__value_.__l.__size_);
  else
    v510 = v313;
  v501 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v305.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v502, v305.__r_.__value_.__l.__data_, v305.__r_.__value_.__l.__size_);
  else
    v502 = v305;
  v503 = v306;
  v501 = &off_24C335AB8;
  v504 = v307;
  if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v505, v308.__r_.__value_.__l.__data_, v308.__r_.__value_.__l.__size_);
  else
    v505 = v308;
  v496 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v300.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v497, v300.__r_.__value_.__l.__data_, v300.__r_.__value_.__l.__size_);
  else
    v497 = v300;
  v498 = v301;
  v496 = &off_24C335AB8;
  v499 = v302;
  if (SHIBYTE(v303.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v500, v303.__r_.__value_.__l.__data_, v303.__r_.__value_.__l.__size_);
  else
    v500 = v303;
  v491 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v295.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v492, v295.__r_.__value_.__l.__data_, v295.__r_.__value_.__l.__size_);
  else
    v492 = v295;
  v493 = v296;
  v491 = &off_24C335AB8;
  v494 = v297;
  if (SHIBYTE(v298.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v495, v298.__r_.__value_.__l.__data_, v298.__r_.__value_.__l.__size_);
  else
    v495 = v298;
  v486 = (uint64_t (**)())off_24C335D90;
  v106 = SHIBYTE(v290.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v290.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v487, v290.__r_.__value_.__l.__data_, v290.__r_.__value_.__l.__size_);
  else
    v487 = v290;
  v486 = off_24C335B18;
  v489 = v292;
  v488 = v142;
  v490 = v293;
  v481 = (uint64_t (**)())off_24C335D90;
  v107 = SHIBYTE(v285.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v285.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v482, v285.__r_.__value_.__l.__data_, v285.__r_.__value_.__l.__size_);
  else
    v482 = v285;
  v481 = off_24C335B18;
  v484 = v287;
  v483 = v141;
  v485 = v288;
  v476 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v280.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v477, v280.__r_.__value_.__l.__data_, v280.__r_.__value_.__l.__size_);
  else
    v477 = v280;
  v478 = v281;
  v476 = &off_24C335AB8;
  v479 = v282;
  if (SHIBYTE(v283.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v480, v283.__r_.__value_.__l.__data_, v283.__r_.__value_.__l.__size_);
  else
    v480 = v283;
  v471 = (uint64_t (**)())off_24C335D90;
  v108 = SHIBYTE(v275.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v275.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v472, v275.__r_.__value_.__l.__data_, v275.__r_.__value_.__l.__size_);
  else
    v472 = v275;
  v471 = off_24C335B18;
  v474 = v277;
  v473 = v140;
  v475 = v278;
  v466 = (uint64_t (**)())off_24C335D90;
  v160 = SHIBYTE(v270.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v270.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v467, v270.__r_.__value_.__l.__data_, v270.__r_.__value_.__l.__size_);
  else
    v467 = v270;
  v466 = off_24C335B18;
  v469 = v272;
  v468 = v139;
  v470 = v273;
  v461 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v265.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v462, v265.__r_.__value_.__l.__data_, v265.__r_.__value_.__l.__size_);
  else
    v462 = v265;
  v463 = v266;
  v461 = &off_24C335AB8;
  v464 = v267;
  if (SHIBYTE(v268.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v465, v268.__r_.__value_.__l.__data_, v268.__r_.__value_.__l.__size_);
  else
    v465 = v268;
  v456 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v260.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v457, v260.__r_.__value_.__l.__data_, v260.__r_.__value_.__l.__size_);
  else
    v457 = v260;
  v458 = v261;
  v456 = &off_24C335AB8;
  v459 = v262;
  if (SHIBYTE(v263.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v460, v263.__r_.__value_.__l.__data_, v263.__r_.__value_.__l.__size_);
  else
    v460 = v263;
  v451 = (uint64_t (**)())off_24C335D90;
  v158 = SHIBYTE(v255.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v255.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v452, v255.__r_.__value_.__l.__data_, v255.__r_.__value_.__l.__size_);
  else
    v452 = v255;
  v451 = off_24C335B18;
  v454 = v257;
  v453 = v138;
  v455 = v258;
  v446 = (uint64_t (**)())off_24C335D90;
  v156 = SHIBYTE(v250.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v250.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v447, v250.__r_.__value_.__l.__data_, v250.__r_.__value_.__l.__size_);
  else
    v447 = v250;
  v446 = off_24C335B18;
  v449 = v252;
  v448 = v137;
  v450 = v253;
  v441 = (uint64_t (**)())off_24C335D90;
  v154 = SHIBYTE(v245.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v245.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v442, v245.__r_.__value_.__l.__data_, v245.__r_.__value_.__l.__size_);
  else
    v442 = v245;
  v441 = off_24C335B18;
  v444 = v247;
  v443 = v136;
  v445 = v248;
  v437 = (uint64_t (**)())off_24C335D90;
  v152 = SHIBYTE(v241.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v241.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v438, v241.__r_.__value_.__l.__data_, v241.__r_.__value_.__l.__size_);
  else
    v438 = v241;
  v439 = v135;
  v437 = off_24C335AF8;
  v440 = v88;
  v432 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v236.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v433, v236.__r_.__value_.__l.__data_, v236.__r_.__value_.__l.__size_);
  else
    v433 = v236;
  v434 = v237;
  v432 = &off_24C335AB8;
  v435 = v238;
  if (SHIBYTE(v239.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v436, v239.__r_.__value_.__l.__data_, v239.__r_.__value_.__l.__size_);
  else
    v436 = v239;
  v427 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v231.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v428, v231.__r_.__value_.__l.__data_, v231.__r_.__value_.__l.__size_);
  else
    v428 = v231;
  v429 = v232;
  v427 = &off_24C335AB8;
  v430 = v233;
  if (SHIBYTE(v234.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v431, v234.__r_.__value_.__l.__data_, v234.__r_.__value_.__l.__size_);
  else
    v431 = v234;
  v422 = (uint64_t (**)())off_24C335D90;
  v150 = SHIBYTE(v226.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v226.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v423, v226.__r_.__value_.__l.__data_, v226.__r_.__value_.__l.__size_);
  else
    v423 = v226;
  v422 = off_24C335B18;
  v425 = v228;
  v424 = v134;
  v426 = v229;
  v417 = (uint64_t (**)())off_24C335D90;
  v149 = SHIBYTE(v221.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v221.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v418, v221.__r_.__value_.__l.__data_, v221.__r_.__value_.__l.__size_);
  else
    v418 = v221;
  v417 = off_24C335B18;
  v420 = v223;
  v419 = v133;
  v421 = v224;
  v412 = (uint64_t (**)())off_24C335D90;
  v148 = SHIBYTE(v216.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v413, v216.__r_.__value_.__l.__data_, v216.__r_.__value_.__l.__size_);
  else
    v413 = v216;
  v412 = off_24C335B18;
  v415 = v218;
  v414 = v132;
  v416 = v219;
  v407 = (uint64_t (**)())off_24C335D90;
  v147 = SHIBYTE(v211.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v408, v211.__r_.__value_.__l.__data_, v211.__r_.__value_.__l.__size_);
  else
    v408 = v211;
  v407 = off_24C335B18;
  v410 = v213;
  v409 = v131;
  v411 = v214;
  v403 = (uint64_t (**)())off_24C335D90;
  v146 = SHIBYTE(v207.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v207.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v404, v207.__r_.__value_.__l.__data_, v207.__r_.__value_.__l.__size_);
  else
    v404 = v207;
  v405 = v130;
  v403 = off_24C335AF8;
  v406 = v129;
  v399 = (uint64_t (**)())off_24C335D90;
  v109 = SHIBYTE(v203.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v203.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v400, v203.__r_.__value_.__l.__data_, v203.__r_.__value_.__l.__size_);
  else
    v400 = v203;
  v401 = v128;
  v399 = off_24C335AF8;
  v402 = v127;
  v394 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v198.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v395, v198.__r_.__value_.__l.__data_, v198.__r_.__value_.__l.__size_);
  else
    v395 = v198;
  v396 = v199;
  v394 = &off_24C335AB8;
  v397 = v200;
  if (SHIBYTE(v201.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v398, v201.__r_.__value_.__l.__data_, v201.__r_.__value_.__l.__size_);
  else
    v398 = v201;
  v389 = (uint64_t (**)())off_24C335D90;
  v110 = SHIBYTE(v193.__r_.__value_.__r.__words[2]);
  v145 = v108;
  if (SHIBYTE(v193.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v390, v193.__r_.__value_.__l.__data_, v193.__r_.__value_.__l.__size_);
  else
    v390 = v193;
  v389 = off_24C335B18;
  v392 = v195;
  v391 = v125;
  v393 = v196;
  v384 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v188.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v385, v188.__r_.__value_.__l.__data_, v188.__r_.__value_.__l.__size_);
  else
    v385 = v188;
  v386 = v189;
  v384 = &off_24C335AB8;
  v387 = v190;
  v144 = v107;
  if (SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v388, v191.__r_.__value_.__l.__data_, v191.__r_.__value_.__l.__size_);
  else
    v388 = v191;
  v379 = (uint64_t (**)())off_24C335D90;
  v111 = SHIBYTE(v183.__r_.__value_.__r.__words[2]);
  v143 = v106;
  if (SHIBYTE(v183.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v380, v183.__r_.__value_.__l.__data_, v183.__r_.__value_.__l.__size_);
  else
    v380 = v183;
  v379 = off_24C335B18;
  v382 = v185;
  v381 = v124;
  v383 = v186;
  v374 = (uint64_t (**)())off_24C335D90;
  v112 = SHIBYTE(v178.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v178.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v375, v178.__r_.__value_.__l.__data_, v178.__r_.__value_.__l.__size_);
  else
    v375 = v178;
  v374 = off_24C335B18;
  v377 = v180;
  v376 = v123;
  v378 = v181;
  v369 = (uint64_t (**)())off_24C335D90;
  v113 = SHIBYTE(v173.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v173.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v370, v173.__r_.__value_.__l.__data_, v173.__r_.__value_.__l.__size_);
  else
    v370 = v173;
  v369 = off_24C335B18;
  v372 = v175;
  v371 = v122;
  v373 = v176;
  v364 = (uint64_t (**)())off_24C335D90;
  v114 = SHIBYTE(v168.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v168.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v168.__r_.__value_.__l.__data_, v168.__r_.__value_.__l.__size_);
  else
    __p = v168;
  v364 = off_24C335B18;
  v367 = v170;
  v366 = v121;
  v368 = v171;
  v359 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v163.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v360, v163.__r_.__value_.__l.__data_, v163.__r_.__value_.__l.__size_);
  else
    v360 = v163;
  v361 = v164;
  v359 = &off_24C335AB8;
  v362 = v165;
  if (SHIBYTE(v166.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v363, v166.__r_.__value_.__l.__data_, v166.__r_.__value_.__l.__size_);
  else
    v363 = v166;
  mediaplatform::DatabaseColumnTuple<19ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(v161, (uint64_t)&v546, (uint64_t)&v541, (uint64_t)&v536, (uint64_t)&v531, (uint64_t)&v526, (uint64_t)&v521, (uint64_t)&v516, (uint64_t)&v511, (uint64_t)&v506, (uint64_t)&v501, (uint64_t)&v496, (uint64_t)&v491, (uint64_t)&v486, (uint64_t)&v481, (uint64_t)&v476, (uint64_t)&v471, (uint64_t)&v466, (uint64_t)&v461,
    (uint64_t)&v456,
    (uint64_t)&v451,
    (uint64_t)&v446,
    (uint64_t)&v441,
    (uint64_t)&v437,
    (uint64_t)&v432,
    (uint64_t)&v427,
    (uint64_t)&v422,
    (uint64_t)&v417,
    (uint64_t)&v412,
    (uint64_t)&v407,
    (uint64_t)&v403,
    (uint64_t)&v399,
    (uint64_t)&v394,
    (uint64_t)&v389,
    (uint64_t)&v384,
    (uint64_t)&v379,
    (uint64_t)&v374,
    (uint64_t)&v369,
    (uint64_t)&v364,
    (uint64_t)&v359);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v359);
  v364 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v369 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v370.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v370.__r_.__value_.__l.__data_);
  v374 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v375.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v375.__r_.__value_.__l.__data_);
  v379 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v380.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v380.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v384);
  v389 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v390.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v390.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v394);
  v399 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v400.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v400.__r_.__value_.__l.__data_);
  v403 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v404.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v404.__r_.__value_.__l.__data_);
  v407 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v408.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v408.__r_.__value_.__l.__data_);
  v412 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v413.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v413.__r_.__value_.__l.__data_);
  v417 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v418.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v418.__r_.__value_.__l.__data_);
  v422 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v423.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v423.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v427);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v432);
  v437 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v438.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v438.__r_.__value_.__l.__data_);
  v441 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v442.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v442.__r_.__value_.__l.__data_);
  v446 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v447.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v447.__r_.__value_.__l.__data_);
  v451 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v452.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v452.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v456);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v461);
  v466 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v467.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v467.__r_.__value_.__l.__data_);
  v471 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v472.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v472.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v476);
  v481 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v482.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v482.__r_.__value_.__l.__data_);
  v486 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v487.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v487.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v491);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v496);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v501);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v506);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v511);
  v516 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v517.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v517.__r_.__value_.__l.__data_);
  v521 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v522.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v522.__r_.__value_.__l.__data_);
  v526 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v527.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v527.__r_.__value_.__l.__data_);
  v531 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v532.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v532.__r_.__value_.__l.__data_);
  v536 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v537.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v537.__r_.__value_.__l.__data_);
  v541 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v542.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v542.__r_.__value_.__l.__data_);
  v546 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v547.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v547.__r_.__value_.__l.__data_);
  *(_QWORD *)(v161 + 2080) = off_24C335D90;
  v115 = (std::string *)(v161 + 2088);
  v116 = SHIBYTE(v355.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v355.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v115, v355.__r_.__value_.__l.__data_, v355.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v115->__r_.__value_.__l.__data_ = *(_OWORD *)&v355.__r_.__value_.__l.__data_;
    *(_QWORD *)(v161 + 2104) = *((_QWORD *)&v355.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(v161 + 2112) = v356;
  *(_QWORD *)(v161 + 2080) = off_24C335B18;
  *(_QWORD *)(v161 + 2116) = v357;
  *(_DWORD *)(v161 + 2124) = v358;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v162);
  v167 = (uint64_t (**)())off_24C335D90;
  if (v114 < 0)
    operator delete(v168.__r_.__value_.__l.__data_);
  v172 = (uint64_t (**)())off_24C335D90;
  if (v113 < 0)
    operator delete(v173.__r_.__value_.__l.__data_);
  v177 = (uint64_t (**)())off_24C335D90;
  if (v112 < 0)
    operator delete(v178.__r_.__value_.__l.__data_);
  v182 = (uint64_t (**)())off_24C335D90;
  if (v111 < 0)
    operator delete(v183.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v187);
  if (v110 < 0)
    operator delete(v193.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v197);
  if (v109 < 0)
    operator delete(v203.__r_.__value_.__l.__data_);
  if (v146 < 0)
    operator delete(v207.__r_.__value_.__l.__data_);
  if (v147 < 0)
    operator delete(v211.__r_.__value_.__l.__data_);
  if (v148 < 0)
    operator delete(v216.__r_.__value_.__l.__data_);
  if (v149 < 0)
    operator delete(v221.__r_.__value_.__l.__data_);
  if (v150 < 0)
    operator delete(v226.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v230);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v235);
  if (v152 < 0)
    operator delete(v241.__r_.__value_.__l.__data_);
  if (v154 < 0)
    operator delete(v245.__r_.__value_.__l.__data_);
  if (v156 < 0)
    operator delete(v250.__r_.__value_.__l.__data_);
  if (v158 < 0)
    operator delete(v255.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v259);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v264);
  if (v160 < 0)
  {
    operator delete(v270.__r_.__value_.__l.__data_);
    if ((v145 & 0x80000000) == 0)
      goto LABEL_403;
  }
  else if ((v145 & 0x80000000) == 0)
  {
    goto LABEL_403;
  }
  operator delete(v275.__r_.__value_.__l.__data_);
LABEL_403:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v279);
  if (v144 < 0)
  {
    operator delete(v285.__r_.__value_.__l.__data_);
    if ((v143 & 0x80000000) == 0)
      goto LABEL_405;
  }
  else if ((v143 & 0x80000000) == 0)
  {
    goto LABEL_405;
  }
  operator delete(v290.__r_.__value_.__l.__data_);
LABEL_405:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v294);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v299);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v304);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v309);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v314);
  if (SHIBYTE(v320.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v320.__r_.__value_.__l.__data_);
  if (SHIBYTE(v325.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v325.__r_.__value_.__l.__data_);
  if (SHIBYTE(v330.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v330.__r_.__value_.__l.__data_);
  if (SHIBYTE(v335.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v335.__r_.__value_.__l.__data_);
  if (SHIBYTE(v340.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v340.__r_.__value_.__l.__data_);
  if (SHIBYTE(v345.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v345.__r_.__value_.__l.__data_);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__s.__r_.__value_.__l.__data_);
    if ((v116 & 0x80000000) == 0)
      goto LABEL_419;
  }
  else if ((v116 & 0x80000000) == 0)
  {
    goto LABEL_419;
  }
  operator delete(v355.__r_.__value_.__l.__data_);
LABEL_419:
  *(_QWORD *)(v161 + 2128) = off_24C335D90;
  v117 = (std::string *)(v161 + 2136);
  if (*(char *)(v126 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v117, *(const std::string::value_type **)(v126 + 8), *(_QWORD *)(v126 + 16));
  }
  else
  {
    v118 = *(_OWORD *)(v126 + 8);
    *(_QWORD *)(v161 + 2152) = *(_QWORD *)(v126 + 24);
    *(_OWORD *)&v117->__r_.__value_.__l.__data_ = v118;
  }
  *(_DWORD *)(v161 + 2160) = *(_DWORD *)(v126 + 32);
  *(_QWORD *)(v161 + 2128) = off_24C335B18;
  v119 = *(_QWORD *)(v126 + 36);
  *(_DWORD *)(v161 + 2172) = *(_DWORD *)(v126 + 44);
  *(_QWORD *)(v161 + 2164) = v119;
  return v161;
}

void sub_20A89ED50(_Unwind_Exception *a1)
{
  uint64_t v1;

  mediaplatform::DatabaseColumnTuple<18ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(v1);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<18ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 2080) = off_24C335D90;
  if (*(char *)(a1 + 2111) < 0)
    operator delete(*(void **)(a1 + 2088));
  *(_QWORD *)(a1 + 2032) = off_24C335D90;
  if (*(char *)(a1 + 2063) < 0)
    operator delete(*(void **)(a1 + 2040));
  *(_QWORD *)(a1 + 1984) = off_24C335D90;
  if (*(char *)(a1 + 2015) < 0)
    operator delete(*(void **)(a1 + 1992));
  *(_QWORD *)(a1 + 1936) = off_24C335D90;
  if (*(char *)(a1 + 1967) < 0)
    operator delete(*(void **)(a1 + 1944));
  *(_QWORD *)(a1 + 1888) = off_24C335D90;
  if (*(char *)(a1 + 1919) < 0)
    operator delete(*(void **)(a1 + 1896));
  return mediaplatform::DatabaseColumnTuple<23ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<19ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  uint64_t v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  std::string *v110;
  int v111;
  std::string *v112;
  __int128 v113;
  uint64_t v114;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  uint64_t v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  uint64_t v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  uint64_t v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  uint64_t (**v154)();
  std::string v155;
  int v156;
  char v157;
  std::string v158;
  uint64_t (**v159)();
  std::string v160;
  int v161;
  uint64_t v162;
  int v163;
  uint64_t (**v164)();
  std::string v165;
  int v166;
  uint64_t v167;
  int v168;
  uint64_t (**v169)();
  std::string v170;
  int v171;
  uint64_t v172;
  int v173;
  uint64_t (**v174)();
  std::string v175;
  int v176;
  uint64_t v177;
  int v178;
  uint64_t (**v179)();
  std::string v180;
  int v181;
  char v182;
  std::string v183;
  uint64_t (**v184)();
  std::string v185;
  int v186;
  uint64_t v187;
  int v188;
  uint64_t (**v189)();
  std::string v190;
  int v191;
  char v192;
  std::string v193;
  uint64_t (**v194)();
  std::string v195;
  int v196;
  uint64_t v197;
  uint64_t (**v198)();
  std::string v199;
  int v200;
  uint64_t v201;
  uint64_t (**v202)();
  std::string v203;
  int v204;
  uint64_t v205;
  int v206;
  uint64_t (**v207)();
  std::string v208;
  int v209;
  uint64_t v210;
  int v211;
  uint64_t (**v212)();
  std::string v213;
  int v214;
  uint64_t v215;
  int v216;
  uint64_t (**v217)();
  std::string v218;
  int v219;
  uint64_t v220;
  int v221;
  uint64_t (**v222)();
  std::string v223;
  int v224;
  char v225;
  std::string v226;
  uint64_t (**v227)();
  std::string v228;
  int v229;
  char v230;
  std::string v231;
  uint64_t (**v232)();
  std::string v233;
  int v234;
  uint64_t v235;
  uint64_t (**v236)();
  std::string v237;
  int v238;
  uint64_t v239;
  int v240;
  uint64_t (**v241)();
  std::string v242;
  int v243;
  uint64_t v244;
  int v245;
  uint64_t (**v246)();
  std::string v247;
  int v248;
  uint64_t v249;
  int v250;
  uint64_t (**v251)();
  std::string v252;
  int v253;
  char v254;
  std::string v255;
  uint64_t (**v256)();
  std::string v257;
  int v258;
  char v259;
  std::string v260;
  uint64_t (**v261)();
  std::string v262;
  int v263;
  uint64_t v264;
  int v265;
  uint64_t (**v266)();
  std::string v267;
  int v268;
  uint64_t v269;
  int v270;
  uint64_t (**v271)();
  std::string v272;
  int v273;
  char v274;
  std::string v275;
  uint64_t (**v276)();
  std::string v277;
  int v278;
  uint64_t v279;
  int v280;
  uint64_t (**v281)();
  std::string v282;
  int v283;
  uint64_t v284;
  int v285;
  uint64_t (**v286)();
  std::string v287;
  int v288;
  char v289;
  std::string v290;
  uint64_t (**v291)();
  std::string v292;
  int v293;
  char v294;
  std::string v295;
  uint64_t (**v296)();
  std::string v297;
  int v298;
  char v299;
  std::string v300;
  uint64_t (**v301)();
  std::string v302;
  int v303;
  char v304;
  std::string v305;
  uint64_t (**v306)();
  std::string v307;
  int v308;
  char v309;
  std::string v310;
  uint64_t (**v311)();
  std::string v312;
  int v313;
  uint64_t v314;
  int v315;
  uint64_t (**v316)();
  std::string v317;
  int v318;
  uint64_t v319;
  int v320;
  uint64_t (**v321)();
  std::string v322;
  int v323;
  uint64_t v324;
  int v325;
  uint64_t (**v326)();
  std::string v327;
  int v328;
  uint64_t v329;
  int v330;
  uint64_t (**v331)();
  std::string __s;
  int v333;
  uint64_t v334;
  int v335;
  uint64_t (**v336)();
  std::string v337;
  int v338;
  uint64_t v339;
  int v340;
  uint64_t (**v341)();
  std::string v342;
  int v343;
  char v344;
  std::string v345;
  uint64_t (**v346)();
  std::string __p;
  int v348;
  uint64_t v349;
  int v350;
  uint64_t (**v351)();
  std::string v352;
  int v353;
  uint64_t v354;
  int v355;
  uint64_t (**v356)();
  std::string v357;
  int v358;
  uint64_t v359;
  int v360;
  uint64_t (**v361)();
  std::string v362;
  int v363;
  uint64_t v364;
  int v365;
  uint64_t (**v366)();
  std::string v367;
  int v368;
  char v369;
  std::string v370;
  uint64_t (**v371)();
  std::string v372;
  int v373;
  uint64_t v374;
  int v375;
  uint64_t (**v376)();
  std::string v377;
  int v378;
  char v379;
  std::string v380;
  uint64_t (**v381)();
  std::string v382;
  int v383;
  uint64_t v384;
  uint64_t (**v385)();
  std::string v386;
  int v387;
  uint64_t v388;
  uint64_t (**v389)();
  std::string v390;
  int v391;
  uint64_t v392;
  int v393;
  uint64_t (**v394)();
  std::string v395;
  int v396;
  uint64_t v397;
  int v398;
  uint64_t (**v399)();
  std::string v400;
  int v401;
  uint64_t v402;
  int v403;
  uint64_t (**v404)();
  std::string v405;
  int v406;
  uint64_t v407;
  int v408;
  uint64_t (**v409)();
  std::string v410;
  int v411;
  char v412;
  std::string v413;
  uint64_t (**v414)();
  std::string v415;
  int v416;
  char v417;
  std::string v418;
  uint64_t (**v419)();
  std::string v420;
  int v421;
  uint64_t v422;
  uint64_t (**v423)();
  std::string v424;
  int v425;
  uint64_t v426;
  int v427;
  uint64_t (**v428)();
  std::string v429;
  int v430;
  uint64_t v431;
  int v432;
  uint64_t (**v433)();
  std::string v434;
  int v435;
  uint64_t v436;
  int v437;
  uint64_t (**v438)();
  std::string v439;
  int v440;
  char v441;
  std::string v442;
  uint64_t (**v443)();
  std::string v444;
  int v445;
  char v446;
  std::string v447;
  uint64_t (**v448)();
  std::string v449;
  int v450;
  uint64_t v451;
  int v452;
  uint64_t (**v453)();
  std::string v454;
  int v455;
  uint64_t v456;
  int v457;
  uint64_t (**v458)();
  std::string v459;
  int v460;
  char v461;
  std::string v462;
  uint64_t (**v463)();
  std::string v464;
  int v465;
  uint64_t v466;
  int v467;
  uint64_t (**v468)();
  std::string v469;
  int v470;
  uint64_t v471;
  int v472;
  uint64_t (**v473)();
  std::string v474;
  int v475;
  char v476;
  std::string v477;
  uint64_t (**v478)();
  std::string v479;
  int v480;
  char v481;
  std::string v482;
  uint64_t (**v483)();
  std::string v484;
  int v485;
  char v486;
  std::string v487;
  uint64_t (**v488)();
  std::string v489;
  int v490;
  char v491;
  std::string v492;
  uint64_t (**v493)();
  std::string v494;
  int v495;
  char v496;
  std::string v497;
  uint64_t (**v498)();
  std::string v499;
  int v500;
  uint64_t v501;
  int v502;
  uint64_t (**v503)();
  std::string v504;
  int v505;
  uint64_t v506;
  int v507;
  uint64_t (**v508)();
  std::string v509;
  int v510;
  uint64_t v511;
  int v512;
  uint64_t (**v513)();
  std::string v514;
  int v515;
  uint64_t v516;
  int v517;
  uint64_t (**v518)();
  std::string v519;
  int v520;
  uint64_t v521;
  int v522;

  v40 = MEMORY[0x24BDAC7A8](a1);
  v43 = v42;
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v52 = v41;
  v131 = v53;
  v54 = v40;
  if (*(char *)(v41 + 31) < 0)
    std::string::__init_copy_ctor_external(&v337, *(const std::string::value_type **)(v41 + 8), *(_QWORD *)(v41 + 16));
  else
    v337 = *(std::string *)(v41 + 8);
  v55 = *(_DWORD *)(v52 + 32);
  v336 = off_24C335B18;
  v339 = *(_QWORD *)(v52 + 36);
  v56 = *(_DWORD *)(v52 + 44);
  v338 = v55;
  v340 = v56;
  if (*(char *)(v51 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(v51 + 8), *(_QWORD *)(v51 + 16));
  else
    __s = *(std::string *)(v51 + 8);
  v57 = *(_DWORD *)(v51 + 32);
  v331 = off_24C335B18;
  v334 = *(_QWORD *)(v51 + 36);
  v58 = *(_DWORD *)(v51 + 44);
  v152 = v57;
  v333 = v57;
  v335 = v58;
  if (*(char *)(v49 + 31) < 0)
    std::string::__init_copy_ctor_external(&v327, *(const std::string::value_type **)(v49 + 8), *(_QWORD *)(v49 + 16));
  else
    v327 = *(std::string *)(v49 + 8);
  v59 = *(_DWORD *)(v49 + 32);
  v326 = off_24C335B18;
  v329 = *(_QWORD *)(v49 + 36);
  v60 = *(_DWORD *)(v49 + 44);
  v150 = v59;
  v328 = v59;
  v330 = v60;
  if (*(char *)(v47 + 31) < 0)
    std::string::__init_copy_ctor_external(&v322, *(const std::string::value_type **)(v47 + 8), *(_QWORD *)(v47 + 16));
  else
    v322 = *(std::string *)(v47 + 8);
  v61 = *(_DWORD *)(v47 + 32);
  v321 = off_24C335B18;
  v324 = *(_QWORD *)(v47 + 36);
  v62 = *(_DWORD *)(v47 + 44);
  v148 = v61;
  v323 = v61;
  v325 = v62;
  if (*(char *)(v45 + 31) < 0)
    std::string::__init_copy_ctor_external(&v317, *(const std::string::value_type **)(v45 + 8), *(_QWORD *)(v45 + 16));
  else
    v317 = *(std::string *)(v45 + 8);
  v63 = *(_DWORD *)(v45 + 32);
  v316 = off_24C335B18;
  v319 = *(_QWORD *)(v45 + 36);
  v64 = *(_DWORD *)(v45 + 44);
  v318 = v63;
  v320 = v64;
  if (*(char *)(v43 + 31) < 0)
    std::string::__init_copy_ctor_external(&v312, *(const std::string::value_type **)(v43 + 8), *(_QWORD *)(v43 + 16));
  else
    v312 = *(std::string *)(v43 + 8);
  v65 = *(_DWORD *)(v43 + 32);
  v311 = off_24C335B18;
  v314 = *(_QWORD *)(v43 + 36);
  v66 = *(_DWORD *)(v43 + 44);
  v313 = v65;
  v315 = v66;
  v306 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v307, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v307 = *(std::string *)(a9 + 8);
  v308 = *(_DWORD *)(a9 + 32);
  v306 = &off_24C335AB8;
  v309 = *(_BYTE *)(a9 + 36);
  if (*(char *)(a9 + 63) < 0)
    std::string::__init_copy_ctor_external(&v310, *(const std::string::value_type **)(a9 + 40), *(_QWORD *)(a9 + 48));
  else
    v310 = *(std::string *)(a9 + 40);
  v301 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v302, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v302 = *(std::string *)(a10 + 8);
  v303 = *(_DWORD *)(a10 + 32);
  v301 = &off_24C335AB8;
  v304 = *(_BYTE *)(a10 + 36);
  if (*(char *)(a10 + 63) < 0)
    std::string::__init_copy_ctor_external(&v305, *(const std::string::value_type **)(a10 + 40), *(_QWORD *)(a10 + 48));
  else
    v305 = *(std::string *)(a10 + 40);
  v296 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v297, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v297 = *(std::string *)(a11 + 8);
  v298 = *(_DWORD *)(a11 + 32);
  v296 = &off_24C335AB8;
  v299 = *(_BYTE *)(a11 + 36);
  if (*(char *)(a11 + 63) < 0)
    std::string::__init_copy_ctor_external(&v300, *(const std::string::value_type **)(a11 + 40), *(_QWORD *)(a11 + 48));
  else
    v300 = *(std::string *)(a11 + 40);
  v291 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v292, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v292 = *(std::string *)(a12 + 8);
  v293 = *(_DWORD *)(a12 + 32);
  v291 = &off_24C335AB8;
  v294 = *(_BYTE *)(a12 + 36);
  if (*(char *)(a12 + 63) < 0)
    std::string::__init_copy_ctor_external(&v295, *(const std::string::value_type **)(a12 + 40), *(_QWORD *)(a12 + 48));
  else
    v295 = *(std::string *)(a12 + 40);
  v286 = (uint64_t (**)())off_24C335D90;
  v137 = v54;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v287, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v287 = *(std::string *)(a13 + 8);
  v288 = *(_DWORD *)(a13 + 32);
  v286 = &off_24C335AB8;
  v289 = *(_BYTE *)(a13 + 36);
  if (*(char *)(a13 + 63) < 0)
    std::string::__init_copy_ctor_external(&v290, *(const std::string::value_type **)(a13 + 40), *(_QWORD *)(a13 + 48));
  else
    v290 = *(std::string *)(a13 + 40);
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v282, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v282 = *(std::string *)(a14 + 8);
  v67 = *(_DWORD *)(a14 + 32);
  v281 = off_24C335B18;
  v284 = *(_QWORD *)(a14 + 36);
  v68 = *(_DWORD *)(a14 + 44);
  v136 = v67;
  v283 = v67;
  v285 = v68;
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v277, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v277 = *(std::string *)(a15 + 8);
  v69 = *(_DWORD *)(a15 + 32);
  v276 = off_24C335B18;
  v279 = *(_QWORD *)(a15 + 36);
  v70 = *(_DWORD *)(a15 + 44);
  v135 = v69;
  v278 = v69;
  v280 = v70;
  v271 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v272, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v272 = *(std::string *)(a16 + 8);
  v273 = *(_DWORD *)(a16 + 32);
  v271 = &off_24C335AB8;
  v274 = *(_BYTE *)(a16 + 36);
  if (*(char *)(a16 + 63) < 0)
    std::string::__init_copy_ctor_external(&v275, *(const std::string::value_type **)(a16 + 40), *(_QWORD *)(a16 + 48));
  else
    v275 = *(std::string *)(a16 + 40);
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v267, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v267 = *(std::string *)(a17 + 8);
  v71 = *(_DWORD *)(a17 + 32);
  v266 = off_24C335B18;
  v269 = *(_QWORD *)(a17 + 36);
  v72 = *(_DWORD *)(a17 + 44);
  v134 = v71;
  v268 = v71;
  v270 = v72;
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v262, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v262 = *(std::string *)(a18 + 8);
  v73 = *(_DWORD *)(a18 + 32);
  v261 = off_24C335B18;
  v264 = *(_QWORD *)(a18 + 36);
  v74 = *(_DWORD *)(a18 + 44);
  v133 = v73;
  v263 = v73;
  v265 = v74;
  v256 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v257, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v257 = *(std::string *)(a19 + 8);
  v258 = *(_DWORD *)(a19 + 32);
  v256 = &off_24C335AB8;
  v259 = *(_BYTE *)(a19 + 36);
  if (*(char *)(a19 + 63) < 0)
    std::string::__init_copy_ctor_external(&v260, *(const std::string::value_type **)(a19 + 40), *(_QWORD *)(a19 + 48));
  else
    v260 = *(std::string *)(a19 + 40);
  v251 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v252, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v252 = *(std::string *)(a20 + 8);
  v253 = *(_DWORD *)(a20 + 32);
  v251 = &off_24C335AB8;
  v254 = *(_BYTE *)(a20 + 36);
  if (*(char *)(a20 + 63) < 0)
    std::string::__init_copy_ctor_external(&v255, *(const std::string::value_type **)(a20 + 40), *(_QWORD *)(a20 + 48));
  else
    v255 = *(std::string *)(a20 + 40);
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v247, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v247 = *(std::string *)(a21 + 8);
  v75 = *(_DWORD *)(a21 + 32);
  v246 = off_24C335B18;
  v249 = *(_QWORD *)(a21 + 36);
  v76 = *(_DWORD *)(a21 + 44);
  v132 = v75;
  v248 = v75;
  v250 = v76;
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v242, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v242 = *(std::string *)(a22 + 8);
  v77 = *(_DWORD *)(a22 + 32);
  v241 = off_24C335B18;
  v244 = *(_QWORD *)(a22 + 36);
  v78 = *(_DWORD *)(a22 + 44);
  v130 = v77;
  v243 = v77;
  v245 = v78;
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v237, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v237 = *(std::string *)(a23 + 8);
  v79 = *(_DWORD *)(a23 + 32);
  v236 = off_24C335B18;
  v239 = *(_QWORD *)(a23 + 36);
  v80 = *(_DWORD *)(a23 + 44);
  v129 = v79;
  v238 = v79;
  v240 = v80;
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v233, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v233 = *(std::string *)(a24 + 8);
  v128 = *(_DWORD *)(a24 + 32);
  v234 = v128;
  v232 = off_24C335AF8;
  v81 = *(_QWORD *)(a24 + 36);
  v235 = v81;
  v227 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a25 + 31) < 0)
    std::string::__init_copy_ctor_external(&v228, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  else
    v228 = *(std::string *)(a25 + 8);
  v229 = *(_DWORD *)(a25 + 32);
  v227 = &off_24C335AB8;
  v230 = *(_BYTE *)(a25 + 36);
  if (*(char *)(a25 + 63) < 0)
    std::string::__init_copy_ctor_external(&v231, *(const std::string::value_type **)(a25 + 40), *(_QWORD *)(a25 + 48));
  else
    v231 = *(std::string *)(a25 + 40);
  v222 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v223, *(const std::string::value_type **)(a26 + 8), *(_QWORD *)(a26 + 16));
  else
    v223 = *(std::string *)(a26 + 8);
  v224 = *(_DWORD *)(a26 + 32);
  v222 = &off_24C335AB8;
  v225 = *(_BYTE *)(a26 + 36);
  if (*(char *)(a26 + 63) < 0)
    std::string::__init_copy_ctor_external(&v226, *(const std::string::value_type **)(a26 + 40), *(_QWORD *)(a26 + 48));
  else
    v226 = *(std::string *)(a26 + 40);
  if (*(char *)(a27 + 31) < 0)
    std::string::__init_copy_ctor_external(&v218, *(const std::string::value_type **)(a27 + 8), *(_QWORD *)(a27 + 16));
  else
    v218 = *(std::string *)(a27 + 8);
  v82 = *(_DWORD *)(a27 + 32);
  v217 = off_24C335B18;
  v220 = *(_QWORD *)(a27 + 36);
  v83 = *(_DWORD *)(a27 + 44);
  v127 = v82;
  v219 = v82;
  v221 = v83;
  if (*(char *)(a28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v213, *(const std::string::value_type **)(a28 + 8), *(_QWORD *)(a28 + 16));
  else
    v213 = *(std::string *)(a28 + 8);
  v84 = *(_DWORD *)(a28 + 32);
  v212 = off_24C335B18;
  v215 = *(_QWORD *)(a28 + 36);
  v85 = *(_DWORD *)(a28 + 44);
  v126 = v84;
  v214 = v84;
  v216 = v85;
  if (*(char *)(a29 + 31) < 0)
    std::string::__init_copy_ctor_external(&v208, *(const std::string::value_type **)(a29 + 8), *(_QWORD *)(a29 + 16));
  else
    v208 = *(std::string *)(a29 + 8);
  v86 = *(_DWORD *)(a29 + 32);
  v207 = off_24C335B18;
  v210 = *(_QWORD *)(a29 + 36);
  v87 = *(_DWORD *)(a29 + 44);
  v125 = v86;
  v209 = v86;
  v211 = v87;
  if (*(char *)(a30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v203, *(const std::string::value_type **)(a30 + 8), *(_QWORD *)(a30 + 16));
  else
    v203 = *(std::string *)(a30 + 8);
  v88 = *(_DWORD *)(a30 + 32);
  v202 = off_24C335B18;
  v205 = *(_QWORD *)(a30 + 36);
  v89 = *(_DWORD *)(a30 + 44);
  v124 = v88;
  v204 = v88;
  v206 = v89;
  if (*(char *)(a31 + 31) < 0)
    std::string::__init_copy_ctor_external(&v199, *(const std::string::value_type **)(a31 + 8), *(_QWORD *)(a31 + 16));
  else
    v199 = *(std::string *)(a31 + 8);
  v123 = *(_DWORD *)(a31 + 32);
  v200 = v123;
  v198 = off_24C335AF8;
  v90 = *(_QWORD *)(a31 + 36);
  v201 = v90;
  if (*(char *)(a32 + 31) < 0)
    std::string::__init_copy_ctor_external(&v195, *(const std::string::value_type **)(a32 + 8), *(_QWORD *)(a32 + 16));
  else
    v195 = *(std::string *)(a32 + 8);
  v121 = *(_DWORD *)(a32 + 32);
  v196 = v121;
  v194 = off_24C335AF8;
  v91 = *(_QWORD *)(a32 + 36);
  v197 = v91;
  v189 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a33 + 31) < 0)
    std::string::__init_copy_ctor_external(&v190, *(const std::string::value_type **)(a33 + 8), *(_QWORD *)(a33 + 16));
  else
    v190 = *(std::string *)(a33 + 8);
  v191 = *(_DWORD *)(a33 + 32);
  v189 = &off_24C335AB8;
  v192 = *(_BYTE *)(a33 + 36);
  v122 = v90;
  if (*(char *)(a33 + 63) < 0)
    std::string::__init_copy_ctor_external(&v193, *(const std::string::value_type **)(a33 + 40), *(_QWORD *)(a33 + 48));
  else
    v193 = *(std::string *)(a33 + 40);
  if (*(char *)(a34 + 31) < 0)
    std::string::__init_copy_ctor_external(&v185, *(const std::string::value_type **)(a34 + 8), *(_QWORD *)(a34 + 16));
  else
    v185 = *(std::string *)(a34 + 8);
  v92 = *(_DWORD *)(a34 + 32);
  v184 = off_24C335B18;
  v187 = *(_QWORD *)(a34 + 36);
  v93 = *(_DWORD *)(a34 + 44);
  v120 = v92;
  v186 = v92;
  v188 = v93;
  v179 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a35 + 31) < 0)
    std::string::__init_copy_ctor_external(&v180, *(const std::string::value_type **)(a35 + 8), *(_QWORD *)(a35 + 16));
  else
    v180 = *(std::string *)(a35 + 8);
  v181 = *(_DWORD *)(a35 + 32);
  v179 = &off_24C335AB8;
  v182 = *(_BYTE *)(a35 + 36);
  if (*(char *)(a35 + 63) < 0)
    std::string::__init_copy_ctor_external(&v183, *(const std::string::value_type **)(a35 + 40), *(_QWORD *)(a35 + 48));
  else
    v183 = *(std::string *)(a35 + 40);
  if (*(char *)(a36 + 31) < 0)
    std::string::__init_copy_ctor_external(&v175, *(const std::string::value_type **)(a36 + 8), *(_QWORD *)(a36 + 16));
  else
    v175 = *(std::string *)(a36 + 8);
  v94 = *(_DWORD *)(a36 + 32);
  v174 = off_24C335B18;
  v177 = *(_QWORD *)(a36 + 36);
  v95 = *(_DWORD *)(a36 + 44);
  v119 = v94;
  v176 = v94;
  v178 = v95;
  if (*(char *)(a37 + 31) < 0)
    std::string::__init_copy_ctor_external(&v170, *(const std::string::value_type **)(a37 + 8), *(_QWORD *)(a37 + 16));
  else
    v170 = *(std::string *)(a37 + 8);
  v96 = *(_DWORD *)(a37 + 32);
  v169 = off_24C335B18;
  v172 = *(_QWORD *)(a37 + 36);
  v97 = *(_DWORD *)(a37 + 44);
  v118 = v96;
  v171 = v96;
  v173 = v97;
  if (*(char *)(a38 + 31) < 0)
    std::string::__init_copy_ctor_external(&v165, *(const std::string::value_type **)(a38 + 8), *(_QWORD *)(a38 + 16));
  else
    v165 = *(std::string *)(a38 + 8);
  v98 = *(_DWORD *)(a38 + 32);
  v164 = off_24C335B18;
  v167 = *(_QWORD *)(a38 + 36);
  v99 = *(_DWORD *)(a38 + 44);
  v117 = v98;
  v166 = v98;
  v168 = v99;
  v159 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a39 + 31) < 0)
    std::string::__init_copy_ctor_external(&v160, *(const std::string::value_type **)(a39 + 8), *(_QWORD *)(a39 + 16));
  else
    v160 = *(std::string *)(a39 + 8);
  v116 = *(_DWORD *)(a39 + 32);
  v161 = v116;
  v159 = off_24C335B18;
  v162 = *(_QWORD *)(a39 + 36);
  v163 = *(_DWORD *)(a39 + 44);
  v154 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a40 + 31) < 0)
    std::string::__init_copy_ctor_external(&v155, *(const std::string::value_type **)(a40 + 8), *(_QWORD *)(a40 + 16));
  else
    v155 = *(std::string *)(a40 + 8);
  v156 = *(_DWORD *)(a40 + 32);
  v154 = &off_24C335AB8;
  v157 = *(_BYTE *)(a40 + 36);
  if (*(char *)(a40 + 63) < 0)
    std::string::__init_copy_ctor_external(&v158, *(const std::string::value_type **)(a40 + 40), *(_QWORD *)(a40 + 48));
  else
    v158 = *(std::string *)(a40 + 40);
  v518 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v519, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v519 = __s;
  v518 = off_24C335B18;
  v521 = v334;
  v520 = v152;
  v522 = v335;
  v513 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v327.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v514, v327.__r_.__value_.__l.__data_, v327.__r_.__value_.__l.__size_);
  else
    v514 = v327;
  v513 = off_24C335B18;
  v516 = v329;
  v515 = v150;
  v517 = v330;
  v508 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v322.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v509, v322.__r_.__value_.__l.__data_, v322.__r_.__value_.__l.__size_);
  else
    v509 = v322;
  v508 = off_24C335B18;
  v511 = v324;
  v510 = v148;
  v512 = v325;
  v503 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v317.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v504, v317.__r_.__value_.__l.__data_, v317.__r_.__value_.__l.__size_);
  else
    v504 = v317;
  v503 = off_24C335B18;
  v506 = v319;
  v505 = v63;
  v507 = v320;
  v498 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v312.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v499, v312.__r_.__value_.__l.__data_, v312.__r_.__value_.__l.__size_);
  else
    v499 = v312;
  v498 = off_24C335B18;
  v501 = v314;
  v500 = v65;
  v502 = v315;
  v493 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v307.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v494, v307.__r_.__value_.__l.__data_, v307.__r_.__value_.__l.__size_);
  else
    v494 = v307;
  v495 = v308;
  v493 = &off_24C335AB8;
  v496 = v309;
  if (SHIBYTE(v310.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v497, v310.__r_.__value_.__l.__data_, v310.__r_.__value_.__l.__size_);
  else
    v497 = v310;
  v488 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v302.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v489, v302.__r_.__value_.__l.__data_, v302.__r_.__value_.__l.__size_);
  else
    v489 = v302;
  v490 = v303;
  v488 = &off_24C335AB8;
  v491 = v304;
  if (SHIBYTE(v305.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v492, v305.__r_.__value_.__l.__data_, v305.__r_.__value_.__l.__size_);
  else
    v492 = v305;
  v483 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v297.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v484, v297.__r_.__value_.__l.__data_, v297.__r_.__value_.__l.__size_);
  else
    v484 = v297;
  v485 = v298;
  v483 = &off_24C335AB8;
  v486 = v299;
  if (SHIBYTE(v300.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v487, v300.__r_.__value_.__l.__data_, v300.__r_.__value_.__l.__size_);
  else
    v487 = v300;
  v478 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v292.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v479, v292.__r_.__value_.__l.__data_, v292.__r_.__value_.__l.__size_);
  else
    v479 = v292;
  v480 = v293;
  v478 = &off_24C335AB8;
  v481 = v294;
  if (SHIBYTE(v295.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v482, v295.__r_.__value_.__l.__data_, v295.__r_.__value_.__l.__size_);
  else
    v482 = v295;
  v473 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v287.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v474, v287.__r_.__value_.__l.__data_, v287.__r_.__value_.__l.__size_);
  else
    v474 = v287;
  v475 = v288;
  v473 = &off_24C335AB8;
  v476 = v289;
  if (SHIBYTE(v290.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v477, v290.__r_.__value_.__l.__data_, v290.__r_.__value_.__l.__size_);
  else
    v477 = v290;
  v468 = (uint64_t (**)())off_24C335D90;
  v153 = SHIBYTE(v282.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v282.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v469, v282.__r_.__value_.__l.__data_, v282.__r_.__value_.__l.__size_);
  else
    v469 = v282;
  v468 = off_24C335B18;
  v471 = v284;
  v470 = v136;
  v472 = v285;
  v463 = (uint64_t (**)())off_24C335D90;
  v100 = SHIBYTE(v277.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v277.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v464, v277.__r_.__value_.__l.__data_, v277.__r_.__value_.__l.__size_);
  else
    v464 = v277;
  v463 = off_24C335B18;
  v466 = v279;
  v465 = v135;
  v467 = v280;
  v458 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v272.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v459, v272.__r_.__value_.__l.__data_, v272.__r_.__value_.__l.__size_);
  else
    v459 = v272;
  v460 = v273;
  v458 = &off_24C335AB8;
  v461 = v274;
  if (SHIBYTE(v275.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v462, v275.__r_.__value_.__l.__data_, v275.__r_.__value_.__l.__size_);
  else
    v462 = v275;
  v453 = (uint64_t (**)())off_24C335D90;
  v101 = SHIBYTE(v267.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v267.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v454, v267.__r_.__value_.__l.__data_, v267.__r_.__value_.__l.__size_);
  else
    v454 = v267;
  v453 = off_24C335B18;
  v456 = v269;
  v455 = v134;
  v457 = v270;
  v448 = (uint64_t (**)())off_24C335D90;
  v102 = SHIBYTE(v262.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v262.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v449, v262.__r_.__value_.__l.__data_, v262.__r_.__value_.__l.__size_);
  else
    v449 = v262;
  v448 = off_24C335B18;
  v451 = v264;
  v450 = v133;
  v452 = v265;
  v443 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v257.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v444, v257.__r_.__value_.__l.__data_, v257.__r_.__value_.__l.__size_);
  else
    v444 = v257;
  v445 = v258;
  v443 = &off_24C335AB8;
  v446 = v259;
  if (SHIBYTE(v260.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v447, v260.__r_.__value_.__l.__data_, v260.__r_.__value_.__l.__size_);
  else
    v447 = v260;
  v438 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v252.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v439, v252.__r_.__value_.__l.__data_, v252.__r_.__value_.__l.__size_);
  else
    v439 = v252;
  v440 = v253;
  v438 = &off_24C335AB8;
  v441 = v254;
  if (SHIBYTE(v255.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v442, v255.__r_.__value_.__l.__data_, v255.__r_.__value_.__l.__size_);
  else
    v442 = v255;
  v433 = (uint64_t (**)())off_24C335D90;
  v151 = SHIBYTE(v247.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v247.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v434, v247.__r_.__value_.__l.__data_, v247.__r_.__value_.__l.__size_);
  else
    v434 = v247;
  v433 = off_24C335B18;
  v436 = v249;
  v435 = v132;
  v437 = v250;
  v428 = (uint64_t (**)())off_24C335D90;
  v149 = SHIBYTE(v242.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v242.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v429, v242.__r_.__value_.__l.__data_, v242.__r_.__value_.__l.__size_);
  else
    v429 = v242;
  v428 = off_24C335B18;
  v431 = v244;
  v430 = v130;
  v432 = v245;
  v423 = (uint64_t (**)())off_24C335D90;
  v147 = SHIBYTE(v237.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v237.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v424, v237.__r_.__value_.__l.__data_, v237.__r_.__value_.__l.__size_);
  else
    v424 = v237;
  v423 = off_24C335B18;
  v426 = v239;
  v425 = v129;
  v427 = v240;
  v419 = (uint64_t (**)())off_24C335D90;
  v146 = SHIBYTE(v233.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v233.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v420, v233.__r_.__value_.__l.__data_, v233.__r_.__value_.__l.__size_);
  else
    v420 = v233;
  v421 = v128;
  v419 = off_24C335AF8;
  v422 = v81;
  v414 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v228.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v415, v228.__r_.__value_.__l.__data_, v228.__r_.__value_.__l.__size_);
  else
    v415 = v228;
  v416 = v229;
  v414 = &off_24C335AB8;
  v417 = v230;
  if (SHIBYTE(v231.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v418, v231.__r_.__value_.__l.__data_, v231.__r_.__value_.__l.__size_);
  else
    v418 = v231;
  v409 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v223.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v410, v223.__r_.__value_.__l.__data_, v223.__r_.__value_.__l.__size_);
  else
    v410 = v223;
  v411 = v224;
  v409 = &off_24C335AB8;
  v412 = v225;
  if (SHIBYTE(v226.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v413, v226.__r_.__value_.__l.__data_, v226.__r_.__value_.__l.__size_);
  else
    v413 = v226;
  v404 = (uint64_t (**)())off_24C335D90;
  v103 = SHIBYTE(v218.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v218.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v405, v218.__r_.__value_.__l.__data_, v218.__r_.__value_.__l.__size_);
  else
    v405 = v218;
  v404 = off_24C335B18;
  v407 = v220;
  v406 = v127;
  v408 = v221;
  v399 = (uint64_t (**)())off_24C335D90;
  v145 = SHIBYTE(v213.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v213.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v400, v213.__r_.__value_.__l.__data_, v213.__r_.__value_.__l.__size_);
  else
    v400 = v213;
  v399 = off_24C335B18;
  v402 = v215;
  v401 = v126;
  v403 = v216;
  v394 = (uint64_t (**)())off_24C335D90;
  v144 = SHIBYTE(v208.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v208.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v395, v208.__r_.__value_.__l.__data_, v208.__r_.__value_.__l.__size_);
  else
    v395 = v208;
  v394 = off_24C335B18;
  v397 = v210;
  v396 = v125;
  v398 = v211;
  v389 = (uint64_t (**)())off_24C335D90;
  v143 = SHIBYTE(v203.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v203.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v390, v203.__r_.__value_.__l.__data_, v203.__r_.__value_.__l.__size_);
  else
    v390 = v203;
  v389 = off_24C335B18;
  v392 = v205;
  v391 = v124;
  v393 = v206;
  v385 = (uint64_t (**)())off_24C335D90;
  v140 = SHIBYTE(v199.__r_.__value_.__r.__words[2]);
  v142 = v101;
  v141 = v103;
  if (SHIBYTE(v199.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v386, v199.__r_.__value_.__l.__data_, v199.__r_.__value_.__l.__size_);
  else
    v386 = v199;
  v387 = v123;
  v385 = off_24C335AF8;
  v388 = v122;
  v381 = (uint64_t (**)())off_24C335D90;
  v104 = SHIBYTE(v195.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v195.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v382, v195.__r_.__value_.__l.__data_, v195.__r_.__value_.__l.__size_);
  else
    v382 = v195;
  v383 = v121;
  v381 = off_24C335AF8;
  v384 = v91;
  v376 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v190.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v377, v190.__r_.__value_.__l.__data_, v190.__r_.__value_.__l.__size_);
  else
    v377 = v190;
  v378 = v191;
  v376 = &off_24C335AB8;
  v379 = v192;
  if (SHIBYTE(v193.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v380, v193.__r_.__value_.__l.__data_, v193.__r_.__value_.__l.__size_);
  else
    v380 = v193;
  v371 = (uint64_t (**)())off_24C335D90;
  v105 = SHIBYTE(v185.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v185.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v372, v185.__r_.__value_.__l.__data_, v185.__r_.__value_.__l.__size_);
  else
    v372 = v185;
  v371 = off_24C335B18;
  v374 = v187;
  v373 = v120;
  v375 = v188;
  v366 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v180.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v367, v180.__r_.__value_.__l.__data_, v180.__r_.__value_.__l.__size_);
  else
    v367 = v180;
  v368 = v181;
  v366 = &off_24C335AB8;
  v369 = v182;
  v138 = v100;
  if (SHIBYTE(v183.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v370, v183.__r_.__value_.__l.__data_, v183.__r_.__value_.__l.__size_);
  else
    v370 = v183;
  v361 = (uint64_t (**)())off_24C335D90;
  v106 = SHIBYTE(v175.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v175.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v362, v175.__r_.__value_.__l.__data_, v175.__r_.__value_.__l.__size_);
  else
    v362 = v175;
  v361 = off_24C335B18;
  v364 = v177;
  v363 = v119;
  v365 = v178;
  v356 = (uint64_t (**)())off_24C335D90;
  v107 = SHIBYTE(v170.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v170.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v357, v170.__r_.__value_.__l.__data_, v170.__r_.__value_.__l.__size_);
  else
    v357 = v170;
  v356 = off_24C335B18;
  v359 = v172;
  v358 = v118;
  v360 = v173;
  v351 = (uint64_t (**)())off_24C335D90;
  v108 = SHIBYTE(v165.__r_.__value_.__r.__words[2]);
  v139 = v102;
  if (SHIBYTE(v165.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v352, v165.__r_.__value_.__l.__data_, v165.__r_.__value_.__l.__size_);
  else
    v352 = v165;
  v351 = off_24C335B18;
  v354 = v167;
  v353 = v117;
  v355 = v168;
  v346 = (uint64_t (**)())off_24C335D90;
  v109 = SHIBYTE(v160.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v160.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v160.__r_.__value_.__l.__data_, v160.__r_.__value_.__l.__size_);
  else
    __p = v160;
  v346 = off_24C335B18;
  v349 = v162;
  v348 = v116;
  v350 = v163;
  v341 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v155.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v342, v155.__r_.__value_.__l.__data_, v155.__r_.__value_.__l.__size_);
  else
    v342 = v155;
  v343 = v156;
  v341 = &off_24C335AB8;
  v344 = v157;
  if (SHIBYTE(v158.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v345, v158.__r_.__value_.__l.__data_, v158.__r_.__value_.__l.__size_);
  else
    v345 = v158;
  mediaplatform::DatabaseColumnTuple<21ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(v137, (uint64_t)&v518, (uint64_t)&v513, (uint64_t)&v508, (uint64_t)&v503, (uint64_t)&v498, (uint64_t)&v493, (uint64_t)&v488, (uint64_t)&v483, (uint64_t)&v478, (uint64_t)&v473, (uint64_t)&v468, (uint64_t)&v463, (uint64_t)&v458, (uint64_t)&v453, (uint64_t)&v448, (uint64_t)&v443, (uint64_t)&v438, (uint64_t)&v433,
    (uint64_t)&v428,
    (uint64_t)&v423,
    (uint64_t)&v419,
    (uint64_t)&v414,
    (uint64_t)&v409,
    (uint64_t)&v404,
    (uint64_t)&v399,
    (uint64_t)&v394,
    (uint64_t)&v389,
    (uint64_t)&v385,
    (uint64_t)&v381,
    (uint64_t)&v376,
    (uint64_t)&v371,
    (uint64_t)&v366,
    (uint64_t)&v361,
    (uint64_t)&v356,
    (uint64_t)&v351,
    (uint64_t)&v346,
    (uint64_t)&v341);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v341);
  v346 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v351 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v352.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v352.__r_.__value_.__l.__data_);
  v356 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v357.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v357.__r_.__value_.__l.__data_);
  v361 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v362.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v362.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v366);
  v371 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v372.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v372.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v376);
  v381 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v382.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v382.__r_.__value_.__l.__data_);
  v385 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v386.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v386.__r_.__value_.__l.__data_);
  v389 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v390.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v390.__r_.__value_.__l.__data_);
  v394 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v395.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v395.__r_.__value_.__l.__data_);
  v399 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v400.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v400.__r_.__value_.__l.__data_);
  v404 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v405.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v405.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v409);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v414);
  v419 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v420.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v420.__r_.__value_.__l.__data_);
  v423 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v424.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v424.__r_.__value_.__l.__data_);
  v428 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v429.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v429.__r_.__value_.__l.__data_);
  v433 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v434.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v434.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v438);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v443);
  v448 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v449.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v449.__r_.__value_.__l.__data_);
  v453 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v454.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v454.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v458);
  v463 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v464.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v464.__r_.__value_.__l.__data_);
  v468 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v469.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v469.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v473);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v478);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v483);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v488);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v493);
  v498 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v499.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v499.__r_.__value_.__l.__data_);
  v503 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v504.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v504.__r_.__value_.__l.__data_);
  v508 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v509.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v509.__r_.__value_.__l.__data_);
  v513 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v514.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v514.__r_.__value_.__l.__data_);
  v518 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v519.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v519.__r_.__value_.__l.__data_);
  *(_QWORD *)(v137 + 1984) = off_24C335D90;
  v110 = (std::string *)(v137 + 1992);
  v111 = SHIBYTE(v337.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v337.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v110, v337.__r_.__value_.__l.__data_, v337.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v110->__r_.__value_.__l.__data_ = *(_OWORD *)&v337.__r_.__value_.__l.__data_;
    *(_QWORD *)(v137 + 2008) = *((_QWORD *)&v337.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(v137 + 2016) = v338;
  *(_QWORD *)(v137 + 1984) = off_24C335B18;
  *(_QWORD *)(v137 + 2020) = v339;
  *(_DWORD *)(v137 + 2028) = v340;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v154);
  v159 = (uint64_t (**)())off_24C335D90;
  if (v109 < 0)
    operator delete(v160.__r_.__value_.__l.__data_);
  v164 = (uint64_t (**)())off_24C335D90;
  if (v108 < 0)
    operator delete(v165.__r_.__value_.__l.__data_);
  if (v107 < 0)
  {
    operator delete(v170.__r_.__value_.__l.__data_);
    if ((v106 & 0x80000000) == 0)
      goto LABEL_361;
  }
  else if ((v106 & 0x80000000) == 0)
  {
    goto LABEL_361;
  }
  operator delete(v175.__r_.__value_.__l.__data_);
LABEL_361:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v179);
  if (v105 < 0)
    operator delete(v185.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v189);
  if (v104 < 0)
    operator delete(v195.__r_.__value_.__l.__data_);
  if (v140 < 0)
    operator delete(v199.__r_.__value_.__l.__data_);
  if (v143 < 0)
    operator delete(v203.__r_.__value_.__l.__data_);
  if (v144 < 0)
    operator delete(v208.__r_.__value_.__l.__data_);
  if (v145 < 0)
  {
    operator delete(v213.__r_.__value_.__l.__data_);
    if ((v141 & 0x80000000) == 0)
      goto LABEL_373;
  }
  else if ((v141 & 0x80000000) == 0)
  {
    goto LABEL_373;
  }
  operator delete(v218.__r_.__value_.__l.__data_);
LABEL_373:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v222);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v227);
  if (v146 < 0)
    operator delete(v233.__r_.__value_.__l.__data_);
  if (v147 < 0)
    operator delete(v237.__r_.__value_.__l.__data_);
  if (v149 < 0)
    operator delete(v242.__r_.__value_.__l.__data_);
  if (v151 < 0)
    operator delete(v247.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v251);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v256);
  if (v139 < 0)
  {
    operator delete(v262.__r_.__value_.__l.__data_);
    if ((v142 & 0x80000000) == 0)
      goto LABEL_383;
  }
  else if ((v142 & 0x80000000) == 0)
  {
    goto LABEL_383;
  }
  operator delete(v267.__r_.__value_.__l.__data_);
LABEL_383:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v271);
  if (v138 < 0)
    operator delete(v277.__r_.__value_.__l.__data_);
  if (v153 < 0)
    operator delete(v282.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v286);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v291);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v296);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v301);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v306);
  if (SHIBYTE(v312.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v312.__r_.__value_.__l.__data_);
  if (SHIBYTE(v317.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v317.__r_.__value_.__l.__data_);
  if (SHIBYTE(v322.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v322.__r_.__value_.__l.__data_);
  if (SHIBYTE(v327.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v327.__r_.__value_.__l.__data_);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__s.__r_.__value_.__l.__data_);
    if ((v111 & 0x80000000) == 0)
      goto LABEL_397;
  }
  else if ((v111 & 0x80000000) == 0)
  {
    goto LABEL_397;
  }
  operator delete(v337.__r_.__value_.__l.__data_);
LABEL_397:
  *(_QWORD *)(v137 + 2032) = off_24C335D90;
  v112 = (std::string *)(v137 + 2040);
  if (*(char *)(v131 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v112, *(const std::string::value_type **)(v131 + 8), *(_QWORD *)(v131 + 16));
  }
  else
  {
    v113 = *(_OWORD *)(v131 + 8);
    *(_QWORD *)(v137 + 2056) = *(_QWORD *)(v131 + 24);
    *(_OWORD *)&v112->__r_.__value_.__l.__data_ = v113;
  }
  *(_DWORD *)(v137 + 2064) = *(_DWORD *)(v131 + 32);
  *(_QWORD *)(v137 + 2032) = off_24C335B18;
  v114 = *(_QWORD *)(v131 + 36);
  *(_DWORD *)(v137 + 2076) = *(_DWORD *)(v131 + 44);
  *(_QWORD *)(v137 + 2068) = v114;
  return v137;
}

void sub_20A8A1E8C(_Unwind_Exception *a1)
{
  uint64_t v1;

  mediaplatform::DatabaseColumnTuple<20ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(v1);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<19ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 2032) = off_24C335D90;
  if (*(char *)(a1 + 2063) < 0)
    operator delete(*(void **)(a1 + 2040));
  *(_QWORD *)(a1 + 1984) = off_24C335D90;
  if (*(char *)(a1 + 2015) < 0)
    operator delete(*(void **)(a1 + 1992));
  *(_QWORD *)(a1 + 1936) = off_24C335D90;
  if (*(char *)(a1 + 1967) < 0)
    operator delete(*(void **)(a1 + 1944));
  *(_QWORD *)(a1 + 1888) = off_24C335D90;
  if (*(char *)(a1 + 1919) < 0)
    operator delete(*(void **)(a1 + 1896));
  return mediaplatform::DatabaseColumnTuple<23ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<20ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 1984) = off_24C335D90;
  if (*(char *)(a1 + 2015) < 0)
    operator delete(*(void **)(a1 + 1992));
  *(_QWORD *)(a1 + 1936) = off_24C335D90;
  if (*(char *)(a1 + 1967) < 0)
    operator delete(*(void **)(a1 + 1944));
  *(_QWORD *)(a1 + 1888) = off_24C335D90;
  if (*(char *)(a1 + 1919) < 0)
    operator delete(*(void **)(a1 + 1896));
  return mediaplatform::DatabaseColumnTuple<23ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<21ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  uint64_t v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  std::string *v102;
  int v103;
  std::string *v104;
  __int128 v105;
  uint64_t v106;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  uint64_t v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  uint64_t v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  uint64_t (**v146)();
  std::string v147;
  int v148;
  char v149;
  std::string v150;
  uint64_t (**v151)();
  std::string v152;
  int v153;
  uint64_t v154;
  int v155;
  uint64_t (**v156)();
  std::string v157;
  int v158;
  uint64_t v159;
  int v160;
  uint64_t (**v161)();
  std::string v162;
  int v163;
  uint64_t v164;
  int v165;
  uint64_t (**v166)();
  std::string v167;
  int v168;
  uint64_t v169;
  int v170;
  uint64_t (**v171)();
  std::string v172;
  int v173;
  char v174;
  std::string v175;
  uint64_t (**v176)();
  std::string v177;
  int v178;
  uint64_t v179;
  int v180;
  uint64_t (**v181)();
  std::string v182;
  int v183;
  char v184;
  std::string v185;
  uint64_t (**v186)();
  std::string v187;
  int v188;
  uint64_t v189;
  uint64_t (**v190)();
  std::string v191;
  int v192;
  uint64_t v193;
  uint64_t (**v194)();
  std::string v195;
  int v196;
  uint64_t v197;
  int v198;
  uint64_t (**v199)();
  std::string v200;
  int v201;
  uint64_t v202;
  int v203;
  uint64_t (**v204)();
  std::string v205;
  int v206;
  uint64_t v207;
  int v208;
  uint64_t (**v209)();
  std::string v210;
  int v211;
  uint64_t v212;
  int v213;
  uint64_t (**v214)();
  std::string v215;
  int v216;
  char v217;
  std::string v218;
  uint64_t (**v219)();
  std::string v220;
  int v221;
  char v222;
  std::string v223;
  uint64_t (**v224)();
  std::string v225;
  int v226;
  uint64_t v227;
  uint64_t (**v228)();
  std::string v229;
  int v230;
  uint64_t v231;
  int v232;
  uint64_t (**v233)();
  std::string v234;
  int v235;
  uint64_t v236;
  int v237;
  uint64_t (**v238)();
  std::string v239;
  int v240;
  uint64_t v241;
  int v242;
  uint64_t (**v243)();
  std::string v244;
  int v245;
  char v246;
  std::string v247;
  uint64_t (**v248)();
  std::string v249;
  int v250;
  char v251;
  std::string v252;
  uint64_t (**v253)();
  std::string v254;
  int v255;
  uint64_t v256;
  int v257;
  uint64_t (**v258)();
  std::string v259;
  int v260;
  uint64_t v261;
  int v262;
  uint64_t (**v263)();
  std::string v264;
  int v265;
  char v266;
  std::string v267;
  uint64_t (**v268)();
  std::string v269;
  int v270;
  uint64_t v271;
  int v272;
  uint64_t (**v273)();
  std::string v274;
  int v275;
  uint64_t v276;
  int v277;
  uint64_t (**v278)();
  std::string v279;
  int v280;
  char v281;
  std::string v282;
  uint64_t (**v283)();
  std::string v284;
  int v285;
  char v286;
  std::string v287;
  uint64_t (**v288)();
  std::string v289;
  int v290;
  char v291;
  std::string v292;
  uint64_t (**v293)();
  std::string v294;
  int v295;
  char v296;
  std::string v297;
  uint64_t (**v298)();
  std::string v299;
  int v300;
  char v301;
  std::string v302;
  uint64_t (**v303)();
  std::string v304;
  int v305;
  uint64_t v306;
  int v307;
  uint64_t (**v308)();
  std::string v309;
  int v310;
  uint64_t v311;
  int v312;
  uint64_t (**v313)();
  std::string __s;
  int v315;
  uint64_t v316;
  int v317;
  uint64_t (**v318)();
  std::string v319;
  int v320;
  uint64_t v321;
  int v322;
  uint64_t (**v323)();
  std::string v324;
  int v325;
  char v326;
  std::string v327;
  uint64_t (**v328)();
  std::string __p;
  int v330;
  uint64_t v331;
  int v332;
  uint64_t (**v333)();
  std::string v334;
  int v335;
  uint64_t v336;
  int v337;
  uint64_t (**v338)();
  std::string v339;
  int v340;
  uint64_t v341;
  int v342;
  uint64_t (**v343)();
  std::string v344;
  int v345;
  uint64_t v346;
  int v347;
  uint64_t (**v348)();
  std::string v349;
  int v350;
  char v351;
  std::string v352;
  uint64_t (**v353)();
  std::string v354;
  int v355;
  uint64_t v356;
  int v357;
  uint64_t (**v358)();
  std::string v359;
  int v360;
  char v361;
  std::string v362;
  uint64_t (**v363)();
  std::string v364;
  int v365;
  uint64_t v366;
  uint64_t (**v367)();
  std::string v368;
  int v369;
  uint64_t v370;
  uint64_t (**v371)();
  std::string v372;
  int v373;
  uint64_t v374;
  int v375;
  uint64_t (**v376)();
  std::string v377;
  int v378;
  uint64_t v379;
  int v380;
  uint64_t (**v381)();
  std::string v382;
  int v383;
  uint64_t v384;
  int v385;
  uint64_t (**v386)();
  std::string v387;
  int v388;
  uint64_t v389;
  int v390;
  uint64_t (**v391)();
  std::string v392;
  int v393;
  char v394;
  std::string v395;
  uint64_t (**v396)();
  std::string v397;
  int v398;
  char v399;
  std::string v400;
  uint64_t (**v401)();
  std::string v402;
  int v403;
  uint64_t v404;
  uint64_t (**v405)();
  std::string v406;
  int v407;
  uint64_t v408;
  int v409;
  uint64_t (**v410)();
  std::string v411;
  int v412;
  uint64_t v413;
  int v414;
  uint64_t (**v415)();
  std::string v416;
  int v417;
  uint64_t v418;
  int v419;
  uint64_t (**v420)();
  std::string v421;
  int v422;
  char v423;
  std::string v424;
  uint64_t (**v425)();
  std::string v426;
  int v427;
  char v428;
  std::string v429;
  uint64_t (**v430)();
  std::string v431;
  int v432;
  uint64_t v433;
  int v434;
  uint64_t (**v435)();
  std::string v436;
  int v437;
  uint64_t v438;
  int v439;
  uint64_t (**v440)();
  std::string v441;
  int v442;
  char v443;
  std::string v444;
  uint64_t (**v445)();
  std::string v446;
  int v447;
  uint64_t v448;
  int v449;
  uint64_t (**v450)();
  std::string v451;
  int v452;
  uint64_t v453;
  int v454;
  uint64_t (**v455)();
  std::string v456;
  int v457;
  char v458;
  std::string v459;
  uint64_t (**v460)();
  std::string v461;
  int v462;
  char v463;
  std::string v464;
  uint64_t (**v465)();
  std::string v466;
  int v467;
  char v468;
  std::string v469;
  uint64_t (**v470)();
  std::string v471;
  int v472;
  char v473;
  std::string v474;
  uint64_t (**v475)();
  std::string v476;
  int v477;
  char v478;
  std::string v479;
  uint64_t (**v480)();
  std::string v481;
  int v482;
  uint64_t v483;
  int v484;
  uint64_t (**v485)();
  std::string v486;
  int v487;
  uint64_t v488;
  int v489;
  uint64_t (**v490)();
  std::string v491;
  int v492;
  uint64_t v493;
  int v494;

  v38 = MEMORY[0x24BDAC7A8](a1);
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v50 = v39;
  v123 = v51;
  v52 = v38;
  if (*(char *)(v39 + 31) < 0)
    std::string::__init_copy_ctor_external(&v319, *(const std::string::value_type **)(v39 + 8), *(_QWORD *)(v39 + 16));
  else
    v319 = *(std::string *)(v39 + 8);
  v53 = *(_DWORD *)(v50 + 32);
  v318 = off_24C335B18;
  v321 = *(_QWORD *)(v50 + 36);
  v54 = *(_DWORD *)(v50 + 44);
  v320 = v53;
  v322 = v54;
  if (*(char *)(v49 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(v49 + 8), *(_QWORD *)(v49 + 16));
  else
    __s = *(std::string *)(v49 + 8);
  v55 = *(_DWORD *)(v49 + 32);
  v313 = off_24C335B18;
  v316 = *(_QWORD *)(v49 + 36);
  v56 = *(_DWORD *)(v49 + 44);
  v315 = v55;
  v317 = v56;
  if (*(char *)(v47 + 31) < 0)
    std::string::__init_copy_ctor_external(&v309, *(const std::string::value_type **)(v47 + 8), *(_QWORD *)(v47 + 16));
  else
    v309 = *(std::string *)(v47 + 8);
  v57 = *(_DWORD *)(v47 + 32);
  v308 = off_24C335B18;
  v311 = *(_QWORD *)(v47 + 36);
  v58 = *(_DWORD *)(v47 + 44);
  v142 = v57;
  v310 = v57;
  v312 = v58;
  v144 = v55;
  if (*(char *)(v45 + 31) < 0)
    std::string::__init_copy_ctor_external(&v304, *(const std::string::value_type **)(v45 + 8), *(_QWORD *)(v45 + 16));
  else
    v304 = *(std::string *)(v45 + 8);
  v59 = *(_DWORD *)(v45 + 32);
  v303 = off_24C335B18;
  v306 = *(_QWORD *)(v45 + 36);
  v60 = *(_DWORD *)(v45 + 44);
  v305 = v59;
  v307 = v60;
  v298 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v43 + 31) < 0)
    std::string::__init_copy_ctor_external(&v299, *(const std::string::value_type **)(v43 + 8), *(_QWORD *)(v43 + 16));
  else
    v299 = *(std::string *)(v43 + 8);
  v300 = *(_DWORD *)(v43 + 32);
  v298 = &off_24C335AB8;
  v301 = *(_BYTE *)(v43 + 36);
  if (*(char *)(v43 + 63) < 0)
    std::string::__init_copy_ctor_external(&v302, *(const std::string::value_type **)(v43 + 40), *(_QWORD *)(v43 + 48));
  else
    v302 = *(std::string *)(v43 + 40);
  v293 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v41 + 31) < 0)
    std::string::__init_copy_ctor_external(&v294, *(const std::string::value_type **)(v41 + 8), *(_QWORD *)(v41 + 16));
  else
    v294 = *(std::string *)(v41 + 8);
  v295 = *(_DWORD *)(v41 + 32);
  v293 = &off_24C335AB8;
  v296 = *(_BYTE *)(v41 + 36);
  if (*(char *)(v41 + 63) < 0)
    std::string::__init_copy_ctor_external(&v297, *(const std::string::value_type **)(v41 + 40), *(_QWORD *)(v41 + 48));
  else
    v297 = *(std::string *)(v41 + 40);
  v288 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v289, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v289 = *(std::string *)(a9 + 8);
  v290 = *(_DWORD *)(a9 + 32);
  v288 = &off_24C335AB8;
  v291 = *(_BYTE *)(a9 + 36);
  if (*(char *)(a9 + 63) < 0)
    std::string::__init_copy_ctor_external(&v292, *(const std::string::value_type **)(a9 + 40), *(_QWORD *)(a9 + 48));
  else
    v292 = *(std::string *)(a9 + 40);
  v283 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v284, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v284 = *(std::string *)(a10 + 8);
  v285 = *(_DWORD *)(a10 + 32);
  v283 = &off_24C335AB8;
  v286 = *(_BYTE *)(a10 + 36);
  if (*(char *)(a10 + 63) < 0)
    std::string::__init_copy_ctor_external(&v287, *(const std::string::value_type **)(a10 + 40), *(_QWORD *)(a10 + 48));
  else
    v287 = *(std::string *)(a10 + 40);
  v278 = (uint64_t (**)())off_24C335D90;
  v131 = v52;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v279, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v279 = *(std::string *)(a11 + 8);
  v280 = *(_DWORD *)(a11 + 32);
  v278 = &off_24C335AB8;
  v281 = *(_BYTE *)(a11 + 36);
  if (*(char *)(a11 + 63) < 0)
    std::string::__init_copy_ctor_external(&v282, *(const std::string::value_type **)(a11 + 40), *(_QWORD *)(a11 + 48));
  else
    v282 = *(std::string *)(a11 + 40);
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v274, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v274 = *(std::string *)(a12 + 8);
  v61 = *(_DWORD *)(a12 + 32);
  v273 = off_24C335B18;
  v276 = *(_QWORD *)(a12 + 36);
  v62 = *(_DWORD *)(a12 + 44);
  v275 = v61;
  v277 = v62;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v269, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v269 = *(std::string *)(a13 + 8);
  v63 = *(_DWORD *)(a13 + 32);
  v268 = off_24C335B18;
  v271 = *(_QWORD *)(a13 + 36);
  v64 = *(_DWORD *)(a13 + 44);
  v128 = v63;
  v270 = v63;
  v272 = v64;
  v263 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v264, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v264 = *(std::string *)(a14 + 8);
  v129 = v61;
  v265 = *(_DWORD *)(a14 + 32);
  v263 = &off_24C335AB8;
  v266 = *(_BYTE *)(a14 + 36);
  if (*(char *)(a14 + 63) < 0)
    std::string::__init_copy_ctor_external(&v267, *(const std::string::value_type **)(a14 + 40), *(_QWORD *)(a14 + 48));
  else
    v267 = *(std::string *)(a14 + 40);
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v259, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v259 = *(std::string *)(a15 + 8);
  v65 = *(_DWORD *)(a15 + 32);
  v258 = off_24C335B18;
  v261 = *(_QWORD *)(a15 + 36);
  v66 = *(_DWORD *)(a15 + 44);
  v127 = v65;
  v260 = v65;
  v262 = v66;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v254, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v254 = *(std::string *)(a16 + 8);
  v67 = *(_DWORD *)(a16 + 32);
  v253 = off_24C335B18;
  v256 = *(_QWORD *)(a16 + 36);
  v68 = *(_DWORD *)(a16 + 44);
  v126 = v67;
  v255 = v67;
  v257 = v68;
  v248 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v249, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v249 = *(std::string *)(a17 + 8);
  v250 = *(_DWORD *)(a17 + 32);
  v248 = &off_24C335AB8;
  v251 = *(_BYTE *)(a17 + 36);
  if (*(char *)(a17 + 63) < 0)
    std::string::__init_copy_ctor_external(&v252, *(const std::string::value_type **)(a17 + 40), *(_QWORD *)(a17 + 48));
  else
    v252 = *(std::string *)(a17 + 40);
  v243 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v244, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v244 = *(std::string *)(a18 + 8);
  v245 = *(_DWORD *)(a18 + 32);
  v243 = &off_24C335AB8;
  v246 = *(_BYTE *)(a18 + 36);
  if (*(char *)(a18 + 63) < 0)
    std::string::__init_copy_ctor_external(&v247, *(const std::string::value_type **)(a18 + 40), *(_QWORD *)(a18 + 48));
  else
    v247 = *(std::string *)(a18 + 40);
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v239, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v239 = *(std::string *)(a19 + 8);
  v69 = *(_DWORD *)(a19 + 32);
  v238 = off_24C335B18;
  v241 = *(_QWORD *)(a19 + 36);
  v70 = *(_DWORD *)(a19 + 44);
  v125 = v69;
  v240 = v69;
  v242 = v70;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v234, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v234 = *(std::string *)(a20 + 8);
  v71 = *(_DWORD *)(a20 + 32);
  v233 = off_24C335B18;
  v236 = *(_QWORD *)(a20 + 36);
  v72 = *(_DWORD *)(a20 + 44);
  v124 = v71;
  v235 = v71;
  v237 = v72;
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v229, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v229 = *(std::string *)(a21 + 8);
  v73 = *(_DWORD *)(a21 + 32);
  v228 = off_24C335B18;
  v231 = *(_QWORD *)(a21 + 36);
  v74 = *(_DWORD *)(a21 + 44);
  v122 = v73;
  v230 = v73;
  v232 = v74;
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v225, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v225 = *(std::string *)(a22 + 8);
  v121 = *(_DWORD *)(a22 + 32);
  v226 = v121;
  v224 = off_24C335AF8;
  v75 = *(_QWORD *)(a22 + 36);
  v227 = v75;
  v219 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v220, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v220 = *(std::string *)(a23 + 8);
  v221 = *(_DWORD *)(a23 + 32);
  v219 = &off_24C335AB8;
  v222 = *(_BYTE *)(a23 + 36);
  if (*(char *)(a23 + 63) < 0)
    std::string::__init_copy_ctor_external(&v223, *(const std::string::value_type **)(a23 + 40), *(_QWORD *)(a23 + 48));
  else
    v223 = *(std::string *)(a23 + 40);
  v214 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v215, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v215 = *(std::string *)(a24 + 8);
  v216 = *(_DWORD *)(a24 + 32);
  v214 = &off_24C335AB8;
  v217 = *(_BYTE *)(a24 + 36);
  if (*(char *)(a24 + 63) < 0)
    std::string::__init_copy_ctor_external(&v218, *(const std::string::value_type **)(a24 + 40), *(_QWORD *)(a24 + 48));
  else
    v218 = *(std::string *)(a24 + 40);
  if (*(char *)(a25 + 31) < 0)
    std::string::__init_copy_ctor_external(&v210, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  else
    v210 = *(std::string *)(a25 + 8);
  v76 = *(_DWORD *)(a25 + 32);
  v209 = off_24C335B18;
  v212 = *(_QWORD *)(a25 + 36);
  v77 = *(_DWORD *)(a25 + 44);
  v120 = v76;
  v211 = v76;
  v213 = v77;
  if (*(char *)(a26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v205, *(const std::string::value_type **)(a26 + 8), *(_QWORD *)(a26 + 16));
  else
    v205 = *(std::string *)(a26 + 8);
  v78 = *(_DWORD *)(a26 + 32);
  v204 = off_24C335B18;
  v207 = *(_QWORD *)(a26 + 36);
  v79 = *(_DWORD *)(a26 + 44);
  v119 = v78;
  v206 = v78;
  v208 = v79;
  if (*(char *)(a27 + 31) < 0)
    std::string::__init_copy_ctor_external(&v200, *(const std::string::value_type **)(a27 + 8), *(_QWORD *)(a27 + 16));
  else
    v200 = *(std::string *)(a27 + 8);
  v80 = *(_DWORD *)(a27 + 32);
  v199 = off_24C335B18;
  v202 = *(_QWORD *)(a27 + 36);
  v81 = *(_DWORD *)(a27 + 44);
  v118 = v80;
  v201 = v80;
  v203 = v81;
  if (*(char *)(a28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v195, *(const std::string::value_type **)(a28 + 8), *(_QWORD *)(a28 + 16));
  else
    v195 = *(std::string *)(a28 + 8);
  v82 = *(_DWORD *)(a28 + 32);
  v194 = off_24C335B18;
  v197 = *(_QWORD *)(a28 + 36);
  v83 = *(_DWORD *)(a28 + 44);
  v117 = v82;
  v196 = v82;
  v198 = v83;
  if (*(char *)(a29 + 31) < 0)
    std::string::__init_copy_ctor_external(&v191, *(const std::string::value_type **)(a29 + 8), *(_QWORD *)(a29 + 16));
  else
    v191 = *(std::string *)(a29 + 8);
  v116 = *(_DWORD *)(a29 + 32);
  v192 = v116;
  v190 = off_24C335AF8;
  v115 = *(_QWORD *)(a29 + 36);
  v193 = v115;
  if (*(char *)(a30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v187, *(const std::string::value_type **)(a30 + 8), *(_QWORD *)(a30 + 16));
  else
    v187 = *(std::string *)(a30 + 8);
  v114 = *(_DWORD *)(a30 + 32);
  v188 = v114;
  v186 = off_24C335AF8;
  v113 = *(_QWORD *)(a30 + 36);
  v189 = v113;
  v181 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a31 + 31) < 0)
    std::string::__init_copy_ctor_external(&v182, *(const std::string::value_type **)(a31 + 8), *(_QWORD *)(a31 + 16));
  else
    v182 = *(std::string *)(a31 + 8);
  v183 = *(_DWORD *)(a31 + 32);
  v181 = &off_24C335AB8;
  v184 = *(_BYTE *)(a31 + 36);
  if (*(char *)(a31 + 63) < 0)
    std::string::__init_copy_ctor_external(&v185, *(const std::string::value_type **)(a31 + 40), *(_QWORD *)(a31 + 48));
  else
    v185 = *(std::string *)(a31 + 40);
  if (*(char *)(a32 + 31) < 0)
    std::string::__init_copy_ctor_external(&v177, *(const std::string::value_type **)(a32 + 8), *(_QWORD *)(a32 + 16));
  else
    v177 = *(std::string *)(a32 + 8);
  v84 = *(_DWORD *)(a32 + 32);
  v176 = off_24C335B18;
  v179 = *(_QWORD *)(a32 + 36);
  v85 = *(_DWORD *)(a32 + 44);
  v112 = v84;
  v178 = v84;
  v180 = v85;
  v171 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a33 + 31) < 0)
    std::string::__init_copy_ctor_external(&v172, *(const std::string::value_type **)(a33 + 8), *(_QWORD *)(a33 + 16));
  else
    v172 = *(std::string *)(a33 + 8);
  v173 = *(_DWORD *)(a33 + 32);
  v171 = &off_24C335AB8;
  v174 = *(_BYTE *)(a33 + 36);
  if (*(char *)(a33 + 63) < 0)
    std::string::__init_copy_ctor_external(&v175, *(const std::string::value_type **)(a33 + 40), *(_QWORD *)(a33 + 48));
  else
    v175 = *(std::string *)(a33 + 40);
  if (*(char *)(a34 + 31) < 0)
    std::string::__init_copy_ctor_external(&v167, *(const std::string::value_type **)(a34 + 8), *(_QWORD *)(a34 + 16));
  else
    v167 = *(std::string *)(a34 + 8);
  v86 = *(_DWORD *)(a34 + 32);
  v166 = off_24C335B18;
  v169 = *(_QWORD *)(a34 + 36);
  v87 = *(_DWORD *)(a34 + 44);
  v111 = v86;
  v168 = v86;
  v170 = v87;
  if (*(char *)(a35 + 31) < 0)
    std::string::__init_copy_ctor_external(&v162, *(const std::string::value_type **)(a35 + 8), *(_QWORD *)(a35 + 16));
  else
    v162 = *(std::string *)(a35 + 8);
  v88 = *(_DWORD *)(a35 + 32);
  v161 = off_24C335B18;
  v164 = *(_QWORD *)(a35 + 36);
  v89 = *(_DWORD *)(a35 + 44);
  v110 = v88;
  v163 = v88;
  v165 = v89;
  if (*(char *)(a36 + 31) < 0)
    std::string::__init_copy_ctor_external(&v157, *(const std::string::value_type **)(a36 + 8), *(_QWORD *)(a36 + 16));
  else
    v157 = *(std::string *)(a36 + 8);
  v90 = *(_DWORD *)(a36 + 32);
  v156 = off_24C335B18;
  v159 = *(_QWORD *)(a36 + 36);
  v91 = *(_DWORD *)(a36 + 44);
  v109 = v90;
  v158 = v90;
  v160 = v91;
  if (*(char *)(a37 + 31) < 0)
    std::string::__init_copy_ctor_external(&v152, *(const std::string::value_type **)(a37 + 8), *(_QWORD *)(a37 + 16));
  else
    v152 = *(std::string *)(a37 + 8);
  v108 = *(_DWORD *)(a37 + 32);
  v153 = v108;
  v151 = off_24C335B18;
  v154 = *(_QWORD *)(a37 + 36);
  v155 = *(_DWORD *)(a37 + 44);
  v146 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a38 + 31) < 0)
    std::string::__init_copy_ctor_external(&v147, *(const std::string::value_type **)(a38 + 8), *(_QWORD *)(a38 + 16));
  else
    v147 = *(std::string *)(a38 + 8);
  v148 = *(_DWORD *)(a38 + 32);
  v146 = &off_24C335AB8;
  v149 = *(_BYTE *)(a38 + 36);
  if (*(char *)(a38 + 63) < 0)
    std::string::__init_copy_ctor_external(&v150, *(const std::string::value_type **)(a38 + 40), *(_QWORD *)(a38 + 48));
  else
    v150 = *(std::string *)(a38 + 40);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v491, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v491 = __s;
  v490 = off_24C335B18;
  v493 = v316;
  v492 = v144;
  v494 = v317;
  v485 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v309.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v486, v309.__r_.__value_.__l.__data_, v309.__r_.__value_.__l.__size_);
  else
    v486 = v309;
  v485 = off_24C335B18;
  v488 = v311;
  v487 = v142;
  v489 = v312;
  v480 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v304.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v481, v304.__r_.__value_.__l.__data_, v304.__r_.__value_.__l.__size_);
  else
    v481 = v304;
  v480 = off_24C335B18;
  v483 = v306;
  v482 = v59;
  v484 = v307;
  v475 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v299.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v476, v299.__r_.__value_.__l.__data_, v299.__r_.__value_.__l.__size_);
  else
    v476 = v299;
  v477 = v300;
  v475 = &off_24C335AB8;
  v478 = v301;
  if (SHIBYTE(v302.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v479, v302.__r_.__value_.__l.__data_, v302.__r_.__value_.__l.__size_);
  else
    v479 = v302;
  v470 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v294.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v471, v294.__r_.__value_.__l.__data_, v294.__r_.__value_.__l.__size_);
  else
    v471 = v294;
  v472 = v295;
  v470 = &off_24C335AB8;
  v473 = v296;
  if (SHIBYTE(v297.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v474, v297.__r_.__value_.__l.__data_, v297.__r_.__value_.__l.__size_);
  else
    v474 = v297;
  v465 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v289.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v466, v289.__r_.__value_.__l.__data_, v289.__r_.__value_.__l.__size_);
  else
    v466 = v289;
  v467 = v290;
  v465 = &off_24C335AB8;
  v468 = v291;
  if (SHIBYTE(v292.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v469, v292.__r_.__value_.__l.__data_, v292.__r_.__value_.__l.__size_);
  else
    v469 = v292;
  v460 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v284.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v461, v284.__r_.__value_.__l.__data_, v284.__r_.__value_.__l.__size_);
  else
    v461 = v284;
  v462 = v285;
  v460 = &off_24C335AB8;
  v463 = v286;
  if (SHIBYTE(v287.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v464, v287.__r_.__value_.__l.__data_, v287.__r_.__value_.__l.__size_);
  else
    v464 = v287;
  v455 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v279.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v456, v279.__r_.__value_.__l.__data_, v279.__r_.__value_.__l.__size_);
  else
    v456 = v279;
  v457 = v280;
  v455 = &off_24C335AB8;
  v458 = v281;
  if (SHIBYTE(v282.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v459, v282.__r_.__value_.__l.__data_, v282.__r_.__value_.__l.__size_);
  else
    v459 = v282;
  v450 = (uint64_t (**)())off_24C335D90;
  v92 = SHIBYTE(v274.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v274.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v451, v274.__r_.__value_.__l.__data_, v274.__r_.__value_.__l.__size_);
  else
    v451 = v274;
  v450 = off_24C335B18;
  v453 = v276;
  v452 = v129;
  v454 = v277;
  v445 = (uint64_t (**)())off_24C335D90;
  v93 = SHIBYTE(v269.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v269.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v446, v269.__r_.__value_.__l.__data_, v269.__r_.__value_.__l.__size_);
  else
    v446 = v269;
  v445 = off_24C335B18;
  v448 = v271;
  v447 = v128;
  v449 = v272;
  v440 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v264.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v441, v264.__r_.__value_.__l.__data_, v264.__r_.__value_.__l.__size_);
  else
    v441 = v264;
  v442 = v265;
  v440 = &off_24C335AB8;
  v443 = v266;
  if (SHIBYTE(v267.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v444, v267.__r_.__value_.__l.__data_, v267.__r_.__value_.__l.__size_);
  else
    v444 = v267;
  v435 = (uint64_t (**)())off_24C335D90;
  v94 = SHIBYTE(v259.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v259.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v436, v259.__r_.__value_.__l.__data_, v259.__r_.__value_.__l.__size_);
  else
    v436 = v259;
  v435 = off_24C335B18;
  v438 = v261;
  v437 = v127;
  v439 = v262;
  v430 = (uint64_t (**)())off_24C335D90;
  v143 = SHIBYTE(v254.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v254.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v431, v254.__r_.__value_.__l.__data_, v254.__r_.__value_.__l.__size_);
  else
    v431 = v254;
  v430 = off_24C335B18;
  v433 = v256;
  v432 = v126;
  v434 = v257;
  v425 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v249.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v426, v249.__r_.__value_.__l.__data_, v249.__r_.__value_.__l.__size_);
  else
    v426 = v249;
  v427 = v250;
  v425 = &off_24C335AB8;
  v428 = v251;
  if (SHIBYTE(v252.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v429, v252.__r_.__value_.__l.__data_, v252.__r_.__value_.__l.__size_);
  else
    v429 = v252;
  v420 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v244.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v421, v244.__r_.__value_.__l.__data_, v244.__r_.__value_.__l.__size_);
  else
    v421 = v244;
  v422 = v245;
  v420 = &off_24C335AB8;
  v423 = v246;
  if (SHIBYTE(v247.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v424, v247.__r_.__value_.__l.__data_, v247.__r_.__value_.__l.__size_);
  else
    v424 = v247;
  v415 = (uint64_t (**)())off_24C335D90;
  v95 = SHIBYTE(v239.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v239.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v416, v239.__r_.__value_.__l.__data_, v239.__r_.__value_.__l.__size_);
  else
    v416 = v239;
  v141 = v95;
  v415 = off_24C335B18;
  v418 = v241;
  v417 = v125;
  v419 = v242;
  v410 = (uint64_t (**)())off_24C335D90;
  v140 = SHIBYTE(v234.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v234.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v411, v234.__r_.__value_.__l.__data_, v234.__r_.__value_.__l.__size_);
  else
    v411 = v234;
  v410 = off_24C335B18;
  v413 = v236;
  v412 = v124;
  v414 = v237;
  v405 = (uint64_t (**)())off_24C335D90;
  v96 = SHIBYTE(v229.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v229.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v406, v229.__r_.__value_.__l.__data_, v229.__r_.__value_.__l.__size_);
  else
    v406 = v229;
  v405 = off_24C335B18;
  v408 = v231;
  v407 = v122;
  v409 = v232;
  v401 = (uint64_t (**)())off_24C335D90;
  v145 = SHIBYTE(v225.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v225.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v402, v225.__r_.__value_.__l.__data_, v225.__r_.__value_.__l.__size_);
  else
    v402 = v225;
  v403 = v121;
  v401 = off_24C335AF8;
  v404 = v75;
  v396 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v220.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v397, v220.__r_.__value_.__l.__data_, v220.__r_.__value_.__l.__size_);
  else
    v397 = v220;
  v398 = v221;
  v396 = &off_24C335AB8;
  v399 = v222;
  if (SHIBYTE(v223.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v400, v223.__r_.__value_.__l.__data_, v223.__r_.__value_.__l.__size_);
  else
    v400 = v223;
  v391 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v392, v215.__r_.__value_.__l.__data_, v215.__r_.__value_.__l.__size_);
  else
    v392 = v215;
  v393 = v216;
  v391 = &off_24C335AB8;
  v394 = v217;
  if (SHIBYTE(v218.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v395, v218.__r_.__value_.__l.__data_, v218.__r_.__value_.__l.__size_);
  else
    v395 = v218;
  v386 = (uint64_t (**)())off_24C335D90;
  v139 = SHIBYTE(v210.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v210.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v387, v210.__r_.__value_.__l.__data_, v210.__r_.__value_.__l.__size_);
  else
    v387 = v210;
  v386 = off_24C335B18;
  v389 = v212;
  v388 = v120;
  v390 = v213;
  v381 = (uint64_t (**)())off_24C335D90;
  v138 = SHIBYTE(v205.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v205.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v382, v205.__r_.__value_.__l.__data_, v205.__r_.__value_.__l.__size_);
  else
    v382 = v205;
  v381 = off_24C335B18;
  v384 = v207;
  v383 = v119;
  v385 = v208;
  v376 = (uint64_t (**)())off_24C335D90;
  v137 = SHIBYTE(v200.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v200.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v377, v200.__r_.__value_.__l.__data_, v200.__r_.__value_.__l.__size_);
  else
    v377 = v200;
  v376 = off_24C335B18;
  v379 = v202;
  v378 = v118;
  v380 = v203;
  v371 = (uint64_t (**)())off_24C335D90;
  v136 = SHIBYTE(v195.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v195.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v372, v195.__r_.__value_.__l.__data_, v195.__r_.__value_.__l.__size_);
  else
    v372 = v195;
  v371 = off_24C335B18;
  v374 = v197;
  v373 = v117;
  v375 = v198;
  v367 = (uint64_t (**)())off_24C335D90;
  v135 = SHIBYTE(v191.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v368, v191.__r_.__value_.__l.__data_, v191.__r_.__value_.__l.__size_);
  else
    v368 = v191;
  v369 = v116;
  v367 = off_24C335AF8;
  v370 = v115;
  v363 = (uint64_t (**)())off_24C335D90;
  v134 = SHIBYTE(v187.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v187.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v364, v187.__r_.__value_.__l.__data_, v187.__r_.__value_.__l.__size_);
  else
    v364 = v187;
  v365 = v114;
  v363 = off_24C335AF8;
  v366 = v113;
  v358 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v182.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v359, v182.__r_.__value_.__l.__data_, v182.__r_.__value_.__l.__size_);
  else
    v359 = v182;
  v360 = v183;
  v358 = &off_24C335AB8;
  v361 = v184;
  v133 = v93;
  if (SHIBYTE(v185.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v362, v185.__r_.__value_.__l.__data_, v185.__r_.__value_.__l.__size_);
  else
    v362 = v185;
  v353 = (uint64_t (**)())off_24C335D90;
  v97 = SHIBYTE(v177.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v177.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v354, v177.__r_.__value_.__l.__data_, v177.__r_.__value_.__l.__size_);
  else
    v354 = v177;
  v353 = off_24C335B18;
  v356 = v179;
  v355 = v112;
  v357 = v180;
  v348 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v172.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v349, v172.__r_.__value_.__l.__data_, v172.__r_.__value_.__l.__size_);
  else
    v349 = v172;
  v350 = v173;
  v348 = &off_24C335AB8;
  v351 = v174;
  v132 = v96;
  if (SHIBYTE(v175.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v352, v175.__r_.__value_.__l.__data_, v175.__r_.__value_.__l.__size_);
  else
    v352 = v175;
  v343 = (uint64_t (**)())off_24C335D90;
  v98 = SHIBYTE(v167.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v167.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v344, v167.__r_.__value_.__l.__data_, v167.__r_.__value_.__l.__size_);
  else
    v344 = v167;
  v343 = off_24C335B18;
  v346 = v169;
  v345 = v111;
  v347 = v170;
  v338 = (uint64_t (**)())off_24C335D90;
  v99 = SHIBYTE(v162.__r_.__value_.__r.__words[2]);
  v130 = v92;
  if (SHIBYTE(v162.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v339, v162.__r_.__value_.__l.__data_, v162.__r_.__value_.__l.__size_);
  else
    v339 = v162;
  v338 = off_24C335B18;
  v341 = v164;
  v340 = v110;
  v342 = v165;
  v333 = (uint64_t (**)())off_24C335D90;
  v100 = SHIBYTE(v157.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v157.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v334, v157.__r_.__value_.__l.__data_, v157.__r_.__value_.__l.__size_);
  else
    v334 = v157;
  v333 = off_24C335B18;
  v336 = v159;
  v335 = v109;
  v337 = v160;
  v328 = (uint64_t (**)())off_24C335D90;
  v101 = SHIBYTE(v152.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v152.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v152.__r_.__value_.__l.__data_, v152.__r_.__value_.__l.__size_);
  else
    __p = v152;
  v328 = off_24C335B18;
  v331 = v154;
  v330 = v108;
  v332 = v155;
  v323 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v147.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v324, v147.__r_.__value_.__l.__data_, v147.__r_.__value_.__l.__size_);
  else
    v324 = v147;
  v325 = v148;
  v323 = &off_24C335AB8;
  v326 = v149;
  if (SHIBYTE(v150.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v327, v150.__r_.__value_.__l.__data_, v150.__r_.__value_.__l.__size_);
  else
    v327 = v150;
  mediaplatform::DatabaseColumnTuple<23ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(v131, (uint64_t)&v490, (uint64_t)&v485, (uint64_t)&v480, (uint64_t)&v475, (uint64_t)&v470, (uint64_t)&v465, (uint64_t)&v460, (uint64_t)&v455, (uint64_t)&v450, (uint64_t)&v445, (uint64_t)&v440, (uint64_t)&v435, (uint64_t)&v430, (uint64_t)&v425, (uint64_t)&v420, (uint64_t)&v415, (uint64_t)&v410, (uint64_t)&v405,
    (uint64_t)&v401,
    (uint64_t)&v396,
    (uint64_t)&v391,
    (uint64_t)&v386,
    (uint64_t)&v381,
    (uint64_t)&v376,
    (uint64_t)&v371,
    (uint64_t)&v367,
    (uint64_t)&v363,
    (uint64_t)&v358,
    (uint64_t)&v353,
    (uint64_t)&v348,
    (uint64_t)&v343,
    (uint64_t)&v338,
    (uint64_t)&v333,
    (uint64_t)&v328,
    (uint64_t)&v323);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v323);
  v328 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v333 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v334.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v334.__r_.__value_.__l.__data_);
  v338 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v339.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v339.__r_.__value_.__l.__data_);
  v343 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v344.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v344.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v348);
  v353 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v354.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v354.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v358);
  v363 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v364.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v364.__r_.__value_.__l.__data_);
  v367 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v368.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v368.__r_.__value_.__l.__data_);
  v371 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v372.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v372.__r_.__value_.__l.__data_);
  v376 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v377.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v377.__r_.__value_.__l.__data_);
  v381 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v382.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v382.__r_.__value_.__l.__data_);
  v386 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v387.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v387.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v391);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v396);
  v401 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v402.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v402.__r_.__value_.__l.__data_);
  v405 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v406.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v406.__r_.__value_.__l.__data_);
  v410 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v411.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v411.__r_.__value_.__l.__data_);
  v415 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v416.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v416.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v420);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v425);
  v430 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v431.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v431.__r_.__value_.__l.__data_);
  v435 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v436.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v436.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v440);
  v445 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v446.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v446.__r_.__value_.__l.__data_);
  v450 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v451.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v451.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v455);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v460);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v465);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v470);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v475);
  v480 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v481.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v481.__r_.__value_.__l.__data_);
  v485 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v486.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v486.__r_.__value_.__l.__data_);
  v490 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v491.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v491.__r_.__value_.__l.__data_);
  *(_QWORD *)(v131 + 1888) = off_24C335D90;
  v102 = (std::string *)(v131 + 1896);
  v103 = SHIBYTE(v319.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v319.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v102, v319.__r_.__value_.__l.__data_, v319.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v102->__r_.__value_.__l.__data_ = *(_OWORD *)&v319.__r_.__value_.__l.__data_;
    *(_QWORD *)(v131 + 1912) = *((_QWORD *)&v319.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(v131 + 1920) = v320;
  *(_QWORD *)(v131 + 1888) = off_24C335B18;
  *(_QWORD *)(v131 + 1924) = v321;
  *(_DWORD *)(v131 + 1932) = v322;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v146);
  if ((v101 & 0x80000000) == 0)
  {
    if ((v100 & 0x80000000) == 0)
      goto LABEL_341;
LABEL_375:
    operator delete(v157.__r_.__value_.__l.__data_);
    if ((v99 & 0x80000000) == 0)
      goto LABEL_342;
    goto LABEL_376;
  }
  operator delete(v152.__r_.__value_.__l.__data_);
  if (v100 < 0)
    goto LABEL_375;
LABEL_341:
  if ((v99 & 0x80000000) == 0)
    goto LABEL_342;
LABEL_376:
  operator delete(v162.__r_.__value_.__l.__data_);
LABEL_342:
  if (v98 < 0)
    operator delete(v167.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v171);
  if (v97 < 0)
    operator delete(v177.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v181);
  if (v134 < 0)
    operator delete(v187.__r_.__value_.__l.__data_);
  if (v135 < 0)
    operator delete(v191.__r_.__value_.__l.__data_);
  if (v136 < 0)
    operator delete(v195.__r_.__value_.__l.__data_);
  if (v137 < 0)
    operator delete(v200.__r_.__value_.__l.__data_);
  if (v138 < 0)
    operator delete(v205.__r_.__value_.__l.__data_);
  if (v139 < 0)
    operator delete(v210.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v214);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v219);
  if (v145 < 0)
  {
    operator delete(v225.__r_.__value_.__l.__data_);
    if ((v132 & 0x80000000) == 0)
      goto LABEL_360;
  }
  else if ((v132 & 0x80000000) == 0)
  {
    goto LABEL_360;
  }
  operator delete(v229.__r_.__value_.__l.__data_);
LABEL_360:
  if (v140 < 0)
  {
    operator delete(v234.__r_.__value_.__l.__data_);
    if ((v141 & 0x80000000) == 0)
      goto LABEL_362;
  }
  else if ((v141 & 0x80000000) == 0)
  {
    goto LABEL_362;
  }
  operator delete(v239.__r_.__value_.__l.__data_);
LABEL_362:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v243);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v248);
  if (v143 < 0)
  {
    operator delete(v254.__r_.__value_.__l.__data_);
    if ((v94 & 0x80000000) == 0)
      goto LABEL_364;
  }
  else if ((v94 & 0x80000000) == 0)
  {
    goto LABEL_364;
  }
  operator delete(v259.__r_.__value_.__l.__data_);
LABEL_364:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v263);
  if (v133 < 0)
  {
    operator delete(v269.__r_.__value_.__l.__data_);
    if ((v130 & 0x80000000) == 0)
      goto LABEL_366;
  }
  else if ((v130 & 0x80000000) == 0)
  {
    goto LABEL_366;
  }
  operator delete(v274.__r_.__value_.__l.__data_);
LABEL_366:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v278);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v283);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v288);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v293);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v298);
  if (SHIBYTE(v304.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v304.__r_.__value_.__l.__data_);
  if (SHIBYTE(v309.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v309.__r_.__value_.__l.__data_);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__s.__r_.__value_.__l.__data_);
    if ((v103 & 0x80000000) == 0)
      goto LABEL_372;
  }
  else if ((v103 & 0x80000000) == 0)
  {
    goto LABEL_372;
  }
  operator delete(v319.__r_.__value_.__l.__data_);
LABEL_372:
  *(_QWORD *)(v131 + 1936) = off_24C335D90;
  v104 = (std::string *)(v131 + 1944);
  if (*(char *)(v123 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v104, *(const std::string::value_type **)(v123 + 8), *(_QWORD *)(v123 + 16));
  }
  else
  {
    v105 = *(_OWORD *)(v123 + 8);
    *(_QWORD *)(v131 + 1960) = *(_QWORD *)(v123 + 24);
    *(_OWORD *)&v104->__r_.__value_.__l.__data_ = v105;
  }
  *(_DWORD *)(v131 + 1968) = *(_DWORD *)(v123 + 32);
  *(_QWORD *)(v131 + 1936) = off_24C335B18;
  v106 = *(_QWORD *)(v123 + 36);
  *(_DWORD *)(v131 + 1980) = *(_DWORD *)(v123 + 44);
  *(_QWORD *)(v131 + 1972) = v106;
  return v131;
}

void sub_20A8A4D8C(_Unwind_Exception *a1)
{
  uint64_t v1;

  mediaplatform::DatabaseColumnTuple<22ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(v1);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<21ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 1936) = off_24C335D90;
  if (*(char *)(a1 + 1967) < 0)
    operator delete(*(void **)(a1 + 1944));
  *(_QWORD *)(a1 + 1888) = off_24C335D90;
  if (*(char *)(a1 + 1919) < 0)
    operator delete(*(void **)(a1 + 1896));
  return mediaplatform::DatabaseColumnTuple<23ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<22ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 1888) = off_24C335D90;
  if (*(char *)(a1 + 1919) < 0)
    operator delete(*(void **)(a1 + 1896));
  return mediaplatform::DatabaseColumnTuple<23ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<23ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  uint64_t v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  std::string *v97;
  int v98;
  std::string *v99;
  __int128 v100;
  uint64_t v101;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  int v112;
  int v113;
  int v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  uint64_t v138;
  uint64_t (**v139)();
  std::string v140;
  int v141;
  char v142;
  std::string v143;
  uint64_t (**v144)();
  std::string v145;
  int v146;
  uint64_t v147;
  int v148;
  uint64_t (**v149)();
  std::string v150;
  int v151;
  uint64_t v152;
  int v153;
  uint64_t (**v154)();
  std::string v155;
  int v156;
  uint64_t v157;
  int v158;
  uint64_t (**v159)();
  std::string v160;
  int v161;
  uint64_t v162;
  int v163;
  uint64_t (**v164)();
  std::string v165;
  int v166;
  char v167;
  std::string v168;
  uint64_t (**v169)();
  std::string v170;
  int v171;
  uint64_t v172;
  int v173;
  uint64_t (**v174)();
  std::string v175;
  int v176;
  char v177;
  std::string v178;
  uint64_t (**v179)();
  std::string v180;
  int v181;
  uint64_t v182;
  uint64_t (**v183)();
  std::string v184;
  int v185;
  uint64_t v186;
  uint64_t (**v187)();
  std::string v188;
  int v189;
  uint64_t v190;
  int v191;
  uint64_t (**v192)();
  std::string v193;
  int v194;
  uint64_t v195;
  int v196;
  uint64_t (**v197)();
  std::string v198;
  int v199;
  uint64_t v200;
  int v201;
  uint64_t (**v202)();
  std::string v203;
  int v204;
  uint64_t v205;
  int v206;
  uint64_t (**v207)();
  std::string v208;
  int v209;
  char v210;
  std::string v211;
  uint64_t (**v212)();
  std::string v213;
  int v214;
  char v215;
  std::string v216;
  uint64_t (**v217)();
  std::string v218;
  int v219;
  uint64_t v220;
  uint64_t (**v221)();
  std::string v222;
  int v223;
  uint64_t v224;
  int v225;
  uint64_t (**v226)();
  std::string v227;
  int v228;
  uint64_t v229;
  int v230;
  uint64_t (**v231)();
  std::string v232;
  int v233;
  uint64_t v234;
  int v235;
  uint64_t (**v236)();
  std::string v237;
  int v238;
  char v239;
  std::string v240;
  uint64_t (**v241)();
  std::string v242;
  int v243;
  char v244;
  std::string v245;
  uint64_t (**v246)();
  std::string v247;
  int v248;
  uint64_t v249;
  int v250;
  uint64_t (**v251)();
  std::string v252;
  int v253;
  uint64_t v254;
  int v255;
  uint64_t (**v256)();
  std::string v257;
  int v258;
  char v259;
  std::string v260;
  uint64_t (**v261)();
  std::string v262;
  int v263;
  uint64_t v264;
  int v265;
  uint64_t (**v266)();
  std::string v267;
  int v268;
  uint64_t v269;
  int v270;
  uint64_t (**v271)();
  std::string v272;
  int v273;
  char v274;
  std::string v275;
  uint64_t (**v276)();
  std::string v277;
  int v278;
  char v279;
  std::string v280;
  uint64_t (**v281)();
  std::string v282;
  int v283;
  char v284;
  std::string v285;
  uint64_t (**v286)();
  std::string v287;
  int v288;
  char v289;
  std::string v290;
  uint64_t (**v291)();
  std::string v292;
  int v293;
  char v294;
  std::string v295;
  uint64_t (**v296)();
  std::string __s;
  int v298;
  uint64_t v299;
  int v300;
  uint64_t (**v301)();
  std::string v302;
  int v303;
  uint64_t v304;
  int v305;
  uint64_t (**v306)();
  std::string v307;
  int v308;
  char v309;
  std::string v310;
  uint64_t (**v311)();
  std::string __p;
  int v313;
  uint64_t v314;
  int v315;
  uint64_t (**v316)();
  std::string v317;
  int v318;
  uint64_t v319;
  int v320;
  uint64_t (**v321)();
  std::string v322;
  int v323;
  uint64_t v324;
  int v325;
  uint64_t (**v326)();
  std::string v327;
  int v328;
  uint64_t v329;
  int v330;
  uint64_t (**v331)();
  std::string v332;
  int v333;
  char v334;
  std::string v335;
  uint64_t (**v336)();
  std::string v337;
  int v338;
  uint64_t v339;
  int v340;
  uint64_t (**v341)();
  std::string v342;
  int v343;
  char v344;
  std::string v345;
  uint64_t (**v346)();
  std::string v347;
  int v348;
  uint64_t v349;
  uint64_t (**v350)();
  std::string v351;
  int v352;
  uint64_t v353;
  uint64_t (**v354)();
  std::string v355;
  int v356;
  uint64_t v357;
  int v358;
  uint64_t (**v359)();
  std::string v360;
  int v361;
  uint64_t v362;
  int v363;
  uint64_t (**v364)();
  std::string v365;
  int v366;
  uint64_t v367;
  int v368;
  uint64_t (**v369)();
  std::string v370;
  int v371;
  uint64_t v372;
  int v373;
  uint64_t (**v374)();
  std::string v375;
  int v376;
  char v377;
  std::string v378;
  uint64_t (**v379)();
  std::string v380;
  int v381;
  char v382;
  std::string v383;
  uint64_t (**v384)();
  std::string v385;
  int v386;
  uint64_t v387;
  uint64_t (**v388)();
  std::string v389;
  int v390;
  uint64_t v391;
  int v392;
  uint64_t (**v393)();
  std::string v394;
  int v395;
  uint64_t v396;
  int v397;
  uint64_t (**v398)();
  std::string v399;
  int v400;
  uint64_t v401;
  int v402;
  uint64_t (**v403)();
  std::string v404;
  int v405;
  char v406;
  std::string v407;
  uint64_t (**v408)();
  std::string v409;
  int v410;
  char v411;
  std::string v412;
  uint64_t (**v413)();
  std::string v414;
  int v415;
  uint64_t v416;
  int v417;
  uint64_t (**v418)();
  std::string v419;
  int v420;
  uint64_t v421;
  int v422;
  uint64_t (**v423)();
  std::string v424;
  int v425;
  char v426;
  std::string v427;
  uint64_t (**v428)();
  std::string v429;
  int v430;
  uint64_t v431;
  int v432;
  uint64_t (**v433)();
  std::string v434;
  int v435;
  uint64_t v436;
  int v437;
  uint64_t (**v438)();
  std::string v439;
  int v440;
  char v441;
  std::string v442;
  uint64_t (**v443)();
  std::string v444;
  int v445;
  char v446;
  std::string v447;
  uint64_t (**v448)();
  std::string v449;
  int v450;
  char v451;
  std::string v452;
  uint64_t (**v453)();
  std::string v454;
  int v455;
  char v456;
  std::string v457;
  uint64_t (**v458)();
  std::string v459;
  int v460;
  char v461;
  std::string v462;
  uint64_t (**v463)();
  std::string v464;
  int v465;
  uint64_t v466;
  int v467;

  v36 = MEMORY[0x24BDAC7A8](a1);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v47 = v46;
  v48 = v37;
  v50 = v49;
  v138 = v36;
  if (*(char *)(v37 + 31) < 0)
    std::string::__init_copy_ctor_external(&v302, *(const std::string::value_type **)(v37 + 8), *(_QWORD *)(v37 + 16));
  else
    v302 = *(std::string *)(v37 + 8);
  v51 = *(_DWORD *)(v48 + 32);
  v301 = off_24C335B18;
  v304 = *(_QWORD *)(v48 + 36);
  v52 = *(_DWORD *)(v48 + 44);
  v303 = v51;
  v305 = v52;
  if (*(char *)(v47 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(v47 + 8), *(_QWORD *)(v47 + 16));
  else
    __s = *(std::string *)(v47 + 8);
  v53 = *(_DWORD *)(v47 + 32);
  v296 = off_24C335B18;
  v299 = *(_QWORD *)(v47 + 36);
  v54 = *(_DWORD *)(v47 + 44);
  v298 = v53;
  v300 = v54;
  v291 = (uint64_t (**)())off_24C335D90;
  v117 = v50;
  if (*(char *)(v45 + 31) < 0)
    std::string::__init_copy_ctor_external(&v292, *(const std::string::value_type **)(v45 + 8), *(_QWORD *)(v45 + 16));
  else
    v292 = *(std::string *)(v45 + 8);
  v293 = *(_DWORD *)(v45 + 32);
  v291 = &off_24C335AB8;
  v294 = *(_BYTE *)(v45 + 36);
  if (*(char *)(v45 + 63) < 0)
    std::string::__init_copy_ctor_external(&v295, *(const std::string::value_type **)(v45 + 40), *(_QWORD *)(v45 + 48));
  else
    v295 = *(std::string *)(v45 + 40);
  v286 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v43 + 31) < 0)
    std::string::__init_copy_ctor_external(&v287, *(const std::string::value_type **)(v43 + 8), *(_QWORD *)(v43 + 16));
  else
    v287 = *(std::string *)(v43 + 8);
  v288 = *(_DWORD *)(v43 + 32);
  v286 = &off_24C335AB8;
  v289 = *(_BYTE *)(v43 + 36);
  if (*(char *)(v43 + 63) < 0)
    std::string::__init_copy_ctor_external(&v290, *(const std::string::value_type **)(v43 + 40), *(_QWORD *)(v43 + 48));
  else
    v290 = *(std::string *)(v43 + 40);
  v281 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v41 + 31) < 0)
    std::string::__init_copy_ctor_external(&v282, *(const std::string::value_type **)(v41 + 8), *(_QWORD *)(v41 + 16));
  else
    v282 = *(std::string *)(v41 + 8);
  v283 = *(_DWORD *)(v41 + 32);
  v281 = &off_24C335AB8;
  v284 = *(_BYTE *)(v41 + 36);
  if (*(char *)(v41 + 63) < 0)
    std::string::__init_copy_ctor_external(&v285, *(const std::string::value_type **)(v41 + 40), *(_QWORD *)(v41 + 48));
  else
    v285 = *(std::string *)(v41 + 40);
  v276 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v39 + 31) < 0)
    std::string::__init_copy_ctor_external(&v277, *(const std::string::value_type **)(v39 + 8), *(_QWORD *)(v39 + 16));
  else
    v277 = *(std::string *)(v39 + 8);
  v278 = *(_DWORD *)(v39 + 32);
  v276 = &off_24C335AB8;
  v279 = *(_BYTE *)(v39 + 36);
  if (*(char *)(v39 + 63) < 0)
    std::string::__init_copy_ctor_external(&v280, *(const std::string::value_type **)(v39 + 40), *(_QWORD *)(v39 + 48));
  else
    v280 = *(std::string *)(v39 + 40);
  v271 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v272, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v272 = *(std::string *)(a9 + 8);
  v273 = *(_DWORD *)(a9 + 32);
  v271 = &off_24C335AB8;
  v274 = *(_BYTE *)(a9 + 36);
  if (*(char *)(a9 + 63) < 0)
    std::string::__init_copy_ctor_external(&v275, *(const std::string::value_type **)(a9 + 40), *(_QWORD *)(a9 + 48));
  else
    v275 = *(std::string *)(a9 + 40);
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v267, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v267 = *(std::string *)(a10 + 8);
  v55 = *(_DWORD *)(a10 + 32);
  v266 = off_24C335B18;
  v269 = *(_QWORD *)(a10 + 36);
  v56 = *(_DWORD *)(a10 + 44);
  v268 = v55;
  v270 = v56;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v262, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v262 = *(std::string *)(a11 + 8);
  v57 = *(_DWORD *)(a11 + 32);
  v261 = off_24C335B18;
  v264 = *(_QWORD *)(a11 + 36);
  v58 = *(_DWORD *)(a11 + 44);
  v124 = v57;
  v263 = v57;
  v265 = v58;
  v256 = (uint64_t (**)())off_24C335D90;
  v125 = v55;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v257, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v257 = *(std::string *)(a12 + 8);
  v258 = *(_DWORD *)(a12 + 32);
  v256 = &off_24C335AB8;
  v259 = *(_BYTE *)(a12 + 36);
  if (*(char *)(a12 + 63) < 0)
    std::string::__init_copy_ctor_external(&v260, *(const std::string::value_type **)(a12 + 40), *(_QWORD *)(a12 + 48));
  else
    v260 = *(std::string *)(a12 + 40);
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v252, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v252 = *(std::string *)(a13 + 8);
  v59 = *(_DWORD *)(a13 + 32);
  v251 = off_24C335B18;
  v254 = *(_QWORD *)(a13 + 36);
  v60 = *(_DWORD *)(a13 + 44);
  v123 = v59;
  v253 = v59;
  v255 = v60;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v247, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v247 = *(std::string *)(a14 + 8);
  v61 = *(_DWORD *)(a14 + 32);
  v246 = off_24C335B18;
  v249 = *(_QWORD *)(a14 + 36);
  v62 = *(_DWORD *)(a14 + 44);
  v122 = v61;
  v248 = v61;
  v250 = v62;
  v241 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v242, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v242 = *(std::string *)(a15 + 8);
  v243 = *(_DWORD *)(a15 + 32);
  v241 = &off_24C335AB8;
  v244 = *(_BYTE *)(a15 + 36);
  if (*(char *)(a15 + 63) < 0)
    std::string::__init_copy_ctor_external(&v245, *(const std::string::value_type **)(a15 + 40), *(_QWORD *)(a15 + 48));
  else
    v245 = *(std::string *)(a15 + 40);
  v236 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v237, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v237 = *(std::string *)(a16 + 8);
  v238 = *(_DWORD *)(a16 + 32);
  v236 = &off_24C335AB8;
  v239 = *(_BYTE *)(a16 + 36);
  if (*(char *)(a16 + 63) < 0)
    std::string::__init_copy_ctor_external(&v240, *(const std::string::value_type **)(a16 + 40), *(_QWORD *)(a16 + 48));
  else
    v240 = *(std::string *)(a16 + 40);
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v232, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v232 = *(std::string *)(a17 + 8);
  v63 = *(_DWORD *)(a17 + 32);
  v231 = off_24C335B18;
  v234 = *(_QWORD *)(a17 + 36);
  v64 = *(_DWORD *)(a17 + 44);
  v121 = v63;
  v233 = v63;
  v235 = v64;
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v227, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v227 = *(std::string *)(a18 + 8);
  v65 = *(_DWORD *)(a18 + 32);
  v226 = off_24C335B18;
  v229 = *(_QWORD *)(a18 + 36);
  v66 = *(_DWORD *)(a18 + 44);
  v120 = v65;
  v228 = v65;
  v230 = v66;
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v222, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v222 = *(std::string *)(a19 + 8);
  v67 = *(_DWORD *)(a19 + 32);
  v221 = off_24C335B18;
  v224 = *(_QWORD *)(a19 + 36);
  v68 = *(_DWORD *)(a19 + 44);
  v119 = v67;
  v223 = v67;
  v225 = v68;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v218, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v218 = *(std::string *)(a20 + 8);
  v118 = *(_DWORD *)(a20 + 32);
  v219 = v118;
  v217 = off_24C335AF8;
  v69 = *(_QWORD *)(a20 + 36);
  v220 = v69;
  v212 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v213, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v213 = *(std::string *)(a21 + 8);
  v214 = *(_DWORD *)(a21 + 32);
  v212 = &off_24C335AB8;
  v215 = *(_BYTE *)(a21 + 36);
  if (*(char *)(a21 + 63) < 0)
    std::string::__init_copy_ctor_external(&v216, *(const std::string::value_type **)(a21 + 40), *(_QWORD *)(a21 + 48));
  else
    v216 = *(std::string *)(a21 + 40);
  v207 = (uint64_t (**)())off_24C335D90;
  v116 = v69;
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v208, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v208 = *(std::string *)(a22 + 8);
  v209 = *(_DWORD *)(a22 + 32);
  v207 = &off_24C335AB8;
  v210 = *(_BYTE *)(a22 + 36);
  if (*(char *)(a22 + 63) < 0)
    std::string::__init_copy_ctor_external(&v211, *(const std::string::value_type **)(a22 + 40), *(_QWORD *)(a22 + 48));
  else
    v211 = *(std::string *)(a22 + 40);
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v203, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v203 = *(std::string *)(a23 + 8);
  v70 = *(_DWORD *)(a23 + 32);
  v202 = off_24C335B18;
  v205 = *(_QWORD *)(a23 + 36);
  v71 = *(_DWORD *)(a23 + 44);
  v204 = v70;
  v206 = v71;
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v198, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v198 = *(std::string *)(a24 + 8);
  v72 = *(_DWORD *)(a24 + 32);
  v197 = off_24C335B18;
  v200 = *(_QWORD *)(a24 + 36);
  v73 = *(_DWORD *)(a24 + 44);
  v115 = v72;
  v199 = v72;
  v201 = v73;
  if (*(char *)(a25 + 31) < 0)
    std::string::__init_copy_ctor_external(&v193, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  else
    v193 = *(std::string *)(a25 + 8);
  v74 = *(_DWORD *)(a25 + 32);
  v192 = off_24C335B18;
  v195 = *(_QWORD *)(a25 + 36);
  v75 = *(_DWORD *)(a25 + 44);
  v114 = v74;
  v194 = v74;
  v196 = v75;
  if (*(char *)(a26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v188, *(const std::string::value_type **)(a26 + 8), *(_QWORD *)(a26 + 16));
  else
    v188 = *(std::string *)(a26 + 8);
  v76 = *(_DWORD *)(a26 + 32);
  v187 = off_24C335B18;
  v190 = *(_QWORD *)(a26 + 36);
  v77 = *(_DWORD *)(a26 + 44);
  v113 = v76;
  v189 = v76;
  v191 = v77;
  if (*(char *)(a27 + 31) < 0)
    std::string::__init_copy_ctor_external(&v184, *(const std::string::value_type **)(a27 + 8), *(_QWORD *)(a27 + 16));
  else
    v184 = *(std::string *)(a27 + 8);
  v112 = *(_DWORD *)(a27 + 32);
  v185 = v112;
  v183 = off_24C335AF8;
  v111 = *(_QWORD *)(a27 + 36);
  v186 = v111;
  if (*(char *)(a28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v180, *(const std::string::value_type **)(a28 + 8), *(_QWORD *)(a28 + 16));
  else
    v180 = *(std::string *)(a28 + 8);
  v110 = *(_DWORD *)(a28 + 32);
  v181 = v110;
  v179 = off_24C335AF8;
  v109 = *(_QWORD *)(a28 + 36);
  v182 = v109;
  v174 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a29 + 31) < 0)
    std::string::__init_copy_ctor_external(&v175, *(const std::string::value_type **)(a29 + 8), *(_QWORD *)(a29 + 16));
  else
    v175 = *(std::string *)(a29 + 8);
  v176 = *(_DWORD *)(a29 + 32);
  v174 = &off_24C335AB8;
  v177 = *(_BYTE *)(a29 + 36);
  if (*(char *)(a29 + 63) < 0)
    std::string::__init_copy_ctor_external(&v178, *(const std::string::value_type **)(a29 + 40), *(_QWORD *)(a29 + 48));
  else
    v178 = *(std::string *)(a29 + 40);
  if (*(char *)(a30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v170, *(const std::string::value_type **)(a30 + 8), *(_QWORD *)(a30 + 16));
  else
    v170 = *(std::string *)(a30 + 8);
  v78 = *(_DWORD *)(a30 + 32);
  v169 = off_24C335B18;
  v172 = *(_QWORD *)(a30 + 36);
  v79 = *(_DWORD *)(a30 + 44);
  v108 = v78;
  v171 = v78;
  v173 = v79;
  v164 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a31 + 31) < 0)
    std::string::__init_copy_ctor_external(&v165, *(const std::string::value_type **)(a31 + 8), *(_QWORD *)(a31 + 16));
  else
    v165 = *(std::string *)(a31 + 8);
  v166 = *(_DWORD *)(a31 + 32);
  v164 = &off_24C335AB8;
  v167 = *(_BYTE *)(a31 + 36);
  if (*(char *)(a31 + 63) < 0)
    std::string::__init_copy_ctor_external(&v168, *(const std::string::value_type **)(a31 + 40), *(_QWORD *)(a31 + 48));
  else
    v168 = *(std::string *)(a31 + 40);
  if (*(char *)(a32 + 31) < 0)
    std::string::__init_copy_ctor_external(&v160, *(const std::string::value_type **)(a32 + 8), *(_QWORD *)(a32 + 16));
  else
    v160 = *(std::string *)(a32 + 8);
  v80 = *(_DWORD *)(a32 + 32);
  v159 = off_24C335B18;
  v162 = *(_QWORD *)(a32 + 36);
  v81 = *(_DWORD *)(a32 + 44);
  v107 = v80;
  v161 = v80;
  v163 = v81;
  if (*(char *)(a33 + 31) < 0)
    std::string::__init_copy_ctor_external(&v155, *(const std::string::value_type **)(a33 + 8), *(_QWORD *)(a33 + 16));
  else
    v155 = *(std::string *)(a33 + 8);
  v82 = *(_DWORD *)(a33 + 32);
  v154 = off_24C335B18;
  v157 = *(_QWORD *)(a33 + 36);
  v83 = *(_DWORD *)(a33 + 44);
  v106 = v82;
  v156 = v82;
  v158 = v83;
  if (*(char *)(a34 + 31) < 0)
    std::string::__init_copy_ctor_external(&v150, *(const std::string::value_type **)(a34 + 8), *(_QWORD *)(a34 + 16));
  else
    v150 = *(std::string *)(a34 + 8);
  v84 = *(_DWORD *)(a34 + 32);
  v149 = off_24C335B18;
  v152 = *(_QWORD *)(a34 + 36);
  v85 = *(_DWORD *)(a34 + 44);
  v105 = v84;
  v151 = v84;
  v153 = v85;
  if (*(char *)(a35 + 31) < 0)
    std::string::__init_copy_ctor_external(&v145, *(const std::string::value_type **)(a35 + 8), *(_QWORD *)(a35 + 16));
  else
    v145 = *(std::string *)(a35 + 8);
  v104 = *(_DWORD *)(a35 + 32);
  v146 = v104;
  v144 = off_24C335B18;
  v147 = *(_QWORD *)(a35 + 36);
  v148 = *(_DWORD *)(a35 + 44);
  v139 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a36 + 31) < 0)
    std::string::__init_copy_ctor_external(&v140, *(const std::string::value_type **)(a36 + 8), *(_QWORD *)(a36 + 16));
  else
    v140 = *(std::string *)(a36 + 8);
  v141 = *(_DWORD *)(a36 + 32);
  v139 = &off_24C335AB8;
  v142 = *(_BYTE *)(a36 + 36);
  if (*(char *)(a36 + 63) < 0)
    std::string::__init_copy_ctor_external(&v143, *(const std::string::value_type **)(a36 + 40), *(_QWORD *)(a36 + 48));
  else
    v143 = *(std::string *)(a36 + 40);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v464, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v464 = __s;
  v465 = v53;
  v463 = off_24C335B18;
  v466 = v299;
  v467 = v300;
  v458 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v292.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v459, v292.__r_.__value_.__l.__data_, v292.__r_.__value_.__l.__size_);
  else
    v459 = v292;
  v460 = v293;
  v458 = &off_24C335AB8;
  v461 = v294;
  if (SHIBYTE(v295.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v462, v295.__r_.__value_.__l.__data_, v295.__r_.__value_.__l.__size_);
  else
    v462 = v295;
  v453 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v287.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v454, v287.__r_.__value_.__l.__data_, v287.__r_.__value_.__l.__size_);
  else
    v454 = v287;
  v455 = v288;
  v453 = &off_24C335AB8;
  v456 = v289;
  if (SHIBYTE(v290.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v457, v290.__r_.__value_.__l.__data_, v290.__r_.__value_.__l.__size_);
  else
    v457 = v290;
  v448 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v282.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v449, v282.__r_.__value_.__l.__data_, v282.__r_.__value_.__l.__size_);
  else
    v449 = v282;
  v450 = v283;
  v448 = &off_24C335AB8;
  v451 = v284;
  if (SHIBYTE(v285.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v452, v285.__r_.__value_.__l.__data_, v285.__r_.__value_.__l.__size_);
  else
    v452 = v285;
  v443 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v277.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v444, v277.__r_.__value_.__l.__data_, v277.__r_.__value_.__l.__size_);
  else
    v444 = v277;
  v445 = v278;
  v443 = &off_24C335AB8;
  v446 = v279;
  if (SHIBYTE(v280.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v447, v280.__r_.__value_.__l.__data_, v280.__r_.__value_.__l.__size_);
  else
    v447 = v280;
  v438 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v272.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v439, v272.__r_.__value_.__l.__data_, v272.__r_.__value_.__l.__size_);
  else
    v439 = v272;
  v440 = v273;
  v438 = &off_24C335AB8;
  v441 = v274;
  if (SHIBYTE(v275.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v442, v275.__r_.__value_.__l.__data_, v275.__r_.__value_.__l.__size_);
  else
    v442 = v275;
  v433 = (uint64_t (**)())off_24C335D90;
  v86 = SHIBYTE(v267.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v267.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v434, v267.__r_.__value_.__l.__data_, v267.__r_.__value_.__l.__size_);
  else
    v434 = v267;
  v433 = off_24C335B18;
  v436 = v269;
  v435 = v125;
  v437 = v270;
  v428 = (uint64_t (**)())off_24C335D90;
  v87 = SHIBYTE(v262.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v262.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v429, v262.__r_.__value_.__l.__data_, v262.__r_.__value_.__l.__size_);
  else
    v429 = v262;
  v428 = off_24C335B18;
  v431 = v264;
  v430 = v124;
  v432 = v265;
  v423 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v257.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v424, v257.__r_.__value_.__l.__data_, v257.__r_.__value_.__l.__size_);
  else
    v424 = v257;
  v425 = v258;
  v423 = &off_24C335AB8;
  v426 = v259;
  if (SHIBYTE(v260.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v427, v260.__r_.__value_.__l.__data_, v260.__r_.__value_.__l.__size_);
  else
    v427 = v260;
  v418 = (uint64_t (**)())off_24C335D90;
  v88 = SHIBYTE(v252.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v252.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v419, v252.__r_.__value_.__l.__data_, v252.__r_.__value_.__l.__size_);
  else
    v419 = v252;
  v418 = off_24C335B18;
  v421 = v254;
  v420 = v123;
  v422 = v255;
  v413 = (uint64_t (**)())off_24C335D90;
  v137 = SHIBYTE(v247.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v247.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v414, v247.__r_.__value_.__l.__data_, v247.__r_.__value_.__l.__size_);
  else
    v414 = v247;
  v413 = off_24C335B18;
  v416 = v249;
  v415 = v122;
  v417 = v250;
  v408 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v242.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v409, v242.__r_.__value_.__l.__data_, v242.__r_.__value_.__l.__size_);
  else
    v409 = v242;
  v410 = v243;
  v408 = &off_24C335AB8;
  v411 = v244;
  if (SHIBYTE(v245.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v412, v245.__r_.__value_.__l.__data_, v245.__r_.__value_.__l.__size_);
  else
    v412 = v245;
  v403 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v237.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v404, v237.__r_.__value_.__l.__data_, v237.__r_.__value_.__l.__size_);
  else
    v404 = v237;
  v405 = v238;
  v403 = &off_24C335AB8;
  v406 = v239;
  if (SHIBYTE(v240.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v407, v240.__r_.__value_.__l.__data_, v240.__r_.__value_.__l.__size_);
  else
    v407 = v240;
  v398 = (uint64_t (**)())off_24C335D90;
  v89 = SHIBYTE(v232.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v232.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v399, v232.__r_.__value_.__l.__data_, v232.__r_.__value_.__l.__size_);
  else
    v399 = v232;
  v398 = off_24C335B18;
  v401 = v234;
  v400 = v121;
  v402 = v235;
  v393 = (uint64_t (**)())off_24C335D90;
  v136 = SHIBYTE(v227.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v227.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v394, v227.__r_.__value_.__l.__data_, v227.__r_.__value_.__l.__size_);
  else
    v394 = v227;
  v393 = off_24C335B18;
  v396 = v229;
  v395 = v120;
  v397 = v230;
  v388 = (uint64_t (**)())off_24C335D90;
  v135 = SHIBYTE(v222.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v222.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v389, v222.__r_.__value_.__l.__data_, v222.__r_.__value_.__l.__size_);
  else
    v389 = v222;
  v388 = off_24C335B18;
  v391 = v224;
  v390 = v119;
  v392 = v225;
  v384 = (uint64_t (**)())off_24C335D90;
  v134 = SHIBYTE(v218.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v218.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v385, v218.__r_.__value_.__l.__data_, v218.__r_.__value_.__l.__size_);
  else
    v385 = v218;
  v386 = v118;
  v384 = off_24C335AF8;
  v387 = v116;
  v379 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v213.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v380, v213.__r_.__value_.__l.__data_, v213.__r_.__value_.__l.__size_);
  else
    v380 = v213;
  v381 = v214;
  v379 = &off_24C335AB8;
  v382 = v215;
  if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v383, v216.__r_.__value_.__l.__data_, v216.__r_.__value_.__l.__size_);
  else
    v383 = v216;
  v374 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v208.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v375, v208.__r_.__value_.__l.__data_, v208.__r_.__value_.__l.__size_);
  else
    v375 = v208;
  v376 = v209;
  v374 = &off_24C335AB8;
  v377 = v210;
  if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v378, v211.__r_.__value_.__l.__data_, v211.__r_.__value_.__l.__size_);
  else
    v378 = v211;
  v369 = (uint64_t (**)())off_24C335D90;
  v133 = SHIBYTE(v203.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v203.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v370, v203.__r_.__value_.__l.__data_, v203.__r_.__value_.__l.__size_);
  else
    v370 = v203;
  v369 = off_24C335B18;
  v372 = v205;
  v371 = v70;
  v373 = v206;
  v364 = (uint64_t (**)())off_24C335D90;
  v90 = SHIBYTE(v198.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v198.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v365, v198.__r_.__value_.__l.__data_, v198.__r_.__value_.__l.__size_);
  else
    v365 = v198;
  v364 = off_24C335B18;
  v367 = v200;
  v366 = v115;
  v368 = v201;
  v359 = (uint64_t (**)())off_24C335D90;
  v132 = SHIBYTE(v193.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v193.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v360, v193.__r_.__value_.__l.__data_, v193.__r_.__value_.__l.__size_);
  else
    v360 = v193;
  v359 = off_24C335B18;
  v362 = v195;
  v361 = v114;
  v363 = v196;
  v354 = (uint64_t (**)())off_24C335D90;
  v131 = SHIBYTE(v188.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v188.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v355, v188.__r_.__value_.__l.__data_, v188.__r_.__value_.__l.__size_);
  else
    v355 = v188;
  v354 = off_24C335B18;
  v357 = v190;
  v356 = v113;
  v358 = v191;
  v350 = (uint64_t (**)())off_24C335D90;
  v129 = SHIBYTE(v184.__r_.__value_.__r.__words[2]);
  v130 = v88;
  if (SHIBYTE(v184.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v351, v184.__r_.__value_.__l.__data_, v184.__r_.__value_.__l.__size_);
  else
    v351 = v184;
  v352 = v112;
  v350 = off_24C335AF8;
  v353 = v111;
  v346 = (uint64_t (**)())off_24C335D90;
  v91 = SHIBYTE(v180.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v180.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v347, v180.__r_.__value_.__l.__data_, v180.__r_.__value_.__l.__size_);
  else
    v347 = v180;
  v128 = v89;
  v348 = v110;
  v346 = off_24C335AF8;
  v349 = v109;
  v341 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v175.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v342, v175.__r_.__value_.__l.__data_, v175.__r_.__value_.__l.__size_);
  else
    v342 = v175;
  v343 = v176;
  v341 = &off_24C335AB8;
  v344 = v177;
  v127 = v87;
  if (SHIBYTE(v178.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v345, v178.__r_.__value_.__l.__data_, v178.__r_.__value_.__l.__size_);
  else
    v345 = v178;
  v336 = (uint64_t (**)())off_24C335D90;
  v92 = SHIBYTE(v170.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v170.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v337, v170.__r_.__value_.__l.__data_, v170.__r_.__value_.__l.__size_);
  else
    v337 = v170;
  v336 = off_24C335B18;
  v339 = v172;
  v338 = v108;
  v340 = v173;
  v331 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v165.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v332, v165.__r_.__value_.__l.__data_, v165.__r_.__value_.__l.__size_);
  else
    v332 = v165;
  v333 = v166;
  v331 = &off_24C335AB8;
  v334 = v167;
  v126 = v90;
  if (SHIBYTE(v168.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v335, v168.__r_.__value_.__l.__data_, v168.__r_.__value_.__l.__size_);
  else
    v335 = v168;
  v326 = (uint64_t (**)())off_24C335D90;
  v93 = SHIBYTE(v160.__r_.__value_.__r.__words[2]);
  v103 = v86;
  if (SHIBYTE(v160.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v327, v160.__r_.__value_.__l.__data_, v160.__r_.__value_.__l.__size_);
  else
    v327 = v160;
  v326 = off_24C335B18;
  v329 = v162;
  v328 = v107;
  v330 = v163;
  v321 = (uint64_t (**)())off_24C335D90;
  v94 = SHIBYTE(v155.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v155.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v322, v155.__r_.__value_.__l.__data_, v155.__r_.__value_.__l.__size_);
  else
    v322 = v155;
  v321 = off_24C335B18;
  v324 = v157;
  v323 = v106;
  v325 = v158;
  v316 = (uint64_t (**)())off_24C335D90;
  v95 = SHIBYTE(v150.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v150.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v317, v150.__r_.__value_.__l.__data_, v150.__r_.__value_.__l.__size_);
  else
    v317 = v150;
  v316 = off_24C335B18;
  v319 = v152;
  v318 = v105;
  v320 = v153;
  v311 = (uint64_t (**)())off_24C335D90;
  v96 = SHIBYTE(v145.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v145.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v145.__r_.__value_.__l.__data_, v145.__r_.__value_.__l.__size_);
  else
    __p = v145;
  v311 = off_24C335B18;
  v314 = v147;
  v313 = v104;
  v315 = v148;
  v306 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v307, v140.__r_.__value_.__l.__data_, v140.__r_.__value_.__l.__size_);
  else
    v307 = v140;
  v308 = v141;
  v306 = &off_24C335AB8;
  v309 = v142;
  if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v310, v143.__r_.__value_.__l.__data_, v143.__r_.__value_.__l.__size_);
  else
    v310 = v143;
  mediaplatform::DatabaseColumnTuple<25ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(v138, (uint64_t)&v463, (uint64_t)&v458, (uint64_t)&v453, (uint64_t)&v448, (uint64_t)&v443, (uint64_t)&v438, (uint64_t)&v433, (uint64_t)&v428, (uint64_t)&v423, (uint64_t)&v418, (uint64_t)&v413, (uint64_t)&v408, (uint64_t)&v403, (uint64_t)&v398, (uint64_t)&v393, (uint64_t)&v388, (uint64_t)&v384, (uint64_t)&v379,
    (uint64_t)&v374,
    (uint64_t)&v369,
    (uint64_t)&v364,
    (uint64_t)&v359,
    (uint64_t)&v354,
    (uint64_t)&v350,
    (uint64_t)&v346,
    (uint64_t)&v341,
    (uint64_t)&v336,
    (uint64_t)&v331,
    (uint64_t)&v326,
    (uint64_t)&v321,
    (uint64_t)&v316,
    (uint64_t)&v311,
    (uint64_t)&v306);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v306);
  v311 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v316 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v317.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v317.__r_.__value_.__l.__data_);
  v321 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v322.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v322.__r_.__value_.__l.__data_);
  v326 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v327.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v327.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v331);
  v336 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v337.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v337.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v341);
  v346 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v347.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v347.__r_.__value_.__l.__data_);
  v350 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v351.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v351.__r_.__value_.__l.__data_);
  v354 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v355.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v355.__r_.__value_.__l.__data_);
  v359 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v360.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v360.__r_.__value_.__l.__data_);
  v364 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v365.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v365.__r_.__value_.__l.__data_);
  v369 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v370.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v370.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v374);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v379);
  v384 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v385.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v385.__r_.__value_.__l.__data_);
  v388 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v389.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v389.__r_.__value_.__l.__data_);
  v393 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v394.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v394.__r_.__value_.__l.__data_);
  v398 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v399.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v399.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v403);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v408);
  v413 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v414.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v414.__r_.__value_.__l.__data_);
  v418 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v419.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v419.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v423);
  v428 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v429.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v429.__r_.__value_.__l.__data_);
  v433 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v434.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v434.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v438);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v443);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v448);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v453);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v458);
  if (SHIBYTE(v464.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v464.__r_.__value_.__l.__data_);
  *(_QWORD *)(v138 + 1792) = off_24C335D90;
  v97 = (std::string *)(v138 + 1800);
  v98 = SHIBYTE(v302.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v302.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v97, v302.__r_.__value_.__l.__data_, v302.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v97->__r_.__value_.__l.__data_ = *(_OWORD *)&v302.__r_.__value_.__l.__data_;
    *(_QWORD *)(v138 + 1816) = *((_QWORD *)&v302.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(v138 + 1824) = v303;
  *(_QWORD *)(v138 + 1792) = off_24C335B18;
  *(_QWORD *)(v138 + 1828) = v304;
  *(_DWORD *)(v138 + 1836) = v305;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v139);
  if ((v96 & 0x80000000) == 0)
  {
    if ((v95 & 0x80000000) == 0)
      goto LABEL_325;
LABEL_355:
    operator delete(v150.__r_.__value_.__l.__data_);
    if ((v94 & 0x80000000) == 0)
      goto LABEL_326;
    goto LABEL_356;
  }
  operator delete(v145.__r_.__value_.__l.__data_);
  if (v95 < 0)
    goto LABEL_355;
LABEL_325:
  if ((v94 & 0x80000000) == 0)
    goto LABEL_326;
LABEL_356:
  operator delete(v155.__r_.__value_.__l.__data_);
LABEL_326:
  if (v93 < 0)
    operator delete(v160.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v164);
  if (v92 < 0)
    operator delete(v170.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v174);
  if (v91 < 0)
    operator delete(v180.__r_.__value_.__l.__data_);
  if (v129 < 0)
    operator delete(v184.__r_.__value_.__l.__data_);
  if (v131 < 0)
    operator delete(v188.__r_.__value_.__l.__data_);
  if (v132 < 0)
  {
    operator delete(v193.__r_.__value_.__l.__data_);
    if ((v126 & 0x80000000) == 0)
      goto LABEL_338;
  }
  else if ((v126 & 0x80000000) == 0)
  {
    goto LABEL_338;
  }
  operator delete(v198.__r_.__value_.__l.__data_);
LABEL_338:
  if (v133 < 0)
    operator delete(v203.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v207);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v212);
  if (v134 < 0)
    operator delete(v218.__r_.__value_.__l.__data_);
  if (v135 < 0)
    operator delete(v222.__r_.__value_.__l.__data_);
  if (v136 < 0)
  {
    operator delete(v227.__r_.__value_.__l.__data_);
    if ((v128 & 0x80000000) == 0)
      goto LABEL_346;
  }
  else if ((v128 & 0x80000000) == 0)
  {
    goto LABEL_346;
  }
  operator delete(v232.__r_.__value_.__l.__data_);
LABEL_346:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v236);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v241);
  if (v137 < 0)
  {
    operator delete(v247.__r_.__value_.__l.__data_);
    if ((v130 & 0x80000000) == 0)
      goto LABEL_348;
  }
  else if ((v130 & 0x80000000) == 0)
  {
    goto LABEL_348;
  }
  operator delete(v252.__r_.__value_.__l.__data_);
LABEL_348:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v256);
  if (v127 < 0)
  {
    operator delete(v262.__r_.__value_.__l.__data_);
    if ((v103 & 0x80000000) == 0)
      goto LABEL_350;
  }
  else if ((v103 & 0x80000000) == 0)
  {
    goto LABEL_350;
  }
  operator delete(v267.__r_.__value_.__l.__data_);
LABEL_350:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v271);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v276);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v281);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v286);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v291);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__s.__r_.__value_.__l.__data_);
    if ((v98 & 0x80000000) == 0)
      goto LABEL_352;
  }
  else if ((v98 & 0x80000000) == 0)
  {
    goto LABEL_352;
  }
  operator delete(v302.__r_.__value_.__l.__data_);
LABEL_352:
  *(_QWORD *)(v138 + 1840) = off_24C335D90;
  v99 = (std::string *)(v138 + 1848);
  if (*(char *)(v117 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v99, *(const std::string::value_type **)(v117 + 8), *(_QWORD *)(v117 + 16));
  }
  else
  {
    v100 = *(_OWORD *)(v117 + 8);
    *(_QWORD *)(v138 + 1864) = *(_QWORD *)(v117 + 24);
    *(_OWORD *)&v99->__r_.__value_.__l.__data_ = v100;
  }
  *(_DWORD *)(v138 + 1872) = *(_DWORD *)(v117 + 32);
  *(_QWORD *)(v138 + 1840) = off_24C335B18;
  v101 = *(_QWORD *)(v117 + 36);
  *(_DWORD *)(v138 + 1884) = *(_DWORD *)(v117 + 44);
  *(_QWORD *)(v138 + 1876) = v101;
  return v138;
}

void sub_20A8A7A54(_Unwind_Exception *a1)
{
  uint64_t v1;

  mediaplatform::DatabaseColumnTuple<24ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(v1);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<24ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 1792) = off_24C335D90;
  if (*(char *)(a1 + 1823) < 0)
    operator delete(*(void **)(a1 + 1800));
  *(_QWORD *)(a1 + 1744) = off_24C335D90;
  if (*(char *)(a1 + 1775) < 0)
    operator delete(*(void **)(a1 + 1752));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1680);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1616);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1552);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1488);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1424);
  return mediaplatform::DatabaseColumnTuple<31ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<25ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  uint64_t v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  std::string *v89;
  std::string *v90;
  __int128 v91;
  uint64_t v92;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  uint64_t (**v130)();
  std::string v131;
  int v132;
  char v133;
  std::string v134;
  uint64_t (**v135)();
  std::string v136;
  int v137;
  uint64_t v138;
  int v139;
  uint64_t (**v140)();
  std::string v141;
  int v142;
  uint64_t v143;
  int v144;
  uint64_t (**v145)();
  std::string v146;
  int v147;
  uint64_t v148;
  int v149;
  uint64_t (**v150)();
  std::string v151;
  int v152;
  uint64_t v153;
  int v154;
  uint64_t (**v155)();
  std::string v156;
  int v157;
  char v158;
  std::string v159;
  uint64_t (**v160)();
  std::string v161;
  int v162;
  uint64_t v163;
  int v164;
  uint64_t (**v165)();
  std::string v166;
  int v167;
  char v168;
  std::string v169;
  uint64_t (**v170)();
  std::string v171;
  int v172;
  uint64_t v173;
  uint64_t (**v174)();
  std::string v175;
  int v176;
  uint64_t v177;
  uint64_t (**v178)();
  std::string v179;
  int v180;
  uint64_t v181;
  int v182;
  uint64_t (**v183)();
  std::string v184;
  int v185;
  uint64_t v186;
  int v187;
  uint64_t (**v188)();
  std::string v189;
  int v190;
  uint64_t v191;
  int v192;
  uint64_t (**v193)();
  std::string v194;
  int v195;
  uint64_t v196;
  int v197;
  uint64_t (**v198)();
  std::string v199;
  int v200;
  char v201;
  std::string v202;
  uint64_t (**v203)();
  std::string v204;
  int v205;
  char v206;
  std::string v207;
  uint64_t (**v208)();
  std::string v209;
  int v210;
  uint64_t v211;
  uint64_t (**v212)();
  std::string v213;
  int v214;
  uint64_t v215;
  int v216;
  uint64_t (**v217)();
  std::string v218;
  int v219;
  uint64_t v220;
  int v221;
  uint64_t (**v222)();
  std::string v223;
  int v224;
  uint64_t v225;
  int v226;
  uint64_t (**v227)();
  std::string v228;
  int v229;
  char v230;
  std::string v231;
  uint64_t (**v232)();
  std::string v233;
  int v234;
  char v235;
  std::string v236;
  uint64_t (**v237)();
  std::string v238;
  int v239;
  uint64_t v240;
  int v241;
  uint64_t (**v242)();
  std::string v243;
  int v244;
  uint64_t v245;
  int v246;
  uint64_t (**v247)();
  std::string v248;
  int v249;
  char v250;
  std::string v251;
  uint64_t (**v252)();
  std::string v253;
  int v254;
  uint64_t v255;
  int v256;
  uint64_t (**v257)();
  std::string v258;
  int v259;
  uint64_t v260;
  int v261;
  uint64_t (**v262)();
  std::string v263;
  int v264;
  char v265;
  std::string v266;
  uint64_t (**v267)();
  std::string v268;
  int v269;
  char v270;
  std::string v271;
  uint64_t (**v272)();
  std::string v273;
  int v274;
  char v275;
  std::string v276;
  uint64_t (**v277)();
  std::string __s;
  int v279;
  char v280;
  std::string v281;
  uint64_t (**v282)();
  std::string v283;
  int v284;
  char v285;
  std::string v286;
  uint64_t (**v287)();
  std::string v288;
  int v289;
  char v290;
  std::string v291;
  uint64_t (**v292)();
  std::string __p;
  int v294;
  uint64_t v295;
  int v296;
  uint64_t (**v297)();
  std::string v298;
  int v299;
  uint64_t v300;
  int v301;
  uint64_t (**v302)();
  std::string v303;
  int v304;
  uint64_t v305;
  int v306;
  uint64_t (**v307)();
  std::string v308;
  int v309;
  uint64_t v310;
  int v311;
  uint64_t (**v312)();
  std::string v313;
  int v314;
  char v315;
  std::string v316;
  uint64_t (**v317)();
  std::string v318;
  int v319;
  uint64_t v320;
  int v321;
  uint64_t (**v322)();
  std::string v323;
  int v324;
  char v325;
  std::string v326;
  uint64_t (**v327)();
  std::string v328;
  int v329;
  uint64_t v330;
  uint64_t (**v331)();
  std::string v332;
  int v333;
  uint64_t v334;
  uint64_t (**v335)();
  std::string v336;
  int v337;
  uint64_t v338;
  int v339;
  uint64_t (**v340)();
  std::string v341;
  int v342;
  uint64_t v343;
  int v344;
  uint64_t (**v345)();
  std::string v346;
  int v347;
  uint64_t v348;
  int v349;
  uint64_t (**v350)();
  std::string v351;
  int v352;
  uint64_t v353;
  int v354;
  uint64_t (**v355)();
  std::string v356;
  int v357;
  char v358;
  std::string v359;
  uint64_t (**v360)();
  std::string v361;
  int v362;
  char v363;
  std::string v364;
  uint64_t (**v365)();
  std::string v366;
  int v367;
  uint64_t v368;
  uint64_t (**v369)();
  std::string v370;
  int v371;
  uint64_t v372;
  int v373;
  uint64_t (**v374)();
  std::string v375;
  int v376;
  uint64_t v377;
  int v378;
  uint64_t (**v379)();
  std::string v380;
  int v381;
  uint64_t v382;
  int v383;
  uint64_t (**v384)();
  std::string v385;
  int v386;
  char v387;
  std::string v388;
  uint64_t (**v389)();
  std::string v390;
  int v391;
  char v392;
  std::string v393;
  uint64_t (**v394)();
  std::string v395;
  int v396;
  uint64_t v397;
  int v398;
  uint64_t (**v399)();
  std::string v400;
  int v401;
  uint64_t v402;
  int v403;
  uint64_t (**v404)();
  std::string v405;
  int v406;
  char v407;
  std::string v408;
  uint64_t (**v409)();
  std::string v410;
  int v411;
  uint64_t v412;
  int v413;
  uint64_t (**v414)();
  std::string v415;
  int v416;
  uint64_t v417;
  int v418;
  uint64_t (**v419)();
  std::string v420;
  int v421;
  char v422;
  std::string v423;
  uint64_t (**v424)();
  std::string v425;
  int v426;
  char v427;
  std::string v428;
  uint64_t (**v429)();
  std::string v430;
  int v431;
  char v432;
  std::string v433;
  uint64_t (**v434)();
  std::string v435;
  int v436;
  char v437;
  std::string v438;

  v34 = MEMORY[0x24BDAC7A8](a1);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v46 = v35;
  v109 = v47;
  v48 = v34;
  v282 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v35 + 31) < 0)
    std::string::__init_copy_ctor_external(&v283, *(const std::string::value_type **)(v35 + 8), *(_QWORD *)(v35 + 16));
  else
    v283 = *(std::string *)(v35 + 8);
  v284 = *(_DWORD *)(v46 + 32);
  v282 = &off_24C335AB8;
  v285 = *(_BYTE *)(v46 + 36);
  if (*(char *)(v46 + 63) < 0)
    std::string::__init_copy_ctor_external(&v286, *(const std::string::value_type **)(v46 + 40), *(_QWORD *)(v46 + 48));
  else
    v286 = *(std::string *)(v46 + 40);
  v277 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v45 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(v45 + 8), *(_QWORD *)(v45 + 16));
  else
    __s = *(std::string *)(v45 + 8);
  v279 = *(_DWORD *)(v45 + 32);
  v277 = &off_24C335AB8;
  v280 = *(_BYTE *)(v45 + 36);
  if (*(char *)(v45 + 63) < 0)
    std::string::__init_copy_ctor_external(&v281, *(const std::string::value_type **)(v45 + 40), *(_QWORD *)(v45 + 48));
  else
    v281 = *(std::string *)(v45 + 40);
  v272 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v43 + 31) < 0)
    std::string::__init_copy_ctor_external(&v273, *(const std::string::value_type **)(v43 + 8), *(_QWORD *)(v43 + 16));
  else
    v273 = *(std::string *)(v43 + 8);
  v274 = *(_DWORD *)(v43 + 32);
  v272 = &off_24C335AB8;
  v275 = *(_BYTE *)(v43 + 36);
  if (*(char *)(v43 + 63) < 0)
    std::string::__init_copy_ctor_external(&v276, *(const std::string::value_type **)(v43 + 40), *(_QWORD *)(v43 + 48));
  else
    v276 = *(std::string *)(v43 + 40);
  v267 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v41 + 31) < 0)
    std::string::__init_copy_ctor_external(&v268, *(const std::string::value_type **)(v41 + 8), *(_QWORD *)(v41 + 16));
  else
    v268 = *(std::string *)(v41 + 8);
  v269 = *(_DWORD *)(v41 + 32);
  v267 = &off_24C335AB8;
  v270 = *(_BYTE *)(v41 + 36);
  if (*(char *)(v41 + 63) < 0)
    std::string::__init_copy_ctor_external(&v271, *(const std::string::value_type **)(v41 + 40), *(_QWORD *)(v41 + 48));
  else
    v271 = *(std::string *)(v41 + 40);
  v262 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v39 + 31) < 0)
    std::string::__init_copy_ctor_external(&v263, *(const std::string::value_type **)(v39 + 8), *(_QWORD *)(v39 + 16));
  else
    v263 = *(std::string *)(v39 + 8);
  v264 = *(_DWORD *)(v39 + 32);
  v262 = &off_24C335AB8;
  v265 = *(_BYTE *)(v39 + 36);
  if (*(char *)(v39 + 63) < 0)
    std::string::__init_copy_ctor_external(&v266, *(const std::string::value_type **)(v39 + 40), *(_QWORD *)(v39 + 48));
  else
    v266 = *(std::string *)(v39 + 40);
  if (*(char *)(v37 + 31) < 0)
    std::string::__init_copy_ctor_external(&v258, *(const std::string::value_type **)(v37 + 8), *(_QWORD *)(v37 + 16));
  else
    v258 = *(std::string *)(v37 + 8);
  v49 = *(_DWORD *)(v37 + 32);
  v257 = off_24C335B18;
  v260 = *(_QWORD *)(v37 + 36);
  v50 = *(_DWORD *)(v37 + 44);
  v124 = v49;
  v259 = v49;
  v261 = v50;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v253, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v253 = *(std::string *)(a9 + 8);
  v51 = *(_DWORD *)(a9 + 32);
  v252 = off_24C335B18;
  v255 = *(_QWORD *)(a9 + 36);
  v52 = *(_DWORD *)(a9 + 44);
  v121 = v51;
  v254 = v51;
  v256 = v52;
  v247 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v248, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v248 = *(std::string *)(a10 + 8);
  v249 = *(_DWORD *)(a10 + 32);
  v247 = &off_24C335AB8;
  v250 = *(_BYTE *)(a10 + 36);
  if (*(char *)(a10 + 63) < 0)
    std::string::__init_copy_ctor_external(&v251, *(const std::string::value_type **)(a10 + 40), *(_QWORD *)(a10 + 48));
  else
    v251 = *(std::string *)(a10 + 40);
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v243, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v243 = *(std::string *)(a11 + 8);
  v53 = *(_DWORD *)(a11 + 32);
  v242 = off_24C335B18;
  v245 = *(_QWORD *)(a11 + 36);
  v54 = *(_DWORD *)(a11 + 44);
  v116 = v53;
  v244 = v53;
  v246 = v54;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v238, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v238 = *(std::string *)(a12 + 8);
  v55 = *(_DWORD *)(a12 + 32);
  v237 = off_24C335B18;
  v240 = *(_QWORD *)(a12 + 36);
  v56 = *(_DWORD *)(a12 + 44);
  v115 = v55;
  v239 = v55;
  v241 = v56;
  v232 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v233, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v233 = *(std::string *)(a13 + 8);
  v234 = *(_DWORD *)(a13 + 32);
  v232 = &off_24C335AB8;
  v235 = *(_BYTE *)(a13 + 36);
  if (*(char *)(a13 + 63) < 0)
    std::string::__init_copy_ctor_external(&v236, *(const std::string::value_type **)(a13 + 40), *(_QWORD *)(a13 + 48));
  else
    v236 = *(std::string *)(a13 + 40);
  v227 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v228, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v228 = *(std::string *)(a14 + 8);
  v229 = *(_DWORD *)(a14 + 32);
  v227 = &off_24C335AB8;
  v230 = *(_BYTE *)(a14 + 36);
  if (*(char *)(a14 + 63) < 0)
    std::string::__init_copy_ctor_external(&v231, *(const std::string::value_type **)(a14 + 40), *(_QWORD *)(a14 + 48));
  else
    v231 = *(std::string *)(a14 + 40);
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v223, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v223 = *(std::string *)(a15 + 8);
  v57 = *(_DWORD *)(a15 + 32);
  v222 = off_24C335B18;
  v225 = *(_QWORD *)(a15 + 36);
  v58 = *(_DWORD *)(a15 + 44);
  v114 = v57;
  v224 = v57;
  v226 = v58;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v218, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v218 = *(std::string *)(a16 + 8);
  v59 = *(_DWORD *)(a16 + 32);
  v217 = off_24C335B18;
  v220 = *(_QWORD *)(a16 + 36);
  v60 = *(_DWORD *)(a16 + 44);
  v113 = v59;
  v219 = v59;
  v221 = v60;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v213, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v213 = *(std::string *)(a17 + 8);
  v61 = *(_DWORD *)(a17 + 32);
  v212 = off_24C335B18;
  v215 = *(_QWORD *)(a17 + 36);
  v62 = *(_DWORD *)(a17 + 44);
  v112 = v61;
  v214 = v61;
  v216 = v62;
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v209, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v209 = *(std::string *)(a18 + 8);
  v111 = *(_DWORD *)(a18 + 32);
  v210 = v111;
  v208 = off_24C335AF8;
  v63 = *(_QWORD *)(a18 + 36);
  v211 = v63;
  v203 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v204, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v204 = *(std::string *)(a19 + 8);
  v205 = *(_DWORD *)(a19 + 32);
  v203 = &off_24C335AB8;
  v206 = *(_BYTE *)(a19 + 36);
  if (*(char *)(a19 + 63) < 0)
    std::string::__init_copy_ctor_external(&v207, *(const std::string::value_type **)(a19 + 40), *(_QWORD *)(a19 + 48));
  else
    v207 = *(std::string *)(a19 + 40);
  v198 = (uint64_t (**)())off_24C335D90;
  v110 = v63;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v199, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v199 = *(std::string *)(a20 + 8);
  v200 = *(_DWORD *)(a20 + 32);
  v198 = &off_24C335AB8;
  v201 = *(_BYTE *)(a20 + 36);
  if (*(char *)(a20 + 63) < 0)
    std::string::__init_copy_ctor_external(&v202, *(const std::string::value_type **)(a20 + 40), *(_QWORD *)(a20 + 48));
  else
    v202 = *(std::string *)(a20 + 40);
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v194, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v194 = *(std::string *)(a21 + 8);
  v64 = *(_DWORD *)(a21 + 32);
  v193 = off_24C335B18;
  v196 = *(_QWORD *)(a21 + 36);
  v65 = *(_DWORD *)(a21 + 44);
  v108 = v64;
  v195 = v64;
  v197 = v65;
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v189, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v189 = *(std::string *)(a22 + 8);
  v66 = *(_DWORD *)(a22 + 32);
  v188 = off_24C335B18;
  v191 = *(_QWORD *)(a22 + 36);
  v67 = *(_DWORD *)(a22 + 44);
  v107 = v66;
  v190 = v66;
  v192 = v67;
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v184, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v184 = *(std::string *)(a23 + 8);
  v68 = *(_DWORD *)(a23 + 32);
  v183 = off_24C335B18;
  v186 = *(_QWORD *)(a23 + 36);
  v69 = *(_DWORD *)(a23 + 44);
  v106 = v68;
  v185 = v68;
  v187 = v69;
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v179, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v179 = *(std::string *)(a24 + 8);
  v70 = *(_DWORD *)(a24 + 32);
  v178 = off_24C335B18;
  v181 = *(_QWORD *)(a24 + 36);
  v71 = *(_DWORD *)(a24 + 44);
  v105 = v70;
  v180 = v70;
  v182 = v71;
  if (*(char *)(a25 + 31) < 0)
    std::string::__init_copy_ctor_external(&v175, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  else
    v175 = *(std::string *)(a25 + 8);
  v104 = *(_DWORD *)(a25 + 32);
  v176 = v104;
  v174 = off_24C335AF8;
  v103 = *(_QWORD *)(a25 + 36);
  v177 = v103;
  if (*(char *)(a26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v171, *(const std::string::value_type **)(a26 + 8), *(_QWORD *)(a26 + 16));
  else
    v171 = *(std::string *)(a26 + 8);
  v102 = *(_DWORD *)(a26 + 32);
  v172 = v102;
  v170 = off_24C335AF8;
  v101 = *(_QWORD *)(a26 + 36);
  v173 = v101;
  v165 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a27 + 31) < 0)
    std::string::__init_copy_ctor_external(&v166, *(const std::string::value_type **)(a27 + 8), *(_QWORD *)(a27 + 16));
  else
    v166 = *(std::string *)(a27 + 8);
  v167 = *(_DWORD *)(a27 + 32);
  v165 = &off_24C335AB8;
  v168 = *(_BYTE *)(a27 + 36);
  if (*(char *)(a27 + 63) < 0)
    std::string::__init_copy_ctor_external(&v169, *(const std::string::value_type **)(a27 + 40), *(_QWORD *)(a27 + 48));
  else
    v169 = *(std::string *)(a27 + 40);
  if (*(char *)(a28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v161, *(const std::string::value_type **)(a28 + 8), *(_QWORD *)(a28 + 16));
  else
    v161 = *(std::string *)(a28 + 8);
  v72 = *(_DWORD *)(a28 + 32);
  v160 = off_24C335B18;
  v163 = *(_QWORD *)(a28 + 36);
  v73 = *(_DWORD *)(a28 + 44);
  v100 = v72;
  v162 = v72;
  v164 = v73;
  v155 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a29 + 31) < 0)
    std::string::__init_copy_ctor_external(&v156, *(const std::string::value_type **)(a29 + 8), *(_QWORD *)(a29 + 16));
  else
    v156 = *(std::string *)(a29 + 8);
  v157 = *(_DWORD *)(a29 + 32);
  v155 = &off_24C335AB8;
  v158 = *(_BYTE *)(a29 + 36);
  if (*(char *)(a29 + 63) < 0)
    std::string::__init_copy_ctor_external(&v159, *(const std::string::value_type **)(a29 + 40), *(_QWORD *)(a29 + 48));
  else
    v159 = *(std::string *)(a29 + 40);
  if (*(char *)(a30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v151, *(const std::string::value_type **)(a30 + 8), *(_QWORD *)(a30 + 16));
  else
    v151 = *(std::string *)(a30 + 8);
  v74 = *(_DWORD *)(a30 + 32);
  v150 = off_24C335B18;
  v153 = *(_QWORD *)(a30 + 36);
  v75 = *(_DWORD *)(a30 + 44);
  v99 = v74;
  v152 = v74;
  v154 = v75;
  if (*(char *)(a31 + 31) < 0)
    std::string::__init_copy_ctor_external(&v146, *(const std::string::value_type **)(a31 + 8), *(_QWORD *)(a31 + 16));
  else
    v146 = *(std::string *)(a31 + 8);
  v76 = *(_DWORD *)(a31 + 32);
  v145 = off_24C335B18;
  v148 = *(_QWORD *)(a31 + 36);
  v77 = *(_DWORD *)(a31 + 44);
  v98 = v76;
  v147 = v76;
  v149 = v77;
  if (*(char *)(a32 + 31) < 0)
    std::string::__init_copy_ctor_external(&v141, *(const std::string::value_type **)(a32 + 8), *(_QWORD *)(a32 + 16));
  else
    v141 = *(std::string *)(a32 + 8);
  v78 = *(_DWORD *)(a32 + 32);
  v140 = off_24C335B18;
  v143 = *(_QWORD *)(a32 + 36);
  v79 = *(_DWORD *)(a32 + 44);
  v97 = v78;
  v142 = v78;
  v144 = v79;
  if (*(char *)(a33 + 31) < 0)
    std::string::__init_copy_ctor_external(&v136, *(const std::string::value_type **)(a33 + 8), *(_QWORD *)(a33 + 16));
  else
    v136 = *(std::string *)(a33 + 8);
  v96 = *(_DWORD *)(a33 + 32);
  v137 = v96;
  v135 = off_24C335B18;
  v138 = *(_QWORD *)(a33 + 36);
  v139 = *(_DWORD *)(a33 + 44);
  v130 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a34 + 31) < 0)
    std::string::__init_copy_ctor_external(&v131, *(const std::string::value_type **)(a34 + 8), *(_QWORD *)(a34 + 16));
  else
    v131 = *(std::string *)(a34 + 8);
  v132 = *(_DWORD *)(a34 + 32);
  v130 = &off_24C335AB8;
  v133 = *(_BYTE *)(a34 + 36);
  if (*(char *)(a34 + 63) < 0)
    std::string::__init_copy_ctor_external(&v134, *(const std::string::value_type **)(a34 + 40), *(_QWORD *)(a34 + 48));
  else
    v134 = *(std::string *)(a34 + 40);
  v434 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v435, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v435 = __s;
  v436 = v279;
  v434 = &off_24C335AB8;
  v437 = v280;
  if (SHIBYTE(v281.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v438, v281.__r_.__value_.__l.__data_, v281.__r_.__value_.__l.__size_);
  else
    v438 = v281;
  v429 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v273.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v430, v273.__r_.__value_.__l.__data_, v273.__r_.__value_.__l.__size_);
  else
    v430 = v273;
  v431 = v274;
  v429 = &off_24C335AB8;
  v432 = v275;
  if (SHIBYTE(v276.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v433, v276.__r_.__value_.__l.__data_, v276.__r_.__value_.__l.__size_);
  else
    v433 = v276;
  v424 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v268.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v425, v268.__r_.__value_.__l.__data_, v268.__r_.__value_.__l.__size_);
  else
    v425 = v268;
  v426 = v269;
  v424 = &off_24C335AB8;
  v427 = v270;
  if (SHIBYTE(v271.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v428, v271.__r_.__value_.__l.__data_, v271.__r_.__value_.__l.__size_);
  else
    v428 = v271;
  v419 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v263.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v420, v263.__r_.__value_.__l.__data_, v263.__r_.__value_.__l.__size_);
  else
    v420 = v263;
  v421 = v264;
  v419 = &off_24C335AB8;
  v422 = v265;
  if (SHIBYTE(v266.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v423, v266.__r_.__value_.__l.__data_, v266.__r_.__value_.__l.__size_);
  else
    v423 = v266;
  v80 = SHIBYTE(v258.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v258.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v415, v258.__r_.__value_.__l.__data_, v258.__r_.__value_.__l.__size_);
  else
    v415 = v258;
  v414 = off_24C335B18;
  v417 = v260;
  v416 = v124;
  v418 = v261;
  v81 = SHIBYTE(v253.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v253.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v410, v253.__r_.__value_.__l.__data_, v253.__r_.__value_.__l.__size_);
  else
    v410 = v253;
  v409 = off_24C335B18;
  v412 = v255;
  v411 = v121;
  v413 = v256;
  v404 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v248.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v405, v248.__r_.__value_.__l.__data_, v248.__r_.__value_.__l.__size_);
  else
    v405 = v248;
  v406 = v249;
  v404 = &off_24C335AB8;
  v407 = v250;
  if (SHIBYTE(v251.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v408, v251.__r_.__value_.__l.__data_, v251.__r_.__value_.__l.__size_);
  else
    v408 = v251;
  v82 = SHIBYTE(v243.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v243.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v400, v243.__r_.__value_.__l.__data_, v243.__r_.__value_.__l.__size_);
  else
    v400 = v243;
  v399 = off_24C335B18;
  v402 = v245;
  v401 = v116;
  v403 = v246;
  v394 = (uint64_t (**)())off_24C335D90;
  v83 = SHIBYTE(v238.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v395, v238.__r_.__value_.__l.__data_, v238.__r_.__value_.__l.__size_);
  else
    v395 = v238;
  v394 = off_24C335B18;
  v397 = v240;
  v396 = v115;
  v398 = v241;
  v389 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v233.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v390, v233.__r_.__value_.__l.__data_, v233.__r_.__value_.__l.__size_);
  else
    v390 = v233;
  v391 = v234;
  v389 = &off_24C335AB8;
  v392 = v235;
  if (SHIBYTE(v236.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v393, v236.__r_.__value_.__l.__data_, v236.__r_.__value_.__l.__size_);
  else
    v393 = v236;
  v384 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v228.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v385, v228.__r_.__value_.__l.__data_, v228.__r_.__value_.__l.__size_);
  else
    v385 = v228;
  v386 = v229;
  v384 = &off_24C335AB8;
  v387 = v230;
  if (SHIBYTE(v231.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v388, v231.__r_.__value_.__l.__data_, v231.__r_.__value_.__l.__size_);
  else
    v388 = v231;
  v379 = (uint64_t (**)())off_24C335D90;
  v129 = SHIBYTE(v223.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v223.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v380, v223.__r_.__value_.__l.__data_, v223.__r_.__value_.__l.__size_);
  else
    v380 = v223;
  v379 = off_24C335B18;
  v382 = v225;
  v381 = v114;
  v383 = v226;
  v374 = (uint64_t (**)())off_24C335D90;
  v128 = SHIBYTE(v218.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v218.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v375, v218.__r_.__value_.__l.__data_, v218.__r_.__value_.__l.__size_);
  else
    v375 = v218;
  v374 = off_24C335B18;
  v377 = v220;
  v376 = v113;
  v378 = v221;
  v369 = (uint64_t (**)())off_24C335D90;
  v127 = SHIBYTE(v213.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v213.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v370, v213.__r_.__value_.__l.__data_, v213.__r_.__value_.__l.__size_);
  else
    v370 = v213;
  v369 = off_24C335B18;
  v372 = v215;
  v371 = v112;
  v373 = v216;
  v365 = (uint64_t (**)())off_24C335D90;
  v126 = SHIBYTE(v209.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v209.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v366, v209.__r_.__value_.__l.__data_, v209.__r_.__value_.__l.__size_);
  else
    v366 = v209;
  v367 = v111;
  v365 = off_24C335AF8;
  v368 = v110;
  v360 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v204.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v361, v204.__r_.__value_.__l.__data_, v204.__r_.__value_.__l.__size_);
  else
    v361 = v204;
  v362 = v205;
  v360 = &off_24C335AB8;
  v363 = v206;
  if (SHIBYTE(v207.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v364, v207.__r_.__value_.__l.__data_, v207.__r_.__value_.__l.__size_);
  else
    v364 = v207;
  v355 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v199.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v356, v199.__r_.__value_.__l.__data_, v199.__r_.__value_.__l.__size_);
  else
    v356 = v199;
  v357 = v200;
  v355 = &off_24C335AB8;
  v358 = v201;
  if (SHIBYTE(v202.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v359, v202.__r_.__value_.__l.__data_, v202.__r_.__value_.__l.__size_);
  else
    v359 = v202;
  v350 = (uint64_t (**)())off_24C335D90;
  v125 = SHIBYTE(v194.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v194.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v351, v194.__r_.__value_.__l.__data_, v194.__r_.__value_.__l.__size_);
  else
    v351 = v194;
  v350 = off_24C335B18;
  v353 = v196;
  v352 = v108;
  v354 = v197;
  v345 = (uint64_t (**)())off_24C335D90;
  v123 = SHIBYTE(v189.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v189.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v346, v189.__r_.__value_.__l.__data_, v189.__r_.__value_.__l.__size_);
  else
    v346 = v189;
  v345 = off_24C335B18;
  v348 = v191;
  v347 = v107;
  v349 = v192;
  v340 = (uint64_t (**)())off_24C335D90;
  v122 = SHIBYTE(v184.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v184.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v341, v184.__r_.__value_.__l.__data_, v184.__r_.__value_.__l.__size_);
  else
    v341 = v184;
  v340 = off_24C335B18;
  v343 = v186;
  v342 = v106;
  v344 = v187;
  v335 = (uint64_t (**)())off_24C335D90;
  v120 = SHIBYTE(v179.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v336, v179.__r_.__value_.__l.__data_, v179.__r_.__value_.__l.__size_);
  else
    v336 = v179;
  v335 = off_24C335B18;
  v338 = v181;
  v337 = v105;
  v339 = v182;
  v331 = (uint64_t (**)())off_24C335D90;
  v119 = SHIBYTE(v175.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v175.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v332, v175.__r_.__value_.__l.__data_, v175.__r_.__value_.__l.__size_);
  else
    v332 = v175;
  v333 = v104;
  v331 = off_24C335AF8;
  v334 = v103;
  v327 = (uint64_t (**)())off_24C335D90;
  v118 = SHIBYTE(v171.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v171.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v328, v171.__r_.__value_.__l.__data_, v171.__r_.__value_.__l.__size_);
  else
    v328 = v171;
  v329 = v102;
  v327 = off_24C335AF8;
  v330 = v101;
  v322 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v166.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v323, v166.__r_.__value_.__l.__data_, v166.__r_.__value_.__l.__size_);
  else
    v323 = v166;
  v324 = v167;
  v322 = &off_24C335AB8;
  v325 = v168;
  v117 = v83;
  if (SHIBYTE(v169.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v326, v169.__r_.__value_.__l.__data_, v169.__r_.__value_.__l.__size_);
  else
    v326 = v169;
  v317 = (uint64_t (**)())off_24C335D90;
  v84 = SHIBYTE(v161.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v161.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v318, v161.__r_.__value_.__l.__data_, v161.__r_.__value_.__l.__size_);
  else
    v318 = v161;
  v317 = off_24C335B18;
  v320 = v163;
  v319 = v100;
  v321 = v164;
  v312 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v156.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v313, v156.__r_.__value_.__l.__data_, v156.__r_.__value_.__l.__size_);
  else
    v313 = v156;
  v314 = v157;
  v312 = &off_24C335AB8;
  v315 = v158;
  if (SHIBYTE(v159.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v316, v159.__r_.__value_.__l.__data_, v159.__r_.__value_.__l.__size_);
  else
    v316 = v159;
  v307 = (uint64_t (**)())off_24C335D90;
  v85 = SHIBYTE(v151.__r_.__value_.__r.__words[2]);
  v95 = v82;
  if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v308, v151.__r_.__value_.__l.__data_, v151.__r_.__value_.__l.__size_);
  else
    v308 = v151;
  v307 = off_24C335B18;
  v310 = v153;
  v309 = v99;
  v311 = v154;
  v302 = (uint64_t (**)())off_24C335D90;
  v86 = SHIBYTE(v146.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v146.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v303, v146.__r_.__value_.__l.__data_, v146.__r_.__value_.__l.__size_);
  else
    v303 = v146;
  v302 = off_24C335B18;
  v305 = v148;
  v304 = v98;
  v306 = v149;
  v297 = (uint64_t (**)())off_24C335D90;
  v87 = SHIBYTE(v141.__r_.__value_.__r.__words[2]);
  v94 = v80;
  if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v298, v141.__r_.__value_.__l.__data_, v141.__r_.__value_.__l.__size_);
  else
    v298 = v141;
  v297 = off_24C335B18;
  v300 = v143;
  v299 = v97;
  v301 = v144;
  v292 = (uint64_t (**)())off_24C335D90;
  v88 = SHIBYTE(v136.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v136.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v136.__r_.__value_.__l.__data_, v136.__r_.__value_.__l.__size_);
  else
    __p = v136;
  v292 = off_24C335B18;
  v295 = v138;
  v294 = v96;
  v296 = v139;
  v287 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v288, v131.__r_.__value_.__l.__data_, v131.__r_.__value_.__l.__size_);
  else
    v288 = v131;
  v289 = v132;
  v287 = &off_24C335AB8;
  v290 = v133;
  if (SHIBYTE(v134.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v291, v134.__r_.__value_.__l.__data_, v134.__r_.__value_.__l.__size_);
  else
    v291 = v134;
  mediaplatform::DatabaseColumnTuple<27ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(v48, (uint64_t)&v434, (uint64_t)&v429, (uint64_t)&v424, (uint64_t)&v419, (uint64_t)&v414, (uint64_t)&v409, (uint64_t)&v404, (uint64_t)&v399, (uint64_t)&v394, (uint64_t)&v389, (uint64_t)&v384, (uint64_t)&v379, (uint64_t)&v374, (uint64_t)&v369, (uint64_t)&v365, (uint64_t)&v360, (uint64_t)&v355, (uint64_t)&v350,
    (uint64_t)&v345,
    (uint64_t)&v340,
    (uint64_t)&v335,
    (uint64_t)&v331,
    (uint64_t)&v327,
    (uint64_t)&v322,
    (uint64_t)&v317,
    (uint64_t)&v312,
    (uint64_t)&v307,
    (uint64_t)&v302,
    (uint64_t)&v297,
    (uint64_t)&v292,
    (uint64_t)&v287);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v287);
  v292 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v297 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v298.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v298.__r_.__value_.__l.__data_);
  v302 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v303.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v303.__r_.__value_.__l.__data_);
  v307 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v308.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v312);
  v317 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v318.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v318.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v322);
  v327 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v328.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v328.__r_.__value_.__l.__data_);
  v331 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v332.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v332.__r_.__value_.__l.__data_);
  v335 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v336.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v336.__r_.__value_.__l.__data_);
  v340 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v341.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v341.__r_.__value_.__l.__data_);
  v345 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v346.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v346.__r_.__value_.__l.__data_);
  v350 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v351.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v351.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v355);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v360);
  v365 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v366.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v366.__r_.__value_.__l.__data_);
  v369 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v370.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v370.__r_.__value_.__l.__data_);
  v374 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v375.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v375.__r_.__value_.__l.__data_);
  v379 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v380.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v380.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v384);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v389);
  v394 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v395.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v395.__r_.__value_.__l.__data_);
  v399 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v400.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v400.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v404);
  v409 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v410.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v410.__r_.__value_.__l.__data_);
  v414 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v415.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v415.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v419);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v424);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v429);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v434);
  *(_QWORD *)(v48 + 1680) = off_24C335D90;
  if (SHIBYTE(v283.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)(v48 + 1688), v283.__r_.__value_.__l.__data_, v283.__r_.__value_.__l.__size_);
  else
    *(std::string *)(v48 + 1688) = v283;
  *(_DWORD *)(v48 + 1712) = v284;
  *(_QWORD *)(v48 + 1680) = &off_24C335AB8;
  *(_BYTE *)(v48 + 1716) = v285;
  v89 = (std::string *)(v48 + 1720);
  if (SHIBYTE(v286.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v89, v286.__r_.__value_.__l.__data_, v286.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v89->__r_.__value_.__l.__data_ = *(_OWORD *)&v286.__r_.__value_.__l.__data_;
    *(_QWORD *)(v48 + 1736) = *((_QWORD *)&v286.__r_.__value_.__l + 2);
  }
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v130);
  if (v88 < 0)
  {
    operator delete(v136.__r_.__value_.__l.__data_);
    if ((v87 & 0x80000000) == 0)
      goto LABEL_311;
  }
  else if ((v87 & 0x80000000) == 0)
  {
    goto LABEL_311;
  }
  operator delete(v141.__r_.__value_.__l.__data_);
LABEL_311:
  if (v86 < 0)
  {
    operator delete(v146.__r_.__value_.__l.__data_);
    if ((v85 & 0x80000000) == 0)
      goto LABEL_313;
  }
  else if ((v85 & 0x80000000) == 0)
  {
    goto LABEL_313;
  }
  operator delete(v151.__r_.__value_.__l.__data_);
LABEL_313:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v155);
  if (v84 < 0)
    operator delete(v161.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v165);
  if (v118 < 0)
    operator delete(v171.__r_.__value_.__l.__data_);
  if (v119 < 0)
    operator delete(v175.__r_.__value_.__l.__data_);
  if (v120 < 0)
    operator delete(v179.__r_.__value_.__l.__data_);
  if (v122 < 0)
    operator delete(v184.__r_.__value_.__l.__data_);
  if (v123 < 0)
    operator delete(v189.__r_.__value_.__l.__data_);
  if (v125 < 0)
    operator delete(v194.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v198);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v203);
  if (v126 < 0)
    operator delete(v209.__r_.__value_.__l.__data_);
  if (v127 < 0)
    operator delete(v213.__r_.__value_.__l.__data_);
  if (v128 < 0)
    operator delete(v218.__r_.__value_.__l.__data_);
  if (v129 < 0)
    operator delete(v223.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v227);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v232);
  if (v117 < 0)
  {
    operator delete(v238.__r_.__value_.__l.__data_);
    if ((v95 & 0x80000000) == 0)
      goto LABEL_337;
  }
  else if ((v95 & 0x80000000) == 0)
  {
    goto LABEL_337;
  }
  operator delete(v243.__r_.__value_.__l.__data_);
LABEL_337:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v247);
  if (v81 < 0)
  {
    operator delete(v253.__r_.__value_.__l.__data_);
    if ((v94 & 0x80000000) == 0)
      goto LABEL_339;
  }
  else if ((v94 & 0x80000000) == 0)
  {
    goto LABEL_339;
  }
  operator delete(v258.__r_.__value_.__l.__data_);
LABEL_339:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v262);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v267);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v272);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v277);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v282);
  *(_QWORD *)(v48 + 1744) = off_24C335D90;
  v90 = (std::string *)(v48 + 1752);
  if (*(char *)(v109 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v90, *(const std::string::value_type **)(v109 + 8), *(_QWORD *)(v109 + 16));
  }
  else
  {
    v91 = *(_OWORD *)(v109 + 8);
    *(_QWORD *)(v48 + 1768) = *(_QWORD *)(v109 + 24);
    *(_OWORD *)&v90->__r_.__value_.__l.__data_ = v91;
  }
  *(_DWORD *)(v48 + 1776) = *(_DWORD *)(v109 + 32);
  *(_QWORD *)(v48 + 1744) = off_24C335B18;
  v92 = *(_QWORD *)(v109 + 36);
  *(_DWORD *)(v48 + 1788) = *(_DWORD *)(v109 + 44);
  *(_QWORD *)(v48 + 1780) = v92;
  return v48;
}

void sub_20A8AA46C(_Unwind_Exception *a1)
{
  uint64_t v1;

  mediaplatform::DatabaseColumnTuple<26ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(v1);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<25ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 1744) = off_24C335D90;
  if (*(char *)(a1 + 1775) < 0)
    operator delete(*(void **)(a1 + 1752));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1680);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1616);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1552);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1488);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1424);
  return mediaplatform::DatabaseColumnTuple<31ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<26ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1680);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1616);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1552);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1488);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1424);
  return mediaplatform::DatabaseColumnTuple<31ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<27ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  uint64_t v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  std::string *v77;
  __int128 v78;
  std::string *v79;
  __int128 v80;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  uint64_t (**v117)();
  std::string v118;
  int v119;
  char v120;
  std::string v121;
  uint64_t (**v122)();
  std::string v123;
  int v124;
  uint64_t v125;
  int v126;
  uint64_t (**v127)();
  std::string v128;
  int v129;
  uint64_t v130;
  int v131;
  uint64_t (**v132)();
  std::string v133;
  int v134;
  uint64_t v135;
  int v136;
  uint64_t (**v137)();
  std::string v138;
  int v139;
  uint64_t v140;
  int v141;
  uint64_t (**v142)();
  std::string v143;
  int v144;
  char v145;
  std::string v146;
  uint64_t (**v147)();
  std::string v148;
  int v149;
  uint64_t v150;
  int v151;
  uint64_t (**v152)();
  std::string v153;
  int v154;
  char v155;
  std::string v156;
  uint64_t (**v157)();
  std::string v158;
  int v159;
  uint64_t v160;
  uint64_t (**v161)();
  std::string v162;
  int v163;
  uint64_t v164;
  uint64_t (**v165)();
  std::string v166;
  int v167;
  uint64_t v168;
  int v169;
  uint64_t (**v170)();
  std::string v171;
  int v172;
  uint64_t v173;
  int v174;
  uint64_t (**v175)();
  std::string v176;
  int v177;
  uint64_t v178;
  int v179;
  uint64_t (**v180)();
  std::string v181;
  int v182;
  uint64_t v183;
  int v184;
  uint64_t (**v185)();
  std::string v186;
  int v187;
  char v188;
  std::string v189;
  uint64_t (**v190)();
  std::string v191;
  int v192;
  char v193;
  std::string v194;
  uint64_t (**v195)();
  std::string v196;
  int v197;
  uint64_t v198;
  uint64_t (**v199)();
  std::string v200;
  int v201;
  uint64_t v202;
  int v203;
  uint64_t (**v204)();
  std::string v205;
  int v206;
  uint64_t v207;
  int v208;
  uint64_t (**v209)();
  std::string v210;
  int v211;
  uint64_t v212;
  int v213;
  uint64_t (**v214)();
  std::string v215;
  int v216;
  char v217;
  std::string v218;
  uint64_t (**v219)();
  std::string v220;
  int v221;
  char v222;
  std::string v223;
  uint64_t (**v224)();
  std::string v225;
  int v226;
  uint64_t v227;
  int v228;
  uint64_t (**v229)();
  std::string v230;
  int v231;
  uint64_t v232;
  int v233;
  uint64_t (**v234)();
  std::string v235;
  int v236;
  char v237;
  std::string v238;
  uint64_t (**v239)();
  std::string v240;
  int v241;
  uint64_t v242;
  int v243;
  uint64_t (**v244)();
  std::string v245;
  int v246;
  uint64_t v247;
  int v248;
  uint64_t (**v249)();
  std::string v250;
  int v251;
  char v252;
  std::string v253;
  uint64_t (**v254)();
  std::string __s;
  int v256;
  char v257;
  std::string v258;
  uint64_t (**v259)();
  std::string v260;
  int v261;
  char v262;
  std::string v263;
  uint64_t (**v264)();
  std::string v265;
  int v266;
  char v267;
  std::string v268;
  uint64_t (**v269)();
  std::string __p;
  int v271;
  uint64_t v272;
  int v273;
  uint64_t (**v274)();
  std::string v275;
  int v276;
  uint64_t v277;
  int v278;
  uint64_t (**v279)();
  std::string v280;
  int v281;
  uint64_t v282;
  int v283;
  uint64_t (**v284)();
  std::string v285;
  int v286;
  uint64_t v287;
  int v288;
  uint64_t (**v289)();
  std::string v290;
  int v291;
  char v292;
  std::string v293;
  uint64_t (**v294)();
  std::string v295;
  int v296;
  uint64_t v297;
  int v298;
  uint64_t (**v299)();
  std::string v300;
  int v301;
  char v302;
  std::string v303;
  uint64_t (**v304)();
  std::string v305;
  int v306;
  uint64_t v307;
  uint64_t (**v308)();
  std::string v309;
  int v310;
  uint64_t v311;
  uint64_t (**v312)();
  std::string v313;
  int v314;
  uint64_t v315;
  int v316;
  uint64_t (**v317)();
  std::string v318;
  int v319;
  uint64_t v320;
  int v321;
  uint64_t (**v322)();
  std::string v323;
  int v324;
  uint64_t v325;
  int v326;
  uint64_t (**v327)();
  std::string v328;
  int v329;
  uint64_t v330;
  int v331;
  uint64_t (**v332)();
  std::string v333;
  int v334;
  char v335;
  std::string v336;
  uint64_t (**v337)();
  std::string v338;
  int v339;
  char v340;
  std::string v341;
  uint64_t (**v342)();
  std::string v343;
  int v344;
  uint64_t v345;
  uint64_t (**v346)();
  std::string v347;
  int v348;
  uint64_t v349;
  int v350;
  uint64_t (**v351)();
  std::string v352;
  int v353;
  uint64_t v354;
  int v355;
  uint64_t (**v356)();
  std::string v357;
  int v358;
  uint64_t v359;
  int v360;
  uint64_t (**v361)();
  std::string v362;
  int v363;
  char v364;
  std::string v365;
  uint64_t (**v366)();
  std::string v367;
  int v368;
  char v369;
  std::string v370;
  uint64_t (**v371)();
  std::string v372;
  int v373;
  uint64_t v374;
  int v375;
  uint64_t (**v376)();
  std::string v377;
  int v378;
  uint64_t v379;
  int v380;
  uint64_t (**v381)();
  std::string v382;
  int v383;
  char v384;
  std::string v385;
  uint64_t (**v386)();
  std::string v387;
  int v388;
  uint64_t v389;
  int v390;
  uint64_t (**v391)();
  std::string v392;
  int v393;
  uint64_t v394;
  int v395;
  uint64_t (**v396)();
  std::string v397;
  int v398;
  char v399;
  std::string v400;
  uint64_t (**v401)();
  std::string v402;
  int v403;
  char v404;
  std::string v405;

  v259 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a3 + 31) < 0)
    std::string::__init_copy_ctor_external(&v260, *(const std::string::value_type **)(a3 + 8), *(_QWORD *)(a3 + 16));
  else
    v260 = *(std::string *)(a3 + 8);
  v261 = *(_DWORD *)(a3 + 32);
  v259 = &off_24C335AB8;
  v262 = *(_BYTE *)(a3 + 36);
  if (*(char *)(a3 + 63) < 0)
    std::string::__init_copy_ctor_external(&v263, *(const std::string::value_type **)(a3 + 40), *(_QWORD *)(a3 + 48));
  else
    v263 = *(std::string *)(a3 + 40);
  v254 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a4 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(a4 + 8), *(_QWORD *)(a4 + 16));
  else
    __s = *(std::string *)(a4 + 8);
  v256 = *(_DWORD *)(a4 + 32);
  v254 = &off_24C335AB8;
  v257 = *(_BYTE *)(a4 + 36);
  if (*(char *)(a4 + 63) < 0)
    std::string::__init_copy_ctor_external(&v258, *(const std::string::value_type **)(a4 + 40), *(_QWORD *)(a4 + 48));
  else
    v258 = *(std::string *)(a4 + 40);
  v249 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a5 + 31) < 0)
    std::string::__init_copy_ctor_external(&v250, *(const std::string::value_type **)(a5 + 8), *(_QWORD *)(a5 + 16));
  else
    v250 = *(std::string *)(a5 + 8);
  v251 = *(_DWORD *)(a5 + 32);
  v249 = &off_24C335AB8;
  v252 = *(_BYTE *)(a5 + 36);
  if (*(char *)(a5 + 63) < 0)
    std::string::__init_copy_ctor_external(&v253, *(const std::string::value_type **)(a5 + 40), *(_QWORD *)(a5 + 48));
  else
    v253 = *(std::string *)(a5 + 40);
  if (*(char *)(a6 + 31) < 0)
    std::string::__init_copy_ctor_external(&v245, *(const std::string::value_type **)(a6 + 8), *(_QWORD *)(a6 + 16));
  else
    v245 = *(std::string *)(a6 + 8);
  v39 = *(_DWORD *)(a6 + 32);
  v244 = off_24C335B18;
  v247 = *(_QWORD *)(a6 + 36);
  v40 = *(_DWORD *)(a6 + 44);
  v112 = v39;
  v246 = v39;
  v248 = v40;
  if (*(char *)(a7 + 31) < 0)
    std::string::__init_copy_ctor_external(&v240, *(const std::string::value_type **)(a7 + 8), *(_QWORD *)(a7 + 16));
  else
    v240 = *(std::string *)(a7 + 8);
  v41 = *(_DWORD *)(a7 + 32);
  v239 = off_24C335B18;
  v242 = *(_QWORD *)(a7 + 36);
  v42 = *(_DWORD *)(a7 + 44);
  v110 = v41;
  v241 = v41;
  v243 = v42;
  v234 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a8 + 31) < 0)
    std::string::__init_copy_ctor_external(&v235, *(const std::string::value_type **)(a8 + 8), *(_QWORD *)(a8 + 16));
  else
    v235 = *(std::string *)(a8 + 8);
  v236 = *(_DWORD *)(a8 + 32);
  v234 = &off_24C335AB8;
  v237 = *(_BYTE *)(a8 + 36);
  if (*(char *)(a8 + 63) < 0)
    std::string::__init_copy_ctor_external(&v238, *(const std::string::value_type **)(a8 + 40), *(_QWORD *)(a8 + 48));
  else
    v238 = *(std::string *)(a8 + 40);
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v230, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v230 = *(std::string *)(a9 + 8);
  v43 = *(_DWORD *)(a9 + 32);
  v229 = off_24C335B18;
  v232 = *(_QWORD *)(a9 + 36);
  v44 = *(_DWORD *)(a9 + 44);
  v106 = v43;
  v231 = v43;
  v233 = v44;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v225, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v225 = *(std::string *)(a10 + 8);
  v45 = *(_DWORD *)(a10 + 32);
  v224 = off_24C335B18;
  v227 = *(_QWORD *)(a10 + 36);
  v46 = *(_DWORD *)(a10 + 44);
  v103 = v45;
  v226 = v45;
  v228 = v46;
  v219 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v220, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v220 = *(std::string *)(a11 + 8);
  v221 = *(_DWORD *)(a11 + 32);
  v219 = &off_24C335AB8;
  v222 = *(_BYTE *)(a11 + 36);
  if (*(char *)(a11 + 63) < 0)
    std::string::__init_copy_ctor_external(&v223, *(const std::string::value_type **)(a11 + 40), *(_QWORD *)(a11 + 48));
  else
    v223 = *(std::string *)(a11 + 40);
  v214 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v215, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v215 = *(std::string *)(a12 + 8);
  v216 = *(_DWORD *)(a12 + 32);
  v214 = &off_24C335AB8;
  v217 = *(_BYTE *)(a12 + 36);
  if (*(char *)(a12 + 63) < 0)
    std::string::__init_copy_ctor_external(&v218, *(const std::string::value_type **)(a12 + 40), *(_QWORD *)(a12 + 48));
  else
    v218 = *(std::string *)(a12 + 40);
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v210, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v210 = *(std::string *)(a13 + 8);
  v47 = *(_DWORD *)(a13 + 32);
  v209 = off_24C335B18;
  v212 = *(_QWORD *)(a13 + 36);
  v48 = *(_DWORD *)(a13 + 44);
  v100 = v47;
  v211 = v47;
  v213 = v48;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v205, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v205 = *(std::string *)(a14 + 8);
  v49 = *(_DWORD *)(a14 + 32);
  v204 = off_24C335B18;
  v207 = *(_QWORD *)(a14 + 36);
  v50 = *(_DWORD *)(a14 + 44);
  v99 = v49;
  v206 = v49;
  v208 = v50;
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v200, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v200 = *(std::string *)(a15 + 8);
  v51 = *(_DWORD *)(a15 + 32);
  v199 = off_24C335B18;
  v202 = *(_QWORD *)(a15 + 36);
  v52 = *(_DWORD *)(a15 + 44);
  v98 = v51;
  v201 = v51;
  v203 = v52;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v196, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v196 = *(std::string *)(a16 + 8);
  v97 = *(_DWORD *)(a16 + 32);
  v197 = v97;
  v195 = off_24C335AF8;
  v53 = *(_QWORD *)(a16 + 36);
  v198 = v53;
  v190 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v191, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v191 = *(std::string *)(a17 + 8);
  v192 = *(_DWORD *)(a17 + 32);
  v190 = &off_24C335AB8;
  v193 = *(_BYTE *)(a17 + 36);
  if (*(char *)(a17 + 63) < 0)
    std::string::__init_copy_ctor_external(&v194, *(const std::string::value_type **)(a17 + 40), *(_QWORD *)(a17 + 48));
  else
    v194 = *(std::string *)(a17 + 40);
  v185 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v186, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v186 = *(std::string *)(a18 + 8);
  v187 = *(_DWORD *)(a18 + 32);
  v185 = &off_24C335AB8;
  v188 = *(_BYTE *)(a18 + 36);
  if (*(char *)(a18 + 63) < 0)
    std::string::__init_copy_ctor_external(&v189, *(const std::string::value_type **)(a18 + 40), *(_QWORD *)(a18 + 48));
  else
    v189 = *(std::string *)(a18 + 40);
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v181, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v181 = *(std::string *)(a19 + 8);
  v54 = *(_DWORD *)(a19 + 32);
  v180 = off_24C335B18;
  v183 = *(_QWORD *)(a19 + 36);
  v55 = *(_DWORD *)(a19 + 44);
  v95 = v54;
  v182 = v54;
  v184 = v55;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v176, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v176 = *(std::string *)(a20 + 8);
  v56 = *(_DWORD *)(a20 + 32);
  v175 = off_24C335B18;
  v178 = *(_QWORD *)(a20 + 36);
  v57 = *(_DWORD *)(a20 + 44);
  v94 = v56;
  v177 = v56;
  v179 = v57;
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v171, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v171 = *(std::string *)(a21 + 8);
  v58 = *(_DWORD *)(a21 + 32);
  v170 = off_24C335B18;
  v173 = *(_QWORD *)(a21 + 36);
  v59 = *(_DWORD *)(a21 + 44);
  v93 = v58;
  v172 = v58;
  v174 = v59;
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v166, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v166 = *(std::string *)(a22 + 8);
  v60 = *(_DWORD *)(a22 + 32);
  v165 = off_24C335B18;
  v168 = *(_QWORD *)(a22 + 36);
  v61 = *(_DWORD *)(a22 + 44);
  v92 = v60;
  v167 = v60;
  v169 = v61;
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v162, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v162 = *(std::string *)(a23 + 8);
  v91 = *(_DWORD *)(a23 + 32);
  v163 = v91;
  v161 = off_24C335AF8;
  v90 = *(_QWORD *)(a23 + 36);
  v164 = v90;
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v158, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v158 = *(std::string *)(a24 + 8);
  v89 = *(_DWORD *)(a24 + 32);
  v159 = v89;
  v157 = off_24C335AF8;
  v88 = *(_QWORD *)(a24 + 36);
  v160 = v88;
  v152 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a25 + 31) < 0)
    std::string::__init_copy_ctor_external(&v153, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  else
    v153 = *(std::string *)(a25 + 8);
  v154 = *(_DWORD *)(a25 + 32);
  v152 = &off_24C335AB8;
  v155 = *(_BYTE *)(a25 + 36);
  if (*(char *)(a25 + 63) < 0)
    std::string::__init_copy_ctor_external(&v156, *(const std::string::value_type **)(a25 + 40), *(_QWORD *)(a25 + 48));
  else
    v156 = *(std::string *)(a25 + 40);
  if (*(char *)(a26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v148, *(const std::string::value_type **)(a26 + 8), *(_QWORD *)(a26 + 16));
  else
    v148 = *(std::string *)(a26 + 8);
  v62 = *(_DWORD *)(a26 + 32);
  v147 = off_24C335B18;
  v150 = *(_QWORD *)(a26 + 36);
  v63 = *(_DWORD *)(a26 + 44);
  v87 = v62;
  v149 = v62;
  v151 = v63;
  v142 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a27 + 31) < 0)
    std::string::__init_copy_ctor_external(&v143, *(const std::string::value_type **)(a27 + 8), *(_QWORD *)(a27 + 16));
  else
    v143 = *(std::string *)(a27 + 8);
  v144 = *(_DWORD *)(a27 + 32);
  v142 = &off_24C335AB8;
  v145 = *(_BYTE *)(a27 + 36);
  if (*(char *)(a27 + 63) < 0)
    std::string::__init_copy_ctor_external(&v146, *(const std::string::value_type **)(a27 + 40), *(_QWORD *)(a27 + 48));
  else
    v146 = *(std::string *)(a27 + 40);
  if (*(char *)(a28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v138, *(const std::string::value_type **)(a28 + 8), *(_QWORD *)(a28 + 16));
  else
    v138 = *(std::string *)(a28 + 8);
  v64 = *(_DWORD *)(a28 + 32);
  v137 = off_24C335B18;
  v140 = *(_QWORD *)(a28 + 36);
  v65 = *(_DWORD *)(a28 + 44);
  v86 = v64;
  v139 = v64;
  v141 = v65;
  if (*(char *)(a29 + 31) < 0)
    std::string::__init_copy_ctor_external(&v133, *(const std::string::value_type **)(a29 + 8), *(_QWORD *)(a29 + 16));
  else
    v133 = *(std::string *)(a29 + 8);
  v66 = *(_DWORD *)(a29 + 32);
  v132 = off_24C335B18;
  v135 = *(_QWORD *)(a29 + 36);
  v67 = *(_DWORD *)(a29 + 44);
  v85 = v66;
  v134 = v66;
  v136 = v67;
  if (*(char *)(a30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v128, *(const std::string::value_type **)(a30 + 8), *(_QWORD *)(a30 + 16));
  else
    v128 = *(std::string *)(a30 + 8);
  v68 = *(_DWORD *)(a30 + 32);
  v127 = off_24C335B18;
  v130 = *(_QWORD *)(a30 + 36);
  v69 = *(_DWORD *)(a30 + 44);
  v84 = v68;
  v129 = v68;
  v131 = v69;
  if (*(char *)(a31 + 31) < 0)
    std::string::__init_copy_ctor_external(&v123, *(const std::string::value_type **)(a31 + 8), *(_QWORD *)(a31 + 16));
  else
    v123 = *(std::string *)(a31 + 8);
  v83 = *(_DWORD *)(a31 + 32);
  v124 = v83;
  v122 = off_24C335B18;
  v125 = *(_QWORD *)(a31 + 36);
  v126 = *(_DWORD *)(a31 + 44);
  v117 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a32 + 31) < 0)
    std::string::__init_copy_ctor_external(&v118, *(const std::string::value_type **)(a32 + 8), *(_QWORD *)(a32 + 16));
  else
    v118 = *(std::string *)(a32 + 8);
  v119 = *(_DWORD *)(a32 + 32);
  v117 = &off_24C335AB8;
  v120 = *(_BYTE *)(a32 + 36);
  if (*(char *)(a32 + 63) < 0)
    std::string::__init_copy_ctor_external(&v121, *(const std::string::value_type **)(a32 + 40), *(_QWORD *)(a32 + 48));
  else
    v121 = *(std::string *)(a32 + 40);
  v401 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v402, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v402 = __s;
  v403 = v256;
  v401 = &off_24C335AB8;
  v404 = v257;
  if (SHIBYTE(v258.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v405, v258.__r_.__value_.__l.__data_, v258.__r_.__value_.__l.__size_);
  else
    v405 = v258;
  v396 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v250.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v397, v250.__r_.__value_.__l.__data_, v250.__r_.__value_.__l.__size_);
  else
    v397 = v250;
  v398 = v251;
  v396 = &off_24C335AB8;
  v399 = v252;
  if (SHIBYTE(v253.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v400, v253.__r_.__value_.__l.__data_, v253.__r_.__value_.__l.__size_);
  else
    v400 = v253;
  v115 = SHIBYTE(v245.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v245.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v392, v245.__r_.__value_.__l.__data_, v245.__r_.__value_.__l.__size_);
  else
    v392 = v245;
  v391 = off_24C335B18;
  v394 = v247;
  v393 = v112;
  v395 = v248;
  v116 = SHIBYTE(v240.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v240.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v387, v240.__r_.__value_.__l.__data_, v240.__r_.__value_.__l.__size_);
  else
    v387 = v240;
  v386 = off_24C335B18;
  v389 = v242;
  v388 = v110;
  v390 = v243;
  v381 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v235.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v382, v235.__r_.__value_.__l.__data_, v235.__r_.__value_.__l.__size_);
  else
    v382 = v235;
  v383 = v236;
  v381 = &off_24C335AB8;
  v384 = v237;
  if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v385, v238.__r_.__value_.__l.__data_, v238.__r_.__value_.__l.__size_);
  else
    v385 = v238;
  v70 = SHIBYTE(v230.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v230.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v377, v230.__r_.__value_.__l.__data_, v230.__r_.__value_.__l.__size_);
  else
    v377 = v230;
  v376 = off_24C335B18;
  v379 = v232;
  v378 = v106;
  v380 = v233;
  v71 = SHIBYTE(v225.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v225.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v372, v225.__r_.__value_.__l.__data_, v225.__r_.__value_.__l.__size_);
  else
    v372 = v225;
  v371 = off_24C335B18;
  v374 = v227;
  v373 = v103;
  v375 = v228;
  v366 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v220.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v367, v220.__r_.__value_.__l.__data_, v220.__r_.__value_.__l.__size_);
  else
    v367 = v220;
  v368 = v221;
  v366 = &off_24C335AB8;
  v369 = v222;
  if (SHIBYTE(v223.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v370, v223.__r_.__value_.__l.__data_, v223.__r_.__value_.__l.__size_);
  else
    v370 = v223;
  v361 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v362, v215.__r_.__value_.__l.__data_, v215.__r_.__value_.__l.__size_);
  else
    v362 = v215;
  v363 = v216;
  v361 = &off_24C335AB8;
  v364 = v217;
  if (SHIBYTE(v218.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v365, v218.__r_.__value_.__l.__data_, v218.__r_.__value_.__l.__size_);
  else
    v365 = v218;
  v356 = (uint64_t (**)())off_24C335D90;
  v114 = SHIBYTE(v210.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v210.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v357, v210.__r_.__value_.__l.__data_, v210.__r_.__value_.__l.__size_);
  else
    v357 = v210;
  v356 = off_24C335B18;
  v359 = v212;
  v358 = v100;
  v360 = v213;
  v351 = (uint64_t (**)())off_24C335D90;
  v113 = SHIBYTE(v205.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v205.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v352, v205.__r_.__value_.__l.__data_, v205.__r_.__value_.__l.__size_);
  else
    v352 = v205;
  v351 = off_24C335B18;
  v354 = v207;
  v353 = v99;
  v355 = v208;
  v346 = (uint64_t (**)())off_24C335D90;
  v111 = SHIBYTE(v200.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v200.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v347, v200.__r_.__value_.__l.__data_, v200.__r_.__value_.__l.__size_);
  else
    v347 = v200;
  v346 = off_24C335B18;
  v349 = v202;
  v348 = v98;
  v350 = v203;
  v342 = (uint64_t (**)())off_24C335D90;
  v109 = SHIBYTE(v196.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v196.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v343, v196.__r_.__value_.__l.__data_, v196.__r_.__value_.__l.__size_);
  else
    v343 = v196;
  v344 = v97;
  v342 = off_24C335AF8;
  v345 = v53;
  v337 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v338, v191.__r_.__value_.__l.__data_, v191.__r_.__value_.__l.__size_);
  else
    v338 = v191;
  v339 = v192;
  v337 = &off_24C335AB8;
  v340 = v193;
  if (SHIBYTE(v194.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v341, v194.__r_.__value_.__l.__data_, v194.__r_.__value_.__l.__size_);
  else
    v341 = v194;
  v332 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v186.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v333, v186.__r_.__value_.__l.__data_, v186.__r_.__value_.__l.__size_);
  else
    v333 = v186;
  v334 = v187;
  v332 = &off_24C335AB8;
  v335 = v188;
  if (SHIBYTE(v189.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v336, v189.__r_.__value_.__l.__data_, v189.__r_.__value_.__l.__size_);
  else
    v336 = v189;
  v327 = (uint64_t (**)())off_24C335D90;
  v108 = SHIBYTE(v181.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v181.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v328, v181.__r_.__value_.__l.__data_, v181.__r_.__value_.__l.__size_);
  else
    v328 = v181;
  v327 = off_24C335B18;
  v330 = v183;
  v329 = v95;
  v331 = v184;
  v322 = (uint64_t (**)())off_24C335D90;
  v107 = SHIBYTE(v176.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v176.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v323, v176.__r_.__value_.__l.__data_, v176.__r_.__value_.__l.__size_);
  else
    v323 = v176;
  v322 = off_24C335B18;
  v325 = v178;
  v324 = v94;
  v326 = v179;
  v317 = (uint64_t (**)())off_24C335D90;
  v105 = SHIBYTE(v171.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v171.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v318, v171.__r_.__value_.__l.__data_, v171.__r_.__value_.__l.__size_);
  else
    v318 = v171;
  v317 = off_24C335B18;
  v320 = v173;
  v319 = v93;
  v321 = v174;
  v312 = (uint64_t (**)())off_24C335D90;
  v104 = SHIBYTE(v166.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v166.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v313, v166.__r_.__value_.__l.__data_, v166.__r_.__value_.__l.__size_);
  else
    v313 = v166;
  v312 = off_24C335B18;
  v315 = v168;
  v314 = v92;
  v316 = v169;
  v308 = (uint64_t (**)())off_24C335D90;
  v102 = SHIBYTE(v162.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v162.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v309, v162.__r_.__value_.__l.__data_, v162.__r_.__value_.__l.__size_);
  else
    v309 = v162;
  v310 = v91;
  v308 = off_24C335AF8;
  v311 = v90;
  v304 = (uint64_t (**)())off_24C335D90;
  v101 = SHIBYTE(v158.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v158.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v305, v158.__r_.__value_.__l.__data_, v158.__r_.__value_.__l.__size_);
  else
    v305 = v158;
  v306 = v89;
  v304 = off_24C335AF8;
  v307 = v88;
  v299 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v153.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v300, v153.__r_.__value_.__l.__data_, v153.__r_.__value_.__l.__size_);
  else
    v300 = v153;
  v301 = v154;
  v299 = &off_24C335AB8;
  v302 = v155;
  v82 = v71;
  if (SHIBYTE(v156.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v303, v156.__r_.__value_.__l.__data_, v156.__r_.__value_.__l.__size_);
  else
    v303 = v156;
  v294 = (uint64_t (**)())off_24C335D90;
  v72 = SHIBYTE(v148.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v148.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v295, v148.__r_.__value_.__l.__data_, v148.__r_.__value_.__l.__size_);
  else
    v295 = v148;
  v294 = off_24C335B18;
  v297 = v150;
  v296 = v87;
  v298 = v151;
  v289 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v290, v143.__r_.__value_.__l.__data_, v143.__r_.__value_.__l.__size_);
  else
    v290 = v143;
  v291 = v144;
  v289 = &off_24C335AB8;
  v292 = v145;
  if (SHIBYTE(v146.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v293, v146.__r_.__value_.__l.__data_, v146.__r_.__value_.__l.__size_);
  else
    v293 = v146;
  v284 = (uint64_t (**)())off_24C335D90;
  v73 = SHIBYTE(v138.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v285, v138.__r_.__value_.__l.__data_, v138.__r_.__value_.__l.__size_);
  else
    v285 = v138;
  v284 = off_24C335B18;
  v287 = v140;
  v286 = v86;
  v288 = v141;
  v279 = (uint64_t (**)())off_24C335D90;
  v74 = SHIBYTE(v133.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v133.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v280, v133.__r_.__value_.__l.__data_, v133.__r_.__value_.__l.__size_);
  else
    v280 = v133;
  v279 = off_24C335B18;
  v282 = v135;
  v281 = v85;
  v283 = v136;
  v274 = (uint64_t (**)())off_24C335D90;
  v75 = SHIBYTE(v128.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v128.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v275, v128.__r_.__value_.__l.__data_, v128.__r_.__value_.__l.__size_);
  else
    v275 = v128;
  v274 = off_24C335B18;
  v277 = v130;
  v276 = v84;
  v278 = v131;
  v269 = (uint64_t (**)())off_24C335D90;
  v76 = SHIBYTE(v123.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v123.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v123.__r_.__value_.__l.__data_, v123.__r_.__value_.__l.__size_);
  else
    __p = v123;
  v269 = off_24C335B18;
  v272 = v125;
  v271 = v83;
  v273 = v126;
  v264 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v118.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v265, v118.__r_.__value_.__l.__data_, v118.__r_.__value_.__l.__size_);
  else
    v265 = v118;
  v266 = v119;
  v264 = &off_24C335AB8;
  v267 = v120;
  if (SHIBYTE(v121.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v268, v121.__r_.__value_.__l.__data_, v121.__r_.__value_.__l.__size_);
  else
    v268 = v121;
  mediaplatform::DatabaseColumnTuple<29ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(a1, (uint64_t)&v401, (uint64_t)&v396, (uint64_t)&v391, (uint64_t)&v386, (uint64_t)&v381, (uint64_t)&v376, (uint64_t)&v371, (uint64_t)&v366, (uint64_t)&v361, (uint64_t)&v356, (uint64_t)&v351, (uint64_t)&v346, (uint64_t)&v342, (uint64_t)&v337, (uint64_t)&v332, (uint64_t)&v327, (uint64_t)&v322, (uint64_t)&v317,
    (uint64_t)&v312,
    (uint64_t)&v308,
    (uint64_t)&v304,
    (uint64_t)&v299,
    (uint64_t)&v294,
    (uint64_t)&v289,
    (uint64_t)&v284,
    (uint64_t)&v279,
    (uint64_t)&v274,
    (uint64_t)&v269,
    (uint64_t)&v264);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v264);
  v269 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v274 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v275.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v275.__r_.__value_.__l.__data_);
  v279 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v280.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v280.__r_.__value_.__l.__data_);
  v284 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v285.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v285.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v289);
  v294 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v295.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v295.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v299);
  v304 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v305.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v305.__r_.__value_.__l.__data_);
  v308 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v309.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v309.__r_.__value_.__l.__data_);
  v312 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v313.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v313.__r_.__value_.__l.__data_);
  v317 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v318.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v318.__r_.__value_.__l.__data_);
  v322 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v323.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v323.__r_.__value_.__l.__data_);
  v327 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v328.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v328.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v332);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v337);
  v342 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v343.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v343.__r_.__value_.__l.__data_);
  v346 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v347.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v347.__r_.__value_.__l.__data_);
  v351 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v352.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v352.__r_.__value_.__l.__data_);
  v356 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v357.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v357.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v361);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v366);
  v371 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v372.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v372.__r_.__value_.__l.__data_);
  v376 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v377.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v377.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v381);
  v386 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v387.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v387.__r_.__value_.__l.__data_);
  v391 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v392.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v392.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v396);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v401);
  *(_QWORD *)(a1 + 1552) = off_24C335D90;
  if (SHIBYTE(v260.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)(a1 + 1560), v260.__r_.__value_.__l.__data_, v260.__r_.__value_.__l.__size_);
  else
    *(std::string *)(a1 + 1560) = v260;
  *(_DWORD *)(a1 + 1584) = v261;
  *(_QWORD *)(a1 + 1552) = &off_24C335AB8;
  *(_BYTE *)(a1 + 1588) = v262;
  v77 = (std::string *)(a1 + 1592);
  if (SHIBYTE(v263.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v77, v263.__r_.__value_.__l.__data_, v263.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v77->__r_.__value_.__l.__data_ = *(_OWORD *)&v263.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 1608) = *((_QWORD *)&v263.__r_.__value_.__l + 2);
  }
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v117);
  if (v76 < 0)
  {
    operator delete(v123.__r_.__value_.__l.__data_);
    if ((v75 & 0x80000000) == 0)
      goto LABEL_287;
  }
  else if ((v75 & 0x80000000) == 0)
  {
    goto LABEL_287;
  }
  operator delete(v128.__r_.__value_.__l.__data_);
LABEL_287:
  if (v74 < 0)
    operator delete(v133.__r_.__value_.__l.__data_);
  if (v73 < 0)
    operator delete(v138.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v142);
  if (v72 < 0)
    operator delete(v148.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v152);
  if (v101 < 0)
    operator delete(v158.__r_.__value_.__l.__data_);
  if (v102 < 0)
    operator delete(v162.__r_.__value_.__l.__data_);
  if (v104 < 0)
    operator delete(v166.__r_.__value_.__l.__data_);
  if (v105 < 0)
    operator delete(v171.__r_.__value_.__l.__data_);
  if (v107 < 0)
    operator delete(v176.__r_.__value_.__l.__data_);
  if (v108 < 0)
    operator delete(v181.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v185);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v190);
  if (v109 < 0)
    operator delete(v196.__r_.__value_.__l.__data_);
  if (v111 < 0)
    operator delete(v200.__r_.__value_.__l.__data_);
  if (v113 < 0)
    operator delete(v205.__r_.__value_.__l.__data_);
  if (v114 < 0)
    operator delete(v210.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v214);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v219);
  if (v82 < 0)
    operator delete(v225.__r_.__value_.__l.__data_);
  if (v70 < 0)
    operator delete(v230.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v234);
  if (v116 < 0)
  {
    operator delete(v240.__r_.__value_.__l.__data_);
    if ((v115 & 0x80000000) == 0)
      goto LABEL_319;
  }
  else if ((v115 & 0x80000000) == 0)
  {
    goto LABEL_319;
  }
  operator delete(v245.__r_.__value_.__l.__data_);
LABEL_319:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v249);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v254);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v259);
  *(_QWORD *)(a1 + 1616) = off_24C335D90;
  if (*(char *)(a2 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(a1 + 1624), *(const std::string::value_type **)(a2 + 8), *(_QWORD *)(a2 + 16));
  }
  else
  {
    v78 = *(_OWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 1640) = *(_QWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 1624) = v78;
  }
  *(_DWORD *)(a1 + 1648) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 1616) = &off_24C335AB8;
  *(_BYTE *)(a1 + 1652) = *(_BYTE *)(a2 + 36);
  v79 = (std::string *)(a1 + 1656);
  if (*(char *)(a2 + 63) < 0)
  {
    std::string::__init_copy_ctor_external(v79, *(const std::string::value_type **)(a2 + 40), *(_QWORD *)(a2 + 48));
  }
  else
  {
    v80 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 1672) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)&v79->__r_.__value_.__l.__data_ = v80;
  }
  return a1;
}

void sub_20A8ACC38(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 1616) = v3;
  if (*(char *)(v1 + 1647) < 0)
    operator delete(*v2);
  mediaplatform::DatabaseColumnTuple<28ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(STACK[0x258]);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<27ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1616);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1552);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1488);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1424);
  return mediaplatform::DatabaseColumnTuple<31ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<28ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1552);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1488);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1424);
  return mediaplatform::DatabaseColumnTuple<31ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<29ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  std::string *v84;
  int v85;
  std::string *v86;
  __int128 v87;
  std::string *v88;
  __int128 v89;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  uint64_t v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  uint64_t v124;
  uint64_t (**v125)();
  std::string v126;
  int v127;
  char v128;
  std::string v129;
  uint64_t (**v130)();
  std::string v131;
  int v132;
  uint64_t v133;
  int v134;
  uint64_t (**v135)();
  std::string v136;
  int v137;
  uint64_t v138;
  int v139;
  uint64_t (**v140)();
  std::string v141;
  int v142;
  uint64_t v143;
  int v144;
  uint64_t (**v145)();
  std::string v146;
  int v147;
  uint64_t v148;
  int v149;
  uint64_t (**v150)();
  std::string v151;
  int v152;
  char v153;
  std::string v154;
  uint64_t (**v155)();
  std::string v156;
  int v157;
  uint64_t v158;
  int v159;
  uint64_t (**v160)();
  std::string v161;
  int v162;
  char v163;
  std::string v164;
  uint64_t (**v165)();
  std::string v166;
  int v167;
  uint64_t v168;
  uint64_t (**v169)();
  std::string v170;
  int v171;
  uint64_t v172;
  uint64_t (**v173)();
  std::string v174;
  int v175;
  uint64_t v176;
  int v177;
  uint64_t (**v178)();
  std::string v179;
  int v180;
  uint64_t v181;
  int v182;
  uint64_t (**v183)();
  std::string v184;
  int v185;
  uint64_t v186;
  int v187;
  uint64_t (**v188)();
  std::string v189;
  int v190;
  uint64_t v191;
  int v192;
  uint64_t (**v193)();
  std::string v194;
  int v195;
  char v196;
  std::string v197;
  uint64_t (**v198)();
  std::string v199;
  int v200;
  char v201;
  std::string v202;
  uint64_t (**v203)();
  std::string v204;
  int v205;
  uint64_t v206;
  uint64_t (**v207)();
  std::string v208;
  int v209;
  uint64_t v210;
  int v211;
  uint64_t (**v212)();
  std::string v213;
  int v214;
  uint64_t v215;
  int v216;
  uint64_t (**v217)();
  std::string v218;
  int v219;
  uint64_t v220;
  int v221;
  uint64_t (**v222)();
  std::string v223;
  int v224;
  char v225;
  std::string v226;
  uint64_t (**v227)();
  std::string v228;
  int v229;
  char v230;
  std::string v231;
  uint64_t (**v232)();
  std::string v233;
  int v234;
  uint64_t v235;
  int v236;
  uint64_t (**v237)();
  std::string v238;
  int v239;
  uint64_t v240;
  int v241;
  uint64_t (**v242)();
  std::string v243;
  int v244;
  char v245;
  std::string v246;
  uint64_t (**v247)();
  std::string v248;
  int v249;
  uint64_t v250;
  int v251;
  uint64_t (**v252)();
  std::string __s;
  int v254;
  uint64_t v255;
  int v256;
  uint64_t (**v257)();
  std::string v258;
  int v259;
  char v260;
  std::string v261;
  uint64_t (**v262)();
  std::string v263;
  int v264;
  char v265;
  std::string v266;
  uint64_t (**v267)();
  std::string v268;
  int v269;
  uint64_t v270;
  int v271;
  uint64_t (**v272)();
  std::string v273;
  int v274;
  uint64_t v275;
  int v276;
  uint64_t (**v277)();
  std::string v278;
  int v279;
  uint64_t v280;
  int v281;
  uint64_t (**v282)();
  std::string v283;
  int v284;
  uint64_t v285;
  int v286;
  uint64_t (**v287)();
  std::string v288;
  int v289;
  char v290;
  std::string v291;
  uint64_t (**v292)();
  std::string v293;
  int v294;
  uint64_t v295;
  int v296;
  uint64_t (**v297)();
  std::string v298;
  int v299;
  char v300;
  std::string v301;
  uint64_t (**v302)();
  std::string v303;
  int v304;
  uint64_t v305;
  uint64_t (**v306)();
  std::string v307;
  int v308;
  uint64_t v309;
  uint64_t (**v310)();
  std::string v311;
  int v312;
  uint64_t v313;
  int v314;
  uint64_t (**v315)();
  std::string v316;
  int v317;
  uint64_t v318;
  int v319;
  uint64_t (**v320)();
  std::string v321;
  int v322;
  uint64_t v323;
  int v324;
  uint64_t (**v325)();
  std::string v326;
  int v327;
  uint64_t v328;
  int v329;
  uint64_t (**v330)();
  std::string v331;
  int v332;
  char v333;
  std::string v334;
  uint64_t (**v335)();
  std::string v336;
  int v337;
  char v338;
  std::string v339;
  uint64_t (**v340)();
  std::string v341;
  int v342;
  uint64_t v343;
  uint64_t (**v344)();
  std::string v345;
  int v346;
  uint64_t v347;
  int v348;
  uint64_t (**v349)();
  std::string v350;
  int v351;
  uint64_t v352;
  int v353;
  uint64_t (**v354)();
  std::string v355;
  int v356;
  uint64_t v357;
  int v358;
  uint64_t (**v359)();
  std::string v360;
  int v361;
  char v362;
  std::string v363;
  uint64_t (**v364)();
  std::string v365;
  int v366;
  char v367;
  std::string v368;
  uint64_t (**v369)();
  std::string v370;
  int v371;
  uint64_t v372;
  int v373;
  uint64_t (**v374)();
  std::string v375;
  int v376;
  uint64_t v377;
  int v378;
  uint64_t (**v379)();
  std::string v380;
  int v381;
  char v382;
  std::string v383;
  uint64_t (**v384)();
  std::string v385;
  int v386;
  uint64_t v387;
  int v388;
  uint64_t (**v389)();
  std::string v390;
  int v391;
  uint64_t v392;
  int v393;
  uint64_t (**v394)();
  std::string v395;
  int v396;
  char v397;
  std::string v398;
  uint64_t (**v399)();
  std::string __p;
  int v401;
  uint64_t v402;
  int v403;
  uint64_t (**v404)();
  std::string v405;
  int v406;
  uint64_t v407;
  int v408;
  uint64_t (**v409)();
  std::string v410;
  int v411;
  uint64_t v412;
  int v413;
  uint64_t (**v414)();
  std::string v415;
  int v416;
  uint64_t v417;
  int v418;
  uint64_t (**v419)();
  std::string v420;
  int v421;
  char v422;
  std::string v423;
  uint64_t (**v424)();
  std::string v425;
  int v426;
  uint64_t v427;
  int v428;
  uint64_t (**v429)();
  std::string v430;
  int v431;
  char v432;
  std::string v433;
  uint64_t (**v434)();
  std::string v435;
  int v436;
  uint64_t v437;
  uint64_t (**v438)();
  std::string v439;
  int v440;
  uint64_t v441;
  uint64_t (**v442)();
  std::string v443;
  int v444;
  uint64_t v445;
  int v446;
  uint64_t (**v447)();
  std::string v448;
  int v449;
  uint64_t v450;
  int v451;
  uint64_t (**v452)();
  std::string v453;
  int v454;
  uint64_t v455;
  int v456;
  uint64_t (**v457)();
  std::string v458;
  int v459;
  uint64_t v460;
  int v461;
  uint64_t (**v462)();
  std::string v463;
  int v464;
  char v465;
  std::string v466;
  uint64_t (**v467)();
  std::string v468;
  int v469;
  char v470;
  std::string v471;
  uint64_t (**v472)();
  std::string v473;
  int v474;
  uint64_t v475;
  uint64_t (**v476)();
  std::string v477;
  int v478;
  uint64_t v479;
  int v480;
  uint64_t (**v481)();
  std::string v482;
  int v483;
  uint64_t v484;
  int v485;
  uint64_t (**v486)();
  std::string v487;
  int v488;
  uint64_t v489;
  int v490;
  uint64_t (**v491)();
  std::string v492;
  int v493;
  char v494;
  std::string v495;
  uint64_t (**v496)();
  std::string v497;
  int v498;
  char v499;
  std::string v500;
  uint64_t (**v501)();
  std::string v502;
  int v503;
  uint64_t v504;
  int v505;
  uint64_t (**v506)();
  std::string v507;
  int v508;
  uint64_t v509;
  int v510;
  uint64_t (**v511)();
  std::string v512;
  int v513;
  char v514;
  std::string v515;
  uint64_t (**v516)();
  std::string v517;
  int v518;
  uint64_t v519;
  int v520;

  v30 = MEMORY[0x24BDAC7A8](a1);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v42 = v31;
  v44 = v43;
  v124 = v30;
  v257 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v31 + 31) < 0)
    std::string::__init_copy_ctor_external(&v258, *(const std::string::value_type **)(v31 + 8), *(_QWORD *)(v31 + 16));
  else
    v258 = *(std::string *)(v31 + 8);
  v259 = *(_DWORD *)(v42 + 32);
  v257 = &off_24C335AB8;
  v260 = *(_BYTE *)(v42 + 36);
  if (*(char *)(v42 + 63) < 0)
    std::string::__init_copy_ctor_external(&v261, *(const std::string::value_type **)(v42 + 40), *(_QWORD *)(v42 + 48));
  else
    v261 = *(std::string *)(v42 + 40);
  if (*(char *)(v41 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(v41 + 8), *(_QWORD *)(v41 + 16));
  else
    __s = *(std::string *)(v41 + 8);
  v45 = *(_DWORD *)(v41 + 32);
  v252 = off_24C335B18;
  v255 = *(_QWORD *)(v41 + 36);
  v46 = *(_DWORD *)(v41 + 44);
  v254 = v45;
  v256 = v46;
  if (*(char *)(v39 + 31) < 0)
    std::string::__init_copy_ctor_external(&v248, *(const std::string::value_type **)(v39 + 8), *(_QWORD *)(v39 + 16));
  else
    v248 = *(std::string *)(v39 + 8);
  v47 = *(_DWORD *)(v39 + 32);
  v247 = off_24C335B18;
  v250 = *(_QWORD *)(v39 + 36);
  v48 = *(_DWORD *)(v39 + 44);
  v96 = v47;
  v249 = v47;
  v251 = v48;
  v242 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v37 + 31) < 0)
    std::string::__init_copy_ctor_external(&v243, *(const std::string::value_type **)(v37 + 8), *(_QWORD *)(v37 + 16));
  else
    v243 = *(std::string *)(v37 + 8);
  v244 = *(_DWORD *)(v37 + 32);
  v242 = &off_24C335AB8;
  v245 = *(_BYTE *)(v37 + 36);
  if (*(char *)(v37 + 63) < 0)
    std::string::__init_copy_ctor_external(&v246, *(const std::string::value_type **)(v37 + 40), *(_QWORD *)(v37 + 48));
  else
    v246 = *(std::string *)(v37 + 40);
  if (*(char *)(v35 + 31) < 0)
    std::string::__init_copy_ctor_external(&v238, *(const std::string::value_type **)(v35 + 8), *(_QWORD *)(v35 + 16));
  else
    v238 = *(std::string *)(v35 + 8);
  v49 = *(_DWORD *)(v35 + 32);
  v237 = off_24C335B18;
  v240 = *(_QWORD *)(v35 + 36);
  v50 = *(_DWORD *)(v35 + 44);
  v239 = v49;
  v241 = v50;
  if (*(char *)(v33 + 31) < 0)
    std::string::__init_copy_ctor_external(&v233, *(const std::string::value_type **)(v33 + 8), *(_QWORD *)(v33 + 16));
  else
    v233 = *(std::string *)(v33 + 8);
  v51 = *(_DWORD *)(v33 + 32);
  v232 = off_24C335B18;
  v235 = *(_QWORD *)(v33 + 36);
  v52 = *(_DWORD *)(v33 + 44);
  v122 = v51;
  v234 = v51;
  v236 = v52;
  v227 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v228, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v228 = *(std::string *)(a9 + 8);
  v229 = *(_DWORD *)(a9 + 32);
  v227 = &off_24C335AB8;
  v230 = *(_BYTE *)(a9 + 36);
  if (*(char *)(a9 + 63) < 0)
    std::string::__init_copy_ctor_external(&v231, *(const std::string::value_type **)(a9 + 40), *(_QWORD *)(a9 + 48));
  else
    v231 = *(std::string *)(a9 + 40);
  v222 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v223, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v223 = *(std::string *)(a10 + 8);
  v224 = *(_DWORD *)(a10 + 32);
  v222 = &off_24C335AB8;
  v225 = *(_BYTE *)(a10 + 36);
  if (*(char *)(a10 + 63) < 0)
    std::string::__init_copy_ctor_external(&v226, *(const std::string::value_type **)(a10 + 40), *(_QWORD *)(a10 + 48));
  else
    v226 = *(std::string *)(a10 + 40);
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v218, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v218 = *(std::string *)(a11 + 8);
  v53 = *(_DWORD *)(a11 + 32);
  v217 = off_24C335B18;
  v220 = *(_QWORD *)(a11 + 36);
  v54 = *(_DWORD *)(a11 + 44);
  v121 = v53;
  v219 = v53;
  v221 = v54;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v213, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v213 = *(std::string *)(a12 + 8);
  v55 = *(_DWORD *)(a12 + 32);
  v212 = off_24C335B18;
  v215 = *(_QWORD *)(a12 + 36);
  v56 = *(_DWORD *)(a12 + 44);
  v119 = v55;
  v214 = v55;
  v216 = v56;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v208, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v208 = *(std::string *)(a13 + 8);
  v57 = *(_DWORD *)(a13 + 32);
  v207 = off_24C335B18;
  v210 = *(_QWORD *)(a13 + 36);
  v58 = *(_DWORD *)(a13 + 44);
  v117 = v57;
  v209 = v57;
  v211 = v58;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v204, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v204 = *(std::string *)(a14 + 8);
  v115 = *(_DWORD *)(a14 + 32);
  v205 = v115;
  v203 = off_24C335AF8;
  v113 = *(_QWORD *)(a14 + 36);
  v206 = v113;
  v198 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v199, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v199 = *(std::string *)(a15 + 8);
  v200 = *(_DWORD *)(a15 + 32);
  v198 = &off_24C335AB8;
  v201 = *(_BYTE *)(a15 + 36);
  if (*(char *)(a15 + 63) < 0)
    std::string::__init_copy_ctor_external(&v202, *(const std::string::value_type **)(a15 + 40), *(_QWORD *)(a15 + 48));
  else
    v202 = *(std::string *)(a15 + 40);
  v193 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v194, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v194 = *(std::string *)(a16 + 8);
  v195 = *(_DWORD *)(a16 + 32);
  v193 = &off_24C335AB8;
  v196 = *(_BYTE *)(a16 + 36);
  if (*(char *)(a16 + 63) < 0)
    std::string::__init_copy_ctor_external(&v197, *(const std::string::value_type **)(a16 + 40), *(_QWORD *)(a16 + 48));
  else
    v197 = *(std::string *)(a16 + 40);
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v189, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v189 = *(std::string *)(a17 + 8);
  v59 = *(_DWORD *)(a17 + 32);
  v188 = off_24C335B18;
  v191 = *(_QWORD *)(a17 + 36);
  v60 = *(_DWORD *)(a17 + 44);
  v111 = v59;
  v190 = v59;
  v192 = v60;
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v184, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v184 = *(std::string *)(a18 + 8);
  v61 = *(_DWORD *)(a18 + 32);
  v183 = off_24C335B18;
  v186 = *(_QWORD *)(a18 + 36);
  v62 = *(_DWORD *)(a18 + 44);
  v109 = v61;
  v185 = v61;
  v187 = v62;
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v179, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v179 = *(std::string *)(a19 + 8);
  v63 = *(_DWORD *)(a19 + 32);
  v178 = off_24C335B18;
  v181 = *(_QWORD *)(a19 + 36);
  v64 = *(_DWORD *)(a19 + 44);
  v108 = v63;
  v180 = v63;
  v182 = v64;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v174, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v174 = *(std::string *)(a20 + 8);
  v65 = *(_DWORD *)(a20 + 32);
  v173 = off_24C335B18;
  v176 = *(_QWORD *)(a20 + 36);
  v66 = *(_DWORD *)(a20 + 44);
  v107 = v65;
  v175 = v65;
  v177 = v66;
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v170, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v170 = *(std::string *)(a21 + 8);
  v106 = *(_DWORD *)(a21 + 32);
  v171 = v106;
  v169 = off_24C335AF8;
  v105 = *(_QWORD *)(a21 + 36);
  v172 = v105;
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v166, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v166 = *(std::string *)(a22 + 8);
  v104 = *(_DWORD *)(a22 + 32);
  v167 = v104;
  v165 = off_24C335AF8;
  v103 = *(_QWORD *)(a22 + 36);
  v168 = v103;
  v160 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v161, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v161 = *(std::string *)(a23 + 8);
  v162 = *(_DWORD *)(a23 + 32);
  v160 = &off_24C335AB8;
  v163 = *(_BYTE *)(a23 + 36);
  if (*(char *)(a23 + 63) < 0)
    std::string::__init_copy_ctor_external(&v164, *(const std::string::value_type **)(a23 + 40), *(_QWORD *)(a23 + 48));
  else
    v164 = *(std::string *)(a23 + 40);
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v156, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v156 = *(std::string *)(a24 + 8);
  v67 = *(_DWORD *)(a24 + 32);
  v155 = off_24C335B18;
  v158 = *(_QWORD *)(a24 + 36);
  v68 = *(_DWORD *)(a24 + 44);
  v102 = v67;
  v157 = v67;
  v159 = v68;
  v150 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a25 + 31) < 0)
    std::string::__init_copy_ctor_external(&v151, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  else
    v151 = *(std::string *)(a25 + 8);
  v152 = *(_DWORD *)(a25 + 32);
  v150 = &off_24C335AB8;
  v153 = *(_BYTE *)(a25 + 36);
  if (*(char *)(a25 + 63) < 0)
    std::string::__init_copy_ctor_external(&v154, *(const std::string::value_type **)(a25 + 40), *(_QWORD *)(a25 + 48));
  else
    v154 = *(std::string *)(a25 + 40);
  if (*(char *)(a26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v146, *(const std::string::value_type **)(a26 + 8), *(_QWORD *)(a26 + 16));
  else
    v146 = *(std::string *)(a26 + 8);
  v69 = *(_DWORD *)(a26 + 32);
  v145 = off_24C335B18;
  v148 = *(_QWORD *)(a26 + 36);
  v70 = *(_DWORD *)(a26 + 44);
  v101 = v69;
  v147 = v69;
  v149 = v70;
  if (*(char *)(a27 + 31) < 0)
    std::string::__init_copy_ctor_external(&v141, *(const std::string::value_type **)(a27 + 8), *(_QWORD *)(a27 + 16));
  else
    v141 = *(std::string *)(a27 + 8);
  v71 = *(_DWORD *)(a27 + 32);
  v140 = off_24C335B18;
  v143 = *(_QWORD *)(a27 + 36);
  v72 = *(_DWORD *)(a27 + 44);
  v100 = v71;
  v142 = v71;
  v144 = v72;
  if (*(char *)(a28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v136, *(const std::string::value_type **)(a28 + 8), *(_QWORD *)(a28 + 16));
  else
    v136 = *(std::string *)(a28 + 8);
  v73 = *(_DWORD *)(a28 + 32);
  v135 = off_24C335B18;
  v138 = *(_QWORD *)(a28 + 36);
  v74 = *(_DWORD *)(a28 + 44);
  v99 = v73;
  v137 = v73;
  v139 = v74;
  if (*(char *)(a29 + 31) < 0)
    std::string::__init_copy_ctor_external(&v131, *(const std::string::value_type **)(a29 + 8), *(_QWORD *)(a29 + 16));
  else
    v131 = *(std::string *)(a29 + 8);
  v98 = *(_DWORD *)(a29 + 32);
  v132 = v98;
  v130 = off_24C335B18;
  v133 = *(_QWORD *)(a29 + 36);
  v134 = *(_DWORD *)(a29 + 44);
  v125 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v126, *(const std::string::value_type **)(a30 + 8), *(_QWORD *)(a30 + 16));
  else
    v126 = *(std::string *)(a30 + 8);
  v127 = *(_DWORD *)(a30 + 32);
  v125 = &off_24C335AB8;
  v128 = *(_BYTE *)(a30 + 36);
  if (*(char *)(a30 + 63) < 0)
    std::string::__init_copy_ctor_external(&v129, *(const std::string::value_type **)(a30 + 40), *(_QWORD *)(a30 + 48));
  else
    v129 = *(std::string *)(a30 + 40);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v390, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v390 = __s;
  v389 = off_24C335B18;
  v392 = v255;
  v391 = v45;
  v393 = v256;
  if (SHIBYTE(v248.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v385, v248.__r_.__value_.__l.__data_, v248.__r_.__value_.__l.__size_);
  else
    v385 = v248;
  v384 = off_24C335B18;
  v387 = v250;
  v386 = v96;
  v388 = v251;
  v379 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v243.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v380, v243.__r_.__value_.__l.__data_, v243.__r_.__value_.__l.__size_);
  else
    v380 = v243;
  v381 = v244;
  v379 = &off_24C335AB8;
  v382 = v245;
  if (SHIBYTE(v246.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v383, v246.__r_.__value_.__l.__data_, v246.__r_.__value_.__l.__size_);
  else
    v383 = v246;
  if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v375, v238.__r_.__value_.__l.__data_, v238.__r_.__value_.__l.__size_);
  else
    v375 = v238;
  v374 = off_24C335B18;
  v377 = v240;
  v376 = v49;
  v378 = v241;
  if (SHIBYTE(v233.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v370, v233.__r_.__value_.__l.__data_, v233.__r_.__value_.__l.__size_);
  else
    v370 = v233;
  v369 = off_24C335B18;
  v372 = v235;
  v371 = v122;
  v373 = v236;
  v364 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v228.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v365, v228.__r_.__value_.__l.__data_, v228.__r_.__value_.__l.__size_);
  else
    v365 = v228;
  v366 = v229;
  v364 = &off_24C335AB8;
  v367 = v230;
  if (SHIBYTE(v231.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v368, v231.__r_.__value_.__l.__data_, v231.__r_.__value_.__l.__size_);
  else
    v368 = v231;
  v359 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v223.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v360, v223.__r_.__value_.__l.__data_, v223.__r_.__value_.__l.__size_);
  else
    v360 = v223;
  v361 = v224;
  v359 = &off_24C335AB8;
  v362 = v225;
  if (SHIBYTE(v226.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v363, v226.__r_.__value_.__l.__data_, v226.__r_.__value_.__l.__size_);
  else
    v363 = v226;
  if (SHIBYTE(v218.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v355, v218.__r_.__value_.__l.__data_, v218.__r_.__value_.__l.__size_);
  else
    v355 = v218;
  v354 = off_24C335B18;
  v357 = v220;
  v356 = v121;
  v358 = v221;
  v349 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v213.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v350, v213.__r_.__value_.__l.__data_, v213.__r_.__value_.__l.__size_);
  else
    v350 = v213;
  v349 = off_24C335B18;
  v352 = v215;
  v351 = v119;
  v353 = v216;
  v344 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v208.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v345, v208.__r_.__value_.__l.__data_, v208.__r_.__value_.__l.__size_);
  else
    v345 = v208;
  v344 = off_24C335B18;
  v347 = v210;
  v346 = v117;
  v348 = v211;
  v340 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v204.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v341, v204.__r_.__value_.__l.__data_, v204.__r_.__value_.__l.__size_);
  else
    v341 = v204;
  v342 = v115;
  v340 = off_24C335AF8;
  v343 = v113;
  v335 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v199.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v336, v199.__r_.__value_.__l.__data_, v199.__r_.__value_.__l.__size_);
  else
    v336 = v199;
  v337 = v200;
  v335 = &off_24C335AB8;
  v338 = v201;
  if (SHIBYTE(v202.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v339, v202.__r_.__value_.__l.__data_, v202.__r_.__value_.__l.__size_);
  else
    v339 = v202;
  v330 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v194.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v331, v194.__r_.__value_.__l.__data_, v194.__r_.__value_.__l.__size_);
  else
    v331 = v194;
  v332 = v195;
  v330 = &off_24C335AB8;
  v333 = v196;
  if (SHIBYTE(v197.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v334, v197.__r_.__value_.__l.__data_, v197.__r_.__value_.__l.__size_);
  else
    v334 = v197;
  v325 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v189.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v326, v189.__r_.__value_.__l.__data_, v189.__r_.__value_.__l.__size_);
  else
    v326 = v189;
  v325 = off_24C335B18;
  v328 = v191;
  v327 = v111;
  v329 = v192;
  v320 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v184.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v321, v184.__r_.__value_.__l.__data_, v184.__r_.__value_.__l.__size_);
  else
    v321 = v184;
  v320 = off_24C335B18;
  v323 = v186;
  v322 = v109;
  v324 = v187;
  v315 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v316, v179.__r_.__value_.__l.__data_, v179.__r_.__value_.__l.__size_);
  else
    v316 = v179;
  v315 = off_24C335B18;
  v318 = v181;
  v317 = v108;
  v319 = v182;
  v310 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v174.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v311, v174.__r_.__value_.__l.__data_, v174.__r_.__value_.__l.__size_);
  else
    v311 = v174;
  v310 = off_24C335B18;
  v313 = v176;
  v312 = v107;
  v314 = v177;
  v306 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v170.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v307, v170.__r_.__value_.__l.__data_, v170.__r_.__value_.__l.__size_);
  else
    v307 = v170;
  v308 = v106;
  v306 = off_24C335AF8;
  v309 = v105;
  v302 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v166.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v303, v166.__r_.__value_.__l.__data_, v166.__r_.__value_.__l.__size_);
  else
    v303 = v166;
  v304 = v104;
  v302 = off_24C335AF8;
  v305 = v103;
  v297 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v161.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v298, v161.__r_.__value_.__l.__data_, v161.__r_.__value_.__l.__size_);
  else
    v298 = v161;
  v299 = v162;
  v297 = &off_24C335AB8;
  v300 = v163;
  if (SHIBYTE(v164.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v301, v164.__r_.__value_.__l.__data_, v164.__r_.__value_.__l.__size_);
  else
    v301 = v164;
  v292 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v156.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v293, v156.__r_.__value_.__l.__data_, v156.__r_.__value_.__l.__size_);
  else
    v293 = v156;
  v292 = off_24C335B18;
  v295 = v158;
  v294 = v102;
  v296 = v159;
  v287 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v288, v151.__r_.__value_.__l.__data_, v151.__r_.__value_.__l.__size_);
  else
    v288 = v151;
  v289 = v152;
  v287 = &off_24C335AB8;
  v290 = v153;
  if (SHIBYTE(v154.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v291, v154.__r_.__value_.__l.__data_, v154.__r_.__value_.__l.__size_);
  else
    v291 = v154;
  v282 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v146.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v283, v146.__r_.__value_.__l.__data_, v146.__r_.__value_.__l.__size_);
  else
    v283 = v146;
  v282 = off_24C335B18;
  v285 = v148;
  v284 = v101;
  v286 = v149;
  v277 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v278, v141.__r_.__value_.__l.__data_, v141.__r_.__value_.__l.__size_);
  else
    v278 = v141;
  v277 = off_24C335B18;
  v280 = v143;
  v279 = v100;
  v281 = v144;
  v272 = (uint64_t (**)())off_24C335D90;
  v95 = SHIBYTE(v136.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v136.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v273, v136.__r_.__value_.__l.__data_, v136.__r_.__value_.__l.__size_);
  else
    v273 = v136;
  v272 = off_24C335B18;
  v275 = v138;
  v274 = v99;
  v276 = v139;
  v267 = (uint64_t (**)())off_24C335D90;
  v94 = SHIBYTE(v131.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v268, v131.__r_.__value_.__l.__data_, v131.__r_.__value_.__l.__size_);
  else
    v268 = v131;
  v267 = off_24C335B18;
  v270 = v133;
  v269 = v98;
  v271 = v134;
  v262 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v126.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v263, v126.__r_.__value_.__l.__data_, v126.__r_.__value_.__l.__size_);
  else
    v263 = v126;
  v264 = v127;
  v262 = &off_24C335AB8;
  v265 = v128;
  if (SHIBYTE(v129.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v266, v129.__r_.__value_.__l.__data_, v129.__r_.__value_.__l.__size_);
  else
    v266 = v129;
  v516 = (uint64_t (**)())off_24C335D90;
  v93 = SHIBYTE(v385.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v385.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v517, v385.__r_.__value_.__l.__data_, v385.__r_.__value_.__l.__size_);
  else
    v517 = v385;
  v516 = off_24C335B18;
  v519 = v387;
  v518 = v96;
  v520 = v388;
  v511 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v380.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v512, v380.__r_.__value_.__l.__data_, v380.__r_.__value_.__l.__size_);
  else
    v512 = v380;
  v513 = v381;
  v511 = &off_24C335AB8;
  v514 = v382;
  if (SHIBYTE(v383.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v515, v383.__r_.__value_.__l.__data_, v383.__r_.__value_.__l.__size_);
  else
    v515 = v383;
  v506 = (uint64_t (**)())off_24C335D90;
  v92 = SHIBYTE(v375.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v375.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v507, v375.__r_.__value_.__l.__data_, v375.__r_.__value_.__l.__size_);
  else
    v507 = v375;
  v506 = off_24C335B18;
  v509 = v377;
  v508 = v49;
  v510 = v378;
  v501 = (uint64_t (**)())off_24C335D90;
  v75 = SHIBYTE(v370.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v370.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v502, v370.__r_.__value_.__l.__data_, v370.__r_.__value_.__l.__size_);
  else
    v502 = v370;
  v501 = off_24C335B18;
  v504 = v372;
  v503 = v122;
  v505 = v373;
  v496 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v365.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v497, v365.__r_.__value_.__l.__data_, v365.__r_.__value_.__l.__size_);
  else
    v497 = v365;
  v498 = v366;
  v496 = &off_24C335AB8;
  v499 = v367;
  if (SHIBYTE(v368.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v500, v368.__r_.__value_.__l.__data_, v368.__r_.__value_.__l.__size_);
  else
    v500 = v368;
  v491 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v360.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v492, v360.__r_.__value_.__l.__data_, v360.__r_.__value_.__l.__size_);
  else
    v492 = v360;
  v493 = v361;
  v491 = &off_24C335AB8;
  v494 = v362;
  if (SHIBYTE(v363.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v495, v363.__r_.__value_.__l.__data_, v363.__r_.__value_.__l.__size_);
  else
    v495 = v363;
  v486 = (uint64_t (**)())off_24C335D90;
  v76 = SHIBYTE(v355.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v355.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v487, v355.__r_.__value_.__l.__data_, v355.__r_.__value_.__l.__size_);
  else
    v487 = v355;
  v486 = off_24C335B18;
  v489 = v357;
  v488 = v121;
  v490 = v358;
  v481 = (uint64_t (**)())off_24C335D90;
  v77 = SHIBYTE(v350.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v350.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v482, v350.__r_.__value_.__l.__data_, v350.__r_.__value_.__l.__size_);
  else
    v482 = v350;
  v481 = off_24C335B18;
  v484 = v352;
  v483 = v119;
  v485 = v353;
  v476 = (uint64_t (**)())off_24C335D90;
  v123 = SHIBYTE(v345.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v345.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v477, v345.__r_.__value_.__l.__data_, v345.__r_.__value_.__l.__size_);
  else
    v477 = v345;
  v476 = off_24C335B18;
  v479 = v347;
  v478 = v117;
  v480 = v348;
  v472 = (uint64_t (**)())off_24C335D90;
  v120 = SHIBYTE(v341.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v341.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v473, v341.__r_.__value_.__l.__data_, v341.__r_.__value_.__l.__size_);
  else
    v473 = v341;
  v474 = v115;
  v472 = off_24C335AF8;
  v475 = v113;
  v467 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v336.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v468, v336.__r_.__value_.__l.__data_, v336.__r_.__value_.__l.__size_);
  else
    v468 = v336;
  v469 = v337;
  v467 = &off_24C335AB8;
  v470 = v338;
  if (SHIBYTE(v339.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v471, v339.__r_.__value_.__l.__data_, v339.__r_.__value_.__l.__size_);
  else
    v471 = v339;
  v462 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v331.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v463, v331.__r_.__value_.__l.__data_, v331.__r_.__value_.__l.__size_);
  else
    v463 = v331;
  v464 = v332;
  v462 = &off_24C335AB8;
  v465 = v333;
  if (SHIBYTE(v334.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v466, v334.__r_.__value_.__l.__data_, v334.__r_.__value_.__l.__size_);
  else
    v466 = v334;
  v457 = (uint64_t (**)())off_24C335D90;
  v118 = SHIBYTE(v326.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v326.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v458, v326.__r_.__value_.__l.__data_, v326.__r_.__value_.__l.__size_);
  else
    v458 = v326;
  v457 = off_24C335B18;
  v460 = v328;
  v459 = v111;
  v461 = v329;
  v452 = (uint64_t (**)())off_24C335D90;
  v116 = SHIBYTE(v321.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v321.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v453, v321.__r_.__value_.__l.__data_, v321.__r_.__value_.__l.__size_);
  else
    v453 = v321;
  v452 = off_24C335B18;
  v455 = v323;
  v454 = v109;
  v456 = v324;
  v447 = (uint64_t (**)())off_24C335D90;
  v114 = SHIBYTE(v316.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v316.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v448, v316.__r_.__value_.__l.__data_, v316.__r_.__value_.__l.__size_);
  else
    v448 = v316;
  v447 = off_24C335B18;
  v450 = v318;
  v449 = v108;
  v451 = v319;
  v442 = (uint64_t (**)())off_24C335D90;
  v112 = SHIBYTE(v311.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v311.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v443, v311.__r_.__value_.__l.__data_, v311.__r_.__value_.__l.__size_);
  else
    v443 = v311;
  v442 = off_24C335B18;
  v445 = v313;
  v444 = v107;
  v446 = v314;
  v438 = (uint64_t (**)())off_24C335D90;
  v110 = SHIBYTE(v307.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v307.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v439, v307.__r_.__value_.__l.__data_, v307.__r_.__value_.__l.__size_);
  else
    v439 = v307;
  v440 = v106;
  v438 = off_24C335AF8;
  v441 = v105;
  v434 = (uint64_t (**)())off_24C335D90;
  v78 = SHIBYTE(v303.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v303.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v435, v303.__r_.__value_.__l.__data_, v303.__r_.__value_.__l.__size_);
  else
    v435 = v303;
  v436 = v104;
  v434 = off_24C335AF8;
  v437 = v103;
  v429 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v298.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v430, v298.__r_.__value_.__l.__data_, v298.__r_.__value_.__l.__size_);
  else
    v430 = v298;
  v431 = v299;
  v429 = &off_24C335AB8;
  v432 = v300;
  if (SHIBYTE(v301.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v433, v301.__r_.__value_.__l.__data_, v301.__r_.__value_.__l.__size_);
  else
    v433 = v301;
  v424 = (uint64_t (**)())off_24C335D90;
  v79 = SHIBYTE(v293.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v293.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v425, v293.__r_.__value_.__l.__data_, v293.__r_.__value_.__l.__size_);
  else
    v425 = v293;
  v424 = off_24C335B18;
  v427 = v295;
  v426 = v102;
  v428 = v296;
  v419 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v288.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v420, v288.__r_.__value_.__l.__data_, v288.__r_.__value_.__l.__size_);
  else
    v420 = v288;
  v421 = v289;
  v419 = &off_24C335AB8;
  v422 = v290;
  if (SHIBYTE(v291.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v423, v291.__r_.__value_.__l.__data_, v291.__r_.__value_.__l.__size_);
  else
    v423 = v291;
  v414 = (uint64_t (**)())off_24C335D90;
  v80 = SHIBYTE(v283.__r_.__value_.__r.__words[2]);
  v97 = v75;
  v91 = v77;
  if (SHIBYTE(v283.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v415, v283.__r_.__value_.__l.__data_, v283.__r_.__value_.__l.__size_);
  else
    v415 = v283;
  v414 = off_24C335B18;
  v417 = v285;
  v416 = v101;
  v418 = v286;
  v409 = (uint64_t (**)())off_24C335D90;
  v81 = SHIBYTE(v278.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v278.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v410, v278.__r_.__value_.__l.__data_, v278.__r_.__value_.__l.__size_);
  else
    v410 = v278;
  v409 = off_24C335B18;
  v412 = v280;
  v411 = v100;
  v413 = v281;
  v404 = (uint64_t (**)())off_24C335D90;
  v82 = SHIBYTE(v273.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v273.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v405, v273.__r_.__value_.__l.__data_, v273.__r_.__value_.__l.__size_);
  else
    v405 = v273;
  v404 = off_24C335B18;
  v407 = v275;
  v406 = v99;
  v408 = v276;
  v399 = (uint64_t (**)())off_24C335D90;
  v83 = SHIBYTE(v268.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v268.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v268.__r_.__value_.__l.__data_, v268.__r_.__value_.__l.__size_);
  else
    __p = v268;
  v399 = off_24C335B18;
  v402 = v270;
  v401 = v98;
  v403 = v271;
  v394 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v263.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v395, v263.__r_.__value_.__l.__data_, v263.__r_.__value_.__l.__size_);
  else
    v395 = v263;
  v396 = v264;
  v394 = &off_24C335AB8;
  v397 = v265;
  if (SHIBYTE(v266.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v398, v266.__r_.__value_.__l.__data_, v266.__r_.__value_.__l.__size_);
  else
    v398 = v266;
  mediaplatform::DatabaseColumnTuple<32ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(v124, (uint64_t)&v516, (uint64_t)&v511, (uint64_t)&v506, (uint64_t)&v501, (uint64_t)&v496, (uint64_t)&v491, (uint64_t)&v486, (uint64_t)&v481, (uint64_t)&v476, (uint64_t)&v472, (uint64_t)&v467, (uint64_t)&v462, (uint64_t)&v457, (uint64_t)&v452, (uint64_t)&v447, (uint64_t)&v442, (uint64_t)&v438, (uint64_t)&v434,
    (uint64_t)&v429,
    (uint64_t)&v424,
    (uint64_t)&v419,
    (uint64_t)&v414,
    (uint64_t)&v409,
    (uint64_t)&v404,
    (uint64_t)&v399,
    (uint64_t)&v394);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v394);
  v399 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v404 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v405.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v405.__r_.__value_.__l.__data_);
  v409 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v410.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v410.__r_.__value_.__l.__data_);
  v414 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v415.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v415.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v419);
  v424 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v425.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v425.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v429);
  v434 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v435.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v435.__r_.__value_.__l.__data_);
  v438 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v439.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v439.__r_.__value_.__l.__data_);
  v442 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v443.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v443.__r_.__value_.__l.__data_);
  v447 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v448.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v448.__r_.__value_.__l.__data_);
  v452 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v453.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v453.__r_.__value_.__l.__data_);
  v457 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v458.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v458.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v462);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v467);
  v472 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v473.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v473.__r_.__value_.__l.__data_);
  v476 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v477.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v477.__r_.__value_.__l.__data_);
  v481 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v482.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v482.__r_.__value_.__l.__data_);
  v486 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v487.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v487.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v491);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v496);
  v501 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v502.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v502.__r_.__value_.__l.__data_);
  v506 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v507.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v507.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v511);
  v516 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v517.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v517.__r_.__value_.__l.__data_);
  *(_QWORD *)(v124 + 1376) = off_24C335D90;
  v84 = (std::string *)(v124 + 1384);
  v85 = SHIBYTE(v390.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v390.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v84, v390.__r_.__value_.__l.__data_, v390.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v84->__r_.__value_.__l.__data_ = *(_OWORD *)&v390.__r_.__value_.__l.__data_;
    *(_QWORD *)(v124 + 1400) = *((_QWORD *)&v390.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(v124 + 1408) = v391;
  *(_QWORD *)(v124 + 1376) = off_24C335B18;
  *(_QWORD *)(v124 + 1412) = v392;
  *(_DWORD *)(v124 + 1420) = v393;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v262);
  v267 = (uint64_t (**)())off_24C335D90;
  if (v83 < 0)
    operator delete(v268.__r_.__value_.__l.__data_);
  v272 = (uint64_t (**)())off_24C335D90;
  if (v82 < 0)
    operator delete(v273.__r_.__value_.__l.__data_);
  v277 = (uint64_t (**)())off_24C335D90;
  if (v81 < 0)
    operator delete(v278.__r_.__value_.__l.__data_);
  v282 = (uint64_t (**)())off_24C335D90;
  if (v80 < 0)
    operator delete(v283.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v287);
  v292 = (uint64_t (**)())off_24C335D90;
  if (v79 < 0)
    operator delete(v293.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v297);
  v302 = (uint64_t (**)())off_24C335D90;
  if (v78 < 0)
    operator delete(v303.__r_.__value_.__l.__data_);
  v306 = (uint64_t (**)())off_24C335D90;
  if (v110 < 0)
    operator delete(v307.__r_.__value_.__l.__data_);
  v310 = (uint64_t (**)())off_24C335D90;
  if (v112 < 0)
    operator delete(v311.__r_.__value_.__l.__data_);
  v315 = (uint64_t (**)())off_24C335D90;
  if (v114 < 0)
    operator delete(v316.__r_.__value_.__l.__data_);
  v320 = (uint64_t (**)())off_24C335D90;
  if (v116 < 0)
    operator delete(v321.__r_.__value_.__l.__data_);
  v325 = (uint64_t (**)())off_24C335D90;
  if (v118 < 0)
    operator delete(v326.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v330);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v335);
  v340 = (uint64_t (**)())off_24C335D90;
  if (v120 < 0)
    operator delete(v341.__r_.__value_.__l.__data_);
  v344 = (uint64_t (**)())off_24C335D90;
  if (v123 < 0)
    operator delete(v345.__r_.__value_.__l.__data_);
  v349 = (uint64_t (**)())off_24C335D90;
  if (v91 < 0)
    operator delete(v350.__r_.__value_.__l.__data_);
  v354 = (uint64_t (**)())off_24C335D90;
  if (v76 < 0)
    operator delete(v355.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v359);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v364);
  v369 = (uint64_t (**)())off_24C335D90;
  if (v97 < 0)
    operator delete(v370.__r_.__value_.__l.__data_);
  v374 = (uint64_t (**)())off_24C335D90;
  if (v92 < 0)
    operator delete(v375.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v379);
  v384 = (uint64_t (**)())off_24C335D90;
  if (v93 < 0)
  {
    operator delete(v385.__r_.__value_.__l.__data_);
    if ((v85 & 0x80000000) == 0)
      goto LABEL_394;
  }
  else if ((v85 & 0x80000000) == 0)
  {
    goto LABEL_394;
  }
  operator delete(v390.__r_.__value_.__l.__data_);
LABEL_394:
  *(_QWORD *)(v124 + 1424) = off_24C335D90;
  if (SHIBYTE(v258.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)(v124 + 1432), v258.__r_.__value_.__l.__data_, v258.__r_.__value_.__l.__size_);
  else
    *(std::string *)(v124 + 1432) = v258;
  *(_DWORD *)(v124 + 1456) = v259;
  *(_QWORD *)(v124 + 1424) = &off_24C335AB8;
  *(_BYTE *)(v124 + 1460) = v260;
  v86 = (std::string *)(v124 + 1464);
  if (SHIBYTE(v261.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v86, v261.__r_.__value_.__l.__data_, v261.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v86->__r_.__value_.__l.__data_ = *(_OWORD *)&v261.__r_.__value_.__l.__data_;
    *(_QWORD *)(v124 + 1480) = *((_QWORD *)&v261.__r_.__value_.__l + 2);
  }
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v125);
  if (v94 < 0)
    operator delete(v131.__r_.__value_.__l.__data_);
  if (v95 < 0)
    operator delete(v136.__r_.__value_.__l.__data_);
  if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v141.__r_.__value_.__l.__data_);
  if (SHIBYTE(v146.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v146.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v150);
  if (SHIBYTE(v156.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v156.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v160);
  if (SHIBYTE(v166.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v166.__r_.__value_.__l.__data_);
  if (SHIBYTE(v170.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v170.__r_.__value_.__l.__data_);
  if (SHIBYTE(v174.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v174.__r_.__value_.__l.__data_);
  if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v179.__r_.__value_.__l.__data_);
  if (SHIBYTE(v184.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v184.__r_.__value_.__l.__data_);
  if (SHIBYTE(v189.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v189.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v193);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v198);
  if (SHIBYTE(v204.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v204.__r_.__value_.__l.__data_);
  if (SHIBYTE(v208.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v208.__r_.__value_.__l.__data_);
  if (SHIBYTE(v213.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v213.__r_.__value_.__l.__data_);
  if (SHIBYTE(v218.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v218.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v222);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v227);
  if (SHIBYTE(v233.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v233.__r_.__value_.__l.__data_);
  if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v238.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v242);
  if (SHIBYTE(v248.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v248.__r_.__value_.__l.__data_);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__s.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v257);
  *(_QWORD *)(v124 + 1488) = off_24C335D90;
  if (*(char *)(v44 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(v124 + 1496), *(const std::string::value_type **)(v44 + 8), *(_QWORD *)(v44 + 16));
  }
  else
  {
    v87 = *(_OWORD *)(v44 + 8);
    *(_QWORD *)(v124 + 1512) = *(_QWORD *)(v44 + 24);
    *(_OWORD *)(v124 + 1496) = v87;
  }
  *(_DWORD *)(v124 + 1520) = *(_DWORD *)(v44 + 32);
  *(_QWORD *)(v124 + 1488) = &off_24C335AB8;
  *(_BYTE *)(v124 + 1524) = *(_BYTE *)(v44 + 36);
  v88 = (std::string *)(v124 + 1528);
  if (*(char *)(v44 + 63) < 0)
  {
    std::string::__init_copy_ctor_external(v88, *(const std::string::value_type **)(v44 + 40), *(_QWORD *)(v44 + 48));
  }
  else
  {
    v89 = *(_OWORD *)(v44 + 40);
    *(_QWORD *)(v124 + 1544) = *(_QWORD *)(v44 + 56);
    *(_OWORD *)&v88->__r_.__value_.__l.__data_ = v89;
  }
  return v124;
}

void sub_20A8AFE24(_Unwind_Exception *a1)
{
  void **v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)(v2 + 1488) = v3;
  if (*(char *)(v2 + 1519) < 0)
    operator delete(*v1);
  v5 = STACK[0x270];
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(STACK[0x270] + 1424);
  mediaplatform::DatabaseColumnTuple<31ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(v5);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<29ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1488);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1424);
  return mediaplatform::DatabaseColumnTuple<31ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<32ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  std::string *v78;
  int v79;
  std::string *v80;
  std::string *v81;
  __int128 v82;
  uint64_t v83;
  int v85;
  int v86;
  int v87;
  int v88;
  uint64_t v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  uint64_t v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  uint64_t (**v120)();
  std::string v121;
  int v122;
  char v123;
  std::string v124;
  uint64_t (**v125)();
  std::string v126;
  int v127;
  uint64_t v128;
  int v129;
  uint64_t (**v130)();
  std::string v131;
  int v132;
  uint64_t v133;
  int v134;
  uint64_t (**v135)();
  std::string v136;
  int v137;
  uint64_t v138;
  int v139;
  uint64_t (**v140)();
  std::string v141;
  int v142;
  uint64_t v143;
  int v144;
  uint64_t (**v145)();
  std::string v146;
  int v147;
  char v148;
  std::string v149;
  uint64_t (**v150)();
  std::string v151;
  int v152;
  uint64_t v153;
  int v154;
  uint64_t (**v155)();
  std::string v156;
  int v157;
  char v158;
  std::string v159;
  uint64_t (**v160)();
  std::string v161;
  int v162;
  uint64_t v163;
  uint64_t (**v164)();
  std::string v165;
  int v166;
  uint64_t v167;
  uint64_t (**v168)();
  std::string v169;
  int v170;
  uint64_t v171;
  int v172;
  uint64_t (**v173)();
  std::string v174;
  int v175;
  uint64_t v176;
  int v177;
  uint64_t (**v178)();
  std::string v179;
  int v180;
  uint64_t v181;
  int v182;
  uint64_t (**v183)();
  std::string v184;
  int v185;
  uint64_t v186;
  int v187;
  uint64_t (**v188)();
  std::string v189;
  int v190;
  char v191;
  std::string v192;
  uint64_t (**v193)();
  std::string v194;
  int v195;
  char v196;
  std::string v197;
  uint64_t (**v198)();
  std::string v199;
  int v200;
  uint64_t v201;
  uint64_t (**v202)();
  std::string v203;
  int v204;
  uint64_t v205;
  int v206;
  uint64_t (**v207)();
  std::string v208;
  int v209;
  uint64_t v210;
  int v211;
  uint64_t (**v212)();
  std::string v213;
  int v214;
  uint64_t v215;
  int v216;
  uint64_t (**v217)();
  std::string v218;
  int v219;
  char v220;
  std::string v221;
  uint64_t (**v222)();
  std::string v223;
  int v224;
  char v225;
  std::string v226;
  uint64_t (**v227)();
  std::string v228;
  int v229;
  uint64_t v230;
  int v231;
  uint64_t (**v232)();
  std::string __s;
  int v234;
  uint64_t v235;
  int v236;
  uint64_t (**v237)();
  std::string v238;
  int v239;
  char v240;
  std::string v241;
  uint64_t (**v242)();
  std::string v243;
  int v244;
  char v245;
  std::string v246;
  uint64_t (**v247)();
  std::string v248;
  int v249;
  uint64_t v250;
  int v251;
  uint64_t (**v252)();
  std::string v253;
  int v254;
  uint64_t v255;
  int v256;
  uint64_t (**v257)();
  std::string v258;
  int v259;
  uint64_t v260;
  int v261;
  uint64_t (**v262)();
  std::string v263;
  int v264;
  uint64_t v265;
  int v266;
  uint64_t (**v267)();
  std::string v268;
  int v269;
  char v270;
  std::string v271;
  uint64_t (**v272)();
  std::string v273;
  int v274;
  uint64_t v275;
  int v276;
  uint64_t (**v277)();
  std::string v278;
  int v279;
  char v280;
  std::string v281;
  uint64_t (**v282)();
  std::string v283;
  int v284;
  uint64_t v285;
  uint64_t (**v286)();
  std::string v287;
  int v288;
  uint64_t v289;
  uint64_t (**v290)();
  std::string v291;
  int v292;
  uint64_t v293;
  int v294;
  uint64_t (**v295)();
  std::string v296;
  int v297;
  uint64_t v298;
  int v299;
  uint64_t (**v300)();
  std::string v301;
  int v302;
  uint64_t v303;
  int v304;
  uint64_t (**v305)();
  std::string v306;
  int v307;
  uint64_t v308;
  int v309;
  uint64_t (**v310)();
  std::string v311;
  int v312;
  char v313;
  std::string v314;
  uint64_t (**v315)();
  std::string v316;
  int v317;
  char v318;
  std::string v319;
  uint64_t (**v320)();
  std::string v321;
  int v322;
  uint64_t v323;
  uint64_t (**v324)();
  std::string v325;
  int v326;
  uint64_t v327;
  int v328;
  uint64_t (**v329)();
  std::string v330;
  int v331;
  uint64_t v332;
  int v333;
  uint64_t (**v334)();
  std::string v335;
  int v336;
  uint64_t v337;
  int v338;
  uint64_t (**v339)();
  std::string v340;
  int v341;
  char v342;
  std::string v343;
  uint64_t (**v344)();
  std::string v345;
  int v346;
  char v347;
  std::string v348;
  uint64_t (**v349)();
  std::string v350;
  int v351;
  uint64_t v352;
  int v353;
  uint64_t (**v354)();
  std::string v355;
  int v356;
  uint64_t v357;
  int v358;
  uint64_t (**v359)();
  std::string v360;
  int v361;
  char v362;
  std::string v363;
  uint64_t (**v364)();
  std::string __p;
  int v366;
  uint64_t v367;
  int v368;
  uint64_t (**v369)();
  std::string v370;
  int v371;
  uint64_t v372;
  int v373;
  uint64_t (**v374)();
  std::string v375;
  int v376;
  uint64_t v377;
  int v378;
  uint64_t (**v379)();
  std::string v380;
  int v381;
  uint64_t v382;
  int v383;
  uint64_t (**v384)();
  std::string v385;
  int v386;
  char v387;
  std::string v388;
  uint64_t (**v389)();
  std::string v390;
  int v391;
  uint64_t v392;
  int v393;
  uint64_t (**v394)();
  std::string v395;
  int v396;
  char v397;
  std::string v398;
  uint64_t (**v399)();
  std::string v400;
  int v401;
  uint64_t v402;
  uint64_t (**v403)();
  std::string v404;
  int v405;
  uint64_t v406;
  uint64_t (**v407)();
  std::string v408;
  int v409;
  uint64_t v410;
  int v411;
  uint64_t (**v412)();
  std::string v413;
  int v414;
  uint64_t v415;
  int v416;
  uint64_t (**v417)();
  std::string v418;
  int v419;
  uint64_t v420;
  int v421;
  uint64_t (**v422)();
  std::string v423;
  int v424;
  uint64_t v425;
  int v426;
  uint64_t (**v427)();
  std::string v428;
  int v429;
  char v430;
  std::string v431;
  uint64_t (**v432)();
  std::string v433;
  int v434;
  char v435;
  std::string v436;
  uint64_t (**v437)();
  std::string v438;
  int v439;
  uint64_t v440;
  uint64_t (**v441)();
  std::string v442;
  int v443;
  uint64_t v444;
  int v445;
  uint64_t (**v446)();
  std::string v447;
  int v448;
  uint64_t v449;
  int v450;
  uint64_t (**v451)();
  std::string v452;
  int v453;
  uint64_t v454;
  int v455;
  uint64_t (**v456)();
  std::string v457;
  int v458;
  char v459;
  std::string v460;
  uint64_t (**v461)();
  std::string v462;
  int v463;
  char v464;
  std::string v465;
  uint64_t (**v466)();
  std::string v467;
  int v468;
  uint64_t v469;
  int v470;

  v27 = MEMORY[0x24BDAC7A8](a1);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v39 = v28;
  v89 = v40;
  v41 = v27;
  v237 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v238, *(const std::string::value_type **)(v28 + 8), *(_QWORD *)(v28 + 16));
  else
    v238 = *(std::string *)(v28 + 8);
  v239 = *(_DWORD *)(v39 + 32);
  v237 = &off_24C335AB8;
  v240 = *(_BYTE *)(v39 + 36);
  if (*(char *)(v39 + 63) < 0)
    std::string::__init_copy_ctor_external(&v241, *(const std::string::value_type **)(v39 + 40), *(_QWORD *)(v39 + 48));
  else
    v241 = *(std::string *)(v39 + 40);
  if (*(char *)(v38 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(v38 + 8), *(_QWORD *)(v38 + 16));
  else
    __s = *(std::string *)(v38 + 8);
  v42 = *(_DWORD *)(v38 + 32);
  v232 = off_24C335B18;
  v235 = *(_QWORD *)(v38 + 36);
  v43 = *(_DWORD *)(v38 + 44);
  v234 = v42;
  v236 = v43;
  if (*(char *)(v36 + 31) < 0)
    std::string::__init_copy_ctor_external(&v228, *(const std::string::value_type **)(v36 + 8), *(_QWORD *)(v36 + 16));
  else
    v228 = *(std::string *)(v36 + 8);
  v44 = *(_DWORD *)(v36 + 32);
  v227 = off_24C335B18;
  v230 = *(_QWORD *)(v36 + 36);
  v45 = *(_DWORD *)(v36 + 44);
  v92 = v44;
  v229 = v44;
  v231 = v45;
  v222 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v34 + 31) < 0)
    std::string::__init_copy_ctor_external(&v223, *(const std::string::value_type **)(v34 + 8), *(_QWORD *)(v34 + 16));
  else
    v223 = *(std::string *)(v34 + 8);
  v224 = *(_DWORD *)(v34 + 32);
  v222 = &off_24C335AB8;
  v225 = *(_BYTE *)(v34 + 36);
  if (*(char *)(v34 + 63) < 0)
    std::string::__init_copy_ctor_external(&v226, *(const std::string::value_type **)(v34 + 40), *(_QWORD *)(v34 + 48));
  else
    v226 = *(std::string *)(v34 + 40);
  v217 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v32 + 31) < 0)
    std::string::__init_copy_ctor_external(&v218, *(const std::string::value_type **)(v32 + 8), *(_QWORD *)(v32 + 16));
  else
    v218 = *(std::string *)(v32 + 8);
  v219 = *(_DWORD *)(v32 + 32);
  v217 = &off_24C335AB8;
  v220 = *(_BYTE *)(v32 + 36);
  if (*(char *)(v32 + 63) < 0)
    std::string::__init_copy_ctor_external(&v221, *(const std::string::value_type **)(v32 + 40), *(_QWORD *)(v32 + 48));
  else
    v221 = *(std::string *)(v32 + 40);
  if (*(char *)(v30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v213, *(const std::string::value_type **)(v30 + 8), *(_QWORD *)(v30 + 16));
  else
    v213 = *(std::string *)(v30 + 8);
  v46 = *(_DWORD *)(v30 + 32);
  v212 = off_24C335B18;
  v215 = *(_QWORD *)(v30 + 36);
  v47 = *(_DWORD *)(v30 + 44);
  v118 = v46;
  v214 = v46;
  v216 = v47;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v208, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v208 = *(std::string *)(a9 + 8);
  v48 = *(_DWORD *)(a9 + 32);
  v207 = off_24C335B18;
  v210 = *(_QWORD *)(a9 + 36);
  v49 = *(_DWORD *)(a9 + 44);
  v116 = v48;
  v209 = v48;
  v211 = v49;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v203, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v203 = *(std::string *)(a10 + 8);
  v50 = *(_DWORD *)(a10 + 32);
  v202 = off_24C335B18;
  v205 = *(_QWORD *)(a10 + 36);
  v51 = *(_DWORD *)(a10 + 44);
  v114 = v50;
  v204 = v50;
  v206 = v51;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v199, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v199 = *(std::string *)(a11 + 8);
  v112 = *(_DWORD *)(a11 + 32);
  v200 = v112;
  v198 = off_24C335AF8;
  v110 = *(_QWORD *)(a11 + 36);
  v201 = v110;
  v193 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v194, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v194 = *(std::string *)(a12 + 8);
  v195 = *(_DWORD *)(a12 + 32);
  v193 = &off_24C335AB8;
  v196 = *(_BYTE *)(a12 + 36);
  if (*(char *)(a12 + 63) < 0)
    std::string::__init_copy_ctor_external(&v197, *(const std::string::value_type **)(a12 + 40), *(_QWORD *)(a12 + 48));
  else
    v197 = *(std::string *)(a12 + 40);
  v188 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v189, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v189 = *(std::string *)(a13 + 8);
  v190 = *(_DWORD *)(a13 + 32);
  v188 = &off_24C335AB8;
  v191 = *(_BYTE *)(a13 + 36);
  if (*(char *)(a13 + 63) < 0)
    std::string::__init_copy_ctor_external(&v192, *(const std::string::value_type **)(a13 + 40), *(_QWORD *)(a13 + 48));
  else
    v192 = *(std::string *)(a13 + 40);
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v184, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v184 = *(std::string *)(a14 + 8);
  v52 = *(_DWORD *)(a14 + 32);
  v183 = off_24C335B18;
  v186 = *(_QWORD *)(a14 + 36);
  v53 = *(_DWORD *)(a14 + 44);
  v108 = v52;
  v185 = v52;
  v187 = v53;
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v179, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v179 = *(std::string *)(a15 + 8);
  v54 = *(_DWORD *)(a15 + 32);
  v178 = off_24C335B18;
  v181 = *(_QWORD *)(a15 + 36);
  v55 = *(_DWORD *)(a15 + 44);
  v106 = v54;
  v180 = v54;
  v182 = v55;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v174, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v174 = *(std::string *)(a16 + 8);
  v56 = *(_DWORD *)(a16 + 32);
  v173 = off_24C335B18;
  v176 = *(_QWORD *)(a16 + 36);
  v57 = *(_DWORD *)(a16 + 44);
  v104 = v56;
  v175 = v56;
  v177 = v57;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v169, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v169 = *(std::string *)(a17 + 8);
  v58 = *(_DWORD *)(a17 + 32);
  v168 = off_24C335B18;
  v171 = *(_QWORD *)(a17 + 36);
  v59 = *(_DWORD *)(a17 + 44);
  v103 = v58;
  v170 = v58;
  v172 = v59;
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v165, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v165 = *(std::string *)(a18 + 8);
  v102 = *(_DWORD *)(a18 + 32);
  v166 = v102;
  v164 = off_24C335AF8;
  v101 = *(_QWORD *)(a18 + 36);
  v167 = v101;
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v161, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v161 = *(std::string *)(a19 + 8);
  v100 = *(_DWORD *)(a19 + 32);
  v162 = v100;
  v160 = off_24C335AF8;
  v99 = *(_QWORD *)(a19 + 36);
  v163 = v99;
  v155 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v156, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v156 = *(std::string *)(a20 + 8);
  v157 = *(_DWORD *)(a20 + 32);
  v155 = &off_24C335AB8;
  v158 = *(_BYTE *)(a20 + 36);
  if (*(char *)(a20 + 63) < 0)
    std::string::__init_copy_ctor_external(&v159, *(const std::string::value_type **)(a20 + 40), *(_QWORD *)(a20 + 48));
  else
    v159 = *(std::string *)(a20 + 40);
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v151, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v151 = *(std::string *)(a21 + 8);
  v60 = *(_DWORD *)(a21 + 32);
  v150 = off_24C335B18;
  v153 = *(_QWORD *)(a21 + 36);
  v61 = *(_DWORD *)(a21 + 44);
  v98 = v60;
  v152 = v60;
  v154 = v61;
  v145 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v146, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v146 = *(std::string *)(a22 + 8);
  v147 = *(_DWORD *)(a22 + 32);
  v145 = &off_24C335AB8;
  v148 = *(_BYTE *)(a22 + 36);
  if (*(char *)(a22 + 63) < 0)
    std::string::__init_copy_ctor_external(&v149, *(const std::string::value_type **)(a22 + 40), *(_QWORD *)(a22 + 48));
  else
    v149 = *(std::string *)(a22 + 40);
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v141, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v141 = *(std::string *)(a23 + 8);
  v62 = *(_DWORD *)(a23 + 32);
  v140 = off_24C335B18;
  v143 = *(_QWORD *)(a23 + 36);
  v63 = *(_DWORD *)(a23 + 44);
  v97 = v62;
  v142 = v62;
  v144 = v63;
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v136, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v136 = *(std::string *)(a24 + 8);
  v64 = *(_DWORD *)(a24 + 32);
  v135 = off_24C335B18;
  v138 = *(_QWORD *)(a24 + 36);
  v65 = *(_DWORD *)(a24 + 44);
  v96 = v64;
  v137 = v64;
  v139 = v65;
  if (*(char *)(a25 + 31) < 0)
    std::string::__init_copy_ctor_external(&v131, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  else
    v131 = *(std::string *)(a25 + 8);
  v66 = *(_DWORD *)(a25 + 32);
  v130 = off_24C335B18;
  v133 = *(_QWORD *)(a25 + 36);
  v67 = *(_DWORD *)(a25 + 44);
  v95 = v66;
  v132 = v66;
  v134 = v67;
  if (*(char *)(a26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v126, *(const std::string::value_type **)(a26 + 8), *(_QWORD *)(a26 + 16));
  else
    v126 = *(std::string *)(a26 + 8);
  v94 = *(_DWORD *)(a26 + 32);
  v127 = v94;
  v125 = off_24C335B18;
  v128 = *(_QWORD *)(a26 + 36);
  v129 = *(_DWORD *)(a26 + 44);
  v120 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a27 + 31) < 0)
    std::string::__init_copy_ctor_external(&v121, *(const std::string::value_type **)(a27 + 8), *(_QWORD *)(a27 + 16));
  else
    v121 = *(std::string *)(a27 + 8);
  v122 = *(_DWORD *)(a27 + 32);
  v120 = &off_24C335AB8;
  v123 = *(_BYTE *)(a27 + 36);
  if (*(char *)(a27 + 63) < 0)
    std::string::__init_copy_ctor_external(&v124, *(const std::string::value_type **)(a27 + 40), *(_QWORD *)(a27 + 48));
  else
    v124 = *(std::string *)(a27 + 40);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v355, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v355 = __s;
  v354 = off_24C335B18;
  v357 = v235;
  v356 = v42;
  v358 = v236;
  if (SHIBYTE(v228.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v350, v228.__r_.__value_.__l.__data_, v228.__r_.__value_.__l.__size_);
  else
    v350 = v228;
  v349 = off_24C335B18;
  v352 = v230;
  v351 = v92;
  v353 = v231;
  v344 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v223.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v345, v223.__r_.__value_.__l.__data_, v223.__r_.__value_.__l.__size_);
  else
    v345 = v223;
  v346 = v224;
  v344 = &off_24C335AB8;
  v347 = v225;
  if (SHIBYTE(v226.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v348, v226.__r_.__value_.__l.__data_, v226.__r_.__value_.__l.__size_);
  else
    v348 = v226;
  v339 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v218.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v340, v218.__r_.__value_.__l.__data_, v218.__r_.__value_.__l.__size_);
  else
    v340 = v218;
  v341 = v219;
  v339 = &off_24C335AB8;
  v342 = v220;
  if (SHIBYTE(v221.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v343, v221.__r_.__value_.__l.__data_, v221.__r_.__value_.__l.__size_);
  else
    v343 = v221;
  if (SHIBYTE(v213.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v335, v213.__r_.__value_.__l.__data_, v213.__r_.__value_.__l.__size_);
  else
    v335 = v213;
  v334 = off_24C335B18;
  v337 = v215;
  v336 = v118;
  v338 = v216;
  if (SHIBYTE(v208.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v330, v208.__r_.__value_.__l.__data_, v208.__r_.__value_.__l.__size_);
  else
    v330 = v208;
  v329 = off_24C335B18;
  v332 = v210;
  v331 = v116;
  v333 = v211;
  if (SHIBYTE(v203.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v325, v203.__r_.__value_.__l.__data_, v203.__r_.__value_.__l.__size_);
  else
    v325 = v203;
  v324 = off_24C335B18;
  v327 = v205;
  v326 = v114;
  v328 = v206;
  if (SHIBYTE(v199.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v321, v199.__r_.__value_.__l.__data_, v199.__r_.__value_.__l.__size_);
  else
    v321 = v199;
  v322 = v112;
  v320 = off_24C335AF8;
  v323 = v110;
  v315 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v194.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v316, v194.__r_.__value_.__l.__data_, v194.__r_.__value_.__l.__size_);
  else
    v316 = v194;
  v317 = v195;
  v315 = &off_24C335AB8;
  v318 = v196;
  if (SHIBYTE(v197.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v319, v197.__r_.__value_.__l.__data_, v197.__r_.__value_.__l.__size_);
  else
    v319 = v197;
  v310 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v189.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v311, v189.__r_.__value_.__l.__data_, v189.__r_.__value_.__l.__size_);
  else
    v311 = v189;
  v312 = v190;
  v310 = &off_24C335AB8;
  v313 = v191;
  if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v314, v192.__r_.__value_.__l.__data_, v192.__r_.__value_.__l.__size_);
  else
    v314 = v192;
  if (SHIBYTE(v184.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v306, v184.__r_.__value_.__l.__data_, v184.__r_.__value_.__l.__size_);
  else
    v306 = v184;
  v305 = off_24C335B18;
  v308 = v186;
  v307 = v108;
  v309 = v187;
  v300 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v301, v179.__r_.__value_.__l.__data_, v179.__r_.__value_.__l.__size_);
  else
    v301 = v179;
  v300 = off_24C335B18;
  v303 = v181;
  v302 = v106;
  v304 = v182;
  v295 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v174.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v296, v174.__r_.__value_.__l.__data_, v174.__r_.__value_.__l.__size_);
  else
    v296 = v174;
  v295 = off_24C335B18;
  v298 = v176;
  v297 = v104;
  v299 = v177;
  v290 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v169.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v291, v169.__r_.__value_.__l.__data_, v169.__r_.__value_.__l.__size_);
  else
    v291 = v169;
  v290 = off_24C335B18;
  v293 = v171;
  v292 = v103;
  v294 = v172;
  v286 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v165.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v287, v165.__r_.__value_.__l.__data_, v165.__r_.__value_.__l.__size_);
  else
    v287 = v165;
  v288 = v102;
  v286 = off_24C335AF8;
  v289 = v101;
  v282 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v161.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v283, v161.__r_.__value_.__l.__data_, v161.__r_.__value_.__l.__size_);
  else
    v283 = v161;
  v284 = v100;
  v282 = off_24C335AF8;
  v285 = v99;
  v277 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v156.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v278, v156.__r_.__value_.__l.__data_, v156.__r_.__value_.__l.__size_);
  else
    v278 = v156;
  v279 = v157;
  v277 = &off_24C335AB8;
  v280 = v158;
  if (SHIBYTE(v159.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v281, v159.__r_.__value_.__l.__data_, v159.__r_.__value_.__l.__size_);
  else
    v281 = v159;
  v272 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v273, v151.__r_.__value_.__l.__data_, v151.__r_.__value_.__l.__size_);
  else
    v273 = v151;
  v272 = off_24C335B18;
  v275 = v153;
  v274 = v98;
  v276 = v154;
  v267 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v146.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v268, v146.__r_.__value_.__l.__data_, v146.__r_.__value_.__l.__size_);
  else
    v268 = v146;
  v269 = v147;
  v267 = &off_24C335AB8;
  v270 = v148;
  if (SHIBYTE(v149.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v271, v149.__r_.__value_.__l.__data_, v149.__r_.__value_.__l.__size_);
  else
    v271 = v149;
  v262 = (uint64_t (**)())off_24C335D90;
  v68 = SHIBYTE(v141.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v263, v141.__r_.__value_.__l.__data_, v141.__r_.__value_.__l.__size_);
  else
    v263 = v141;
  v262 = off_24C335B18;
  v265 = v143;
  v264 = v97;
  v266 = v144;
  v257 = (uint64_t (**)())off_24C335D90;
  v87 = SHIBYTE(v136.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v136.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v258, v136.__r_.__value_.__l.__data_, v136.__r_.__value_.__l.__size_);
  else
    v258 = v136;
  v257 = off_24C335B18;
  v260 = v138;
  v259 = v96;
  v261 = v139;
  v252 = (uint64_t (**)())off_24C335D90;
  v86 = SHIBYTE(v131.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v253, v131.__r_.__value_.__l.__data_, v131.__r_.__value_.__l.__size_);
  else
    v253 = v131;
  v88 = v68;
  v252 = off_24C335B18;
  v255 = v133;
  v254 = v95;
  v256 = v134;
  v247 = (uint64_t (**)())off_24C335D90;
  v85 = SHIBYTE(v126.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v126.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v248, v126.__r_.__value_.__l.__data_, v126.__r_.__value_.__l.__size_);
  else
    v248 = v126;
  v247 = off_24C335B18;
  v250 = v128;
  v249 = v94;
  v251 = v129;
  v242 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v121.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v243, v121.__r_.__value_.__l.__data_, v121.__r_.__value_.__l.__size_);
  else
    v243 = v121;
  v244 = v122;
  v242 = &off_24C335AB8;
  v245 = v123;
  if (SHIBYTE(v124.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v246, v124.__r_.__value_.__l.__data_, v124.__r_.__value_.__l.__size_);
  else
    v246 = v124;
  v466 = (uint64_t (**)())off_24C335D90;
  v69 = SHIBYTE(v350.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v350.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v467, v350.__r_.__value_.__l.__data_, v350.__r_.__value_.__l.__size_);
  else
    v467 = v350;
  v468 = v92;
  v466 = off_24C335B18;
  v469 = v352;
  v470 = v353;
  v461 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v345.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v462, v345.__r_.__value_.__l.__data_, v345.__r_.__value_.__l.__size_);
  else
    v462 = v345;
  v463 = v346;
  v461 = &off_24C335AB8;
  v464 = v347;
  if (SHIBYTE(v348.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v465, v348.__r_.__value_.__l.__data_, v348.__r_.__value_.__l.__size_);
  else
    v465 = v348;
  v456 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v340.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v457, v340.__r_.__value_.__l.__data_, v340.__r_.__value_.__l.__size_);
  else
    v457 = v340;
  v458 = v341;
  v456 = &off_24C335AB8;
  v459 = v342;
  if (SHIBYTE(v343.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v460, v343.__r_.__value_.__l.__data_, v343.__r_.__value_.__l.__size_);
  else
    v460 = v343;
  v451 = (uint64_t (**)())off_24C335D90;
  v70 = SHIBYTE(v335.__r_.__value_.__r.__words[2]);
  v90 = v69;
  if (SHIBYTE(v335.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v452, v335.__r_.__value_.__l.__data_, v335.__r_.__value_.__l.__size_);
  else
    v452 = v335;
  v451 = off_24C335B18;
  v454 = v337;
  v453 = v118;
  v455 = v338;
  v446 = (uint64_t (**)())off_24C335D90;
  v119 = SHIBYTE(v330.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v330.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v447, v330.__r_.__value_.__l.__data_, v330.__r_.__value_.__l.__size_);
  else
    v447 = v330;
  v446 = off_24C335B18;
  v449 = v332;
  v448 = v116;
  v450 = v333;
  v441 = (uint64_t (**)())off_24C335D90;
  v117 = SHIBYTE(v325.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v325.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v442, v325.__r_.__value_.__l.__data_, v325.__r_.__value_.__l.__size_);
  else
    v442 = v325;
  v441 = off_24C335B18;
  v444 = v327;
  v443 = v114;
  v445 = v328;
  v437 = (uint64_t (**)())off_24C335D90;
  v115 = SHIBYTE(v321.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v321.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v438, v321.__r_.__value_.__l.__data_, v321.__r_.__value_.__l.__size_);
  else
    v438 = v321;
  v439 = v112;
  v437 = off_24C335AF8;
  v440 = v110;
  v432 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v316.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v433, v316.__r_.__value_.__l.__data_, v316.__r_.__value_.__l.__size_);
  else
    v433 = v316;
  v434 = v317;
  v432 = &off_24C335AB8;
  v435 = v318;
  if (SHIBYTE(v319.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v436, v319.__r_.__value_.__l.__data_, v319.__r_.__value_.__l.__size_);
  else
    v436 = v319;
  v427 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v311.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v428, v311.__r_.__value_.__l.__data_, v311.__r_.__value_.__l.__size_);
  else
    v428 = v311;
  v429 = v312;
  v427 = &off_24C335AB8;
  v430 = v313;
  if (SHIBYTE(v314.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v431, v314.__r_.__value_.__l.__data_, v314.__r_.__value_.__l.__size_);
  else
    v431 = v314;
  v422 = (uint64_t (**)())off_24C335D90;
  v113 = SHIBYTE(v306.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v306.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v423, v306.__r_.__value_.__l.__data_, v306.__r_.__value_.__l.__size_);
  else
    v423 = v306;
  v422 = off_24C335B18;
  v425 = v308;
  v424 = v108;
  v426 = v309;
  v417 = (uint64_t (**)())off_24C335D90;
  v71 = SHIBYTE(v301.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v301.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v418, v301.__r_.__value_.__l.__data_, v301.__r_.__value_.__l.__size_);
  else
    v418 = v301;
  v417 = off_24C335B18;
  v420 = v303;
  v419 = v106;
  v421 = v304;
  v412 = (uint64_t (**)())off_24C335D90;
  v111 = SHIBYTE(v296.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v296.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v413, v296.__r_.__value_.__l.__data_, v296.__r_.__value_.__l.__size_);
  else
    v413 = v296;
  v412 = off_24C335B18;
  v415 = v298;
  v414 = v104;
  v416 = v299;
  v407 = (uint64_t (**)())off_24C335D90;
  v109 = SHIBYTE(v291.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v291.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v408, v291.__r_.__value_.__l.__data_, v291.__r_.__value_.__l.__size_);
  else
    v408 = v291;
  v407 = off_24C335B18;
  v410 = v293;
  v409 = v103;
  v411 = v294;
  v403 = (uint64_t (**)())off_24C335D90;
  v107 = SHIBYTE(v287.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v287.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v404, v287.__r_.__value_.__l.__data_, v287.__r_.__value_.__l.__size_);
  else
    v404 = v287;
  v405 = v102;
  v403 = off_24C335AF8;
  v406 = v101;
  v399 = (uint64_t (**)())off_24C335D90;
  v72 = SHIBYTE(v283.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v283.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v400, v283.__r_.__value_.__l.__data_, v283.__r_.__value_.__l.__size_);
  else
    v400 = v283;
  v105 = v72;
  v401 = v100;
  v399 = off_24C335AF8;
  v402 = v99;
  v394 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v278.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v395, v278.__r_.__value_.__l.__data_, v278.__r_.__value_.__l.__size_);
  else
    v395 = v278;
  v396 = v279;
  v394 = &off_24C335AB8;
  v397 = v280;
  v93 = v70;
  if (SHIBYTE(v281.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v398, v281.__r_.__value_.__l.__data_, v281.__r_.__value_.__l.__size_);
  else
    v398 = v281;
  v389 = (uint64_t (**)())off_24C335D90;
  v73 = SHIBYTE(v273.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v273.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v390, v273.__r_.__value_.__l.__data_, v273.__r_.__value_.__l.__size_);
  else
    v390 = v273;
  v389 = off_24C335B18;
  v392 = v275;
  v391 = v98;
  v393 = v276;
  v384 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v268.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v385, v268.__r_.__value_.__l.__data_, v268.__r_.__value_.__l.__size_);
  else
    v385 = v268;
  v386 = v269;
  v384 = &off_24C335AB8;
  v387 = v270;
  v91 = v71;
  if (SHIBYTE(v271.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v388, v271.__r_.__value_.__l.__data_, v271.__r_.__value_.__l.__size_);
  else
    v388 = v271;
  v379 = (uint64_t (**)())off_24C335D90;
  v74 = SHIBYTE(v263.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v263.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v380, v263.__r_.__value_.__l.__data_, v263.__r_.__value_.__l.__size_);
  else
    v380 = v263;
  v379 = off_24C335B18;
  v382 = v265;
  v381 = v97;
  v383 = v266;
  v374 = (uint64_t (**)())off_24C335D90;
  v75 = SHIBYTE(v258.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v258.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v375, v258.__r_.__value_.__l.__data_, v258.__r_.__value_.__l.__size_);
  else
    v375 = v258;
  v374 = off_24C335B18;
  v377 = v260;
  v376 = v96;
  v378 = v261;
  v369 = (uint64_t (**)())off_24C335D90;
  v76 = SHIBYTE(v253.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v253.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v370, v253.__r_.__value_.__l.__data_, v253.__r_.__value_.__l.__size_);
  else
    v370 = v253;
  v369 = off_24C335B18;
  v372 = v255;
  v371 = v95;
  v373 = v256;
  v364 = (uint64_t (**)())off_24C335D90;
  v77 = SHIBYTE(v248.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v248.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v248.__r_.__value_.__l.__data_, v248.__r_.__value_.__l.__size_);
  else
    __p = v248;
  v364 = off_24C335B18;
  v367 = v250;
  v366 = v94;
  v368 = v251;
  v359 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v243.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v360, v243.__r_.__value_.__l.__data_, v243.__r_.__value_.__l.__size_);
  else
    v360 = v243;
  v361 = v244;
  v359 = &off_24C335AB8;
  v362 = v245;
  if (SHIBYTE(v246.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v363, v246.__r_.__value_.__l.__data_, v246.__r_.__value_.__l.__size_);
  else
    v363 = v246;
  mediaplatform::DatabaseColumnTuple<35ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(v41, (uint64_t)&v466, (uint64_t)&v461, (uint64_t)&v456, (uint64_t)&v451, (uint64_t)&v446, (uint64_t)&v441, (uint64_t)&v437, (uint64_t)&v432, (uint64_t)&v427, (uint64_t)&v422, (uint64_t)&v417, (uint64_t)&v412, (uint64_t)&v407, (uint64_t)&v403, (uint64_t)&v399, (uint64_t)&v394, (uint64_t)&v389, (uint64_t)&v384,
    (uint64_t)&v379,
    (uint64_t)&v374,
    (uint64_t)&v369,
    (uint64_t)&v364,
    (uint64_t)&v359);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v359);
  v364 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v369 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v370.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v370.__r_.__value_.__l.__data_);
  v374 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v375.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v375.__r_.__value_.__l.__data_);
  v379 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v380.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v380.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v384);
  v389 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v390.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v390.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v394);
  v399 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v400.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v400.__r_.__value_.__l.__data_);
  v403 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v404.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v404.__r_.__value_.__l.__data_);
  v407 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v408.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v408.__r_.__value_.__l.__data_);
  v412 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v413.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v413.__r_.__value_.__l.__data_);
  v417 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v418.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v418.__r_.__value_.__l.__data_);
  v422 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v423.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v423.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v427);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v432);
  v437 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v438.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v438.__r_.__value_.__l.__data_);
  v441 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v442.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v442.__r_.__value_.__l.__data_);
  v446 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v447.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v447.__r_.__value_.__l.__data_);
  v451 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v452.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v452.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v456);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v461);
  v466 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v467.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v467.__r_.__value_.__l.__data_);
  *(_QWORD *)(v41 + 1216) = off_24C335D90;
  v78 = (std::string *)(v41 + 1224);
  v79 = SHIBYTE(v355.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v355.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v78, v355.__r_.__value_.__l.__data_, v355.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v78->__r_.__value_.__l.__data_ = *(_OWORD *)&v355.__r_.__value_.__l.__data_;
    *(_QWORD *)(v41 + 1240) = *((_QWORD *)&v355.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(v41 + 1248) = v356;
  *(_QWORD *)(v41 + 1216) = off_24C335B18;
  *(_QWORD *)(v41 + 1252) = v357;
  *(_DWORD *)(v41 + 1260) = v358;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v242);
  v247 = (uint64_t (**)())off_24C335D90;
  if (v77 < 0)
    operator delete(v248.__r_.__value_.__l.__data_);
  v252 = (uint64_t (**)())off_24C335D90;
  if (v76 < 0)
    operator delete(v253.__r_.__value_.__l.__data_);
  v257 = (uint64_t (**)())off_24C335D90;
  if (v75 < 0)
    operator delete(v258.__r_.__value_.__l.__data_);
  v262 = (uint64_t (**)())off_24C335D90;
  if (v74 < 0)
    operator delete(v263.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v267);
  v272 = (uint64_t (**)())off_24C335D90;
  if (v73 < 0)
    operator delete(v273.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v277);
  v282 = (uint64_t (**)())off_24C335D90;
  if (v105 < 0)
    operator delete(v283.__r_.__value_.__l.__data_);
  v286 = (uint64_t (**)())off_24C335D90;
  if (v107 < 0)
    operator delete(v287.__r_.__value_.__l.__data_);
  v290 = (uint64_t (**)())off_24C335D90;
  if (v109 < 0)
    operator delete(v291.__r_.__value_.__l.__data_);
  v295 = (uint64_t (**)())off_24C335D90;
  if (v111 < 0)
    operator delete(v296.__r_.__value_.__l.__data_);
  v300 = (uint64_t (**)())off_24C335D90;
  if (v91 < 0)
    operator delete(v301.__r_.__value_.__l.__data_);
  v305 = (uint64_t (**)())off_24C335D90;
  if (v113 < 0)
    operator delete(v306.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v310);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v315);
  v320 = (uint64_t (**)())off_24C335D90;
  if (v115 < 0)
    operator delete(v321.__r_.__value_.__l.__data_);
  v324 = (uint64_t (**)())off_24C335D90;
  if (v117 < 0)
    operator delete(v325.__r_.__value_.__l.__data_);
  v329 = (uint64_t (**)())off_24C335D90;
  if (v119 < 0)
    operator delete(v330.__r_.__value_.__l.__data_);
  v334 = (uint64_t (**)())off_24C335D90;
  if (v93 < 0)
    operator delete(v335.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v339);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v344);
  v349 = (uint64_t (**)())off_24C335D90;
  if (v90 < 0)
  {
    operator delete(v350.__r_.__value_.__l.__data_);
    if ((v79 & 0x80000000) == 0)
      goto LABEL_350;
  }
  else if ((v79 & 0x80000000) == 0)
  {
    goto LABEL_350;
  }
  operator delete(v355.__r_.__value_.__l.__data_);
LABEL_350:
  *(_QWORD *)(v41 + 1264) = off_24C335D90;
  if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)(v41 + 1272), v238.__r_.__value_.__l.__data_, v238.__r_.__value_.__l.__size_);
  else
    *(std::string *)(v41 + 1272) = v238;
  *(_DWORD *)(v41 + 1296) = v239;
  *(_QWORD *)(v41 + 1264) = &off_24C335AB8;
  *(_BYTE *)(v41 + 1300) = v240;
  v80 = (std::string *)(v41 + 1304);
  if (SHIBYTE(v241.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v80, v241.__r_.__value_.__l.__data_, v241.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v80->__r_.__value_.__l.__data_ = *(_OWORD *)&v241.__r_.__value_.__l.__data_;
    *(_QWORD *)(v41 + 1320) = *((_QWORD *)&v241.__r_.__value_.__l + 2);
  }
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v120);
  if (v85 < 0)
    operator delete(v126.__r_.__value_.__l.__data_);
  if (v86 < 0)
    operator delete(v131.__r_.__value_.__l.__data_);
  if (v87 < 0)
  {
    operator delete(v136.__r_.__value_.__l.__data_);
    if ((v88 & 0x80000000) == 0)
      goto LABEL_364;
  }
  else if ((v88 & 0x80000000) == 0)
  {
    goto LABEL_364;
  }
  operator delete(v141.__r_.__value_.__l.__data_);
LABEL_364:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v145);
  if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v151.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v155);
  if (SHIBYTE(v161.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v161.__r_.__value_.__l.__data_);
  if (SHIBYTE(v165.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v165.__r_.__value_.__l.__data_);
  if (SHIBYTE(v169.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v169.__r_.__value_.__l.__data_);
  if (SHIBYTE(v174.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v174.__r_.__value_.__l.__data_);
  if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v179.__r_.__value_.__l.__data_);
  if (SHIBYTE(v184.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v184.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v188);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v193);
  if (SHIBYTE(v199.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v199.__r_.__value_.__l.__data_);
  if (SHIBYTE(v203.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v203.__r_.__value_.__l.__data_);
  if (SHIBYTE(v208.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v208.__r_.__value_.__l.__data_);
  if (SHIBYTE(v213.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v213.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v217);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v222);
  if (SHIBYTE(v228.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v228.__r_.__value_.__l.__data_);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__s.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v237);
  *(_QWORD *)(v41 + 1328) = off_24C335D90;
  v81 = (std::string *)(v41 + 1336);
  if (*(char *)(v89 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v81, *(const std::string::value_type **)(v89 + 8), *(_QWORD *)(v89 + 16));
  }
  else
  {
    v82 = *(_OWORD *)(v89 + 8);
    *(_QWORD *)(v41 + 1352) = *(_QWORD *)(v89 + 24);
    *(_OWORD *)&v81->__r_.__value_.__l.__data_ = v82;
  }
  *(_DWORD *)(v41 + 1360) = *(_DWORD *)(v89 + 32);
  *(_QWORD *)(v41 + 1328) = off_24C335B18;
  v83 = *(_QWORD *)(v89 + 36);
  *(_DWORD *)(v41 + 1372) = *(_DWORD *)(v89 + 44);
  *(_QWORD *)(v41 + 1364) = v83;
  return v41;
}

void sub_20A8B2EC0(_Unwind_Exception *a1)
{
  uint64_t v1;

  mediaplatform::DatabaseColumnTuple<33ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(v1);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<32ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 1328) = off_24C335D90;
  if (*(char *)(a1 + 1359) < 0)
    operator delete(*(void **)(a1 + 1336));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1264);
  *(_QWORD *)(a1 + 1216) = off_24C335D90;
  if (*(char *)(a1 + 1247) < 0)
    operator delete(*(void **)(a1 + 1224));
  *(_QWORD *)(a1 + 1168) = off_24C335D90;
  if (*(char *)(a1 + 1199) < 0)
    operator delete(*(void **)(a1 + 1176));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1104);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1040);
  return mediaplatform::DatabaseColumnTuple<38ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<33ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1264);
  *(_QWORD *)(a1 + 1216) = off_24C335D90;
  if (*(char *)(a1 + 1247) < 0)
    operator delete(*(void **)(a1 + 1224));
  *(_QWORD *)(a1 + 1168) = off_24C335D90;
  if (*(char *)(a1 + 1199) < 0)
    operator delete(*(void **)(a1 + 1176));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1104);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1040);
  return mediaplatform::DatabaseColumnTuple<38ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<34ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 1216) = off_24C335D90;
  if (*(char *)(a1 + 1247) < 0)
    operator delete(*(void **)(a1 + 1224));
  *(_QWORD *)(a1 + 1168) = off_24C335D90;
  if (*(char *)(a1 + 1199) < 0)
    operator delete(*(void **)(a1 + 1176));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1104);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1040);
  return mediaplatform::DatabaseColumnTuple<38ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<35ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  std::string *v60;
  std::string *v61;
  std::string *v62;
  __int128 v63;
  uint64_t v64;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  uint64_t v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  uint64_t (**v102)();
  std::string v103;
  int v104;
  char v105;
  std::string v106;
  uint64_t (**v107)();
  std::string v108;
  int v109;
  uint64_t v110;
  int v111;
  uint64_t (**v112)();
  std::string v113;
  int v114;
  uint64_t v115;
  int v116;
  uint64_t (**v117)();
  std::string v118;
  int v119;
  uint64_t v120;
  int v121;
  uint64_t (**v122)();
  std::string v123;
  int v124;
  uint64_t v125;
  int v126;
  uint64_t (**v127)();
  std::string v128;
  int v129;
  char v130;
  std::string v131;
  uint64_t (**v132)();
  std::string v133;
  int v134;
  uint64_t v135;
  int v136;
  uint64_t (**v137)();
  std::string v138;
  int v139;
  char v140;
  std::string v141;
  uint64_t (**v142)();
  std::string v143;
  int v144;
  uint64_t v145;
  uint64_t (**v146)();
  std::string v147;
  int v148;
  uint64_t v149;
  uint64_t (**v150)();
  std::string v151;
  int v152;
  uint64_t v153;
  int v154;
  uint64_t (**v155)();
  std::string v156;
  int v157;
  uint64_t v158;
  int v159;
  uint64_t (**v160)();
  std::string v161;
  int v162;
  uint64_t v163;
  int v164;
  uint64_t (**v165)();
  std::string v166;
  int v167;
  uint64_t v168;
  int v169;
  uint64_t (**v170)();
  std::string v171;
  int v172;
  char v173;
  std::string v174;
  uint64_t (**v175)();
  std::string v176;
  int v177;
  char v178;
  std::string v179;
  uint64_t (**v180)();
  std::string v181;
  int v182;
  uint64_t v183;
  uint64_t (**v184)();
  std::string v185;
  int v186;
  uint64_t v187;
  int v188;
  uint64_t (**v189)();
  std::string v190;
  int v191;
  uint64_t v192;
  int v193;
  uint64_t (**v194)();
  std::string v195;
  int v196;
  uint64_t v197;
  int v198;
  uint64_t (**v199)();
  std::string __s;
  int v201;
  char v202;
  std::string v203;
  uint64_t (**v204)();
  std::string v205;
  int v206;
  char v207;
  std::string v208;
  uint64_t (**v209)();
  std::string v210;
  int v211;
  char v212;
  std::string v213;
  uint64_t (**v214)();
  std::string v215;
  int v216;
  uint64_t v217;
  int v218;
  uint64_t (**v219)();
  std::string v220;
  int v221;
  uint64_t v222;
  int v223;
  uint64_t (**v224)();
  std::string v225;
  int v226;
  uint64_t v227;
  int v228;
  uint64_t (**v229)();
  std::string v230;
  int v231;
  uint64_t v232;
  int v233;
  uint64_t (**v234)();
  std::string v235;
  int v236;
  char v237;
  std::string v238;
  uint64_t (**v239)();
  std::string v240;
  int v241;
  uint64_t v242;
  int v243;
  uint64_t (**v244)();
  std::string v245;
  int v246;
  char v247;
  std::string v248;
  uint64_t (**v249)();
  std::string v250;
  int v251;
  uint64_t v252;
  uint64_t (**v253)();
  std::string v254;
  int v255;
  uint64_t v256;
  uint64_t (**v257)();
  std::string v258;
  int v259;
  uint64_t v260;
  int v261;
  uint64_t (**v262)();
  std::string v263;
  int v264;
  uint64_t v265;
  int v266;
  uint64_t (**v267)();
  std::string v268;
  int v269;
  uint64_t v270;
  int v271;
  uint64_t (**v272)();
  std::string v273;
  int v274;
  uint64_t v275;
  int v276;
  uint64_t (**v277)();
  std::string v278;
  int v279;
  char v280;
  std::string v281;
  uint64_t (**v282)();
  std::string v283;
  int v284;
  char v285;
  std::string v286;
  uint64_t (**v287)();
  std::string v288;
  int v289;
  uint64_t v290;
  uint64_t (**v291)();
  std::string v292;
  int v293;
  uint64_t v294;
  int v295;
  uint64_t (**v296)();
  std::string v297;
  int v298;
  uint64_t v299;
  int v300;
  uint64_t (**v301)();
  std::string v302;
  int v303;
  uint64_t v304;
  int v305;
  uint64_t (**v306)();
  std::string v307;
  int v308;
  char v309;
  std::string v310;
  uint64_t (**v311)();
  std::string v312;
  int v313;
  char v314;
  std::string v315;
  uint64_t (**v316)();
  std::string __p;
  int v318;
  uint64_t v319;
  int v320;
  uint64_t (**v321)();
  std::string v322;
  int v323;
  uint64_t v324;
  int v325;
  uint64_t (**v326)();
  std::string v327;
  int v328;
  uint64_t v329;
  int v330;
  uint64_t (**v331)();
  std::string v332;
  int v333;
  uint64_t v334;
  int v335;
  uint64_t (**v336)();
  std::string v337;
  int v338;
  char v339;
  std::string v340;
  uint64_t (**v341)();
  std::string v342;
  int v343;
  uint64_t v344;
  int v345;
  uint64_t (**v346)();
  std::string v347;
  int v348;
  char v349;
  std::string v350;
  uint64_t (**v351)();
  std::string v352;
  int v353;
  uint64_t v354;
  uint64_t (**v355)();
  std::string v356;
  int v357;
  uint64_t v358;
  uint64_t (**v359)();
  std::string v360;
  int v361;
  uint64_t v362;
  int v363;
  uint64_t (**v364)();
  std::string v365;
  int v366;
  uint64_t v367;
  int v368;
  uint64_t (**v369)();
  std::string v370;
  int v371;
  uint64_t v372;
  int v373;
  uint64_t (**v374)();
  std::string v375;
  int v376;
  uint64_t v377;
  int v378;
  uint64_t (**v379)();
  std::string v380;
  int v381;
  char v382;
  std::string v383;
  uint64_t (**v384)();
  std::string v385;
  int v386;
  char v387;
  std::string v388;
  uint64_t (**v389)();
  std::string v390;
  int v391;
  uint64_t v392;
  uint64_t (**v393)();
  std::string v394;
  int v395;
  uint64_t v396;
  int v397;
  uint64_t (**v398)();
  std::string v399;
  int v400;
  uint64_t v401;
  int v402;
  uint64_t (**v403)();
  std::string v404;
  int v405;
  uint64_t v406;
  int v407;

  v204 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a3 + 31) < 0)
    std::string::__init_copy_ctor_external(&v205, *(const std::string::value_type **)(a3 + 8), *(_QWORD *)(a3 + 16));
  else
    v205 = *(std::string *)(a3 + 8);
  v206 = *(_DWORD *)(a3 + 32);
  v204 = &off_24C335AB8;
  v207 = *(_BYTE *)(a3 + 36);
  if (*(char *)(a3 + 63) < 0)
    std::string::__init_copy_ctor_external(&v208, *(const std::string::value_type **)(a3 + 40), *(_QWORD *)(a3 + 48));
  else
    v208 = *(std::string *)(a3 + 40);
  v199 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a4 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(a4 + 8), *(_QWORD *)(a4 + 16));
  else
    __s = *(std::string *)(a4 + 8);
  v201 = *(_DWORD *)(a4 + 32);
  v199 = &off_24C335AB8;
  v202 = *(_BYTE *)(a4 + 36);
  if (*(char *)(a4 + 63) < 0)
    std::string::__init_copy_ctor_external(&v203, *(const std::string::value_type **)(a4 + 40), *(_QWORD *)(a4 + 48));
  else
    v203 = *(std::string *)(a4 + 40);
  if (*(char *)(a5 + 31) < 0)
    std::string::__init_copy_ctor_external(&v195, *(const std::string::value_type **)(a5 + 8), *(_QWORD *)(a5 + 16));
  else
    v195 = *(std::string *)(a5 + 8);
  v30 = *(_DWORD *)(a5 + 32);
  v194 = off_24C335B18;
  v197 = *(_QWORD *)(a5 + 36);
  v31 = *(_DWORD *)(a5 + 44);
  v100 = v30;
  v196 = v30;
  v198 = v31;
  if (*(char *)(a6 + 31) < 0)
    std::string::__init_copy_ctor_external(&v190, *(const std::string::value_type **)(a6 + 8), *(_QWORD *)(a6 + 16));
  else
    v190 = *(std::string *)(a6 + 8);
  v32 = *(_DWORD *)(a6 + 32);
  v189 = off_24C335B18;
  v192 = *(_QWORD *)(a6 + 36);
  v33 = *(_DWORD *)(a6 + 44);
  v96 = v32;
  v191 = v32;
  v193 = v33;
  if (*(char *)(a7 + 31) < 0)
    std::string::__init_copy_ctor_external(&v185, *(const std::string::value_type **)(a7 + 8), *(_QWORD *)(a7 + 16));
  else
    v185 = *(std::string *)(a7 + 8);
  v34 = *(_DWORD *)(a7 + 32);
  v184 = off_24C335B18;
  v187 = *(_QWORD *)(a7 + 36);
  v35 = *(_DWORD *)(a7 + 44);
  v98 = v34;
  v186 = v34;
  v188 = v35;
  if (*(char *)(a8 + 31) < 0)
    std::string::__init_copy_ctor_external(&v181, *(const std::string::value_type **)(a8 + 8), *(_QWORD *)(a8 + 16));
  else
    v181 = *(std::string *)(a8 + 8);
  v94 = *(_DWORD *)(a8 + 32);
  v182 = v94;
  v180 = off_24C335AF8;
  v92 = *(_QWORD *)(a8 + 36);
  v183 = v92;
  v175 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v176, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v176 = *(std::string *)(a9 + 8);
  v177 = *(_DWORD *)(a9 + 32);
  v175 = &off_24C335AB8;
  v178 = *(_BYTE *)(a9 + 36);
  if (*(char *)(a9 + 63) < 0)
    std::string::__init_copy_ctor_external(&v179, *(const std::string::value_type **)(a9 + 40), *(_QWORD *)(a9 + 48));
  else
    v179 = *(std::string *)(a9 + 40);
  v170 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v171, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v171 = *(std::string *)(a10 + 8);
  v172 = *(_DWORD *)(a10 + 32);
  v170 = &off_24C335AB8;
  v173 = *(_BYTE *)(a10 + 36);
  if (*(char *)(a10 + 63) < 0)
    std::string::__init_copy_ctor_external(&v174, *(const std::string::value_type **)(a10 + 40), *(_QWORD *)(a10 + 48));
  else
    v174 = *(std::string *)(a10 + 40);
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v166, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v166 = *(std::string *)(a11 + 8);
  v36 = *(_DWORD *)(a11 + 32);
  v165 = off_24C335B18;
  v168 = *(_QWORD *)(a11 + 36);
  v37 = *(_DWORD *)(a11 + 44);
  v90 = v36;
  v167 = v36;
  v169 = v37;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v161, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v161 = *(std::string *)(a12 + 8);
  v38 = *(_DWORD *)(a12 + 32);
  v160 = off_24C335B18;
  v163 = *(_QWORD *)(a12 + 36);
  v39 = *(_DWORD *)(a12 + 44);
  v88 = v38;
  v162 = v38;
  v164 = v39;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v156, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v156 = *(std::string *)(a13 + 8);
  v40 = *(_DWORD *)(a13 + 32);
  v155 = off_24C335B18;
  v158 = *(_QWORD *)(a13 + 36);
  v41 = *(_DWORD *)(a13 + 44);
  v87 = v40;
  v157 = v40;
  v159 = v41;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v151, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v151 = *(std::string *)(a14 + 8);
  v42 = *(_DWORD *)(a14 + 32);
  v150 = off_24C335B18;
  v153 = *(_QWORD *)(a14 + 36);
  v43 = *(_DWORD *)(a14 + 44);
  v86 = v42;
  v152 = v42;
  v154 = v43;
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v147, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v147 = *(std::string *)(a15 + 8);
  v85 = *(_DWORD *)(a15 + 32);
  v148 = v85;
  v146 = off_24C335AF8;
  v84 = *(_QWORD *)(a15 + 36);
  v149 = v84;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v143, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v143 = *(std::string *)(a16 + 8);
  v83 = *(_DWORD *)(a16 + 32);
  v144 = v83;
  v142 = off_24C335AF8;
  v82 = *(_QWORD *)(a16 + 36);
  v145 = v82;
  v137 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v138, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v138 = *(std::string *)(a17 + 8);
  v139 = *(_DWORD *)(a17 + 32);
  v137 = &off_24C335AB8;
  v140 = *(_BYTE *)(a17 + 36);
  if (*(char *)(a17 + 63) < 0)
    std::string::__init_copy_ctor_external(&v141, *(const std::string::value_type **)(a17 + 40), *(_QWORD *)(a17 + 48));
  else
    v141 = *(std::string *)(a17 + 40);
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v133, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v133 = *(std::string *)(a18 + 8);
  v44 = *(_DWORD *)(a18 + 32);
  v132 = off_24C335B18;
  v135 = *(_QWORD *)(a18 + 36);
  v45 = *(_DWORD *)(a18 + 44);
  v81 = v44;
  v134 = v44;
  v136 = v45;
  v127 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v128, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v128 = *(std::string *)(a19 + 8);
  v129 = *(_DWORD *)(a19 + 32);
  v127 = &off_24C335AB8;
  v130 = *(_BYTE *)(a19 + 36);
  if (*(char *)(a19 + 63) < 0)
    std::string::__init_copy_ctor_external(&v131, *(const std::string::value_type **)(a19 + 40), *(_QWORD *)(a19 + 48));
  else
    v131 = *(std::string *)(a19 + 40);
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v123, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v123 = *(std::string *)(a20 + 8);
  v46 = *(_DWORD *)(a20 + 32);
  v122 = off_24C335B18;
  v125 = *(_QWORD *)(a20 + 36);
  v47 = *(_DWORD *)(a20 + 44);
  v80 = v46;
  v124 = v46;
  v126 = v47;
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v118, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v118 = *(std::string *)(a21 + 8);
  v48 = *(_DWORD *)(a21 + 32);
  v117 = off_24C335B18;
  v120 = *(_QWORD *)(a21 + 36);
  v49 = *(_DWORD *)(a21 + 44);
  v79 = v48;
  v119 = v48;
  v121 = v49;
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v113, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v113 = *(std::string *)(a22 + 8);
  v50 = *(_DWORD *)(a22 + 32);
  v112 = off_24C335B18;
  v115 = *(_QWORD *)(a22 + 36);
  v51 = *(_DWORD *)(a22 + 44);
  v78 = v50;
  v114 = v50;
  v116 = v51;
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v108, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v108 = *(std::string *)(a23 + 8);
  v77 = *(_DWORD *)(a23 + 32);
  v109 = v77;
  v107 = off_24C335B18;
  v110 = *(_QWORD *)(a23 + 36);
  v111 = *(_DWORD *)(a23 + 44);
  v102 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v103, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v103 = *(std::string *)(a24 + 8);
  v104 = *(_DWORD *)(a24 + 32);
  v102 = &off_24C335AB8;
  v105 = *(_BYTE *)(a24 + 36);
  if (*(char *)(a24 + 63) < 0)
    std::string::__init_copy_ctor_external(&v106, *(const std::string::value_type **)(a24 + 40), *(_QWORD *)(a24 + 48));
  else
    v106 = *(std::string *)(a24 + 40);
  v306 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v307, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v307 = __s;
  v308 = v201;
  v306 = &off_24C335AB8;
  v309 = v202;
  if (SHIBYTE(v203.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v310, v203.__r_.__value_.__l.__data_, v203.__r_.__value_.__l.__size_);
  else
    v310 = v203;
  if (SHIBYTE(v195.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v302, v195.__r_.__value_.__l.__data_, v195.__r_.__value_.__l.__size_);
  else
    v302 = v195;
  v301 = off_24C335B18;
  v304 = v197;
  v303 = v100;
  v305 = v198;
  if (SHIBYTE(v190.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v297, v190.__r_.__value_.__l.__data_, v190.__r_.__value_.__l.__size_);
  else
    v297 = v190;
  v296 = off_24C335B18;
  v299 = v192;
  v298 = v96;
  v300 = v193;
  if (SHIBYTE(v185.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v292, v185.__r_.__value_.__l.__data_, v185.__r_.__value_.__l.__size_);
  else
    v292 = v185;
  v291 = off_24C335B18;
  v294 = v187;
  v293 = v98;
  v295 = v188;
  if (SHIBYTE(v181.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v288, v181.__r_.__value_.__l.__data_, v181.__r_.__value_.__l.__size_);
  else
    v288 = v181;
  v289 = v94;
  v287 = off_24C335AF8;
  v290 = v92;
  v282 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v176.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v283, v176.__r_.__value_.__l.__data_, v176.__r_.__value_.__l.__size_);
  else
    v283 = v176;
  v284 = v177;
  v282 = &off_24C335AB8;
  v285 = v178;
  if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v286, v179.__r_.__value_.__l.__data_, v179.__r_.__value_.__l.__size_);
  else
    v286 = v179;
  v277 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v171.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v278, v171.__r_.__value_.__l.__data_, v171.__r_.__value_.__l.__size_);
  else
    v278 = v171;
  v279 = v172;
  v277 = &off_24C335AB8;
  v280 = v173;
  if (SHIBYTE(v174.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v281, v174.__r_.__value_.__l.__data_, v174.__r_.__value_.__l.__size_);
  else
    v281 = v174;
  if (SHIBYTE(v166.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v273, v166.__r_.__value_.__l.__data_, v166.__r_.__value_.__l.__size_);
  else
    v273 = v166;
  v272 = off_24C335B18;
  v275 = v168;
  v274 = v90;
  v276 = v169;
  if (SHIBYTE(v161.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v268, v161.__r_.__value_.__l.__data_, v161.__r_.__value_.__l.__size_);
  else
    v268 = v161;
  v267 = off_24C335B18;
  v270 = v163;
  v269 = v88;
  v271 = v164;
  if (SHIBYTE(v156.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v263, v156.__r_.__value_.__l.__data_, v156.__r_.__value_.__l.__size_);
  else
    v263 = v156;
  v262 = off_24C335B18;
  v265 = v158;
  v264 = v87;
  v266 = v159;
  if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v258, v151.__r_.__value_.__l.__data_, v151.__r_.__value_.__l.__size_);
  else
    v258 = v151;
  v257 = off_24C335B18;
  v260 = v153;
  v259 = v86;
  v261 = v154;
  v52 = SHIBYTE(v147.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v147.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v254, v147.__r_.__value_.__l.__data_, v147.__r_.__value_.__l.__size_);
  else
    v254 = v147;
  v255 = v85;
  v253 = off_24C335AF8;
  v256 = v84;
  v73 = SHIBYTE(v143.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v250, v143.__r_.__value_.__l.__data_, v143.__r_.__value_.__l.__size_);
  else
    v250 = v143;
  v251 = v83;
  v249 = off_24C335AF8;
  v252 = v82;
  v244 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v245, v138.__r_.__value_.__l.__data_, v138.__r_.__value_.__l.__size_);
  else
    v245 = v138;
  v246 = v139;
  v244 = &off_24C335AB8;
  v247 = v140;
  if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v248, v141.__r_.__value_.__l.__data_, v141.__r_.__value_.__l.__size_);
  else
    v248 = v141;
  v239 = (uint64_t (**)())off_24C335D90;
  v72 = SHIBYTE(v133.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v133.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v240, v133.__r_.__value_.__l.__data_, v133.__r_.__value_.__l.__size_);
  else
    v240 = v133;
  v239 = off_24C335B18;
  v242 = v135;
  v241 = v81;
  v243 = v136;
  v234 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v128.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v235, v128.__r_.__value_.__l.__data_, v128.__r_.__value_.__l.__size_);
  else
    v235 = v128;
  v236 = v129;
  v234 = &off_24C335AB8;
  v237 = v130;
  if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v238, v131.__r_.__value_.__l.__data_, v131.__r_.__value_.__l.__size_);
  else
    v238 = v131;
  v229 = (uint64_t (**)())off_24C335D90;
  v70 = SHIBYTE(v123.__r_.__value_.__r.__words[2]);
  v71 = v52;
  if (SHIBYTE(v123.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v230, v123.__r_.__value_.__l.__data_, v123.__r_.__value_.__l.__size_);
  else
    v230 = v123;
  v229 = off_24C335B18;
  v232 = v125;
  v231 = v80;
  v233 = v126;
  v224 = (uint64_t (**)())off_24C335D90;
  v69 = SHIBYTE(v118.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v118.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v225, v118.__r_.__value_.__l.__data_, v118.__r_.__value_.__l.__size_);
  else
    v225 = v118;
  v224 = off_24C335B18;
  v227 = v120;
  v226 = v79;
  v228 = v121;
  v219 = (uint64_t (**)())off_24C335D90;
  v68 = SHIBYTE(v113.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v113.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v220, v113.__r_.__value_.__l.__data_, v113.__r_.__value_.__l.__size_);
  else
    v220 = v113;
  v219 = off_24C335B18;
  v222 = v115;
  v221 = v78;
  v223 = v116;
  v214 = (uint64_t (**)())off_24C335D90;
  v67 = SHIBYTE(v108.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v108.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v215, v108.__r_.__value_.__l.__data_, v108.__r_.__value_.__l.__size_);
  else
    v215 = v108;
  v214 = off_24C335B18;
  v217 = v110;
  v216 = v77;
  v218 = v111;
  v209 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v210, v103.__r_.__value_.__l.__data_, v103.__r_.__value_.__l.__size_);
  else
    v210 = v103;
  v211 = v104;
  v209 = &off_24C335AB8;
  v212 = v105;
  if (SHIBYTE(v106.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v213, v106.__r_.__value_.__l.__data_, v106.__r_.__value_.__l.__size_);
  else
    v213 = v106;
  v403 = (uint64_t (**)())off_24C335D90;
  v66 = SHIBYTE(v302.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v302.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v404, v302.__r_.__value_.__l.__data_, v302.__r_.__value_.__l.__size_);
  else
    v404 = v302;
  v403 = off_24C335B18;
  v406 = v304;
  v405 = v100;
  v407 = v305;
  v398 = (uint64_t (**)())off_24C335D90;
  v101 = SHIBYTE(v297.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v297.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v399, v297.__r_.__value_.__l.__data_, v297.__r_.__value_.__l.__size_);
  else
    v399 = v297;
  v398 = off_24C335B18;
  v401 = v299;
  v400 = v96;
  v402 = v300;
  v393 = (uint64_t (**)())off_24C335D90;
  v97 = SHIBYTE(v292.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v292.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v394, v292.__r_.__value_.__l.__data_, v292.__r_.__value_.__l.__size_);
  else
    v394 = v292;
  v393 = off_24C335B18;
  v396 = v294;
  v395 = v98;
  v397 = v295;
  v389 = (uint64_t (**)())off_24C335D90;
  v99 = SHIBYTE(v288.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v288.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v390, v288.__r_.__value_.__l.__data_, v288.__r_.__value_.__l.__size_);
  else
    v390 = v288;
  v391 = v94;
  v389 = off_24C335AF8;
  v392 = v92;
  v384 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v283.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v385, v283.__r_.__value_.__l.__data_, v283.__r_.__value_.__l.__size_);
  else
    v385 = v283;
  v386 = v284;
  v384 = &off_24C335AB8;
  v387 = v285;
  if (SHIBYTE(v286.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v388, v286.__r_.__value_.__l.__data_, v286.__r_.__value_.__l.__size_);
  else
    v388 = v286;
  v379 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v278.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v380, v278.__r_.__value_.__l.__data_, v278.__r_.__value_.__l.__size_);
  else
    v380 = v278;
  v381 = v279;
  v379 = &off_24C335AB8;
  v382 = v280;
  if (SHIBYTE(v281.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v383, v281.__r_.__value_.__l.__data_, v281.__r_.__value_.__l.__size_);
  else
    v383 = v281;
  v374 = (uint64_t (**)())off_24C335D90;
  v53 = SHIBYTE(v273.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v273.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v375, v273.__r_.__value_.__l.__data_, v273.__r_.__value_.__l.__size_);
  else
    v375 = v273;
  v374 = off_24C335B18;
  v377 = v275;
  v376 = v90;
  v378 = v276;
  v369 = (uint64_t (**)())off_24C335D90;
  v95 = SHIBYTE(v268.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v268.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v370, v268.__r_.__value_.__l.__data_, v268.__r_.__value_.__l.__size_);
  else
    v370 = v268;
  v369 = off_24C335B18;
  v372 = v270;
  v371 = v88;
  v373 = v271;
  v364 = (uint64_t (**)())off_24C335D90;
  v93 = SHIBYTE(v263.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v263.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v365, v263.__r_.__value_.__l.__data_, v263.__r_.__value_.__l.__size_);
  else
    v365 = v263;
  v364 = off_24C335B18;
  v367 = v265;
  v366 = v87;
  v368 = v266;
  v359 = (uint64_t (**)())off_24C335D90;
  v54 = SHIBYTE(v258.__r_.__value_.__r.__words[2]);
  v74 = v53;
  if (SHIBYTE(v258.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v360, v258.__r_.__value_.__l.__data_, v258.__r_.__value_.__l.__size_);
  else
    v360 = v258;
  v359 = off_24C335B18;
  v362 = v260;
  v361 = v86;
  v363 = v261;
  v355 = (uint64_t (**)())off_24C335D90;
  v91 = SHIBYTE(v254.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v254.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v356, v254.__r_.__value_.__l.__data_, v254.__r_.__value_.__l.__size_);
  else
    v356 = v254;
  v357 = v85;
  v355 = off_24C335AF8;
  v358 = v84;
  v351 = (uint64_t (**)())off_24C335D90;
  v89 = SHIBYTE(v250.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v250.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v352, v250.__r_.__value_.__l.__data_, v250.__r_.__value_.__l.__size_);
  else
    v352 = v250;
  v353 = v83;
  v351 = off_24C335AF8;
  v354 = v82;
  v346 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v245.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v347, v245.__r_.__value_.__l.__data_, v245.__r_.__value_.__l.__size_);
  else
    v347 = v245;
  v348 = v246;
  v346 = &off_24C335AB8;
  v349 = v247;
  if (SHIBYTE(v248.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v350, v248.__r_.__value_.__l.__data_, v248.__r_.__value_.__l.__size_);
  else
    v350 = v248;
  v341 = (uint64_t (**)())off_24C335D90;
  v55 = SHIBYTE(v240.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v240.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v342, v240.__r_.__value_.__l.__data_, v240.__r_.__value_.__l.__size_);
  else
    v342 = v240;
  v341 = off_24C335B18;
  v344 = v242;
  v343 = v81;
  v345 = v243;
  v336 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v235.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v337, v235.__r_.__value_.__l.__data_, v235.__r_.__value_.__l.__size_);
  else
    v337 = v235;
  v338 = v236;
  v336 = &off_24C335AB8;
  v339 = v237;
  if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v340, v238.__r_.__value_.__l.__data_, v238.__r_.__value_.__l.__size_);
  else
    v340 = v238;
  v331 = (uint64_t (**)())off_24C335D90;
  v56 = SHIBYTE(v230.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v230.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v332, v230.__r_.__value_.__l.__data_, v230.__r_.__value_.__l.__size_);
  else
    v332 = v230;
  v331 = off_24C335B18;
  v334 = v232;
  v333 = v80;
  v335 = v233;
  v326 = (uint64_t (**)())off_24C335D90;
  v57 = SHIBYTE(v225.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v225.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v327, v225.__r_.__value_.__l.__data_, v225.__r_.__value_.__l.__size_);
  else
    v327 = v225;
  v326 = off_24C335B18;
  v329 = v227;
  v328 = v79;
  v330 = v228;
  v321 = (uint64_t (**)())off_24C335D90;
  v58 = SHIBYTE(v220.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v220.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v322, v220.__r_.__value_.__l.__data_, v220.__r_.__value_.__l.__size_);
  else
    v322 = v220;
  v321 = off_24C335B18;
  v324 = v222;
  v323 = v78;
  v325 = v223;
  v316 = (uint64_t (**)())off_24C335D90;
  v59 = SHIBYTE(v215.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v215.__r_.__value_.__l.__data_, v215.__r_.__value_.__l.__size_);
  else
    __p = v215;
  v316 = off_24C335B18;
  v319 = v217;
  v318 = v77;
  v320 = v218;
  v311 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v210.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v312, v210.__r_.__value_.__l.__data_, v210.__r_.__value_.__l.__size_);
  else
    v312 = v210;
  v313 = v211;
  v311 = &off_24C335AB8;
  v314 = v212;
  if (SHIBYTE(v213.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v315, v213.__r_.__value_.__l.__data_, v213.__r_.__value_.__l.__size_);
  else
    v315 = v213;
  mediaplatform::DatabaseColumnTuple<38ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(a1, (uint64_t)&v403, (uint64_t)&v398, (uint64_t)&v393, (uint64_t)&v389, (uint64_t)&v384, (uint64_t)&v379, (uint64_t)&v374, (uint64_t)&v369, (uint64_t)&v364, (uint64_t)&v359, (uint64_t)&v355, (uint64_t)&v351, (uint64_t)&v346, (uint64_t)&v341, (uint64_t)&v336, (uint64_t)&v331, (uint64_t)&v326, (uint64_t)&v321,
    (uint64_t)&v316,
    (uint64_t)&v311);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v311);
  v316 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v321 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v322.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v322.__r_.__value_.__l.__data_);
  v326 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v327.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v327.__r_.__value_.__l.__data_);
  v331 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v332.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v332.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v336);
  v341 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v342.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v342.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v346);
  v351 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v352.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v352.__r_.__value_.__l.__data_);
  v355 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v356.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v356.__r_.__value_.__l.__data_);
  v359 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v360.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v360.__r_.__value_.__l.__data_);
  v364 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v365.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v365.__r_.__value_.__l.__data_);
  v369 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v370.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v370.__r_.__value_.__l.__data_);
  v374 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v375.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v375.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v379);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v384);
  v389 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v390.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v390.__r_.__value_.__l.__data_);
  v393 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v394.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v394.__r_.__value_.__l.__data_);
  v398 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v399.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v399.__r_.__value_.__l.__data_);
  v403 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v404.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v404.__r_.__value_.__l.__data_);
  *(_QWORD *)(a1 + 1040) = off_24C335D90;
  if (SHIBYTE(v307.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)(a1 + 1048), v307.__r_.__value_.__l.__data_, v307.__r_.__value_.__l.__size_);
  else
    *(std::string *)(a1 + 1048) = v307;
  *(_DWORD *)(a1 + 1072) = v308;
  *(_QWORD *)(a1 + 1040) = &off_24C335AB8;
  *(_BYTE *)(a1 + 1076) = v309;
  v60 = (std::string *)(a1 + 1080);
  if (SHIBYTE(v310.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v60, v310.__r_.__value_.__l.__data_, v310.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v60->__r_.__value_.__l.__data_ = *(_OWORD *)&v310.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 1096) = *((_QWORD *)&v310.__r_.__value_.__l + 2);
  }
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v209);
  v214 = (uint64_t (**)())off_24C335D90;
  if (v59 < 0)
    operator delete(v215.__r_.__value_.__l.__data_);
  v219 = (uint64_t (**)())off_24C335D90;
  if (v58 < 0)
    operator delete(v220.__r_.__value_.__l.__data_);
  v224 = (uint64_t (**)())off_24C335D90;
  if (v57 < 0)
    operator delete(v225.__r_.__value_.__l.__data_);
  v229 = (uint64_t (**)())off_24C335D90;
  if (v56 < 0)
    operator delete(v230.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v234);
  v239 = (uint64_t (**)())off_24C335D90;
  if (v55 < 0)
    operator delete(v240.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v244);
  v249 = (uint64_t (**)())off_24C335D90;
  if (v89 < 0)
    operator delete(v250.__r_.__value_.__l.__data_);
  v253 = (uint64_t (**)())off_24C335D90;
  if (v91 < 0)
    operator delete(v254.__r_.__value_.__l.__data_);
  v257 = (uint64_t (**)())off_24C335D90;
  if (v54 < 0)
    operator delete(v258.__r_.__value_.__l.__data_);
  v262 = (uint64_t (**)())off_24C335D90;
  if (v93 < 0)
    operator delete(v263.__r_.__value_.__l.__data_);
  v267 = (uint64_t (**)())off_24C335D90;
  if (v95 < 0)
    operator delete(v268.__r_.__value_.__l.__data_);
  v272 = (uint64_t (**)())off_24C335D90;
  if (v74 < 0)
    operator delete(v273.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v277);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v282);
  v287 = (uint64_t (**)())off_24C335D90;
  if (v99 < 0)
    operator delete(v288.__r_.__value_.__l.__data_);
  v291 = (uint64_t (**)())off_24C335D90;
  if (v97 < 0)
    operator delete(v292.__r_.__value_.__l.__data_);
  v296 = (uint64_t (**)())off_24C335D90;
  if (v101 < 0)
    operator delete(v297.__r_.__value_.__l.__data_);
  v301 = (uint64_t (**)())off_24C335D90;
  if (v66 < 0)
    operator delete(v302.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v306);
  *(_QWORD *)(a1 + 1104) = off_24C335D90;
  if (SHIBYTE(v205.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)(a1 + 1112), v205.__r_.__value_.__l.__data_, v205.__r_.__value_.__l.__size_);
  else
    *(std::string *)(a1 + 1112) = v205;
  *(_DWORD *)(a1 + 1136) = v206;
  *(_QWORD *)(a1 + 1104) = &off_24C335AB8;
  *(_BYTE *)(a1 + 1140) = v207;
  v61 = (std::string *)(a1 + 1144);
  if (SHIBYTE(v208.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v61, v208.__r_.__value_.__l.__data_, v208.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v61->__r_.__value_.__l.__data_ = *(_OWORD *)&v208.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 1160) = *((_QWORD *)&v208.__r_.__value_.__l + 2);
  }
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v102);
  if (v67 < 0)
    operator delete(v108.__r_.__value_.__l.__data_);
  if (v68 < 0)
    operator delete(v113.__r_.__value_.__l.__data_);
  if (v69 < 0)
    operator delete(v118.__r_.__value_.__l.__data_);
  if (v70 < 0)
    operator delete(v123.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v127);
  if (v72 < 0)
    operator delete(v133.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v137);
  if (v73 < 0)
  {
    operator delete(v143.__r_.__value_.__l.__data_);
    if ((v71 & 0x80000000) == 0)
      goto LABEL_328;
  }
  else if ((v71 & 0x80000000) == 0)
  {
    goto LABEL_328;
  }
  operator delete(v147.__r_.__value_.__l.__data_);
LABEL_328:
  if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v151.__r_.__value_.__l.__data_);
  if (SHIBYTE(v156.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v156.__r_.__value_.__l.__data_);
  if (SHIBYTE(v161.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v161.__r_.__value_.__l.__data_);
  if (SHIBYTE(v166.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v166.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v170);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v175);
  if (SHIBYTE(v181.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v181.__r_.__value_.__l.__data_);
  if (SHIBYTE(v185.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v185.__r_.__value_.__l.__data_);
  if (SHIBYTE(v190.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v190.__r_.__value_.__l.__data_);
  if (SHIBYTE(v195.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v195.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v199);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v204);
  *(_QWORD *)(a1 + 1168) = off_24C335D90;
  v62 = (std::string *)(a1 + 1176);
  if (*(char *)(a2 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v62, *(const std::string::value_type **)(a2 + 8), *(_QWORD *)(a2 + 16));
  }
  else
  {
    v63 = *(_OWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 1192) = *(_QWORD *)(a2 + 24);
    *(_OWORD *)&v62->__r_.__value_.__l.__data_ = v63;
  }
  *(_DWORD *)(a1 + 1200) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 1168) = off_24C335B18;
  v64 = *(_QWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 1212) = *(_DWORD *)(a2 + 44);
  *(_QWORD *)(a1 + 1204) = v64;
  return a1;
}

void sub_20A8B5918(_Unwind_Exception *a1)
{
  uint64_t v1;

  mediaplatform::DatabaseColumnTuple<36ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(v1);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<35ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 1168) = off_24C335D90;
  if (*(char *)(a1 + 1199) < 0)
    operator delete(*(void **)(a1 + 1176));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1104);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1040);
  return mediaplatform::DatabaseColumnTuple<38ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<36ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1104);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1040);
  return mediaplatform::DatabaseColumnTuple<38ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<38ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  std::string *v66;
  int v67;
  std::string *v68;
  int v69;
  std::string *v70;
  int v71;
  std::string *v72;
  __int128 v73;
  uint64_t v74;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  uint64_t v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  uint64_t v104;
  int v105;
  int v106;
  int v107;
  uint64_t (**v108)();
  std::string v109;
  int v110;
  char v111;
  std::string v112;
  uint64_t (**v113)();
  std::string v114;
  int v115;
  uint64_t v116;
  int v117;
  uint64_t (**v118)();
  std::string v119;
  int v120;
  uint64_t v121;
  int v122;
  uint64_t (**v123)();
  std::string v124;
  int v125;
  uint64_t v126;
  int v127;
  uint64_t (**v128)();
  std::string v129;
  int v130;
  uint64_t v131;
  int v132;
  uint64_t (**v133)();
  std::string v134;
  int v135;
  char v136;
  std::string v137;
  uint64_t (**v138)();
  std::string v139;
  int v140;
  uint64_t v141;
  int v142;
  uint64_t (**v143)();
  std::string v144;
  int v145;
  char v146;
  std::string v147;
  uint64_t (**v148)();
  std::string v149;
  int v150;
  uint64_t v151;
  uint64_t (**v152)();
  std::string v153;
  int v154;
  uint64_t v155;
  uint64_t (**v156)();
  std::string v157;
  int v158;
  uint64_t v159;
  int v160;
  uint64_t (**v161)();
  std::string v162;
  int v163;
  uint64_t v164;
  int v165;
  uint64_t (**v166)();
  std::string v167;
  int v168;
  uint64_t v169;
  int v170;
  uint64_t (**v171)();
  std::string v172;
  int v173;
  uint64_t v174;
  int v175;
  uint64_t (**v176)();
  std::string v177;
  int v178;
  char v179;
  std::string v180;
  uint64_t (**v181)();
  std::string v182;
  int v183;
  char v184;
  std::string v185;
  uint64_t (**v186)();
  std::string v187;
  int v188;
  uint64_t v189;
  uint64_t (**v190)();
  std::string __s;
  int v192;
  uint64_t v193;
  int v194;
  uint64_t (**v195)();
  std::string v196;
  int v197;
  uint64_t v198;
  int v199;
  uint64_t (**v200)();
  std::string v201;
  int v202;
  char v203;
  std::string v204;
  uint64_t (**v205)();
  std::string v206;
  int v207;
  uint64_t v208;
  int v209;
  uint64_t (**v210)();
  std::string v211;
  int v212;
  uint64_t v213;
  int v214;
  uint64_t (**v215)();
  std::string v216;
  int v217;
  uint64_t v218;
  int v219;
  uint64_t (**v220)();
  std::string v221;
  int v222;
  uint64_t v223;
  int v224;
  uint64_t (**v225)();
  std::string v226;
  int v227;
  char v228;
  std::string v229;
  uint64_t (**v230)();
  std::string v231;
  int v232;
  uint64_t v233;
  int v234;
  uint64_t (**v235)();
  std::string v236;
  int v237;
  char v238;
  std::string v239;
  uint64_t (**v240)();
  std::string v241;
  int v242;
  uint64_t v243;
  uint64_t (**v244)();
  std::string v245;
  int v246;
  uint64_t v247;
  uint64_t (**v248)();
  std::string v249;
  int v250;
  uint64_t v251;
  int v252;
  uint64_t (**v253)();
  std::string v254;
  int v255;
  uint64_t v256;
  int v257;
  uint64_t (**v258)();
  std::string v259;
  int v260;
  uint64_t v261;
  int v262;
  uint64_t (**v263)();
  std::string v264;
  int v265;
  uint64_t v266;
  int v267;
  uint64_t (**v268)();
  std::string v269;
  int v270;
  char v271;
  std::string v272;
  uint64_t (**v273)();
  std::string v274;
  int v275;
  char v276;
  std::string v277;
  uint64_t (**v278)();
  std::string v279;
  int v280;
  uint64_t v281;
  uint64_t (**v282)();
  std::string v283;
  int v284;
  uint64_t v285;
  int v286;
  uint64_t (**v287)();
  std::string v288;
  int v289;
  char v290;
  std::string v291;
  uint64_t (**v292)();
  std::string v293;
  int v294;
  uint64_t v295;
  int v296;
  uint64_t (**v297)();
  std::string v298;
  int v299;
  uint64_t v300;
  int v301;
  uint64_t (**v302)();
  std::string v303;
  int v304;
  uint64_t v305;
  int v306;
  uint64_t (**v307)();
  std::string v308;
  int v309;
  uint64_t v310;
  int v311;
  uint64_t (**v312)();
  std::string v313;
  int v314;
  char v315;
  std::string v316;
  uint64_t (**v317)();
  std::string v318;
  int v319;
  uint64_t v320;
  int v321;
  uint64_t (**v322)();
  std::string v323;
  int v324;
  char v325;
  std::string v326;
  uint64_t (**v327)();
  std::string v328;
  int v329;
  uint64_t v330;
  uint64_t (**v331)();
  std::string v332;
  int v333;
  uint64_t v334;
  uint64_t (**v335)();
  std::string v336;
  int v337;
  uint64_t v338;
  int v339;
  uint64_t (**v340)();
  std::string v341;
  int v342;
  uint64_t v343;
  int v344;
  uint64_t (**v345)();
  std::string v346;
  int v347;
  uint64_t v348;
  int v349;
  uint64_t (**v350)();
  std::string v351;
  int v352;
  uint64_t v353;
  int v354;
  uint64_t (**v355)();
  std::string v356;
  int v357;
  char v358;
  std::string v359;
  uint64_t (**v360)();
  std::string v361;
  int v362;
  char v363;
  std::string v364;
  uint64_t (**v365)();
  std::string v366;
  int v367;
  uint64_t v368;
  uint64_t (**v369)();
  std::string v370;
  int v371;
  char v372;
  std::string v373;
  uint64_t (**v374)();
  std::string __p;
  int v376;
  uint64_t v377;
  int v378;
  uint64_t (**v379)();
  std::string v380;
  int v381;
  uint64_t v382;
  int v383;
  uint64_t (**v384)();
  std::string v385;
  int v386;
  uint64_t v387;
  int v388;
  uint64_t (**v389)();
  std::string v390;
  int v391;
  uint64_t v392;
  int v393;
  uint64_t (**v394)();
  std::string v395;
  int v396;
  char v397;
  std::string v398;
  uint64_t (**v399)();
  std::string v400;
  int v401;
  uint64_t v402;
  int v403;
  uint64_t (**v404)();
  std::string v405;
  int v406;
  char v407;
  std::string v408;
  uint64_t (**v409)();
  std::string v410;
  int v411;
  uint64_t v412;
  uint64_t (**v413)();
  std::string v414;
  int v415;
  uint64_t v416;
  uint64_t (**v417)();
  std::string v418;
  int v419;
  uint64_t v420;
  int v421;
  uint64_t (**v422)();
  std::string v423;
  int v424;
  uint64_t v425;
  int v426;
  uint64_t (**v427)();
  std::string v428;
  int v429;
  uint64_t v430;
  int v431;
  uint64_t (**v432)();
  std::string v433;
  int v434;
  uint64_t v435;
  int v436;
  uint64_t (**v437)();
  std::string v438;
  int v439;
  char v440;
  std::string v441;
  uint64_t (**v442)();
  std::string v443;
  int v444;
  char v445;
  std::string v446;

  v21 = MEMORY[0x24BDAC7A8](a1);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v33 = v22;
  v88 = v34;
  v35 = v21;
  if (*(char *)(v22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v196, *(const std::string::value_type **)(v22 + 8), *(_QWORD *)(v22 + 16));
  else
    v196 = *(std::string *)(v22 + 8);
  v36 = *(_DWORD *)(v33 + 32);
  v195 = off_24C335B18;
  v198 = *(_QWORD *)(v33 + 36);
  v37 = *(_DWORD *)(v33 + 44);
  v197 = v36;
  v199 = v37;
  if (*(char *)(v32 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(v32 + 8), *(_QWORD *)(v32 + 16));
  else
    __s = *(std::string *)(v32 + 8);
  v38 = *(_DWORD *)(v32 + 32);
  v190 = off_24C335B18;
  v193 = *(_QWORD *)(v32 + 36);
  v39 = *(_DWORD *)(v32 + 44);
  v192 = v38;
  v194 = v39;
  if (*(char *)(v30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v187, *(const std::string::value_type **)(v30 + 8), *(_QWORD *)(v30 + 16));
  else
    v187 = *(std::string *)(v30 + 8);
  v105 = *(_DWORD *)(v30 + 32);
  v188 = v105;
  v186 = off_24C335AF8;
  v104 = *(_QWORD *)(v30 + 36);
  v189 = v104;
  v181 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v182, *(const std::string::value_type **)(v28 + 8), *(_QWORD *)(v28 + 16));
  else
    v182 = *(std::string *)(v28 + 8);
  v183 = *(_DWORD *)(v28 + 32);
  v181 = &off_24C335AB8;
  v184 = *(_BYTE *)(v28 + 36);
  if (*(char *)(v28 + 63) < 0)
    std::string::__init_copy_ctor_external(&v185, *(const std::string::value_type **)(v28 + 40), *(_QWORD *)(v28 + 48));
  else
    v185 = *(std::string *)(v28 + 40);
  v176 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v177, *(const std::string::value_type **)(v26 + 8), *(_QWORD *)(v26 + 16));
  else
    v177 = *(std::string *)(v26 + 8);
  v178 = *(_DWORD *)(v26 + 32);
  v176 = &off_24C335AB8;
  v179 = *(_BYTE *)(v26 + 36);
  if (*(char *)(v26 + 63) < 0)
    std::string::__init_copy_ctor_external(&v180, *(const std::string::value_type **)(v26 + 40), *(_QWORD *)(v26 + 48));
  else
    v180 = *(std::string *)(v26 + 40);
  if (*(char *)(v24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v172, *(const std::string::value_type **)(v24 + 8), *(_QWORD *)(v24 + 16));
  else
    v172 = *(std::string *)(v24 + 8);
  v40 = *(_DWORD *)(v24 + 32);
  v171 = off_24C335B18;
  v174 = *(_QWORD *)(v24 + 36);
  v41 = *(_DWORD *)(v24 + 44);
  v106 = v40;
  v173 = v40;
  v175 = v41;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v167, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v167 = *(std::string *)(a9 + 8);
  v42 = *(_DWORD *)(a9 + 32);
  v166 = off_24C335B18;
  v169 = *(_QWORD *)(a9 + 36);
  v43 = *(_DWORD *)(a9 + 44);
  v102 = v42;
  v168 = v42;
  v170 = v43;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v162, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v162 = *(std::string *)(a10 + 8);
  v44 = *(_DWORD *)(a10 + 32);
  v161 = off_24C335B18;
  v164 = *(_QWORD *)(a10 + 36);
  v45 = *(_DWORD *)(a10 + 44);
  v100 = v44;
  v163 = v44;
  v165 = v45;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v157, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v157 = *(std::string *)(a11 + 8);
  v46 = *(_DWORD *)(a11 + 32);
  v156 = off_24C335B18;
  v159 = *(_QWORD *)(a11 + 36);
  v47 = *(_DWORD *)(a11 + 44);
  v99 = v46;
  v158 = v46;
  v160 = v47;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v153, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v153 = *(std::string *)(a12 + 8);
  v98 = *(_DWORD *)(a12 + 32);
  v154 = v98;
  v152 = off_24C335AF8;
  v97 = *(_QWORD *)(a12 + 36);
  v155 = v97;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v149, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v149 = *(std::string *)(a13 + 8);
  v96 = *(_DWORD *)(a13 + 32);
  v150 = v96;
  v148 = off_24C335AF8;
  v95 = *(_QWORD *)(a13 + 36);
  v151 = v95;
  v143 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v144, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v144 = *(std::string *)(a14 + 8);
  v145 = *(_DWORD *)(a14 + 32);
  v143 = &off_24C335AB8;
  v146 = *(_BYTE *)(a14 + 36);
  if (*(char *)(a14 + 63) < 0)
    std::string::__init_copy_ctor_external(&v147, *(const std::string::value_type **)(a14 + 40), *(_QWORD *)(a14 + 48));
  else
    v147 = *(std::string *)(a14 + 40);
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v139, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v139 = *(std::string *)(a15 + 8);
  v48 = *(_DWORD *)(a15 + 32);
  v138 = off_24C335B18;
  v141 = *(_QWORD *)(a15 + 36);
  v49 = *(_DWORD *)(a15 + 44);
  v94 = v48;
  v140 = v48;
  v142 = v49;
  v133 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v134, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v134 = *(std::string *)(a16 + 8);
  v135 = *(_DWORD *)(a16 + 32);
  v133 = &off_24C335AB8;
  v136 = *(_BYTE *)(a16 + 36);
  if (*(char *)(a16 + 63) < 0)
    std::string::__init_copy_ctor_external(&v137, *(const std::string::value_type **)(a16 + 40), *(_QWORD *)(a16 + 48));
  else
    v137 = *(std::string *)(a16 + 40);
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v129, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v129 = *(std::string *)(a17 + 8);
  v50 = *(_DWORD *)(a17 + 32);
  v128 = off_24C335B18;
  v131 = *(_QWORD *)(a17 + 36);
  v51 = *(_DWORD *)(a17 + 44);
  v93 = v50;
  v130 = v50;
  v132 = v51;
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v124, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v124 = *(std::string *)(a18 + 8);
  v52 = *(_DWORD *)(a18 + 32);
  v123 = off_24C335B18;
  v126 = *(_QWORD *)(a18 + 36);
  v53 = *(_DWORD *)(a18 + 44);
  v92 = v52;
  v125 = v52;
  v127 = v53;
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v119, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v119 = *(std::string *)(a19 + 8);
  v54 = *(_DWORD *)(a19 + 32);
  v118 = off_24C335B18;
  v121 = *(_QWORD *)(a19 + 36);
  v55 = *(_DWORD *)(a19 + 44);
  v91 = v54;
  v120 = v54;
  v122 = v55;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v114, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v114 = *(std::string *)(a20 + 8);
  v90 = *(_DWORD *)(a20 + 32);
  v115 = v90;
  v113 = off_24C335B18;
  v116 = *(_QWORD *)(a20 + 36);
  v117 = *(_DWORD *)(a20 + 44);
  v108 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v109, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v109 = *(std::string *)(a21 + 8);
  v110 = *(_DWORD *)(a21 + 32);
  v108 = &off_24C335AB8;
  v111 = *(_BYTE *)(a21 + 36);
  if (*(char *)(a21 + 63) < 0)
    std::string::__init_copy_ctor_external(&v112, *(const std::string::value_type **)(a21 + 40), *(_QWORD *)(a21 + 48));
  else
    v112 = *(std::string *)(a21 + 40);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v283, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v283 = __s;
  v282 = off_24C335B18;
  v285 = v193;
  v284 = v38;
  v286 = v194;
  if (SHIBYTE(v187.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v279, v187.__r_.__value_.__l.__data_, v187.__r_.__value_.__l.__size_);
  else
    v279 = v187;
  v280 = v105;
  v278 = off_24C335AF8;
  v281 = v104;
  v273 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v182.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v274, v182.__r_.__value_.__l.__data_, v182.__r_.__value_.__l.__size_);
  else
    v274 = v182;
  v275 = v183;
  v273 = &off_24C335AB8;
  v276 = v184;
  if (SHIBYTE(v185.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v277, v185.__r_.__value_.__l.__data_, v185.__r_.__value_.__l.__size_);
  else
    v277 = v185;
  v268 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v177.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v269, v177.__r_.__value_.__l.__data_, v177.__r_.__value_.__l.__size_);
  else
    v269 = v177;
  v270 = v178;
  v268 = &off_24C335AB8;
  v271 = v179;
  if (SHIBYTE(v180.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v272, v180.__r_.__value_.__l.__data_, v180.__r_.__value_.__l.__size_);
  else
    v272 = v180;
  if (SHIBYTE(v172.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v264, v172.__r_.__value_.__l.__data_, v172.__r_.__value_.__l.__size_);
  else
    v264 = v172;
  v263 = off_24C335B18;
  v266 = v174;
  v265 = v106;
  v267 = v175;
  if (SHIBYTE(v167.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v259, v167.__r_.__value_.__l.__data_, v167.__r_.__value_.__l.__size_);
  else
    v259 = v167;
  v258 = off_24C335B18;
  v261 = v169;
  v260 = v102;
  v262 = v170;
  if (SHIBYTE(v162.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v254, v162.__r_.__value_.__l.__data_, v162.__r_.__value_.__l.__size_);
  else
    v254 = v162;
  v253 = off_24C335B18;
  v256 = v164;
  v255 = v100;
  v257 = v165;
  if (SHIBYTE(v157.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v249, v157.__r_.__value_.__l.__data_, v157.__r_.__value_.__l.__size_);
  else
    v249 = v157;
  v248 = off_24C335B18;
  v251 = v159;
  v250 = v99;
  v252 = v160;
  if (SHIBYTE(v153.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v245, v153.__r_.__value_.__l.__data_, v153.__r_.__value_.__l.__size_);
  else
    v245 = v153;
  v246 = v98;
  v244 = off_24C335AF8;
  v247 = v97;
  if (SHIBYTE(v149.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v241, v149.__r_.__value_.__l.__data_, v149.__r_.__value_.__l.__size_);
  else
    v241 = v149;
  v242 = v96;
  v240 = off_24C335AF8;
  v243 = v95;
  v235 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v144.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v236, v144.__r_.__value_.__l.__data_, v144.__r_.__value_.__l.__size_);
  else
    v236 = v144;
  v237 = v145;
  v235 = &off_24C335AB8;
  v238 = v146;
  if (SHIBYTE(v147.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v239, v147.__r_.__value_.__l.__data_, v147.__r_.__value_.__l.__size_);
  else
    v239 = v147;
  if (SHIBYTE(v139.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v231, v139.__r_.__value_.__l.__data_, v139.__r_.__value_.__l.__size_);
  else
    v231 = v139;
  v230 = off_24C335B18;
  v233 = v141;
  v232 = v94;
  v234 = v142;
  v225 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v134.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v226, v134.__r_.__value_.__l.__data_, v134.__r_.__value_.__l.__size_);
  else
    v226 = v134;
  v227 = v135;
  v225 = &off_24C335AB8;
  v228 = v136;
  if (SHIBYTE(v137.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v229, v137.__r_.__value_.__l.__data_, v137.__r_.__value_.__l.__size_);
  else
    v229 = v137;
  if (SHIBYTE(v129.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v221, v129.__r_.__value_.__l.__data_, v129.__r_.__value_.__l.__size_);
  else
    v221 = v129;
  v220 = off_24C335B18;
  v223 = v131;
  v222 = v93;
  v224 = v132;
  if (SHIBYTE(v124.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v216, v124.__r_.__value_.__l.__data_, v124.__r_.__value_.__l.__size_);
  else
    v216 = v124;
  v215 = off_24C335B18;
  v218 = v126;
  v217 = v92;
  v219 = v127;
  v210 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v119.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v211, v119.__r_.__value_.__l.__data_, v119.__r_.__value_.__l.__size_);
  else
    v211 = v119;
  v210 = off_24C335B18;
  v213 = v121;
  v212 = v91;
  v214 = v122;
  v205 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v114.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v206, v114.__r_.__value_.__l.__data_, v114.__r_.__value_.__l.__size_);
  else
    v206 = v114;
  v205 = off_24C335B18;
  v208 = v116;
  v207 = v90;
  v209 = v117;
  v200 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v109.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v201, v109.__r_.__value_.__l.__data_, v109.__r_.__value_.__l.__size_);
  else
    v201 = v109;
  v202 = v110;
  v200 = &off_24C335AB8;
  v203 = v111;
  if (SHIBYTE(v112.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v204, v112.__r_.__value_.__l.__data_, v112.__r_.__value_.__l.__size_);
  else
    v204 = v112;
  v365 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v279.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v366, v279.__r_.__value_.__l.__data_, v279.__r_.__value_.__l.__size_);
  else
    v366 = v279;
  v367 = v105;
  v365 = off_24C335AF8;
  v368 = v104;
  v360 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v274.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v361, v274.__r_.__value_.__l.__data_, v274.__r_.__value_.__l.__size_);
  else
    v361 = v274;
  v362 = v275;
  v360 = &off_24C335AB8;
  v363 = v276;
  if (SHIBYTE(v277.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v364, v277.__r_.__value_.__l.__data_, v277.__r_.__value_.__l.__size_);
  else
    v364 = v277;
  v355 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v269.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v356, v269.__r_.__value_.__l.__data_, v269.__r_.__value_.__l.__size_);
  else
    v356 = v269;
  v357 = v270;
  v355 = &off_24C335AB8;
  v358 = v271;
  if (SHIBYTE(v272.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v359, v272.__r_.__value_.__l.__data_, v272.__r_.__value_.__l.__size_);
  else
    v359 = v272;
  v350 = (uint64_t (**)())off_24C335D90;
  v86 = SHIBYTE(v264.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v264.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v351, v264.__r_.__value_.__l.__data_, v264.__r_.__value_.__l.__size_);
  else
    v351 = v264;
  v350 = off_24C335B18;
  v353 = v266;
  v352 = v106;
  v354 = v267;
  v345 = (uint64_t (**)())off_24C335D90;
  v85 = SHIBYTE(v259.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v259.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v346, v259.__r_.__value_.__l.__data_, v259.__r_.__value_.__l.__size_);
  else
    v346 = v259;
  v345 = off_24C335B18;
  v348 = v261;
  v347 = v102;
  v349 = v262;
  v340 = (uint64_t (**)())off_24C335D90;
  v84 = SHIBYTE(v254.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v254.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v341, v254.__r_.__value_.__l.__data_, v254.__r_.__value_.__l.__size_);
  else
    v341 = v254;
  v340 = off_24C335B18;
  v343 = v256;
  v342 = v100;
  v344 = v257;
  v335 = (uint64_t (**)())off_24C335D90;
  v83 = SHIBYTE(v249.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v249.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v336, v249.__r_.__value_.__l.__data_, v249.__r_.__value_.__l.__size_);
  else
    v336 = v249;
  v335 = off_24C335B18;
  v338 = v251;
  v337 = v99;
  v339 = v252;
  v331 = (uint64_t (**)())off_24C335D90;
  v82 = SHIBYTE(v245.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v245.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v332, v245.__r_.__value_.__l.__data_, v245.__r_.__value_.__l.__size_);
  else
    v332 = v245;
  v333 = v98;
  v331 = off_24C335AF8;
  v334 = v97;
  v327 = (uint64_t (**)())off_24C335D90;
  v81 = SHIBYTE(v241.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v241.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v328, v241.__r_.__value_.__l.__data_, v241.__r_.__value_.__l.__size_);
  else
    v328 = v241;
  v329 = v96;
  v327 = off_24C335AF8;
  v330 = v95;
  v322 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v236.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v323, v236.__r_.__value_.__l.__data_, v236.__r_.__value_.__l.__size_);
  else
    v323 = v236;
  v324 = v237;
  v322 = &off_24C335AB8;
  v325 = v238;
  if (SHIBYTE(v239.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v326, v239.__r_.__value_.__l.__data_, v239.__r_.__value_.__l.__size_);
  else
    v326 = v239;
  v317 = (uint64_t (**)())off_24C335D90;
  v80 = SHIBYTE(v231.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v231.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v318, v231.__r_.__value_.__l.__data_, v231.__r_.__value_.__l.__size_);
  else
    v318 = v231;
  v317 = off_24C335B18;
  v320 = v233;
  v319 = v94;
  v321 = v234;
  v312 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v226.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v313, v226.__r_.__value_.__l.__data_, v226.__r_.__value_.__l.__size_);
  else
    v313 = v226;
  v314 = v227;
  v312 = &off_24C335AB8;
  v315 = v228;
  if (SHIBYTE(v229.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v316, v229.__r_.__value_.__l.__data_, v229.__r_.__value_.__l.__size_);
  else
    v316 = v229;
  v307 = (uint64_t (**)())off_24C335D90;
  v87 = SHIBYTE(v221.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v221.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v308, v221.__r_.__value_.__l.__data_, v221.__r_.__value_.__l.__size_);
  else
    v308 = v221;
  v307 = off_24C335B18;
  v310 = v223;
  v309 = v93;
  v311 = v224;
  v302 = (uint64_t (**)())off_24C335D90;
  v79 = SHIBYTE(v216.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v303, v216.__r_.__value_.__l.__data_, v216.__r_.__value_.__l.__size_);
  else
    v303 = v216;
  v302 = off_24C335B18;
  v305 = v218;
  v304 = v92;
  v306 = v219;
  v297 = (uint64_t (**)())off_24C335D90;
  v78 = SHIBYTE(v211.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v298, v211.__r_.__value_.__l.__data_, v211.__r_.__value_.__l.__size_);
  else
    v298 = v211;
  v297 = off_24C335B18;
  v300 = v213;
  v299 = v91;
  v301 = v214;
  v292 = (uint64_t (**)())off_24C335D90;
  v77 = SHIBYTE(v206.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v206.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v293, v206.__r_.__value_.__l.__data_, v206.__r_.__value_.__l.__size_);
  else
    v293 = v206;
  v292 = off_24C335B18;
  v295 = v208;
  v294 = v90;
  v296 = v209;
  v287 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v201.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v288, v201.__r_.__value_.__l.__data_, v201.__r_.__value_.__l.__size_);
  else
    v288 = v201;
  v289 = v202;
  v287 = &off_24C335AB8;
  v290 = v203;
  if (SHIBYTE(v204.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v291, v204.__r_.__value_.__l.__data_, v204.__r_.__value_.__l.__size_);
  else
    v291 = v204;
  v442 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v361.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v443, v361.__r_.__value_.__l.__data_, v361.__r_.__value_.__l.__size_);
  else
    v443 = v361;
  v444 = v362;
  v442 = &off_24C335AB8;
  v445 = v363;
  if (SHIBYTE(v364.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v446, v364.__r_.__value_.__l.__data_, v364.__r_.__value_.__l.__size_);
  else
    v446 = v364;
  v437 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v356.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v438, v356.__r_.__value_.__l.__data_, v356.__r_.__value_.__l.__size_);
  else
    v438 = v356;
  v439 = v357;
  v437 = &off_24C335AB8;
  v440 = v358;
  if (SHIBYTE(v359.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v441, v359.__r_.__value_.__l.__data_, v359.__r_.__value_.__l.__size_);
  else
    v441 = v359;
  v432 = (uint64_t (**)())off_24C335D90;
  v56 = SHIBYTE(v351.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v351.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v433, v351.__r_.__value_.__l.__data_, v351.__r_.__value_.__l.__size_);
  else
    v433 = v351;
  v432 = off_24C335B18;
  v435 = v353;
  v434 = v106;
  v436 = v354;
  v427 = (uint64_t (**)())off_24C335D90;
  v57 = SHIBYTE(v346.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v346.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v428, v346.__r_.__value_.__l.__data_, v346.__r_.__value_.__l.__size_);
  else
    v428 = v346;
  v427 = off_24C335B18;
  v430 = v348;
  v429 = v102;
  v431 = v349;
  v422 = (uint64_t (**)())off_24C335D90;
  v58 = SHIBYTE(v341.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v341.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v423, v341.__r_.__value_.__l.__data_, v341.__r_.__value_.__l.__size_);
  else
    v423 = v341;
  v422 = off_24C335B18;
  v425 = v343;
  v424 = v100;
  v426 = v344;
  v417 = (uint64_t (**)())off_24C335D90;
  v59 = SHIBYTE(v336.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v336.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v418, v336.__r_.__value_.__l.__data_, v336.__r_.__value_.__l.__size_);
  else
    v418 = v336;
  v417 = off_24C335B18;
  v420 = v338;
  v419 = v99;
  v421 = v339;
  v413 = (uint64_t (**)())off_24C335D90;
  v103 = SHIBYTE(v332.__r_.__value_.__r.__words[2]);
  v107 = v58;
  if (SHIBYTE(v332.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v414, v332.__r_.__value_.__l.__data_, v332.__r_.__value_.__l.__size_);
  else
    v414 = v332;
  v415 = v98;
  v413 = off_24C335AF8;
  v416 = v97;
  v409 = (uint64_t (**)())off_24C335D90;
  v60 = SHIBYTE(v328.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v328.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v410, v328.__r_.__value_.__l.__data_, v328.__r_.__value_.__l.__size_);
  else
    v410 = v328;
  v411 = v96;
  v409 = off_24C335AF8;
  v412 = v95;
  v404 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v323.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v405, v323.__r_.__value_.__l.__data_, v323.__r_.__value_.__l.__size_);
  else
    v405 = v323;
  v406 = v324;
  v404 = &off_24C335AB8;
  v407 = v325;
  v101 = v59;
  if (SHIBYTE(v326.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v408, v326.__r_.__value_.__l.__data_, v326.__r_.__value_.__l.__size_);
  else
    v408 = v326;
  v399 = (uint64_t (**)())off_24C335D90;
  v61 = SHIBYTE(v318.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v318.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v400, v318.__r_.__value_.__l.__data_, v318.__r_.__value_.__l.__size_);
  else
    v400 = v318;
  v399 = off_24C335B18;
  v402 = v320;
  v401 = v94;
  v403 = v321;
  v394 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v313.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v395, v313.__r_.__value_.__l.__data_, v313.__r_.__value_.__l.__size_);
  else
    v395 = v313;
  v396 = v314;
  v394 = &off_24C335AB8;
  v397 = v315;
  if (SHIBYTE(v316.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v398, v316.__r_.__value_.__l.__data_, v316.__r_.__value_.__l.__size_);
  else
    v398 = v316;
  v389 = (uint64_t (**)())off_24C335D90;
  v62 = SHIBYTE(v308.__r_.__value_.__r.__words[2]);
  v89 = v56;
  v76 = v57;
  if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v390, v308.__r_.__value_.__l.__data_, v308.__r_.__value_.__l.__size_);
  else
    v390 = v308;
  v389 = off_24C335B18;
  v392 = v310;
  v391 = v93;
  v393 = v311;
  v384 = (uint64_t (**)())off_24C335D90;
  v63 = SHIBYTE(v303.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v303.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v385, v303.__r_.__value_.__l.__data_, v303.__r_.__value_.__l.__size_);
  else
    v385 = v303;
  v384 = off_24C335B18;
  v387 = v305;
  v386 = v92;
  v388 = v306;
  v379 = (uint64_t (**)())off_24C335D90;
  v64 = SHIBYTE(v298.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v298.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v380, v298.__r_.__value_.__l.__data_, v298.__r_.__value_.__l.__size_);
  else
    v380 = v298;
  v379 = off_24C335B18;
  v382 = v300;
  v381 = v91;
  v383 = v301;
  v374 = (uint64_t (**)())off_24C335D90;
  v65 = SHIBYTE(v293.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v293.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v293.__r_.__value_.__l.__data_, v293.__r_.__value_.__l.__size_);
  else
    __p = v293;
  v374 = off_24C335B18;
  v377 = v295;
  v376 = v90;
  v378 = v296;
  v369 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v288.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v370, v288.__r_.__value_.__l.__data_, v288.__r_.__value_.__l.__size_);
  else
    v370 = v288;
  v371 = v289;
  v369 = &off_24C335AB8;
  v372 = v290;
  if (SHIBYTE(v291.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v373, v291.__r_.__value_.__l.__data_, v291.__r_.__value_.__l.__size_);
  else
    v373 = v291;
  mediaplatform::DatabaseColumnTuple<42ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(v35, (uint64_t)&v442, (uint64_t)&v437, (uint64_t)&v432, (uint64_t)&v427, (uint64_t)&v422, (uint64_t)&v417, (uint64_t)&v413, (uint64_t)&v409, (uint64_t)&v404, (uint64_t)&v399, (uint64_t)&v394, (uint64_t)&v389, (uint64_t)&v384, (uint64_t)&v379, (uint64_t)&v374, (uint64_t)&v369);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v369);
  v374 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v379 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v380.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v380.__r_.__value_.__l.__data_);
  v384 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v385.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v385.__r_.__value_.__l.__data_);
  v389 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v390.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v390.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v394);
  v399 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v400.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v400.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v404);
  v409 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v410.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v410.__r_.__value_.__l.__data_);
  v413 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v414.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v414.__r_.__value_.__l.__data_);
  v417 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v418.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v418.__r_.__value_.__l.__data_);
  v422 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v423.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v423.__r_.__value_.__l.__data_);
  v427 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v428.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v428.__r_.__value_.__l.__data_);
  v432 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v433.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v433.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v437);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v442);
  *(_QWORD *)(v35 + 848) = off_24C335D90;
  v66 = (std::string *)(v35 + 856);
  v67 = SHIBYTE(v366.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v366.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v66, v366.__r_.__value_.__l.__data_, v366.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v66->__r_.__value_.__l.__data_ = *(_OWORD *)&v366.__r_.__value_.__l.__data_;
    *(_QWORD *)(v35 + 872) = *((_QWORD *)&v366.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(v35 + 880) = v105;
  *(_QWORD *)(v35 + 848) = off_24C335AF8;
  *(_QWORD *)(v35 + 884) = v104;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v287);
  v292 = (uint64_t (**)())off_24C335D90;
  if (v65 < 0)
    operator delete(v293.__r_.__value_.__l.__data_);
  v297 = (uint64_t (**)())off_24C335D90;
  if (v64 < 0)
    operator delete(v298.__r_.__value_.__l.__data_);
  v302 = (uint64_t (**)())off_24C335D90;
  if (v63 < 0)
    operator delete(v303.__r_.__value_.__l.__data_);
  v307 = (uint64_t (**)())off_24C335D90;
  if (v62 < 0)
    operator delete(v308.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v312);
  v317 = (uint64_t (**)())off_24C335D90;
  if (v61 < 0)
    operator delete(v318.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v322);
  v327 = (uint64_t (**)())off_24C335D90;
  if (v60 < 0)
    operator delete(v328.__r_.__value_.__l.__data_);
  v331 = (uint64_t (**)())off_24C335D90;
  if (v103 < 0)
    operator delete(v332.__r_.__value_.__l.__data_);
  v335 = (uint64_t (**)())off_24C335D90;
  if (v101 < 0)
    operator delete(v336.__r_.__value_.__l.__data_);
  v340 = (uint64_t (**)())off_24C335D90;
  if (v107 < 0)
    operator delete(v341.__r_.__value_.__l.__data_);
  v345 = (uint64_t (**)())off_24C335D90;
  if (v76 < 0)
    operator delete(v346.__r_.__value_.__l.__data_);
  v350 = (uint64_t (**)())off_24C335D90;
  if (v89 < 0)
    operator delete(v351.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v355);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v360);
  v365 = (uint64_t (**)())off_24C335D90;
  if (v67 < 0)
    operator delete(v366.__r_.__value_.__l.__data_);
  *(_QWORD *)(v35 + 896) = off_24C335D90;
  v68 = (std::string *)(v35 + 904);
  v69 = SHIBYTE(v283.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v283.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v68, v283.__r_.__value_.__l.__data_, v283.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v68->__r_.__value_.__l.__data_ = *(_OWORD *)&v283.__r_.__value_.__l.__data_;
    *(_QWORD *)(v35 + 920) = *((_QWORD *)&v283.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(v35 + 928) = v284;
  *(_QWORD *)(v35 + 896) = off_24C335B18;
  *(_QWORD *)(v35 + 932) = v285;
  *(_DWORD *)(v35 + 940) = v286;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v200);
  v205 = (uint64_t (**)())off_24C335D90;
  if (v77 < 0)
    operator delete(v206.__r_.__value_.__l.__data_);
  v210 = (uint64_t (**)())off_24C335D90;
  if (v78 < 0)
    operator delete(v211.__r_.__value_.__l.__data_);
  v215 = (uint64_t (**)())off_24C335D90;
  if (v79 < 0)
    operator delete(v216.__r_.__value_.__l.__data_);
  v220 = (uint64_t (**)())off_24C335D90;
  if (v87 < 0)
    operator delete(v221.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v225);
  v230 = (uint64_t (**)())off_24C335D90;
  if (v80 < 0)
    operator delete(v231.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v235);
  v240 = (uint64_t (**)())off_24C335D90;
  if (v81 < 0)
    operator delete(v241.__r_.__value_.__l.__data_);
  v244 = (uint64_t (**)())off_24C335D90;
  if (v82 < 0)
    operator delete(v245.__r_.__value_.__l.__data_);
  v248 = (uint64_t (**)())off_24C335D90;
  if (v83 < 0)
    operator delete(v249.__r_.__value_.__l.__data_);
  v253 = (uint64_t (**)())off_24C335D90;
  if (v84 < 0)
    operator delete(v254.__r_.__value_.__l.__data_);
  v258 = (uint64_t (**)())off_24C335D90;
  if (v85 < 0)
    operator delete(v259.__r_.__value_.__l.__data_);
  v263 = (uint64_t (**)())off_24C335D90;
  if (v86 < 0)
    operator delete(v264.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v268);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v273);
  if (SHIBYTE(v279.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v279.__r_.__value_.__l.__data_);
    if ((v69 & 0x80000000) == 0)
      goto LABEL_347;
  }
  else if ((v69 & 0x80000000) == 0)
  {
    goto LABEL_347;
  }
  operator delete(v283.__r_.__value_.__l.__data_);
LABEL_347:
  *(_QWORD *)(v35 + 944) = off_24C335D90;
  v70 = (std::string *)(v35 + 952);
  v71 = SHIBYTE(v196.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v196.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v70, v196.__r_.__value_.__l.__data_, v196.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v70->__r_.__value_.__l.__data_ = *(_OWORD *)&v196.__r_.__value_.__l.__data_;
    *(_QWORD *)(v35 + 968) = *((_QWORD *)&v196.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(v35 + 976) = v197;
  *(_QWORD *)(v35 + 944) = off_24C335B18;
  *(_QWORD *)(v35 + 980) = v198;
  *(_DWORD *)(v35 + 988) = v199;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v108);
  if (SHIBYTE(v114.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v114.__r_.__value_.__l.__data_);
  if (SHIBYTE(v119.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v119.__r_.__value_.__l.__data_);
  if (SHIBYTE(v124.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v124.__r_.__value_.__l.__data_);
  if (SHIBYTE(v129.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v129.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v133);
  if (SHIBYTE(v139.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v139.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v143);
  if (SHIBYTE(v149.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v149.__r_.__value_.__l.__data_);
  if (SHIBYTE(v153.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v153.__r_.__value_.__l.__data_);
  if (SHIBYTE(v157.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v157.__r_.__value_.__l.__data_);
  if (SHIBYTE(v162.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v162.__r_.__value_.__l.__data_);
  if (SHIBYTE(v167.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v167.__r_.__value_.__l.__data_);
  if (SHIBYTE(v172.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v172.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v176);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v181);
  if (SHIBYTE(v187.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v187.__r_.__value_.__l.__data_);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__s.__r_.__value_.__l.__data_);
    if ((v71 & 0x80000000) == 0)
      goto LABEL_378;
  }
  else if ((v71 & 0x80000000) == 0)
  {
    goto LABEL_378;
  }
  operator delete(v196.__r_.__value_.__l.__data_);
LABEL_378:
  *(_QWORD *)(v35 + 992) = off_24C335D90;
  v72 = (std::string *)(v35 + 1000);
  if (*(char *)(v88 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v72, *(const std::string::value_type **)(v88 + 8), *(_QWORD *)(v88 + 16));
  }
  else
  {
    v73 = *(_OWORD *)(v88 + 8);
    *(_QWORD *)(v35 + 1016) = *(_QWORD *)(v88 + 24);
    *(_OWORD *)&v72->__r_.__value_.__l.__data_ = v73;
  }
  *(_DWORD *)(v35 + 1024) = *(_DWORD *)(v88 + 32);
  *(_QWORD *)(v35 + 992) = off_24C335B18;
  v74 = *(_QWORD *)(v88 + 36);
  *(_DWORD *)(v35 + 1036) = *(_DWORD *)(v88 + 44);
  *(_QWORD *)(v35 + 1028) = v74;
  return v35;
}

void sub_20A8B8508(_Unwind_Exception *a1)
{
  uint64_t v1;

  mediaplatform::DatabaseColumnTuple<39ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(v1);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<39ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 944) = off_24C335D90;
  if (*(char *)(a1 + 975) < 0)
    operator delete(*(void **)(a1 + 952));
  *(_QWORD *)(a1 + 896) = off_24C335D90;
  if (*(char *)(a1 + 927) < 0)
    operator delete(*(void **)(a1 + 904));
  *(_QWORD *)(a1 + 848) = off_24C335D90;
  if (*(char *)(a1 + 879) < 0)
    operator delete(*(void **)(a1 + 856));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 784);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 720);
  *(_QWORD *)(a1 + 672) = off_24C335D90;
  if (*(char *)(a1 + 703) < 0)
    operator delete(*(void **)(a1 + 680));
  return mediaplatform::DatabaseColumnTuple<45ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<40ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 896) = off_24C335D90;
  if (*(char *)(a1 + 927) < 0)
    operator delete(*(void **)(a1 + 904));
  *(_QWORD *)(a1 + 848) = off_24C335D90;
  if (*(char *)(a1 + 879) < 0)
    operator delete(*(void **)(a1 + 856));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 784);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 720);
  *(_QWORD *)(a1 + 672) = off_24C335D90;
  if (*(char *)(a1 + 703) < 0)
    operator delete(*(void **)(a1 + 680));
  return mediaplatform::DatabaseColumnTuple<45ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<41ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 848) = off_24C335D90;
  if (*(char *)(a1 + 879) < 0)
    operator delete(*(void **)(a1 + 856));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 784);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 720);
  *(_QWORD *)(a1 + 672) = off_24C335D90;
  if (*(char *)(a1 + 703) < 0)
    operator delete(*(void **)(a1 + 680));
  return mediaplatform::DatabaseColumnTuple<45ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<42ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  std::string *v49;
  int v50;
  std::string *v51;
  int v52;
  std::string *v53;
  int v54;
  std::string *v55;
  __int128 v56;
  std::string *v57;
  __int128 v58;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  int v87;
  int v88;
  uint64_t (**v89)();
  std::string v90;
  int v91;
  char v92;
  std::string v93;
  uint64_t (**v94)();
  std::string v95;
  int v96;
  uint64_t v97;
  int v98;
  uint64_t (**v99)();
  std::string v100;
  int v101;
  uint64_t v102;
  int v103;
  uint64_t (**v104)();
  std::string v105;
  int v106;
  uint64_t v107;
  int v108;
  uint64_t (**v109)();
  std::string v110;
  int v111;
  uint64_t v112;
  int v113;
  uint64_t (**v114)();
  std::string v115;
  int v116;
  char v117;
  std::string v118;
  uint64_t (**v119)();
  std::string v120;
  int v121;
  uint64_t v122;
  int v123;
  uint64_t (**v124)();
  std::string v125;
  int v126;
  char v127;
  std::string v128;
  uint64_t (**v129)();
  std::string v130;
  int v131;
  uint64_t v132;
  uint64_t (**v133)();
  std::string v134;
  int v135;
  uint64_t v136;
  uint64_t (**v137)();
  std::string v138;
  int v139;
  uint64_t v140;
  int v141;
  uint64_t (**v142)();
  std::string v143;
  int v144;
  uint64_t v145;
  int v146;
  uint64_t (**v147)();
  std::string v148;
  int v149;
  uint64_t v150;
  int v151;
  uint64_t (**v152)();
  std::string __s;
  int v154;
  uint64_t v155;
  int v156;
  uint64_t (**v157)();
  std::string v158;
  int v159;
  char v160;
  std::string v161;
  uint64_t (**v162)();
  std::string v163;
  int v164;
  char v165;
  std::string v166;
  uint64_t (**v167)();
  std::string v168;
  int v169;
  uint64_t v170;
  int v171;
  uint64_t (**v172)();
  std::string v173;
  int v174;
  uint64_t v175;
  int v176;
  uint64_t (**v177)();
  std::string v178;
  int v179;
  uint64_t v180;
  int v181;
  uint64_t (**v182)();
  std::string v183;
  int v184;
  uint64_t v185;
  int v186;
  uint64_t (**v187)();
  std::string v188;
  int v189;
  char v190;
  std::string v191;
  uint64_t (**v192)();
  std::string v193;
  int v194;
  uint64_t v195;
  int v196;
  uint64_t (**v197)();
  std::string v198;
  int v199;
  char v200;
  std::string v201;
  uint64_t (**v202)();
  std::string v203;
  int v204;
  uint64_t v205;
  uint64_t (**v206)();
  std::string v207;
  int v208;
  uint64_t v209;
  uint64_t (**v210)();
  std::string v211;
  int v212;
  uint64_t v213;
  int v214;
  uint64_t (**v215)();
  std::string v216;
  int v217;
  uint64_t v218;
  int v219;
  uint64_t (**v220)();
  std::string v221;
  int v222;
  uint64_t v223;
  int v224;
  uint64_t (**v225)();
  std::string v226;
  int v227;
  uint64_t v228;
  int v229;
  uint64_t (**v230)();
  std::string v231;
  int v232;
  char v233;
  std::string v234;
  uint64_t (**v235)();
  std::string v236;
  int v237;
  uint64_t v238;
  int v239;
  uint64_t (**v240)();
  std::string v241;
  int v242;
  uint64_t v243;
  int v244;
  uint64_t (**v245)();
  std::string v246;
  int v247;
  uint64_t v248;
  int v249;
  uint64_t (**v250)();
  std::string v251;
  int v252;
  uint64_t v253;
  int v254;
  uint64_t (**v255)();
  std::string v256;
  int v257;
  char v258;
  std::string v259;
  uint64_t (**v260)();
  std::string v261;
  int v262;
  uint64_t v263;
  int v264;
  uint64_t (**v265)();
  std::string v266;
  int v267;
  char v268;
  std::string v269;
  uint64_t (**v270)();
  std::string v271;
  int v272;
  uint64_t v273;
  uint64_t (**v274)();
  std::string v275;
  int v276;
  uint64_t v277;
  uint64_t (**v278)();
  std::string v279;
  int v280;
  uint64_t v281;
  int v282;
  uint64_t (**v283)();
  std::string v284;
  int v285;
  uint64_t v286;
  int v287;
  uint64_t (**v288)();
  std::string v289;
  int v290;
  uint64_t v291;
  int v292;
  uint64_t (**v293)();
  std::string v294;
  int v295;
  char v296;
  std::string v297;
  uint64_t (**v298)();
  std::string v299;
  int v300;
  uint64_t v301;
  int v302;
  uint64_t (**v303)();
  std::string v304;
  int v305;
  uint64_t v306;
  int v307;
  uint64_t (**v308)();
  std::string v309;
  int v310;
  uint64_t v311;
  int v312;
  uint64_t (**v313)();
  std::string v314;
  int v315;
  uint64_t v316;
  int v317;
  uint64_t (**v318)();
  std::string v319;
  int v320;
  char v321;
  std::string v322;
  uint64_t (**v323)();
  std::string v324;
  int v325;
  uint64_t v326;
  int v327;
  uint64_t (**v328)();
  std::string v329;
  int v330;
  char v331;
  std::string v332;
  uint64_t (**v333)();
  std::string v334;
  int v335;
  uint64_t v336;
  uint64_t (**v337)();
  std::string v338;
  int v339;
  uint64_t v340;
  uint64_t (**v341)();
  std::string v342;
  int v343;
  uint64_t v344;
  int v345;
  uint64_t (**v346)();
  std::string v347;
  int v348;
  uint64_t v349;
  int v350;
  uint64_t (**v351)();
  std::string v352;
  int v353;
  char v354;
  std::string v355;
  uint64_t (**v356)();
  std::string __p;
  int v358;
  uint64_t v359;
  int v360;
  uint64_t (**v361)();
  std::string v362;
  int v363;
  uint64_t v364;
  int v365;
  uint64_t (**v366)();
  std::string v367;
  int v368;
  uint64_t v369;
  int v370;
  uint64_t (**v371)();
  std::string v372;
  int v373;
  uint64_t v374;
  int v375;
  uint64_t (**v376)();
  std::string v377;
  int v378;
  char v379;
  std::string v380;
  uint64_t (**v381)();
  std::string v382;
  int v383;
  uint64_t v384;
  int v385;
  uint64_t (**v386)();
  std::string v387;
  int v388;
  char v389;
  std::string v390;
  uint64_t (**v391)();
  std::string v392;
  int v393;
  uint64_t v394;
  uint64_t (**v395)();
  std::string v396;
  int v397;
  uint64_t v398;
  uint64_t (**v399)();
  std::string v400;
  int v401;
  uint64_t v402;
  int v403;

  v157 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a3 + 31) < 0)
    std::string::__init_copy_ctor_external(&v158, *(const std::string::value_type **)(a3 + 8), *(_QWORD *)(a3 + 16));
  else
    v158 = *(std::string *)(a3 + 8);
  v159 = *(_DWORD *)(a3 + 32);
  v157 = &off_24C335AB8;
  v160 = *(_BYTE *)(a3 + 36);
  if (*(char *)(a3 + 63) < 0)
    std::string::__init_copy_ctor_external(&v161, *(const std::string::value_type **)(a3 + 40), *(_QWORD *)(a3 + 48));
  else
    v161 = *(std::string *)(a3 + 40);
  if (*(char *)(a4 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(a4 + 8), *(_QWORD *)(a4 + 16));
  else
    __s = *(std::string *)(a4 + 8);
  v24 = *(_DWORD *)(a4 + 32);
  v152 = off_24C335B18;
  v155 = *(_QWORD *)(a4 + 36);
  v25 = *(_DWORD *)(a4 + 44);
  v154 = v24;
  v156 = v25;
  if (*(char *)(a5 + 31) < 0)
    std::string::__init_copy_ctor_external(&v148, *(const std::string::value_type **)(a5 + 8), *(_QWORD *)(a5 + 16));
  else
    v148 = *(std::string *)(a5 + 8);
  v26 = *(_DWORD *)(a5 + 32);
  v147 = off_24C335B18;
  v150 = *(_QWORD *)(a5 + 36);
  v27 = *(_DWORD *)(a5 + 44);
  v77 = v26;
  v149 = v26;
  v151 = v27;
  if (*(char *)(a6 + 31) < 0)
    std::string::__init_copy_ctor_external(&v143, *(const std::string::value_type **)(a6 + 8), *(_QWORD *)(a6 + 16));
  else
    v143 = *(std::string *)(a6 + 8);
  v28 = *(_DWORD *)(a6 + 32);
  v142 = off_24C335B18;
  v145 = *(_QWORD *)(a6 + 36);
  v29 = *(_DWORD *)(a6 + 44);
  v83 = v28;
  v144 = v28;
  v146 = v29;
  if (*(char *)(a7 + 31) < 0)
    std::string::__init_copy_ctor_external(&v138, *(const std::string::value_type **)(a7 + 8), *(_QWORD *)(a7 + 16));
  else
    v138 = *(std::string *)(a7 + 8);
  v30 = *(_DWORD *)(a7 + 32);
  v137 = off_24C335B18;
  v140 = *(_QWORD *)(a7 + 36);
  v31 = *(_DWORD *)(a7 + 44);
  v88 = v30;
  v139 = v30;
  v141 = v31;
  if (*(char *)(a8 + 31) < 0)
    std::string::__init_copy_ctor_external(&v134, *(const std::string::value_type **)(a8 + 8), *(_QWORD *)(a8 + 16));
  else
    v134 = *(std::string *)(a8 + 8);
  v87 = *(_DWORD *)(a8 + 32);
  v135 = v87;
  v133 = off_24C335AF8;
  v86 = *(_QWORD *)(a8 + 36);
  v136 = v86;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v130, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v130 = *(std::string *)(a9 + 8);
  v85 = *(_DWORD *)(a9 + 32);
  v131 = v85;
  v129 = off_24C335AF8;
  v84 = *(_QWORD *)(a9 + 36);
  v132 = v84;
  v124 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v125, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v125 = *(std::string *)(a10 + 8);
  v126 = *(_DWORD *)(a10 + 32);
  v124 = &off_24C335AB8;
  v127 = *(_BYTE *)(a10 + 36);
  if (*(char *)(a10 + 63) < 0)
    std::string::__init_copy_ctor_external(&v128, *(const std::string::value_type **)(a10 + 40), *(_QWORD *)(a10 + 48));
  else
    v128 = *(std::string *)(a10 + 40);
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v120, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v120 = *(std::string *)(a11 + 8);
  v32 = *(_DWORD *)(a11 + 32);
  v119 = off_24C335B18;
  v122 = *(_QWORD *)(a11 + 36);
  v33 = *(_DWORD *)(a11 + 44);
  v82 = v32;
  v121 = v32;
  v123 = v33;
  v114 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v115, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v115 = *(std::string *)(a12 + 8);
  v116 = *(_DWORD *)(a12 + 32);
  v114 = &off_24C335AB8;
  v117 = *(_BYTE *)(a12 + 36);
  if (*(char *)(a12 + 63) < 0)
    std::string::__init_copy_ctor_external(&v118, *(const std::string::value_type **)(a12 + 40), *(_QWORD *)(a12 + 48));
  else
    v118 = *(std::string *)(a12 + 40);
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v110, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v110 = *(std::string *)(a13 + 8);
  v34 = *(_DWORD *)(a13 + 32);
  v109 = off_24C335B18;
  v112 = *(_QWORD *)(a13 + 36);
  v35 = *(_DWORD *)(a13 + 44);
  v81 = v34;
  v111 = v34;
  v113 = v35;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v105, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v105 = *(std::string *)(a14 + 8);
  v36 = *(_DWORD *)(a14 + 32);
  v104 = off_24C335B18;
  v107 = *(_QWORD *)(a14 + 36);
  v37 = *(_DWORD *)(a14 + 44);
  v80 = v36;
  v106 = v36;
  v108 = v37;
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v100, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v100 = *(std::string *)(a15 + 8);
  v38 = *(_DWORD *)(a15 + 32);
  v99 = off_24C335B18;
  v102 = *(_QWORD *)(a15 + 36);
  v39 = *(_DWORD *)(a15 + 44);
  v79 = v38;
  v101 = v38;
  v103 = v39;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v95, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v95 = *(std::string *)(a16 + 8);
  v78 = *(_DWORD *)(a16 + 32);
  v96 = v78;
  v94 = off_24C335B18;
  v97 = *(_QWORD *)(a16 + 36);
  v98 = *(_DWORD *)(a16 + 44);
  v89 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v90, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v90 = *(std::string *)(a17 + 8);
  v91 = *(_DWORD *)(a17 + 32);
  v89 = &off_24C335AB8;
  v92 = *(_BYTE *)(a17 + 36);
  if (*(char *)(a17 + 63) < 0)
    std::string::__init_copy_ctor_external(&v93, *(const std::string::value_type **)(a17 + 40), *(_QWORD *)(a17 + 48));
  else
    v93 = *(std::string *)(a17 + 40);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v226, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v226 = __s;
  v225 = off_24C335B18;
  v228 = v155;
  v227 = v24;
  v229 = v156;
  if (SHIBYTE(v148.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v221, v148.__r_.__value_.__l.__data_, v148.__r_.__value_.__l.__size_);
  else
    v221 = v148;
  v220 = off_24C335B18;
  v223 = v150;
  v222 = v77;
  v224 = v151;
  if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v216, v143.__r_.__value_.__l.__data_, v143.__r_.__value_.__l.__size_);
  else
    v216 = v143;
  v215 = off_24C335B18;
  v218 = v145;
  v217 = v83;
  v219 = v146;
  if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v211, v138.__r_.__value_.__l.__data_, v138.__r_.__value_.__l.__size_);
  else
    v211 = v138;
  v210 = off_24C335B18;
  v213 = v140;
  v212 = v88;
  v214 = v141;
  if (SHIBYTE(v134.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v207, v134.__r_.__value_.__l.__data_, v134.__r_.__value_.__l.__size_);
  else
    v207 = v134;
  v208 = v87;
  v206 = off_24C335AF8;
  v209 = v86;
  if (SHIBYTE(v130.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v203, v130.__r_.__value_.__l.__data_, v130.__r_.__value_.__l.__size_);
  else
    v203 = v130;
  v204 = v85;
  v202 = off_24C335AF8;
  v205 = v84;
  v197 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v125.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v198, v125.__r_.__value_.__l.__data_, v125.__r_.__value_.__l.__size_);
  else
    v198 = v125;
  v199 = v126;
  v197 = &off_24C335AB8;
  v200 = v127;
  if (SHIBYTE(v128.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v201, v128.__r_.__value_.__l.__data_, v128.__r_.__value_.__l.__size_);
  else
    v201 = v128;
  if (SHIBYTE(v120.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v193, v120.__r_.__value_.__l.__data_, v120.__r_.__value_.__l.__size_);
  else
    v193 = v120;
  v192 = off_24C335B18;
  v195 = v122;
  v194 = v82;
  v196 = v123;
  v187 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v115.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v188, v115.__r_.__value_.__l.__data_, v115.__r_.__value_.__l.__size_);
  else
    v188 = v115;
  v189 = v116;
  v187 = &off_24C335AB8;
  v190 = v117;
  if (SHIBYTE(v118.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v191, v118.__r_.__value_.__l.__data_, v118.__r_.__value_.__l.__size_);
  else
    v191 = v118;
  if (SHIBYTE(v110.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v183, v110.__r_.__value_.__l.__data_, v110.__r_.__value_.__l.__size_);
  else
    v183 = v110;
  v182 = off_24C335B18;
  v185 = v112;
  v184 = v81;
  v186 = v113;
  if (SHIBYTE(v105.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v178, v105.__r_.__value_.__l.__data_, v105.__r_.__value_.__l.__size_);
  else
    v178 = v105;
  v177 = off_24C335B18;
  v180 = v107;
  v179 = v80;
  v181 = v108;
  if (SHIBYTE(v100.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v173, v100.__r_.__value_.__l.__data_, v100.__r_.__value_.__l.__size_);
  else
    v173 = v100;
  v172 = off_24C335B18;
  v175 = v102;
  v174 = v79;
  v176 = v103;
  if (SHIBYTE(v95.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v168, v95.__r_.__value_.__l.__data_, v95.__r_.__value_.__l.__size_);
  else
    v168 = v95;
  v167 = off_24C335B18;
  v170 = v97;
  v169 = v78;
  v171 = v98;
  v162 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v90.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v163, v90.__r_.__value_.__l.__data_, v90.__r_.__value_.__l.__size_);
  else
    v163 = v90;
  v164 = v91;
  v162 = &off_24C335AB8;
  v165 = v92;
  if (SHIBYTE(v93.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v166, v93.__r_.__value_.__l.__data_, v93.__r_.__value_.__l.__size_);
  else
    v166 = v93;
  if (SHIBYTE(v221.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v289, v221.__r_.__value_.__l.__data_, v221.__r_.__value_.__l.__size_);
  else
    v289 = v221;
  v288 = off_24C335B18;
  v291 = v223;
  v290 = v77;
  v292 = v224;
  if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v284, v216.__r_.__value_.__l.__data_, v216.__r_.__value_.__l.__size_);
  else
    v284 = v216;
  v283 = off_24C335B18;
  v286 = v218;
  v285 = v83;
  v287 = v219;
  if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v279, v211.__r_.__value_.__l.__data_, v211.__r_.__value_.__l.__size_);
  else
    v279 = v211;
  v278 = off_24C335B18;
  v281 = v213;
  v280 = v88;
  v282 = v214;
  if (SHIBYTE(v207.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v275, v207.__r_.__value_.__l.__data_, v207.__r_.__value_.__l.__size_);
  else
    v275 = v207;
  v276 = v87;
  v274 = off_24C335AF8;
  v277 = v86;
  v270 = (uint64_t (**)())off_24C335D90;
  v71 = SHIBYTE(v203.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v203.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v271, v203.__r_.__value_.__l.__data_, v203.__r_.__value_.__l.__size_);
  else
    v271 = v203;
  v272 = v85;
  v270 = off_24C335AF8;
  v273 = v84;
  v265 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v198.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v266, v198.__r_.__value_.__l.__data_, v198.__r_.__value_.__l.__size_);
  else
    v266 = v198;
  v267 = v199;
  v265 = &off_24C335AB8;
  v268 = v200;
  if (SHIBYTE(v201.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v269, v201.__r_.__value_.__l.__data_, v201.__r_.__value_.__l.__size_);
  else
    v269 = v201;
  v260 = (uint64_t (**)())off_24C335D90;
  v40 = SHIBYTE(v193.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v193.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v261, v193.__r_.__value_.__l.__data_, v193.__r_.__value_.__l.__size_);
  else
    v261 = v193;
  v260 = off_24C335B18;
  v263 = v195;
  v262 = v82;
  v264 = v196;
  v255 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v188.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v256, v188.__r_.__value_.__l.__data_, v188.__r_.__value_.__l.__size_);
  else
    v256 = v188;
  v257 = v189;
  v255 = &off_24C335AB8;
  v258 = v190;
  if (SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v259, v191.__r_.__value_.__l.__data_, v191.__r_.__value_.__l.__size_);
  else
    v259 = v191;
  v250 = (uint64_t (**)())off_24C335D90;
  v74 = SHIBYTE(v183.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v183.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v251, v183.__r_.__value_.__l.__data_, v183.__r_.__value_.__l.__size_);
  else
    v251 = v183;
  v250 = off_24C335B18;
  v253 = v185;
  v252 = v81;
  v254 = v186;
  v245 = (uint64_t (**)())off_24C335D90;
  v41 = SHIBYTE(v178.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v178.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v246, v178.__r_.__value_.__l.__data_, v178.__r_.__value_.__l.__size_);
  else
    v246 = v178;
  v245 = off_24C335B18;
  v248 = v180;
  v247 = v80;
  v249 = v181;
  v240 = (uint64_t (**)())off_24C335D90;
  v70 = SHIBYTE(v173.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v173.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v241, v173.__r_.__value_.__l.__data_, v173.__r_.__value_.__l.__size_);
  else
    v241 = v173;
  v240 = off_24C335B18;
  v243 = v175;
  v242 = v79;
  v244 = v176;
  v235 = (uint64_t (**)())off_24C335D90;
  v69 = SHIBYTE(v168.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v168.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v236, v168.__r_.__value_.__l.__data_, v168.__r_.__value_.__l.__size_);
  else
    v236 = v168;
  v235 = off_24C335B18;
  v238 = v170;
  v237 = v78;
  v239 = v171;
  v230 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v163.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v231, v163.__r_.__value_.__l.__data_, v163.__r_.__value_.__l.__size_);
  else
    v231 = v163;
  v232 = v164;
  v230 = &off_24C335AB8;
  v233 = v165;
  if (SHIBYTE(v166.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v234, v166.__r_.__value_.__l.__data_, v166.__r_.__value_.__l.__size_);
  else
    v234 = v166;
  v346 = (uint64_t (**)())off_24C335D90;
  v68 = SHIBYTE(v284.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v284.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v347, v284.__r_.__value_.__l.__data_, v284.__r_.__value_.__l.__size_);
  else
    v347 = v284;
  v346 = off_24C335B18;
  v349 = v286;
  v348 = v83;
  v350 = v287;
  v341 = (uint64_t (**)())off_24C335D90;
  v66 = SHIBYTE(v279.__r_.__value_.__r.__words[2]);
  v65 = v41;
  if (SHIBYTE(v279.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v342, v279.__r_.__value_.__l.__data_, v279.__r_.__value_.__l.__size_);
  else
    v342 = v279;
  v341 = off_24C335B18;
  v344 = v281;
  v343 = v88;
  v345 = v282;
  v337 = (uint64_t (**)())off_24C335D90;
  v64 = SHIBYTE(v275.__r_.__value_.__r.__words[2]);
  v67 = v40;
  if (SHIBYTE(v275.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v338, v275.__r_.__value_.__l.__data_, v275.__r_.__value_.__l.__size_);
  else
    v338 = v275;
  v339 = v87;
  v337 = off_24C335AF8;
  v340 = v86;
  v333 = (uint64_t (**)())off_24C335D90;
  v63 = SHIBYTE(v271.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v271.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v334, v271.__r_.__value_.__l.__data_, v271.__r_.__value_.__l.__size_);
  else
    v334 = v271;
  v335 = v85;
  v333 = off_24C335AF8;
  v336 = v84;
  v328 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v266.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v329, v266.__r_.__value_.__l.__data_, v266.__r_.__value_.__l.__size_);
  else
    v329 = v266;
  v330 = v267;
  v328 = &off_24C335AB8;
  v331 = v268;
  if (SHIBYTE(v269.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v332, v269.__r_.__value_.__l.__data_, v269.__r_.__value_.__l.__size_);
  else
    v332 = v269;
  v323 = (uint64_t (**)())off_24C335D90;
  v72 = SHIBYTE(v261.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v261.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v324, v261.__r_.__value_.__l.__data_, v261.__r_.__value_.__l.__size_);
  else
    v324 = v261;
  v323 = off_24C335B18;
  v326 = v263;
  v325 = v82;
  v327 = v264;
  v318 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v256.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v319, v256.__r_.__value_.__l.__data_, v256.__r_.__value_.__l.__size_);
  else
    v319 = v256;
  v320 = v257;
  v318 = &off_24C335AB8;
  v321 = v258;
  if (SHIBYTE(v259.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v322, v259.__r_.__value_.__l.__data_, v259.__r_.__value_.__l.__size_);
  else
    v322 = v259;
  v313 = (uint64_t (**)())off_24C335D90;
  v75 = SHIBYTE(v251.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v251.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v314, v251.__r_.__value_.__l.__data_, v251.__r_.__value_.__l.__size_);
  else
    v314 = v251;
  v313 = off_24C335B18;
  v316 = v253;
  v315 = v81;
  v317 = v254;
  v308 = (uint64_t (**)())off_24C335D90;
  v62 = SHIBYTE(v246.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v246.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v309, v246.__r_.__value_.__l.__data_, v246.__r_.__value_.__l.__size_);
  else
    v309 = v246;
  v308 = off_24C335B18;
  v311 = v248;
  v310 = v80;
  v312 = v249;
  v303 = (uint64_t (**)())off_24C335D90;
  v61 = SHIBYTE(v241.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v241.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v304, v241.__r_.__value_.__l.__data_, v241.__r_.__value_.__l.__size_);
  else
    v304 = v241;
  v303 = off_24C335B18;
  v306 = v243;
  v305 = v79;
  v307 = v244;
  v298 = (uint64_t (**)())off_24C335D90;
  v60 = SHIBYTE(v236.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v236.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v299, v236.__r_.__value_.__l.__data_, v236.__r_.__value_.__l.__size_);
  else
    v299 = v236;
  v298 = off_24C335B18;
  v301 = v238;
  v300 = v78;
  v302 = v239;
  v293 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v231.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v294, v231.__r_.__value_.__l.__data_, v231.__r_.__value_.__l.__size_);
  else
    v294 = v231;
  v295 = v232;
  v293 = &off_24C335AB8;
  v296 = v233;
  if (SHIBYTE(v234.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v297, v234.__r_.__value_.__l.__data_, v234.__r_.__value_.__l.__size_);
  else
    v297 = v234;
  v399 = (uint64_t (**)())off_24C335D90;
  v76 = SHIBYTE(v342.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v342.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v400, v342.__r_.__value_.__l.__data_, v342.__r_.__value_.__l.__size_);
  else
    v400 = v342;
  v399 = off_24C335B18;
  v402 = v344;
  v401 = v88;
  v403 = v345;
  v395 = (uint64_t (**)())off_24C335D90;
  v42 = SHIBYTE(v338.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v338.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v396, v338.__r_.__value_.__l.__data_, v338.__r_.__value_.__l.__size_);
  else
    v396 = v338;
  v397 = v87;
  v395 = off_24C335AF8;
  v398 = v86;
  v391 = (uint64_t (**)())off_24C335D90;
  v43 = SHIBYTE(v334.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v334.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v392, v334.__r_.__value_.__l.__data_, v334.__r_.__value_.__l.__size_);
  else
    v392 = v334;
  v393 = v85;
  v391 = off_24C335AF8;
  v394 = v84;
  v386 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v329.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v387, v329.__r_.__value_.__l.__data_, v329.__r_.__value_.__l.__size_);
  else
    v387 = v329;
  v388 = v330;
  v386 = &off_24C335AB8;
  v389 = v331;
  if (SHIBYTE(v332.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v390, v332.__r_.__value_.__l.__data_, v332.__r_.__value_.__l.__size_);
  else
    v390 = v332;
  v381 = (uint64_t (**)())off_24C335D90;
  v44 = SHIBYTE(v324.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v324.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v382, v324.__r_.__value_.__l.__data_, v324.__r_.__value_.__l.__size_);
  else
    v382 = v324;
  v381 = off_24C335B18;
  v384 = v326;
  v383 = v82;
  v385 = v327;
  v376 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v319.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v377, v319.__r_.__value_.__l.__data_, v319.__r_.__value_.__l.__size_);
  else
    v377 = v319;
  v378 = v320;
  v376 = &off_24C335AB8;
  v379 = v321;
  if (SHIBYTE(v322.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v380, v322.__r_.__value_.__l.__data_, v322.__r_.__value_.__l.__size_);
  else
    v380 = v322;
  v371 = (uint64_t (**)())off_24C335D90;
  v45 = SHIBYTE(v314.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v314.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v372, v314.__r_.__value_.__l.__data_, v314.__r_.__value_.__l.__size_);
  else
    v372 = v314;
  v371 = off_24C335B18;
  v374 = v316;
  v373 = v81;
  v375 = v317;
  v366 = (uint64_t (**)())off_24C335D90;
  v46 = SHIBYTE(v309.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v309.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v367, v309.__r_.__value_.__l.__data_, v309.__r_.__value_.__l.__size_);
  else
    v367 = v309;
  v366 = off_24C335B18;
  v369 = v311;
  v368 = v80;
  v370 = v312;
  v361 = (uint64_t (**)())off_24C335D90;
  v47 = SHIBYTE(v304.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v304.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v362, v304.__r_.__value_.__l.__data_, v304.__r_.__value_.__l.__size_);
  else
    v362 = v304;
  v361 = off_24C335B18;
  v364 = v306;
  v363 = v79;
  v365 = v307;
  v356 = (uint64_t (**)())off_24C335D90;
  v48 = SHIBYTE(v299.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v299.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v299.__r_.__value_.__l.__data_, v299.__r_.__value_.__l.__size_);
  else
    __p = v299;
  v356 = off_24C335B18;
  v359 = v301;
  v358 = v78;
  v360 = v302;
  v351 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v294.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v352, v294.__r_.__value_.__l.__data_, v294.__r_.__value_.__l.__size_);
  else
    v352 = v294;
  v353 = v295;
  v351 = &off_24C335AB8;
  v354 = v296;
  if (SHIBYTE(v297.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v355, v297.__r_.__value_.__l.__data_, v297.__r_.__value_.__l.__size_);
  else
    v355 = v297;
  mediaplatform::DatabaseColumnTuple<47ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(a1, (uint64_t)&v399, (uint64_t)&v395, (uint64_t)&v391, (uint64_t)&v386, (uint64_t)&v381, (uint64_t)&v376, (uint64_t)&v371, (uint64_t)&v366, (uint64_t)&v361, (uint64_t)&v356, (uint64_t)&v351);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v351);
  v356 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v361 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v362.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v362.__r_.__value_.__l.__data_);
  v366 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v367.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v367.__r_.__value_.__l.__data_);
  v371 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v372.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v372.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v376);
  v381 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v382.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v382.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v386);
  v391 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v392.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v392.__r_.__value_.__l.__data_);
  v395 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v396.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v396.__r_.__value_.__l.__data_);
  v399 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v400.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v400.__r_.__value_.__l.__data_);
  *(_QWORD *)(a1 + 576) = off_24C335D90;
  v49 = (std::string *)(a1 + 584);
  v50 = SHIBYTE(v347.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v347.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v49, v347.__r_.__value_.__l.__data_, v347.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v49->__r_.__value_.__l.__data_ = *(_OWORD *)&v347.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 600) = *((_QWORD *)&v347.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(a1 + 608) = v83;
  *(_QWORD *)(a1 + 576) = off_24C335B18;
  *(_QWORD *)(a1 + 612) = v349;
  *(_DWORD *)(a1 + 620) = v350;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v293);
  v298 = (uint64_t (**)())off_24C335D90;
  if (v48 < 0)
    operator delete(v299.__r_.__value_.__l.__data_);
  v303 = (uint64_t (**)())off_24C335D90;
  if (v47 < 0)
    operator delete(v304.__r_.__value_.__l.__data_);
  v308 = (uint64_t (**)())off_24C335D90;
  if (v46 < 0)
    operator delete(v309.__r_.__value_.__l.__data_);
  v313 = (uint64_t (**)())off_24C335D90;
  if (v45 < 0)
    operator delete(v314.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v318);
  v323 = (uint64_t (**)())off_24C335D90;
  if (v44 < 0)
    operator delete(v324.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v328);
  v333 = (uint64_t (**)())off_24C335D90;
  if (v43 < 0)
    operator delete(v334.__r_.__value_.__l.__data_);
  v337 = (uint64_t (**)())off_24C335D90;
  if (v42 < 0)
    operator delete(v338.__r_.__value_.__l.__data_);
  v341 = (uint64_t (**)())off_24C335D90;
  if (v76 < 0)
    operator delete(v342.__r_.__value_.__l.__data_);
  v346 = (uint64_t (**)())off_24C335D90;
  if (v50 < 0)
    operator delete(v347.__r_.__value_.__l.__data_);
  *(_QWORD *)(a1 + 624) = off_24C335D90;
  v51 = (std::string *)(a1 + 632);
  v52 = SHIBYTE(v289.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v289.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v51, v289.__r_.__value_.__l.__data_, v289.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v51->__r_.__value_.__l.__data_ = *(_OWORD *)&v289.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 648) = *((_QWORD *)&v289.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(a1 + 656) = v77;
  *(_QWORD *)(a1 + 624) = off_24C335B18;
  *(_QWORD *)(a1 + 660) = v291;
  *(_DWORD *)(a1 + 668) = v292;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v230);
  v235 = (uint64_t (**)())off_24C335D90;
  if (v60 < 0)
    operator delete(v236.__r_.__value_.__l.__data_);
  v240 = (uint64_t (**)())off_24C335D90;
  if (v61 < 0)
    operator delete(v241.__r_.__value_.__l.__data_);
  v245 = (uint64_t (**)())off_24C335D90;
  if (v62 < 0)
    operator delete(v246.__r_.__value_.__l.__data_);
  v250 = (uint64_t (**)())off_24C335D90;
  if (v75 < 0)
    operator delete(v251.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v255);
  v260 = (uint64_t (**)())off_24C335D90;
  if (v72 < 0)
    operator delete(v261.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v265);
  v270 = (uint64_t (**)())off_24C335D90;
  if (v63 < 0)
    operator delete(v271.__r_.__value_.__l.__data_);
  v274 = (uint64_t (**)())off_24C335D90;
  if (v64 < 0)
    operator delete(v275.__r_.__value_.__l.__data_);
  if (v66 < 0)
    operator delete(v279.__r_.__value_.__l.__data_);
  if (v68 < 0)
  {
    operator delete(v284.__r_.__value_.__l.__data_);
    if ((v52 & 0x80000000) == 0)
      goto LABEL_302;
  }
  else if ((v52 & 0x80000000) == 0)
  {
    goto LABEL_302;
  }
  operator delete(v289.__r_.__value_.__l.__data_);
LABEL_302:
  *(_QWORD *)(a1 + 672) = off_24C335D90;
  v53 = (std::string *)(a1 + 680);
  v54 = SHIBYTE(v226.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v226.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v53, v226.__r_.__value_.__l.__data_, v226.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v53->__r_.__value_.__l.__data_ = *(_OWORD *)&v226.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 696) = *((_QWORD *)&v226.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(a1 + 704) = v227;
  *(_QWORD *)(a1 + 672) = off_24C335B18;
  *(_QWORD *)(a1 + 708) = v228;
  *(_DWORD *)(a1 + 716) = v229;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v162);
  v167 = (uint64_t (**)())off_24C335D90;
  if (v69 < 0)
    operator delete(v168.__r_.__value_.__l.__data_);
  v172 = (uint64_t (**)())off_24C335D90;
  if (v70 < 0)
    operator delete(v173.__r_.__value_.__l.__data_);
  v177 = (uint64_t (**)())off_24C335D90;
  if (v65 < 0)
    operator delete(v178.__r_.__value_.__l.__data_);
  v182 = (uint64_t (**)())off_24C335D90;
  if (v74 < 0)
    operator delete(v183.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v187);
  v192 = (uint64_t (**)())off_24C335D90;
  if (v67 < 0)
    operator delete(v193.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v197);
  v202 = (uint64_t (**)())off_24C335D90;
  if (v71 < 0)
    operator delete(v203.__r_.__value_.__l.__data_);
  v206 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v207.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v207.__r_.__value_.__l.__data_);
  v210 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v211.__r_.__value_.__l.__data_);
  v215 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v216.__r_.__value_.__l.__data_);
  v220 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v221.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v221.__r_.__value_.__l.__data_);
    if ((v54 & 0x80000000) == 0)
      goto LABEL_327;
  }
  else if ((v54 & 0x80000000) == 0)
  {
    goto LABEL_327;
  }
  operator delete(v226.__r_.__value_.__l.__data_);
LABEL_327:
  *(_QWORD *)(a1 + 720) = off_24C335D90;
  if (SHIBYTE(v158.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)(a1 + 728), v158.__r_.__value_.__l.__data_, v158.__r_.__value_.__l.__size_);
  else
    *(std::string *)(a1 + 728) = v158;
  *(_DWORD *)(a1 + 752) = v159;
  *(_QWORD *)(a1 + 720) = &off_24C335AB8;
  *(_BYTE *)(a1 + 756) = v160;
  v55 = (std::string *)(a1 + 760);
  if (SHIBYTE(v161.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v55, v161.__r_.__value_.__l.__data_, v161.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v55->__r_.__value_.__l.__data_ = *(_OWORD *)&v161.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 776) = *((_QWORD *)&v161.__r_.__value_.__l + 2);
  }
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v89);
  if (SHIBYTE(v95.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v95.__r_.__value_.__l.__data_);
  if (SHIBYTE(v100.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v100.__r_.__value_.__l.__data_);
  if (SHIBYTE(v105.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v105.__r_.__value_.__l.__data_);
  if (SHIBYTE(v110.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v110.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v114);
  if (SHIBYTE(v120.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v120.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v124);
  if (SHIBYTE(v130.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v130.__r_.__value_.__l.__data_);
  if (SHIBYTE(v134.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v134.__r_.__value_.__l.__data_);
  if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v138.__r_.__value_.__l.__data_);
  if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v143.__r_.__value_.__l.__data_);
  if (SHIBYTE(v148.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v148.__r_.__value_.__l.__data_);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__s.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v157);
  *(_QWORD *)(a1 + 784) = off_24C335D90;
  if (*(char *)(a2 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(a1 + 792), *(const std::string::value_type **)(a2 + 8), *(_QWORD *)(a2 + 16));
  }
  else
  {
    v56 = *(_OWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 808) = *(_QWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 792) = v56;
  }
  *(_DWORD *)(a1 + 816) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 784) = &off_24C335AB8;
  *(_BYTE *)(a1 + 820) = *(_BYTE *)(a2 + 36);
  v57 = (std::string *)(a1 + 824);
  if (*(char *)(a2 + 63) < 0)
  {
    std::string::__init_copy_ctor_external(v57, *(const std::string::value_type **)(a2 + 40), *(_QWORD *)(a2 + 48));
  }
  else
  {
    v58 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 840) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)&v57->__r_.__value_.__l.__data_ = v58;
  }
  return a1;
}

void sub_20A8BB184(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 784) = v3;
  if (*(char *)(v1 + 815) < 0)
    operator delete(*v2);
  mediaplatform::DatabaseColumnTuple<43ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(v1);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<42ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 784);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 720);
  *(_QWORD *)(a1 + 672) = off_24C335D90;
  if (*(char *)(a1 + 703) < 0)
    operator delete(*(void **)(a1 + 680));
  return mediaplatform::DatabaseColumnTuple<45ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<43ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 720);
  *(_QWORD *)(a1 + 672) = off_24C335D90;
  if (*(char *)(a1 + 703) < 0)
    operator delete(*(void **)(a1 + 680));
  return mediaplatform::DatabaseColumnTuple<45ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<44ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 672) = off_24C335D90;
  if (*(char *)(a1 + 703) < 0)
    operator delete(*(void **)(a1 + 680));
  return mediaplatform::DatabaseColumnTuple<45ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<46ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 576) = off_24C335D90;
  if (*(char *)(a1 + 607) < 0)
    operator delete(*(void **)(a1 + 584));
  *(_QWORD *)(a1 + 528) = off_24C335D90;
  if (*(char *)(a1 + 559) < 0)
    operator delete(*(void **)(a1 + 536));
  *(_QWORD *)(a1 + 480) = off_24C335D90;
  if (*(char *)(a1 + 511) < 0)
    operator delete(*(void **)(a1 + 488));
  *(_QWORD *)(a1 + 432) = off_24C335D90;
  if (*(char *)(a1 + 463) < 0)
    operator delete(*(void **)(a1 + 440));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 368);
  return mediaplatform::DatabaseColumnTuple<51ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<47ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  std::string *v36;
  std::string *v37;
  int v38;
  std::string *v39;
  int v40;
  std::string *v41;
  int v42;
  std::string *v43;
  int v44;
  std::string *v45;
  std::string *v46;
  int v47;
  std::string *v48;
  std::string *v49;
  int v50;
  std::string *v51;
  int v52;
  std::string *v53;
  __int128 v54;
  uint64_t v55;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  uint64_t (**v78)();
  std::string v79;
  int v80;
  char v81;
  std::string v82;
  uint64_t (**v83)();
  std::string __p;
  int v85;
  uint64_t v86;
  int v87;
  uint64_t (**v88)();
  std::string v89;
  int v90;
  uint64_t v91;
  int v92;
  uint64_t (**v93)();
  std::string v94;
  int v95;
  uint64_t v96;
  int v97;
  uint64_t (**v98)();
  std::string v99;
  int v100;
  uint64_t v101;
  int v102;
  uint64_t (**v103)();
  std::string v104;
  int v105;
  char v106;
  std::string v107;
  uint64_t (**v108)();
  std::string v109;
  int v110;
  uint64_t v111;
  int v112;
  uint64_t (**v113)();
  std::string v114;
  int v115;
  char v116;
  std::string v117;
  uint64_t (**v118)();
  std::string __s;
  int v120;
  uint64_t v121;
  uint64_t (**v122)();
  std::string v123;
  int v124;
  uint64_t v125;
  uint64_t (**v126)();
  std::string v127;
  int v128;
  char v129;
  std::string v130;
  uint64_t (**v131)();
  std::string v132;
  int v133;
  uint64_t v134;
  int v135;
  uint64_t (**v136)();
  std::string v137;
  int v138;
  uint64_t v139;
  int v140;
  uint64_t (**v141)();
  std::string v142;
  int v143;
  uint64_t v144;
  int v145;
  uint64_t (**v146)();
  std::string v147;
  int v148;
  uint64_t v149;
  int v150;
  uint64_t (**v151)();
  std::string v152;
  int v153;
  char v154;
  std::string v155;
  uint64_t (**v156)();
  std::string v157;
  int v158;
  uint64_t v159;
  int v160;
  uint64_t (**v161)();
  std::string v162;
  int v163;
  char v164;
  std::string v165;
  uint64_t (**v166)();
  std::string v167;
  int v168;
  uint64_t v169;
  uint64_t (**v170)();
  std::string v171;
  int v172;
  char v173;
  std::string v174;
  uint64_t (**v175)();
  std::string v176;
  int v177;
  uint64_t v178;
  int v179;
  uint64_t (**v180)();
  std::string v181;
  int v182;
  uint64_t v183;
  int v184;
  uint64_t (**v185)();
  std::string v186;
  int v187;
  uint64_t v188;
  int v189;
  uint64_t (**v190)();
  std::string v191;
  int v192;
  uint64_t v193;
  int v194;
  uint64_t (**v195)();
  std::string v196;
  int v197;
  char v198;
  std::string v199;
  uint64_t (**v200)();
  std::string v201;
  int v202;
  uint64_t v203;
  int v204;
  uint64_t (**v205)();
  std::string v206;
  int v207;
  char v208;
  std::string v209;
  uint64_t (**v210)();
  std::string v211;
  int v212;
  char v213;
  std::string v214;
  uint64_t (**v215)();
  std::string v216;
  int v217;
  uint64_t v218;
  int v219;
  uint64_t (**v220)();
  std::string v221;
  int v222;
  uint64_t v223;
  int v224;
  uint64_t (**v225)();
  std::string v226;
  int v227;
  uint64_t v228;
  int v229;
  uint64_t (**v230)();
  std::string v231;
  int v232;
  uint64_t v233;
  int v234;
  uint64_t (**v235)();
  std::string v236;
  int v237;
  char v238;
  std::string v239;
  uint64_t (**v240)();
  std::string v241;
  int v242;
  uint64_t v243;
  int v244;
  uint64_t (**v245)();
  std::string v246;
  int v247;
  char v248;
  std::string v249;
  uint64_t (**v250)();
  std::string v251;
  int v252;
  uint64_t v253;
  int v254;
  uint64_t (**v255)();
  std::string v256;
  int v257;
  uint64_t v258;
  int v259;
  uint64_t (**v260)();
  std::string v261;
  int v262;
  uint64_t v263;
  int v264;
  uint64_t (**v265)();
  std::string v266;
  int v267;
  uint64_t v268;
  int v269;
  uint64_t (**v270)();
  std::string v271;
  int v272;
  char v273;
  std::string v274;
  uint64_t (**v275)();
  std::string v276;
  int v277;
  char v278;
  std::string v279;
  uint64_t (**v280)();
  std::string v281;
  int v282;
  uint64_t v283;
  int v284;
  uint64_t (**v285)();
  std::string v286;
  int v287;
  uint64_t v288;
  int v289;
  uint64_t (**v290)();
  std::string v291;
  int v292;
  uint64_t v293;
  int v294;
  uint64_t (**v295)();
  std::string v296;
  int v297;
  uint64_t v298;
  int v299;
  uint64_t (**v300)();
  std::string v301;
  int v302;
  char v303;
  std::string v304;
  uint64_t (**v305)();
  std::string v306;
  int v307;
  uint64_t v308;
  int v309;
  uint64_t (**v310)();
  std::string v311;
  int v312;
  uint64_t v313;
  int v314;
  uint64_t (**v315)();
  std::string v316;
  int v317;
  uint64_t v318;
  int v319;
  uint64_t (**v320)();
  std::string v321;
  int v322;
  char v323;
  std::string v324;
  void (**v325)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v326;
  int v327;
  uint64_t v328;
  int v329;
  uint64_t (**v330)();
  std::string v331;
  int v332;
  uint64_t v333;
  int v334;
  uint64_t (**v335)();
  std::string v336;
  int v337;
  char v338;
  std::string v339;
  void (**v340)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v341;
  int v342;
  uint64_t v343;
  int v344;
  uint64_t (**v345)();
  std::string v346;
  int v347;
  char v348;
  std::string v349;

  if (*(char *)(a3 + 31) < 0)
    std::string::__init_copy_ctor_external(&v123, *(const std::string::value_type **)(a3 + 8), *(_QWORD *)(a3 + 16));
  else
    v123 = *(std::string *)(a3 + 8);
  v124 = *(_DWORD *)(a3 + 32);
  v122 = off_24C335AF8;
  v125 = *(_QWORD *)(a3 + 36);
  if (*(char *)(a4 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(a4 + 8), *(_QWORD *)(a4 + 16));
  else
    __s = *(std::string *)(a4 + 8);
  v19 = *(_DWORD *)(a4 + 32);
  v120 = v19;
  v118 = off_24C335AF8;
  v20 = *(_QWORD *)(a4 + 36);
  v121 = v20;
  v113 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a5 + 31) < 0)
    std::string::__init_copy_ctor_external(&v114, *(const std::string::value_type **)(a5 + 8), *(_QWORD *)(a5 + 16));
  else
    v114 = *(std::string *)(a5 + 8);
  v115 = *(_DWORD *)(a5 + 32);
  v113 = &off_24C335AB8;
  v116 = *(_BYTE *)(a5 + 36);
  if (*(char *)(a5 + 63) < 0)
    std::string::__init_copy_ctor_external(&v117, *(const std::string::value_type **)(a5 + 40), *(_QWORD *)(a5 + 48));
  else
    v117 = *(std::string *)(a5 + 40);
  if (*(char *)(a6 + 31) < 0)
    std::string::__init_copy_ctor_external(&v109, *(const std::string::value_type **)(a6 + 8), *(_QWORD *)(a6 + 16));
  else
    v109 = *(std::string *)(a6 + 8);
  v21 = *(_DWORD *)(a6 + 32);
  v108 = off_24C335B18;
  v111 = *(_QWORD *)(a6 + 36);
  v22 = *(_DWORD *)(a6 + 44);
  v73 = v21;
  v110 = v21;
  v112 = v22;
  v103 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a7 + 31) < 0)
    std::string::__init_copy_ctor_external(&v104, *(const std::string::value_type **)(a7 + 8), *(_QWORD *)(a7 + 16));
  else
    v104 = *(std::string *)(a7 + 8);
  v105 = *(_DWORD *)(a7 + 32);
  v103 = &off_24C335AB8;
  v106 = *(_BYTE *)(a7 + 36);
  if (*(char *)(a7 + 63) < 0)
    std::string::__init_copy_ctor_external(&v107, *(const std::string::value_type **)(a7 + 40), *(_QWORD *)(a7 + 48));
  else
    v107 = *(std::string *)(a7 + 40);
  if (*(char *)(a8 + 31) < 0)
    std::string::__init_copy_ctor_external(&v99, *(const std::string::value_type **)(a8 + 8), *(_QWORD *)(a8 + 16));
  else
    v99 = *(std::string *)(a8 + 8);
  v23 = *(_DWORD *)(a8 + 32);
  v98 = off_24C335B18;
  v101 = *(_QWORD *)(a8 + 36);
  v24 = *(_DWORD *)(a8 + 44);
  v74 = v23;
  v100 = v23;
  v102 = v24;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v94, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v94 = *(std::string *)(a9 + 8);
  v25 = *(_DWORD *)(a9 + 32);
  v93 = off_24C335B18;
  v96 = *(_QWORD *)(a9 + 36);
  v26 = *(_DWORD *)(a9 + 44);
  v75 = v25;
  v95 = v25;
  v97 = v26;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v89, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v89 = *(std::string *)(a10 + 8);
  v27 = *(_DWORD *)(a10 + 32);
  v88 = off_24C335B18;
  v91 = *(_QWORD *)(a10 + 36);
  v28 = *(_DWORD *)(a10 + 44);
  v76 = v27;
  v90 = v27;
  v92 = v28;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    __p = *(std::string *)(a11 + 8);
  v77 = *(_DWORD *)(a11 + 32);
  v85 = v77;
  v83 = off_24C335B18;
  v86 = *(_QWORD *)(a11 + 36);
  v87 = *(_DWORD *)(a11 + 44);
  v78 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v79, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v79 = *(std::string *)(a12 + 8);
  v80 = *(_DWORD *)(a12 + 32);
  v78 = &off_24C335AB8;
  v81 = *(_BYTE *)(a12 + 36);
  if (*(char *)(a12 + 63) < 0)
    std::string::__init_copy_ctor_external(&v82, *(const std::string::value_type **)(a12 + 40), *(_QWORD *)(a12 + 48));
  else
    v82 = *(std::string *)(a12 + 40);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v167, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v167 = __s;
  v168 = v19;
  v166 = off_24C335AF8;
  v169 = v20;
  v161 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v114.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v162, v114.__r_.__value_.__l.__data_, v114.__r_.__value_.__l.__size_);
  else
    v162 = v114;
  v163 = v115;
  v161 = &off_24C335AB8;
  v164 = v116;
  if (SHIBYTE(v117.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v165, v117.__r_.__value_.__l.__data_, v117.__r_.__value_.__l.__size_);
  else
    v165 = v117;
  if (SHIBYTE(v109.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v157, v109.__r_.__value_.__l.__data_, v109.__r_.__value_.__l.__size_);
  else
    v157 = v109;
  v156 = off_24C335B18;
  v159 = v111;
  v158 = v73;
  v160 = v112;
  v151 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v152, v104.__r_.__value_.__l.__data_, v104.__r_.__value_.__l.__size_);
  else
    v152 = v104;
  v153 = v105;
  v151 = &off_24C335AB8;
  v154 = v106;
  if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v155, v107.__r_.__value_.__l.__data_, v107.__r_.__value_.__l.__size_);
  else
    v155 = v107;
  if (SHIBYTE(v99.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v147, v99.__r_.__value_.__l.__data_, v99.__r_.__value_.__l.__size_);
  else
    v147 = v99;
  v146 = off_24C335B18;
  v149 = v101;
  v148 = v74;
  v150 = v102;
  if (SHIBYTE(v94.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v142, v94.__r_.__value_.__l.__data_, v94.__r_.__value_.__l.__size_);
  else
    v142 = v94;
  v141 = off_24C335B18;
  v144 = v96;
  v143 = v75;
  v145 = v97;
  if (SHIBYTE(v89.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v137, v89.__r_.__value_.__l.__data_, v89.__r_.__value_.__l.__size_);
  else
    v137 = v89;
  v136 = off_24C335B18;
  v139 = v91;
  v138 = v76;
  v140 = v92;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v132, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  else
    v132 = __p;
  v131 = off_24C335B18;
  v134 = v86;
  v133 = v77;
  v135 = v87;
  v126 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v127, v79.__r_.__value_.__l.__data_, v79.__r_.__value_.__l.__size_);
  else
    v127 = v79;
  v128 = v80;
  v126 = &off_24C335AB8;
  v129 = v81;
  if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v130, v82.__r_.__value_.__l.__data_, v82.__r_.__value_.__l.__size_);
  else
    v130 = v82;
  v205 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v162.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v206, v162.__r_.__value_.__l.__data_, v162.__r_.__value_.__l.__size_);
  else
    v206 = v162;
  v207 = v163;
  v205 = &off_24C335AB8;
  v208 = v164;
  if (SHIBYTE(v165.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v209, v165.__r_.__value_.__l.__data_, v165.__r_.__value_.__l.__size_);
  else
    v209 = v165;
  if (SHIBYTE(v157.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v201, v157.__r_.__value_.__l.__data_, v157.__r_.__value_.__l.__size_);
  else
    v201 = v157;
  v200 = off_24C335B18;
  v203 = v159;
  v202 = v73;
  v204 = v160;
  v195 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v152.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v196, v152.__r_.__value_.__l.__data_, v152.__r_.__value_.__l.__size_);
  else
    v196 = v152;
  v197 = v153;
  v195 = &off_24C335AB8;
  v198 = v154;
  if (SHIBYTE(v155.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v199, v155.__r_.__value_.__l.__data_, v155.__r_.__value_.__l.__size_);
  else
    v199 = v155;
  if (SHIBYTE(v147.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v191, v147.__r_.__value_.__l.__data_, v147.__r_.__value_.__l.__size_);
  else
    v191 = v147;
  v190 = off_24C335B18;
  v193 = v149;
  v192 = v74;
  v194 = v150;
  if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v186, v142.__r_.__value_.__l.__data_, v142.__r_.__value_.__l.__size_);
  else
    v186 = v142;
  v185 = off_24C335B18;
  v188 = v144;
  v187 = v75;
  v189 = v145;
  if (SHIBYTE(v137.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v181, v137.__r_.__value_.__l.__data_, v137.__r_.__value_.__l.__size_);
  else
    v181 = v137;
  v180 = off_24C335B18;
  v183 = v139;
  v182 = v76;
  v184 = v140;
  if (SHIBYTE(v132.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v176, v132.__r_.__value_.__l.__data_, v132.__r_.__value_.__l.__size_);
  else
    v176 = v132;
  v175 = off_24C335B18;
  v178 = v134;
  v177 = v77;
  v179 = v135;
  v170 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v127.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v171, v127.__r_.__value_.__l.__data_, v127.__r_.__value_.__l.__size_);
  else
    v171 = v127;
  v172 = v128;
  v170 = &off_24C335AB8;
  v173 = v129;
  if (SHIBYTE(v130.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v174, v130.__r_.__value_.__l.__data_, v130.__r_.__value_.__l.__size_);
  else
    v174 = v130;
  v70 = SHIBYTE(v201.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v201.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v241, v201.__r_.__value_.__l.__data_, v201.__r_.__value_.__l.__size_);
  else
    v241 = v201;
  v240 = off_24C335B18;
  v243 = v159;
  v242 = v73;
  v244 = v160;
  v235 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v196.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v236, v196.__r_.__value_.__l.__data_, v196.__r_.__value_.__l.__size_);
  else
    v236 = v196;
  v237 = v197;
  v235 = &off_24C335AB8;
  v238 = v198;
  if (SHIBYTE(v199.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v239, v199.__r_.__value_.__l.__data_, v199.__r_.__value_.__l.__size_);
  else
    v239 = v199;
  v69 = SHIBYTE(v191.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v231, v191.__r_.__value_.__l.__data_, v191.__r_.__value_.__l.__size_);
  else
    v231 = v191;
  v230 = off_24C335B18;
  v233 = v149;
  v232 = v74;
  v234 = v150;
  v68 = SHIBYTE(v186.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v186.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v226, v186.__r_.__value_.__l.__data_, v186.__r_.__value_.__l.__size_);
  else
    v226 = v186;
  v225 = off_24C335B18;
  v228 = v144;
  v227 = v75;
  v229 = v145;
  v67 = SHIBYTE(v181.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v181.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v221, v181.__r_.__value_.__l.__data_, v181.__r_.__value_.__l.__size_);
  else
    v221 = v181;
  v220 = off_24C335B18;
  v223 = v139;
  v222 = v76;
  v224 = v140;
  v66 = SHIBYTE(v176.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v176.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v216, v176.__r_.__value_.__l.__data_, v176.__r_.__value_.__l.__size_);
  else
    v216 = v176;
  v215 = off_24C335B18;
  v218 = v134;
  v217 = v77;
  v219 = v135;
  v210 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v171.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v211, v171.__r_.__value_.__l.__data_, v171.__r_.__value_.__l.__size_);
  else
    v211 = v171;
  v212 = v172;
  v210 = &off_24C335AB8;
  v213 = v173;
  if (SHIBYTE(v174.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v214, v174.__r_.__value_.__l.__data_, v174.__r_.__value_.__l.__size_);
  else
    v214 = v174;
  v270 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v236.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v271, v236.__r_.__value_.__l.__data_, v236.__r_.__value_.__l.__size_);
  else
    v271 = v236;
  v272 = v237;
  v270 = &off_24C335AB8;
  v273 = v238;
  if (SHIBYTE(v239.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v274, v239.__r_.__value_.__l.__data_, v239.__r_.__value_.__l.__size_);
  else
    v274 = v239;
  v29 = SHIBYTE(v231.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v231.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v266, v231.__r_.__value_.__l.__data_, v231.__r_.__value_.__l.__size_);
  else
    v266 = v231;
  v265 = off_24C335B18;
  v268 = v149;
  v267 = v74;
  v269 = v150;
  v260 = (uint64_t (**)())off_24C335D90;
  v65 = SHIBYTE(v226.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v226.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v261, v226.__r_.__value_.__l.__data_, v226.__r_.__value_.__l.__size_);
  else
    v261 = v226;
  v260 = off_24C335B18;
  v263 = v144;
  v262 = v75;
  v264 = v145;
  v255 = (uint64_t (**)())off_24C335D90;
  v64 = SHIBYTE(v221.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v221.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v256, v221.__r_.__value_.__l.__data_, v221.__r_.__value_.__l.__size_);
  else
    v256 = v221;
  v255 = off_24C335B18;
  v258 = v139;
  v257 = v76;
  v259 = v140;
  v250 = (uint64_t (**)())off_24C335D90;
  v63 = SHIBYTE(v216.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v251, v216.__r_.__value_.__l.__data_, v216.__r_.__value_.__l.__size_);
  else
    v251 = v216;
  v250 = off_24C335B18;
  v253 = v134;
  v252 = v77;
  v254 = v135;
  v245 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v246, v211.__r_.__value_.__l.__data_, v211.__r_.__value_.__l.__size_);
  else
    v246 = v211;
  v247 = v212;
  v245 = &off_24C335AB8;
  v248 = v213;
  if (SHIBYTE(v214.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v249, v214.__r_.__value_.__l.__data_, v214.__r_.__value_.__l.__size_);
  else
    v249 = v214;
  v295 = (uint64_t (**)())off_24C335D90;
  v61 = v29;
  v62 = SHIBYTE(v266.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v266.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v296, v266.__r_.__value_.__l.__data_, v266.__r_.__value_.__l.__size_);
  else
    v296 = v266;
  v295 = off_24C335B18;
  v298 = v149;
  v297 = v74;
  v299 = v150;
  v290 = (uint64_t (**)())off_24C335D90;
  v30 = SHIBYTE(v261.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v261.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v291, v261.__r_.__value_.__l.__data_, v261.__r_.__value_.__l.__size_);
  else
    v291 = v261;
  v290 = off_24C335B18;
  v293 = v144;
  v292 = v75;
  v294 = v145;
  v285 = (uint64_t (**)())off_24C335D90;
  v31 = SHIBYTE(v256.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v256.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v286, v256.__r_.__value_.__l.__data_, v256.__r_.__value_.__l.__size_);
  else
    v286 = v256;
  v285 = off_24C335B18;
  v288 = v139;
  v287 = v76;
  v289 = v140;
  v280 = (uint64_t (**)())off_24C335D90;
  v32 = SHIBYTE(v251.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v251.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v281, v251.__r_.__value_.__l.__data_, v251.__r_.__value_.__l.__size_);
  else
    v281 = v251;
  v280 = off_24C335B18;
  v283 = v134;
  v282 = v77;
  v284 = v135;
  v275 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v246.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v276, v246.__r_.__value_.__l.__data_, v246.__r_.__value_.__l.__size_);
  else
    v276 = v246;
  v277 = v247;
  v275 = &off_24C335AB8;
  v278 = v248;
  if (SHIBYTE(v249.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v279, v249.__r_.__value_.__l.__data_, v249.__r_.__value_.__l.__size_);
  else
    v279 = v249;
  v315 = (uint64_t (**)())off_24C335D90;
  v60 = SHIBYTE(v291.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v291.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v316, v291.__r_.__value_.__l.__data_, v291.__r_.__value_.__l.__size_);
  else
    v316 = v291;
  v315 = off_24C335B18;
  v318 = v144;
  v317 = v75;
  v319 = v145;
  v310 = (uint64_t (**)())off_24C335D90;
  v72 = SHIBYTE(v286.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v286.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v311, v286.__r_.__value_.__l.__data_, v286.__r_.__value_.__l.__size_);
  else
    v311 = v286;
  v310 = off_24C335B18;
  v313 = v139;
  v312 = v76;
  v314 = v140;
  v305 = (uint64_t (**)())off_24C335D90;
  v59 = SHIBYTE(v281.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v281.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v306, v281.__r_.__value_.__l.__data_, v281.__r_.__value_.__l.__size_);
  else
    v306 = v281;
  v305 = off_24C335B18;
  v308 = v134;
  v307 = v77;
  v309 = v135;
  v300 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v276.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v301, v276.__r_.__value_.__l.__data_, v276.__r_.__value_.__l.__size_);
  else
    v301 = v276;
  v302 = v277;
  v300 = &off_24C335AB8;
  v303 = v278;
  if (SHIBYTE(v279.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v304, v279.__r_.__value_.__l.__data_, v279.__r_.__value_.__l.__size_);
  else
    v304 = v279;
  v330 = (uint64_t (**)())off_24C335D90;
  v33 = SHIBYTE(v311.__r_.__value_.__r.__words[2]);
  v58 = v31;
  if (SHIBYTE(v311.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v331, v311.__r_.__value_.__l.__data_, v311.__r_.__value_.__l.__size_);
  else
    v331 = v311;
  v330 = off_24C335B18;
  v333 = v139;
  v332 = v76;
  v334 = v140;
  v325 = off_24C335D90;
  v34 = SHIBYTE(v306.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v306.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v326, v306.__r_.__value_.__l.__data_, v306.__r_.__value_.__l.__size_);
  else
    v326 = v306;
  v328 = v134;
  v327 = v77;
  v329 = v135;
  v320 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v301.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v321, v301.__r_.__value_.__l.__data_, v301.__r_.__value_.__l.__size_);
  else
    v321 = v301;
  v322 = v302;
  v320 = &off_24C335AB8;
  v323 = v303;
  v57 = v33;
  if (SHIBYTE(v304.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v324, v304.__r_.__value_.__l.__data_, v304.__r_.__value_.__l.__size_);
  else
    v324 = v304;
  v340 = off_24C335D90;
  v35 = SHIBYTE(v326.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v326.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v341, v326.__r_.__value_.__l.__data_, v326.__r_.__value_.__l.__size_);
  else
    v341 = v326;
  v342 = v77;
  v343 = v134;
  v344 = v135;
  v335 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v321.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v336, v321.__r_.__value_.__l.__data_, v321.__r_.__value_.__l.__size_);
  else
    v336 = v321;
  v337 = v322;
  v335 = &off_24C335AB8;
  v338 = v323;
  if (SHIBYTE(v324.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v339, v324.__r_.__value_.__l.__data_, v324.__r_.__value_.__l.__size_);
  else
    v339 = v324;
  v345 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v336.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v346, v336.__r_.__value_.__l.__data_, v336.__r_.__value_.__l.__size_);
  else
    v346 = v336;
  v347 = v337;
  v345 = &off_24C335AB8;
  v348 = v338;
  if (SHIBYTE(v339.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v349, v339.__r_.__value_.__l.__data_, v339.__r_.__value_.__l.__size_);
  else
    v349 = v339;
  *(_QWORD *)a1 = off_24C335D90;
  if (SHIBYTE(v346.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)(a1 + 8), v346.__r_.__value_.__l.__data_, v346.__r_.__value_.__l.__size_);
  else
    *(std::string *)(a1 + 8) = v346;
  *(_DWORD *)(a1 + 32) = v347;
  *(_QWORD *)a1 = &off_24C335AB8;
  *(_BYTE *)(a1 + 36) = v348;
  v36 = (std::string *)(a1 + 40);
  if (SHIBYTE(v349.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v36, v349.__r_.__value_.__l.__data_, v349.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v36->__r_.__value_.__l.__data_ = *(_OWORD *)&v349.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 56) = *((_QWORD *)&v349.__r_.__value_.__l + 2);
  }
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v345);
  *(_QWORD *)(a1 + 64) = off_24C335D90;
  v37 = (std::string *)(a1 + 72);
  v38 = SHIBYTE(v341.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v341.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v37, v341.__r_.__value_.__l.__data_, v341.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v37->__r_.__value_.__l.__data_ = *(_OWORD *)&v341.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 88) = *((_QWORD *)&v341.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(a1 + 96) = v77;
  *(_QWORD *)(a1 + 64) = off_24C335B18;
  *(_QWORD *)(a1 + 100) = v134;
  *(_DWORD *)(a1 + 108) = v135;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v335);
  v340 = off_24C335D90;
  if (v38 < 0)
    operator delete(v341.__r_.__value_.__l.__data_);
  *(_QWORD *)(a1 + 112) = off_24C335D90;
  v39 = (std::string *)(a1 + 120);
  v40 = SHIBYTE(v331.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v331.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v39, v331.__r_.__value_.__l.__data_, v331.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v39->__r_.__value_.__l.__data_ = *(_OWORD *)&v331.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 136) = *((_QWORD *)&v331.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(a1 + 144) = v76;
  *(_QWORD *)(a1 + 112) = off_24C335B18;
  *(_QWORD *)(a1 + 148) = v333;
  *(_DWORD *)(a1 + 156) = v334;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v320);
  v325 = off_24C335D90;
  if (v35 < 0)
    operator delete(v326.__r_.__value_.__l.__data_);
  v330 = (uint64_t (**)())off_24C335D90;
  if (v40 < 0)
    operator delete(v331.__r_.__value_.__l.__data_);
  *(_QWORD *)(a1 + 160) = off_24C335D90;
  v41 = (std::string *)(a1 + 168);
  v42 = SHIBYTE(v316.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v316.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v41, v316.__r_.__value_.__l.__data_, v316.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v41->__r_.__value_.__l.__data_ = *(_OWORD *)&v316.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 184) = *((_QWORD *)&v316.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(a1 + 192) = v75;
  *(_QWORD *)(a1 + 160) = off_24C335B18;
  *(_QWORD *)(a1 + 196) = v318;
  *(_DWORD *)(a1 + 204) = v319;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v300);
  v305 = (uint64_t (**)())off_24C335D90;
  if (v34 < 0)
    operator delete(v306.__r_.__value_.__l.__data_);
  v310 = (uint64_t (**)())off_24C335D90;
  if (v57 < 0)
    operator delete(v311.__r_.__value_.__l.__data_);
  v315 = (uint64_t (**)())off_24C335D90;
  if (v42 < 0)
    operator delete(v316.__r_.__value_.__l.__data_);
  *(_QWORD *)(a1 + 208) = off_24C335D90;
  v43 = (std::string *)(a1 + 216);
  v44 = SHIBYTE(v296.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v296.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v43, v296.__r_.__value_.__l.__data_, v296.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v43->__r_.__value_.__l.__data_ = *(_OWORD *)&v296.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 232) = *((_QWORD *)&v296.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(a1 + 240) = v74;
  *(_QWORD *)(a1 + 208) = off_24C335B18;
  *(_QWORD *)(a1 + 244) = v298;
  *(_DWORD *)(a1 + 252) = v299;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v275);
  v280 = (uint64_t (**)())off_24C335D90;
  if (v59 < 0)
    operator delete(v281.__r_.__value_.__l.__data_);
  v285 = (uint64_t (**)())off_24C335D90;
  if (v72 < 0)
    operator delete(v286.__r_.__value_.__l.__data_);
  v290 = (uint64_t (**)())off_24C335D90;
  if (v60 < 0)
    operator delete(v291.__r_.__value_.__l.__data_);
  v295 = (uint64_t (**)())off_24C335D90;
  if (v44 < 0)
    operator delete(v296.__r_.__value_.__l.__data_);
  *(_QWORD *)(a1 + 256) = off_24C335D90;
  if (SHIBYTE(v271.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)(a1 + 264), v271.__r_.__value_.__l.__data_, v271.__r_.__value_.__l.__size_);
  else
    *(std::string *)(a1 + 264) = v271;
  *(_DWORD *)(a1 + 288) = v272;
  *(_QWORD *)(a1 + 256) = &off_24C335AB8;
  *(_BYTE *)(a1 + 292) = v273;
  v45 = (std::string *)(a1 + 296);
  if (SHIBYTE(v274.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v45, v274.__r_.__value_.__l.__data_, v274.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v45->__r_.__value_.__l.__data_ = *(_OWORD *)&v274.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 312) = *((_QWORD *)&v274.__r_.__value_.__l + 2);
  }
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v245);
  v250 = (uint64_t (**)())off_24C335D90;
  if (v32 < 0)
    operator delete(v251.__r_.__value_.__l.__data_);
  v255 = (uint64_t (**)())off_24C335D90;
  if (v58 < 0)
    operator delete(v256.__r_.__value_.__l.__data_);
  v260 = (uint64_t (**)())off_24C335D90;
  if (v30 < 0)
    operator delete(v261.__r_.__value_.__l.__data_);
  v265 = (uint64_t (**)())off_24C335D90;
  if (v62 < 0)
    operator delete(v266.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v270);
  *(_QWORD *)(a1 + 320) = off_24C335D90;
  v46 = (std::string *)(a1 + 328);
  v47 = SHIBYTE(v241.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v241.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v46, v241.__r_.__value_.__l.__data_, v241.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v46->__r_.__value_.__l.__data_ = *(_OWORD *)&v241.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 344) = *((_QWORD *)&v241.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(a1 + 352) = v73;
  *(_QWORD *)(a1 + 320) = off_24C335B18;
  *(_QWORD *)(a1 + 356) = v243;
  *(_DWORD *)(a1 + 364) = v244;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v210);
  v215 = (uint64_t (**)())off_24C335D90;
  if (v63 < 0)
    operator delete(v216.__r_.__value_.__l.__data_);
  v220 = (uint64_t (**)())off_24C335D90;
  if (v64 < 0)
    operator delete(v221.__r_.__value_.__l.__data_);
  v225 = (uint64_t (**)())off_24C335D90;
  if (v65 < 0)
    operator delete(v226.__r_.__value_.__l.__data_);
  v230 = (uint64_t (**)())off_24C335D90;
  if (v61 < 0)
    operator delete(v231.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v235);
  if (v47 < 0)
    operator delete(v241.__r_.__value_.__l.__data_);
  *(_QWORD *)(a1 + 368) = off_24C335D90;
  if (SHIBYTE(v206.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)(a1 + 376), v206.__r_.__value_.__l.__data_, v206.__r_.__value_.__l.__size_);
  else
    *(std::string *)(a1 + 376) = v206;
  *(_DWORD *)(a1 + 400) = v207;
  *(_QWORD *)(a1 + 368) = &off_24C335AB8;
  *(_BYTE *)(a1 + 404) = v208;
  v48 = (std::string *)(a1 + 408);
  if (SHIBYTE(v209.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v48, v209.__r_.__value_.__l.__data_, v209.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v48->__r_.__value_.__l.__data_ = *(_OWORD *)&v209.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 424) = *((_QWORD *)&v209.__r_.__value_.__l + 2);
  }
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v170);
  v175 = (uint64_t (**)())off_24C335D90;
  if (v66 < 0)
    operator delete(v176.__r_.__value_.__l.__data_);
  v180 = (uint64_t (**)())off_24C335D90;
  if (v67 < 0)
    operator delete(v181.__r_.__value_.__l.__data_);
  v185 = (uint64_t (**)())off_24C335D90;
  if (v68 < 0)
    operator delete(v186.__r_.__value_.__l.__data_);
  if (v69 < 0)
    operator delete(v191.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v195);
  if (v70 < 0)
    operator delete(v201.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v205);
  *(_QWORD *)(a1 + 432) = off_24C335D90;
  v49 = (std::string *)(a1 + 440);
  v50 = SHIBYTE(v167.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v167.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v49, v167.__r_.__value_.__l.__data_, v167.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v49->__r_.__value_.__l.__data_ = *(_OWORD *)&v167.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 456) = *((_QWORD *)&v167.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(a1 + 464) = v168;
  *(_QWORD *)(a1 + 432) = off_24C335AF8;
  *(_QWORD *)(a1 + 468) = v169;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v126);
  v131 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v132.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v132.__r_.__value_.__l.__data_);
  v136 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v137.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v137.__r_.__value_.__l.__data_);
  v141 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v142.__r_.__value_.__l.__data_);
  if (SHIBYTE(v147.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v147.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v151);
  if (SHIBYTE(v157.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v157.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v161);
  if (v50 < 0)
    operator delete(v167.__r_.__value_.__l.__data_);
  *(_QWORD *)(a1 + 480) = off_24C335D90;
  v51 = (std::string *)(a1 + 488);
  v52 = SHIBYTE(v123.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v123.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v51, v123.__r_.__value_.__l.__data_, v123.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v51->__r_.__value_.__l.__data_ = *(_OWORD *)&v123.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 504) = *((_QWORD *)&v123.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(a1 + 512) = v124;
  *(_QWORD *)(a1 + 480) = off_24C335AF8;
  *(_QWORD *)(a1 + 516) = v125;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v78);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v89.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v89.__r_.__value_.__l.__data_);
  if (SHIBYTE(v94.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v94.__r_.__value_.__l.__data_);
  if (SHIBYTE(v99.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v99.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v103);
  if (SHIBYTE(v109.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v109.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v113);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__s.__r_.__value_.__l.__data_);
    if ((v52 & 0x80000000) == 0)
      goto LABEL_331;
  }
  else if ((v52 & 0x80000000) == 0)
  {
    goto LABEL_331;
  }
  operator delete(v123.__r_.__value_.__l.__data_);
LABEL_331:
  *(_QWORD *)(a1 + 528) = off_24C335D90;
  v53 = (std::string *)(a1 + 536);
  if (*(char *)(a2 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v53, *(const std::string::value_type **)(a2 + 8), *(_QWORD *)(a2 + 16));
  }
  else
  {
    v54 = *(_OWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 24);
    *(_OWORD *)&v53->__r_.__value_.__l.__data_ = v54;
  }
  *(_DWORD *)(a1 + 560) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 528) = off_24C335B18;
  v55 = *(_QWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 572) = *(_DWORD *)(a2 + 44);
  *(_QWORD *)(a1 + 564) = v55;
  return a1;
}

void sub_20A8BDBD4(_Unwind_Exception *a1)
{
  uint64_t v1;

  mediaplatform::DatabaseColumnTuple<48ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(v1);
  _Unwind_Resume(a1);
}

void sub_20A8BE0E0()
{
  STACK[0xB08] = (unint64_t)off_24C335D90;
  if (SLOBYTE(STACK[0xB27]) < 0)
    operator delete((void *)STACK[0xB10]);
  JUMPOUT(0x20A8BDD6CLL);
}

void sub_20A8BE104()
{
  JUMPOUT(0x20A8BDD6CLL);
}

void sub_20A8BE10C()
{
  JUMPOUT(0x20A8BDD88);
}

void sub_20A8BE114()
{
  JUMPOUT(0x20A8BDDA4);
}

void sub_20A8BE11C()
{
  STACK[0xA38] = (unint64_t)off_24C335D90;
  if (SLOBYTE(STACK[0xA57]) < 0)
    operator delete((void *)STACK[0xA40]);
  JUMPOUT(0x20A8BDDACLL);
}

void sub_20A8BE140()
{
  JUMPOUT(0x20A8BDDACLL);
}

void sub_20A8BE148()
{
  JUMPOUT(0x20A8BDDC8);
}

void sub_20A8BE150()
{
  JUMPOUT(0x20A8BDDE4);
}

void sub_20A8BE158()
{
  JUMPOUT(0x20A8BDE00);
}

void sub_20A8BE160()
{
  STACK[0x938] = (unint64_t)off_24C335D90;
  if (SLOBYTE(STACK[0x957]) < 0)
    operator delete((void *)STACK[0x940]);
  JUMPOUT(0x20A8BDE08);
}

void sub_20A8BE184()
{
  JUMPOUT(0x20A8BDE08);
}

void sub_20A8BE18C()
{
  JUMPOUT(0x20A8BDE24);
}

void sub_20A8BE194()
{
  JUMPOUT(0x20A8BDE40);
}

void sub_20A8BE19C()
{
  JUMPOUT(0x20A8BDE5CLL);
}

void sub_20A8BE1A4()
{
  JUMPOUT(0x20A8BDE78);
}

void sub_20A8BE1AC()
{
  STACK[0x7F8] = (unint64_t)off_24C335D90;
  if (SLOBYTE(STACK[0x817]) < 0)
    operator delete((void *)STACK[0x800]);
  JUMPOUT(0x20A8BDE80);
}

void sub_20A8BE1D0()
{
  JUMPOUT(0x20A8BDE80);
}

void sub_20A8BE1D8()
{
  JUMPOUT(0x20A8BDE9CLL);
}

void sub_20A8BE1E0()
{
  JUMPOUT(0x20A8BDEB8);
}

void sub_20A8BE1E8()
{
  JUMPOUT(0x20A8BDED4);
}

void sub_20A8BE1F0()
{
  JUMPOUT(0x20A8BDEF0);
}

void sub_20A8BE1F8()
{
  unint64_t v0;

  STACK[0x8F8] = v0;
  if (SLOBYTE(STACK[0x917]) < 0)
    operator delete((void *)STACK[0x900]);
  JUMPOUT(0x20A8BDEF8);
}

void sub_20A8BE214()
{
  JUMPOUT(0x20A8BDEF8);
}

void sub_20A8BE21C()
{
  unint64_t v0;

  STACK[0x688] = v0;
  if (SLOBYTE(STACK[0x6A7]) < 0)
    operator delete((void *)STACK[0x690]);
  JUMPOUT(0x20A8BDF00);
}

void sub_20A8BE238()
{
  JUMPOUT(0x20A8BDF00);
}

void sub_20A8BE240()
{
  JUMPOUT(0x20A8BDF1CLL);
}

void sub_20A8BE248()
{
  JUMPOUT(0x20A8BDF38);
}

void sub_20A8BE250()
{
  JUMPOUT(0x20A8BDF48);
}

void sub_20A8BE258()
{
  JUMPOUT(0x20A8BDF58);
}

void sub_20A8BE260()
{
  STACK[0x788] = (unint64_t)off_24C335D90;
  if (SLOBYTE(STACK[0x7A7]) < 0)
    operator delete((void *)STACK[0x790]);
  JUMPOUT(0x20A8BDF60);
}

void sub_20A8BE284()
{
  JUMPOUT(0x20A8BDF60);
}

void sub_20A8BE28C()
{
  JUMPOUT(0x20A8BDF70);
}

void sub_20A8BE294()
{
  STACK[0x4D8] = (unint64_t)off_24C335D90;
  if (SLOBYTE(STACK[0x4F7]) < 0)
    operator delete((void *)STACK[0x4E0]);
  JUMPOUT(0x20A8BDF78);
}

void sub_20A8BE2B8()
{
  JUMPOUT(0x20A8BDF78);
}

void sub_20A8BE2C0()
{
  JUMPOUT(0x20A8BDF88);
}

void sub_20A8BE2C8()
{
  JUMPOUT(0x20A8BDF98);
}

void sub_20A8BE2D0()
{
  JUMPOUT(0x20A8BDFA8);
}

void sub_20A8BE2D8()
{
  JUMPOUT(0x20A8BDFB8);
}

void sub_20A8BE2E0()
{
  STACK[0x5D8] = (unint64_t)off_24C335D90;
  if (SLOBYTE(STACK[0x5F7]) < 0)
    operator delete((void *)STACK[0x5E0]);
  JUMPOUT(0x20A8BDFC0);
}

void sub_20A8BE304()
{
  JUMPOUT(0x20A8BDFC0);
}

void sub_20A8BE30C()
{
  JUMPOUT(0x20A8BDFD0);
}

void sub_20A8BE314()
{
  STACK[0x648] = (unint64_t)off_24C335D90;
  if (SLOBYTE(STACK[0x667]) < 0)
    operator delete((void *)STACK[0x650]);
  JUMPOUT(0x20A8BDFD8);
}

void sub_20A8BE338()
{
  JUMPOUT(0x20A8BDFD8);
}

void sub_20A8BE340()
{
  STACK[0x2F8] = (unint64_t)off_24C335D90;
  if (SLOBYTE(STACK[0x317]) < 0)
    operator delete((void *)STACK[0x300]);
  JUMPOUT(0x20A8BDFE0);
}

void sub_20A8BE364()
{
  JUMPOUT(0x20A8BDFE0);
}

void sub_20A8BE36C()
{
  JUMPOUT(0x20A8BDFF0);
}

void sub_20A8BE374()
{
  JUMPOUT(0x20A8BE000);
}

void sub_20A8BE37C()
{
  JUMPOUT(0x20A8BE010);
}

void sub_20A8BE384()
{
  JUMPOUT(0x20A8BE020);
}

void sub_20A8BE38C()
{
  STACK[0x3F8] = (unint64_t)off_24C335D90;
  if (SLOBYTE(STACK[0x417]) < 0)
    operator delete((void *)STACK[0x400]);
  JUMPOUT(0x20A8BE028);
}

void sub_20A8BE3B0()
{
  JUMPOUT(0x20A8BE028);
}

void sub_20A8BE3B8()
{
  JUMPOUT(0x20A8BE038);
}

void sub_20A8BE3C0()
{
  STACK[0x468] = (unint64_t)off_24C335D90;
  if (SLOBYTE(STACK[0x487]) < 0)
    operator delete((void *)STACK[0x470]);
  JUMPOUT(0x20A8BE040);
}

void sub_20A8BE3E4()
{
  JUMPOUT(0x20A8BE040);
}

void sub_20A8BE3EC()
{
  JUMPOUT(0x20A8BE050);
}

void sub_20A8BE3F4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *__p,uint64_t a40,int a41,__int16 a42,char a43,char a44)
{
  if (a44 < 0)
    operator delete(__p);
  JUMPOUT(0x20A8BE058);
}

void sub_20A8BE418()
{
  JUMPOUT(0x20A8BE058);
}

void sub_20A8BE420()
{
  JUMPOUT(0x20A8BE068);
}

void sub_20A8BE428()
{
  JUMPOUT(0x20A8BE078);
}

void sub_20A8BE430()
{
  JUMPOUT(0x20A8BE088);
}

void sub_20A8BE438()
{
  JUMPOUT(0x20A8BE098);
}

void sub_20A8BE440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *__p;

  if (SLOBYTE(STACK[0x207]) < 0)
    operator delete(__p);
  JUMPOUT(0x20A8BE0A0);
}

void sub_20A8BE464()
{
  JUMPOUT(0x20A8BE0A0);
}

void sub_20A8BE46C()
{
  JUMPOUT(0x20A8BE0B0);
}

void sub_20A8BE474()
{
  STACK[0x258] = (unint64_t)off_24C335D90;
  if (SLOBYTE(STACK[0x277]) < 0)
    operator delete((void *)STACK[0x260]);
  JUMPOUT(0x20A8BE0B8);
}

void sub_20A8BE498()
{
  JUMPOUT(0x20A8BE0B8);
}

void sub_20A8BE4A0()
{
  JUMPOUT(0x20A8BE0C8);
}

uint64_t mediaplatform::DatabaseColumnTuple<47ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 528) = off_24C335D90;
  if (*(char *)(a1 + 559) < 0)
    operator delete(*(void **)(a1 + 536));
  *(_QWORD *)(a1 + 480) = off_24C335D90;
  if (*(char *)(a1 + 511) < 0)
    operator delete(*(void **)(a1 + 488));
  *(_QWORD *)(a1 + 432) = off_24C335D90;
  if (*(char *)(a1 + 463) < 0)
    operator delete(*(void **)(a1 + 440));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 368);
  return mediaplatform::DatabaseColumnTuple<51ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<48ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 480) = off_24C335D90;
  if (*(char *)(a1 + 511) < 0)
    operator delete(*(void **)(a1 + 488));
  *(_QWORD *)(a1 + 432) = off_24C335D90;
  if (*(char *)(a1 + 463) < 0)
    operator delete(*(void **)(a1 + 440));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 368);
  return mediaplatform::DatabaseColumnTuple<51ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<49ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 432) = off_24C335D90;
  if (*(char *)(a1 + 463) < 0)
    operator delete(*(void **)(a1 + 440));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 368);
  return mediaplatform::DatabaseColumnTuple<51ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<52ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 256);
  *(_QWORD *)(a1 + 208) = off_24C335D90;
  if (*(char *)(a1 + 239) < 0)
    operator delete(*(void **)(a1 + 216));
  *(_QWORD *)(a1 + 160) = off_24C335D90;
  if (*(char *)(a1 + 191) < 0)
    operator delete(*(void **)(a1 + 168));
  *(_QWORD *)(a1 + 112) = off_24C335D90;
  if (*(char *)(a1 + 143) < 0)
    operator delete(*(void **)(a1 + 120));
  *(_QWORD *)(a1 + 64) = off_24C335D90;
  if (*(char *)(a1 + 95) < 0)
    operator delete(*(void **)(a1 + 72));
  return mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<53ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 208) = off_24C335D90;
  if (*(char *)(a1 + 239) < 0)
    operator delete(*(void **)(a1 + 216));
  *(_QWORD *)(a1 + 160) = off_24C335D90;
  if (*(char *)(a1 + 191) < 0)
    operator delete(*(void **)(a1 + 168));
  *(_QWORD *)(a1 + 112) = off_24C335D90;
  if (*(char *)(a1 + 143) < 0)
    operator delete(*(void **)(a1 + 120));
  *(_QWORD *)(a1 + 64) = off_24C335D90;
  if (*(char *)(a1 + 95) < 0)
    operator delete(*(void **)(a1 + 72));
  return mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<54ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 160) = off_24C335D90;
  if (*(char *)(a1 + 191) < 0)
    operator delete(*(void **)(a1 + 168));
  *(_QWORD *)(a1 + 112) = off_24C335D90;
  if (*(char *)(a1 + 143) < 0)
    operator delete(*(void **)(a1 + 120));
  *(_QWORD *)(a1 + 64) = off_24C335D90;
  if (*(char *)(a1 + 95) < 0)
    operator delete(*(void **)(a1 + 72));
  return mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<55ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 112) = off_24C335D90;
  if (*(char *)(a1 + 143) < 0)
    operator delete(*(void **)(a1 + 120));
  *(_QWORD *)(a1 + 64) = off_24C335D90;
  if (*(char *)(a1 + 95) < 0)
    operator delete(*(void **)(a1 + 72));
  return mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<56ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 64) = off_24C335D90;
  if (*(char *)(a1 + 95) < 0)
    operator delete(*(void **)(a1 + 72));
  return mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1);
}

void mlcore::ItemStoreTable::persistentIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3135) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 389), *((_QWORD *)this + 390));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3112);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 391);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 784);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 787);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3140);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::storeItemIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3183) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 395), *((_QWORD *)this + 396));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3160);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 397);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 796);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 799);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3188);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::storeComposerIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3231) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 401), *((_QWORD *)this + 402));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3208);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 403);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 808);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 811);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3236);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::storeGenreIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3279) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 407), *((_QWORD *)this + 408));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3256);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 409);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 820);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 823);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3284);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::storePlaylistIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3327) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 413), *((_QWORD *)this + 414));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3304);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 415);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 832);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 835);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3332);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::storefrontIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3375) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 419), *((_QWORD *)this + 420));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3352);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 421);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 844);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 847);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3380);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::purchaseHistoryIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3423) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 425), *((_QWORD *)this + 426));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3400);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 427);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 856);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 859);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3428);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::purchaseHistoryTokenColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3471) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 431), *((_QWORD *)this + 432));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3448);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 433);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 868);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 871);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3476);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::purchaseHistoryRedownloadParamsColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3519) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 437), *((_QWORD *)this + 438));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3496);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 439);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 880);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 3524);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 3551) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 441), *((_QWORD *)this + 442));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3528);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 443);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8BEC7C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemStoreTable::storeSagaIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3583) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 445), *((_QWORD *)this + 446));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3560);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 447);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 896);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 899);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3588);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::matchRedownloadParamsColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3631) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 451), *((_QWORD *)this + 452));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3608);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 453);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 908);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 3636);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 3663) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 455), *((_QWORD *)this + 456));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3640);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 457);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8BEDE0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemStoreTable::cloudStatusColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3695) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 459), *((_QWORD *)this + 460));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3672);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 461);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 924);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 927);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3700);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::syncIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3743) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 465), *((_QWORD *)this + 466));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3720);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 467);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 936);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 939);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3748);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::homeSharingIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3791) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 471), *((_QWORD *)this + 472));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3768);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 473);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 948);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 951);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3796);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::isOtaPurchasedColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3839) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 477), *((_QWORD *)this + 478));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3816);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 479);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 960);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 963);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3844);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::storeKindColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3887) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 483), *((_QWORD *)this + 484));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3864);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 485);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 972);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 975);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3892);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::accountIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3935) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 489), *((_QWORD *)this + 490));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3912);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 491);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 984);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 987);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3940);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::downloaderAccountIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3983) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 495), *((_QWORD *)this + 496));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3960);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 497);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 996);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 999);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3988);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::familyAccountIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 4031) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 501), *((_QWORD *)this + 502));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4008);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 503);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1008);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1011);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 4036);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::isProtectedColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 4079) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 507), *((_QWORD *)this + 508));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4056);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 509);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1020);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1023);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 4084);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::keyVersionsColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 4127) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 513), *((_QWORD *)this + 514));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4104);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 515);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1032);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1035);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 4132);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::keyPlatformIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 4175) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 519), *((_QWORD *)this + 520));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4152);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 521);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1044);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1047);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 4180);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::keyIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 4223) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 525), *((_QWORD *)this + 526));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4200);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 527);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1056);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1059);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 4228);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::keyID2Column(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 4271) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 531), *((_QWORD *)this + 532));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4248);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 533);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1068);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1071);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 4276);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::datePurchasedColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 4319) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 537), *((_QWORD *)this + 538));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4296);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 539);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1080);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1083);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 4324);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::dateReleasedColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 4367) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 543), *((_QWORD *)this + 544));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4344);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 545);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1092);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1095);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 4372);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::externalGuidColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  char *v4;
  std::string *v5;
  std::string *v6;

  v4 = (char *)this + 4415;
  *(_QWORD *)a2 = off_24C335D90;
  v5 = (std::string *)(a2 + 8);
  if (*((char *)this + 4415) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 549), *((_QWORD *)this + 550));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4392);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 551);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1104);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = v4[5];
  v6 = (std::string *)(a2 + 40);
  if (v4[32] < 0)
  {
    std::string::__init_copy_ctor_external(v6, *((const std::string::value_type **)this + 553), *((_QWORD *)this + 554));
  }
  else
  {
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4424);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 555);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8BF6C4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemStoreTable::feedURLColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  char *v4;
  std::string *v5;
  std::string *v6;

  v4 = (char *)this + 4479;
  *(_QWORD *)a2 = off_24C335D90;
  v5 = (std::string *)(a2 + 8);
  if (*((char *)this + 4479) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 557), *((_QWORD *)this + 558));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4456);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 559);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1120);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = v4[5];
  v6 = (std::string *)(a2 + 40);
  if (v4[32] < 0)
  {
    std::string::__init_copy_ctor_external(v6, *((const std::string::value_type **)this + 561), *((_QWORD *)this + 562));
  }
  else
  {
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4488);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 563);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8BF7BC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemStoreTable::artworkURLColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  char *v4;
  std::string *v5;
  std::string *v6;

  v4 = (char *)this + 4543;
  *(_QWORD *)a2 = off_24C335D90;
  v5 = (std::string *)(a2 + 8);
  if (*((char *)this + 4543) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 565), *((_QWORD *)this + 566));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4520);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 567);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1136);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = v4[5];
  v6 = (std::string *)(a2 + 40);
  if (v4[32] < 0)
  {
    std::string::__init_copy_ctor_external(v6, *((const std::string::value_type **)this + 569), *((_QWORD *)this + 570));
  }
  else
  {
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4552);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 571);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8BF8B4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemStoreTable::storeXidColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  char *v4;
  std::string *v5;
  std::string *v6;

  v4 = (char *)this + 4607;
  *(_QWORD *)a2 = off_24C335D90;
  v5 = (std::string *)(a2 + 8);
  if (*((char *)this + 4607) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 573), *((_QWORD *)this + 574));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4584);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 575);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1152);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = v4[5];
  v6 = (std::string *)(a2 + 40);
  if (v4[32] < 0)
  {
    std::string::__init_copy_ctor_external(v6, *((const std::string::value_type **)this + 577), *((_QWORD *)this + 578));
  }
  else
  {
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4616);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 579);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8BF9AC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemStoreTable::storeFlavorColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  char *v4;
  std::string *v5;
  std::string *v6;

  v4 = (char *)this + 4671;
  *(_QWORD *)a2 = off_24C335D90;
  v5 = (std::string *)(a2 + 8);
  if (*((char *)this + 4671) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 581), *((_QWORD *)this + 582));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4648);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 583);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1168);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = v4[5];
  v6 = (std::string *)(a2 + 40);
  if (v4[32] < 0)
  {
    std::string::__init_copy_ctor_external(v6, *((const std::string::value_type **)this + 585), *((_QWORD *)this + 586));
  }
  else
  {
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4680);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 587);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8BFAA4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemStoreTable::storeMatchedStatusColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 4735) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 589), *((_QWORD *)this + 590));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4712);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 591);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1184);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1187);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 4740);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::storeRedownloadedStatusColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 4783) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 595), *((_QWORD *)this + 596));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4760);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 597);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1196);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1199);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 4788);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::extrasURLColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  char *v4;
  std::string *v5;
  std::string *v6;

  v4 = (char *)this + 4831;
  *(_QWORD *)a2 = off_24C335D90;
  v5 = (std::string *)(a2 + 8);
  if (*((char *)this + 4831) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 601), *((_QWORD *)this + 602));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4808);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 603);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1208);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = v4[5];
  v6 = (std::string *)(a2 + 40);
  if (v4[32] < 0)
  {
    std::string::__init_copy_ctor_external(v6, *((const std::string::value_type **)this + 605), *((_QWORD *)this + 606));
  }
  else
  {
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4840);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 607);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8BFCB4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemStoreTable::vppIsLicensedColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 4895) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 609), *((_QWORD *)this + 610));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4872);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 611);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1224);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1227);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 4900);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::vppOrgIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 4943) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 615), *((_QWORD *)this + 616));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4920);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 617);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1236);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1239);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 4948);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::vppOrgNameColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  char *v4;
  std::string *v5;
  std::string *v6;

  v4 = (char *)this + 4991;
  *(_QWORD *)a2 = off_24C335D90;
  v5 = (std::string *)(a2 + 8);
  if (*((char *)this + 4991) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 621), *((_QWORD *)this + 622));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 4968);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 623);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1248);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = v4[5];
  v6 = (std::string *)(a2 + 40);
  if (v4[32] < 0)
  {
    std::string::__init_copy_ctor_external(v6, *((const std::string::value_type **)this + 625), *((_QWORD *)this + 626));
  }
  else
  {
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5000);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 627);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8BFEC4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemStoreTable::syncRedownloadParamsColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  char *v4;
  std::string *v5;
  std::string *v6;

  v4 = (char *)this + 5055;
  *(_QWORD *)a2 = off_24C335D90;
  v5 = (std::string *)(a2 + 8);
  if (*((char *)this + 5055) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 629), *((_QWORD *)this + 630));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5032);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 631);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1264);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = v4[5];
  v6 = (std::string *)(a2 + 40);
  if (v4[32] < 0)
  {
    std::string::__init_copy_ctor_external(v6, *((const std::string::value_type **)this + 633), *((_QWORD *)this + 634));
  }
  else
  {
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5064);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 635);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8BFFBC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemStoreTable::needsReportingColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 5119) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 637), *((_QWORD *)this + 638));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5096);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 639);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1280);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1283);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 5124);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::subscriptionStoreItemIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 5167) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 643), *((_QWORD *)this + 644));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5144);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 645);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1292);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1295);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 5172);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::playbackEndpointTypeColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 5215) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 649), *((_QWORD *)this + 650));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5192);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 651);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1304);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1307);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 5220);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::isMasteredForItunesColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  char *v4;
  std::string *v5;

  v4 = (char *)this + 5263;
  *(_QWORD *)a2 = off_24C335D90;
  v5 = (std::string *)(a2 + 8);
  if (*v4 < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 655), *((_QWORD *)this + 656));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5240);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 657);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1316);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)(v4 + 5);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemStoreTable::radioStationIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  char *v4;
  std::string *v5;
  std::string *v6;

  v4 = (char *)this + 5311;
  *(_QWORD *)a2 = off_24C335D90;
  v5 = (std::string *)(a2 + 8);
  if (*((char *)this + 5311) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 661), *((_QWORD *)this + 662));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5288);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 663);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1328);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = v4[5];
  v6 = (std::string *)(a2 + 40);
  if (v4[32] < 0)
  {
    std::string::__init_copy_ctor_external(v6, *((const std::string::value_type **)this + 665), *((_QWORD *)this + 666));
  }
  else
  {
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5320);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 667);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8C02E4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemStoreTable::advertisementUniqueIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  char *v4;
  std::string *v5;
  std::string *v6;

  v4 = (char *)this + 5375;
  *(_QWORD *)a2 = off_24C335D90;
  v5 = (std::string *)(a2 + 8);
  if (*((char *)this + 5375) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 669), *((_QWORD *)this + 670));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5352);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 671);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1344);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = v4[5];
  v6 = (std::string *)(a2 + 40);
  if (v4[32] < 0)
  {
    std::string::__init_copy_ctor_external(v6, *((const std::string::value_type **)this + 673), *((_QWORD *)this + 674));
  }
  else
  {
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5384);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 675);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8C03DC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemStoreTable::advertisementTypeColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 5439) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 677), *((_QWORD *)this + 678));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5416);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 679);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1360);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1363);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 5444);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::isArtistUploadedContentColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 5487) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 683), *((_QWORD *)this + 684));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5464);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 685);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1372);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1375);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 5492);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::cloudAssetAvailableColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 5535) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 689), *((_QWORD *)this + 690));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5512);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 691);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1384);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1387);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 5540);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::isSubscriptionColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 5583) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 695), *((_QWORD *)this + 696));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5560);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 697);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1396);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1399);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 5588);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::syncInMyLibraryColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  char *v4;
  std::string *v5;

  v4 = (char *)this + 5631;
  *(_QWORD *)a2 = off_24C335D90;
  v5 = (std::string *)(a2 + 8);
  if (*v4 < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 701), *((_QWORD *)this + 702));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5608);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 703);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1408);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)(v4 + 5);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemStoreTable::cloudInMyLibraryColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  char *v4;
  std::string *v5;

  v4 = (char *)this + 5679;
  *(_QWORD *)a2 = off_24C335D90;
  v5 = (std::string *)(a2 + 8);
  if (*v4 < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 707), *((_QWORD *)this + 708));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5656);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 709);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1420);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)(v4 + 5);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemStoreTable::cloudAlbumIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  char *v4;
  std::string *v5;
  std::string *v6;

  v4 = (char *)this + 5727;
  *(_QWORD *)a2 = off_24C335D90;
  v5 = (std::string *)(a2 + 8);
  if (*((char *)this + 5727) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 713), *((_QWORD *)this + 714));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5704);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 715);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1432);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = v4[5];
  v6 = (std::string *)(a2 + 40);
  if (v4[32] < 0)
  {
    std::string::__init_copy_ctor_external(v6, *((const std::string::value_type **)this + 717), *((_QWORD *)this + 718));
  }
  else
  {
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5736);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 719);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8C081C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemStoreTable::cloudPlaybackEndpointTypeColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 5791) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 721), *((_QWORD *)this + 722));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5768);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 723);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1448);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1451);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 5796);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::cloudUniversalLibraryIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  char *v4;
  std::string *v5;
  std::string *v6;

  v4 = (char *)this + 5839;
  *(_QWORD *)a2 = off_24C335D90;
  v5 = (std::string *)(a2 + 8);
  if (*((char *)this + 5839) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 727), *((_QWORD *)this + 728));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5816);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 729);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1460);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = v4[5];
  v6 = (std::string *)(a2 + 40);
  if (v4[32] < 0)
  {
    std::string::__init_copy_ctor_external(v6, *((const std::string::value_type **)this + 731), *((_QWORD *)this + 732));
  }
  else
  {
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5848);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 733);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8C09A0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemStoreTable::reportingStoreItemIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 5903) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 735), *((_QWORD *)this + 736));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5880);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 737);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1476);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1479);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 5908);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::assetStoreItemIDColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 5951) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 741), *((_QWORD *)this + 742));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5928);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 743);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1488);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1491);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 5956);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::assetStoreExtendedPlaybackAttributeColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 5999) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 747), *((_QWORD *)this + 748));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 5976);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 749);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1500);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1503);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 6004);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::assetStoreExtendedLyricsAttributeColumn(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 6047) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 753), *((_QWORD *)this + 754));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 6024);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 755);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1512);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 1515);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 6052);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStoreTable::assetStoreCanonicalItemId(mlcore::ItemStoreTable *this@<X0>, uint64_t a2@<X8>)
{
  char *v4;
  std::string *v5;
  std::string *v6;

  v4 = (char *)this + 6095;
  *(_QWORD *)a2 = off_24C335D90;
  v5 = (std::string *)(a2 + 8);
  if (*((char *)this + 6095) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 759), *((_QWORD *)this + 760));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 6072);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 761);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 1524);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = v4[5];
  v6 = (std::string *)(a2 + 40);
  if (v4[32] < 0)
  {
    std::string::__init_copy_ctor_external(v6, *((const std::string::value_type **)this + 763), *((_QWORD *)this + 764));
  }
  else
  {
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 6104);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 765);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8C0CC8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mediaplatform::Data::~Data(mediaplatform::Data *this)
{
  uint64_t v1;

  *(_QWORD *)this = &off_24C331510;
  if (*((_BYTE *)this + 32))
  {
    v1 = *((_QWORD *)this + 3);
    if (v1)
      MEMORY[0x20BD27AE4](v1, 0x1000C8077774924);
  }
}

{
  uint64_t v1;

  *(_QWORD *)this = &off_24C331510;
  if (*((_BYTE *)this + 32))
  {
    v1 = *((_QWORD *)this + 3);
    if (v1)
      MEMORY[0x20BD27AE4](v1, 0x1000C8077774924);
  }
  JUMPOUT(0x20BD27AFCLL);
}

{
  uint64_t v1;

  *(_QWORD *)this = &off_24C331510;
  if (*((_BYTE *)this + 32))
  {
    v1 = *((_QWORD *)this + 3);
    if (v1)
      MEMORY[0x20BD27AE4](v1, 0x1000C8077774924);
  }
}

uint64_t mediaplatform::Data::description(mediaplatform::Data *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  std::ios_base *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  uint64_t v15;
  _QWORD v16[8];
  void *__p[2];
  __int128 v18;
  int v19;
  uint64_t v20[20];

  v2 = MEMORY[0x24BEDB858];
  v3 = MEMORY[0x24BEDB858] + 104;
  v20[0] = MEMORY[0x24BEDB858] + 104;
  v4 = MEMORY[0x24BEDB858] + 64;
  v5 = (_QWORD *)MEMORY[0x24BEDB7F0];
  v6 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 16);
  v7 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 24);
  v15 = MEMORY[0x24BEDB858] + 64;
  v14[0] = v6;
  *(_QWORD *)((char *)v14 + *(_QWORD *)(v6 - 24)) = v7;
  v14[1] = 0;
  v8 = (std::ios_base *)((char *)v14 + *(_QWORD *)(v14[0] - 24));
  std::ios_base::init(v8, v16);
  v8[1].__vftable = 0;
  v8[1].__fmtflags_ = -1;
  v9 = v5[5];
  v15 = v5[4];
  *(_QWORD *)((char *)&v16[-1] + *(_QWORD *)(v15 - 24)) = v9;
  v14[0] = v5[1];
  *(_QWORD *)((char *)v14 + *(_QWORD *)(v14[0] - 24)) = v5[6];
  v20[0] = v3;
  v14[0] = v2 + 24;
  v15 = v4;
  std::streambuf::basic_streambuf();
  v10 = MEMORY[0x24BEDB848];
  v16[0] = MEMORY[0x24BEDB848] + 16;
  *(_OWORD *)__p = 0u;
  v18 = 0u;
  v19 = 24;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v15, (uint64_t)"<", 1);
  if (*((_QWORD *)this + 1))
  {
    v11 = 0;
    do
    {
      *(_DWORD *)((char *)v16 + *(_QWORD *)(v15 - 24)) = *(_DWORD *)((_BYTE *)v16 + *(_QWORD *)(v15 - 24)) & 0xFFFFFFB5 | 8;
      std::ostream::operator<<();
      ++v11;
    }
    while (v11 < *((_QWORD *)this + 1));
  }
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v15, (uint64_t)">", 1);
  std::stringbuf::str();
  v14[0] = *v5;
  v12 = v5[9];
  *(_QWORD *)((char *)v14 + *(_QWORD *)(v14[0] - 24)) = v5[8];
  v15 = v12;
  v16[0] = v10 + 16;
  if (SBYTE7(v18) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x20BD27A84](v20);
}

void sub_20A8C0F74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  std::iostream::~basic_iostream();
  MEMORY[0x20BD27A84](a10);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::Data::Data(uint64_t this)
{
  *(_QWORD *)this = &off_24C331510;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_BYTE *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_24C331510;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_BYTE *)(this + 32) = 0;
  return this;
}

mediaplatform::Data *mediaplatform::Data::Data(mediaplatform::Data *this, const void *__src, size_t __n, int a4)
{
  void *v8;

  v8 = 0;
  *(_QWORD *)this = &off_24C331510;
  *((_QWORD *)this + 1) = __n;
  *((_QWORD *)this + 2) = __n;
  if (__n && a4)
    v8 = (void *)operator new[]();
  *((_QWORD *)this + 3) = v8;
  *((_BYTE *)this + 32) = a4;
  if (a4)
  {
    if (__src)
      memcpy(v8, __src, __n);
    else
      bzero(v8, __n);
  }
  else
  {
    *((_QWORD *)this + 3) = __src;
  }
  return this;
}

mediaplatform::Data *mediaplatform::Data::Data(mediaplatform::Data *this, const mediaplatform::FilePath *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  std::ios_base *v8;
  uint64_t v9;
  uint64_t v10;
  mediaplatform::PlatformErrorCondition *exception;
  int v13;
  std::string v14;
  void *__p[2];
  char v16;
  uint64_t v17;
  _QWORD v18[2];
  _BYTE v19[408];
  _QWORD v20[20];

  v20[19] = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)this = &off_24C331510;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_BYTE *)this + 32) = 0;
  mediaplatform::FilePath::str(a2, (uint64_t)__p);
  v4 = MEMORY[0x24BEDB838];
  v5 = MEMORY[0x24BEDB838] + 64;
  v20[0] = MEMORY[0x24BEDB838] + 64;
  v6 = (_QWORD *)MEMORY[0x24BEDB7E0];
  v7 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
  v18[0] = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
  *(_QWORD *)((char *)v18 + *(_QWORD *)(v18[0] - 24)) = v7;
  v18[1] = 0;
  v8 = (std::ios_base *)((char *)v18 + *(_QWORD *)(v18[0] - 24));
  std::ios_base::init(v8, v19);
  v8[1].__vftable = 0;
  v8[1].__fmtflags_ = -1;
  v18[0] = v4 + 24;
  v20[0] = v5;
  MEMORY[0x20BD27868](v19);
  if (!std::filebuf::open())
    std::ios_base::clear((std::ios_base *)((char *)v18 + *(_QWORD *)(v18[0] - 24)), *(_DWORD *)&v19[*(_QWORD *)(v18[0] - 24) + 16] | 4);
  if (v16 < 0)
    operator delete(__p[0]);
  if (*(_DWORD *)&v19[*(_QWORD *)(v18[0] - 24) + 16])
  {
    mediaplatform::FormatString<mediaplatform::FilePath>(&v14, (std::string *)"File not found: {0}", (uint64_t)a2);
    v13 = 2;
    mediaplatform::PlatformErrorCondition::PlatformErrorCondition((uint64_t)__p, &v13, (__int128 *)&v14);
    exception = (mediaplatform::PlatformErrorCondition *)__cxa_allocate_exception(0x40uLL);
    mediaplatform::PlatformErrorCondition::PlatformErrorCondition(exception, (const mediaplatform::PlatformErrorCondition *)__p);
  }
  std::istream::tellg();
  v9 = v17;
  v10 = operator new[]();
  std::istream::seekg();
  std::istream::read();
  *((_QWORD *)this + 2) = v9;
  *((_QWORD *)this + 3) = v10;
  *((_QWORD *)this + 1) = v9;
  *((_BYTE *)this + 32) = 1;
  v18[0] = *v6;
  *(_QWORD *)((char *)v18 + *(_QWORD *)(v18[0] - 24)) = v6[3];
  MEMORY[0x20BD27874](v19);
  std::istream::~istream();
  MEMORY[0x20BD27A84](v20);
  return this;
}

void sub_20A8C12DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::exception a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  mediaplatform::PlatformErrorCondition::~PlatformErrorCondition(&a16);
  if (a15 < 0)
    operator delete(__p);
  std::ifstream::~ifstream(&a36);
  _Unwind_Resume(a1);
}

void mediaplatform::FormatString<mediaplatform::FilePath>(std::string *a1, std::string *a2, uint64_t a3)
{
  uint64_t v3;

  v3 = a3;
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  a1->__r_.__value_.__r.__words[0] = 0;
  mediaplatform::FormatImplementation<mediaplatform::FilePath>(a2, a1, 0, &v3);
}

void sub_20A8C13C0(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

_QWORD *std::ifstream::~ifstream(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = MEMORY[0x24BEDB7E0];
  v3 = *MEMORY[0x24BEDB7E0];
  *a1 = *MEMORY[0x24BEDB7E0];
  *(_QWORD *)((char *)a1 + *(_QWORD *)(v3 - 24)) = *(_QWORD *)(v2 + 24);
  MEMORY[0x20BD27874](a1 + 2);
  std::istream::~istream();
  MEMORY[0x20BD27A84](a1 + 53);
  return a1;
}

void mediaplatform::FormatImplementation<mediaplatform::FilePath>(std::string *a1, std::string *a2, std::string::size_type a3, uint64_t *a4)
{
  char v8;
  char *v9;
  std::string::size_type i;
  int v11;
  char *v12;
  uint64_t v13;
  size_t v14;
  size_t v15;
  std::string *v16;
  _BYTE *v17;
  size_t v18;
  unsigned __int8 v19;
  size_t v20;
  size_t v21;
  size_t v22;
  unint64_t v23;
  size_t v24;
  const void *v25;
  char *v26;
  const void *v27;
  size_t v28;
  unint64_t v29;
  uint64_t v30;
  size_t v31;
  const void *p_p;
  unint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  int v37;
  uint64_t v38;
  char *v39;
  char *v40;
  unsigned __int8 *v41;
  int v42;
  std::runtime_error *exception;
  int v44;
  uint64_t v45;
  char v46;
  size_t v47;
  char v48;
  char *v49;
  void (**v50)(mediaplatform::FilePath *__hidden);
  std::string v51;
  void *__p;
  size_t v53;
  unsigned __int8 v54;
  std::string *v55;

  v8 = 0;
  v9 = (char *)a1;
  for (i = a3; ; ++i)
  {
    v49 = v9;
    if (*v9 == 123)
      break;
    if (!*v9)
    {
      std::string::resize(a2, i, 0);
      if (i != a3)
        mediaplatform::CopyFormatSectionToResult(a1, a2, a3, i - a3, v8 & 1);
      return;
    }
LABEL_7:
    ++v9;
  }
  v11 = v9[1];
  if (v11 == 123)
  {
    v49 = v9 + 1;
    v8 = 1;
    ++v9;
    goto LABEL_7;
  }
  if (v11 == 42)
  {
    v49 = v9 + 2;
    v37 = v9[2];
    if ((v37 - 48) > 9)
    {
      exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      std::runtime_error::runtime_error(exception, "Invalid format string- missing numeric value.");
    }
    else
    {
      v38 = 0;
      v39 = v9 + 3;
      do
      {
        v40 = v39;
        v49 = v39;
        v38 = (v37 - 48) + 10 * v38;
        ++v39;
        v42 = *v40;
        v41 = (unsigned __int8 *)(v40 - 1);
        v37 = v42;
      }
      while ((v42 - 58) >= 0xFFFFFFF6);
      v49 = (char *)(v41 + 2);
      if (*(v39 - 1) == 125)
        mediaplatform::FormatterParameters<0ul,mediaplatform::FilePath>::formatOptionsAtIndex<mediaplatform::FilePath>(v38);
      exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      std::runtime_error::runtime_error(exception, "Invalid format options reference: Must be of form {*<index>} but no trailing '}' found.");
    }
    __cxa_throw(exception, MEMORY[0x24BEDB730], MEMORY[0x24BEDAB60]);
  }
  mediaplatform::FormatOptions::FormatOptions((uint64_t)&v44, (const char **)&v49);
  if (v45)
    mediaplatform::FormatterParameters<1ul>::formatParameterAtIndex<mediaplatform::FormatterParameters<0ul,mediaplatform::FilePath>>();
  v12 = v49;
  v13 = *a4;
  v50 = &off_24C331570;
  memset(&v51, 0, sizeof(v51));
  std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(&v51, *(__int128 **)(v13 + 8), *(__int128 **)(v13 + 16), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(v13 + 16) - *(_QWORD *)(v13 + 8)) >> 3));
  mediaplatform::FilePath::str((mediaplatform::FilePath *)&v50, (uint64_t)&__p);
  v50 = &off_24C331570;
  v55 = &v51;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v55);
  v14 = v54;
  if ((v54 & 0x80u) != 0)
    v14 = v53;
  v15 = v47;
  if (v47 <= v14)
    v15 = v14;
  if (v46)
    v14 = v15;
  mediaplatform::FormatImplementation<mediaplatform::FilePath>(v12, a2, v14 + i, a4);
  if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v16 = a2;
  else
    v16 = (std::string *)a2->__r_.__value_.__r.__words[0];
  v17 = (char *)v16 + i;
  v18 = v54;
  v19 = v54;
  v20 = v53;
  if ((v54 & 0x80u) == 0)
    v21 = v54;
  else
    v21 = v53;
  if (v46 && (v22 = v47, v23 = v47 - v21, v47 > v21))
  {
    if (v44)
    {
      if (v44 == 1)
      {
        v29 = v23 >> 1;
        if (v23 >= 2)
        {
          if (v29 <= 1)
            v30 = 1;
          else
            v30 = v23 >> 1;
          do
          {
            *v17++ = v48;
            --v30;
          }
          while (v30);
          v18 = v54;
          v20 = v53;
          v19 = v54;
        }
        if ((v19 & 0x80u) == 0)
          v31 = v18;
        else
          v31 = v20;
        if (v31)
        {
          if ((v19 & 0x80u) == 0)
            p_p = &__p;
          else
            p_p = __p;
          memmove(v17, p_p, v31);
        }
        if (v23 != v29)
        {
          v33 = v23 - (v23 >> 1);
          v34 = &v17[v21];
          if (v33 <= 1)
            v33 = 1;
          v35 = -(uint64_t)v33;
          do
            *v34++ = v48;
          while (!__CFADD__(v35++, 1));
        }
      }
      else if (v44 == 2)
      {
        if (v47 != v21)
        {
          do
          {
            *v17++ = v48;
            --v23;
          }
          while (v23);
          v18 = v54;
          v20 = v53;
          v19 = v54;
        }
        v24 = (v19 & 0x80u) == 0 ? v18 : v20;
        if (v24)
        {
          if ((v19 & 0x80u) == 0)
            v25 = &__p;
          else
            v25 = __p;
          v26 = v17;
          goto LABEL_45;
        }
      }
    }
    else
    {
      if (v21)
      {
        if ((v54 & 0x80u) == 0)
          v27 = &__p;
        else
          v27 = __p;
        memmove((char *)v16 + i, v27, v21);
      }
      if (v22 != v21)
      {
        v28 = (size_t)v16 + v21;
        do
        {
          *(_BYTE *)(v28 + i) = v48;
          ++v28;
          --v23;
        }
        while (v23);
      }
    }
  }
  else if (v21)
  {
    if ((v54 & 0x80u) == 0)
      v25 = &__p;
    else
      v25 = __p;
    v26 = (char *)v16 + i;
    v24 = v21;
LABEL_45:
    memmove(v26, v25, v24);
  }
  if ((char)v54 < 0)
    operator delete(__p);
  if (i != a3)
    mediaplatform::CopyFormatSectionToResult(a1, a2, a3, i - a3, v8 & 1);
}

void sub_20A8C1838(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void mediaplatform::FormatterParameters<0ul,mediaplatform::FilePath>::formatOptionsAtIndex<mediaplatform::FilePath>(uint64_t a1)
{
  std::runtime_error *exception;

  if (!a1)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Requested parameter is not an FormatOptions instance.");
    __cxa_throw(exception, MEMORY[0x24BEDB730], MEMORY[0x24BEDAB60]);
  }
  mediaplatform::FormatterParameters<1ul>::formatOptionsAtIndex<mediaplatform::FilePath>();
}

void sub_20A8C18C4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void mediaplatform::FormatterParameters<1ul>::formatParameterAtIndex<mediaplatform::FormatterParameters<0ul,mediaplatform::FilePath>>()
{
  std::runtime_error *exception;

  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "Parameter index out of bounds.");
  __cxa_throw(exception, MEMORY[0x24BEDB730], MEMORY[0x24BEDAB60]);
}

void sub_20A8C1914(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void mediaplatform::FormatterParameters<1ul>::formatOptionsAtIndex<mediaplatform::FilePath>()
{
  std::runtime_error *exception;

  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "Parameter index out of bounds.");
  __cxa_throw(exception, MEMORY[0x24BEDB730], MEMORY[0x24BEDAB60]);
}

void sub_20A8C1964(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

mediaplatform::Data *mediaplatform::Data::Data(mediaplatform::Data *this, const mediaplatform::Data *a2)
{
  const void *v3;
  size_t v4;
  void *v5;

  v3 = (const void *)*((_QWORD *)a2 + 3);
  v4 = *((_QWORD *)a2 + 1);
  *(_QWORD *)this = &off_24C331510;
  *((_QWORD *)this + 1) = v4;
  *((_QWORD *)this + 2) = v4;
  if (v4)
    v5 = (void *)operator new[]();
  else
    v5 = 0;
  *((_QWORD *)this + 3) = v5;
  *((_BYTE *)this + 32) = 1;
  if (v3)
    memcpy(v5, v3, v4);
  else
    bzero(v5, v4);
  return this;
}

{
  const void *v3;
  size_t v4;
  void *v5;

  v3 = (const void *)*((_QWORD *)a2 + 3);
  v4 = *((_QWORD *)a2 + 1);
  *(_QWORD *)this = &off_24C331510;
  *((_QWORD *)this + 1) = v4;
  *((_QWORD *)this + 2) = v4;
  if (v4)
    v5 = (void *)operator new[]();
  else
    v5 = 0;
  *((_QWORD *)this + 3) = v5;
  *((_BYTE *)this + 32) = 1;
  if (v3)
    memcpy(v5, v3, v4);
  else
    bzero(v5, v4);
  return this;
}

__n128 mediaplatform::Data::Data(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a1 = &off_24C331510;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a2 + 24) = 0;
  result = *(__n128 *)(a2 + 8);
  *(__n128 *)(a1 + 8) = result;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return result;
}

{
  __n128 result;

  *(_QWORD *)a1 = &off_24C331510;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a2 + 24) = 0;
  result = *(__n128 *)(a2 + 8);
  *(__n128 *)(a1 + 8) = result;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return result;
}

__n128 mediaplatform::Data::_move(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a2 + 24) = 0;
  result = *(__n128 *)(a2 + 8);
  *(__n128 *)(a1 + 8) = result;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return result;
}

uint64_t mediaplatform::Data::operator=(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  if (a1 != a2)
  {
    if (*(_QWORD *)(a1 + 24) && *(_BYTE *)(a1 + 32))
      MEMORY[0x20BD27AE4]();
    v4 = *(_QWORD *)(a2 + 8);
    v5 = (void *)operator new[]();
    *(_QWORD *)(a1 + 16) = v4;
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 8) = v4;
    *(_BYTE *)(a1 + 32) = 1;
    memcpy(v5, *(const void **)(a2 + 24), *(_QWORD *)(a2 + 8));
  }
  return a1;
}

__n128 mediaplatform::Data::operator=(uint64_t a1, uint64_t a2)
{
  __n128 result;

  if (a1 != a2)
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a2 + 24) = 0;
    result = *(__n128 *)(a2 + 8);
    *(__n128 *)(a1 + 8) = result;
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  }
  return result;
}

BOOL mediaplatform::Data::operator==(uint64_t a1, uint64_t a2)
{
  size_t v2;

  v2 = *(_QWORD *)(a2 + 8);
  return v2 == *(_QWORD *)(a1 + 8) && memcmp(*(const void **)(a1 + 24), *(const void **)(a2 + 24), v2) == 0;
}

uint64_t mediaplatform::Data::length(mediaplatform::Data *this)
{
  return *((_QWORD *)this + 1);
}

BOOL mediaplatform::Data::operator!=(uint64_t a1, uint64_t a2)
{
  size_t v2;

  v2 = *(_QWORD *)(a2 + 8);
  return v2 != *(_QWORD *)(a1 + 8) || memcmp(*(const void **)(a1 + 24), *(const void **)(a2 + 24), v2) != 0;
}

uint64_t mediaplatform::Data::compare(mediaplatform::Data *this, const mediaplatform::Data *a2)
{
  size_t v2;
  const void *v3;
  size_t v4;
  size_t v5;
  const void *v6;
  int v7;
  uint64_t result;
  unsigned int v9;

  v2 = *((_QWORD *)a2 + 1);
  v3 = (const void *)*((_QWORD *)a2 + 3);
  v4 = *((_QWORD *)this + 1);
  if (v2 >= v4)
    v5 = *((_QWORD *)this + 1);
  else
    v5 = v2;
  v6 = (const void *)*((_QWORD *)this + 3);
  if (v2 < v4)
    v7 = 1;
  else
    v7 = -1;
  LODWORD(result) = memcmp(v6, v3, v5);
  if (v4 == v2)
    v9 = 0;
  else
    v9 = v7;
  if ((_DWORD)result)
    return result;
  else
    return v9;
}

uint64_t mediaplatform::Data::bytes(mediaplatform::Data *this)
{
  return *((_QWORD *)this + 3);
}

BOOL mediaplatform::Data::operator BOOL(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) != 0;
}

uint64_t mediaplatform::operator<<(uint64_t a1)
{
  std::ostream::write();
  return a1;
}

_QWORD *mediaplatform::operator>>(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v3;
  unint64_t v4;
  size_t v5;
  char *v6;
  char *v7;
  int64_t v8;
  unint64_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char v14;
  uint64_t v15;

  v3 = a1 + 4;
  if (*(_DWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 32))
  {
    v4 = 0;
    v5 = 0;
  }
  else
  {
    v4 = 0;
    v6 = 0;
    v7 = 0;
    v5 = 0;
    do
    {
      v8 = (int64_t)&v6[-v4];
      if ((unint64_t)&v6[-v4] > 0xFFFFFFFFFFFFFBFFLL)
      {
        v6 += 1024;
      }
      else
      {
        if ((unint64_t)(v7 - v6) >= 0x400)
        {
          bzero(v6, 0x400uLL);
        }
        else
        {
          v9 = v8 + 1024;
          if (v8 + 1024 < 0)
            std::vector<std::string>::__throw_length_error[abi:ne180100]();
          if (2 * (uint64_t)&v7[-v4] > v9)
            v9 = 2 * (_QWORD)&v7[-v4];
          if ((unint64_t)&v7[-v4] >= 0x3FFFFFFFFFFFFFFFLL)
            v10 = 0x7FFFFFFFFFFFFFFFLL;
          else
            v10 = v9;
          if (v10)
            v11 = (char *)operator new(v10);
          else
            v11 = 0;
          bzero(&v11[v8], 0x400uLL);
          v12 = &v11[v8];
          if (v6 != (char *)v4)
          {
            v13 = &v6[~v4];
            do
            {
              v14 = *--v6;
              (v13--)[(_QWORD)v11] = v14;
            }
            while (v6 != (char *)v4);
            v12 = v11;
          }
          v7 = &v11[v10];
          if (v4)
            operator delete((void *)v4);
          v4 = (unint64_t)v12;
          v6 = &v11[v8];
        }
        v6 += 1024;
      }
      std::istream::read();
      v5 += a1[1];
    }
    while (!*(_DWORD *)((char *)v3 + *(_QWORD *)(*a1 - 24)));
  }
  mediaplatform::Data::_ensureCapacity(a2, a2[1] + v5);
  v15 = a2[3];
  if (v15)
    memcpy((void *)(v15 + a2[1]), (const void *)v4, v5);
  a2[1] += v5;
  if (v4)
    operator delete((void *)v4);
  return a1;
}

void sub_20A8C1EFC(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

_QWORD *mediaplatform::Data::_ensureCapacity(_QWORD *this, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  void *v4;

  if (this[2] < a2)
  {
    v2 = (uint64_t)this;
    v3 = a2 + 256;
    v4 = (void *)operator new[]();
    this = memcpy(v4, *(const void **)(v2 + 24), *(_QWORD *)(v2 + 8));
    *(_QWORD *)(v2 + 16) = v3;
    *(_QWORD *)(v2 + 24) = v4;
    *(_BYTE *)(v2 + 32) = 1;
  }
  return this;
}

void *mediaplatform::Data::appendBytes(mediaplatform::Data *this, const void *a2, size_t a3)
{
  void *result;
  uint64_t v7;

  result = mediaplatform::Data::_ensureCapacity(this, *((_QWORD *)this + 1) + a3);
  v7 = *((_QWORD *)this + 3);
  if (v7)
    result = memcpy((void *)(v7 + *((_QWORD *)this + 1)), a2, a3);
  *((_QWORD *)this + 1) += a3;
  return result;
}

void *mediaplatform::Data::setBytes(mediaplatform::Data *this, const void *a2, unint64_t a3)
{
  void *result;
  uint64_t v7;

  *((_QWORD *)this + 1) = 0;
  result = mediaplatform::Data::_ensureCapacity(this, a3);
  v7 = *((_QWORD *)this + 3);
  if (v7)
    result = memcpy((void *)(v7 + *((_QWORD *)this + 1)), a2, a3);
  *((_QWORD *)this + 1) += a3;
  return result;
}

uint64_t mediaplatform::Data::clear(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  return this;
}

_QWORD *mediaplatform::Data::append(_QWORD *this, const mediaplatform::Data *a2)
{
  size_t v2;
  _QWORD *v3;
  const void *v4;
  uint64_t v5;

  v2 = *((_QWORD *)a2 + 1);
  if (v2)
  {
    v3 = this;
    v4 = (const void *)*((_QWORD *)a2 + 3);
    this = mediaplatform::Data::_ensureCapacity(this, this[1] + v2);
    v5 = v3[3];
    if (v5)
      this = memcpy((void *)(v5 + v3[1]), v4, v2);
    v3[1] += v2;
  }
  return this;
}

mlcore::LibraryPropertyTable *mlcore::LibraryPropertyTable::LibraryPropertyTable(mlcore::LibraryPropertyTable *this)
{
  std::string *v2;
  int v3;
  std::string *v4;
  std::string *v5;
  std::string *v6;
  int v7;
  std::string *v8;
  int v9;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  std::string __str;
  void *__p[2];
  char v19;
  _BYTE v20[8];
  std::string v21;
  int v22;
  char v23;
  std::string v24;
  void *v25[2];
  char v26;
  _BYTE v27[8];
  std::string v28;
  int v29;
  char v30;
  std::string v31;
  void *v32[2];
  char v33;
  void (**v34)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v35;
  int v36;
  uint64_t v37;
  int v38;
  void *v39[2];
  char v40;
  void (**v41)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v42;
  int v43;
  uint64_t v44;
  int v45;
  std::string v46;
  uint64_t (**v47)();
  std::string v48;
  int v49;
  char v50;
  std::string v51;
  uint64_t (**v52)();
  std::string v53;
  int v54;
  char v55;
  std::string v56;
  uint64_t (**v57)();
  std::string v58;
  int v59;
  uint64_t v60;
  int v61;
  uint64_t (**v62)();
  std::string __s;
  int v64;
  uint64_t v65;
  int v66;
  std::string v67;
  uint64_t (**v68)();
  std::string v69;
  int v70;
  char v71;
  std::string v72;
  uint64_t (**v73)();
  std::string v74;
  int v75;
  char v76;
  std::string v77;
  uint64_t (**v78)();
  std::string v79;
  int v80;
  uint64_t v81;
  int v82;
  uint64_t (**v83)();
  std::string v84;
  int v85;
  uint64_t v86;
  int v87;
  uint64_t (**v88)();
  std::string v89;
  int v90;
  char v91;
  std::string v92;
  uint64_t (**v93)();
  std::string v94;
  int v95;
  char v96;
  std::string v97;
  uint64_t (**v98)();
  std::string v99;
  int v100;
  uint64_t v101;
  int v102;
  uint64_t (**v103)();
  std::string v104;
  int v105;
  char v106;
  std::string v107;
  uint64_t (**v108)();
  std::string v109;
  int v110;
  char v111;
  std::string v112;
  uint64_t (**v113)();
  std::string v114;
  int v115;
  char v116;
  std::string v117;

  std::string::basic_string[abi:ne180100]<0>(&v46, "library_property");
  std::string::basic_string[abi:ne180100]<0>(v39, "property_pid");
  mlcore::MediaColumn<long long>::MediaColumn((uint64_t)&v41, (uint64_t)v39, 1);
  std::string::basic_string[abi:ne180100]<0>(v32, "source_id");
  mlcore::MediaColumn<long long>::MediaColumn((uint64_t)&v34, (uint64_t)v32, 0);
  std::string::basic_string[abi:ne180100]<0>(v25, "key");
  mlcore::MediaColumn<std::string>::MediaColumn((uint64_t)v27, (uint64_t)v25, 0);
  std::string::basic_string[abi:ne180100]<0>(__p, "value");
  mlcore::MediaColumn<std::string>::MediaColumn((uint64_t)v20, (uint64_t)__p, 0);
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v67, v46.__r_.__value_.__l.__data_, v46.__r_.__value_.__l.__size_);
  else
    v67 = v46;
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__s, v42.__r_.__value_.__l.__data_, v42.__r_.__value_.__l.__size_);
  else
    __s = v42;
  v62 = off_24C335B18;
  v65 = v44;
  v15 = v43;
  v64 = v43;
  v66 = v45;
  if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v58, v35.__r_.__value_.__l.__data_, v35.__r_.__value_.__l.__size_);
  else
    v58 = v35;
  v57 = off_24C335B18;
  v60 = v37;
  v16 = v36;
  v59 = v36;
  v61 = v38;
  v52 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v53, v28.__r_.__value_.__l.__data_, v28.__r_.__value_.__l.__size_);
  else
    v53 = v28;
  v54 = v29;
  v52 = &off_24C335AB8;
  v55 = v30;
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v56, v31.__r_.__value_.__l.__data_, v31.__r_.__value_.__l.__size_);
  else
    v56 = v31;
  v47 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v48, v21.__r_.__value_.__l.__data_, v21.__r_.__value_.__l.__size_);
  else
    v48 = v21;
  v49 = v22;
  v47 = &off_24C335AB8;
  v50 = v23;
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v51, v24.__r_.__value_.__l.__data_, v24.__r_.__value_.__l.__size_);
  else
    v51 = v24;
  *(_QWORD *)this = &off_24C330F50;
  v2 = (std::string *)((char *)this + 8);
  v3 = SHIBYTE(v67.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v2, v67.__r_.__value_.__l.__data_, v67.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v2->__r_.__value_.__l.__data_ = *(_OWORD *)&v67.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 3) = *((_QWORD *)&v67.__r_.__value_.__l + 2);
  }
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *(_QWORD *)this = off_24C335910;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  v14 = SHIBYTE(__s.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v84, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v84 = __s;
  v83 = off_24C335B18;
  v86 = v65;
  v85 = v15;
  v87 = v66;
  v12 = SHIBYTE(v58.__r_.__value_.__r.__words[2]);
  v13 = v3;
  if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v79, v58.__r_.__value_.__l.__data_, v58.__r_.__value_.__l.__size_);
  else
    v79 = v58;
  v78 = off_24C335B18;
  v81 = v60;
  v80 = v16;
  v82 = v61;
  v73 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v74, v53.__r_.__value_.__l.__data_, v53.__r_.__value_.__l.__size_);
  else
    v74 = v53;
  v75 = v54;
  v73 = &off_24C335AB8;
  v76 = v55;
  if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v77, v56.__r_.__value_.__l.__data_, v56.__r_.__value_.__l.__size_);
  else
    v77 = v56;
  v68 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v69, v48.__r_.__value_.__l.__data_, v48.__r_.__value_.__l.__size_);
  else
    v69 = v48;
  v70 = v49;
  v68 = &off_24C335AB8;
  v71 = v50;
  if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v72, v51.__r_.__value_.__l.__data_, v51.__r_.__value_.__l.__size_);
  else
    v72 = v51;
  v11 = SHIBYTE(v79.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v99, v79.__r_.__value_.__l.__data_, v79.__r_.__value_.__l.__size_);
  else
    v99 = v79;
  v100 = v16;
  v98 = off_24C335B18;
  v101 = v60;
  v102 = v61;
  v93 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v94, v74.__r_.__value_.__l.__data_, v74.__r_.__value_.__l.__size_);
  else
    v94 = v74;
  v95 = v75;
  v93 = &off_24C335AB8;
  v96 = v76;
  if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v97, v77.__r_.__value_.__l.__data_, v77.__r_.__value_.__l.__size_);
  else
    v97 = v77;
  v88 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v89, v69.__r_.__value_.__l.__data_, v69.__r_.__value_.__l.__size_);
  else
    v89 = v69;
  v90 = v70;
  v88 = &off_24C335AB8;
  v91 = v71;
  if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v92, v72.__r_.__value_.__l.__data_, v72.__r_.__value_.__l.__size_);
  else
    v92 = v72;
  v108 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v94.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v109, v94.__r_.__value_.__l.__data_, v94.__r_.__value_.__l.__size_);
  else
    v109 = v94;
  v110 = v95;
  v108 = &off_24C335AB8;
  v111 = v96;
  if (SHIBYTE(v97.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v112, v97.__r_.__value_.__l.__data_, v97.__r_.__value_.__l.__size_);
  else
    v112 = v97;
  v103 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v89.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v104, v89.__r_.__value_.__l.__data_, v89.__r_.__value_.__l.__size_);
  else
    v104 = v89;
  v105 = v90;
  v103 = &off_24C335AB8;
  v106 = v91;
  if (SHIBYTE(v92.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v107, v92.__r_.__value_.__l.__data_, v92.__r_.__value_.__l.__size_);
  else
    v107 = v92;
  v113 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v114, v104.__r_.__value_.__l.__data_, v104.__r_.__value_.__l.__size_);
  else
    v114 = v104;
  v115 = v105;
  v113 = &off_24C335AB8;
  v116 = v106;
  if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v117, v107.__r_.__value_.__l.__data_, v107.__r_.__value_.__l.__size_);
  else
    v117 = v107;
  *((_QWORD *)this + 10) = off_24C335D90;
  if (SHIBYTE(v114.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 88), v114.__r_.__value_.__l.__data_, v114.__r_.__value_.__l.__size_);
  else
    *(std::string *)((char *)this + 88) = v114;
  *((_DWORD *)this + 28) = v115;
  *((_QWORD *)this + 10) = &off_24C335AB8;
  *((_BYTE *)this + 116) = v116;
  v4 = (std::string *)((char *)this + 120);
  if (SHIBYTE(v117.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v4, v117.__r_.__value_.__l.__data_, v117.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)&v117.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 17) = *((_QWORD *)&v117.__r_.__value_.__l + 2);
  }
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v113);
  *((_QWORD *)this + 18) = off_24C335D90;
  if (SHIBYTE(v109.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 152), v109.__r_.__value_.__l.__data_, v109.__r_.__value_.__l.__size_);
  else
    *(std::string *)((char *)this + 152) = v109;
  *((_DWORD *)this + 44) = v110;
  *((_QWORD *)this + 18) = &off_24C335AB8;
  *((_BYTE *)this + 180) = v111;
  v5 = (std::string *)((char *)this + 184);
  if (SHIBYTE(v112.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v5, v112.__r_.__value_.__l.__data_, v112.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)&v112.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 25) = *((_QWORD *)&v112.__r_.__value_.__l + 2);
  }
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v103);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v108);
  *((_QWORD *)this + 26) = off_24C335D90;
  v6 = (std::string *)((char *)this + 216);
  v7 = SHIBYTE(v99.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v99.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v6, v99.__r_.__value_.__l.__data_, v99.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = *(_OWORD *)&v99.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 29) = *((_QWORD *)&v99.__r_.__value_.__l + 2);
  }
  *((_DWORD *)this + 60) = v16;
  *((_QWORD *)this + 26) = off_24C335B18;
  *(_QWORD *)((char *)this + 244) = v101;
  *((_DWORD *)this + 63) = v102;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v88);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v93);
  if (v7 < 0)
    operator delete(v99.__r_.__value_.__l.__data_);
  *((_QWORD *)this + 32) = off_24C335D90;
  v8 = (std::string *)((char *)this + 264);
  v9 = SHIBYTE(v84.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v8, v84.__r_.__value_.__l.__data_, v84.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v8->__r_.__value_.__l.__data_ = *(_OWORD *)&v84.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 35) = *((_QWORD *)&v84.__r_.__value_.__l + 2);
  }
  *((_DWORD *)this + 72) = v15;
  *((_QWORD *)this + 32) = off_24C335B18;
  *(_QWORD *)((char *)this + 292) = v86;
  *((_DWORD *)this + 75) = v87;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v68);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v73);
  if (v11 < 0)
    operator delete(v79.__r_.__value_.__l.__data_);
  if (v9 < 0)
    operator delete(v84.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v47);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v52);
  v57 = (uint64_t (**)())off_24C335D90;
  if (v12 < 0)
    operator delete(v58.__r_.__value_.__l.__data_);
  v62 = (uint64_t (**)())off_24C335D90;
  if (v14 < 0)
  {
    operator delete(__s.__r_.__value_.__l.__data_);
    if ((v13 & 0x80000000) == 0)
      goto LABEL_104;
  }
  else if ((v13 & 0x80000000) == 0)
  {
    goto LABEL_104;
  }
  operator delete(v67.__r_.__value_.__l.__data_);
LABEL_104:
  *(_QWORD *)this = &off_24C336478;
  *((_QWORD *)this + 38) = off_24C335D90;
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)this + 13, v42.__r_.__value_.__l.__data_, v42.__r_.__value_.__l.__size_);
  else
    *((std::string *)this + 13) = v42;
  *((_DWORD *)this + 84) = v43;
  *(_QWORD *)((char *)this + 340) = v44;
  *((_DWORD *)this + 87) = v45;
  *((_QWORD *)this + 38) = off_24C336AC0;
  *((_QWORD *)this + 44) = off_24C335D90;
  if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)this + 15, v35.__r_.__value_.__l.__data_, v35.__r_.__value_.__l.__size_);
  else
    *((std::string *)this + 15) = v35;
  *((_DWORD *)this + 96) = v36;
  *(_QWORD *)((char *)this + 388) = v37;
  *((_DWORD *)this + 99) = v38;
  *((_QWORD *)this + 44) = off_24C336AC0;
  std::__tuple_leaf<2ul,mlcore::MediaColumn<std::string>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<std::string>&,void>((uint64_t)this + 400, (uint64_t)v27);
  std::__tuple_leaf<3ul,mlcore::MediaColumn<std::string>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<std::string>&,void>((uint64_t)this + 464, (uint64_t)v20);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)v20);
  if (v19 < 0)
    operator delete(__p[0]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)v27);
  if (v26 < 0)
    operator delete(v25[0]);
  v34 = off_24C335D90;
  if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v35.__r_.__value_.__l.__data_);
  if (v33 < 0)
    operator delete(v32[0]);
  v41 = off_24C335D90;
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v42.__r_.__value_.__l.__data_);
  if (v40 < 0)
    operator delete(v39[0]);
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v46.__r_.__value_.__l.__data_);
  *(_QWORD *)this = &off_24C339E38;
  std::string::basic_string[abi:ne180100]<0>(&__str, "UNIQUE (source_id, key)");
  std::string::operator=((std::string *)((char *)this + 56), &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  return this;
}

void sub_20A8C2CB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void *a48,uint64_t a49,int a50,__int16 a51,char a52,char a53,uint64_t a54,void *a55,uint64_t a56,int a57,__int16 a58,char a59,char a60,uint64_t a61,uint64_t a62,void *a63)
{
  char a68;
  uint64_t a69;
  void *a70;
  char a72;
  void *a73;
  char a74;
  uint64_t v74;
  uint64_t v75;
  void **v76;

  *(_QWORD *)(v74 + 304) = v75;
  if (*(char *)(v74 + 335) < 0)
    operator delete(*v76);
  mediaplatform::DatabaseTable<long long,long long,std::string,std::string>::~DatabaseTable(v74);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&a26);
  if (a25 < 0)
    operator delete(__p);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&a40);
  if (a39 < 0)
    operator delete(a34);
  a54 = (uint64_t)off_24C335D90;
  if (a60 < 0)
    operator delete(a55);
  if (a53 < 0)
    operator delete(a48);
  a69 = (uint64_t)off_24C335D90;
  if (a72 < 0)
    operator delete(a70);
  if (a68 < 0)
    operator delete(a63);
  if (a74 < 0)
    operator delete(a73);
  _Unwind_Resume(a1);
}

void sub_20A8C307C()
{
  JUMPOUT(0x20A8C2FE4);
}

void sub_20A8C3084()
{
  JUMPOUT(0x20A8C2FF4);
}

void sub_20A8C308C()
{
  JUMPOUT(0x20A8C2FFCLL);
}

void sub_20A8C3094()
{
  JUMPOUT(0x20A8C300CLL);
}

void sub_20A8C309C()
{
  JUMPOUT(0x20A8C3028);
}

void sub_20A8C30A4()
{
  JUMPOUT(0x20A8C3038);
}

void sub_20A8C30AC()
{
  JUMPOUT(0x20A8C3054);
}

void sub_20A8C30B4()
{
  JUMPOUT(0x20A8C3064);
}

void mlcore::MediaTable<long long,long long,std::string,std::string>::~MediaTable(uint64_t a1)
{
  *(_QWORD *)a1 = &off_24C336478;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 464);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 400);
  *(_QWORD *)(a1 + 352) = off_24C335D90;
  if (*(char *)(a1 + 383) < 0)
    operator delete(*(void **)(a1 + 360));
  *(_QWORD *)(a1 + 304) = off_24C335D90;
  if (*(char *)(a1 + 335) < 0)
    operator delete(*(void **)(a1 + 312));
  *(_QWORD *)a1 = off_24C335910;
  *(_QWORD *)(a1 + 256) = off_24C335D90;
  if (*(char *)(a1 + 287) < 0)
    operator delete(*(void **)(a1 + 264));
  *(_QWORD *)(a1 + 208) = off_24C335D90;
  if (*(char *)(a1 + 239) < 0)
    operator delete(*(void **)(a1 + 216));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 144);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 80);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
}

{
  mlcore::MediaTable<long long,long long,std::string,std::string>::~MediaTable(a1);
  JUMPOUT(0x20BD27AFCLL);
}

void mediaplatform::DatabaseTable<long long,long long,std::string,std::string>::~DatabaseTable(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = off_24C335910;
  v2 = a1 + 80;
  *(_QWORD *)(a1 + 256) = off_24C335D90;
  if (*(char *)(a1 + 287) < 0)
    operator delete(*(void **)(a1 + 264));
  *(_QWORD *)(a1 + 208) = off_24C335D90;
  if (*(char *)(a1 + 239) < 0)
    operator delete(*(void **)(a1 + 216));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 144);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(v2);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
}

{
  uint64_t v2;

  *(_QWORD *)a1 = off_24C335910;
  v2 = a1 + 80;
  *(_QWORD *)(a1 + 256) = off_24C335D90;
  if (*(char *)(a1 + 287) < 0)
    operator delete(*(void **)(a1 + 264));
  *(_QWORD *)(a1 + 208) = off_24C335D90;
  if (*(char *)(a1 + 239) < 0)
    operator delete(*(void **)(a1 + 216));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 144);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(v2);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
  JUMPOUT(0x20BD27AFCLL);
}

{
  uint64_t v2;

  *(_QWORD *)a1 = off_24C335910;
  v2 = a1 + 80;
  *(_QWORD *)(a1 + 256) = off_24C335D90;
  if (*(char *)(a1 + 287) < 0)
    operator delete(*(void **)(a1 + 264));
  *(_QWORD *)(a1 + 208) = off_24C335D90;
  if (*(char *)(a1 + 239) < 0)
    operator delete(*(void **)(a1 + 216));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 144);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(v2);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
}

uint64_t mediaplatform::DatabaseTable<long long,long long,std::string,std::string>::columnCount()
{
  return 4;
}

void mediaplatform::DatabaseTable<long long,long long,std::string,std::string>::columnNames(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 256);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 208);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 144);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 80);
}

void sub_20A8C3314(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void mediaplatform::DatabaseTable<long long,long long,std::string,std::string>::targetColumnExpression(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __int128 *v3;
  __int128 *v4[3];
  __int128 **v5;

  v3 = (__int128 *)(a1 + 8);
  (*(void (**)(__int128 **__return_ptr))(*(_QWORD *)a1 + 24))(v4);
  std::allocate_shared[abi:ne180100]<mediaplatform::SQLColumnNameExpression,std::allocator<mediaplatform::SQLColumnNameExpression>,std::string &,std::string const&,void>(a2, v4[0], v3);
  v5 = v4;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v5);
}

void sub_20A8C338C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void mlcore::LibraryPropertyTable::~LibraryPropertyTable(mlcore::LibraryPropertyTable *this)
{
  mlcore::MediaTable<long long,long long,std::string,std::string>::~MediaTable((uint64_t)this);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mediaplatform::DatabaseColumnTuple<1ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 128) = off_24C335D90;
  if (*(char *)(a1 + 159) < 0)
    operator delete(*(void **)(a1 + 136));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 64);
  return mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1);
}

void mlcore::LibraryPropertyTable::persistentIDColumn(mlcore::LibraryPropertyTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 335) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 39), *((_QWORD *)this + 40));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 312);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 41);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 84);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 87);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 340);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::LibraryPropertyTable::sourceIDColumn(mlcore::LibraryPropertyTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 383) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 45), *((_QWORD *)this + 46));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 360);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 47);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 96);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 99);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 388);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::LibraryPropertyTable::keyColumn(mlcore::LibraryPropertyTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 431) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 51), *((_QWORD *)this + 52));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 408);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 53);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 108);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 436);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 463) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 55), *((_QWORD *)this + 56));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 440);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 57);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8C367C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::LibraryPropertyTable::valueColumn(mlcore::LibraryPropertyTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 495) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 59), *((_QWORD *)this + 60));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 472);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 61);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 124);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 500);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 527) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 63), *((_QWORD *)this + 64));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 504);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 65);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8C3754(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::Movie::~Movie(mlcore::Movie *this)
{
  *(_QWORD *)this = off_24C33A860;
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase((_QWORD *)this + 1);
}

{
  *(_QWORD *)this = off_24C33A860;
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase((_QWORD *)this + 1);
  JUMPOUT(0x20BD27AFCLL);
}

double std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::TypedEntityClass<mlcore::Movie>::sharedPointer(void)::{lambda(void)#1} &&>>()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_QWORD *)(v0 + 96) = 0;
  *(_DWORD *)(v0 + 104) = 1065353216;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_DWORD *)(v0 + 144) = 1065353216;
  *(_QWORD *)v0 = &off_24C338D98;
  *(_QWORD *)(v0 + 8) = 850045863;
  mlcore::TypedEntityClass<mlcore::Movie>::sharedPointer(void)::__sharedPointer = v0;
  return result;
}

void mlcore::TypedEntityClass<mlcore::Movie>::~TypedEntityClass(mlcore::EntityClass *a1)
{
  mlcore::EntityClass::~EntityClass(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mlcore::TypedEntityClass<mlcore::Movie>::description(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1);
}

__n128 mlcore::TypedEntityClass<mlcore::Movie>::create@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, __n128 *a4@<X8>)
{
  char *v8;
  uint64_t v9;
  unint64_t *v10;
  uint64_t v11;
  __n128 result;
  __n128 v13;
  unint64_t v14[3];
  unint64_t *v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v8 = (char *)operator new(0x100uLL);
  *((_QWORD *)v8 + 1) = 0;
  *((_QWORD *)v8 + 2) = 0;
  *(_QWORD *)v8 = &off_24C33D358;
  *(_OWORD *)(v8 + 40) = 0u;
  *(_OWORD *)(v8 + 56) = 0u;
  *((_DWORD *)v8 + 18) = 1065353216;
  *((_OWORD *)v8 + 5) = 0u;
  *((_OWORD *)v8 + 6) = 0u;
  *((_DWORD *)v8 + 28) = 1065353216;
  *(_OWORD *)(v8 + 120) = 0u;
  *(_OWORD *)(v8 + 136) = 0u;
  *((_DWORD *)v8 + 38) = 1065353216;
  *((_OWORD *)v8 + 10) = 0u;
  *((_OWORD *)v8 + 11) = 0u;
  *((_DWORD *)v8 + 48) = 1065353216;
  *(_OWORD *)(v8 + 216) = 0u;
  *((_DWORD *)v8 + 58) = 1065353216;
  *((_QWORD *)v8 + 30) = &unk_24C3371E8;
  *((_QWORD *)v8 + 31) = a2;
  *(_OWORD *)(v8 + 200) = 0u;
  v9 = (uint64_t)(v8 + 200);
  *((_QWORD *)v8 + 4) = &off_24C3371C0;
  *((_QWORD *)v8 + 3) = &off_24C33A748;
  v13.n128_u64[0] = (unint64_t)(v8 + 24);
  v13.n128_u64[1] = (unint64_t)v8;
  v14[0] = (unint64_t)&off_24C33B140;
  v15 = v14;
  mlcore::PropertyCache::mergePropertiesFromCache((uint64_t)(v8 + 32), a3, (uint64_t)v14);
  v10 = v15;
  if (v15 == v14)
  {
    v11 = 4;
    v10 = v14;
    goto LABEL_5;
  }
  if (v15)
  {
    v11 = 5;
LABEL_5:
    (*(void (**)(void))(*v10 + 8 * v11))();
  }
  v14[0] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 112))(a1);
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>(v9, v14[0], v14)[3] = a2;
  result = v13;
  *a4 = v13;
  return result;
}

void sub_20A8C39F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char *a15)
{
  char *v15;
  char *v17;
  uint64_t v18;

  v17 = a15;
  if (a15 == v15)
  {
    v18 = 4;
    v17 = &a12;
  }
  else
  {
    if (!a15)
      goto LABEL_6;
    v18 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v17 + 8 * v18))();
LABEL_6:
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t mlcore::TypedEntityClass<mlcore::Movie>::name(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
}

BOOL mlcore::TypedEntityClass<mlcore::Movie>::isRevisionTrackable(uint64_t a1)
{
  return (*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 64))(a1) != -1;
}

uint64_t mlcore::TypedEntityClass<mlcore::Movie>::isCloudUpdatable()
{
  return 1;
}

_QWORD *mlcore::TypedEntityClass<mlcore::Movie>::databaseTablesToDeleteFrom@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *result;

  v2 = *(_QWORD *)mediaplatform::Singleton<mlcore::ItemExtraTable>::sharedInstance();
  v3 = *(_QWORD *)mediaplatform::Singleton<mlcore::ItemStoreTable>::sharedInstance();
  v4 = *(_QWORD *)mediaplatform::Singleton<mlcore::ItemVideoTable>::sharedInstance();
  v5 = *(_QWORD *)mediaplatform::Singleton<mlcore::ItemPlaybackTable>::sharedInstance();
  v6 = *(_QWORD *)mediaplatform::Singleton<mlcore::ItemSearchTable>::sharedInstance();
  v7 = *(_QWORD *)mediaplatform::Singleton<mlcore::ItemKVSTable>::sharedInstance();
  v8 = *(_QWORD *)mediaplatform::Singleton<mlcore::ItemStatsTable>::sharedInstance();
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  result = operator new(0x38uLL);
  a1[1] = result + 7;
  a1[2] = result + 7;
  *result = v2;
  result[1] = v3;
  result[2] = v4;
  result[3] = v5;
  result[4] = v6;
  result[5] = v7;
  result[6] = v8;
  *a1 = result;
  return result;
}

_QWORD *mlcore::TypedEntityClass<mlcore::Movie>::databaseTablesToInsertInto@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *result;

  v2 = *(_QWORD *)mediaplatform::Singleton<mlcore::ItemExtraTable>::sharedInstance();
  v3 = *(_QWORD *)mediaplatform::Singleton<mlcore::ItemStoreTable>::sharedInstance();
  v4 = *(_QWORD *)mediaplatform::Singleton<mlcore::ItemVideoTable>::sharedInstance();
  v5 = *(_QWORD *)mediaplatform::Singleton<mlcore::ItemPlaybackTable>::sharedInstance();
  v6 = *(_QWORD *)mediaplatform::Singleton<mlcore::ItemSearchTable>::sharedInstance();
  v7 = *(_QWORD *)mediaplatform::Singleton<mlcore::ItemKVSTable>::sharedInstance();
  v8 = *(_QWORD *)mediaplatform::Singleton<mlcore::ItemStatsTable>::sharedInstance();
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  result = operator new(0x38uLL);
  a1[1] = result + 7;
  a1[2] = result + 7;
  *result = v2;
  result[1] = v3;
  result[2] = v4;
  result[3] = v5;
  result[4] = v6;
  result[5] = v7;
  result[6] = v8;
  *a1 = result;
  return result;
}

uint64_t mlcore::TypedEntityClass<mlcore::Movie>::representativeItemPersistentIDProperty()
{
  return 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::Movie>::trackForeignPersistentIDProperty()
{
  return 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::Movie>::trackForeignOrderingProperty()
{
  return 0;
}

void std::__shared_ptr_emplace<mlcore::Movie>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33D358;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mlcore::Movie>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33D358;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t std::__shared_ptr_emplace<mlcore::Movie>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::MoviePropertyInfo(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::ItemVideoTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __str;
  _QWORD v23[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::ItemVideoTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v23[0] = *v1;
  v23[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::ItemVideoTable **)mediaplatform::Singleton<mlcore::ItemVideoTable>::sharedInstance();
  mlcore::ItemVideoTable::movieInfoColumn(*v5, (uint64_t)&__str);
  mlcore::DatabaseModelProperty<std::string>::DatabaseModelProperty(v0, v23, (uint64_t)&__str);
  mlcore::MoviePropertyInfo(void)::property = v0;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&__str);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::MoviePropertyInfo(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__str, "");
  std::string::operator=((std::string *)(v8 + 40), &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::Item>::sharedPointer();
  v10 = mlcore::MoviePropertyInfo(void)::property;
  v11 = mediaplatform::Singleton<mlcore::ItemVideoTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "info");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __str.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A8C3DD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::MoviePropertyIsRental(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::ItemVideoTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __p;
  char v23;
  _QWORD v24[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::ItemVideoTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v24[0] = *v1;
  v24[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::ItemVideoTable **)mediaplatform::Singleton<mlcore::ItemVideoTable>::sharedInstance();
  mlcore::ItemVideoTable::isRentalColumn(*v5, (uint64_t)&__p);
  mlcore::DatabaseModelProperty<int>::DatabaseModelProperty(v0, v24, (uint64_t)&__p);
  mlcore::MoviePropertyIsRental(void)::property = v0;
  if (v23 < 0)
    operator delete((void *)__p.__r_.__value_.__l.__size_);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::MoviePropertyIsRental(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  std::string::operator=((std::string *)(v8 + 40), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::Item>::sharedPointer();
  v10 = mlcore::MoviePropertyIsRental(void)::property;
  v11 = mediaplatform::Singleton<mlcore::ItemVideoTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "isRental");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A8C4060(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, void *a17, int a18, __int16 a19, char a20,char a21,int a22,__int16 a23,char a24,char a25)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t mlcore::MoviePropertyDateDownloaded(mlcore *this)
{
  unint64_t v1;
  char v3;
  char **v4;
  char *v5;

  v1 = atomic_load(&mlcore::MoviePropertyDateDownloaded(void)::once);
  if (v1 != -1)
  {
    v5 = &v3;
    v4 = &v5;
    std::__call_once(&mlcore::MoviePropertyDateDownloaded(void)::once, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::MoviePropertyDateDownloaded(void)::$_0 &&>>);
  }
  return mlcore::MoviePropertyDateDownloaded(void)::property;
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::MoviePropertyDateDownloaded(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::ItemTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __p;
  char v23;
  _QWORD v24[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::ItemTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v24[0] = *v1;
  v24[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::ItemTable **)mediaplatform::Singleton<mlcore::ItemTable>::sharedInstance();
  mlcore::ItemTable::dateDownloadedColumn(*v5, (uint64_t)&__p);
  mlcore::DatabaseModelProperty<long long>::DatabaseModelProperty(v0, v24, (uint64_t)&__p);
  mlcore::MoviePropertyDateDownloaded(void)::property = v0;
  if (v23 < 0)
    operator delete((void *)__p.__r_.__value_.__l.__size_);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::MoviePropertyDateDownloaded(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  std::string::operator=((std::string *)(v8 + 40), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::Item>::sharedPointer();
  v10 = mlcore::MoviePropertyDateDownloaded(void)::property;
  v11 = mediaplatform::Singleton<mlcore::ItemTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "dateDownloaded");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A8C434C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, void *a17, int a18, __int16 a19, char a20,char a21,int a22,__int16 a23,char a24,char a25)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

double mlcore::Movie::Movie(mlcore::Movie *this, uint64_t a2)
{
  double result;

  result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 12) = 1065353216;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_DWORD *)this + 22) = 1065353216;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_DWORD *)this + 32) = 1065353216;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_DWORD *)this + 42) = 1065353216;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_DWORD *)this + 52) = 1065353216;
  *((_QWORD *)this + 27) = &unk_24C3371E8;
  *((_QWORD *)this + 28) = a2;
  *(_QWORD *)this = &off_24C33A748;
  *((_QWORD *)this + 1) = &off_24C3371C0;
  return result;
}

{
  double result;

  result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 12) = 1065353216;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_DWORD *)this + 22) = 1065353216;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_DWORD *)this + 32) = 1065353216;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_DWORD *)this + 42) = 1065353216;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_DWORD *)this + 52) = 1065353216;
  *((_QWORD *)this + 27) = &unk_24C3371E8;
  *((_QWORD *)this + 28) = a2;
  *(_QWORD *)this = &off_24C33A748;
  *((_QWORD *)this + 1) = &off_24C3371C0;
  return result;
}

void mediaplatform::UnicodeTokenizer::~UnicodeTokenizer(mediaplatform::UnicodeTokenizer *this)
{
  uint64_t v2;

  v2 = *((_QWORD *)this + 1);
  *(_QWORD *)this = &off_24C330EF0;
  *((_QWORD *)this + 1) = 0;
  if (v2)
    std::default_delete<mediaplatform::UnicodeTokenizer::Context>::operator()[abi:ne180100]();
}

{
  uint64_t v2;

  v2 = *((_QWORD *)this + 1);
  *(_QWORD *)this = &off_24C330EF0;
  *((_QWORD *)this + 1) = 0;
  if (v2)
    std::default_delete<mediaplatform::UnicodeTokenizer::Context>::operator()[abi:ne180100]();
  JUMPOUT(0x20BD27AFCLL);
}

{
  uint64_t v2;

  v2 = *((_QWORD *)this + 1);
  *(_QWORD *)this = &off_24C330EF0;
  *((_QWORD *)this + 1) = 0;
  if (v2)
    std::default_delete<mediaplatform::UnicodeTokenizer::Context>::operator()[abi:ne180100]();
}

void std::default_delete<mediaplatform::UnicodeTokenizer::Context>::operator()[abi:ne180100]()
{
  ubrk_close();
  JUMPOUT(0x20BD27AFCLL);
}

_QWORD *mediaplatform::UnicodeTokenizer::UnicodeTokenizer(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  _DWORD *exception;

  *a1 = &off_24C330EF0;
  v2 = (_QWORD *)operator new();
  v3 = ubrk_open();
  *v2 = v3;
  if (!v3)
  {
    exception = __cxa_allocate_exception(4uLL);
    *exception = 0;
  }
  a1[1] = v2;
  return a1;
}

void sub_20A8C462C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD27AFC](v1, 0x20C4093837F09);
  _Unwind_Resume(a1);
}

void mediaplatform::UnicodeTokenizer::tokenize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4;
  int v5;
  int RuleStatus;
  uint64_t v7;
  void *v8;
  void **v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;
  void *__p[2];
  char v18;
  void *v19[2];
  unint64_t v20;
  void *v21[2];
  unint64_t v22;
  int v23;

  v23 = 0;
  v21[0] = 0;
  v21[1] = 0;
  v22 = 0;
  mediaplatform::StringToUCharString(a2, v19);
  *(_OWORD *)v21 = *(_OWORD *)v19;
  v22 = v20;
  ubrk_setText();
  v4 = 0;
  while (1)
  {
    v5 = v4;
    v4 = ubrk_next();
    RuleStatus = ubrk_getRuleStatus();
    if (v4 == -1)
      break;
    if (RuleStatus)
    {
      v7 = v5;
      if (SHIBYTE(v22) < 0)
      {
        v8 = v21[1];
        if (v21[1] < (void *)v5)
LABEL_31:
          std::string::__throw_out_of_range[abi:ne180100]();
        v9 = (void **)v21[0];
      }
      else
      {
        v8 = (void *)HIBYTE(v22);
        if (HIBYTE(v22) < (unint64_t)v5)
          goto LABEL_31;
        v9 = v21;
      }
      v10 = (unint64_t)v8 - v5;
      if (v10 >= v4 - v5)
        v11 = v4 - v5;
      else
        v11 = v10;
      if (v11 >= 0x7FFFFFFFFFFFFFF8)
        std::string::__throw_length_error[abi:ne180100]();
      if (v11 >= 0xB)
      {
        v13 = (v11 & 0xFFFFFFFFFFFFFFFCLL) + 4;
        if ((v11 | 3) != 0xB)
          v13 = v11 | 3;
        v12 = std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned short>>(v13 + 1);
        v19[1] = (void *)v11;
        v20 = v14 | 0x8000000000000000;
        v19[0] = v12;
      }
      else
      {
        HIBYTE(v20) = v11;
        v12 = v19;
        if (!v11)
          goto LABEL_21;
      }
      for (i = 0; i != v11; ++i)
        *((_WORD *)v12 + i) = *((_WORD *)v9 + v7 + i);
LABEL_21:
      *((_WORD *)v12 + v11) = 0;
      mediaplatform::UCharStringToString((uint64_t)v19, __p);
      v16 = *(_QWORD *)(a3 + 24);
      if (!v16)
        std::__throw_bad_function_call[abi:ne180100]();
      (*(void (**)(uint64_t, void **))(*(_QWORD *)v16 + 48))(v16, __p);
      if (v18 < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v20) < 0)
        operator delete(v19[0]);
    }
  }
  if (SHIBYTE(v22) < 0)
    operator delete(v21[0]);
}

void sub_20A8C4870(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *mediaplatform::UnicodeTokenizer::allTokens@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *result;
  uint64_t v4;
  _QWORD v5[3];
  _QWORD *v6;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  v5[0] = &off_24C331768;
  v5[1] = a3;
  v6 = v5;
  mediaplatform::UnicodeTokenizer::tokenize(a1, a2, (uint64_t)v5);
  result = v6;
  if (v6 == v5)
  {
    v4 = 4;
    result = v5;
  }
  else
  {
    if (!v6)
      return result;
    v4 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v4))();
}

void sub_20A8C4974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, uint64_t a12, void ***a13)
{
  void ***v14;
  uint64_t v15;

  v14 = a13;
  if (a13 == &a10)
  {
    v15 = 4;
    v14 = &a10;
  }
  else
  {
    if (!a13)
      goto LABEL_6;
    v15 = 5;
  }
  ((void (*)(void))(*v14)[v15])();
LABEL_6:
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a10);
  _Unwind_Resume(a1);
}

void std::__function::__func<mediaplatform::UnicodeTokenizer::allTokens(std::string const&)::$_0,std::allocator<mediaplatform::UnicodeTokenizer::allTokens(std::string const&)::$_0>,void ()(std::string const&)>::~__func()
{
  JUMPOUT(0x20BD27AFCLL);
}

_QWORD *std::__function::__func<mediaplatform::UnicodeTokenizer::allTokens(std::string const&)::$_0,std::allocator<mediaplatform::UnicodeTokenizer::allTokens(std::string const&)::$_0>,void ()(std::string const&)>::__clone(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24C331768;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<mediaplatform::UnicodeTokenizer::allTokens(std::string const&)::$_0,std::allocator<mediaplatform::UnicodeTokenizer::allTokens(std::string const&)::$_0>,void ()(std::string const&)>::__clone(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24C331768;
  a2[1] = v2;
  return result;
}

std::vector<std::string>::pointer std::__function::__func<mediaplatform::UnicodeTokenizer::allTokens(std::string const&)::$_0,std::allocator<mediaplatform::UnicodeTokenizer::allTokens(std::string const&)::$_0>,void ()(std::string const&)>::operator()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  __int128 v4;
  std::vector<std::string>::pointer result;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(v2 + 8);
  if (v3 >= *(_QWORD *)(v2 + 16))
  {
    result = std::vector<std::string>::__push_back_slow_path<std::string const&>(*(std::vector<std::string> **)(a1 + 8), (__int128 *)a2);
  }
  else
  {
    if (*(char *)(a2 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(*(std::string **)(v2 + 8), *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
    }
    else
    {
      v4 = *(_OWORD *)a2;
      *(_QWORD *)(v3 + 16) = *(_QWORD *)(a2 + 16);
      *(_OWORD *)v3 = v4;
    }
    result = (std::vector<std::string>::pointer)(v3 + 24);
    *(_QWORD *)(v2 + 8) = v3 + 24;
  }
  *(_QWORD *)(v2 + 8) = result;
  return result;
}

void sub_20A8C4A90(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<mediaplatform::UnicodeTokenizer::allTokens(std::string const&)::$_0,std::allocator<mediaplatform::UnicodeTokenizer::allTokens(std::string const&)::$_0>,void ()(std::string const&)>::target(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(_QWORD *)(a2 + 8), (uint64_t)"ZN13mediaplatform16UnicodeTokenizer9allTokensERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE3$_0"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<mediaplatform::UnicodeTokenizer::allTokens(std::string const&)::$_0,std::allocator<mediaplatform::UnicodeTokenizer::allTokens(std::string const&)::$_0>,void ()(std::string const&)>::target_type()
{
}

mlcore::ArtworkTable *mlcore::ArtworkTable::ArtworkTable(mlcore::ArtworkTable *this)
{
  const void *v2;
  size_t v3;
  void *v4;
  std::string *v5;
  int v6;
  const void *v7;
  size_t v8;
  void *v9;
  int v10;
  const void *v11;
  size_t v12;
  void *v13;
  int v14;
  const void *v15;
  size_t v16;
  void *v17;
  int v18;
  const void *v19;
  size_t v20;
  void *v21;
  std::string *v22;
  std::string *v23;
  int v24;
  std::string *v25;
  int v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  std::string __str;
  void *__p[2];
  char v37;
  char v38[8];
  std::string v39;
  int v40;
  char v41;
  size_t v42;
  const void *v43;
  void *v44[2];
  char v45;
  void (**v46)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v47;
  int v48;
  uint64_t v49;
  void *v50[2];
  char v51;
  void *v52[2];
  char v53;
  char v54[8];
  std::string v55;
  int v56;
  char v57;
  std::string v58;
  void *v59[2];
  char v60;
  void (**v61)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v62;
  int v63;
  uint64_t v64;
  void *v65[2];
  char v66;
  void *v67[2];
  char v68;
  char v69[8];
  std::string v70;
  int v71;
  char v72;
  std::string v73;
  std::string __s;
  uint64_t (**v75)();
  std::string v76;
  int v77;
  char v78;
  void (**v79)(mediaplatform::Data *__hidden);
  size_t v80;
  size_t v81;
  const void *v82;
  char v83;
  uint64_t (**v84)();
  std::string v85;
  int v86;
  uint64_t v87;
  uint64_t (**v88)();
  std::string v89;
  int v90;
  char v91;
  std::string v92;
  uint64_t (**v93)();
  std::string v94;
  int v95;
  uint64_t v96;
  uint64_t (**v97)();
  std::string v98;
  int v99;
  char v100;
  std::string v101;
  std::string v102;
  uint64_t (**v103)();
  std::string v104;
  int v105;
  char v106;
  void (**v107)(mediaplatform::Data *__hidden);
  size_t v108;
  size_t v109;
  const void *v110;
  char v111;
  uint64_t (**v112)();
  std::string v113;
  int v114;
  uint64_t v115;
  uint64_t (**v116)();
  std::string v117;
  int v118;
  char v119;
  std::string v120;
  uint64_t (**v121)();
  std::string v122;
  int v123;
  uint64_t v124;
  uint64_t (**v125)();
  std::string v126;
  int v127;
  char v128;
  std::string v129;
  uint64_t (**v130)();
  std::string v131;
  int v132;
  char v133;
  void (**v134)(mediaplatform::Data *__hidden);
  size_t v135;
  size_t v136;
  const void *v137;
  char v138;
  uint64_t (**v139)();
  std::string v140;
  int v141;
  uint64_t v142;
  uint64_t (**v143)();
  std::string v144;
  int v145;
  char v146;
  std::string v147;
  uint64_t (**v148)();
  std::string v149;
  int v150;
  uint64_t v151;
  uint64_t (**v152)();
  std::string v153;
  int v154;
  char v155;
  void (**v156)(mediaplatform::Data *__hidden);
  size_t v157;
  size_t v158;
  const void *v159;
  char v160;
  uint64_t (**v161)();
  std::string v162;
  int v163;
  uint64_t v164;
  uint64_t (**v165)();
  std::string v166;
  int v167;
  char v168;
  std::string v169;
  uint64_t (**v170)();
  std::string v171;
  int v172;
  char v173;
  void (**v174)(mediaplatform::Data *__hidden);
  size_t v175;
  size_t v176;
  void *v177;
  char v178;
  uint64_t (**v179)();
  std::string v180;
  int v181;
  uint64_t v182;

  std::string::basic_string[abi:ne180100]<0>(&__s, "artwork");
  std::string::basic_string[abi:ne180100]<0>(v67, "artwork_token");
  std::string::basic_string[abi:ne180100]<0>(v65, "");
  mlcore::MediaColumn<std::string>::MediaColumn((uint64_t)v69, (uint64_t)v67, (uint64_t)v65);
  std::string::basic_string[abi:ne180100]<0>(v59, "artwork_source_type");
  mlcore::MediaColumn<int>::MediaColumn((uint64_t)&v61, (uint64_t)v59, 0);
  std::string::basic_string[abi:ne180100]<0>(v52, "relative_path");
  std::string::basic_string[abi:ne180100]<0>(v50, "");
  mlcore::MediaColumn<std::string>::MediaColumn((uint64_t)v54, (uint64_t)v52, (uint64_t)v50);
  std::string::basic_string[abi:ne180100]<0>(v44, "artwork_type");
  mlcore::MediaColumn<int>::MediaColumn((uint64_t)&v46, (uint64_t)v44, 0);
  std::string::basic_string[abi:ne180100]<0>(__p, "interest_data");
  mlcore::MediaColumn<mediaplatform::Data>::MediaColumn((uint64_t)v38, (uint64_t)__p);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v102, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v102 = __s;
  v97 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v98, v70.__r_.__value_.__l.__data_, v70.__r_.__value_.__l.__size_);
  else
    v98 = v70;
  v99 = v71;
  v97 = &off_24C335AB8;
  v100 = v72;
  if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v101, v73.__r_.__value_.__l.__data_, v73.__r_.__value_.__l.__size_);
  else
    v101 = v73;
  if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v94, v62.__r_.__value_.__l.__data_, v62.__r_.__value_.__l.__size_);
  else
    v94 = v62;
  v32 = v63;
  v95 = v63;
  v93 = off_24C335AF8;
  v31 = v64;
  v96 = v64;
  v88 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v89, v55.__r_.__value_.__l.__data_, v55.__r_.__value_.__l.__size_);
  else
    v89 = v55;
  v90 = v56;
  v88 = &off_24C335AB8;
  v91 = v57;
  if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v92, v58.__r_.__value_.__l.__data_, v58.__r_.__value_.__l.__size_);
  else
    v92 = v58;
  if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v85, v47.__r_.__value_.__l.__data_, v47.__r_.__value_.__l.__size_);
  else
    v85 = v47;
  v34 = v48;
  v86 = v48;
  v84 = off_24C335AF8;
  v33 = v49;
  v87 = v49;
  v75 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v76, v39.__r_.__value_.__l.__data_, v39.__r_.__value_.__l.__size_);
  else
    v76 = v39;
  v77 = v40;
  v75 = &off_24C335A98;
  v78 = v41;
  v2 = v43;
  v3 = v42;
  v79 = &off_24C331510;
  v80 = v42;
  v81 = v42;
  if (v42)
    v4 = (void *)operator new[]();
  else
    v4 = 0;
  v82 = v4;
  v83 = 1;
  if (v2)
    memcpy(v4, v2, v3);
  else
    bzero(v4, v3);
  *(_QWORD *)this = &off_24C330F50;
  v5 = (std::string *)((char *)this + 8);
  v6 = SHIBYTE(v102.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v102.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v5, v102.__r_.__value_.__l.__data_, v102.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)&v102.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 3) = *((_QWORD *)&v102.__r_.__value_.__l + 2);
  }
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *(_QWORD *)this = off_24C335398;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  v125 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v126, v98.__r_.__value_.__l.__data_, v98.__r_.__value_.__l.__size_);
  else
    v126 = v98;
  v127 = v99;
  v125 = &off_24C335AB8;
  v128 = v100;
  if (SHIBYTE(v101.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v129, v101.__r_.__value_.__l.__data_, v101.__r_.__value_.__l.__size_);
  else
    v129 = v101;
  v29 = SHIBYTE(v94.__r_.__value_.__r.__words[2]);
  v30 = v6;
  if (SHIBYTE(v94.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v122, v94.__r_.__value_.__l.__data_, v94.__r_.__value_.__l.__size_);
  else
    v122 = v94;
  v123 = v32;
  v121 = off_24C335AF8;
  v124 = v31;
  v116 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v89.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v117, v89.__r_.__value_.__l.__data_, v89.__r_.__value_.__l.__size_);
  else
    v117 = v89;
  v118 = v90;
  v116 = &off_24C335AB8;
  v119 = v91;
  if (SHIBYTE(v92.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v120, v92.__r_.__value_.__l.__data_, v92.__r_.__value_.__l.__size_);
  else
    v120 = v92;
  v28 = SHIBYTE(v85.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v113, v85.__r_.__value_.__l.__data_, v85.__r_.__value_.__l.__size_);
  else
    v113 = v85;
  v114 = v34;
  v112 = off_24C335AF8;
  v115 = v33;
  v103 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v104, v76.__r_.__value_.__l.__data_, v76.__r_.__value_.__l.__size_);
  else
    v104 = v76;
  v105 = v77;
  v103 = &off_24C335A98;
  v106 = v78;
  v7 = v82;
  v8 = v80;
  v107 = &off_24C331510;
  v108 = v80;
  v109 = v80;
  if (v80)
    v9 = (void *)operator new[]();
  else
    v9 = 0;
  v110 = v9;
  v111 = 1;
  if (v7)
    memcpy(v9, v7, v8);
  else
    bzero(v9, v8);
  v10 = SHIBYTE(v122.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v122.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v149, v122.__r_.__value_.__l.__data_, v122.__r_.__value_.__l.__size_);
  else
    v149 = v122;
  v150 = v32;
  v148 = off_24C335AF8;
  v151 = v31;
  v143 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v117.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v144, v117.__r_.__value_.__l.__data_, v117.__r_.__value_.__l.__size_);
  else
    v144 = v117;
  v145 = v118;
  v143 = &off_24C335AB8;
  v146 = v119;
  if (SHIBYTE(v120.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v147, v120.__r_.__value_.__l.__data_, v120.__r_.__value_.__l.__size_);
  else
    v147 = v120;
  v27 = SHIBYTE(v113.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v113.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v140, v113.__r_.__value_.__l.__data_, v113.__r_.__value_.__l.__size_);
  else
    v140 = v113;
  v141 = v34;
  v139 = off_24C335AF8;
  v142 = v33;
  v130 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v131, v104.__r_.__value_.__l.__data_, v104.__r_.__value_.__l.__size_);
  else
    v131 = v104;
  v132 = v105;
  v130 = &off_24C335A98;
  v133 = v106;
  v11 = v110;
  v12 = v108;
  v134 = &off_24C331510;
  v135 = v108;
  v136 = v108;
  if (v108)
    v13 = (void *)operator new[]();
  else
    v13 = 0;
  v137 = v13;
  v138 = 1;
  if (v11)
    memcpy(v13, v11, v12);
  else
    bzero(v13, v12);
  v165 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v144.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v166, v144.__r_.__value_.__l.__data_, v144.__r_.__value_.__l.__size_);
  else
    v166 = v144;
  v167 = v145;
  v165 = &off_24C335AB8;
  v168 = v146;
  if (SHIBYTE(v147.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v169, v147.__r_.__value_.__l.__data_, v147.__r_.__value_.__l.__size_);
  else
    v169 = v147;
  v14 = SHIBYTE(v140.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v162, v140.__r_.__value_.__l.__data_, v140.__r_.__value_.__l.__size_);
  else
    v162 = v140;
  v163 = v34;
  v161 = off_24C335AF8;
  v164 = v33;
  v152 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v153, v131.__r_.__value_.__l.__data_, v131.__r_.__value_.__l.__size_);
  else
    v153 = v131;
  v154 = v132;
  v152 = &off_24C335A98;
  v155 = v133;
  v15 = v137;
  v16 = v135;
  v156 = &off_24C331510;
  v157 = v135;
  v158 = v135;
  if (v135)
    v17 = (void *)operator new[]();
  else
    v17 = 0;
  v159 = v17;
  v160 = 1;
  if (v15)
    memcpy(v17, v15, v16);
  else
    bzero(v17, v16);
  v18 = SHIBYTE(v162.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v162.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v180, v162.__r_.__value_.__l.__data_, v162.__r_.__value_.__l.__size_);
  else
    v180 = v162;
  v181 = v34;
  v179 = off_24C335AF8;
  v182 = v33;
  v170 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v153.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v171, v153.__r_.__value_.__l.__data_, v153.__r_.__value_.__l.__size_);
  else
    v171 = v153;
  v172 = v154;
  v170 = &off_24C335A98;
  v173 = v155;
  v19 = v159;
  v20 = v157;
  v174 = &off_24C331510;
  v175 = v157;
  v176 = v157;
  if (v157)
    v21 = (void *)operator new[]();
  else
    v21 = 0;
  v177 = v21;
  v178 = 1;
  if (v19)
    memcpy(v21, v19, v20);
  else
    bzero(v21, v20);
  mediaplatform::DatabaseColumnTuple<3ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<mediaplatform::Data>>::DatabaseColumnTuple((uint64_t)this + 80, (uint64_t)&v179, (uint64_t)&v170);
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)&v170);
  if (SHIBYTE(v180.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v180.__r_.__value_.__l.__data_);
  *((_QWORD *)this + 26) = off_24C335D90;
  if (SHIBYTE(v166.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)this + 9, v166.__r_.__value_.__l.__data_, v166.__r_.__value_.__l.__size_);
  else
    *((std::string *)this + 9) = v166;
  *((_DWORD *)this + 60) = v167;
  *((_QWORD *)this + 26) = &off_24C335AB8;
  *((_BYTE *)this + 244) = v168;
  v22 = (std::string *)((char *)this + 248);
  if (SHIBYTE(v169.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v22, v169.__r_.__value_.__l.__data_, v169.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v22->__r_.__value_.__l.__data_ = *(_OWORD *)&v169.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 33) = *((_QWORD *)&v169.__r_.__value_.__l + 2);
  }
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)&v152);
  if (v18 < 0)
    operator delete(v162.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v165);
  *((_QWORD *)this + 34) = off_24C335D90;
  v23 = (std::string *)((char *)this + 280);
  v24 = SHIBYTE(v149.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v149.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v23, v149.__r_.__value_.__l.__data_, v149.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v23->__r_.__value_.__l.__data_ = *(_OWORD *)&v149.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 37) = *((_QWORD *)&v149.__r_.__value_.__l + 2);
  }
  *((_DWORD *)this + 76) = v32;
  *((_QWORD *)this + 34) = off_24C335AF8;
  *(_QWORD *)((char *)this + 308) = v31;
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)&v130);
  v139 = (uint64_t (**)())off_24C335D90;
  if (v14 < 0)
    operator delete(v140.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v143);
  if (v24 < 0)
    operator delete(v149.__r_.__value_.__l.__data_);
  *((_QWORD *)this + 40) = off_24C335D90;
  if (SHIBYTE(v126.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 328), v126.__r_.__value_.__l.__data_, v126.__r_.__value_.__l.__size_);
  else
    *(std::string *)((char *)this + 328) = v126;
  *((_DWORD *)this + 88) = v127;
  *((_QWORD *)this + 40) = &off_24C335AB8;
  *((_BYTE *)this + 356) = v128;
  v25 = (std::string *)((char *)this + 360);
  if (SHIBYTE(v129.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v25, v129.__r_.__value_.__l.__data_, v129.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v25->__r_.__value_.__l.__data_ = *(_OWORD *)&v129.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 47) = *((_QWORD *)&v129.__r_.__value_.__l + 2);
  }
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)&v103);
  if (v27 < 0)
    operator delete(v113.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v116);
  if (v10 < 0)
    operator delete(v122.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v125);
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)&v75);
  v84 = (uint64_t (**)())off_24C335D90;
  if (v28 < 0)
    operator delete(v85.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v88);
  v93 = (uint64_t (**)())off_24C335D90;
  if (v29 < 0)
    operator delete(v94.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v97);
  if (v30 < 0)
    operator delete(v102.__r_.__value_.__l.__data_);
  *(_QWORD *)this = &off_24C335F00;
  std::__tuple_leaf<0ul,mlcore::MediaColumn<std::string>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<std::string>&,void>((uint64_t)this + 384, (uint64_t)v69);
  *((_QWORD *)this + 56) = off_24C335D90;
  if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)this + 19, v62.__r_.__value_.__l.__data_, v62.__r_.__value_.__l.__size_);
  else
    *((std::string *)this + 19) = v62;
  *((_DWORD *)this + 120) = v63;
  *(_QWORD *)((char *)this + 484) = v64;
  *((_QWORD *)this + 56) = off_24C336AA0;
  std::__tuple_leaf<2ul,mlcore::MediaColumn<std::string>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<std::string>&,void>((uint64_t)this + 496, (uint64_t)v54);
  *((_QWORD *)this + 70) = off_24C335D90;
  if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 568), v47.__r_.__value_.__l.__data_, v47.__r_.__value_.__l.__size_);
  else
    *(std::string *)((char *)this + 568) = v47;
  *((_DWORD *)this + 148) = v48;
  *(_QWORD *)((char *)this + 596) = v49;
  *((_QWORD *)this + 70) = off_24C336AA0;
  std::__tuple_leaf<4ul,mlcore::MediaColumn<mediaplatform::Data>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<mediaplatform::Data>&,void>((uint64_t)this + 608, (uint64_t)v38);
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)v38);
  if (v37 < 0)
    operator delete(__p[0]);
  v46 = off_24C335D90;
  if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v47.__r_.__value_.__l.__data_);
  if (v45 < 0)
    operator delete(v44[0]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)v54);
  if (v51 < 0)
    operator delete(v50[0]);
  if (v53 < 0)
    operator delete(v52[0]);
  v61 = off_24C335D90;
  if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v62.__r_.__value_.__l.__data_);
  if (v60 < 0)
    operator delete(v59[0]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)v69);
  if (v66 < 0)
    operator delete(v65[0]);
  if (v68 < 0)
    operator delete(v67[0]);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__s.__r_.__value_.__l.__data_);
  *(_QWORD *)this = &off_24C336C98;
  std::string::basic_string[abi:ne180100]<0>(&__str, "UNIQUE (artwork_token, artwork_source_type)");
  std::string::operator=((std::string *)((char *)this + 56), &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  return this;
}

void sub_20A8C5A9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,int a43,__int16 a44,char a45,char a46,void (**a47)(mediaplatform::DatabaseColumnBase *__hidden this),void *a48,uint64_t a49,int a50,__int16 a51,char a52,char a53,uint64_t a54,uint64_t a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,void *a62,uint64_t a63)
{
  char a67;
  char a68;
  void *a72;
  char a73;
  void (**a74)(mediaplatform::DatabaseColumnBase *__hidden);
  void *a75;
  char a76;
  void *a77;
  char a78;
  uint64_t v78;
  uint64_t v79;
  void **v80;
  uint64_t v81;

  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(v81);
  *(_QWORD *)(v78 + 448) = off_24C335D90;
  if (*(char *)(v78 + 479) < 0)
    operator delete(*v80);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(v79);
  mediaplatform::DatabaseTable<std::string,int,std::string,int,mediaplatform::Data>::~DatabaseTable(v78);
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)&a31);
  if (a30 < 0)
    operator delete(__p);
  a47 = off_24C335D90;
  if (a53 < 0)
    operator delete(a48);
  if (a46 < 0)
    operator delete(a41);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&a68);
  if (a61 < 0)
    operator delete(a56);
  if (a67 < 0)
    operator delete(a62);
  a74 = off_24C335D90;
  if (a76 < 0)
    operator delete(a75);
  if (a73 < 0)
    operator delete(a72);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&STACK[0x218]);
  if (a78 < 0)
    operator delete(a77);
  if (SLOBYTE(STACK[0x217]) < 0)
    operator delete((void *)STACK[0x200]);
  if (SLOBYTE(STACK[0x26F]) < 0)
    operator delete((void *)STACK[0x258]);
  _Unwind_Resume(a1);
}

void sub_20A8C5F80()
{
  JUMPOUT(0x20A8C5EB0);
}

void sub_20A8C5F88()
{
  JUMPOUT(0x20A8C5EC0);
}

void sub_20A8C5F90()
{
  JUMPOUT(0x20A8C5EDCLL);
}

void sub_20A8C5F98()
{
  JUMPOUT(0x20A8C5EECLL);
}

void sub_20A8C5FA0()
{
  JUMPOUT(0x20A8C5EF4);
}

void sub_20A8C5FA8()
{
  JUMPOUT(0x20A8C5F04);
}

void sub_20A8C5FB0()
{
  JUMPOUT(0x20A8C5F14);
}

void sub_20A8C5FB8()
{
  JUMPOUT(0x20A8C5F30);
}

void sub_20A8C5FC0()
{
  JUMPOUT(0x20A8C5F40);
}

void sub_20A8C5FC8()
{
  JUMPOUT(0x20A8C5F48);
}

void sub_20A8C5FD0()
{
  JUMPOUT(0x20A8C5F58);
}

void sub_20A8C5FD8()
{
  JUMPOUT(0x20A8C5F68);
}

void mlcore::MediaTable<std::string,int,std::string,int,mediaplatform::Data>::~MediaTable(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = &off_24C335F00;
  v2 = a1 + 384;
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn(a1 + 608);
  *(_QWORD *)(a1 + 560) = off_24C335D90;
  if (*(char *)(a1 + 591) < 0)
    operator delete(*(void **)(a1 + 568));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 496);
  *(_QWORD *)(a1 + 448) = off_24C335D90;
  if (*(char *)(a1 + 479) < 0)
    operator delete(*(void **)(a1 + 456));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(v2);
  *(_QWORD *)a1 = off_24C335398;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 320);
  *(_QWORD *)(a1 + 272) = off_24C335D90;
  if (*(char *)(a1 + 303) < 0)
    operator delete(*(void **)(a1 + 280));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 208);
  *(_QWORD *)(a1 + 160) = off_24C335D90;
  if (*(char *)(a1 + 191) < 0)
    operator delete(*(void **)(a1 + 168));
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn(a1 + 80);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
}

{
  mlcore::MediaTable<std::string,int,std::string,int,mediaplatform::Data>::~MediaTable(a1);
  JUMPOUT(0x20BD27AFCLL);
}

void mediaplatform::DatabaseTable<std::string,int,std::string,int,mediaplatform::Data>::~DatabaseTable(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = off_24C335398;
  v2 = a1 + 80;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 320);
  *(_QWORD *)(a1 + 272) = off_24C335D90;
  if (*(char *)(a1 + 303) < 0)
    operator delete(*(void **)(a1 + 280));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 208);
  *(_QWORD *)(a1 + 160) = off_24C335D90;
  if (*(char *)(a1 + 191) < 0)
    operator delete(*(void **)(a1 + 168));
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn(v2);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
}

{
  uint64_t v2;

  *(_QWORD *)a1 = off_24C335398;
  v2 = a1 + 80;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 320);
  *(_QWORD *)(a1 + 272) = off_24C335D90;
  if (*(char *)(a1 + 303) < 0)
    operator delete(*(void **)(a1 + 280));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 208);
  *(_QWORD *)(a1 + 160) = off_24C335D90;
  if (*(char *)(a1 + 191) < 0)
    operator delete(*(void **)(a1 + 168));
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn(v2);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
  JUMPOUT(0x20BD27AFCLL);
}

{
  uint64_t v2;

  *(_QWORD *)a1 = off_24C335398;
  v2 = a1 + 80;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 320);
  *(_QWORD *)(a1 + 272) = off_24C335D90;
  if (*(char *)(a1 + 303) < 0)
    operator delete(*(void **)(a1 + 280));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 208);
  *(_QWORD *)(a1 + 160) = off_24C335D90;
  if (*(char *)(a1 + 191) < 0)
    operator delete(*(void **)(a1 + 168));
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn(v2);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
}

uint64_t mediaplatform::DatabaseTable<std::string,int,std::string,int,mediaplatform::Data>::columnCount()
{
  return 5;
}

void mediaplatform::DatabaseTable<std::string,int,std::string,int,mediaplatform::Data>::columnNames(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 320);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 272);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 208);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 160);
  mediaplatform::ColumnNamesApplier::operator()<mediaplatform::Data>((uint64_t)a2, a1 + 80);
}

void sub_20A8C6268(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void mediaplatform::DatabaseTable<std::string,int,std::string,int,mediaplatform::Data>::targetColumnExpression(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __int128 *v3;
  __int128 *v4[3];
  __int128 **v5;

  v3 = (__int128 *)(a1 + 8);
  (*(void (**)(__int128 **__return_ptr))(*(_QWORD *)a1 + 24))(v4);
  std::allocate_shared[abi:ne180100]<mediaplatform::SQLColumnNameExpression,std::allocator<mediaplatform::SQLColumnNameExpression>,std::string &,std::string const&,void>(a2, v4[0], v3);
  v5 = v4;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v5);
}

void sub_20A8C62E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void mlcore::ArtworkTable::~ArtworkTable(mlcore::ArtworkTable *this)
{
  mlcore::MediaTable<std::string,int,std::string,int,mediaplatform::Data>::~MediaTable((uint64_t)this);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mediaplatform::DatabaseColumnTuple<1ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<mediaplatform::Data>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 192) = off_24C335D90;
  if (*(char *)(a1 + 223) < 0)
    operator delete(*(void **)(a1 + 200));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 128);
  *(_QWORD *)(a1 + 80) = off_24C335D90;
  if (*(char *)(a1 + 111) < 0)
    operator delete(*(void **)(a1 + 88));
  return mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<2ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<mediaplatform::Data>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 128);
  *(_QWORD *)(a1 + 80) = off_24C335D90;
  if (*(char *)(a1 + 111) < 0)
    operator delete(*(void **)(a1 + 88));
  return mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn(a1);
}

void mlcore::ArtworkTable::artworkTokenColumn(mlcore::ArtworkTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 415) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 49), *((_QWORD *)this + 50));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 392);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 51);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 104);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 420);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 447) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 53), *((_QWORD *)this + 54));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 424);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 55);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8C6530(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ArtworkTable::artworkSourceTypeColumn(mlcore::ArtworkTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 479) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 57), *((_QWORD *)this + 58));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 456);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 59);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 120);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 484);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ArtworkTable::relativePathColumn(mlcore::ArtworkTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 527) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 63), *((_QWORD *)this + 64));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 504);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 65);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 132);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 532);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 559) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 67), *((_QWORD *)this + 68));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 536);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 69);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8C6684(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ArtworkTable::artworkTypeColumn(mlcore::ArtworkTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 591) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 71), *((_QWORD *)this + 72));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 568);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 73);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 148);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 596);
  *(_QWORD *)a2 = off_24C336AA0;
}

mediaplatform::Data *mlcore::ArtworkTable::interestDataColumn@<X0>(mlcore::ArtworkTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  mediaplatform::Data *result;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 639) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 77), *((_QWORD *)this + 78));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 616);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 79);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 160);
  *(_QWORD *)a2 = &off_24C335A98;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 644);
  result = mediaplatform::Data::Data((mediaplatform::Data *)(a2 + 40), (mlcore::ArtworkTable *)((char *)this + 648));
  *(_QWORD *)a2 = &off_24C336A40;
  return result;
}

void sub_20A8C67BC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

uint64_t mlcore::Library::identifier(mlcore::Library *this)
{
  return (uint64_t)this + 8;
}

void std::__shared_ptr_emplace<mlcore::DeviceLibrary>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33C750;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mlcore::DeviceLibrary>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33C750;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t std::__shared_ptr_emplace<mlcore::DeviceLibrary>::__on_zero_shared(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 8))(a1 + 24);
}

uint64_t mlcore::Library::contentBundle(mlcore::Library *this)
{
  return (uint64_t)this + 32;
}

void mlcore::BestArtworkToken::~BestArtworkToken(mlcore::BestArtworkToken *this)
{
  *(_QWORD *)this = off_24C33A860;
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase((_QWORD *)this + 1);
}

{
  *(_QWORD *)this = off_24C33A860;
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase((_QWORD *)this + 1);
  JUMPOUT(0x20BD27AFCLL);
}

double std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::TypedEntityClass<mlcore::BestArtworkToken>::sharedPointer(void)::{lambda(void)#1} &&>>()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_QWORD *)(v0 + 96) = 0;
  *(_DWORD *)(v0 + 104) = 1065353216;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_DWORD *)(v0 + 144) = 1065353216;
  *(_QWORD *)v0 = &off_24C338900;
  *(_QWORD *)(v0 + 8) = 850045863;
  mlcore::TypedEntityClass<mlcore::BestArtworkToken>::sharedPointer(void)::__sharedPointer = v0;
  return result;
}

void mlcore::TypedEntityClass<mlcore::BestArtworkToken>::~TypedEntityClass(mlcore::EntityClass *a1)
{
  mlcore::EntityClass::~EntityClass(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mlcore::TypedEntityClass<mlcore::BestArtworkToken>::description(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1);
}

__n128 mlcore::TypedEntityClass<mlcore::BestArtworkToken>::create@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, __n128 *a4@<X8>)
{
  char *v8;
  uint64_t v9;
  unint64_t *v10;
  uint64_t v11;
  __n128 result;
  __n128 v13;
  unint64_t v14[3];
  unint64_t *v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v8 = (char *)operator new(0x100uLL);
  *((_QWORD *)v8 + 1) = 0;
  *((_QWORD *)v8 + 2) = 0;
  *(_QWORD *)v8 = &off_24C33CBE8;
  *(_OWORD *)(v8 + 40) = 0u;
  *(_OWORD *)(v8 + 56) = 0u;
  *((_DWORD *)v8 + 18) = 1065353216;
  *((_OWORD *)v8 + 5) = 0u;
  *((_OWORD *)v8 + 6) = 0u;
  *((_DWORD *)v8 + 28) = 1065353216;
  *(_OWORD *)(v8 + 120) = 0u;
  *(_OWORD *)(v8 + 136) = 0u;
  *((_DWORD *)v8 + 38) = 1065353216;
  *((_OWORD *)v8 + 10) = 0u;
  *((_OWORD *)v8 + 11) = 0u;
  *((_DWORD *)v8 + 48) = 1065353216;
  *(_OWORD *)(v8 + 216) = 0u;
  *((_DWORD *)v8 + 58) = 1065353216;
  *((_QWORD *)v8 + 30) = &unk_24C3371E8;
  *((_QWORD *)v8 + 31) = a2;
  *(_OWORD *)(v8 + 200) = 0u;
  v9 = (uint64_t)(v8 + 200);
  *((_QWORD *)v8 + 4) = &off_24C3371C0;
  *((_QWORD *)v8 + 3) = &off_24C3381E0;
  v13.n128_u64[0] = (unint64_t)(v8 + 24);
  v13.n128_u64[1] = (unint64_t)v8;
  v14[0] = (unint64_t)&off_24C33B140;
  v15 = v14;
  mlcore::PropertyCache::mergePropertiesFromCache((uint64_t)(v8 + 32), a3, (uint64_t)v14);
  v10 = v15;
  if (v15 == v14)
  {
    v11 = 4;
    v10 = v14;
    goto LABEL_5;
  }
  if (v15)
  {
    v11 = 5;
LABEL_5:
    (*(void (**)(void))(*v10 + 8 * v11))();
  }
  v14[0] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 112))(a1);
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>(v9, v14[0], v14)[3] = a2;
  result = v13;
  *a4 = v13;
  return result;
}

void sub_20A8C6AC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char *a15)
{
  char *v15;
  char *v17;
  uint64_t v18;

  v17 = a15;
  if (a15 == v15)
  {
    v18 = 4;
    v17 = &a12;
  }
  else
  {
    if (!a15)
      goto LABEL_6;
    v18 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v17 + 8 * v18))();
LABEL_6:
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t mlcore::TypedEntityClass<mlcore::BestArtworkToken>::name(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
}

uint64_t mlcore::TypedEntityClass<mlcore::BestArtworkToken>::entityType()
{
  return 0xFFFFFFFFLL;
}

BOOL mlcore::TypedEntityClass<mlcore::BestArtworkToken>::isRevisionTrackable(uint64_t a1)
{
  return (*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 64))(a1) != -1;
}

uint64_t mlcore::TypedEntityClass<mlcore::BestArtworkToken>::isCloudUpdatable()
{
  return 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::BestArtworkToken>::databaseTable()
{
  return *(_QWORD *)mediaplatform::Singleton<mlcore::BestArtworkTokenTable>::sharedInstance();
}

void mlcore::TypedEntityClass<mlcore::BestArtworkToken>::databaseTablesToDeleteFrom(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

void mlcore::TypedEntityClass<mlcore::BestArtworkToken>::databaseTablesToInsertInto(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::BestArtworkToken>::persistentIDProperty()
{
  return 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::BestArtworkToken>::representativeItemPersistentIDProperty()
{
  return 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::BestArtworkToken>::trackForeignPersistentIDProperty()
{
  return 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::BestArtworkToken>::trackForeignOrderingProperty()
{
  return 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::BestArtworkToken>::sectionPropertyForOrderingProperty()
{
  return 0;
}

mlcore::BestArtworkTokenTable *_ZNSt3__115allocate_sharedB8ne180100IN6mlcore21BestArtworkTokenTableENS_9allocatorIS2_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(mlcore::BestArtworkTokenTable **a1)
{
  _QWORD *v2;
  mlcore::BestArtworkTokenTable *result;

  v2 = operator new(0x2E8uLL);
  v2[1] = 0;
  v2[2] = 0;
  *v2 = &off_24C33CFD8;
  result = mlcore::BestArtworkTokenTable::BestArtworkTokenTable((mlcore::BestArtworkTokenTable *)(v2 + 3));
  *a1 = result;
  a1[1] = (mlcore::BestArtworkTokenTable *)v2;
  return result;
}

void sub_20A8C6BE0(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<mlcore::BestArtworkTokenTable>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33CFD8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mlcore::BestArtworkTokenTable>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33CFD8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t std::__shared_ptr_emplace<mlcore::BestArtworkTokenTable>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void std::__shared_ptr_emplace<mlcore::BestArtworkToken>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33CBE8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mlcore::BestArtworkToken>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33CBE8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t std::__shared_ptr_emplace<mlcore::BestArtworkToken>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t mlcore::BestArtworkTokenPropertyEntityPersistentID(mlcore *this)
{
  unint64_t v1;
  char v3;
  char **v4;
  char *v5;

  v1 = atomic_load(&mlcore::BestArtworkTokenPropertyEntityPersistentID(void)::once);
  if (v1 != -1)
  {
    v5 = &v3;
    v4 = &v5;
    std::__call_once(&mlcore::BestArtworkTokenPropertyEntityPersistentID(void)::once, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::BestArtworkTokenPropertyEntityPersistentID(void)::$_0 &&>>);
  }
  return mlcore::BestArtworkTokenPropertyEntityPersistentID(void)::property;
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::BestArtworkTokenPropertyEntityPersistentID(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::BestArtworkTokenTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __p;
  char v23;
  _QWORD v24[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::BestArtworkTokenTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v24[0] = *v1;
  v24[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::BestArtworkTokenTable **)mediaplatform::Singleton<mlcore::BestArtworkTokenTable>::sharedInstance();
  mlcore::BestArtworkTokenTable::entityPersistentIDColumn(*v5, (uint64_t)&__p);
  mlcore::DatabaseModelProperty<long long>::DatabaseModelProperty(v0, v24, (uint64_t)&__p);
  mlcore::BestArtworkTokenPropertyEntityPersistentID(void)::property = v0;
  if (v23 < 0)
    operator delete((void *)__p.__r_.__value_.__l.__size_);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::BestArtworkTokenPropertyEntityPersistentID(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  std::string::operator=((std::string *)(v8 + 40), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::BestArtworkToken>::sharedPointer();
  v10 = mlcore::BestArtworkTokenPropertyEntityPersistentID(void)::property;
  v11 = mediaplatform::Singleton<mlcore::BestArtworkTokenTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "entityPersistentID");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A8C6EC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, void *a17, int a18, __int16 a19, char a20,char a21,int a22,__int16 a23,char a24,char a25)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::BestArtworkTokenPropertyEntityType(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::BestArtworkTokenTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __p;
  char v23;
  _QWORD v24[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::BestArtworkTokenTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v24[0] = *v1;
  v24[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::BestArtworkTokenTable **)mediaplatform::Singleton<mlcore::BestArtworkTokenTable>::sharedInstance();
  mlcore::BestArtworkTokenTable::entityTypeColumn(*v5, (uint64_t)&__p);
  mlcore::DatabaseModelProperty<int>::DatabaseModelProperty(v0, v24, (uint64_t)&__p);
  mlcore::BestArtworkTokenPropertyEntityType(void)::property = v0;
  if (v23 < 0)
    operator delete((void *)__p.__r_.__value_.__l.__size_);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::BestArtworkTokenPropertyEntityType(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  std::string::operator=((std::string *)(v8 + 40), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::BestArtworkToken>::sharedPointer();
  v10 = mlcore::BestArtworkTokenPropertyEntityType(void)::property;
  v11 = mediaplatform::Singleton<mlcore::BestArtworkTokenTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "entityType");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A8C7158(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, void *a17, int a18, __int16 a19, char a20,char a21,int a22,__int16 a23,char a24,char a25)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::BestArtworkTokenPropertyArtworkType(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::BestArtworkTokenTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __p;
  char v23;
  _QWORD v24[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::BestArtworkTokenTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v24[0] = *v1;
  v24[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::BestArtworkTokenTable **)mediaplatform::Singleton<mlcore::BestArtworkTokenTable>::sharedInstance();
  mlcore::BestArtworkTokenTable::artworkTypeColumn(*v5, (uint64_t)&__p);
  mlcore::DatabaseModelProperty<int>::DatabaseModelProperty(v0, v24, (uint64_t)&__p);
  mlcore::BestArtworkTokenPropertyArtworkType(void)::property = v0;
  if (v23 < 0)
    operator delete((void *)__p.__r_.__value_.__l.__size_);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::BestArtworkTokenPropertyArtworkType(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  std::string::operator=((std::string *)(v8 + 40), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::BestArtworkToken>::sharedPointer();
  v10 = mlcore::BestArtworkTokenPropertyArtworkType(void)::property;
  v11 = mediaplatform::Singleton<mlcore::BestArtworkTokenTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "artworkType");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A8C73E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, void *a17, int a18, __int16 a19, char a20,char a21,int a22,__int16 a23,char a24,char a25)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::BestArtworkTokenPropertyAvailableArtworkToken(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::BestArtworkTokenTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __str;
  _QWORD v23[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::BestArtworkTokenTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v23[0] = *v1;
  v23[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::BestArtworkTokenTable **)mediaplatform::Singleton<mlcore::BestArtworkTokenTable>::sharedInstance();
  mlcore::BestArtworkTokenTable::availableArtworkTokenColumn(*v5, (uint64_t)&__str);
  mlcore::DatabaseModelProperty<std::string>::DatabaseModelProperty(v0, v23, (uint64_t)&__str);
  mlcore::BestArtworkTokenPropertyAvailableArtworkToken(void)::property = v0;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&__str);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::BestArtworkTokenPropertyAvailableArtworkToken(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__str, "");
  std::string::operator=((std::string *)(v8 + 40), &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::BestArtworkToken>::sharedPointer();
  v10 = mlcore::BestArtworkTokenPropertyAvailableArtworkToken(void)::property;
  v11 = mediaplatform::Singleton<mlcore::BestArtworkTokenTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "availableArtworkToken");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __str.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A8C7670(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::BestArtworkTokenPropertyFetchableArtworkToken(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::BestArtworkTokenTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __str;
  _QWORD v23[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::BestArtworkTokenTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v23[0] = *v1;
  v23[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::BestArtworkTokenTable **)mediaplatform::Singleton<mlcore::BestArtworkTokenTable>::sharedInstance();
  mlcore::BestArtworkTokenTable::fetchableArtworkTokenColumn(*v5, (uint64_t)&__str);
  mlcore::DatabaseModelProperty<std::string>::DatabaseModelProperty(v0, v23, (uint64_t)&__str);
  mlcore::BestArtworkTokenPropertyFetchableArtworkToken(void)::property = v0;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&__str);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::BestArtworkTokenPropertyFetchableArtworkToken(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__str, "");
  std::string::operator=((std::string *)(v8 + 40), &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::BestArtworkToken>::sharedPointer();
  v10 = mlcore::BestArtworkTokenPropertyFetchableArtworkToken(void)::property;
  v11 = mediaplatform::Singleton<mlcore::BestArtworkTokenTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "fetchableArtworkToken");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __str.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A8C78F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::BestArtworkTokenPropertyFetchableArtworkSourceType(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::BestArtworkTokenTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __p;
  char v23;
  _QWORD v24[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::BestArtworkTokenTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v24[0] = *v1;
  v24[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::BestArtworkTokenTable **)mediaplatform::Singleton<mlcore::BestArtworkTokenTable>::sharedInstance();
  mlcore::BestArtworkTokenTable::fetchableArtworkSourceTypeColumn(*v5, (uint64_t)&__p);
  mlcore::DatabaseModelProperty<int>::DatabaseModelProperty(v0, v24, (uint64_t)&__p);
  mlcore::BestArtworkTokenPropertyFetchableArtworkSourceType(void)::property = v0;
  if (v23 < 0)
    operator delete((void *)__p.__r_.__value_.__l.__size_);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::BestArtworkTokenPropertyFetchableArtworkSourceType(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  std::string::operator=((std::string *)(v8 + 40), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::BestArtworkToken>::sharedPointer();
  v10 = mlcore::BestArtworkTokenPropertyFetchableArtworkSourceType(void)::property;
  v11 = mediaplatform::Singleton<mlcore::BestArtworkTokenTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "fetchableArtworkSourceType");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A8C7B78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, void *a17, int a18, __int16 a19, char a20,char a21,int a22,__int16 a23,char a24,char a25)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t mlcore::BestArtworkToken::entityPersistentID(mlcore::BestArtworkToken *this)
{
  unint64_t v2;

  v2 = mlcore::BestArtworkTokenPropertyEntityPersistentID(this);
  return mlcore::Entity::valueForProperty<long long>((uint64_t)this, v2);
}

_QWORD *mlcore::BestArtworkToken::setEntityPersistentID(mlcore::BestArtworkToken *this, uint64_t a2)
{
  _QWORD *result;
  unint64_t v5;

  v5 = mlcore::BestArtworkTokenPropertyEntityPersistentID(this);
  result = std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>((uint64_t)this + 176, v5, &v5);
  result[3] = a2;
  return result;
}

uint64_t mlcore::BestArtworkToken::entityType(mlcore::BestArtworkToken *this)
{
  unint64_t v2;

  v2 = mlcore::BestArtworkTokenPropertyEntityType(this);
  return mlcore::Entity::valueForProperty<int>((uint64_t)this, v2);
}

_QWORD *mlcore::BestArtworkToken::setEntityType(mlcore::BestArtworkToken *this, int a2)
{
  _QWORD *result;
  unint64_t v5;

  v5 = mlcore::BestArtworkTokenPropertyEntityType(this);
  result = std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::__emplace_unique_key_args<mlcore::ModelProperty<int> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<int> * const&>,std::tuple<>>((uint64_t)this + 136, v5, &v5);
  *((_DWORD *)result + 6) = a2;
  return result;
}

uint64_t mlcore::BestArtworkToken::artworkType(mlcore::BestArtworkToken *this)
{
  unint64_t v2;

  v2 = mlcore::BestArtworkTokenPropertyArtworkType(this);
  return mlcore::Entity::valueForProperty<int>((uint64_t)this, v2);
}

_QWORD *mlcore::BestArtworkToken::setArtworkType(mlcore *a1, int a2)
{
  _QWORD *result;
  unint64_t v5;

  v5 = mlcore::BestArtworkTokenPropertyArtworkType(a1);
  result = std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::__emplace_unique_key_args<mlcore::ModelProperty<int> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<int> * const&>,std::tuple<>>((uint64_t)a1 + 136, v5, &v5);
  *((_DWORD *)result + 6) = a2;
  return result;
}

void mlcore::BestArtworkToken::availableArtworkToken(mlcore::BestArtworkToken *this@<X0>, std::string *a2@<X8>)
{
  unint64_t v4;

  v4 = mlcore::BestArtworkTokenPropertyAvailableArtworkToken(this);
  mlcore::Entity::valueForProperty<std::string>(a2, (uint64_t)this, v4);
}

void mlcore::BestArtworkToken::setAvailableArtworkToken(mlcore *a1, uint64_t a2)
{
  std::string::size_type v4;

  v4 = mlcore::BestArtworkTokenPropertyAvailableArtworkToken(a1);
  mlcore::Entity::setValueForProperty<std::string>((uint64_t)a1, a2, v4);
}

void mlcore::BestArtworkToken::fetchableArtworkToken(mlcore::BestArtworkToken *this@<X0>, std::string *a2@<X8>)
{
  unint64_t v4;

  v4 = mlcore::BestArtworkTokenPropertyFetchableArtworkToken(this);
  mlcore::Entity::valueForProperty<std::string>(a2, (uint64_t)this, v4);
}

void mlcore::BestArtworkToken::setFetchableArtworkToken(mlcore *a1, uint64_t a2)
{
  std::string::size_type v4;

  v4 = mlcore::BestArtworkTokenPropertyFetchableArtworkToken(a1);
  mlcore::Entity::setValueForProperty<std::string>((uint64_t)a1, a2, v4);
}

uint64_t mlcore::BestArtworkToken::fetchableArtworkSourceType(mlcore::BestArtworkToken *this)
{
  unint64_t v2;

  v2 = mlcore::BestArtworkTokenPropertyFetchableArtworkSourceType(this);
  return mlcore::Entity::valueForProperty<int>((uint64_t)this, v2);
}

_QWORD *mlcore::BestArtworkToken::setFetchableArtworkSourceType(mlcore *a1, int a2)
{
  _QWORD *result;
  unint64_t v5;

  v5 = mlcore::BestArtworkTokenPropertyFetchableArtworkSourceType(a1);
  result = std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::__emplace_unique_key_args<mlcore::ModelProperty<int> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<int> * const&>,std::tuple<>>((uint64_t)a1 + 136, v5, &v5);
  *((_DWORD *)result + 6) = a2;
  return result;
}

mlcore::LocalizedSectionsInfo *mlcore::LocalizedSectionsInfo::LocalizedSectionsInfo(mlcore::LocalizedSectionsInfo *this, const mediaplatform::FilePath *a2)
{
  const void *v3;
  CFTypeID TypeID;
  CFIndex Count;
  CFIndex v6;
  const __CFAllocator *v7;
  void *ValueAtIndex;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  _BOOL4 v22;
  _BOOL4 v23;
  void *v24;
  uint64_t i;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64x2_t v41;
  unint64_t v42;
  _BOOL4 v43;
  _BOOL4 v44;
  void *v45;
  _BOOL4 v46;
  _BOOL4 v47;
  void *v48;
  void *v49;
  std::logic_error *exception;
  char *v52;
  void *v53;
  void *v54[2];
  char v55;
  CFArrayRef theArray[3];
  void *__p[4];
  _OWORD *v58;
  void *v59[2];
  __int128 v60;
  int v61;
  _OWORD v62[2];
  void (**v63)(mediaplatform::PropertyList *__hidden);
  const void *v64;
  const void *v65;
  _BYTE v66[24];
  unint64_t v67;
  char *v68;

  *((_OWORD *)this + 3) = 0u;
  v52 = (char *)this + 48;
  *((_QWORD *)this + 8) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  if (*((_QWORD *)a2 + 2) == *((_QWORD *)a2 + 1))
    return this;
  mediaplatform::PropertyList::PropertyList((mediaplatform::PropertyList *)&v63, a2);
  std::string::basic_string[abi:ne180100]<0>(v66, "SectionHeaders");
  mediaplatform::PropertyList::_cfValueForKey((uint64_t)&v63, (uint64_t)v66, __p);
  v3 = __p[0];
  TypeID = CFArrayGetTypeID();
  if (!v3 || CFGetTypeID(v3) != TypeID)
  {
    theArray[0] = 0;
    mediaplatform::CFRetainedPointer<void const*>::~CFRetainedPointer((const void **)__p);
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "not an array");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C32FBD0, MEMORY[0x24BEDAB88]);
  }
  CFRetain(v3);
  theArray[0] = (CFArrayRef)v3;
  mediaplatform::CFRetainedPointer<void const*>::~CFRetainedPointer((const void **)__p);
  memset(v62, 0, 24);
  Count = CFArrayGetCount((CFArrayRef)v3);
  if (Count >= 1)
  {
    v6 = 0;
    v7 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
    do
    {
      ValueAtIndex = (void *)CFArrayGetValueAtIndex(theArray[0], v6);
      v9 = ValueAtIndex;
      if (ValueAtIndex)
      {
        CFRetain(ValueAtIndex);
        v54[0] = v9;
        CFRetain(v9);
      }
      else
      {
        v54[0] = 0;
      }
      v65 = v9;
      mediaplatform::PlistValueGetter<mediaplatform::PropertyList,void>::value(v59, v9);
      v10 = *((_QWORD *)&v62[0] + 1);
      if (*((_QWORD *)&v62[0] + 1) >= *(_QWORD *)&v62[1])
      {
        v12 = (uint64_t)(*((_QWORD *)&v62[0] + 1) - *(_QWORD *)&v62[0]) >> 4;
        if ((unint64_t)(v12 + 1) >> 60)
          std::vector<std::string>::__throw_length_error[abi:ne180100]();
        v13 = (uint64_t)(*(_QWORD *)&v62[1] - *(_QWORD *)&v62[0]) >> 3;
        if (v13 <= v12 + 1)
          v13 = v12 + 1;
        if (*(_QWORD *)&v62[1] - *(_QWORD *)&v62[0] >= 0x7FFFFFFFFFFFFFF0uLL)
          v14 = 0xFFFFFFFFFFFFFFFLL;
        else
          v14 = v13;
        v58 = &v62[1];
        if (v14)
        {
          if (v14 >> 60)
            std::__throw_bad_array_new_length[abi:ne180100]();
          v15 = (char *)operator new(16 * v14);
        }
        else
        {
          v15 = 0;
        }
        __p[0] = v15;
        __p[1] = &v15[16 * v12];
        __p[2] = __p[1];
        __p[3] = &v15[16 * v14];
        mediaplatform::PropertyList::PropertyList((uint64_t)__p[1], (uint64_t)v59);
        v16 = 0;
        v17 = (char *)__p[1];
        __p[2] = (char *)__p[2] + 16;
        v18 = v62[0];
        while (*((_QWORD *)&v18 + 1) + v16 != (_QWORD)v18)
        {
          *(_QWORD *)&v17[v16 - 16] = &off_24C330CB0;
          *(_QWORD *)&v17[v16 - 8] = CFDictionaryCreateMutableCopy(v7, 0, *(CFDictionaryRef *)(*((_QWORD *)&v18 + 1) + v16 - 8));
          v16 -= 16;
        }
        v19 = *(void **)&v62[1];
        v20 = *(_OWORD *)&__p[2];
        v53 = __p[2];
        v21 = v62[0];
        *(_QWORD *)&v62[0] = &v17[v16];
        *(_OWORD *)&__p[1] = v21;
        *(_OWORD *)((char *)v62 + 8) = v20;
        __p[3] = v19;
        __p[0] = (void *)v21;
        std::__split_buffer<mediaplatform::PropertyList>::~__split_buffer((uint64_t)__p);
        v11 = v53;
      }
      else
      {
        mediaplatform::PropertyList::PropertyList(*((uint64_t *)&v62[0] + 1), (uint64_t)v59);
        v11 = (void *)(v10 + 16);
      }
      *((_QWORD *)&v62[0] + 1) = v11;
      v59[0] = &off_24C330CB0;
      mediaplatform::CFRetainedPointer<__CFDictionary *>::~CFRetainedPointer((const void **)&v59[1]);
      mediaplatform::CFRetainedPointer<void const*>::~CFRetainedPointer(&v65);
      mediaplatform::CFRetainedPointer<void const*>::~CFRetainedPointer((const void **)v54);
      ++v6;
    }
    while (v6 != Count);
  }
  mediaplatform::CFRetainedPointer<__CFArray const*>::~CFRetainedPointer((const void **)theArray);
  if ((v66[23] & 0x80000000) != 0)
    operator delete(*(void **)v66);
  *(_OWORD *)v59 = 0u;
  v60 = 0u;
  v61 = 1065353216;
  std::string::basic_string[abi:ne180100]<0>(__p, "LocalizedSectionHeaders");
  v22 = mediaplatform::PropertyList::keyExists((uint64_t)&v63, (const char *)__p);
  v23 = v22;
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if (!v23)
      goto LABEL_36;
  }
  else if (!v22)
  {
    goto LABEL_36;
  }
  std::string::basic_string[abi:ne180100]<0>(v66, "LocalizedSectionHeaders");
  mediaplatform::PropertyList::dictionaryValueForKey<std::string,std::string>((uint64_t)__p, (uint64_t)&v63, (uint64_t)v66);
  std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__move_assign((uint64_t)v59, (uint64_t *)__p);
  std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__deallocate_node((_QWORD *)__p[2]);
  v24 = __p[0];
  __p[0] = 0;
  if (v24)
    operator delete(v24);
  if ((v66[23] & 0x80000000) != 0)
    operator delete(*(void **)v66);
LABEL_36:
  v26 = *((_QWORD *)&v62[0] + 1);
  for (i = *(_QWORD *)&v62[0]; i != v26; i += 16)
  {
    mlcore::LocalizedSectionHeader::LocalizedSectionHeader((uint64_t)__p, i, v59);
    v28 = *((_QWORD *)this + 1);
    v27 = *((_QWORD *)this + 2);
    if (v28 >= v27)
    {
      v30 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v28 - *(_QWORD *)this) >> 3);
      v31 = v30 + 1;
      if ((unint64_t)(v30 + 1) > 0x492492492492492)
        std::vector<std::string>::__throw_length_error[abi:ne180100]();
      v32 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v27 - *(_QWORD *)this) >> 3);
      if (2 * v32 > v31)
        v31 = 2 * v32;
      if (v32 >= 0x249249249249249)
        v33 = 0x492492492492492;
      else
        v33 = v31;
      v68 = (char *)this + 16;
      if (v33)
        v33 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::LocalizedSectionHeader>>(v33);
      else
        v34 = 0;
      *(_QWORD *)v66 = v33;
      *(_QWORD *)&v66[8] = v33 + 56 * v30;
      *(_QWORD *)&v66[16] = *(_QWORD *)&v66[8];
      v67 = v33 + 56 * v34;
      std::allocator<mlcore::LocalizedSectionHeader>::construct[abi:ne180100]<mlcore::LocalizedSectionHeader,mlcore::LocalizedSectionHeader const&>(*(uint64_t *)&v66[8], (uint64_t)__p);
      v35 = *(_QWORD *)&v66[8];
      v29 = *(_QWORD *)&v66[16] + 56;
      *(_QWORD *)&v66[16] += 56;
      v37 = *(_QWORD *)this;
      v36 = *((_QWORD *)this + 1);
      if (v36 == *(_QWORD *)this)
      {
        v41 = vdupq_n_s64(v36);
      }
      else
      {
        v38 = 0;
        do
        {
          v39 = v35 + v38;
          v40 = v36 + v38;
          *(_QWORD *)(v39 - 56) = *(_QWORD *)(v36 + v38 - 56);
          *(_QWORD *)(v39 - 48) = 0;
          *(_QWORD *)(v39 - 40) = 0;
          *(_QWORD *)(v39 - 32) = 0;
          *(_OWORD *)(v39 - 48) = *(_OWORD *)(v36 + v38 - 48);
          *(_QWORD *)(v39 - 32) = *(_QWORD *)(v36 + v38 - 32);
          *(_QWORD *)(v40 - 48) = 0;
          *(_QWORD *)(v40 - 40) = 0;
          *(_QWORD *)(v40 - 32) = 0;
          *(_QWORD *)(v39 - 24) = 0;
          *(_QWORD *)(v39 - 16) = 0;
          *(_QWORD *)(v39 - 8) = 0;
          *(_OWORD *)(v39 - 24) = *(_OWORD *)(v36 + v38 - 24);
          *(_QWORD *)(v39 - 8) = *(_QWORD *)(v36 + v38 - 8);
          *(_QWORD *)(v40 - 24) = 0;
          *(_QWORD *)(v40 - 16) = 0;
          *(_QWORD *)(v40 - 8) = 0;
          v38 -= 56;
        }
        while (v36 + v38 != v37);
        v35 += v38;
        v41 = *(int64x2_t *)this;
        v29 = *(_QWORD *)&v66[16];
      }
      *(_QWORD *)this = v35;
      *((_QWORD *)this + 1) = v29;
      *(int64x2_t *)&v66[8] = v41;
      v42 = *((_QWORD *)this + 2);
      *((_QWORD *)this + 2) = v67;
      v67 = v42;
      *(_QWORD *)v66 = v41.i64[0];
      std::__split_buffer<mlcore::LocalizedSectionHeader>::~__split_buffer((uint64_t)v66);
    }
    else
    {
      std::allocator<mlcore::LocalizedSectionHeader>::construct[abi:ne180100]<mlcore::LocalizedSectionHeader,mlcore::LocalizedSectionHeader const&>(*((_QWORD *)this + 1), (uint64_t)__p);
      v29 = v28 + 56;
      *((_QWORD *)this + 1) = v29;
    }
    *((_QWORD *)this + 1) = v29;
    *(_QWORD *)v66 = &v58;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)v66);
    *(_QWORD *)v66 = &__p[1];
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)v66);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "SectionIndices");
  mediaplatform::PropertyList::arrayValueForKey<std::string>((uint64_t)theArray, (uint64_t)&v63, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0)
    operator delete(__p[0]);
  memset(__p, 0, sizeof(__p));
  LODWORD(v58) = 1065353216;
  std::string::basic_string[abi:ne180100]<0>(v66, "LocalizedSectionIndices");
  v43 = mediaplatform::PropertyList::keyExists((uint64_t)&v63, v66);
  v44 = v43;
  if ((v66[23] & 0x80000000) != 0)
  {
    operator delete(*(void **)v66);
    if (!v44)
      goto LABEL_65;
  }
  else if (!v43)
  {
    goto LABEL_65;
  }
  std::string::basic_string[abi:ne180100]<0>(v54, "LocalizedSectionIndices");
  mediaplatform::PropertyList::dictionaryValueForKey<std::string,std::string>((uint64_t)v66, (uint64_t)&v63, (uint64_t)v54);
  std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__move_assign((uint64_t)__p, (uint64_t *)v66);
  std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__deallocate_node(*(_QWORD **)&v66[16]);
  v45 = *(void **)v66;
  *(_QWORD *)v66 = 0;
  if (v45)
    operator delete(v45);
  if (v55 < 0)
    operator delete(v54[0]);
LABEL_65:
  mlcore::LocalizedSectionsInfo::_initializeLocalizedIndices((std::vector<std::string> *)this, (uint64_t *)theArray, __p);
  std::string::basic_string[abi:ne180100]<0>(v66, "NameTransform");
  v46 = mediaplatform::PropertyList::keyExists((uint64_t)&v63, v66);
  v47 = v46;
  if ((v66[23] & 0x80000000) == 0)
  {
    if (!v46)
      goto LABEL_73;
LABEL_69:
    std::string::basic_string[abi:ne180100]<0>(v54, "NameTransform");
    mediaplatform::PropertyList::valueForKey<std::string>(v66, (uint64_t)&v63, (uint64_t)v54);
    if (*((char *)this + 71) < 0)
      operator delete(*(void **)v52);
    *(_OWORD *)v52 = *(_OWORD *)v66;
    *((_QWORD *)v52 + 2) = *(_QWORD *)&v66[16];
    v66[23] = 0;
    v66[0] = 0;
    if (v55 < 0)
      operator delete(v54[0]);
    goto LABEL_73;
  }
  operator delete(*(void **)v66);
  if (v47)
    goto LABEL_69;
LABEL_73:
  std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__deallocate_node((_QWORD *)__p[2]);
  v48 = __p[0];
  __p[0] = 0;
  if (v48)
    operator delete(v48);
  __p[0] = theArray;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
  std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__deallocate_node((_QWORD *)v60);
  v49 = v59[0];
  v59[0] = 0;
  if (v49)
    operator delete(v49);
  __p[0] = v62;
  std::vector<mediaplatform::PropertyList>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
  v63 = &off_24C330CB0;
  mediaplatform::CFRetainedPointer<__CFDictionary *>::~CFRetainedPointer(&v64);
  return this;
}

void sub_20A8C8618(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x20A8C8524);
}

void sub_20A8C8644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,char *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v35;
  uint64_t v36;

  if (a20 < 0)
    operator delete(__p);
  std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::~__hash_table((uint64_t)&a24);
  a24 = &a21;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a24);
  std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::~__hash_table((uint64_t)&a35);
  a24 = (char *)(v36 - 192);
  std::vector<mediaplatform::PropertyList>::__destroy_vector::operator()[abi:ne180100]((void ***)&a24);
  *(_QWORD *)(v36 - 160) = &off_24C330CB0;
  mediaplatform::CFRetainedPointer<__CFDictionary *>::~CFRetainedPointer((const void **)(v36 - 152));
  if (*(char *)(v35 + 71) < 0)
    operator delete(*a10);
  a35 = v35 + 24;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a35);
  a35 = v35;
  std::vector<mlcore::LocalizedSectionHeader>::__destroy_vector::operator()[abi:ne180100]((void ***)&a35);
  _Unwind_Resume(a1);
}

const void **mediaplatform::PropertyList::dictionaryValueForKey<std::string,std::string>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  const void *v5;
  CFTypeID TypeID;
  CFIndex Count;
  const void **v8;
  uint64_t v9;
  const void *v10;
  const __CFString *v11;
  const __CFString *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint8x8_t v16;
  unint64_t v17;
  const void **v18;
  char *v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  float v23;
  float v24;
  _BOOL8 v25;
  unint64_t v26;
  unint64_t v27;
  int8x8_t prime;
  void *v29;
  void *v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  uint8x8_t v34;
  unint64_t v35;
  uint8x8_t v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  void **v42;
  void *v43;
  std::logic_error *exception;
  void **keys;
  _QWORD *v47;
  const __CFString *v48;
  void *__p[2];
  uint64_t v50;
  const __CFString *v51;
  void *v52[2];
  uint64_t v53;
  const __CFString *v54;
  CFTypeRef cf;
  CFDictionaryRef theDict;
  const void *v57[2];
  char v58;

  mediaplatform::PropertyList::_cfValueForKey(a2, a3, v57);
  v5 = v57[0];
  TypeID = CFDictionaryGetTypeID();
  if (v5)
  {
    if (CFGetTypeID(v5) == TypeID)
      CFRetain(v5);
    else
      v5 = 0;
  }
  theDict = (CFDictionaryRef)v5;
  mediaplatform::CFRetainedPointer<void const*>::~CFRetainedPointer(v57);
  if (!v5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "not a dictionary");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C32FBD0, MEMORY[0x24BEDAB88]);
  }
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  Count = CFDictionaryGetCount((CFDictionaryRef)v5);
  keys = (void **)malloc_type_malloc(8 * Count, 0xC0040B8AA526DuLL);
  v8 = (const void **)malloc_type_malloc(8 * Count, 0xC0040B8AA526DuLL);
  CFDictionaryGetKeysAndValues(theDict, (const void **)keys, v8);
  if (Count >= 1)
  {
    v9 = 0;
    v47 = (_QWORD *)(a1 + 16);
    while (1)
    {
      v10 = keys[v9];
      if (v10)
        CFRetain(keys[v9]);
      cf = v10;
      v11 = (const __CFString *)v8[v9];
      if (v11)
      {
        CFRetain(v8[v9]);
        v54 = v11;
        CFRetain(v11);
      }
      else
      {
        v54 = 0;
      }
      v51 = v11;
      mediaplatform::PlistValueGetter<std::string,void>::value(v52, v11);
      v12 = (const __CFString *)cf;
      if (cf)
        CFRetain(cf);
      v48 = v12;
      mediaplatform::PlistValueGetter<std::string,void>::value(__p, v12);
      v13 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)__p);
      v14 = v13;
      v15 = *(_QWORD *)(a1 + 8);
      if (v15)
      {
        v16 = (uint8x8_t)vcnt_s8((int8x8_t)v15);
        v16.i16[0] = vaddlv_u8(v16);
        v17 = v16.u32[0];
        if (v16.u32[0] > 1uLL)
        {
          v3 = v13;
          if (v13 >= v15)
            v3 = v13 % v15;
        }
        else
        {
          v3 = (v15 - 1) & v13;
        }
        v18 = *(const void ***)(*(_QWORD *)a1 + 8 * v3);
        if (v18)
        {
          v19 = (char *)*v18;
          if (*v18)
          {
            do
            {
              v20 = *((_QWORD *)v19 + 1);
              if (v20 == v14)
              {
                if (std::equal_to<std::string>::operator()[abi:ne180100]((unsigned __int8 *)v19 + 16, (unsigned __int8 *)__p))
                {
                  goto LABEL_87;
                }
              }
              else
              {
                if (v17 > 1)
                {
                  if (v20 >= v15)
                    v20 %= v15;
                }
                else
                {
                  v20 &= v15 - 1;
                }
                if (v20 != v3)
                  break;
              }
              v19 = *(char **)v19;
            }
            while (v19);
          }
        }
      }
      v21 = operator new(0x40uLL);
      v57[0] = v21;
      v57[1] = (const void *)(a1 + 16);
      *v21 = 0;
      v21[1] = v14;
      *((_OWORD *)v21 + 1) = *(_OWORD *)__p;
      v22 = v50;
      __p[0] = 0;
      __p[1] = 0;
      v50 = 0;
      v21[4] = v22;
      v21[5] = 0;
      v21[6] = 0;
      v21[7] = 0;
      v58 = 1;
      v23 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
      v24 = *(float *)(a1 + 32);
      if (!v15 || (float)(v24 * (float)v15) < v23)
        break;
LABEL_77:
      v40 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
      v19 = (char *)v57[0];
      if (v40)
      {
        *(_QWORD *)v57[0] = *v40;
      }
      else
      {
        *(_QWORD *)v57[0] = *(_QWORD *)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v19;
        *(_QWORD *)(*(_QWORD *)a1 + 8 * v3) = v47;
        if (!*(_QWORD *)v19)
          goto LABEL_86;
        v41 = *(_QWORD *)(*(_QWORD *)v19 + 8);
        if ((v15 & (v15 - 1)) != 0)
        {
          if (v41 >= v15)
            v41 %= v15;
        }
        else
        {
          v41 &= v15 - 1;
        }
        v40 = (_QWORD *)(*(_QWORD *)a1 + 8 * v41);
      }
      *v40 = v19;
LABEL_86:
      v57[0] = 0;
      ++*(_QWORD *)(a1 + 24);
      std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t)v57);
LABEL_87:
      v42 = (void **)(v19 + 40);
      if (v19[63] < 0)
        operator delete(*v42);
      *(_OWORD *)v42 = *(_OWORD *)v52;
      *((_QWORD *)v19 + 7) = v53;
      HIBYTE(v53) = 0;
      LOBYTE(v52[0]) = 0;
      if (SHIBYTE(v50) < 0)
        operator delete(__p[0]);
      mediaplatform::CFRetainedPointer<void const*>::~CFRetainedPointer((const void **)&v48);
      if (SHIBYTE(v53) < 0)
        operator delete(v52[0]);
      mediaplatform::CFRetainedPointer<void const*>::~CFRetainedPointer((const void **)&v51);
      mediaplatform::CFRetainedPointer<void const*>::~CFRetainedPointer((const void **)&v54);
      mediaplatform::CFRetainedPointer<void const*>::~CFRetainedPointer(&cf);
      if (++v9 == Count)
        goto LABEL_104;
    }
    v25 = (v15 & (v15 - 1)) != 0;
    if (v15 < 3)
      v25 = 1;
    v26 = v25 | (2 * v15);
    v27 = vcvtps_u32_f32(v23 / v24);
    if (v26 <= v27)
      prime = (int8x8_t)v27;
    else
      prime = (int8x8_t)v26;
    if (*(_QWORD *)&prime == 1)
    {
      prime = (int8x8_t)2;
    }
    else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
    {
      prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
      v15 = *(_QWORD *)(a1 + 8);
    }
    if (*(_QWORD *)&prime > v15)
      goto LABEL_43;
    if (*(_QWORD *)&prime < v15)
    {
      v35 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v15 < 3 || (v36 = (uint8x8_t)vcnt_s8((int8x8_t)v15), v36.i16[0] = vaddlv_u8(v36), v36.u32[0] > 1uLL))
      {
        v35 = std::__next_prime(v35);
      }
      else
      {
        v37 = 1 << -(char)__clz(v35 - 1);
        if (v35 >= 2)
          v35 = v37;
      }
      if (*(_QWORD *)&prime <= v35)
        prime = (int8x8_t)v35;
      if (*(_QWORD *)&prime >= v15)
      {
        v15 = *(_QWORD *)(a1 + 8);
      }
      else
      {
        if (prime)
        {
LABEL_43:
          if (*(_QWORD *)&prime >> 61)
            std::__throw_bad_array_new_length[abi:ne180100]();
          v29 = operator new(8 * *(_QWORD *)&prime);
          v30 = *(void **)a1;
          *(_QWORD *)a1 = v29;
          if (v30)
            operator delete(v30);
          v31 = 0;
          *(int8x8_t *)(a1 + 8) = prime;
          do
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v31++) = 0;
          while (*(_QWORD *)&prime != v31);
          v32 = (_QWORD *)*v47;
          if (*v47)
          {
            v33 = v32[1];
            v34 = (uint8x8_t)vcnt_s8(prime);
            v34.i16[0] = vaddlv_u8(v34);
            if (v34.u32[0] > 1uLL)
            {
              if (v33 >= *(_QWORD *)&prime)
                v33 %= *(_QWORD *)&prime;
            }
            else
            {
              v33 &= *(_QWORD *)&prime - 1;
            }
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v33) = v47;
            v38 = (_QWORD *)*v32;
            if (*v32)
            {
              do
              {
                v39 = v38[1];
                if (v34.u32[0] > 1uLL)
                {
                  if (v39 >= *(_QWORD *)&prime)
                    v39 %= *(_QWORD *)&prime;
                }
                else
                {
                  v39 &= *(_QWORD *)&prime - 1;
                }
                if (v39 != v33)
                {
                  if (!*(_QWORD *)(*(_QWORD *)a1 + 8 * v39))
                  {
                    *(_QWORD *)(*(_QWORD *)a1 + 8 * v39) = v32;
                    goto LABEL_68;
                  }
                  *v32 = *v38;
                  *v38 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v39);
                  **(_QWORD **)(*(_QWORD *)a1 + 8 * v39) = v38;
                  v38 = v32;
                }
                v39 = v33;
LABEL_68:
                v32 = v38;
                v38 = (_QWORD *)*v38;
                v33 = v39;
              }
              while (v38);
            }
          }
          v15 = (unint64_t)prime;
          goto LABEL_72;
        }
        v43 = *(void **)a1;
        *(_QWORD *)a1 = 0;
        if (v43)
          operator delete(v43);
        v15 = 0;
        *(_QWORD *)(a1 + 8) = 0;
      }
    }
LABEL_72:
    if ((v15 & (v15 - 1)) != 0)
    {
      if (v14 >= v15)
        v3 = v14 % v15;
      else
        v3 = v14;
    }
    else
    {
      v3 = (v15 - 1) & v14;
    }
    goto LABEL_77;
  }
LABEL_104:
  free(keys);
  free(v8);
  return mediaplatform::CFRetainedPointer<__CFDictionary const*>::~CFRetainedPointer((const void **)&theDict);
}

void sub_20A8C8EBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25,int a26,__int16 a27,char a28,char a29,int a30,const void *a31,__int16 a32,char a33,char a34)
{
  mediaplatform::CFRetainedPointer<__CFDictionary const*>::~CFRetainedPointer(&a31);
  _Unwind_Resume(a1);
}

void std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__move_assign(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  if (*(_QWORD *)(a1 + 24))
  {
    std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__deallocate_node(*(_QWORD **)(a1 + 16));
    *(_QWORD *)(a1 + 16) = 0;
    v4 = *(_QWORD *)(a1 + 8);
    if (v4)
    {
      for (i = 0; i != v4; ++i)
        *(_QWORD *)(*(_QWORD *)a1 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 24) = 0;
  }
  v6 = *a2;
  *a2 = 0;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = v6;
  if (v7)
    operator delete(v7);
  v10 = a2[2];
  v9 = a2 + 2;
  v8 = v10;
  v11 = *(v9 - 1);
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 8) = v11;
  *(v9 - 1) = 0;
  v12 = v9[1];
  *(_QWORD *)(a1 + 24) = v12;
  *(_DWORD *)(a1 + 32) = *((_DWORD *)v9 + 4);
  if (v12)
  {
    v13 = *(_QWORD *)(v8 + 8);
    v14 = *(_QWORD *)(a1 + 8);
    if ((v14 & (v14 - 1)) != 0)
    {
      if (v13 >= v14)
        v13 %= v14;
    }
    else
    {
      v13 &= v14 - 1;
    }
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v13) = a1 + 16;
    *v9 = 0;
    v9[1] = 0;
  }
}

uint64_t std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::~__hash_table(uint64_t a1)
{
  void *v2;

  std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__deallocate_node(*(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

std::string *std::allocator<mlcore::LocalizedSectionHeader>::construct[abi:ne180100]<mlcore::LocalizedSectionHeader,mlcore::LocalizedSectionHeader const&>(uint64_t a1, uint64_t a2)
{
  std::string *v3;

  v3 = (std::string *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>((std::string *)(a1 + 8), *(__int128 **)(a2 + 8), *(__int128 **)(a2 + 16), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 16) - *(_QWORD *)(a2 + 8)) >> 3));
  v3[1].__r_.__value_.__l.__size_ = 0;
  v3[1].__r_.__value_.__r.__words[2] = 0;
  v3 = (std::string *)((char *)v3 + 32);
  v3->__r_.__value_.__r.__words[2] = 0;
  return std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(v3, *(__int128 **)(a2 + 32), *(__int128 **)(a2 + 40), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 40) - *(_QWORD *)(a2 + 32)) >> 3));
}

void sub_20A8C9124(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void mlcore::LocalizedSectionHeader::~LocalizedSectionHeader(mlcore::LocalizedSectionHeader *this)
{
  void **v2;

  v2 = (void **)((char *)this + 32);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
  v2 = (void **)((char *)this + 8);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
}

void std::vector<mediaplatform::PropertyList>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  char *v2;
  char *v4;
  void *v5;
  char *v6;
  char *v7;
  void (**v8)(char *);
  BOOL v9;

  v1 = *a1;
  v2 = (char *)**a1;
  if (v2)
  {
    v4 = (char *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      v6 = v4 - 16;
      v7 = v4 - 16;
      do
      {
        v8 = *(void (***)(char *))v7;
        v7 -= 16;
        (*v8)(v6);
        v9 = v6 == v2;
        v6 = v7;
      }
      while (!v9);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t std::__split_buffer<mlcore::LocalizedSectionHeader>::~__split_buffer(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  void **v5;

  v2 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v2; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 56;
    v5 = (void **)(i - 24);
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v5);
    v5 = (void **)(i - 48);
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v5);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__deallocate_node(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  if (a1)
  {
    v1 = a1;
    do
    {
      v2 = (_QWORD *)*v1;
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::string>,0>((uint64_t)(v1 + 2));
      operator delete(v1);
      v1 = v2;
    }
    while (v2);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::string>,0>(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

void std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v1)
  {
    if (*(_BYTE *)(a1 + 16))
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::string>,0>((uint64_t)v1 + 16);
    operator delete(v1);
  }
}

uint64_t std::__split_buffer<mediaplatform::PropertyList>::~__split_buffer(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;
  void (**v4)(void);

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    v4 = *(void (***)(void))(i - 16);
    *(_QWORD *)(a1 + 16) = i - 16;
    (*v4)();
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t mlcore::LocalizedSectionsInfo::localizedSectionIndices(mlcore::LocalizedSectionsInfo *this)
{
  return (uint64_t)this + 24;
}

uint64_t mlcore::LocalizedSectionsInfo::nameTransform(mlcore::LocalizedSectionsInfo *this)
{
  return (uint64_t)this + 48;
}

uint64_t mlcore::EntityRevision::EntityRevision(uint64_t result, _QWORD *a2, int a3, int a4)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  *(_DWORD *)result = 0;
  v4 = a2[1];
  *(_QWORD *)(result + 8) = *a2;
  *(_QWORD *)(result + 16) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_DWORD *)(result + 24) = a3;
  *(_DWORD *)(result + 28) = a4;
  return result;
}

{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  *(_DWORD *)result = 0;
  v4 = a2[1];
  *(_QWORD *)(result + 8) = *a2;
  *(_QWORD *)(result + 16) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_DWORD *)(result + 24) = a3;
  *(_DWORD *)(result + 28) = a4;
  return result;
}

uint64_t mlcore::EntityRevision::entity@<X0>(uint64_t this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;

  v2 = *(_QWORD *)(this + 16);
  *a2 = *(_QWORD *)(this + 8);
  a2[1] = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return this;
}

uint64_t mlcore::EntityRevision::type(mlcore::EntityRevision *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t mlcore::EntityRevision::deletion(mlcore::EntityRevision *this)
{
  return *((unsigned int *)this + 7);
}

uint64_t mlcore::EntityRevision::revisionNumber(mlcore::EntityRevision *this)
{
  return *(unsigned int *)this;
}

void mlcore::ItemExtraTable::~ItemExtraTable(mlcore::ItemExtraTable *this)
{
  *(_QWORD *)this = &off_24C3361D8;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul,6ul,7ul,8ul,9ul,10ul,11ul,12ul,13ul,14ul,15ul,16ul,17ul,18ul,19ul,20ul,21ul,22ul,23ul,24ul,25ul,26ul,27ul,28ul,29ul,30ul,31ul,32ul,33ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<double>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<mediaplatform::Data>,mlcore::MediaColumn<int>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>>::~__tuple_impl((uint64_t)this + 1952);
  mediaplatform::DatabaseTable<long long,std::string,std::string,int,int,double,int,std::string,long long,mediaplatform::Data,int,long long,int,int,int,int,int,long long,std::string,std::string,std::string,std::string,std::string,std::string,long long,long long,int,std::string,std::string,std::string,std::string,int,int,int>::~DatabaseTable((uint64_t)this);
}

{
  *(_QWORD *)this = &off_24C3361D8;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul,6ul,7ul,8ul,9ul,10ul,11ul,12ul,13ul,14ul,15ul,16ul,17ul,18ul,19ul,20ul,21ul,22ul,23ul,24ul,25ul,26ul,27ul,28ul,29ul,30ul,31ul,32ul,33ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<double>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<mediaplatform::Data>,mlcore::MediaColumn<int>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>>::~__tuple_impl((uint64_t)this + 1952);
  mediaplatform::DatabaseTable<long long,std::string,std::string,int,int,double,int,std::string,long long,mediaplatform::Data,int,long long,int,int,int,int,int,long long,std::string,std::string,std::string,std::string,std::string,std::string,long long,long long,int,std::string,std::string,std::string,std::string,int,int,int>::~DatabaseTable((uint64_t)this);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mediaplatform::DatabaseTable<long long,std::string,std::string,int,int,double,int,std::string,long long,mediaplatform::Data,int,long long,int,int,int,int,int,long long,std::string,std::string,std::string,std::string,std::string,std::string,long long,long long,int,std::string,std::string,std::string,std::string,int,int,int>::columnCount()
{
  return 34;
}

void mediaplatform::DatabaseTable<long long,std::string,std::string,int,int,double,int,std::string,long long,mediaplatform::Data,int,long long,int,int,int,int,int,long long,std::string,std::string,std::string,std::string,std::string,std::string,long long,long long,int,std::string,std::string,std::string,std::string,int,int,int>::columnNames(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 1904);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 1840);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 1776);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 1728);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 1680);
  mediaplatform::ColumnNamesApplier::operator()<double>((uint64_t)a2, a1 + 1632);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 1584);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 1520);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 1472);
  mediaplatform::ColumnNamesApplier::operator()<mediaplatform::Data>((uint64_t)a2, a1 + 1392);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 1344);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 1296);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 1248);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 1200);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 1152);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 1104);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 1056);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 1008);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 944);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 880);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 816);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 752);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 688);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 624);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 576);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 528);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 480);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 416);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 352);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 288);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 224);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 176);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 128);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 80);
}

void sub_20A8C9694(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void mediaplatform::DatabaseTable<long long,std::string,std::string,int,int,double,int,std::string,long long,mediaplatform::Data,int,long long,int,int,int,int,int,long long,std::string,std::string,std::string,std::string,std::string,std::string,long long,long long,int,std::string,std::string,std::string,std::string,int,int,int>::targetColumnExpression(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __int128 *v3;
  __int128 *v4[3];
  __int128 **v5;

  v3 = (__int128 *)(a1 + 8);
  (*(void (**)(__int128 **__return_ptr))(*(_QWORD *)a1 + 24))(v4);
  std::allocate_shared[abi:ne180100]<mediaplatform::SQLColumnNameExpression,std::allocator<mediaplatform::SQLColumnNameExpression>,std::string &,std::string const&,void>(a2, v4[0], v3);
  v5 = v4;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v5);
}

void sub_20A8C970C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul,6ul,7ul,8ul,9ul,10ul,11ul,12ul,13ul,14ul,15ul,16ul,17ul,18ul,19ul,20ul,21ul,22ul,23ul,24ul,25ul,26ul,27ul,28ul,29ul,30ul,31ul,32ul,33ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<double>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<mediaplatform::Data>,mlcore::MediaColumn<int>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>>::~__tuple_impl(uint64_t a1)
{
  *(_QWORD *)(a1 + 1824) = off_24C335D90;
  if (*(char *)(a1 + 1855) < 0)
    operator delete(*(void **)(a1 + 1832));
  *(_QWORD *)(a1 + 1776) = off_24C335D90;
  if (*(char *)(a1 + 1807) < 0)
    operator delete(*(void **)(a1 + 1784));
  *(_QWORD *)(a1 + 1728) = off_24C335D90;
  if (*(char *)(a1 + 1759) < 0)
    operator delete(*(void **)(a1 + 1736));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1664);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1600);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1536);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1472);
  *(_QWORD *)(a1 + 1424) = off_24C335D90;
  if (*(char *)(a1 + 1455) < 0)
    operator delete(*(void **)(a1 + 1432));
  *(_QWORD *)(a1 + 1376) = off_24C335D90;
  if (*(char *)(a1 + 1407) < 0)
    operator delete(*(void **)(a1 + 1384));
  *(_QWORD *)(a1 + 1328) = off_24C335D90;
  if (*(char *)(a1 + 1359) < 0)
    operator delete(*(void **)(a1 + 1336));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1264);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1200);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1136);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1072);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1008);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 944);
  *(_QWORD *)(a1 + 896) = off_24C335D90;
  if (*(char *)(a1 + 927) < 0)
    operator delete(*(void **)(a1 + 904));
  *(_QWORD *)(a1 + 848) = off_24C335D90;
  if (*(char *)(a1 + 879) < 0)
    operator delete(*(void **)(a1 + 856));
  *(_QWORD *)(a1 + 800) = off_24C335D90;
  if (*(char *)(a1 + 831) < 0)
    operator delete(*(void **)(a1 + 808));
  *(_QWORD *)(a1 + 752) = off_24C335D90;
  if (*(char *)(a1 + 783) < 0)
    operator delete(*(void **)(a1 + 760));
  *(_QWORD *)(a1 + 704) = off_24C335D90;
  if (*(char *)(a1 + 735) < 0)
    operator delete(*(void **)(a1 + 712));
  *(_QWORD *)(a1 + 656) = off_24C335D90;
  if (*(char *)(a1 + 687) < 0)
    operator delete(*(void **)(a1 + 664));
  *(_QWORD *)(a1 + 608) = off_24C335D90;
  if (*(char *)(a1 + 639) < 0)
    operator delete(*(void **)(a1 + 616));
  *(_QWORD *)(a1 + 560) = off_24C335D90;
  if (*(char *)(a1 + 591) < 0)
    operator delete(*(void **)(a1 + 568));
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn(a1 + 480);
  *(_QWORD *)(a1 + 432) = off_24C335D90;
  if (*(char *)(a1 + 463) < 0)
    operator delete(*(void **)(a1 + 440));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 368);
  *(_QWORD *)(a1 + 320) = off_24C335D90;
  if (*(char *)(a1 + 351) < 0)
    operator delete(*(void **)(a1 + 328));
  *(_QWORD *)(a1 + 272) = off_24C335D90;
  if (*(char *)(a1 + 303) < 0)
    operator delete(*(void **)(a1 + 280));
  *(_QWORD *)(a1 + 224) = off_24C335D90;
  if (*(char *)(a1 + 255) < 0)
    operator delete(*(void **)(a1 + 232));
  *(_QWORD *)(a1 + 176) = off_24C335D90;
  if (*(char *)(a1 + 207) < 0)
    operator delete(*(void **)(a1 + 184));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 112);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 48);
  *(_QWORD *)a1 = off_24C335D90;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void mediaplatform::DatabaseTable<long long,std::string,std::string,int,int,double,int,std::string,long long,mediaplatform::Data,int,long long,int,int,int,int,int,long long,std::string,std::string,std::string,std::string,std::string,std::string,long long,long long,int,std::string,std::string,std::string,std::string,int,int,int>::~DatabaseTable(uint64_t a1)
{
  *(_QWORD *)a1 = &off_24C335670;
  *(_QWORD *)(a1 + 1904) = off_24C335D90;
  if (*(char *)(a1 + 1935) < 0)
    operator delete(*(void **)(a1 + 1912));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1840);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1776);
  *(_QWORD *)(a1 + 1728) = off_24C335D90;
  if (*(char *)(a1 + 1759) < 0)
    operator delete(*(void **)(a1 + 1736));
  *(_QWORD *)(a1 + 1680) = off_24C335D90;
  if (*(char *)(a1 + 1711) < 0)
    operator delete(*(void **)(a1 + 1688));
  mediaplatform::DatabaseColumnTuple<5ul,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1 + 80);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
}

{
  mediaplatform::DatabaseTable<long long,std::string,std::string,int,int,double,int,std::string,long long,mediaplatform::Data,int,long long,int,int,int,int,int,long long,std::string,std::string,std::string,std::string,std::string,std::string,long long,long long,int,std::string,std::string,std::string,std::string,int,int,int>::~DatabaseTable(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mediaplatform::DatabaseColumnTuple<5ul,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 1552) = off_24C335D90;
  if (*(char *)(a1 + 1583) < 0)
    operator delete(*(void **)(a1 + 1560));
  *(_QWORD *)(a1 + 1504) = off_24C335D90;
  if (*(char *)(a1 + 1535) < 0)
    operator delete(*(void **)(a1 + 1512));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1440);
  *(_QWORD *)(a1 + 1392) = off_24C335D90;
  if (*(char *)(a1 + 1423) < 0)
    operator delete(*(void **)(a1 + 1400));
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn(a1 + 1312);
  *(_QWORD *)(a1 + 1264) = off_24C335D90;
  if (*(char *)(a1 + 1295) < 0)
    operator delete(*(void **)(a1 + 1272));
  *(_QWORD *)(a1 + 1216) = off_24C335D90;
  if (*(char *)(a1 + 1247) < 0)
    operator delete(*(void **)(a1 + 1224));
  return mediaplatform::DatabaseColumnTuple<12ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<12ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 1168) = off_24C335D90;
  if (*(char *)(a1 + 1199) < 0)
    operator delete(*(void **)(a1 + 1176));
  *(_QWORD *)(a1 + 1120) = off_24C335D90;
  if (*(char *)(a1 + 1151) < 0)
    operator delete(*(void **)(a1 + 1128));
  *(_QWORD *)(a1 + 1072) = off_24C335D90;
  if (*(char *)(a1 + 1103) < 0)
    operator delete(*(void **)(a1 + 1080));
  *(_QWORD *)(a1 + 1024) = off_24C335D90;
  if (*(char *)(a1 + 1055) < 0)
    operator delete(*(void **)(a1 + 1032));
  *(_QWORD *)(a1 + 976) = off_24C335D90;
  if (*(char *)(a1 + 1007) < 0)
    operator delete(*(void **)(a1 + 984));
  *(_QWORD *)(a1 + 928) = off_24C335D90;
  if (*(char *)(a1 + 959) < 0)
    operator delete(*(void **)(a1 + 936));
  return mediaplatform::DatabaseColumnTuple<18ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<18ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 864);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 800);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 736);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 672);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 608);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 544);
  *(_QWORD *)(a1 + 496) = off_24C335D90;
  if (*(char *)(a1 + 527) < 0)
    operator delete(*(void **)(a1 + 504));
  *(_QWORD *)(a1 + 448) = off_24C335D90;
  if (*(char *)(a1 + 479) < 0)
    operator delete(*(void **)(a1 + 456));
  return mediaplatform::DatabaseColumnTuple<26ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<26ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 400) = off_24C335D90;
  if (*(char *)(a1 + 431) < 0)
    operator delete(*(void **)(a1 + 408));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 336);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 272);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 208);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 144);
  *(_QWORD *)(a1 + 96) = off_24C335D90;
  if (*(char *)(a1 + 127) < 0)
    operator delete(*(void **)(a1 + 104));
  *(_QWORD *)(a1 + 48) = off_24C335D90;
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  *(_QWORD *)a1 = off_24C335D90;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void mlcore::MediaTable<long long,std::string,std::string,int,int,double,int,std::string,long long,mediaplatform::Data,int,long long,int,int,int,int,int,long long,std::string,std::string,std::string,std::string,std::string,std::string,long long,long long,int,std::string,std::string,std::string,std::string,int,int,int>::~MediaTable(_QWORD *a1)
{
  *a1 = &off_24C3361D8;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul,6ul,7ul,8ul,9ul,10ul,11ul,12ul,13ul,14ul,15ul,16ul,17ul,18ul,19ul,20ul,21ul,22ul,23ul,24ul,25ul,26ul,27ul,28ul,29ul,30ul,31ul,32ul,33ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<double>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<mediaplatform::Data>,mlcore::MediaColumn<int>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>>::~__tuple_impl((uint64_t)(a1 + 244));
  mediaplatform::DatabaseTable<long long,std::string,std::string,int,int,double,int,std::string,long long,mediaplatform::Data,int,long long,int,int,int,int,int,long long,std::string,std::string,std::string,std::string,std::string,std::string,long long,long long,int,std::string,std::string,std::string,std::string,int,int,int>::~DatabaseTable((uint64_t)a1);
}

{
  *a1 = &off_24C3361D8;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul,6ul,7ul,8ul,9ul,10ul,11ul,12ul,13ul,14ul,15ul,16ul,17ul,18ul,19ul,20ul,21ul,22ul,23ul,24ul,25ul,26ul,27ul,28ul,29ul,30ul,31ul,32ul,33ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<double>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<mediaplatform::Data>,mlcore::MediaColumn<int>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>>::~__tuple_impl((uint64_t)(a1 + 244));
  mediaplatform::DatabaseTable<long long,std::string,std::string,int,int,double,int,std::string,long long,mediaplatform::Data,int,long long,int,int,int,int,int,long long,std::string,std::string,std::string,std::string,std::string,std::string,long long,long long,int,std::string,std::string,std::string,std::string,int,int,int>::~DatabaseTable((uint64_t)a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mediaplatform::DatabaseColumnTuple<1ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int v50;
  int v51;
  int v52;
  const void *v53;
  size_t v54;
  void *v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  const void *v66;
  size_t v67;
  void *v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  std::string *v77;
  __int128 v78;
  std::string *v79;
  __int128 v80;
  int v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  int v90;
  int v91;
  int v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  int v104;
  int v105;
  uint64_t v106;
  int v107;
  int v108;
  int v109;
  int v110;
  uint64_t v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  uint64_t v117;
  int v118;
  int v119;
  int v120;
  uint64_t v121;
  int v122;
  int v123;
  int v124;
  std::string v125;
  int v126;
  uint64_t v127;
  uint64_t (**v128)();
  std::string v129;
  int v130;
  uint64_t v131;
  uint64_t (**v132)();
  std::string v133;
  int v134;
  uint64_t v135;
  uint64_t (**v136)();
  std::string v137;
  int v138;
  char v139;
  std::string v140;
  uint64_t (**v141)();
  std::string v142;
  int v143;
  char v144;
  std::string v145;
  uint64_t (**v146)();
  std::string v147;
  int v148;
  char v149;
  std::string v150;
  uint64_t (**v151)();
  std::string v152;
  int v153;
  char v154;
  std::string v155;
  uint64_t (**v156)();
  std::string v157;
  int v158;
  uint64_t v159;
  uint64_t (**v160)();
  std::string v161;
  int v162;
  uint64_t v163;
  int v164;
  uint64_t (**v165)();
  std::string v166;
  int v167;
  uint64_t v168;
  int v169;
  uint64_t (**v170)();
  std::string v171;
  int v172;
  char v173;
  std::string v174;
  uint64_t (**v175)();
  std::string v176;
  int v177;
  char v178;
  std::string v179;
  uint64_t (**v180)();
  std::string v181;
  int v182;
  char v183;
  std::string v184;
  uint64_t (**v185)();
  std::string v186;
  int v187;
  char v188;
  std::string v189;
  uint64_t (**v190)();
  std::string v191;
  int v192;
  char v193;
  std::string v194;
  uint64_t (**v195)();
  std::string v196;
  int v197;
  char v198;
  std::string v199;
  uint64_t (**v200)();
  std::string v201;
  int v202;
  uint64_t v203;
  int v204;
  uint64_t (**v205)();
  std::string v206;
  int v207;
  uint64_t v208;
  uint64_t (**v209)();
  std::string v210;
  int v211;
  uint64_t v212;
  uint64_t (**v213)();
  std::string v214;
  int v215;
  uint64_t v216;
  uint64_t (**v217)();
  std::string v218;
  int v219;
  uint64_t v220;
  uint64_t (**v221)();
  std::string v222;
  int v223;
  uint64_t v224;
  uint64_t (**v225)();
  std::string v226;
  int v227;
  uint64_t v228;
  int v229;
  uint64_t (**v230)();
  std::string v231;
  int v232;
  uint64_t v233;
  uint64_t (**v234)();
  std::string v235;
  int v236;
  char v237;
  void (**v238)(mediaplatform::Data *__hidden);
  size_t v239;
  size_t v240;
  const void *v241;
  char v242;
  uint64_t (**v243)();
  std::string v244;
  int v245;
  uint64_t v246;
  int v247;
  uint64_t (**v248)();
  std::string v249;
  int v250;
  char v251;
  std::string v252;
  uint64_t (**v253)();
  std::string v254;
  int v255;
  uint64_t v256;
  uint64_t (**v257)();
  std::string v258;
  int v259;
  uint64_t v260;
  int v261;
  uint64_t (**v262)();
  std::string v263;
  int v264;
  uint64_t v265;
  uint64_t (**v266)();
  std::string __s;
  int v268;
  uint64_t v269;
  uint64_t (**v270)();
  std::string v271;
  int v272;
  char v273;
  std::string v274;
  uint64_t (**v275)();
  std::string __p;
  int v277;
  uint64_t v278;
  uint64_t (**v279)();
  std::string v280;
  int v281;
  uint64_t v282;
  uint64_t (**v283)();
  std::string v284;
  int v285;
  uint64_t v286;
  uint64_t (**v287)();
  std::string v288;
  int v289;
  char v290;
  std::string v291;
  uint64_t (**v292)();
  std::string v293;
  int v294;
  char v295;
  std::string v296;
  uint64_t (**v297)();
  std::string v298;
  int v299;
  char v300;
  std::string v301;
  uint64_t (**v302)();
  std::string v303;
  int v304;
  char v305;
  std::string v306;
  uint64_t (**v307)();
  std::string v308;
  int v309;
  uint64_t v310;
  uint64_t (**v311)();
  std::string v312;
  int v313;
  uint64_t v314;
  int v315;
  uint64_t (**v316)();
  std::string v317;
  int v318;
  uint64_t v319;
  int v320;
  uint64_t (**v321)();
  std::string v322;
  int v323;
  char v324;
  std::string v325;
  uint64_t (**v326)();
  std::string v327;
  int v328;
  char v329;
  std::string v330;
  uint64_t (**v331)();
  std::string v332;
  int v333;
  char v334;
  std::string v335;
  uint64_t (**v336)();
  std::string v337;
  int v338;
  char v339;
  std::string v340;
  uint64_t (**v341)();
  std::string v342;
  int v343;
  char v344;
  std::string v345;
  uint64_t (**v346)();
  std::string v347;
  int v348;
  char v349;
  std::string v350;
  uint64_t (**v351)();
  std::string v352;
  int v353;
  uint64_t v354;
  int v355;
  uint64_t (**v356)();
  std::string v357;
  int v358;
  uint64_t v359;
  uint64_t (**v360)();
  std::string v361;
  int v362;
  uint64_t v363;
  uint64_t (**v364)();
  std::string v365;
  int v366;
  uint64_t v367;
  uint64_t (**v368)();
  std::string v369;
  int v370;
  uint64_t v371;
  uint64_t (**v372)();
  std::string v373;
  int v374;
  uint64_t v375;
  uint64_t (**v376)();
  std::string v377;
  int v378;
  uint64_t v379;
  int v380;
  uint64_t (**v381)();
  std::string v382;
  int v383;
  uint64_t v384;
  uint64_t (**v385)();
  std::string v386;
  int v387;
  char v388;
  void (**v389)(mediaplatform::Data *__hidden);
  size_t v390;
  size_t v391;
  void *v392;
  char v393;
  uint64_t (**v394)();
  std::string v395;
  int v396;
  uint64_t v397;
  int v398;
  uint64_t (**v399)();
  std::string v400;
  int v401;
  char v402;
  std::string v403;
  uint64_t (**v404)();
  std::string v405;
  int v406;
  uint64_t v407;
  uint64_t (**v408)();
  std::string v409;
  int v410;
  uint64_t v411;
  int v412;
  uint64_t (**v413)();
  std::string v414;
  int v415;
  uint64_t v416;
  uint64_t (**v417)();
  std::string v418;
  int v419;
  uint64_t v420;

  v34 = MEMORY[0x24BDAC7A8](a1);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v46 = v35;
  v93 = v47;
  v48 = v34;
  v270 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v35 + 31) < 0)
    std::string::__init_copy_ctor_external(&v271, *(const std::string::value_type **)(v35 + 8), *(_QWORD *)(v35 + 16));
  else
    v271 = *(std::string *)(v35 + 8);
  v272 = *(_DWORD *)(v46 + 32);
  v270 = &off_24C335AB8;
  v273 = *(_BYTE *)(v46 + 36);
  if (*(char *)(v46 + 63) < 0)
    std::string::__init_copy_ctor_external(&v274, *(const std::string::value_type **)(v46 + 40), *(_QWORD *)(v46 + 48));
  else
    v274 = *(std::string *)(v46 + 40);
  if (*(char *)(v45 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(v45 + 8), *(_QWORD *)(v45 + 16));
  else
    __s = *(std::string *)(v45 + 8);
  v123 = *(_DWORD *)(v45 + 32);
  v268 = v123;
  v266 = off_24C335AF8;
  v121 = *(_QWORD *)(v45 + 36);
  v269 = v121;
  if (*(char *)(v43 + 31) < 0)
    std::string::__init_copy_ctor_external(&v263, *(const std::string::value_type **)(v43 + 8), *(_QWORD *)(v43 + 16));
  else
    v263 = *(std::string *)(v43 + 8);
  v119 = *(_DWORD *)(v43 + 32);
  v264 = v119;
  v262 = off_24C335AF8;
  v117 = *(_QWORD *)(v43 + 36);
  v265 = v117;
  if (*(char *)(v41 + 31) < 0)
    std::string::__init_copy_ctor_external(&v258, *(const std::string::value_type **)(v41 + 8), *(_QWORD *)(v41 + 16));
  else
    v258 = *(std::string *)(v41 + 8);
  v49 = *(_DWORD *)(v41 + 32);
  v257 = off_24C335AD8;
  v260 = *(_QWORD *)(v41 + 36);
  v50 = *(_DWORD *)(v41 + 44);
  v114 = v49;
  v259 = v49;
  v261 = v50;
  if (*(char *)(v39 + 31) < 0)
    std::string::__init_copy_ctor_external(&v254, *(const std::string::value_type **)(v39 + 8), *(_QWORD *)(v39 + 16));
  else
    v254 = *(std::string *)(v39 + 8);
  v112 = *(_DWORD *)(v39 + 32);
  v255 = v112;
  v253 = off_24C335AF8;
  v111 = *(_QWORD *)(v39 + 36);
  v256 = v111;
  v248 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v37 + 31) < 0)
    std::string::__init_copy_ctor_external(&v249, *(const std::string::value_type **)(v37 + 8), *(_QWORD *)(v37 + 16));
  else
    v249 = *(std::string *)(v37 + 8);
  v250 = *(_DWORD *)(v37 + 32);
  v248 = &off_24C335AB8;
  v251 = *(_BYTE *)(v37 + 36);
  if (*(char *)(v37 + 63) < 0)
    std::string::__init_copy_ctor_external(&v252, *(const std::string::value_type **)(v37 + 40), *(_QWORD *)(v37 + 48));
  else
    v252 = *(std::string *)(v37 + 40);
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v244, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v244 = *(std::string *)(a9 + 8);
  v51 = *(_DWORD *)(a9 + 32);
  v243 = off_24C335B18;
  v246 = *(_QWORD *)(a9 + 36);
  v52 = *(_DWORD *)(a9 + 44);
  v109 = v51;
  v245 = v51;
  v247 = v52;
  v234 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v235, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v235 = *(std::string *)(a10 + 8);
  v236 = *(_DWORD *)(a10 + 32);
  v234 = &off_24C335A98;
  v237 = *(_BYTE *)(a10 + 36);
  v53 = *(const void **)(a10 + 64);
  v54 = *(_QWORD *)(a10 + 48);
  v238 = &off_24C331510;
  v239 = v54;
  v240 = v54;
  if (v54)
    v55 = (void *)operator new[]();
  else
    v55 = 0;
  v241 = v55;
  v242 = 1;
  if (v53)
    memcpy(v55, v53, v54);
  else
    bzero(v55, v54);
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v231, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v231 = *(std::string *)(a11 + 8);
  v107 = *(_DWORD *)(a11 + 32);
  v232 = v107;
  v230 = off_24C335AF8;
  v106 = *(_QWORD *)(a11 + 36);
  v233 = v106;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v226, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v226 = *(std::string *)(a12 + 8);
  v56 = *(_DWORD *)(a12 + 32);
  v225 = off_24C335B18;
  v228 = *(_QWORD *)(a12 + 36);
  v57 = *(_DWORD *)(a12 + 44);
  v105 = v56;
  v227 = v56;
  v229 = v57;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v222, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v222 = *(std::string *)(a13 + 8);
  v104 = *(_DWORD *)(a13 + 32);
  v223 = v104;
  v221 = off_24C335AF8;
  v103 = *(_QWORD *)(a13 + 36);
  v224 = v103;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v218, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v218 = *(std::string *)(a14 + 8);
  v102 = *(_DWORD *)(a14 + 32);
  v219 = v102;
  v217 = off_24C335AF8;
  v101 = *(_QWORD *)(a14 + 36);
  v220 = v101;
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v214, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v214 = *(std::string *)(a15 + 8);
  v100 = *(_DWORD *)(a15 + 32);
  v215 = v100;
  v213 = off_24C335AF8;
  v99 = *(_QWORD *)(a15 + 36);
  v216 = v99;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v210, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v210 = *(std::string *)(a16 + 8);
  v98 = *(_DWORD *)(a16 + 32);
  v211 = v98;
  v209 = off_24C335AF8;
  v97 = *(_QWORD *)(a16 + 36);
  v212 = v97;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v206, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v206 = *(std::string *)(a17 + 8);
  v96 = *(_DWORD *)(a17 + 32);
  v207 = v96;
  v205 = off_24C335AF8;
  v95 = *(_QWORD *)(a17 + 36);
  v208 = v95;
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v201, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v201 = *(std::string *)(a18 + 8);
  v58 = *(_DWORD *)(a18 + 32);
  v200 = off_24C335B18;
  v203 = *(_QWORD *)(a18 + 36);
  v59 = *(_DWORD *)(a18 + 44);
  v94 = v58;
  v202 = v58;
  v204 = v59;
  v195 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v196, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v196 = *(std::string *)(a19 + 8);
  v197 = *(_DWORD *)(a19 + 32);
  v195 = &off_24C335AB8;
  v198 = *(_BYTE *)(a19 + 36);
  if (*(char *)(a19 + 63) < 0)
    std::string::__init_copy_ctor_external(&v199, *(const std::string::value_type **)(a19 + 40), *(_QWORD *)(a19 + 48));
  else
    v199 = *(std::string *)(a19 + 40);
  v190 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v191, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v191 = *(std::string *)(a20 + 8);
  v192 = *(_DWORD *)(a20 + 32);
  v190 = &off_24C335AB8;
  v193 = *(_BYTE *)(a20 + 36);
  if (*(char *)(a20 + 63) < 0)
    std::string::__init_copy_ctor_external(&v194, *(const std::string::value_type **)(a20 + 40), *(_QWORD *)(a20 + 48));
  else
    v194 = *(std::string *)(a20 + 40);
  v185 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v186, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v186 = *(std::string *)(a21 + 8);
  v187 = *(_DWORD *)(a21 + 32);
  v185 = &off_24C335AB8;
  v188 = *(_BYTE *)(a21 + 36);
  if (*(char *)(a21 + 63) < 0)
    std::string::__init_copy_ctor_external(&v189, *(const std::string::value_type **)(a21 + 40), *(_QWORD *)(a21 + 48));
  else
    v189 = *(std::string *)(a21 + 40);
  v180 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v181, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v181 = *(std::string *)(a22 + 8);
  v182 = *(_DWORD *)(a22 + 32);
  v180 = &off_24C335AB8;
  v183 = *(_BYTE *)(a22 + 36);
  if (*(char *)(a22 + 63) < 0)
    std::string::__init_copy_ctor_external(&v184, *(const std::string::value_type **)(a22 + 40), *(_QWORD *)(a22 + 48));
  else
    v184 = *(std::string *)(a22 + 40);
  v175 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v176, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v176 = *(std::string *)(a23 + 8);
  v177 = *(_DWORD *)(a23 + 32);
  v175 = &off_24C335AB8;
  v178 = *(_BYTE *)(a23 + 36);
  if (*(char *)(a23 + 63) < 0)
    std::string::__init_copy_ctor_external(&v179, *(const std::string::value_type **)(a23 + 40), *(_QWORD *)(a23 + 48));
  else
    v179 = *(std::string *)(a23 + 40);
  v170 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v171, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v171 = *(std::string *)(a24 + 8);
  v172 = *(_DWORD *)(a24 + 32);
  v170 = &off_24C335AB8;
  v173 = *(_BYTE *)(a24 + 36);
  if (*(char *)(a24 + 63) < 0)
    std::string::__init_copy_ctor_external(&v174, *(const std::string::value_type **)(a24 + 40), *(_QWORD *)(a24 + 48));
  else
    v174 = *(std::string *)(a24 + 40);
  if (*(char *)(a25 + 31) < 0)
    std::string::__init_copy_ctor_external(&v166, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  else
    v166 = *(std::string *)(a25 + 8);
  v60 = *(_DWORD *)(a25 + 32);
  v165 = off_24C335B18;
  v168 = *(_QWORD *)(a25 + 36);
  v61 = *(_DWORD *)(a25 + 44);
  v92 = v60;
  v167 = v60;
  v169 = v61;
  if (*(char *)(a26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v161, *(const std::string::value_type **)(a26 + 8), *(_QWORD *)(a26 + 16));
  else
    v161 = *(std::string *)(a26 + 8);
  v62 = *(_DWORD *)(a26 + 32);
  v160 = off_24C335B18;
  v163 = *(_QWORD *)(a26 + 36);
  v63 = *(_DWORD *)(a26 + 44);
  v91 = v62;
  v162 = v62;
  v164 = v63;
  if (*(char *)(a27 + 31) < 0)
    std::string::__init_copy_ctor_external(&v157, *(const std::string::value_type **)(a27 + 8), *(_QWORD *)(a27 + 16));
  else
    v157 = *(std::string *)(a27 + 8);
  v90 = *(_DWORD *)(a27 + 32);
  v158 = v90;
  v156 = off_24C335AF8;
  v89 = *(_QWORD *)(a27 + 36);
  v159 = v89;
  v151 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v152, *(const std::string::value_type **)(a28 + 8), *(_QWORD *)(a28 + 16));
  else
    v152 = *(std::string *)(a28 + 8);
  v153 = *(_DWORD *)(a28 + 32);
  v151 = &off_24C335AB8;
  v154 = *(_BYTE *)(a28 + 36);
  if (*(char *)(a28 + 63) < 0)
    std::string::__init_copy_ctor_external(&v155, *(const std::string::value_type **)(a28 + 40), *(_QWORD *)(a28 + 48));
  else
    v155 = *(std::string *)(a28 + 40);
  v146 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a29 + 31) < 0)
    std::string::__init_copy_ctor_external(&v147, *(const std::string::value_type **)(a29 + 8), *(_QWORD *)(a29 + 16));
  else
    v147 = *(std::string *)(a29 + 8);
  v148 = *(_DWORD *)(a29 + 32);
  v146 = &off_24C335AB8;
  v149 = *(_BYTE *)(a29 + 36);
  if (*(char *)(a29 + 63) < 0)
    std::string::__init_copy_ctor_external(&v150, *(const std::string::value_type **)(a29 + 40), *(_QWORD *)(a29 + 48));
  else
    v150 = *(std::string *)(a29 + 40);
  v141 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v142, *(const std::string::value_type **)(a30 + 8), *(_QWORD *)(a30 + 16));
  else
    v142 = *(std::string *)(a30 + 8);
  v143 = *(_DWORD *)(a30 + 32);
  v141 = &off_24C335AB8;
  v144 = *(_BYTE *)(a30 + 36);
  if (*(char *)(a30 + 63) < 0)
    std::string::__init_copy_ctor_external(&v145, *(const std::string::value_type **)(a30 + 40), *(_QWORD *)(a30 + 48));
  else
    v145 = *(std::string *)(a30 + 40);
  v136 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a31 + 31) < 0)
    std::string::__init_copy_ctor_external(&v137, *(const std::string::value_type **)(a31 + 8), *(_QWORD *)(a31 + 16));
  else
    v137 = *(std::string *)(a31 + 8);
  v138 = *(_DWORD *)(a31 + 32);
  v136 = &off_24C335AB8;
  v139 = *(_BYTE *)(a31 + 36);
  if (*(char *)(a31 + 63) < 0)
    std::string::__init_copy_ctor_external(&v140, *(const std::string::value_type **)(a31 + 40), *(_QWORD *)(a31 + 48));
  else
    v140 = *(std::string *)(a31 + 40);
  if (*(char *)(a32 + 31) < 0)
    std::string::__init_copy_ctor_external(&v133, *(const std::string::value_type **)(a32 + 8), *(_QWORD *)(a32 + 16));
  else
    v133 = *(std::string *)(a32 + 8);
  v88 = *(_DWORD *)(a32 + 32);
  v134 = v88;
  v132 = off_24C335AF8;
  v87 = *(_QWORD *)(a32 + 36);
  v135 = v87;
  if (*(char *)(a33 + 31) < 0)
    std::string::__init_copy_ctor_external(&v129, *(const std::string::value_type **)(a33 + 8), *(_QWORD *)(a33 + 16));
  else
    v129 = *(std::string *)(a33 + 8);
  v86 = *(_DWORD *)(a33 + 32);
  v130 = v86;
  v128 = off_24C335AF8;
  v85 = *(_QWORD *)(a33 + 36);
  v131 = v85;
  if (*(char *)(a34 + 31) < 0)
    std::string::__init_copy_ctor_external(&v125, *(const std::string::value_type **)(a34 + 8), *(_QWORD *)(a34 + 16));
  else
    v125 = *(std::string *)(a34 + 8);
  v84 = *(_DWORD *)(a34 + 32);
  v126 = v84;
  v83 = *(_QWORD *)(a34 + 36);
  v127 = v83;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v418, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v418 = __s;
  v419 = v123;
  v417 = off_24C335AF8;
  v420 = v121;
  if (SHIBYTE(v263.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v414, v263.__r_.__value_.__l.__data_, v263.__r_.__value_.__l.__size_);
  else
    v414 = v263;
  v415 = v119;
  v413 = off_24C335AF8;
  v416 = v117;
  if (SHIBYTE(v258.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v409, v258.__r_.__value_.__l.__data_, v258.__r_.__value_.__l.__size_);
  else
    v409 = v258;
  v408 = off_24C335AD8;
  v411 = v260;
  v410 = v114;
  v412 = v261;
  v64 = SHIBYTE(v254.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v254.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v405, v254.__r_.__value_.__l.__data_, v254.__r_.__value_.__l.__size_);
  else
    v405 = v254;
  v406 = v112;
  v404 = off_24C335AF8;
  v407 = v111;
  v399 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v249.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v400, v249.__r_.__value_.__l.__data_, v249.__r_.__value_.__l.__size_);
  else
    v400 = v249;
  v401 = v250;
  v399 = &off_24C335AB8;
  v402 = v251;
  if (SHIBYTE(v252.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v403, v252.__r_.__value_.__l.__data_, v252.__r_.__value_.__l.__size_);
  else
    v403 = v252;
  v394 = (uint64_t (**)())off_24C335D90;
  v65 = SHIBYTE(v244.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v244.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v395, v244.__r_.__value_.__l.__data_, v244.__r_.__value_.__l.__size_);
  else
    v395 = v244;
  v394 = off_24C335B18;
  v397 = v246;
  v396 = v109;
  v398 = v247;
  v385 = (uint64_t (**)())off_24C335D90;
  v124 = v64;
  if (SHIBYTE(v235.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v386, v235.__r_.__value_.__l.__data_, v235.__r_.__value_.__l.__size_);
  else
    v386 = v235;
  v387 = v236;
  v385 = &off_24C335A98;
  v388 = v237;
  v66 = v241;
  v67 = v239;
  v389 = &off_24C331510;
  v390 = v239;
  v391 = v239;
  if (v239)
    v68 = (void *)operator new[]();
  else
    v68 = 0;
  v392 = v68;
  v393 = 1;
  if (v66)
    memcpy(v68, v66, v67);
  else
    bzero(v68, v67);
  v381 = (uint64_t (**)())off_24C335D90;
  v69 = SHIBYTE(v231.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v231.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v382, v231.__r_.__value_.__l.__data_, v231.__r_.__value_.__l.__size_);
  else
    v382 = v231;
  v383 = v107;
  v381 = off_24C335AF8;
  v384 = v106;
  v376 = (uint64_t (**)())off_24C335D90;
  v70 = SHIBYTE(v226.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v226.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v377, v226.__r_.__value_.__l.__data_, v226.__r_.__value_.__l.__size_);
  else
    v377 = v226;
  v376 = off_24C335B18;
  v379 = v228;
  v378 = v105;
  v380 = v229;
  v372 = (uint64_t (**)())off_24C335D90;
  v122 = SHIBYTE(v222.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v222.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v373, v222.__r_.__value_.__l.__data_, v222.__r_.__value_.__l.__size_);
  else
    v373 = v222;
  v374 = v104;
  v372 = off_24C335AF8;
  v375 = v103;
  v368 = (uint64_t (**)())off_24C335D90;
  v120 = SHIBYTE(v218.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v218.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v369, v218.__r_.__value_.__l.__data_, v218.__r_.__value_.__l.__size_);
  else
    v369 = v218;
  v370 = v102;
  v368 = off_24C335AF8;
  v371 = v101;
  v364 = (uint64_t (**)())off_24C335D90;
  v118 = SHIBYTE(v214.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v214.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v365, v214.__r_.__value_.__l.__data_, v214.__r_.__value_.__l.__size_);
  else
    v365 = v214;
  v366 = v100;
  v364 = off_24C335AF8;
  v367 = v99;
  v360 = (uint64_t (**)())off_24C335D90;
  v116 = SHIBYTE(v210.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v210.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v361, v210.__r_.__value_.__l.__data_, v210.__r_.__value_.__l.__size_);
  else
    v361 = v210;
  v362 = v98;
  v360 = off_24C335AF8;
  v363 = v97;
  v356 = (uint64_t (**)())off_24C335D90;
  v115 = SHIBYTE(v206.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v206.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v357, v206.__r_.__value_.__l.__data_, v206.__r_.__value_.__l.__size_);
  else
    v357 = v206;
  v358 = v96;
  v356 = off_24C335AF8;
  v359 = v95;
  v351 = (uint64_t (**)())off_24C335D90;
  v113 = SHIBYTE(v201.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v201.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v352, v201.__r_.__value_.__l.__data_, v201.__r_.__value_.__l.__size_);
  else
    v352 = v201;
  v351 = off_24C335B18;
  v354 = v203;
  v353 = v94;
  v355 = v204;
  v346 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v196.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v347, v196.__r_.__value_.__l.__data_, v196.__r_.__value_.__l.__size_);
  else
    v347 = v196;
  v348 = v197;
  v346 = &off_24C335AB8;
  v349 = v198;
  if (SHIBYTE(v199.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v350, v199.__r_.__value_.__l.__data_, v199.__r_.__value_.__l.__size_);
  else
    v350 = v199;
  v341 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v342, v191.__r_.__value_.__l.__data_, v191.__r_.__value_.__l.__size_);
  else
    v342 = v191;
  v343 = v192;
  v341 = &off_24C335AB8;
  v344 = v193;
  if (SHIBYTE(v194.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v345, v194.__r_.__value_.__l.__data_, v194.__r_.__value_.__l.__size_);
  else
    v345 = v194;
  v336 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v186.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v337, v186.__r_.__value_.__l.__data_, v186.__r_.__value_.__l.__size_);
  else
    v337 = v186;
  v338 = v187;
  v336 = &off_24C335AB8;
  v339 = v188;
  if (SHIBYTE(v189.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v340, v189.__r_.__value_.__l.__data_, v189.__r_.__value_.__l.__size_);
  else
    v340 = v189;
  v331 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v181.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v332, v181.__r_.__value_.__l.__data_, v181.__r_.__value_.__l.__size_);
  else
    v332 = v181;
  v333 = v182;
  v331 = &off_24C335AB8;
  v334 = v183;
  if (SHIBYTE(v184.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v335, v184.__r_.__value_.__l.__data_, v184.__r_.__value_.__l.__size_);
  else
    v335 = v184;
  v326 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v176.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v327, v176.__r_.__value_.__l.__data_, v176.__r_.__value_.__l.__size_);
  else
    v327 = v176;
  v328 = v177;
  v326 = &off_24C335AB8;
  v329 = v178;
  if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v330, v179.__r_.__value_.__l.__data_, v179.__r_.__value_.__l.__size_);
  else
    v330 = v179;
  v321 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v171.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v322, v171.__r_.__value_.__l.__data_, v171.__r_.__value_.__l.__size_);
  else
    v322 = v171;
  v323 = v172;
  v321 = &off_24C335AB8;
  v324 = v173;
  if (SHIBYTE(v174.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v325, v174.__r_.__value_.__l.__data_, v174.__r_.__value_.__l.__size_);
  else
    v325 = v174;
  v316 = (uint64_t (**)())off_24C335D90;
  v71 = SHIBYTE(v166.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v166.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v317, v166.__r_.__value_.__l.__data_, v166.__r_.__value_.__l.__size_);
  else
    v317 = v166;
  v316 = off_24C335B18;
  v319 = v168;
  v318 = v92;
  v320 = v169;
  v311 = (uint64_t (**)())off_24C335D90;
  v72 = SHIBYTE(v161.__r_.__value_.__r.__words[2]);
  v110 = v65;
  if (SHIBYTE(v161.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v312, v161.__r_.__value_.__l.__data_, v161.__r_.__value_.__l.__size_);
  else
    v312 = v161;
  v311 = off_24C335B18;
  v314 = v163;
  v313 = v91;
  v315 = v164;
  v307 = (uint64_t (**)())off_24C335D90;
  v73 = SHIBYTE(v157.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v157.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v308, v157.__r_.__value_.__l.__data_, v157.__r_.__value_.__l.__size_);
  else
    v308 = v157;
  v309 = v90;
  v307 = off_24C335AF8;
  v310 = v89;
  v302 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v152.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v303, v152.__r_.__value_.__l.__data_, v152.__r_.__value_.__l.__size_);
  else
    v303 = v152;
  v304 = v153;
  v302 = &off_24C335AB8;
  v305 = v154;
  if (SHIBYTE(v155.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v306, v155.__r_.__value_.__l.__data_, v155.__r_.__value_.__l.__size_);
  else
    v306 = v155;
  v297 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v147.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v298, v147.__r_.__value_.__l.__data_, v147.__r_.__value_.__l.__size_);
  else
    v298 = v147;
  v299 = v148;
  v297 = &off_24C335AB8;
  v300 = v149;
  if (SHIBYTE(v150.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v301, v150.__r_.__value_.__l.__data_, v150.__r_.__value_.__l.__size_);
  else
    v301 = v150;
  v292 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v293, v142.__r_.__value_.__l.__data_, v142.__r_.__value_.__l.__size_);
  else
    v293 = v142;
  v294 = v143;
  v292 = &off_24C335AB8;
  v295 = v144;
  if (SHIBYTE(v145.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v296, v145.__r_.__value_.__l.__data_, v145.__r_.__value_.__l.__size_);
  else
    v296 = v145;
  v287 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v137.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v288, v137.__r_.__value_.__l.__data_, v137.__r_.__value_.__l.__size_);
  else
    v288 = v137;
  v289 = v138;
  v287 = &off_24C335AB8;
  v290 = v139;
  v108 = v71;
  if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v291, v140.__r_.__value_.__l.__data_, v140.__r_.__value_.__l.__size_);
  else
    v291 = v140;
  v283 = (uint64_t (**)())off_24C335D90;
  v74 = SHIBYTE(v133.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v133.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v284, v133.__r_.__value_.__l.__data_, v133.__r_.__value_.__l.__size_);
  else
    v284 = v133;
  v285 = v88;
  v283 = off_24C335AF8;
  v286 = v87;
  v279 = (uint64_t (**)())off_24C335D90;
  v75 = SHIBYTE(v129.__r_.__value_.__r.__words[2]);
  v82 = v69;
  if (SHIBYTE(v129.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v280, v129.__r_.__value_.__l.__data_, v129.__r_.__value_.__l.__size_);
  else
    v280 = v129;
  v281 = v86;
  v279 = off_24C335AF8;
  v282 = v85;
  v275 = (uint64_t (**)())off_24C335D90;
  v76 = SHIBYTE(v125.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v125.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v125.__r_.__value_.__l.__data_, v125.__r_.__value_.__l.__size_);
  else
    __p = v125;
  v277 = v84;
  v275 = off_24C335AF8;
  v278 = v83;
  mediaplatform::DatabaseColumnTuple<3ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::DatabaseColumnTuple(v48, (uint64_t)&v417, (uint64_t)&v413, (uint64_t)&v408, (uint64_t)&v404, (uint64_t)&v399, (uint64_t)&v394, (uint64_t)&v385, (uint64_t)&v381, (uint64_t)&v376, (uint64_t)&v372, (uint64_t)&v368, (uint64_t)&v364, (uint64_t)&v360, (uint64_t)&v356, (uint64_t)&v351, (uint64_t)&v346, (uint64_t)&v341, (uint64_t)&v336,
    (uint64_t)&v331,
    (uint64_t)&v326,
    (uint64_t)&v321,
    (uint64_t)&v316,
    (uint64_t)&v311,
    (uint64_t)&v307,
    (uint64_t)&v302,
    (uint64_t)&v297,
    (uint64_t)&v292,
    (uint64_t)&v287,
    (uint64_t)&v283,
    (uint64_t)&v279,
    (uint64_t)&v275);
  v275 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v279 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v280.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v280.__r_.__value_.__l.__data_);
  v283 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v284.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v284.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v287);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v292);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v297);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v302);
  v307 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v308.__r_.__value_.__l.__data_);
  v311 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v312.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v312.__r_.__value_.__l.__data_);
  v316 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v317.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v317.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v321);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v326);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v331);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v336);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v341);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v346);
  v351 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v352.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v352.__r_.__value_.__l.__data_);
  v356 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v357.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v357.__r_.__value_.__l.__data_);
  v360 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v361.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v361.__r_.__value_.__l.__data_);
  v364 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v365.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v365.__r_.__value_.__l.__data_);
  v368 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v369.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v369.__r_.__value_.__l.__data_);
  v372 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v373.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v373.__r_.__value_.__l.__data_);
  v376 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v377.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v377.__r_.__value_.__l.__data_);
  v381 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v382.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v382.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)&v385);
  v394 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v395.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v395.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v399);
  v404 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v405.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v405.__r_.__value_.__l.__data_);
  v408 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v409.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v409.__r_.__value_.__l.__data_);
  v413 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v414.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v414.__r_.__value_.__l.__data_);
  v417 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v418.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v418.__r_.__value_.__l.__data_);
  *(_QWORD *)(v48 + 1696) = off_24C335D90;
  if (SHIBYTE(v271.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)(v48 + 1704), v271.__r_.__value_.__l.__data_, v271.__r_.__value_.__l.__size_);
  else
    *(std::string *)(v48 + 1704) = v271;
  *(_DWORD *)(v48 + 1728) = v272;
  *(_QWORD *)(v48 + 1696) = &off_24C335AB8;
  *(_BYTE *)(v48 + 1732) = v273;
  v77 = (std::string *)(v48 + 1736);
  if (SHIBYTE(v274.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v77, v274.__r_.__value_.__l.__data_, v274.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v77->__r_.__value_.__l.__data_ = *(_OWORD *)&v274.__r_.__value_.__l.__data_;
    *(_QWORD *)(v48 + 1752) = *((_QWORD *)&v274.__r_.__value_.__l + 2);
  }
  if ((v76 & 0x80000000) == 0)
  {
    if ((v75 & 0x80000000) == 0)
      goto LABEL_317;
LABEL_353:
    operator delete(v129.__r_.__value_.__l.__data_);
    if ((v74 & 0x80000000) == 0)
      goto LABEL_318;
    goto LABEL_354;
  }
  operator delete(v125.__r_.__value_.__l.__data_);
  if (v75 < 0)
    goto LABEL_353;
LABEL_317:
  if ((v74 & 0x80000000) == 0)
    goto LABEL_318;
LABEL_354:
  operator delete(v133.__r_.__value_.__l.__data_);
LABEL_318:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v136);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v141);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v146);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v151);
  if (v73 < 0)
    operator delete(v157.__r_.__value_.__l.__data_);
  if (v72 < 0)
    operator delete(v161.__r_.__value_.__l.__data_);
  if (v108 < 0)
    operator delete(v166.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v170);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v175);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v180);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v185);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v190);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v195);
  if (v113 < 0)
    operator delete(v201.__r_.__value_.__l.__data_);
  if (v115 < 0)
    operator delete(v206.__r_.__value_.__l.__data_);
  if (v116 < 0)
    operator delete(v210.__r_.__value_.__l.__data_);
  if (v118 < 0)
    operator delete(v214.__r_.__value_.__l.__data_);
  if (v120 < 0)
    operator delete(v218.__r_.__value_.__l.__data_);
  if (v122 < 0)
    operator delete(v222.__r_.__value_.__l.__data_);
  if (v70 < 0)
    operator delete(v226.__r_.__value_.__l.__data_);
  if (v82 < 0)
    operator delete(v231.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)&v234);
  if (v110 < 0)
    operator delete(v244.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v248);
  if (v124 < 0)
    operator delete(v254.__r_.__value_.__l.__data_);
  if (SHIBYTE(v258.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v258.__r_.__value_.__l.__data_);
  if (SHIBYTE(v263.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v263.__r_.__value_.__l.__data_);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__s.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v270);
  *(_QWORD *)(v48 + 1760) = off_24C335D90;
  if (*(char *)(v93 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(v48 + 1768), *(const std::string::value_type **)(v93 + 8), *(_QWORD *)(v93 + 16));
  }
  else
  {
    v78 = *(_OWORD *)(v93 + 8);
    *(_QWORD *)(v48 + 1784) = *(_QWORD *)(v93 + 24);
    *(_OWORD *)(v48 + 1768) = v78;
  }
  *(_DWORD *)(v48 + 1792) = *(_DWORD *)(v93 + 32);
  *(_QWORD *)(v48 + 1760) = &off_24C335AB8;
  *(_BYTE *)(v48 + 1796) = *(_BYTE *)(v93 + 36);
  v79 = (std::string *)(v48 + 1800);
  if (*(char *)(v93 + 63) < 0)
  {
    std::string::__init_copy_ctor_external(v79, *(const std::string::value_type **)(v93 + 40), *(_QWORD *)(v93 + 48));
  }
  else
  {
    v80 = *(_OWORD *)(v93 + 40);
    *(_QWORD *)(v48 + 1816) = *(_QWORD *)(v93 + 56);
    *(_OWORD *)&v79->__r_.__value_.__l.__data_ = v80;
  }
  return v48;
}

void sub_20A8CBCE0(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 1760) = v3;
  if (*(char *)(v1 + 1791) < 0)
    operator delete(*v2);
  mediaplatform::DatabaseColumnTuple<2ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(STACK[0x2D0]);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<1ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1760);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1696);
  *(_QWORD *)(a1 + 1648) = off_24C335D90;
  if (*(char *)(a1 + 1679) < 0)
    operator delete(*(void **)(a1 + 1656));
  *(_QWORD *)(a1 + 1600) = off_24C335D90;
  if (*(char *)(a1 + 1631) < 0)
    operator delete(*(void **)(a1 + 1608));
  return mediaplatform::DatabaseColumnTuple<5ul,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<2ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1696);
  *(_QWORD *)(a1 + 1648) = off_24C335D90;
  if (*(char *)(a1 + 1679) < 0)
    operator delete(*(void **)(a1 + 1656));
  *(_QWORD *)(a1 + 1600) = off_24C335D90;
  if (*(char *)(a1 + 1631) < 0)
    operator delete(*(void **)(a1 + 1608));
  return mediaplatform::DatabaseColumnTuple<5ul,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<3ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v39;
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  const void *v44;
  size_t v45;
  void *v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  uint64_t v56;
  int v57;
  int v58;
  const void *v59;
  size_t v60;
  void *v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  std::string *v70;
  int v71;
  std::string *v72;
  __int128 v73;
  uint64_t result;
  int v75;
  int v76;
  int v77;
  int v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  int v85;
  int v86;
  int v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  uint64_t v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  std::string v115;
  int v116;
  uint64_t v117;
  uint64_t (**v118)();
  std::string v119;
  int v120;
  uint64_t v121;
  uint64_t (**v122)();
  std::string v123;
  int v124;
  uint64_t v125;
  uint64_t (**v126)();
  std::string v127;
  int v128;
  char v129;
  std::string v130;
  uint64_t (**v131)();
  std::string v132;
  int v133;
  char v134;
  std::string v135;
  uint64_t (**v136)();
  std::string v137;
  int v138;
  char v139;
  std::string v140;
  uint64_t (**v141)();
  std::string v142;
  int v143;
  char v144;
  std::string v145;
  uint64_t (**v146)();
  std::string v147;
  int v148;
  uint64_t v149;
  uint64_t (**v150)();
  std::string v151;
  int v152;
  uint64_t v153;
  int v154;
  uint64_t (**v155)();
  std::string v156;
  int v157;
  uint64_t v158;
  int v159;
  uint64_t (**v160)();
  std::string v161;
  int v162;
  char v163;
  std::string v164;
  uint64_t (**v165)();
  std::string v166;
  int v167;
  char v168;
  std::string v169;
  uint64_t (**v170)();
  std::string v171;
  int v172;
  char v173;
  std::string v174;
  uint64_t (**v175)();
  std::string v176;
  int v177;
  char v178;
  std::string v179;
  uint64_t (**v180)();
  std::string v181;
  int v182;
  char v183;
  std::string v184;
  uint64_t (**v185)();
  std::string v186;
  int v187;
  char v188;
  std::string v189;
  uint64_t (**v190)();
  std::string v191;
  int v192;
  uint64_t v193;
  int v194;
  uint64_t (**v195)();
  std::string v196;
  int v197;
  uint64_t v198;
  uint64_t (**v199)();
  std::string v200;
  int v201;
  uint64_t v202;
  uint64_t (**v203)();
  std::string v204;
  int v205;
  uint64_t v206;
  uint64_t (**v207)();
  std::string v208;
  int v209;
  uint64_t v210;
  uint64_t (**v211)();
  std::string v212;
  int v213;
  uint64_t v214;
  uint64_t (**v215)();
  std::string v216;
  int v217;
  uint64_t v218;
  int v219;
  uint64_t (**v220)();
  std::string v221;
  int v222;
  uint64_t v223;
  uint64_t (**v224)();
  std::string v225;
  int v226;
  char v227;
  void (**v228)(mediaplatform::Data *__hidden);
  size_t v229;
  size_t v230;
  const void *v231;
  char v232;
  uint64_t (**v233)();
  std::string v234;
  int v235;
  uint64_t v236;
  int v237;
  uint64_t (**v238)();
  std::string v239;
  int v240;
  char v241;
  std::string v242;
  uint64_t (**v243)();
  std::string v244;
  int v245;
  uint64_t v246;
  uint64_t (**v247)();
  std::string __s;
  int v249;
  uint64_t v250;
  int v251;
  uint64_t (**v252)();
  std::string v253;
  int v254;
  uint64_t v255;
  uint64_t (**v256)();
  std::string __p;
  int v258;
  uint64_t v259;
  uint64_t (**v260)();
  std::string v261;
  int v262;
  uint64_t v263;
  uint64_t (**v264)();
  std::string v265;
  int v266;
  uint64_t v267;
  uint64_t (**v268)();
  std::string v269;
  int v270;
  char v271;
  std::string v272;
  uint64_t (**v273)();
  std::string v274;
  int v275;
  char v276;
  std::string v277;
  uint64_t (**v278)();
  std::string v279;
  int v280;
  char v281;
  std::string v282;
  uint64_t (**v283)();
  std::string v284;
  int v285;
  char v286;
  std::string v287;
  uint64_t (**v288)();
  std::string v289;
  int v290;
  uint64_t v291;
  uint64_t (**v292)();
  std::string v293;
  int v294;
  uint64_t v295;
  int v296;
  uint64_t (**v297)();
  std::string v298;
  int v299;
  uint64_t v300;
  int v301;
  uint64_t (**v302)();
  std::string v303;
  int v304;
  char v305;
  std::string v306;
  uint64_t (**v307)();
  std::string v308;
  int v309;
  char v310;
  std::string v311;
  uint64_t (**v312)();
  std::string v313;
  int v314;
  char v315;
  std::string v316;
  uint64_t (**v317)();
  std::string v318;
  int v319;
  char v320;
  std::string v321;
  uint64_t (**v322)();
  std::string v323;
  int v324;
  char v325;
  std::string v326;
  uint64_t (**v327)();
  std::string v328;
  int v329;
  char v330;
  std::string v331;
  uint64_t (**v332)();
  std::string v333;
  int v334;
  uint64_t v335;
  int v336;
  uint64_t (**v337)();
  std::string v338;
  int v339;
  uint64_t v340;
  uint64_t (**v341)();
  std::string v342;
  int v343;
  uint64_t v344;
  uint64_t (**v345)();
  std::string v346;
  int v347;
  uint64_t v348;
  uint64_t (**v349)();
  std::string v350;
  int v351;
  uint64_t v352;
  uint64_t (**v353)();
  std::string v354;
  int v355;
  uint64_t v356;
  uint64_t (**v357)();
  std::string v358;
  int v359;
  uint64_t v360;
  int v361;
  uint64_t (**v362)();
  std::string v363;
  int v364;
  uint64_t v365;
  uint64_t (**v366)();
  std::string v367;
  int v368;
  char v369;
  void (**v370)(mediaplatform::Data *__hidden);
  size_t v371;
  size_t v372;
  void *v373;
  char v374;
  uint64_t (**v375)();
  std::string v376;
  int v377;
  uint64_t v378;
  int v379;
  uint64_t (**v380)();
  std::string v381;
  int v382;
  char v383;
  std::string v384;
  uint64_t (**v385)();
  std::string v386;
  int v387;
  uint64_t v388;
  uint64_t (**v389)();
  std::string v390;
  int v391;
  uint64_t v392;
  int v393;

  if (*(char *)(a3 + 31) < 0)
    std::string::__init_copy_ctor_external(&v253, *(const std::string::value_type **)(a3 + 8), *(_QWORD *)(a3 + 16));
  else
    v253 = *(std::string *)(a3 + 8);
  v254 = *(_DWORD *)(a3 + 32);
  v252 = off_24C335AF8;
  v255 = *(_QWORD *)(a3 + 36);
  if (*(char *)(a4 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(a4 + 8), *(_QWORD *)(a4 + 16));
  else
    __s = *(std::string *)(a4 + 8);
  v39 = *(_DWORD *)(a4 + 32);
  v247 = off_24C335AD8;
  v250 = *(_QWORD *)(a4 + 36);
  v40 = *(_DWORD *)(a4 + 44);
  v112 = v39;
  v249 = v39;
  v251 = v40;
  v88 = a2;
  if (*(char *)(a5 + 31) < 0)
    std::string::__init_copy_ctor_external(&v244, *(const std::string::value_type **)(a5 + 8), *(_QWORD *)(a5 + 16));
  else
    v244 = *(std::string *)(a5 + 8);
  v110 = *(_DWORD *)(a5 + 32);
  v245 = v110;
  v243 = off_24C335AF8;
  v41 = *(_QWORD *)(a5 + 36);
  v246 = v41;
  v238 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a6 + 31) < 0)
    std::string::__init_copy_ctor_external(&v239, *(const std::string::value_type **)(a6 + 8), *(_QWORD *)(a6 + 16));
  else
    v239 = *(std::string *)(a6 + 8);
  v240 = *(_DWORD *)(a6 + 32);
  v238 = &off_24C335AB8;
  v241 = *(_BYTE *)(a6 + 36);
  if (*(char *)(a6 + 63) < 0)
    std::string::__init_copy_ctor_external(&v242, *(const std::string::value_type **)(a6 + 40), *(_QWORD *)(a6 + 48));
  else
    v242 = *(std::string *)(a6 + 40);
  if (*(char *)(a7 + 31) < 0)
    std::string::__init_copy_ctor_external(&v234, *(const std::string::value_type **)(a7 + 8), *(_QWORD *)(a7 + 16));
  else
    v234 = *(std::string *)(a7 + 8);
  v42 = *(_DWORD *)(a7 + 32);
  v233 = off_24C335B18;
  v236 = *(_QWORD *)(a7 + 36);
  v43 = *(_DWORD *)(a7 + 44);
  v108 = v42;
  v235 = v42;
  v237 = v43;
  v224 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a8 + 31) < 0)
    std::string::__init_copy_ctor_external(&v225, *(const std::string::value_type **)(a8 + 8), *(_QWORD *)(a8 + 16));
  else
    v225 = *(std::string *)(a8 + 8);
  v226 = *(_DWORD *)(a8 + 32);
  v224 = &off_24C335A98;
  v227 = *(_BYTE *)(a8 + 36);
  v44 = *(const void **)(a8 + 64);
  v45 = *(_QWORD *)(a8 + 48);
  v228 = &off_24C331510;
  v229 = v45;
  v230 = v45;
  if (v45)
    v46 = (void *)operator new[]();
  else
    v46 = 0;
  v231 = v46;
  v232 = 1;
  if (v44)
    memcpy(v46, v44, v45);
  else
    bzero(v46, v45);
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v221, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v221 = *(std::string *)(a9 + 8);
  v106 = *(_DWORD *)(a9 + 32);
  v222 = v106;
  v220 = off_24C335AF8;
  v104 = *(_QWORD *)(a9 + 36);
  v223 = v104;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v216, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v216 = *(std::string *)(a10 + 8);
  v47 = *(_DWORD *)(a10 + 32);
  v215 = off_24C335B18;
  v218 = *(_QWORD *)(a10 + 36);
  v48 = *(_DWORD *)(a10 + 44);
  v102 = v47;
  v217 = v47;
  v219 = v48;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v212, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v212 = *(std::string *)(a11 + 8);
  v100 = *(_DWORD *)(a11 + 32);
  v213 = v100;
  v211 = off_24C335AF8;
  v98 = *(_QWORD *)(a11 + 36);
  v214 = v98;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v208, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v208 = *(std::string *)(a12 + 8);
  v97 = *(_DWORD *)(a12 + 32);
  v209 = v97;
  v207 = off_24C335AF8;
  v96 = *(_QWORD *)(a12 + 36);
  v210 = v96;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v204, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v204 = *(std::string *)(a13 + 8);
  v95 = *(_DWORD *)(a13 + 32);
  v205 = v95;
  v203 = off_24C335AF8;
  v94 = *(_QWORD *)(a13 + 36);
  v206 = v94;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v200, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v200 = *(std::string *)(a14 + 8);
  v93 = *(_DWORD *)(a14 + 32);
  v201 = v93;
  v199 = off_24C335AF8;
  v92 = *(_QWORD *)(a14 + 36);
  v202 = v92;
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v196, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v196 = *(std::string *)(a15 + 8);
  v91 = *(_DWORD *)(a15 + 32);
  v197 = v91;
  v195 = off_24C335AF8;
  v90 = *(_QWORD *)(a15 + 36);
  v198 = v90;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v191, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v191 = *(std::string *)(a16 + 8);
  v49 = *(_DWORD *)(a16 + 32);
  v190 = off_24C335B18;
  v193 = *(_QWORD *)(a16 + 36);
  v50 = *(_DWORD *)(a16 + 44);
  v89 = v49;
  v192 = v49;
  v194 = v50;
  v185 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v186, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v186 = *(std::string *)(a17 + 8);
  v187 = *(_DWORD *)(a17 + 32);
  v185 = &off_24C335AB8;
  v188 = *(_BYTE *)(a17 + 36);
  if (*(char *)(a17 + 63) < 0)
    std::string::__init_copy_ctor_external(&v189, *(const std::string::value_type **)(a17 + 40), *(_QWORD *)(a17 + 48));
  else
    v189 = *(std::string *)(a17 + 40);
  v180 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v181, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v181 = *(std::string *)(a18 + 8);
  v182 = *(_DWORD *)(a18 + 32);
  v180 = &off_24C335AB8;
  v183 = *(_BYTE *)(a18 + 36);
  if (*(char *)(a18 + 63) < 0)
    std::string::__init_copy_ctor_external(&v184, *(const std::string::value_type **)(a18 + 40), *(_QWORD *)(a18 + 48));
  else
    v184 = *(std::string *)(a18 + 40);
  v175 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v176, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v176 = *(std::string *)(a19 + 8);
  v177 = *(_DWORD *)(a19 + 32);
  v175 = &off_24C335AB8;
  v178 = *(_BYTE *)(a19 + 36);
  if (*(char *)(a19 + 63) < 0)
    std::string::__init_copy_ctor_external(&v179, *(const std::string::value_type **)(a19 + 40), *(_QWORD *)(a19 + 48));
  else
    v179 = *(std::string *)(a19 + 40);
  v170 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v171, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v171 = *(std::string *)(a20 + 8);
  v172 = *(_DWORD *)(a20 + 32);
  v170 = &off_24C335AB8;
  v173 = *(_BYTE *)(a20 + 36);
  if (*(char *)(a20 + 63) < 0)
    std::string::__init_copy_ctor_external(&v174, *(const std::string::value_type **)(a20 + 40), *(_QWORD *)(a20 + 48));
  else
    v174 = *(std::string *)(a20 + 40);
  v165 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v166, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v166 = *(std::string *)(a21 + 8);
  v167 = *(_DWORD *)(a21 + 32);
  v165 = &off_24C335AB8;
  v168 = *(_BYTE *)(a21 + 36);
  if (*(char *)(a21 + 63) < 0)
    std::string::__init_copy_ctor_external(&v169, *(const std::string::value_type **)(a21 + 40), *(_QWORD *)(a21 + 48));
  else
    v169 = *(std::string *)(a21 + 40);
  v160 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v161, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v161 = *(std::string *)(a22 + 8);
  v162 = *(_DWORD *)(a22 + 32);
  v160 = &off_24C335AB8;
  v163 = *(_BYTE *)(a22 + 36);
  if (*(char *)(a22 + 63) < 0)
    std::string::__init_copy_ctor_external(&v164, *(const std::string::value_type **)(a22 + 40), *(_QWORD *)(a22 + 48));
  else
    v164 = *(std::string *)(a22 + 40);
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v156, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v156 = *(std::string *)(a23 + 8);
  v51 = *(_DWORD *)(a23 + 32);
  v155 = off_24C335B18;
  v158 = *(_QWORD *)(a23 + 36);
  v52 = *(_DWORD *)(a23 + 44);
  v87 = v51;
  v157 = v51;
  v159 = v52;
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v151, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v151 = *(std::string *)(a24 + 8);
  v53 = *(_DWORD *)(a24 + 32);
  v150 = off_24C335B18;
  v153 = *(_QWORD *)(a24 + 36);
  v54 = *(_DWORD *)(a24 + 44);
  v86 = v53;
  v152 = v53;
  v154 = v54;
  if (*(char *)(a25 + 31) < 0)
    std::string::__init_copy_ctor_external(&v147, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  else
    v147 = *(std::string *)(a25 + 8);
  v85 = *(_DWORD *)(a25 + 32);
  v148 = v85;
  v146 = off_24C335AF8;
  v84 = *(_QWORD *)(a25 + 36);
  v149 = v84;
  v141 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v142, *(const std::string::value_type **)(a26 + 8), *(_QWORD *)(a26 + 16));
  else
    v142 = *(std::string *)(a26 + 8);
  v143 = *(_DWORD *)(a26 + 32);
  v141 = &off_24C335AB8;
  v144 = *(_BYTE *)(a26 + 36);
  if (*(char *)(a26 + 63) < 0)
    std::string::__init_copy_ctor_external(&v145, *(const std::string::value_type **)(a26 + 40), *(_QWORD *)(a26 + 48));
  else
    v145 = *(std::string *)(a26 + 40);
  v136 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a27 + 31) < 0)
    std::string::__init_copy_ctor_external(&v137, *(const std::string::value_type **)(a27 + 8), *(_QWORD *)(a27 + 16));
  else
    v137 = *(std::string *)(a27 + 8);
  v138 = *(_DWORD *)(a27 + 32);
  v136 = &off_24C335AB8;
  v139 = *(_BYTE *)(a27 + 36);
  if (*(char *)(a27 + 63) < 0)
    std::string::__init_copy_ctor_external(&v140, *(const std::string::value_type **)(a27 + 40), *(_QWORD *)(a27 + 48));
  else
    v140 = *(std::string *)(a27 + 40);
  v131 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v132, *(const std::string::value_type **)(a28 + 8), *(_QWORD *)(a28 + 16));
  else
    v132 = *(std::string *)(a28 + 8);
  v133 = *(_DWORD *)(a28 + 32);
  v131 = &off_24C335AB8;
  v134 = *(_BYTE *)(a28 + 36);
  if (*(char *)(a28 + 63) < 0)
    std::string::__init_copy_ctor_external(&v135, *(const std::string::value_type **)(a28 + 40), *(_QWORD *)(a28 + 48));
  else
    v135 = *(std::string *)(a28 + 40);
  v126 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a29 + 31) < 0)
    std::string::__init_copy_ctor_external(&v127, *(const std::string::value_type **)(a29 + 8), *(_QWORD *)(a29 + 16));
  else
    v127 = *(std::string *)(a29 + 8);
  v128 = *(_DWORD *)(a29 + 32);
  v126 = &off_24C335AB8;
  v129 = *(_BYTE *)(a29 + 36);
  if (*(char *)(a29 + 63) < 0)
    std::string::__init_copy_ctor_external(&v130, *(const std::string::value_type **)(a29 + 40), *(_QWORD *)(a29 + 48));
  else
    v130 = *(std::string *)(a29 + 40);
  if (*(char *)(a30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v123, *(const std::string::value_type **)(a30 + 8), *(_QWORD *)(a30 + 16));
  else
    v123 = *(std::string *)(a30 + 8);
  v83 = *(_DWORD *)(a30 + 32);
  v124 = v83;
  v122 = off_24C335AF8;
  v82 = *(_QWORD *)(a30 + 36);
  v125 = v82;
  if (*(char *)(a31 + 31) < 0)
    std::string::__init_copy_ctor_external(&v119, *(const std::string::value_type **)(a31 + 8), *(_QWORD *)(a31 + 16));
  else
    v119 = *(std::string *)(a31 + 8);
  v55 = *(_DWORD *)(a31 + 32);
  v120 = v55;
  v118 = off_24C335AF8;
  v56 = *(_QWORD *)(a31 + 36);
  v121 = v56;
  if (*(char *)(a32 + 31) < 0)
    std::string::__init_copy_ctor_external(&v115, *(const std::string::value_type **)(a32 + 8), *(_QWORD *)(a32 + 16));
  else
    v115 = *(std::string *)(a32 + 8);
  v80 = *(_DWORD *)(a32 + 32);
  v116 = v80;
  v79 = *(_QWORD *)(a32 + 36);
  v117 = v79;
  v57 = SHIBYTE(__s.__r_.__value_.__r.__words[2]);
  v81 = v56;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v390, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v390 = __s;
  v389 = off_24C335AD8;
  v392 = v250;
  v391 = v112;
  v393 = v251;
  v78 = SHIBYTE(v244.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v244.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v386, v244.__r_.__value_.__l.__data_, v244.__r_.__value_.__l.__size_);
  else
    v386 = v244;
  v387 = v110;
  v385 = off_24C335AF8;
  v388 = v41;
  v380 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v239.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v381, v239.__r_.__value_.__l.__data_, v239.__r_.__value_.__l.__size_);
  else
    v381 = v239;
  v113 = v55;
  v382 = v240;
  v380 = &off_24C335AB8;
  v383 = v241;
  if (SHIBYTE(v242.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v384, v242.__r_.__value_.__l.__data_, v242.__r_.__value_.__l.__size_);
  else
    v384 = v242;
  v58 = SHIBYTE(v234.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v234.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v376, v234.__r_.__value_.__l.__data_, v234.__r_.__value_.__l.__size_);
  else
    v376 = v234;
  v375 = off_24C335B18;
  v378 = v236;
  v377 = v108;
  v379 = v237;
  v366 = (uint64_t (**)())off_24C335D90;
  v111 = v58;
  if (SHIBYTE(v225.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v367, v225.__r_.__value_.__l.__data_, v225.__r_.__value_.__l.__size_);
  else
    v367 = v225;
  v368 = v226;
  v366 = &off_24C335A98;
  v369 = v227;
  v59 = v231;
  v60 = v229;
  v370 = &off_24C331510;
  v371 = v229;
  v372 = v229;
  if (v229)
    v61 = (void *)operator new[]();
  else
    v61 = 0;
  v373 = v61;
  v374 = 1;
  if (v59)
    memcpy(v61, v59, v60);
  else
    bzero(v61, v60);
  v62 = SHIBYTE(v221.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v221.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v363, v221.__r_.__value_.__l.__data_, v221.__r_.__value_.__l.__size_);
  else
    v363 = v221;
  v364 = v106;
  v362 = off_24C335AF8;
  v365 = v104;
  v63 = SHIBYTE(v216.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v358, v216.__r_.__value_.__l.__data_, v216.__r_.__value_.__l.__size_);
  else
    v358 = v216;
  v357 = off_24C335B18;
  v360 = v218;
  v359 = v102;
  v361 = v219;
  v353 = (uint64_t (**)())off_24C335D90;
  v109 = SHIBYTE(v212.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v212.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v354, v212.__r_.__value_.__l.__data_, v212.__r_.__value_.__l.__size_);
  else
    v354 = v212;
  v355 = v100;
  v353 = off_24C335AF8;
  v356 = v98;
  v349 = (uint64_t (**)())off_24C335D90;
  v107 = SHIBYTE(v208.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v208.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v350, v208.__r_.__value_.__l.__data_, v208.__r_.__value_.__l.__size_);
  else
    v350 = v208;
  v351 = v97;
  v349 = off_24C335AF8;
  v352 = v96;
  v345 = (uint64_t (**)())off_24C335D90;
  v105 = SHIBYTE(v204.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v204.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v346, v204.__r_.__value_.__l.__data_, v204.__r_.__value_.__l.__size_);
  else
    v346 = v204;
  v347 = v95;
  v345 = off_24C335AF8;
  v348 = v94;
  v341 = (uint64_t (**)())off_24C335D90;
  v103 = SHIBYTE(v200.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v200.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v342, v200.__r_.__value_.__l.__data_, v200.__r_.__value_.__l.__size_);
  else
    v342 = v200;
  v343 = v93;
  v341 = off_24C335AF8;
  v344 = v92;
  v337 = (uint64_t (**)())off_24C335D90;
  v101 = SHIBYTE(v196.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v196.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v338, v196.__r_.__value_.__l.__data_, v196.__r_.__value_.__l.__size_);
  else
    v338 = v196;
  v339 = v91;
  v337 = off_24C335AF8;
  v340 = v90;
  v332 = (uint64_t (**)())off_24C335D90;
  v99 = SHIBYTE(v191.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v333, v191.__r_.__value_.__l.__data_, v191.__r_.__value_.__l.__size_);
  else
    v333 = v191;
  v332 = off_24C335B18;
  v335 = v193;
  v334 = v89;
  v336 = v194;
  v327 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v186.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v328, v186.__r_.__value_.__l.__data_, v186.__r_.__value_.__l.__size_);
  else
    v328 = v186;
  v329 = v187;
  v327 = &off_24C335AB8;
  v330 = v188;
  if (SHIBYTE(v189.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v331, v189.__r_.__value_.__l.__data_, v189.__r_.__value_.__l.__size_);
  else
    v331 = v189;
  v322 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v181.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v323, v181.__r_.__value_.__l.__data_, v181.__r_.__value_.__l.__size_);
  else
    v323 = v181;
  v324 = v182;
  v322 = &off_24C335AB8;
  v325 = v183;
  if (SHIBYTE(v184.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v326, v184.__r_.__value_.__l.__data_, v184.__r_.__value_.__l.__size_);
  else
    v326 = v184;
  v317 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v176.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v318, v176.__r_.__value_.__l.__data_, v176.__r_.__value_.__l.__size_);
  else
    v318 = v176;
  v319 = v177;
  v317 = &off_24C335AB8;
  v320 = v178;
  if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v321, v179.__r_.__value_.__l.__data_, v179.__r_.__value_.__l.__size_);
  else
    v321 = v179;
  v312 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v171.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v313, v171.__r_.__value_.__l.__data_, v171.__r_.__value_.__l.__size_);
  else
    v313 = v171;
  v314 = v172;
  v312 = &off_24C335AB8;
  v315 = v173;
  if (SHIBYTE(v174.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v316, v174.__r_.__value_.__l.__data_, v174.__r_.__value_.__l.__size_);
  else
    v316 = v174;
  v307 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v166.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v308, v166.__r_.__value_.__l.__data_, v166.__r_.__value_.__l.__size_);
  else
    v308 = v166;
  v309 = v167;
  v307 = &off_24C335AB8;
  v310 = v168;
  if (SHIBYTE(v169.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v311, v169.__r_.__value_.__l.__data_, v169.__r_.__value_.__l.__size_);
  else
    v311 = v169;
  v302 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v161.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v303, v161.__r_.__value_.__l.__data_, v161.__r_.__value_.__l.__size_);
  else
    v303 = v161;
  v304 = v162;
  v302 = &off_24C335AB8;
  v305 = v163;
  v77 = v63;
  if (SHIBYTE(v164.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v306, v164.__r_.__value_.__l.__data_, v164.__r_.__value_.__l.__size_);
  else
    v306 = v164;
  v297 = (uint64_t (**)())off_24C335D90;
  v64 = SHIBYTE(v156.__r_.__value_.__r.__words[2]);
  v76 = v57;
  v75 = v62;
  if (SHIBYTE(v156.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v298, v156.__r_.__value_.__l.__data_, v156.__r_.__value_.__l.__size_);
  else
    v298 = v156;
  v297 = off_24C335B18;
  v300 = v158;
  v299 = v87;
  v301 = v159;
  v292 = (uint64_t (**)())off_24C335D90;
  v65 = SHIBYTE(v151.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v293, v151.__r_.__value_.__l.__data_, v151.__r_.__value_.__l.__size_);
  else
    v293 = v151;
  v292 = off_24C335B18;
  v295 = v153;
  v294 = v86;
  v296 = v154;
  v288 = (uint64_t (**)())off_24C335D90;
  v66 = SHIBYTE(v147.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v147.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v289, v147.__r_.__value_.__l.__data_, v147.__r_.__value_.__l.__size_);
  else
    v289 = v147;
  v290 = v85;
  v288 = off_24C335AF8;
  v291 = v84;
  v283 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v284, v142.__r_.__value_.__l.__data_, v142.__r_.__value_.__l.__size_);
  else
    v284 = v142;
  v285 = v143;
  v283 = &off_24C335AB8;
  v286 = v144;
  if (SHIBYTE(v145.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v287, v145.__r_.__value_.__l.__data_, v145.__r_.__value_.__l.__size_);
  else
    v287 = v145;
  v278 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v137.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v279, v137.__r_.__value_.__l.__data_, v137.__r_.__value_.__l.__size_);
  else
    v279 = v137;
  v280 = v138;
  v278 = &off_24C335AB8;
  v281 = v139;
  if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v282, v140.__r_.__value_.__l.__data_, v140.__r_.__value_.__l.__size_);
  else
    v282 = v140;
  v273 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v132.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v274, v132.__r_.__value_.__l.__data_, v132.__r_.__value_.__l.__size_);
  else
    v274 = v132;
  v275 = v133;
  v273 = &off_24C335AB8;
  v276 = v134;
  if (SHIBYTE(v135.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v277, v135.__r_.__value_.__l.__data_, v135.__r_.__value_.__l.__size_);
  else
    v277 = v135;
  v268 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v127.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v269, v127.__r_.__value_.__l.__data_, v127.__r_.__value_.__l.__size_);
  else
    v269 = v127;
  v270 = v128;
  v268 = &off_24C335AB8;
  v271 = v129;
  if (SHIBYTE(v130.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v272, v130.__r_.__value_.__l.__data_, v130.__r_.__value_.__l.__size_);
  else
    v272 = v130;
  v264 = (uint64_t (**)())off_24C335D90;
  v67 = SHIBYTE(v123.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v123.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v265, v123.__r_.__value_.__l.__data_, v123.__r_.__value_.__l.__size_);
  else
    v265 = v123;
  v266 = v83;
  v264 = off_24C335AF8;
  v267 = v82;
  v260 = (uint64_t (**)())off_24C335D90;
  v68 = SHIBYTE(v119.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v119.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v261, v119.__r_.__value_.__l.__data_, v119.__r_.__value_.__l.__size_);
  else
    v261 = v119;
  v262 = v113;
  v260 = off_24C335AF8;
  v263 = v81;
  v256 = (uint64_t (**)())off_24C335D90;
  v69 = SHIBYTE(v115.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v115.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v115.__r_.__value_.__l.__data_, v115.__r_.__value_.__l.__size_);
  else
    __p = v115;
  v258 = v80;
  v256 = off_24C335AF8;
  v259 = v79;
  mediaplatform::DatabaseColumnTuple<5ul,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::DatabaseColumnTuple(a1, (uint64_t)&v389, (uint64_t)&v385, (uint64_t)&v380, (uint64_t)&v375, (uint64_t)&v366, (uint64_t)&v362, (uint64_t)&v357, (uint64_t)&v353, (uint64_t)&v349, (uint64_t)&v345, (uint64_t)&v341, (uint64_t)&v337, (uint64_t)&v332, (uint64_t)&v327, (uint64_t)&v322, (uint64_t)&v317, (uint64_t)&v312, (uint64_t)&v307,
    (uint64_t)&v302,
    (uint64_t)&v297,
    (uint64_t)&v292,
    (uint64_t)&v288,
    (uint64_t)&v283,
    (uint64_t)&v278,
    (uint64_t)&v273,
    (uint64_t)&v268,
    (uint64_t)&v264,
    (uint64_t)&v260,
    (uint64_t)&v256);
  v256 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v260 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v261.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v261.__r_.__value_.__l.__data_);
  v264 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v265.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v265.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v268);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v273);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v278);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v283);
  v288 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v289.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v289.__r_.__value_.__l.__data_);
  v292 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v293.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v293.__r_.__value_.__l.__data_);
  v297 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v298.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v298.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v302);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v307);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v312);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v317);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v322);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v327);
  v332 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v333.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v333.__r_.__value_.__l.__data_);
  v337 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v338.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v338.__r_.__value_.__l.__data_);
  v341 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v342.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v342.__r_.__value_.__l.__data_);
  v345 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v346.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v346.__r_.__value_.__l.__data_);
  v349 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v350.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v350.__r_.__value_.__l.__data_);
  v353 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v354.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v354.__r_.__value_.__l.__data_);
  v357 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v358.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v358.__r_.__value_.__l.__data_);
  v362 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v363.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v363.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)&v366);
  if (SHIBYTE(v376.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v376.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v380);
  if (SHIBYTE(v386.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v386.__r_.__value_.__l.__data_);
  if (SHIBYTE(v390.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v390.__r_.__value_.__l.__data_);
  *(_QWORD *)(a1 + 1600) = off_24C335D90;
  v70 = (std::string *)(a1 + 1608);
  v71 = SHIBYTE(v253.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v253.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v70, v253.__r_.__value_.__l.__data_, v253.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v70->__r_.__value_.__l.__data_ = *(_OWORD *)&v253.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 1624) = *((_QWORD *)&v253.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(a1 + 1632) = v254;
  *(_QWORD *)(a1 + 1600) = off_24C335AF8;
  *(_QWORD *)(a1 + 1636) = v255;
  if ((v69 & 0x80000000) == 0)
  {
    if ((v68 & 0x80000000) == 0)
      goto LABEL_295;
LABEL_321:
    operator delete(v119.__r_.__value_.__l.__data_);
    if ((v67 & 0x80000000) == 0)
      goto LABEL_296;
    goto LABEL_322;
  }
  operator delete(v115.__r_.__value_.__l.__data_);
  if (v68 < 0)
    goto LABEL_321;
LABEL_295:
  if ((v67 & 0x80000000) == 0)
    goto LABEL_296;
LABEL_322:
  operator delete(v123.__r_.__value_.__l.__data_);
LABEL_296:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v126);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v131);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v136);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v141);
  if (v66 < 0)
    operator delete(v147.__r_.__value_.__l.__data_);
  if (v65 < 0)
  {
    operator delete(v151.__r_.__value_.__l.__data_);
    if ((v64 & 0x80000000) == 0)
      goto LABEL_300;
  }
  else if ((v64 & 0x80000000) == 0)
  {
    goto LABEL_300;
  }
  operator delete(v156.__r_.__value_.__l.__data_);
LABEL_300:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v160);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v165);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v170);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v175);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v180);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v185);
  if (v99 < 0)
    operator delete(v191.__r_.__value_.__l.__data_);
  if (v101 < 0)
    operator delete(v196.__r_.__value_.__l.__data_);
  if (v103 < 0)
    operator delete(v200.__r_.__value_.__l.__data_);
  if (v105 < 0)
    operator delete(v204.__r_.__value_.__l.__data_);
  if (v107 < 0)
    operator delete(v208.__r_.__value_.__l.__data_);
  if ((v109 & 0x80000000) == 0)
  {
    if ((v77 & 0x80000000) == 0)
      goto LABEL_312;
LABEL_326:
    operator delete(v216.__r_.__value_.__l.__data_);
    if ((v75 & 0x80000000) == 0)
      goto LABEL_313;
    goto LABEL_327;
  }
  operator delete(v212.__r_.__value_.__l.__data_);
  if (v77 < 0)
    goto LABEL_326;
LABEL_312:
  if ((v75 & 0x80000000) == 0)
    goto LABEL_313;
LABEL_327:
  operator delete(v221.__r_.__value_.__l.__data_);
LABEL_313:
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)&v224);
  if (v111 < 0)
    operator delete(v234.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v238);
  if ((v78 & 0x80000000) == 0)
  {
    if ((v76 & 0x80000000) == 0)
      goto LABEL_317;
LABEL_329:
    operator delete(__s.__r_.__value_.__l.__data_);
    if ((v71 & 0x80000000) == 0)
      goto LABEL_318;
    goto LABEL_330;
  }
  operator delete(v244.__r_.__value_.__l.__data_);
  if (v76 < 0)
    goto LABEL_329;
LABEL_317:
  if ((v71 & 0x80000000) == 0)
    goto LABEL_318;
LABEL_330:
  operator delete(v253.__r_.__value_.__l.__data_);
LABEL_318:
  *(_QWORD *)(a1 + 1648) = off_24C335D90;
  v72 = (std::string *)(a1 + 1656);
  if (*(char *)(v88 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v72, *(const std::string::value_type **)(v88 + 8), *(_QWORD *)(v88 + 16));
  }
  else
  {
    v73 = *(_OWORD *)(v88 + 8);
    *(_QWORD *)(a1 + 1672) = *(_QWORD *)(v88 + 24);
    *(_OWORD *)&v72->__r_.__value_.__l.__data_ = v73;
  }
  result = a1;
  *(_DWORD *)(a1 + 1680) = *(_DWORD *)(v88 + 32);
  *(_QWORD *)(a1 + 1648) = off_24C335AF8;
  *(_QWORD *)(a1 + 1684) = *(_QWORD *)(v88 + 36);
  return result;
}

void sub_20A8CE3E0(_Unwind_Exception *a1)
{
  mediaplatform::DatabaseColumnTuple<4ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(STACK[0x2B0]);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<3ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 1648) = off_24C335D90;
  if (*(char *)(a1 + 1679) < 0)
    operator delete(*(void **)(a1 + 1656));
  *(_QWORD *)(a1 + 1600) = off_24C335D90;
  if (*(char *)(a1 + 1631) < 0)
    operator delete(*(void **)(a1 + 1608));
  return mediaplatform::DatabaseColumnTuple<5ul,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<4ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 1600) = off_24C335D90;
  if (*(char *)(a1 + 1631) < 0)
    operator delete(*(void **)(a1 + 1608));
  return mediaplatform::DatabaseColumnTuple<5ul,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<5ul,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  const void *v48;
  size_t v49;
  void *v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  const void *v59;
  size_t v60;
  void *v61;
  int v62;
  const void *v63;
  size_t v64;
  void *v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  std::string *v76;
  std::string *v77;
  int v78;
  std::string *v79;
  __int128 v80;
  uint64_t v81;
  int v83;
  int v84;
  uint64_t v85;
  int v86;
  int v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  int v95;
  int v96;
  int v97;
  int v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  int v106;
  int v107;
  uint64_t v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  uint64_t v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  std::string v120;
  int v121;
  uint64_t v122;
  uint64_t (**v123)();
  std::string v124;
  int v125;
  uint64_t v126;
  uint64_t (**v127)();
  std::string v128;
  int v129;
  uint64_t v130;
  uint64_t (**v131)();
  std::string v132;
  int v133;
  char v134;
  std::string v135;
  uint64_t (**v136)();
  std::string v137;
  int v138;
  char v139;
  std::string v140;
  uint64_t (**v141)();
  std::string v142;
  int v143;
  char v144;
  std::string v145;
  uint64_t (**v146)();
  std::string v147;
  int v148;
  char v149;
  std::string v150;
  uint64_t (**v151)();
  std::string v152;
  int v153;
  uint64_t v154;
  uint64_t (**v155)();
  std::string v156;
  int v157;
  uint64_t v158;
  int v159;
  uint64_t (**v160)();
  std::string v161;
  int v162;
  uint64_t v163;
  int v164;
  uint64_t (**v165)();
  std::string v166;
  int v167;
  char v168;
  std::string v169;
  uint64_t (**v170)();
  std::string v171;
  int v172;
  char v173;
  std::string v174;
  uint64_t (**v175)();
  std::string v176;
  int v177;
  char v178;
  std::string v179;
  uint64_t (**v180)();
  std::string v181;
  int v182;
  char v183;
  std::string v184;
  uint64_t (**v185)();
  std::string v186;
  int v187;
  char v188;
  std::string v189;
  uint64_t (**v190)();
  std::string v191;
  int v192;
  char v193;
  std::string v194;
  uint64_t (**v195)();
  std::string v196;
  int v197;
  uint64_t v198;
  int v199;
  uint64_t (**v200)();
  std::string v201;
  int v202;
  uint64_t v203;
  uint64_t (**v204)();
  std::string v205;
  int v206;
  uint64_t v207;
  uint64_t (**v208)();
  std::string v209;
  int v210;
  uint64_t v211;
  uint64_t (**v212)();
  std::string v213;
  int v214;
  uint64_t v215;
  uint64_t (**v216)();
  std::string v217;
  int v218;
  uint64_t v219;
  uint64_t (**v220)();
  std::string v221;
  int v222;
  uint64_t v223;
  int v224;
  uint64_t (**v225)();
  std::string v226;
  int v227;
  uint64_t v228;
  uint64_t (**v229)();
  std::string v230;
  int v231;
  char v232;
  void (**v233)(mediaplatform::Data *__hidden);
  size_t v234;
  size_t v235;
  const void *v236;
  char v237;
  uint64_t (**v238)();
  std::string v239;
  int v240;
  uint64_t v241;
  int v242;
  uint64_t (**v243)();
  std::string __s;
  int v245;
  char v246;
  std::string v247;
  uint64_t (**v248)();
  std::string v249;
  int v250;
  uint64_t v251;
  uint64_t (**v252)();
  std::string v253;
  int v254;
  uint64_t v255;
  uint64_t (**v256)();
  std::string v257;
  int v258;
  uint64_t v259;
  uint64_t (**v260)();
  std::string v261;
  int v262;
  uint64_t v263;
  uint64_t (**v264)();
  std::string v265;
  int v266;
  char v267;
  std::string v268;
  uint64_t (**v269)();
  std::string v270;
  int v271;
  char v272;
  std::string v273;
  uint64_t (**v274)();
  std::string v275;
  int v276;
  char v277;
  std::string v278;
  uint64_t (**v279)();
  std::string v280;
  int v281;
  char v282;
  std::string v283;
  uint64_t (**v284)();
  std::string v285;
  int v286;
  uint64_t v287;
  uint64_t (**v288)();
  std::string v289;
  int v290;
  uint64_t v291;
  int v292;
  uint64_t (**v293)();
  std::string v294;
  int v295;
  uint64_t v296;
  int v297;
  uint64_t (**v298)();
  std::string v299;
  int v300;
  char v301;
  std::string v302;
  uint64_t (**v303)();
  std::string v304;
  int v305;
  char v306;
  std::string v307;
  uint64_t (**v308)();
  std::string v309;
  int v310;
  char v311;
  std::string v312;
  uint64_t (**v313)();
  std::string v314;
  int v315;
  char v316;
  std::string v317;
  uint64_t (**v318)();
  std::string v319;
  int v320;
  char v321;
  std::string v322;
  uint64_t (**v323)();
  std::string v324;
  int v325;
  char v326;
  std::string v327;
  uint64_t (**v328)();
  std::string v329;
  int v330;
  uint64_t v331;
  int v332;
  uint64_t (**v333)();
  std::string v334;
  int v335;
  uint64_t v336;
  uint64_t (**v337)();
  std::string v338;
  int v339;
  uint64_t v340;
  uint64_t (**v341)();
  std::string v342;
  int v343;
  uint64_t v344;
  uint64_t (**v345)();
  std::string v346;
  int v347;
  uint64_t v348;
  uint64_t (**v349)();
  std::string v350;
  int v351;
  uint64_t v352;
  uint64_t (**v353)();
  std::string v354;
  int v355;
  uint64_t v356;
  int v357;
  uint64_t (**v358)();
  std::string v359;
  int v360;
  uint64_t v361;
  uint64_t (**v362)();
  std::string v363;
  int v364;
  char v365;
  void (**v366)(mediaplatform::Data *__hidden);
  size_t v367;
  size_t v368;
  const void *v369;
  char v370;
  uint64_t (**v371)();
  std::string v372;
  int v373;
  uint64_t v374;
  int v375;
  uint64_t (**v376)();
  std::string v377;
  int v378;
  char v379;
  std::string v380;
  uint64_t (**v381)();
  std::string __p;
  int v383;
  uint64_t v384;
  uint64_t (**v385)();
  std::string v386;
  int v387;
  uint64_t v388;
  uint64_t (**v389)();
  std::string v390;
  int v391;
  uint64_t v392;
  uint64_t (**v393)();
  std::string v394;
  int v395;
  char v396;
  std::string v397;
  uint64_t (**v398)();
  std::string v399;
  int v400;
  char v401;
  std::string v402;
  uint64_t (**v403)();
  std::string v404;
  int v405;
  char v406;
  std::string v407;
  uint64_t (**v408)();
  std::string v409;
  int v410;
  char v411;
  std::string v412;
  uint64_t (**v413)();
  std::string v414;
  int v415;
  uint64_t v416;
  uint64_t (**v417)();
  std::string v418;
  int v419;
  uint64_t v420;
  int v421;
  uint64_t (**v422)();
  std::string v423;
  int v424;
  uint64_t v425;
  int v426;
  uint64_t (**v427)();
  std::string v428;
  int v429;
  char v430;
  std::string v431;
  uint64_t (**v432)();
  std::string v433;
  int v434;
  char v435;
  std::string v436;
  uint64_t (**v437)();
  std::string v438;
  int v439;
  char v440;
  std::string v441;
  uint64_t (**v442)();
  std::string v443;
  int v444;
  char v445;
  std::string v446;
  uint64_t (**v447)();
  std::string v448;
  int v449;
  char v450;
  std::string v451;
  uint64_t (**v452)();
  std::string v453;
  int v454;
  char v455;
  std::string v456;
  uint64_t (**v457)();
  std::string v458;
  int v459;
  uint64_t v460;
  int v461;
  uint64_t (**v462)();
  std::string v463;
  int v464;
  uint64_t v465;
  uint64_t (**v466)();
  std::string v467;
  int v468;
  uint64_t v469;
  uint64_t (**v470)();
  std::string v471;
  int v472;
  uint64_t v473;
  uint64_t (**v474)();
  std::string v475;
  int v476;
  uint64_t v477;
  uint64_t (**v478)();
  std::string v479;
  int v480;
  uint64_t v481;
  uint64_t (**v482)();
  std::string v483;
  int v484;
  uint64_t v485;
  int v486;
  uint64_t (**v487)();
  std::string v488;
  int v489;
  uint64_t v490;
  uint64_t (**v491)();
  std::string v492;
  int v493;
  char v494;
  void (**v495)(mediaplatform::Data *__hidden);
  size_t v496;
  size_t v497;
  void *v498;
  char v499;
  uint64_t (**v500)();
  std::string v501;
  int v502;
  uint64_t v503;
  int v504;

  v30 = MEMORY[0x24BDAC7A8](a1);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v42 = v31;
  v44 = v43;
  v45 = v30;
  if (*(char *)(v31 + 31) < 0)
    std::string::__init_copy_ctor_external(&v249, *(const std::string::value_type **)(v31 + 8), *(_QWORD *)(v31 + 16));
  else
    v249 = *(std::string *)(v31 + 8);
  v250 = *(_DWORD *)(v42 + 32);
  v248 = off_24C335AF8;
  v251 = *(_QWORD *)(v42 + 36);
  v243 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v41 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(v41 + 8), *(_QWORD *)(v41 + 16));
  else
    __s = *(std::string *)(v41 + 8);
  v245 = *(_DWORD *)(v41 + 32);
  v243 = &off_24C335AB8;
  v246 = *(_BYTE *)(v41 + 36);
  if (*(char *)(v41 + 63) < 0)
    std::string::__init_copy_ctor_external(&v247, *(const std::string::value_type **)(v41 + 40), *(_QWORD *)(v41 + 48));
  else
    v247 = *(std::string *)(v41 + 40);
  v85 = v44;
  if (*(char *)(v39 + 31) < 0)
    std::string::__init_copy_ctor_external(&v239, *(const std::string::value_type **)(v39 + 8), *(_QWORD *)(v39 + 16));
  else
    v239 = *(std::string *)(v39 + 8);
  v46 = *(_DWORD *)(v39 + 32);
  v238 = off_24C335B18;
  v241 = *(_QWORD *)(v39 + 36);
  v47 = *(_DWORD *)(v39 + 44);
  v118 = v46;
  v240 = v46;
  v242 = v47;
  v229 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v37 + 31) < 0)
    std::string::__init_copy_ctor_external(&v230, *(const std::string::value_type **)(v37 + 8), *(_QWORD *)(v37 + 16));
  else
    v230 = *(std::string *)(v37 + 8);
  v231 = *(_DWORD *)(v37 + 32);
  v229 = &off_24C335A98;
  v232 = *(_BYTE *)(v37 + 36);
  v48 = *(const void **)(v37 + 64);
  v49 = *(_QWORD *)(v37 + 48);
  v233 = &off_24C331510;
  v234 = v49;
  v235 = v49;
  if (v49)
    v50 = (void *)operator new[]();
  else
    v50 = 0;
  v236 = v50;
  v237 = 1;
  if (v48)
    memcpy(v50, v48, v49);
  else
    bzero(v50, v49);
  if (*(char *)(v35 + 31) < 0)
    std::string::__init_copy_ctor_external(&v226, *(const std::string::value_type **)(v35 + 8), *(_QWORD *)(v35 + 16));
  else
    v226 = *(std::string *)(v35 + 8);
  v116 = *(_DWORD *)(v35 + 32);
  v227 = v116;
  v225 = off_24C335AF8;
  v114 = *(_QWORD *)(v35 + 36);
  v228 = v114;
  if (*(char *)(v33 + 31) < 0)
    std::string::__init_copy_ctor_external(&v221, *(const std::string::value_type **)(v33 + 8), *(_QWORD *)(v33 + 16));
  else
    v221 = *(std::string *)(v33 + 8);
  v51 = *(_DWORD *)(v33 + 32);
  v220 = off_24C335B18;
  v223 = *(_QWORD *)(v33 + 36);
  v52 = *(_DWORD *)(v33 + 44);
  v112 = v51;
  v222 = v51;
  v224 = v52;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v217, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v217 = *(std::string *)(a9 + 8);
  v110 = *(_DWORD *)(a9 + 32);
  v218 = v110;
  v216 = off_24C335AF8;
  v108 = *(_QWORD *)(a9 + 36);
  v219 = v108;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v213, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v213 = *(std::string *)(a10 + 8);
  v106 = *(_DWORD *)(a10 + 32);
  v214 = v106;
  v212 = off_24C335AF8;
  v105 = *(_QWORD *)(a10 + 36);
  v215 = v105;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v209, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v209 = *(std::string *)(a11 + 8);
  v104 = *(_DWORD *)(a11 + 32);
  v210 = v104;
  v208 = off_24C335AF8;
  v103 = *(_QWORD *)(a11 + 36);
  v211 = v103;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v205, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v205 = *(std::string *)(a12 + 8);
  v102 = *(_DWORD *)(a12 + 32);
  v206 = v102;
  v204 = off_24C335AF8;
  v101 = *(_QWORD *)(a12 + 36);
  v207 = v101;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v201, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v201 = *(std::string *)(a13 + 8);
  v100 = *(_DWORD *)(a13 + 32);
  v202 = v100;
  v200 = off_24C335AF8;
  v99 = *(_QWORD *)(a13 + 36);
  v203 = v99;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v196, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v196 = *(std::string *)(a14 + 8);
  v53 = *(_DWORD *)(a14 + 32);
  v195 = off_24C335B18;
  v198 = *(_QWORD *)(a14 + 36);
  v54 = *(_DWORD *)(a14 + 44);
  v98 = v53;
  v197 = v53;
  v199 = v54;
  v190 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v191, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v191 = *(std::string *)(a15 + 8);
  v192 = *(_DWORD *)(a15 + 32);
  v190 = &off_24C335AB8;
  v193 = *(_BYTE *)(a15 + 36);
  if (*(char *)(a15 + 63) < 0)
    std::string::__init_copy_ctor_external(&v194, *(const std::string::value_type **)(a15 + 40), *(_QWORD *)(a15 + 48));
  else
    v194 = *(std::string *)(a15 + 40);
  v185 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v186, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v186 = *(std::string *)(a16 + 8);
  v187 = *(_DWORD *)(a16 + 32);
  v185 = &off_24C335AB8;
  v188 = *(_BYTE *)(a16 + 36);
  if (*(char *)(a16 + 63) < 0)
    std::string::__init_copy_ctor_external(&v189, *(const std::string::value_type **)(a16 + 40), *(_QWORD *)(a16 + 48));
  else
    v189 = *(std::string *)(a16 + 40);
  v180 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v181, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v181 = *(std::string *)(a17 + 8);
  v182 = *(_DWORD *)(a17 + 32);
  v180 = &off_24C335AB8;
  v183 = *(_BYTE *)(a17 + 36);
  if (*(char *)(a17 + 63) < 0)
    std::string::__init_copy_ctor_external(&v184, *(const std::string::value_type **)(a17 + 40), *(_QWORD *)(a17 + 48));
  else
    v184 = *(std::string *)(a17 + 40);
  v175 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v176, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v176 = *(std::string *)(a18 + 8);
  v177 = *(_DWORD *)(a18 + 32);
  v175 = &off_24C335AB8;
  v178 = *(_BYTE *)(a18 + 36);
  if (*(char *)(a18 + 63) < 0)
    std::string::__init_copy_ctor_external(&v179, *(const std::string::value_type **)(a18 + 40), *(_QWORD *)(a18 + 48));
  else
    v179 = *(std::string *)(a18 + 40);
  v170 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v171, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v171 = *(std::string *)(a19 + 8);
  v172 = *(_DWORD *)(a19 + 32);
  v170 = &off_24C335AB8;
  v173 = *(_BYTE *)(a19 + 36);
  if (*(char *)(a19 + 63) < 0)
    std::string::__init_copy_ctor_external(&v174, *(const std::string::value_type **)(a19 + 40), *(_QWORD *)(a19 + 48));
  else
    v174 = *(std::string *)(a19 + 40);
  v165 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v166, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v166 = *(std::string *)(a20 + 8);
  v167 = *(_DWORD *)(a20 + 32);
  v165 = &off_24C335AB8;
  v168 = *(_BYTE *)(a20 + 36);
  if (*(char *)(a20 + 63) < 0)
    std::string::__init_copy_ctor_external(&v169, *(const std::string::value_type **)(a20 + 40), *(_QWORD *)(a20 + 48));
  else
    v169 = *(std::string *)(a20 + 40);
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v161, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v161 = *(std::string *)(a21 + 8);
  v55 = *(_DWORD *)(a21 + 32);
  v160 = off_24C335B18;
  v163 = *(_QWORD *)(a21 + 36);
  v56 = *(_DWORD *)(a21 + 44);
  v97 = v55;
  v162 = v55;
  v164 = v56;
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v156, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v156 = *(std::string *)(a22 + 8);
  v57 = *(_DWORD *)(a22 + 32);
  v155 = off_24C335B18;
  v158 = *(_QWORD *)(a22 + 36);
  v58 = *(_DWORD *)(a22 + 44);
  v96 = v57;
  v157 = v57;
  v159 = v58;
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v152, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v152 = *(std::string *)(a23 + 8);
  v95 = *(_DWORD *)(a23 + 32);
  v153 = v95;
  v151 = off_24C335AF8;
  v94 = *(_QWORD *)(a23 + 36);
  v154 = v94;
  v146 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v147, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v147 = *(std::string *)(a24 + 8);
  v148 = *(_DWORD *)(a24 + 32);
  v146 = &off_24C335AB8;
  v149 = *(_BYTE *)(a24 + 36);
  if (*(char *)(a24 + 63) < 0)
    std::string::__init_copy_ctor_external(&v150, *(const std::string::value_type **)(a24 + 40), *(_QWORD *)(a24 + 48));
  else
    v150 = *(std::string *)(a24 + 40);
  v141 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a25 + 31) < 0)
    std::string::__init_copy_ctor_external(&v142, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  else
    v142 = *(std::string *)(a25 + 8);
  v143 = *(_DWORD *)(a25 + 32);
  v141 = &off_24C335AB8;
  v144 = *(_BYTE *)(a25 + 36);
  if (*(char *)(a25 + 63) < 0)
    std::string::__init_copy_ctor_external(&v145, *(const std::string::value_type **)(a25 + 40), *(_QWORD *)(a25 + 48));
  else
    v145 = *(std::string *)(a25 + 40);
  v136 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v137, *(const std::string::value_type **)(a26 + 8), *(_QWORD *)(a26 + 16));
  else
    v137 = *(std::string *)(a26 + 8);
  v138 = *(_DWORD *)(a26 + 32);
  v136 = &off_24C335AB8;
  v139 = *(_BYTE *)(a26 + 36);
  if (*(char *)(a26 + 63) < 0)
    std::string::__init_copy_ctor_external(&v140, *(const std::string::value_type **)(a26 + 40), *(_QWORD *)(a26 + 48));
  else
    v140 = *(std::string *)(a26 + 40);
  v131 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a27 + 31) < 0)
    std::string::__init_copy_ctor_external(&v132, *(const std::string::value_type **)(a27 + 8), *(_QWORD *)(a27 + 16));
  else
    v132 = *(std::string *)(a27 + 8);
  v133 = *(_DWORD *)(a27 + 32);
  v131 = &off_24C335AB8;
  v134 = *(_BYTE *)(a27 + 36);
  if (*(char *)(a27 + 63) < 0)
    std::string::__init_copy_ctor_external(&v135, *(const std::string::value_type **)(a27 + 40), *(_QWORD *)(a27 + 48));
  else
    v135 = *(std::string *)(a27 + 40);
  if (*(char *)(a28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v128, *(const std::string::value_type **)(a28 + 8), *(_QWORD *)(a28 + 16));
  else
    v128 = *(std::string *)(a28 + 8);
  v93 = *(_DWORD *)(a28 + 32);
  v129 = v93;
  v127 = off_24C335AF8;
  v92 = *(_QWORD *)(a28 + 36);
  v130 = v92;
  if (*(char *)(a29 + 31) < 0)
    std::string::__init_copy_ctor_external(&v124, *(const std::string::value_type **)(a29 + 8), *(_QWORD *)(a29 + 16));
  else
    v124 = *(std::string *)(a29 + 8);
  v91 = *(_DWORD *)(a29 + 32);
  v125 = v91;
  v123 = off_24C335AF8;
  v90 = *(_QWORD *)(a29 + 36);
  v126 = v90;
  if (*(char *)(a30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v120, *(const std::string::value_type **)(a30 + 8), *(_QWORD *)(a30 + 16));
  else
    v120 = *(std::string *)(a30 + 8);
  v89 = *(_DWORD *)(a30 + 32);
  v121 = v89;
  v88 = *(_QWORD *)(a30 + 36);
  v122 = v88;
  v376 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v377, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v377 = __s;
  v378 = v245;
  v376 = &off_24C335AB8;
  v379 = v246;
  if (SHIBYTE(v247.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v380, v247.__r_.__value_.__l.__data_, v247.__r_.__value_.__l.__size_);
  else
    v380 = v247;
  if (SHIBYTE(v239.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v372, v239.__r_.__value_.__l.__data_, v239.__r_.__value_.__l.__size_);
  else
    v372 = v239;
  v371 = off_24C335B18;
  v374 = v241;
  v373 = v118;
  v375 = v242;
  v362 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v230.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v363, v230.__r_.__value_.__l.__data_, v230.__r_.__value_.__l.__size_);
  else
    v363 = v230;
  v364 = v231;
  v362 = &off_24C335A98;
  v365 = v232;
  v59 = v236;
  v60 = v234;
  v366 = &off_24C331510;
  v367 = v234;
  v368 = v234;
  if (v234)
    v61 = (void *)operator new[]();
  else
    v61 = 0;
  v369 = v61;
  v370 = 1;
  if (v59)
    memcpy(v61, v59, v60);
  else
    bzero(v61, v60);
  if (SHIBYTE(v226.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v359, v226.__r_.__value_.__l.__data_, v226.__r_.__value_.__l.__size_);
  else
    v359 = v226;
  v360 = v116;
  v358 = off_24C335AF8;
  v361 = v114;
  if (SHIBYTE(v221.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v354, v221.__r_.__value_.__l.__data_, v221.__r_.__value_.__l.__size_);
  else
    v354 = v221;
  v353 = off_24C335B18;
  v356 = v223;
  v355 = v112;
  v357 = v224;
  if (SHIBYTE(v217.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v350, v217.__r_.__value_.__l.__data_, v217.__r_.__value_.__l.__size_);
  else
    v350 = v217;
  v351 = v110;
  v349 = off_24C335AF8;
  v352 = v108;
  if (SHIBYTE(v213.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v346, v213.__r_.__value_.__l.__data_, v213.__r_.__value_.__l.__size_);
  else
    v346 = v213;
  v347 = v106;
  v345 = off_24C335AF8;
  v348 = v105;
  if (SHIBYTE(v209.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v342, v209.__r_.__value_.__l.__data_, v209.__r_.__value_.__l.__size_);
  else
    v342 = v209;
  v343 = v104;
  v341 = off_24C335AF8;
  v344 = v103;
  if (SHIBYTE(v205.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v338, v205.__r_.__value_.__l.__data_, v205.__r_.__value_.__l.__size_);
  else
    v338 = v205;
  v339 = v102;
  v337 = off_24C335AF8;
  v340 = v101;
  v333 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v201.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v334, v201.__r_.__value_.__l.__data_, v201.__r_.__value_.__l.__size_);
  else
    v334 = v201;
  v335 = v100;
  v333 = off_24C335AF8;
  v336 = v99;
  v328 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v196.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v329, v196.__r_.__value_.__l.__data_, v196.__r_.__value_.__l.__size_);
  else
    v329 = v196;
  v328 = off_24C335B18;
  v331 = v198;
  v330 = v98;
  v332 = v199;
  v323 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v324, v191.__r_.__value_.__l.__data_, v191.__r_.__value_.__l.__size_);
  else
    v324 = v191;
  v325 = v192;
  v323 = &off_24C335AB8;
  v326 = v193;
  if (SHIBYTE(v194.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v327, v194.__r_.__value_.__l.__data_, v194.__r_.__value_.__l.__size_);
  else
    v327 = v194;
  v318 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v186.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v319, v186.__r_.__value_.__l.__data_, v186.__r_.__value_.__l.__size_);
  else
    v319 = v186;
  v320 = v187;
  v318 = &off_24C335AB8;
  v321 = v188;
  if (SHIBYTE(v189.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v322, v189.__r_.__value_.__l.__data_, v189.__r_.__value_.__l.__size_);
  else
    v322 = v189;
  v313 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v181.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v314, v181.__r_.__value_.__l.__data_, v181.__r_.__value_.__l.__size_);
  else
    v314 = v181;
  v315 = v182;
  v313 = &off_24C335AB8;
  v316 = v183;
  if (SHIBYTE(v184.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v317, v184.__r_.__value_.__l.__data_, v184.__r_.__value_.__l.__size_);
  else
    v317 = v184;
  v308 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v176.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v309, v176.__r_.__value_.__l.__data_, v176.__r_.__value_.__l.__size_);
  else
    v309 = v176;
  v310 = v177;
  v308 = &off_24C335AB8;
  v311 = v178;
  if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v312, v179.__r_.__value_.__l.__data_, v179.__r_.__value_.__l.__size_);
  else
    v312 = v179;
  v303 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v171.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v304, v171.__r_.__value_.__l.__data_, v171.__r_.__value_.__l.__size_);
  else
    v304 = v171;
  v305 = v172;
  v303 = &off_24C335AB8;
  v306 = v173;
  if (SHIBYTE(v174.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v307, v174.__r_.__value_.__l.__data_, v174.__r_.__value_.__l.__size_);
  else
    v307 = v174;
  v298 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v166.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v299, v166.__r_.__value_.__l.__data_, v166.__r_.__value_.__l.__size_);
  else
    v299 = v166;
  v300 = v167;
  v298 = &off_24C335AB8;
  v301 = v168;
  if (SHIBYTE(v169.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v302, v169.__r_.__value_.__l.__data_, v169.__r_.__value_.__l.__size_);
  else
    v302 = v169;
  v293 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v161.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v294, v161.__r_.__value_.__l.__data_, v161.__r_.__value_.__l.__size_);
  else
    v294 = v161;
  v293 = off_24C335B18;
  v296 = v163;
  v295 = v97;
  v297 = v164;
  v288 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v156.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v289, v156.__r_.__value_.__l.__data_, v156.__r_.__value_.__l.__size_);
  else
    v289 = v156;
  v288 = off_24C335B18;
  v291 = v158;
  v290 = v96;
  v292 = v159;
  v284 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v152.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v285, v152.__r_.__value_.__l.__data_, v152.__r_.__value_.__l.__size_);
  else
    v285 = v152;
  v286 = v95;
  v284 = off_24C335AF8;
  v287 = v94;
  v279 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v147.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v280, v147.__r_.__value_.__l.__data_, v147.__r_.__value_.__l.__size_);
  else
    v280 = v147;
  v281 = v148;
  v279 = &off_24C335AB8;
  v282 = v149;
  if (SHIBYTE(v150.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v283, v150.__r_.__value_.__l.__data_, v150.__r_.__value_.__l.__size_);
  else
    v283 = v150;
  v274 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v275, v142.__r_.__value_.__l.__data_, v142.__r_.__value_.__l.__size_);
  else
    v275 = v142;
  v276 = v143;
  v274 = &off_24C335AB8;
  v277 = v144;
  if (SHIBYTE(v145.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v278, v145.__r_.__value_.__l.__data_, v145.__r_.__value_.__l.__size_);
  else
    v278 = v145;
  v269 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v137.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v270, v137.__r_.__value_.__l.__data_, v137.__r_.__value_.__l.__size_);
  else
    v270 = v137;
  v271 = v138;
  v269 = &off_24C335AB8;
  v272 = v139;
  if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v273, v140.__r_.__value_.__l.__data_, v140.__r_.__value_.__l.__size_);
  else
    v273 = v140;
  v264 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v132.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v265, v132.__r_.__value_.__l.__data_, v132.__r_.__value_.__l.__size_);
  else
    v265 = v132;
  v266 = v133;
  v264 = &off_24C335AB8;
  v267 = v134;
  if (SHIBYTE(v135.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v268, v135.__r_.__value_.__l.__data_, v135.__r_.__value_.__l.__size_);
  else
    v268 = v135;
  v260 = (uint64_t (**)())off_24C335D90;
  v62 = SHIBYTE(v128.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v128.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v261, v128.__r_.__value_.__l.__data_, v128.__r_.__value_.__l.__size_);
  else
    v261 = v128;
  v262 = v93;
  v260 = off_24C335AF8;
  v263 = v92;
  v256 = (uint64_t (**)())off_24C335D90;
  v86 = SHIBYTE(v124.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v124.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v257, v124.__r_.__value_.__l.__data_, v124.__r_.__value_.__l.__size_);
  else
    v257 = v124;
  v258 = v91;
  v256 = off_24C335AF8;
  v259 = v90;
  v252 = (uint64_t (**)())off_24C335D90;
  v87 = SHIBYTE(v120.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v120.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v253, v120.__r_.__value_.__l.__data_, v120.__r_.__value_.__l.__size_);
  else
    v253 = v120;
  v254 = v89;
  v252 = off_24C335AF8;
  v255 = v88;
  v500 = (uint64_t (**)())off_24C335D90;
  v84 = SHIBYTE(v372.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v372.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v501, v372.__r_.__value_.__l.__data_, v372.__r_.__value_.__l.__size_);
  else
    v501 = v372;
  v500 = off_24C335B18;
  v503 = v374;
  v502 = v118;
  v504 = v375;
  v491 = (uint64_t (**)())off_24C335D90;
  v83 = v62;
  if (SHIBYTE(v363.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v492, v363.__r_.__value_.__l.__data_, v363.__r_.__value_.__l.__size_);
  else
    v492 = v363;
  v493 = v364;
  v491 = &off_24C335A98;
  v494 = v365;
  v63 = v369;
  v64 = v367;
  v495 = &off_24C331510;
  v496 = v367;
  v497 = v367;
  if (v367)
    v65 = (void *)operator new[]();
  else
    v65 = 0;
  v498 = v65;
  v499 = 1;
  if (v63)
    memcpy(v65, v63, v64);
  else
    bzero(v65, v64);
  v487 = (uint64_t (**)())off_24C335D90;
  v66 = SHIBYTE(v359.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v359.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v488, v359.__r_.__value_.__l.__data_, v359.__r_.__value_.__l.__size_);
  else
    v488 = v359;
  v489 = v116;
  v487 = off_24C335AF8;
  v490 = v114;
  v482 = (uint64_t (**)())off_24C335D90;
  v67 = SHIBYTE(v354.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v354.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v483, v354.__r_.__value_.__l.__data_, v354.__r_.__value_.__l.__size_);
  else
    v483 = v354;
  v482 = off_24C335B18;
  v485 = v356;
  v484 = v112;
  v486 = v357;
  v478 = (uint64_t (**)())off_24C335D90;
  v119 = SHIBYTE(v350.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v350.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v479, v350.__r_.__value_.__l.__data_, v350.__r_.__value_.__l.__size_);
  else
    v479 = v350;
  v480 = v110;
  v478 = off_24C335AF8;
  v481 = v108;
  v474 = (uint64_t (**)())off_24C335D90;
  v68 = SHIBYTE(v346.__r_.__value_.__r.__words[2]);
  v117 = v67;
  if (SHIBYTE(v346.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v475, v346.__r_.__value_.__l.__data_, v346.__r_.__value_.__l.__size_);
  else
    v475 = v346;
  v476 = v106;
  v474 = off_24C335AF8;
  v477 = v105;
  v470 = (uint64_t (**)())off_24C335D90;
  v115 = SHIBYTE(v342.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v342.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v471, v342.__r_.__value_.__l.__data_, v342.__r_.__value_.__l.__size_);
  else
    v471 = v342;
  v472 = v104;
  v470 = off_24C335AF8;
  v473 = v103;
  v466 = (uint64_t (**)())off_24C335D90;
  v113 = SHIBYTE(v338.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v338.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v467, v338.__r_.__value_.__l.__data_, v338.__r_.__value_.__l.__size_);
  else
    v467 = v338;
  v468 = v102;
  v466 = off_24C335AF8;
  v469 = v101;
  v462 = (uint64_t (**)())off_24C335D90;
  v111 = SHIBYTE(v334.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v334.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v463, v334.__r_.__value_.__l.__data_, v334.__r_.__value_.__l.__size_);
  else
    v463 = v334;
  v464 = v100;
  v462 = off_24C335AF8;
  v465 = v99;
  v457 = (uint64_t (**)())off_24C335D90;
  v109 = SHIBYTE(v329.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v329.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v458, v329.__r_.__value_.__l.__data_, v329.__r_.__value_.__l.__size_);
  else
    v458 = v329;
  v457 = off_24C335B18;
  v460 = v331;
  v459 = v98;
  v461 = v332;
  v452 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v324.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v453, v324.__r_.__value_.__l.__data_, v324.__r_.__value_.__l.__size_);
  else
    v453 = v324;
  v454 = v325;
  v452 = &off_24C335AB8;
  v455 = v326;
  if (SHIBYTE(v327.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v456, v327.__r_.__value_.__l.__data_, v327.__r_.__value_.__l.__size_);
  else
    v456 = v327;
  v447 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v319.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v448, v319.__r_.__value_.__l.__data_, v319.__r_.__value_.__l.__size_);
  else
    v448 = v319;
  v449 = v320;
  v447 = &off_24C335AB8;
  v450 = v321;
  if (SHIBYTE(v322.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v451, v322.__r_.__value_.__l.__data_, v322.__r_.__value_.__l.__size_);
  else
    v451 = v322;
  v442 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v314.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v443, v314.__r_.__value_.__l.__data_, v314.__r_.__value_.__l.__size_);
  else
    v443 = v314;
  v444 = v315;
  v442 = &off_24C335AB8;
  v445 = v316;
  if (SHIBYTE(v317.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v446, v317.__r_.__value_.__l.__data_, v317.__r_.__value_.__l.__size_);
  else
    v446 = v317;
  v437 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v309.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v438, v309.__r_.__value_.__l.__data_, v309.__r_.__value_.__l.__size_);
  else
    v438 = v309;
  v439 = v310;
  v437 = &off_24C335AB8;
  v440 = v311;
  if (SHIBYTE(v312.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v441, v312.__r_.__value_.__l.__data_, v312.__r_.__value_.__l.__size_);
  else
    v441 = v312;
  v432 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v304.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v433, v304.__r_.__value_.__l.__data_, v304.__r_.__value_.__l.__size_);
  else
    v433 = v304;
  v434 = v305;
  v432 = &off_24C335AB8;
  v435 = v306;
  if (SHIBYTE(v307.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v436, v307.__r_.__value_.__l.__data_, v307.__r_.__value_.__l.__size_);
  else
    v436 = v307;
  v427 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v299.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v428, v299.__r_.__value_.__l.__data_, v299.__r_.__value_.__l.__size_);
  else
    v428 = v299;
  v429 = v300;
  v427 = &off_24C335AB8;
  v430 = v301;
  if (SHIBYTE(v302.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v431, v302.__r_.__value_.__l.__data_, v302.__r_.__value_.__l.__size_);
  else
    v431 = v302;
  v422 = (uint64_t (**)())off_24C335D90;
  v69 = SHIBYTE(v294.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v294.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v423, v294.__r_.__value_.__l.__data_, v294.__r_.__value_.__l.__size_);
  else
    v423 = v294;
  v422 = off_24C335B18;
  v425 = v296;
  v424 = v97;
  v426 = v297;
  v417 = (uint64_t (**)())off_24C335D90;
  v70 = SHIBYTE(v289.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v289.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v418, v289.__r_.__value_.__l.__data_, v289.__r_.__value_.__l.__size_);
  else
    v418 = v289;
  v417 = off_24C335B18;
  v420 = v291;
  v419 = v96;
  v421 = v292;
  v413 = (uint64_t (**)())off_24C335D90;
  v71 = SHIBYTE(v285.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v285.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v414, v285.__r_.__value_.__l.__data_, v285.__r_.__value_.__l.__size_);
  else
    v414 = v285;
  v415 = v95;
  v413 = off_24C335AF8;
  v416 = v94;
  v408 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v280.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v409, v280.__r_.__value_.__l.__data_, v280.__r_.__value_.__l.__size_);
  else
    v409 = v280;
  v410 = v281;
  v408 = &off_24C335AB8;
  v411 = v282;
  if (SHIBYTE(v283.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v412, v283.__r_.__value_.__l.__data_, v283.__r_.__value_.__l.__size_);
  else
    v412 = v283;
  v403 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v275.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v404, v275.__r_.__value_.__l.__data_, v275.__r_.__value_.__l.__size_);
  else
    v404 = v275;
  v405 = v276;
  v403 = &off_24C335AB8;
  v406 = v277;
  if (SHIBYTE(v278.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v407, v278.__r_.__value_.__l.__data_, v278.__r_.__value_.__l.__size_);
  else
    v407 = v278;
  v398 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v270.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v399, v270.__r_.__value_.__l.__data_, v270.__r_.__value_.__l.__size_);
  else
    v399 = v270;
  v400 = v271;
  v398 = &off_24C335AB8;
  v401 = v272;
  if (SHIBYTE(v273.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v402, v273.__r_.__value_.__l.__data_, v273.__r_.__value_.__l.__size_);
  else
    v402 = v273;
  v393 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v265.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v394, v265.__r_.__value_.__l.__data_, v265.__r_.__value_.__l.__size_);
  else
    v394 = v265;
  v395 = v266;
  v393 = &off_24C335AB8;
  v396 = v267;
  if (SHIBYTE(v268.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v397, v268.__r_.__value_.__l.__data_, v268.__r_.__value_.__l.__size_);
  else
    v397 = v268;
  v389 = (uint64_t (**)())off_24C335D90;
  v72 = SHIBYTE(v261.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v261.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v390, v261.__r_.__value_.__l.__data_, v261.__r_.__value_.__l.__size_);
  else
    v390 = v261;
  v107 = v68;
  v391 = v93;
  v389 = off_24C335AF8;
  v392 = v92;
  v385 = (uint64_t (**)())off_24C335D90;
  v73 = SHIBYTE(v257.__r_.__value_.__r.__words[2]);
  v74 = v66;
  if (SHIBYTE(v257.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v386, v257.__r_.__value_.__l.__data_, v257.__r_.__value_.__l.__size_);
  else
    v386 = v257;
  v387 = v91;
  v385 = off_24C335AF8;
  v388 = v90;
  v381 = (uint64_t (**)())off_24C335D90;
  v75 = SHIBYTE(v253.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v253.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v253.__r_.__value_.__l.__data_, v253.__r_.__value_.__l.__size_);
  else
    __p = v253;
  v383 = v89;
  v381 = off_24C335AF8;
  v384 = v88;
  mediaplatform::DatabaseColumnTuple<8ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::DatabaseColumnTuple(v45, (uint64_t)&v500, (uint64_t)&v491, (uint64_t)&v487, (uint64_t)&v482, (uint64_t)&v478, (uint64_t)&v474, (uint64_t)&v470, (uint64_t)&v466, (uint64_t)&v462, (uint64_t)&v457, (uint64_t)&v452, (uint64_t)&v447, (uint64_t)&v442, (uint64_t)&v437, (uint64_t)&v432, (uint64_t)&v427, (uint64_t)&v422, (uint64_t)&v417,
    (uint64_t)&v413,
    (uint64_t)&v408,
    (uint64_t)&v403,
    (uint64_t)&v398,
    (uint64_t)&v393,
    (uint64_t)&v389,
    (uint64_t)&v385,
    (uint64_t)&v381);
  v381 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v385 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v386.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v386.__r_.__value_.__l.__data_);
  v389 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v390.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v390.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v393);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v398);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v403);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v408);
  v413 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v414.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v414.__r_.__value_.__l.__data_);
  v417 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v418.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v418.__r_.__value_.__l.__data_);
  v422 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v423.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v423.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v427);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v432);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v437);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v442);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v447);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v452);
  v457 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v458.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v458.__r_.__value_.__l.__data_);
  v462 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v463.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v463.__r_.__value_.__l.__data_);
  v466 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v467.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v467.__r_.__value_.__l.__data_);
  v470 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v471.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v471.__r_.__value_.__l.__data_);
  v474 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v475.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v475.__r_.__value_.__l.__data_);
  v478 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v479.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v479.__r_.__value_.__l.__data_);
  v482 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v483.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v483.__r_.__value_.__l.__data_);
  v487 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v488.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v488.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)&v491);
  v500 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v501.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v501.__r_.__value_.__l.__data_);
  *(_QWORD *)(v45 + 1440) = off_24C335D90;
  if (SHIBYTE(v377.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)(v45 + 1448), v377.__r_.__value_.__l.__data_, v377.__r_.__value_.__l.__size_);
  else
    *(std::string *)(v45 + 1448) = v377;
  *(_DWORD *)(v45 + 1472) = v378;
  *(_QWORD *)(v45 + 1440) = &off_24C335AB8;
  *(_BYTE *)(v45 + 1476) = v379;
  v76 = (std::string *)(v45 + 1480);
  if (SHIBYTE(v380.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v76, v380.__r_.__value_.__l.__data_, v380.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v76->__r_.__value_.__l.__data_ = *(_OWORD *)&v380.__r_.__value_.__l.__data_;
    *(_QWORD *)(v45 + 1496) = *((_QWORD *)&v380.__r_.__value_.__l + 2);
  }
  v252 = (uint64_t (**)())off_24C335D90;
  if (v75 < 0)
    operator delete(v253.__r_.__value_.__l.__data_);
  v256 = (uint64_t (**)())off_24C335D90;
  if (v73 < 0)
    operator delete(v257.__r_.__value_.__l.__data_);
  v260 = (uint64_t (**)())off_24C335D90;
  if (v72 < 0)
    operator delete(v261.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v264);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v269);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v274);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v279);
  v284 = (uint64_t (**)())off_24C335D90;
  if (v71 < 0)
    operator delete(v285.__r_.__value_.__l.__data_);
  v288 = (uint64_t (**)())off_24C335D90;
  if (v70 < 0)
    operator delete(v289.__r_.__value_.__l.__data_);
  v293 = (uint64_t (**)())off_24C335D90;
  if (v69 < 0)
    operator delete(v294.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v298);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v303);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v308);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v313);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v318);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v323);
  v328 = (uint64_t (**)())off_24C335D90;
  if (v109 < 0)
    operator delete(v329.__r_.__value_.__l.__data_);
  v333 = (uint64_t (**)())off_24C335D90;
  if (v111 < 0)
    operator delete(v334.__r_.__value_.__l.__data_);
  v337 = (uint64_t (**)())off_24C335D90;
  if (v113 < 0)
    operator delete(v338.__r_.__value_.__l.__data_);
  v341 = (uint64_t (**)())off_24C335D90;
  if (v115 < 0)
    operator delete(v342.__r_.__value_.__l.__data_);
  v345 = (uint64_t (**)())off_24C335D90;
  if (v107 < 0)
    operator delete(v346.__r_.__value_.__l.__data_);
  v349 = (uint64_t (**)())off_24C335D90;
  if (v119 < 0)
    operator delete(v350.__r_.__value_.__l.__data_);
  v353 = (uint64_t (**)())off_24C335D90;
  if (v117 < 0)
  {
    operator delete(v354.__r_.__value_.__l.__data_);
    if ((v74 & 0x80000000) == 0)
      goto LABEL_420;
  }
  else if ((v74 & 0x80000000) == 0)
  {
    goto LABEL_420;
  }
  operator delete(v359.__r_.__value_.__l.__data_);
LABEL_420:
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)&v362);
  if (v84 < 0)
    operator delete(v372.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v376);
  *(_QWORD *)(v45 + 1504) = off_24C335D90;
  v77 = (std::string *)(v45 + 1512);
  v78 = SHIBYTE(v249.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v249.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v77, v249.__r_.__value_.__l.__data_, v249.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v77->__r_.__value_.__l.__data_ = *(_OWORD *)&v249.__r_.__value_.__l.__data_;
    *(_QWORD *)(v45 + 1528) = *((_QWORD *)&v249.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(v45 + 1536) = v250;
  *(_QWORD *)(v45 + 1504) = off_24C335AF8;
  *(_QWORD *)(v45 + 1540) = v251;
  if (v87 < 0)
    operator delete(v120.__r_.__value_.__l.__data_);
  if (v86 < 0)
    operator delete(v124.__r_.__value_.__l.__data_);
  if (v83 < 0)
    operator delete(v128.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v131);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v136);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v141);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v146);
  if (SHIBYTE(v152.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v152.__r_.__value_.__l.__data_);
  if (SHIBYTE(v156.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v156.__r_.__value_.__l.__data_);
  if (SHIBYTE(v161.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v161.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v165);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v170);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v175);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v180);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v185);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v190);
  if (SHIBYTE(v196.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v196.__r_.__value_.__l.__data_);
  if (SHIBYTE(v201.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v201.__r_.__value_.__l.__data_);
  if (SHIBYTE(v205.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v205.__r_.__value_.__l.__data_);
  if (SHIBYTE(v209.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v209.__r_.__value_.__l.__data_);
  if (SHIBYTE(v213.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v213.__r_.__value_.__l.__data_);
  if (SHIBYTE(v217.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v217.__r_.__value_.__l.__data_);
  if (SHIBYTE(v221.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v221.__r_.__value_.__l.__data_);
  if (SHIBYTE(v226.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v226.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)&v229);
  if (SHIBYTE(v239.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v239.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v243);
  if (v78 < 0)
    operator delete(v249.__r_.__value_.__l.__data_);
  *(_QWORD *)(v45 + 1552) = off_24C335D90;
  v79 = (std::string *)(v45 + 1560);
  if (*(char *)(v85 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v79, *(const std::string::value_type **)(v85 + 8), *(_QWORD *)(v85 + 16));
  }
  else
  {
    v80 = *(_OWORD *)(v85 + 8);
    *(_QWORD *)(v45 + 1576) = *(_QWORD *)(v85 + 24);
    *(_OWORD *)&v79->__r_.__value_.__l.__data_ = v80;
  }
  *(_DWORD *)(v45 + 1584) = *(_DWORD *)(v85 + 32);
  *(_QWORD *)(v45 + 1552) = off_24C335AD8;
  v81 = *(_QWORD *)(v85 + 36);
  *(_DWORD *)(v45 + 1596) = *(_DWORD *)(v85 + 44);
  *(_QWORD *)(v45 + 1588) = v81;
  return v45;
}

void sub_20A8D1780(_Unwind_Exception *a1)
{
  uint64_t v1;

  mediaplatform::DatabaseColumnTuple<6ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(v1);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<6ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 1504) = off_24C335D90;
  if (*(char *)(a1 + 1535) < 0)
    operator delete(*(void **)(a1 + 1512));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1440);
  *(_QWORD *)(a1 + 1392) = off_24C335D90;
  if (*(char *)(a1 + 1423) < 0)
    operator delete(*(void **)(a1 + 1400));
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn(a1 + 1312);
  *(_QWORD *)(a1 + 1264) = off_24C335D90;
  if (*(char *)(a1 + 1295) < 0)
    operator delete(*(void **)(a1 + 1272));
  *(_QWORD *)(a1 + 1216) = off_24C335D90;
  if (*(char *)(a1 + 1247) < 0)
    operator delete(*(void **)(a1 + 1224));
  return mediaplatform::DatabaseColumnTuple<12ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<7ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 1440);
  *(_QWORD *)(a1 + 1392) = off_24C335D90;
  if (*(char *)(a1 + 1423) < 0)
    operator delete(*(void **)(a1 + 1400));
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn(a1 + 1312);
  *(_QWORD *)(a1 + 1264) = off_24C335D90;
  if (*(char *)(a1 + 1295) < 0)
    operator delete(*(void **)(a1 + 1272));
  *(_QWORD *)(a1 + 1216) = off_24C335D90;
  if (*(char *)(a1 + 1247) < 0)
    operator delete(*(void **)(a1 + 1224));
  return mediaplatform::DatabaseColumnTuple<12ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<8ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  const void *v42;
  size_t v43;
  void *v44;
  uint64_t v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  std::string *v62;
  int v63;
  std::string *v64;
  __int128 v65;
  uint64_t v66;
  int v68;
  int v69;
  uint64_t v70;
  int v71;
  int v72;
  int v73;
  int v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  int v82;
  int v83;
  int v84;
  int v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  int v93;
  int v94;
  int v95;
  uint64_t v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  std::string v102;
  int v103;
  uint64_t v104;
  uint64_t (**v105)();
  std::string v106;
  int v107;
  uint64_t v108;
  uint64_t (**v109)();
  std::string v110;
  int v111;
  uint64_t v112;
  uint64_t (**v113)();
  std::string v114;
  int v115;
  char v116;
  std::string v117;
  uint64_t (**v118)();
  std::string v119;
  int v120;
  char v121;
  std::string v122;
  uint64_t (**v123)();
  std::string v124;
  int v125;
  char v126;
  std::string v127;
  uint64_t (**v128)();
  std::string v129;
  int v130;
  char v131;
  std::string v132;
  uint64_t (**v133)();
  std::string v134;
  int v135;
  uint64_t v136;
  uint64_t (**v137)();
  std::string v138;
  int v139;
  uint64_t v140;
  int v141;
  uint64_t (**v142)();
  std::string v143;
  int v144;
  uint64_t v145;
  int v146;
  uint64_t (**v147)();
  std::string v148;
  int v149;
  char v150;
  std::string v151;
  uint64_t (**v152)();
  std::string v153;
  int v154;
  char v155;
  std::string v156;
  uint64_t (**v157)();
  std::string v158;
  int v159;
  char v160;
  std::string v161;
  uint64_t (**v162)();
  std::string v163;
  int v164;
  char v165;
  std::string v166;
  uint64_t (**v167)();
  std::string v168;
  int v169;
  char v170;
  std::string v171;
  uint64_t (**v172)();
  std::string v173;
  int v174;
  char v175;
  std::string v176;
  uint64_t (**v177)();
  std::string v178;
  int v179;
  uint64_t v180;
  int v181;
  uint64_t (**v182)();
  std::string v183;
  int v184;
  uint64_t v185;
  uint64_t (**v186)();
  std::string v187;
  int v188;
  uint64_t v189;
  uint64_t (**v190)();
  std::string v191;
  int v192;
  uint64_t v193;
  uint64_t (**v194)();
  std::string v195;
  int v196;
  uint64_t v197;
  uint64_t (**v198)();
  std::string v199;
  int v200;
  uint64_t v201;
  uint64_t (**v202)();
  std::string v203;
  int v204;
  uint64_t v205;
  int v206;
  uint64_t (**v207)();
  std::string __s;
  int v209;
  uint64_t v210;
  uint64_t (**v211)();
  std::string v212;
  int v213;
  char v214;
  _QWORD v215[4];
  char v216;
  uint64_t (**v217)();
  std::string v218;
  int v219;
  uint64_t v220;
  uint64_t (**v221)();
  std::string v222;
  int v223;
  uint64_t v224;
  uint64_t (**v225)();
  std::string v226;
  int v227;
  uint64_t v228;
  uint64_t (**v229)();
  std::string v230;
  int v231;
  char v232;
  std::string v233;
  uint64_t (**v234)();
  std::string v235;
  int v236;
  char v237;
  std::string v238;
  uint64_t (**v239)();
  std::string v240;
  int v241;
  char v242;
  std::string v243;
  uint64_t (**v244)();
  std::string v245;
  int v246;
  char v247;
  std::string v248;
  uint64_t (**v249)();
  std::string v250;
  int v251;
  uint64_t v252;
  uint64_t (**v253)();
  std::string v254;
  int v255;
  uint64_t v256;
  int v257;
  uint64_t (**v258)();
  std::string v259;
  int v260;
  uint64_t v261;
  int v262;
  uint64_t (**v263)();
  std::string v264;
  int v265;
  char v266;
  std::string v267;
  uint64_t (**v268)();
  std::string v269;
  int v270;
  char v271;
  std::string v272;
  uint64_t (**v273)();
  std::string v274;
  int v275;
  char v276;
  std::string v277;
  uint64_t (**v278)();
  std::string v279;
  int v280;
  char v281;
  std::string v282;
  uint64_t (**v283)();
  std::string v284;
  int v285;
  char v286;
  std::string v287;
  uint64_t (**v288)();
  std::string v289;
  int v290;
  char v291;
  std::string v292;
  uint64_t (**v293)();
  std::string v294;
  int v295;
  uint64_t v296;
  int v297;
  uint64_t (**v298)();
  std::string v299;
  int v300;
  uint64_t v301;
  uint64_t (**v302)();
  std::string v303;
  int v304;
  uint64_t v305;
  uint64_t (**v306)();
  std::string v307;
  int v308;
  uint64_t v309;
  uint64_t (**v310)();
  std::string v311;
  int v312;
  uint64_t v313;
  uint64_t (**v314)();
  std::string v315;
  int v316;
  uint64_t v317;
  uint64_t (**v318)();
  std::string v319;
  int v320;
  uint64_t v321;
  int v322;
  uint64_t (**v323)();
  std::string v324;
  int v325;
  uint64_t v326;
  uint64_t (**v327)();
  std::string __p;
  int v329;
  uint64_t v330;
  uint64_t (**v331)();
  std::string v332;
  int v333;
  uint64_t v334;
  uint64_t (**v335)();
  std::string v336;
  int v337;
  uint64_t v338;
  uint64_t (**v339)();
  std::string v340;
  int v341;
  char v342;
  std::string v343;
  uint64_t (**v344)();
  std::string v345;
  int v346;
  char v347;
  std::string v348;
  uint64_t (**v349)();
  std::string v350;
  int v351;
  char v352;
  std::string v353;
  uint64_t (**v354)();
  std::string v355;
  int v356;
  char v357;
  std::string v358;
  uint64_t (**v359)();
  std::string v360;
  int v361;
  uint64_t v362;
  uint64_t (**v363)();
  std::string v364;
  int v365;
  uint64_t v366;
  int v367;
  uint64_t (**v368)();
  std::string v369;
  int v370;
  uint64_t v371;
  int v372;
  uint64_t (**v373)();
  std::string v374;
  int v375;
  char v376;
  std::string v377;
  uint64_t (**v378)();
  std::string v379;
  int v380;
  char v381;
  std::string v382;
  uint64_t (**v383)();
  std::string v384;
  int v385;
  char v386;
  std::string v387;
  uint64_t (**v388)();
  std::string v389;
  int v390;
  char v391;
  std::string v392;
  uint64_t (**v393)();
  std::string v394;
  int v395;
  char v396;
  std::string v397;
  uint64_t (**v398)();
  std::string v399;
  int v400;
  char v401;
  std::string v402;
  uint64_t (**v403)();
  std::string v404;
  int v405;
  uint64_t v406;
  int v407;
  uint64_t (**v408)();
  std::string v409;
  int v410;
  uint64_t v411;
  uint64_t (**v412)();
  std::string v413;
  int v414;
  uint64_t v415;
  uint64_t (**v416)();
  std::string v417;
  int v418;
  uint64_t v419;
  uint64_t (**v420)();
  std::string v421;
  int v422;
  uint64_t v423;
  uint64_t (**v424)();
  std::string v425;
  int v426;
  uint64_t v427;
  uint64_t (**v428)();
  std::string v429;
  int v430;
  uint64_t v431;
  int v432;

  v27 = MEMORY[0x24BDAC7A8](a1);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v39 = v28;
  v70 = v40;
  v41 = v27;
  v211 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v212, *(const std::string::value_type **)(v28 + 8), *(_QWORD *)(v28 + 16));
  else
    v212 = *(std::string *)(v28 + 8);
  v213 = *(_DWORD *)(v39 + 32);
  v211 = &off_24C335A98;
  v214 = *(_BYTE *)(v39 + 36);
  v42 = *(const void **)(v39 + 64);
  v43 = *(_QWORD *)(v39 + 48);
  v215[0] = &off_24C331510;
  v215[1] = v43;
  v215[2] = v43;
  if (v43)
    v44 = (void *)operator new[]();
  else
    v44 = 0;
  v215[3] = v44;
  v216 = 1;
  if (v42)
    memcpy(v44, v42, v43);
  else
    bzero(v44, v43);
  if (*(char *)(v38 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(v38 + 8), *(_QWORD *)(v38 + 16));
  else
    __s = *(std::string *)(v38 + 8);
  v74 = *(_DWORD *)(v38 + 32);
  v209 = v74;
  v207 = off_24C335AF8;
  v45 = *(_QWORD *)(v38 + 36);
  v210 = v45;
  if (*(char *)(v36 + 31) < 0)
    std::string::__init_copy_ctor_external(&v203, *(const std::string::value_type **)(v36 + 8), *(_QWORD *)(v36 + 16));
  else
    v203 = *(std::string *)(v36 + 8);
  v46 = *(_DWORD *)(v36 + 32);
  v202 = off_24C335B18;
  v205 = *(_QWORD *)(v36 + 36);
  v47 = *(_DWORD *)(v36 + 44);
  v100 = v46;
  v204 = v46;
  v206 = v47;
  if (*(char *)(v34 + 31) < 0)
    std::string::__init_copy_ctor_external(&v199, *(const std::string::value_type **)(v34 + 8), *(_QWORD *)(v34 + 16));
  else
    v199 = *(std::string *)(v34 + 8);
  v98 = *(_DWORD *)(v34 + 32);
  v200 = v98;
  v198 = off_24C335AF8;
  v96 = *(_QWORD *)(v34 + 36);
  v201 = v96;
  if (*(char *)(v32 + 31) < 0)
    std::string::__init_copy_ctor_external(&v195, *(const std::string::value_type **)(v32 + 8), *(_QWORD *)(v32 + 16));
  else
    v195 = *(std::string *)(v32 + 8);
  v94 = *(_DWORD *)(v32 + 32);
  v196 = v94;
  v194 = off_24C335AF8;
  v92 = *(_QWORD *)(v32 + 36);
  v197 = v92;
  if (*(char *)(v30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v191, *(const std::string::value_type **)(v30 + 8), *(_QWORD *)(v30 + 16));
  else
    v191 = *(std::string *)(v30 + 8);
  v91 = *(_DWORD *)(v30 + 32);
  v192 = v91;
  v190 = off_24C335AF8;
  v90 = *(_QWORD *)(v30 + 36);
  v193 = v90;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v187, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v187 = *(std::string *)(a9 + 8);
  v89 = *(_DWORD *)(a9 + 32);
  v188 = v89;
  v186 = off_24C335AF8;
  v88 = *(_QWORD *)(a9 + 36);
  v189 = v88;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v183, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v183 = *(std::string *)(a10 + 8);
  v87 = *(_DWORD *)(a10 + 32);
  v184 = v87;
  v182 = off_24C335AF8;
  v86 = *(_QWORD *)(a10 + 36);
  v185 = v86;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v178, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v178 = *(std::string *)(a11 + 8);
  v48 = *(_DWORD *)(a11 + 32);
  v177 = off_24C335B18;
  v180 = *(_QWORD *)(a11 + 36);
  v49 = *(_DWORD *)(a11 + 44);
  v85 = v48;
  v179 = v48;
  v181 = v49;
  v172 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v173, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v173 = *(std::string *)(a12 + 8);
  v174 = *(_DWORD *)(a12 + 32);
  v172 = &off_24C335AB8;
  v175 = *(_BYTE *)(a12 + 36);
  if (*(char *)(a12 + 63) < 0)
    std::string::__init_copy_ctor_external(&v176, *(const std::string::value_type **)(a12 + 40), *(_QWORD *)(a12 + 48));
  else
    v176 = *(std::string *)(a12 + 40);
  v167 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v168, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v168 = *(std::string *)(a13 + 8);
  v169 = *(_DWORD *)(a13 + 32);
  v167 = &off_24C335AB8;
  v170 = *(_BYTE *)(a13 + 36);
  if (*(char *)(a13 + 63) < 0)
    std::string::__init_copy_ctor_external(&v171, *(const std::string::value_type **)(a13 + 40), *(_QWORD *)(a13 + 48));
  else
    v171 = *(std::string *)(a13 + 40);
  v162 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v163, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v163 = *(std::string *)(a14 + 8);
  v164 = *(_DWORD *)(a14 + 32);
  v162 = &off_24C335AB8;
  v165 = *(_BYTE *)(a14 + 36);
  if (*(char *)(a14 + 63) < 0)
    std::string::__init_copy_ctor_external(&v166, *(const std::string::value_type **)(a14 + 40), *(_QWORD *)(a14 + 48));
  else
    v166 = *(std::string *)(a14 + 40);
  v157 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v158, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v158 = *(std::string *)(a15 + 8);
  v159 = *(_DWORD *)(a15 + 32);
  v157 = &off_24C335AB8;
  v160 = *(_BYTE *)(a15 + 36);
  if (*(char *)(a15 + 63) < 0)
    std::string::__init_copy_ctor_external(&v161, *(const std::string::value_type **)(a15 + 40), *(_QWORD *)(a15 + 48));
  else
    v161 = *(std::string *)(a15 + 40);
  v152 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v153, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v153 = *(std::string *)(a16 + 8);
  v154 = *(_DWORD *)(a16 + 32);
  v152 = &off_24C335AB8;
  v155 = *(_BYTE *)(a16 + 36);
  if (*(char *)(a16 + 63) < 0)
    std::string::__init_copy_ctor_external(&v156, *(const std::string::value_type **)(a16 + 40), *(_QWORD *)(a16 + 48));
  else
    v156 = *(std::string *)(a16 + 40);
  v147 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v148, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v148 = *(std::string *)(a17 + 8);
  v149 = *(_DWORD *)(a17 + 32);
  v147 = &off_24C335AB8;
  v150 = *(_BYTE *)(a17 + 36);
  if (*(char *)(a17 + 63) < 0)
    std::string::__init_copy_ctor_external(&v151, *(const std::string::value_type **)(a17 + 40), *(_QWORD *)(a17 + 48));
  else
    v151 = *(std::string *)(a17 + 40);
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v143, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v143 = *(std::string *)(a18 + 8);
  v50 = *(_DWORD *)(a18 + 32);
  v142 = off_24C335B18;
  v145 = *(_QWORD *)(a18 + 36);
  v51 = *(_DWORD *)(a18 + 44);
  v84 = v50;
  v144 = v50;
  v146 = v51;
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v138, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v138 = *(std::string *)(a19 + 8);
  v52 = *(_DWORD *)(a19 + 32);
  v137 = off_24C335B18;
  v140 = *(_QWORD *)(a19 + 36);
  v53 = *(_DWORD *)(a19 + 44);
  v83 = v52;
  v139 = v52;
  v141 = v53;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v134, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v134 = *(std::string *)(a20 + 8);
  v82 = *(_DWORD *)(a20 + 32);
  v135 = v82;
  v133 = off_24C335AF8;
  v81 = *(_QWORD *)(a20 + 36);
  v136 = v81;
  v128 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v129, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v129 = *(std::string *)(a21 + 8);
  v130 = *(_DWORD *)(a21 + 32);
  v128 = &off_24C335AB8;
  v131 = *(_BYTE *)(a21 + 36);
  if (*(char *)(a21 + 63) < 0)
    std::string::__init_copy_ctor_external(&v132, *(const std::string::value_type **)(a21 + 40), *(_QWORD *)(a21 + 48));
  else
    v132 = *(std::string *)(a21 + 40);
  v123 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v124, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v124 = *(std::string *)(a22 + 8);
  v125 = *(_DWORD *)(a22 + 32);
  v123 = &off_24C335AB8;
  v126 = *(_BYTE *)(a22 + 36);
  if (*(char *)(a22 + 63) < 0)
    std::string::__init_copy_ctor_external(&v127, *(const std::string::value_type **)(a22 + 40), *(_QWORD *)(a22 + 48));
  else
    v127 = *(std::string *)(a22 + 40);
  v118 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v119, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v119 = *(std::string *)(a23 + 8);
  v120 = *(_DWORD *)(a23 + 32);
  v118 = &off_24C335AB8;
  v121 = *(_BYTE *)(a23 + 36);
  if (*(char *)(a23 + 63) < 0)
    std::string::__init_copy_ctor_external(&v122, *(const std::string::value_type **)(a23 + 40), *(_QWORD *)(a23 + 48));
  else
    v122 = *(std::string *)(a23 + 40);
  v113 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v114, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v114 = *(std::string *)(a24 + 8);
  v115 = *(_DWORD *)(a24 + 32);
  v113 = &off_24C335AB8;
  v116 = *(_BYTE *)(a24 + 36);
  if (*(char *)(a24 + 63) < 0)
    std::string::__init_copy_ctor_external(&v117, *(const std::string::value_type **)(a24 + 40), *(_QWORD *)(a24 + 48));
  else
    v117 = *(std::string *)(a24 + 40);
  if (*(char *)(a25 + 31) < 0)
    std::string::__init_copy_ctor_external(&v110, *(const std::string::value_type **)(a25 + 8), *(_QWORD *)(a25 + 16));
  else
    v110 = *(std::string *)(a25 + 8);
  v80 = *(_DWORD *)(a25 + 32);
  v111 = v80;
  v109 = off_24C335AF8;
  v79 = *(_QWORD *)(a25 + 36);
  v112 = v79;
  if (*(char *)(a26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v106, *(const std::string::value_type **)(a26 + 8), *(_QWORD *)(a26 + 16));
  else
    v106 = *(std::string *)(a26 + 8);
  v78 = *(_DWORD *)(a26 + 32);
  v107 = v78;
  v105 = off_24C335AF8;
  v77 = *(_QWORD *)(a26 + 36);
  v108 = v77;
  if (*(char *)(a27 + 31) < 0)
    std::string::__init_copy_ctor_external(&v102, *(const std::string::value_type **)(a27 + 8), *(_QWORD *)(a27 + 16));
  else
    v102 = *(std::string *)(a27 + 8);
  v76 = *(_DWORD *)(a27 + 32);
  v103 = v76;
  v75 = *(_QWORD *)(a27 + 36);
  v104 = v75;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v324, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v324 = __s;
  v325 = v74;
  v323 = off_24C335AF8;
  v326 = v45;
  if (SHIBYTE(v203.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v319, v203.__r_.__value_.__l.__data_, v203.__r_.__value_.__l.__size_);
  else
    v319 = v203;
  v318 = off_24C335B18;
  v321 = v205;
  v320 = v100;
  v322 = v206;
  if (SHIBYTE(v199.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v315, v199.__r_.__value_.__l.__data_, v199.__r_.__value_.__l.__size_);
  else
    v315 = v199;
  v316 = v98;
  v314 = off_24C335AF8;
  v317 = v96;
  if (SHIBYTE(v195.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v311, v195.__r_.__value_.__l.__data_, v195.__r_.__value_.__l.__size_);
  else
    v311 = v195;
  v312 = v94;
  v310 = off_24C335AF8;
  v313 = v92;
  if (SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v307, v191.__r_.__value_.__l.__data_, v191.__r_.__value_.__l.__size_);
  else
    v307 = v191;
  v308 = v91;
  v306 = off_24C335AF8;
  v309 = v90;
  if (SHIBYTE(v187.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v303, v187.__r_.__value_.__l.__data_, v187.__r_.__value_.__l.__size_);
  else
    v303 = v187;
  v304 = v89;
  v302 = off_24C335AF8;
  v305 = v88;
  if (SHIBYTE(v183.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v299, v183.__r_.__value_.__l.__data_, v183.__r_.__value_.__l.__size_);
  else
    v299 = v183;
  v300 = v87;
  v298 = off_24C335AF8;
  v301 = v86;
  if (SHIBYTE(v178.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v294, v178.__r_.__value_.__l.__data_, v178.__r_.__value_.__l.__size_);
  else
    v294 = v178;
  v293 = off_24C335B18;
  v296 = v180;
  v295 = v85;
  v297 = v181;
  v288 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v173.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v289, v173.__r_.__value_.__l.__data_, v173.__r_.__value_.__l.__size_);
  else
    v289 = v173;
  v290 = v174;
  v288 = &off_24C335AB8;
  v291 = v175;
  if (SHIBYTE(v176.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v292, v176.__r_.__value_.__l.__data_, v176.__r_.__value_.__l.__size_);
  else
    v292 = v176;
  v283 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v168.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v284, v168.__r_.__value_.__l.__data_, v168.__r_.__value_.__l.__size_);
  else
    v284 = v168;
  v285 = v169;
  v283 = &off_24C335AB8;
  v286 = v170;
  if (SHIBYTE(v171.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v287, v171.__r_.__value_.__l.__data_, v171.__r_.__value_.__l.__size_);
  else
    v287 = v171;
  v278 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v163.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v279, v163.__r_.__value_.__l.__data_, v163.__r_.__value_.__l.__size_);
  else
    v279 = v163;
  v280 = v164;
  v278 = &off_24C335AB8;
  v281 = v165;
  if (SHIBYTE(v166.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v282, v166.__r_.__value_.__l.__data_, v166.__r_.__value_.__l.__size_);
  else
    v282 = v166;
  v273 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v158.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v274, v158.__r_.__value_.__l.__data_, v158.__r_.__value_.__l.__size_);
  else
    v274 = v158;
  v275 = v159;
  v273 = &off_24C335AB8;
  v276 = v160;
  if (SHIBYTE(v161.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v277, v161.__r_.__value_.__l.__data_, v161.__r_.__value_.__l.__size_);
  else
    v277 = v161;
  v268 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v153.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v269, v153.__r_.__value_.__l.__data_, v153.__r_.__value_.__l.__size_);
  else
    v269 = v153;
  v270 = v154;
  v268 = &off_24C335AB8;
  v271 = v155;
  if (SHIBYTE(v156.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v272, v156.__r_.__value_.__l.__data_, v156.__r_.__value_.__l.__size_);
  else
    v272 = v156;
  v263 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v148.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v264, v148.__r_.__value_.__l.__data_, v148.__r_.__value_.__l.__size_);
  else
    v264 = v148;
  v265 = v149;
  v263 = &off_24C335AB8;
  v266 = v150;
  if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v267, v151.__r_.__value_.__l.__data_, v151.__r_.__value_.__l.__size_);
  else
    v267 = v151;
  v258 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v259, v143.__r_.__value_.__l.__data_, v143.__r_.__value_.__l.__size_);
  else
    v259 = v143;
  v258 = off_24C335B18;
  v261 = v145;
  v260 = v84;
  v262 = v146;
  v253 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v254, v138.__r_.__value_.__l.__data_, v138.__r_.__value_.__l.__size_);
  else
    v254 = v138;
  v253 = off_24C335B18;
  v256 = v140;
  v255 = v83;
  v257 = v141;
  v249 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v134.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v250, v134.__r_.__value_.__l.__data_, v134.__r_.__value_.__l.__size_);
  else
    v250 = v134;
  v251 = v82;
  v249 = off_24C335AF8;
  v252 = v81;
  v244 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v129.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v245, v129.__r_.__value_.__l.__data_, v129.__r_.__value_.__l.__size_);
  else
    v245 = v129;
  v246 = v130;
  v244 = &off_24C335AB8;
  v247 = v131;
  if (SHIBYTE(v132.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v248, v132.__r_.__value_.__l.__data_, v132.__r_.__value_.__l.__size_);
  else
    v248 = v132;
  v239 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v124.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v240, v124.__r_.__value_.__l.__data_, v124.__r_.__value_.__l.__size_);
  else
    v240 = v124;
  v241 = v125;
  v239 = &off_24C335AB8;
  v242 = v126;
  if (SHIBYTE(v127.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v243, v127.__r_.__value_.__l.__data_, v127.__r_.__value_.__l.__size_);
  else
    v243 = v127;
  v234 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v119.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v235, v119.__r_.__value_.__l.__data_, v119.__r_.__value_.__l.__size_);
  else
    v235 = v119;
  v236 = v120;
  v234 = &off_24C335AB8;
  v237 = v121;
  if (SHIBYTE(v122.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v238, v122.__r_.__value_.__l.__data_, v122.__r_.__value_.__l.__size_);
  else
    v238 = v122;
  v229 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v114.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v230, v114.__r_.__value_.__l.__data_, v114.__r_.__value_.__l.__size_);
  else
    v230 = v114;
  v231 = v115;
  v229 = &off_24C335AB8;
  v232 = v116;
  if (SHIBYTE(v117.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v233, v117.__r_.__value_.__l.__data_, v117.__r_.__value_.__l.__size_);
  else
    v233 = v117;
  v225 = (uint64_t (**)())off_24C335D90;
  v72 = SHIBYTE(v110.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v110.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v226, v110.__r_.__value_.__l.__data_, v110.__r_.__value_.__l.__size_);
  else
    v226 = v110;
  v227 = v80;
  v225 = off_24C335AF8;
  v228 = v79;
  v221 = (uint64_t (**)())off_24C335D90;
  v71 = SHIBYTE(v106.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v106.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v222, v106.__r_.__value_.__l.__data_, v106.__r_.__value_.__l.__size_);
  else
    v222 = v106;
  v223 = v78;
  v221 = off_24C335AF8;
  v224 = v77;
  v217 = (uint64_t (**)())off_24C335D90;
  v68 = SHIBYTE(v102.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v102.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v218, v102.__r_.__value_.__l.__data_, v102.__r_.__value_.__l.__size_);
  else
    v218 = v102;
  v219 = v76;
  v217 = off_24C335AF8;
  v220 = v75;
  v428 = (uint64_t (**)())off_24C335D90;
  v73 = SHIBYTE(v319.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v319.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v429, v319.__r_.__value_.__l.__data_, v319.__r_.__value_.__l.__size_);
  else
    v429 = v319;
  v428 = off_24C335B18;
  v431 = v321;
  v430 = v100;
  v432 = v322;
  v424 = (uint64_t (**)())off_24C335D90;
  v54 = SHIBYTE(v315.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v315.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v425, v315.__r_.__value_.__l.__data_, v315.__r_.__value_.__l.__size_);
  else
    v425 = v315;
  v426 = v98;
  v424 = off_24C335AF8;
  v427 = v96;
  v420 = (uint64_t (**)())off_24C335D90;
  v55 = SHIBYTE(v311.__r_.__value_.__r.__words[2]);
  v101 = v54;
  if (SHIBYTE(v311.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v421, v311.__r_.__value_.__l.__data_, v311.__r_.__value_.__l.__size_);
  else
    v421 = v311;
  v422 = v94;
  v420 = off_24C335AF8;
  v423 = v92;
  v416 = (uint64_t (**)())off_24C335D90;
  v99 = SHIBYTE(v307.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v307.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v417, v307.__r_.__value_.__l.__data_, v307.__r_.__value_.__l.__size_);
  else
    v417 = v307;
  v418 = v91;
  v416 = off_24C335AF8;
  v419 = v90;
  v412 = (uint64_t (**)())off_24C335D90;
  v97 = SHIBYTE(v303.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v303.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v413, v303.__r_.__value_.__l.__data_, v303.__r_.__value_.__l.__size_);
  else
    v413 = v303;
  v414 = v89;
  v412 = off_24C335AF8;
  v415 = v88;
  v408 = (uint64_t (**)())off_24C335D90;
  v95 = SHIBYTE(v299.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v299.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v409, v299.__r_.__value_.__l.__data_, v299.__r_.__value_.__l.__size_);
  else
    v409 = v299;
  v410 = v87;
  v408 = off_24C335AF8;
  v411 = v86;
  v403 = (uint64_t (**)())off_24C335D90;
  v93 = SHIBYTE(v294.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v294.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v404, v294.__r_.__value_.__l.__data_, v294.__r_.__value_.__l.__size_);
  else
    v404 = v294;
  v403 = off_24C335B18;
  v406 = v296;
  v405 = v85;
  v407 = v297;
  v398 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v289.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v399, v289.__r_.__value_.__l.__data_, v289.__r_.__value_.__l.__size_);
  else
    v399 = v289;
  v400 = v290;
  v398 = &off_24C335AB8;
  v401 = v291;
  if (SHIBYTE(v292.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v402, v292.__r_.__value_.__l.__data_, v292.__r_.__value_.__l.__size_);
  else
    v402 = v292;
  v393 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v284.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v394, v284.__r_.__value_.__l.__data_, v284.__r_.__value_.__l.__size_);
  else
    v394 = v284;
  v395 = v285;
  v393 = &off_24C335AB8;
  v396 = v286;
  if (SHIBYTE(v287.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v397, v287.__r_.__value_.__l.__data_, v287.__r_.__value_.__l.__size_);
  else
    v397 = v287;
  v388 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v279.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v389, v279.__r_.__value_.__l.__data_, v279.__r_.__value_.__l.__size_);
  else
    v389 = v279;
  v390 = v280;
  v388 = &off_24C335AB8;
  v391 = v281;
  if (SHIBYTE(v282.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v392, v282.__r_.__value_.__l.__data_, v282.__r_.__value_.__l.__size_);
  else
    v392 = v282;
  v383 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v274.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v384, v274.__r_.__value_.__l.__data_, v274.__r_.__value_.__l.__size_);
  else
    v384 = v274;
  v385 = v275;
  v383 = &off_24C335AB8;
  v386 = v276;
  if (SHIBYTE(v277.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v387, v277.__r_.__value_.__l.__data_, v277.__r_.__value_.__l.__size_);
  else
    v387 = v277;
  v378 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v269.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v379, v269.__r_.__value_.__l.__data_, v269.__r_.__value_.__l.__size_);
  else
    v379 = v269;
  v380 = v270;
  v378 = &off_24C335AB8;
  v381 = v271;
  if (SHIBYTE(v272.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v382, v272.__r_.__value_.__l.__data_, v272.__r_.__value_.__l.__size_);
  else
    v382 = v272;
  v373 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v264.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v374, v264.__r_.__value_.__l.__data_, v264.__r_.__value_.__l.__size_);
  else
    v374 = v264;
  v375 = v265;
  v373 = &off_24C335AB8;
  v376 = v266;
  if (SHIBYTE(v267.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v377, v267.__r_.__value_.__l.__data_, v267.__r_.__value_.__l.__size_);
  else
    v377 = v267;
  v368 = (uint64_t (**)())off_24C335D90;
  v56 = SHIBYTE(v259.__r_.__value_.__r.__words[2]);
  v69 = v55;
  if (SHIBYTE(v259.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v369, v259.__r_.__value_.__l.__data_, v259.__r_.__value_.__l.__size_);
  else
    v369 = v259;
  v368 = off_24C335B18;
  v371 = v261;
  v370 = v84;
  v372 = v262;
  v363 = (uint64_t (**)())off_24C335D90;
  v57 = SHIBYTE(v254.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v254.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v364, v254.__r_.__value_.__l.__data_, v254.__r_.__value_.__l.__size_);
  else
    v364 = v254;
  v363 = off_24C335B18;
  v366 = v256;
  v365 = v83;
  v367 = v257;
  v359 = (uint64_t (**)())off_24C335D90;
  v58 = SHIBYTE(v250.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v250.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v360, v250.__r_.__value_.__l.__data_, v250.__r_.__value_.__l.__size_);
  else
    v360 = v250;
  v361 = v82;
  v359 = off_24C335AF8;
  v362 = v81;
  v354 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v245.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v355, v245.__r_.__value_.__l.__data_, v245.__r_.__value_.__l.__size_);
  else
    v355 = v245;
  v356 = v246;
  v354 = &off_24C335AB8;
  v357 = v247;
  if (SHIBYTE(v248.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v358, v248.__r_.__value_.__l.__data_, v248.__r_.__value_.__l.__size_);
  else
    v358 = v248;
  v349 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v240.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v350, v240.__r_.__value_.__l.__data_, v240.__r_.__value_.__l.__size_);
  else
    v350 = v240;
  v351 = v241;
  v349 = &off_24C335AB8;
  v352 = v242;
  if (SHIBYTE(v243.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v353, v243.__r_.__value_.__l.__data_, v243.__r_.__value_.__l.__size_);
  else
    v353 = v243;
  v344 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v235.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v345, v235.__r_.__value_.__l.__data_, v235.__r_.__value_.__l.__size_);
  else
    v345 = v235;
  v346 = v236;
  v344 = &off_24C335AB8;
  v347 = v237;
  if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v348, v238.__r_.__value_.__l.__data_, v238.__r_.__value_.__l.__size_);
  else
    v348 = v238;
  v339 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v230.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v340, v230.__r_.__value_.__l.__data_, v230.__r_.__value_.__l.__size_);
  else
    v340 = v230;
  v341 = v231;
  v339 = &off_24C335AB8;
  v342 = v232;
  if (SHIBYTE(v233.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v343, v233.__r_.__value_.__l.__data_, v233.__r_.__value_.__l.__size_);
  else
    v343 = v233;
  v335 = (uint64_t (**)())off_24C335D90;
  v59 = SHIBYTE(v226.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v226.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v336, v226.__r_.__value_.__l.__data_, v226.__r_.__value_.__l.__size_);
  else
    v336 = v226;
  v337 = v80;
  v335 = off_24C335AF8;
  v338 = v79;
  v331 = (uint64_t (**)())off_24C335D90;
  v60 = SHIBYTE(v222.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v222.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v332, v222.__r_.__value_.__l.__data_, v222.__r_.__value_.__l.__size_);
  else
    v332 = v222;
  v333 = v78;
  v331 = off_24C335AF8;
  v334 = v77;
  v327 = (uint64_t (**)())off_24C335D90;
  v61 = SHIBYTE(v218.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v218.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v218.__r_.__value_.__l.__data_, v218.__r_.__value_.__l.__size_);
  else
    __p = v218;
  v329 = v76;
  v327 = off_24C335AF8;
  v330 = v75;
  mediaplatform::DatabaseColumnTuple<11ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::DatabaseColumnTuple(v41, (uint64_t)&v428, (uint64_t)&v424, (uint64_t)&v420, (uint64_t)&v416, (uint64_t)&v412, (uint64_t)&v408, (uint64_t)&v403, (uint64_t)&v398, (uint64_t)&v393, (uint64_t)&v388, (uint64_t)&v383, (uint64_t)&v378, (uint64_t)&v373, (uint64_t)&v368, (uint64_t)&v363, (uint64_t)&v359, (uint64_t)&v354, (uint64_t)&v349,
    (uint64_t)&v344,
    (uint64_t)&v339,
    (uint64_t)&v335,
    (uint64_t)&v331,
    (uint64_t)&v327);
  v327 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v331 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v332.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v332.__r_.__value_.__l.__data_);
  v335 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v336.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v336.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v339);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v344);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v349);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v354);
  v359 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v360.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v360.__r_.__value_.__l.__data_);
  v363 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v364.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v364.__r_.__value_.__l.__data_);
  v368 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v369.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v369.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v373);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v378);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v383);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v388);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v393);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v398);
  v403 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v404.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v404.__r_.__value_.__l.__data_);
  v408 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v409.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v409.__r_.__value_.__l.__data_);
  v412 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v413.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v413.__r_.__value_.__l.__data_);
  v416 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v417.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v417.__r_.__value_.__l.__data_);
  v420 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v421.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v421.__r_.__value_.__l.__data_);
  v424 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v425.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v425.__r_.__value_.__l.__data_);
  v428 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v429.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v429.__r_.__value_.__l.__data_);
  *(_QWORD *)(v41 + 1264) = off_24C335D90;
  v62 = (std::string *)(v41 + 1272);
  v63 = SHIBYTE(v324.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v324.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v62, v324.__r_.__value_.__l.__data_, v324.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v62->__r_.__value_.__l.__data_ = *(_OWORD *)&v324.__r_.__value_.__l.__data_;
    *(_QWORD *)(v41 + 1288) = *((_QWORD *)&v324.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(v41 + 1296) = v325;
  *(_QWORD *)(v41 + 1264) = off_24C335AF8;
  *(_QWORD *)(v41 + 1300) = v326;
  v217 = (uint64_t (**)())off_24C335D90;
  if (v61 < 0)
    operator delete(v218.__r_.__value_.__l.__data_);
  v221 = (uint64_t (**)())off_24C335D90;
  if (v60 < 0)
    operator delete(v222.__r_.__value_.__l.__data_);
  v225 = (uint64_t (**)())off_24C335D90;
  if (v59 < 0)
    operator delete(v226.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v229);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v234);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v239);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v244);
  v249 = (uint64_t (**)())off_24C335D90;
  if (v58 < 0)
    operator delete(v250.__r_.__value_.__l.__data_);
  v253 = (uint64_t (**)())off_24C335D90;
  if (v57 < 0)
    operator delete(v254.__r_.__value_.__l.__data_);
  v258 = (uint64_t (**)())off_24C335D90;
  if (v56 < 0)
    operator delete(v259.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v263);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v268);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v273);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v278);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v283);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v288);
  v293 = (uint64_t (**)())off_24C335D90;
  if (v93 < 0)
    operator delete(v294.__r_.__value_.__l.__data_);
  v298 = (uint64_t (**)())off_24C335D90;
  if (v95 < 0)
    operator delete(v299.__r_.__value_.__l.__data_);
  v302 = (uint64_t (**)())off_24C335D90;
  if (v97 < 0)
    operator delete(v303.__r_.__value_.__l.__data_);
  v306 = (uint64_t (**)())off_24C335D90;
  if (v99 < 0)
    operator delete(v307.__r_.__value_.__l.__data_);
  v310 = (uint64_t (**)())off_24C335D90;
  if (v69 < 0)
    operator delete(v311.__r_.__value_.__l.__data_);
  v314 = (uint64_t (**)())off_24C335D90;
  if (v101 < 0)
    operator delete(v315.__r_.__value_.__l.__data_);
  if (v73 < 0)
  {
    operator delete(v319.__r_.__value_.__l.__data_);
    if ((v63 & 0x80000000) == 0)
      goto LABEL_368;
  }
  else if ((v63 & 0x80000000) == 0)
  {
    goto LABEL_368;
  }
  operator delete(v324.__r_.__value_.__l.__data_);
LABEL_368:
  *(_QWORD *)(v41 + 1312) = off_24C335D90;
  if (SHIBYTE(v212.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)(v41 + 1320), v212.__r_.__value_.__l.__data_, v212.__r_.__value_.__l.__size_);
  else
    *(std::string *)(v41 + 1320) = v212;
  *(_DWORD *)(v41 + 1344) = v213;
  *(_QWORD *)(v41 + 1312) = &off_24C335A98;
  *(_BYTE *)(v41 + 1348) = v214;
  mediaplatform::Data::Data((mediaplatform::Data *)(v41 + 1352), (const mediaplatform::Data *)v215);
  if (v68 < 0)
    operator delete(v102.__r_.__value_.__l.__data_);
  if (v71 < 0)
    operator delete(v106.__r_.__value_.__l.__data_);
  if (v72 < 0)
    operator delete(v110.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v113);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v118);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v123);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v128);
  if (SHIBYTE(v134.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v134.__r_.__value_.__l.__data_);
  if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v138.__r_.__value_.__l.__data_);
  if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v143.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v147);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v152);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v157);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v162);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v167);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v172);
  if (SHIBYTE(v178.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v178.__r_.__value_.__l.__data_);
  if (SHIBYTE(v183.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v183.__r_.__value_.__l.__data_);
  if (SHIBYTE(v187.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v187.__r_.__value_.__l.__data_);
  if (SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v191.__r_.__value_.__l.__data_);
  if (SHIBYTE(v195.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v195.__r_.__value_.__l.__data_);
  if (SHIBYTE(v199.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v199.__r_.__value_.__l.__data_);
  if (SHIBYTE(v203.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v203.__r_.__value_.__l.__data_);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__s.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)&v211);
  *(_QWORD *)(v41 + 1392) = off_24C335D90;
  v64 = (std::string *)(v41 + 1400);
  if (*(char *)(v70 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v64, *(const std::string::value_type **)(v70 + 8), *(_QWORD *)(v70 + 16));
  }
  else
  {
    v65 = *(_OWORD *)(v70 + 8);
    *(_QWORD *)(v41 + 1416) = *(_QWORD *)(v70 + 24);
    *(_OWORD *)&v64->__r_.__value_.__l.__data_ = v65;
  }
  *(_DWORD *)(v41 + 1424) = *(_DWORD *)(v70 + 32);
  *(_QWORD *)(v41 + 1392) = off_24C335B18;
  v66 = *(_QWORD *)(v70 + 36);
  *(_DWORD *)(v41 + 1436) = *(_DWORD *)(v70 + 44);
  *(_QWORD *)(v41 + 1428) = v66;
  return v41;
}

void sub_20A8D495C(_Unwind_Exception *a1)
{
  uint64_t v1;

  mediaplatform::DatabaseColumnTuple<9ul,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(v1);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<8ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 1392) = off_24C335D90;
  if (*(char *)(a1 + 1423) < 0)
    operator delete(*(void **)(a1 + 1400));
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn(a1 + 1312);
  *(_QWORD *)(a1 + 1264) = off_24C335D90;
  if (*(char *)(a1 + 1295) < 0)
    operator delete(*(void **)(a1 + 1272));
  *(_QWORD *)(a1 + 1216) = off_24C335D90;
  if (*(char *)(a1 + 1247) < 0)
    operator delete(*(void **)(a1 + 1224));
  return mediaplatform::DatabaseColumnTuple<12ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<9ul,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn(a1 + 1312);
  *(_QWORD *)(a1 + 1264) = off_24C335D90;
  if (*(char *)(a1 + 1295) < 0)
    operator delete(*(void **)(a1 + 1272));
  *(_QWORD *)(a1 + 1216) = off_24C335D90;
  if (*(char *)(a1 + 1247) < 0)
    operator delete(*(void **)(a1 + 1224));
  return mediaplatform::DatabaseColumnTuple<12ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<10ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 1264) = off_24C335D90;
  if (*(char *)(a1 + 1295) < 0)
    operator delete(*(void **)(a1 + 1272));
  *(_QWORD *)(a1 + 1216) = off_24C335D90;
  if (*(char *)(a1 + 1247) < 0)
    operator delete(*(void **)(a1 + 1224));
  return mediaplatform::DatabaseColumnTuple<12ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<11ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v31;
  uint64_t v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  std::string *v49;
  int v50;
  std::string *v51;
  int v52;
  std::string *v53;
  __int128 v54;
  uint64_t v55;
  int v57;
  uint64_t v58;
  int v60;
  int v61;
  int v62;
  int v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  int v77;
  int v78;
  int v79;
  uint64_t v80;
  int v81;
  int v82;
  int v83;
  std::string v84;
  int v85;
  uint64_t v86;
  uint64_t (**v87)();
  std::string v88;
  int v89;
  uint64_t v90;
  uint64_t (**v91)();
  std::string v92;
  int v93;
  uint64_t v94;
  uint64_t (**v95)();
  std::string v96;
  int v97;
  char v98;
  std::string v99;
  uint64_t (**v100)();
  std::string v101;
  int v102;
  char v103;
  std::string v104;
  uint64_t (**v105)();
  std::string v106;
  int v107;
  char v108;
  std::string v109;
  uint64_t (**v110)();
  std::string v111;
  int v112;
  char v113;
  std::string v114;
  uint64_t (**v115)();
  std::string v116;
  int v117;
  uint64_t v118;
  uint64_t (**v119)();
  std::string v120;
  int v121;
  uint64_t v122;
  int v123;
  uint64_t (**v124)();
  std::string v125;
  int v126;
  uint64_t v127;
  int v128;
  uint64_t (**v129)();
  std::string v130;
  int v131;
  char v132;
  std::string v133;
  uint64_t (**v134)();
  std::string v135;
  int v136;
  char v137;
  std::string v138;
  uint64_t (**v139)();
  std::string v140;
  int v141;
  char v142;
  std::string v143;
  uint64_t (**v144)();
  std::string v145;
  int v146;
  char v147;
  std::string v148;
  uint64_t (**v149)();
  std::string v150;
  int v151;
  char v152;
  std::string v153;
  uint64_t (**v154)();
  std::string v155;
  int v156;
  char v157;
  std::string v158;
  uint64_t (**v159)();
  std::string v160;
  int v161;
  uint64_t v162;
  int v163;
  uint64_t (**v164)();
  std::string v165;
  int v166;
  uint64_t v167;
  uint64_t (**v168)();
  std::string v169;
  int v170;
  uint64_t v171;
  uint64_t (**v172)();
  std::string v173;
  int v174;
  uint64_t v175;
  uint64_t (**v176)();
  std::string __s;
  int v178;
  uint64_t v179;
  uint64_t (**v180)();
  std::string v181;
  int v182;
  uint64_t v183;
  uint64_t (**v184)();
  std::string v185;
  int v186;
  uint64_t v187;
  uint64_t (**v188)();
  std::string v189;
  int v190;
  uint64_t v191;
  uint64_t (**v192)();
  std::string v193;
  int v194;
  uint64_t v195;
  uint64_t (**v196)();
  std::string v197;
  int v198;
  char v199;
  std::string v200;
  uint64_t (**v201)();
  std::string v202;
  int v203;
  char v204;
  std::string v205;
  uint64_t (**v206)();
  std::string v207;
  int v208;
  char v209;
  std::string v210;
  uint64_t (**v211)();
  std::string v212;
  int v213;
  char v214;
  std::string v215;
  uint64_t (**v216)();
  std::string v217;
  int v218;
  uint64_t v219;
  uint64_t (**v220)();
  std::string v221;
  int v222;
  uint64_t v223;
  int v224;
  uint64_t (**v225)();
  std::string v226;
  int v227;
  uint64_t v228;
  int v229;
  uint64_t (**v230)();
  std::string v231;
  int v232;
  char v233;
  std::string v234;
  uint64_t (**v235)();
  std::string v236;
  int v237;
  char v238;
  std::string v239;
  uint64_t (**v240)();
  std::string v241;
  int v242;
  char v243;
  std::string v244;
  uint64_t (**v245)();
  std::string v246;
  int v247;
  char v248;
  std::string v249;
  uint64_t (**v250)();
  std::string v251;
  int v252;
  char v253;
  std::string v254;
  uint64_t (**v255)();
  std::string v256;
  int v257;
  char v258;
  std::string v259;
  uint64_t (**v260)();
  std::string v261;
  int v262;
  uint64_t v263;
  int v264;
  uint64_t (**v265)();
  std::string v266;
  int v267;
  uint64_t v268;
  uint64_t (**v269)();
  std::string v270;
  int v271;
  uint64_t v272;
  uint64_t (**v273)();
  std::string v274;
  int v275;
  uint64_t v276;
  uint64_t (**v277)();
  std::string v278;
  int v279;
  uint64_t v280;
  uint64_t (**v281)();
  std::string __p;
  int v283;
  uint64_t v284;
  uint64_t (**v285)();
  std::string v286;
  int v287;
  uint64_t v288;
  uint64_t (**v289)();
  std::string v290;
  int v291;
  uint64_t v292;
  uint64_t (**v293)();
  std::string v294;
  int v295;
  char v296;
  std::string v297;
  uint64_t (**v298)();
  std::string v299;
  int v300;
  char v301;
  std::string v302;
  uint64_t (**v303)();
  std::string v304;
  int v305;
  char v306;
  std::string v307;
  uint64_t (**v308)();
  std::string v309;
  int v310;
  char v311;
  std::string v312;
  uint64_t (**v313)();
  std::string v314;
  int v315;
  uint64_t v316;
  uint64_t (**v317)();
  std::string v318;
  int v319;
  uint64_t v320;
  int v321;
  uint64_t (**v322)();
  std::string v323;
  int v324;
  uint64_t v325;
  int v326;
  uint64_t (**v327)();
  std::string v328;
  int v329;
  char v330;
  std::string v331;
  uint64_t (**v332)();
  std::string v333;
  int v334;
  char v335;
  std::string v336;
  uint64_t (**v337)();
  std::string v338;
  int v339;
  char v340;
  std::string v341;
  uint64_t (**v342)();
  std::string v343;
  int v344;
  char v345;
  std::string v346;
  uint64_t (**v347)();
  std::string v348;
  int v349;
  char v350;
  std::string v351;
  uint64_t (**v352)();
  std::string v353;
  int v354;
  char v355;
  std::string v356;
  uint64_t (**v357)();
  std::string v358;
  int v359;
  uint64_t v360;
  int v361;
  uint64_t (**v362)();
  std::string v363;
  int v364;
  uint64_t v365;
  uint64_t (**v366)();
  std::string v367;
  int v368;
  uint64_t v369;
  uint64_t (**v370)();
  std::string v371;
  int v372;
  uint64_t v373;

  if (*(char *)(a3 + 31) < 0)
    std::string::__init_copy_ctor_external(&v181, *(const std::string::value_type **)(a3 + 8), *(_QWORD *)(a3 + 16));
  else
    v181 = *(std::string *)(a3 + 8);
  v182 = *(_DWORD *)(a3 + 32);
  v180 = off_24C335AF8;
  v183 = *(_QWORD *)(a3 + 36);
  if (*(char *)(a4 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(a4 + 8), *(_QWORD *)(a4 + 16));
  else
    __s = *(std::string *)(a4 + 8);
  v31 = *(_DWORD *)(a4 + 32);
  v178 = v31;
  v176 = off_24C335AF8;
  v32 = *(_QWORD *)(a4 + 36);
  v179 = v32;
  if (*(char *)(a5 + 31) < 0)
    std::string::__init_copy_ctor_external(&v173, *(const std::string::value_type **)(a5 + 8), *(_QWORD *)(a5 + 16));
  else
    v173 = *(std::string *)(a5 + 8);
  v82 = *(_DWORD *)(a5 + 32);
  v174 = v82;
  v172 = off_24C335AF8;
  v80 = *(_QWORD *)(a5 + 36);
  v175 = v80;
  if (*(char *)(a6 + 31) < 0)
    std::string::__init_copy_ctor_external(&v169, *(const std::string::value_type **)(a6 + 8), *(_QWORD *)(a6 + 16));
  else
    v169 = *(std::string *)(a6 + 8);
  v78 = *(_DWORD *)(a6 + 32);
  v170 = v78;
  v168 = off_24C335AF8;
  v76 = *(_QWORD *)(a6 + 36);
  v171 = v76;
  if (*(char *)(a7 + 31) < 0)
    std::string::__init_copy_ctor_external(&v165, *(const std::string::value_type **)(a7 + 8), *(_QWORD *)(a7 + 16));
  else
    v165 = *(std::string *)(a7 + 8);
  v75 = *(_DWORD *)(a7 + 32);
  v166 = v75;
  v164 = off_24C335AF8;
  v74 = *(_QWORD *)(a7 + 36);
  v167 = v74;
  if (*(char *)(a8 + 31) < 0)
    std::string::__init_copy_ctor_external(&v160, *(const std::string::value_type **)(a8 + 8), *(_QWORD *)(a8 + 16));
  else
    v160 = *(std::string *)(a8 + 8);
  v33 = *(_DWORD *)(a8 + 32);
  v159 = off_24C335B18;
  v162 = *(_QWORD *)(a8 + 36);
  v34 = *(_DWORD *)(a8 + 44);
  v73 = v33;
  v161 = v33;
  v163 = v34;
  v154 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v155, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v155 = *(std::string *)(a9 + 8);
  v156 = *(_DWORD *)(a9 + 32);
  v154 = &off_24C335AB8;
  v157 = *(_BYTE *)(a9 + 36);
  if (*(char *)(a9 + 63) < 0)
    std::string::__init_copy_ctor_external(&v158, *(const std::string::value_type **)(a9 + 40), *(_QWORD *)(a9 + 48));
  else
    v158 = *(std::string *)(a9 + 40);
  v149 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v150, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v150 = *(std::string *)(a10 + 8);
  v151 = *(_DWORD *)(a10 + 32);
  v149 = &off_24C335AB8;
  v152 = *(_BYTE *)(a10 + 36);
  if (*(char *)(a10 + 63) < 0)
    std::string::__init_copy_ctor_external(&v153, *(const std::string::value_type **)(a10 + 40), *(_QWORD *)(a10 + 48));
  else
    v153 = *(std::string *)(a10 + 40);
  v144 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v145, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v145 = *(std::string *)(a11 + 8);
  v146 = *(_DWORD *)(a11 + 32);
  v144 = &off_24C335AB8;
  v147 = *(_BYTE *)(a11 + 36);
  if (*(char *)(a11 + 63) < 0)
    std::string::__init_copy_ctor_external(&v148, *(const std::string::value_type **)(a11 + 40), *(_QWORD *)(a11 + 48));
  else
    v148 = *(std::string *)(a11 + 40);
  v139 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v140, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v140 = *(std::string *)(a12 + 8);
  v141 = *(_DWORD *)(a12 + 32);
  v139 = &off_24C335AB8;
  v142 = *(_BYTE *)(a12 + 36);
  if (*(char *)(a12 + 63) < 0)
    std::string::__init_copy_ctor_external(&v143, *(const std::string::value_type **)(a12 + 40), *(_QWORD *)(a12 + 48));
  else
    v143 = *(std::string *)(a12 + 40);
  v134 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v135, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v135 = *(std::string *)(a13 + 8);
  v136 = *(_DWORD *)(a13 + 32);
  v134 = &off_24C335AB8;
  v137 = *(_BYTE *)(a13 + 36);
  if (*(char *)(a13 + 63) < 0)
    std::string::__init_copy_ctor_external(&v138, *(const std::string::value_type **)(a13 + 40), *(_QWORD *)(a13 + 48));
  else
    v138 = *(std::string *)(a13 + 40);
  v129 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v130, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v130 = *(std::string *)(a14 + 8);
  v131 = *(_DWORD *)(a14 + 32);
  v129 = &off_24C335AB8;
  v132 = *(_BYTE *)(a14 + 36);
  if (*(char *)(a14 + 63) < 0)
    std::string::__init_copy_ctor_external(&v133, *(const std::string::value_type **)(a14 + 40), *(_QWORD *)(a14 + 48));
  else
    v133 = *(std::string *)(a14 + 40);
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v125, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v125 = *(std::string *)(a15 + 8);
  v35 = *(_DWORD *)(a15 + 32);
  v124 = off_24C335B18;
  v127 = *(_QWORD *)(a15 + 36);
  v36 = *(_DWORD *)(a15 + 44);
  v72 = v35;
  v126 = v35;
  v128 = v36;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v120, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v120 = *(std::string *)(a16 + 8);
  v37 = *(_DWORD *)(a16 + 32);
  v119 = off_24C335B18;
  v122 = *(_QWORD *)(a16 + 36);
  v38 = *(_DWORD *)(a16 + 44);
  v71 = v37;
  v121 = v37;
  v123 = v38;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v116, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v116 = *(std::string *)(a17 + 8);
  v70 = *(_DWORD *)(a17 + 32);
  v117 = v70;
  v115 = off_24C335AF8;
  v39 = *(_QWORD *)(a17 + 36);
  v118 = v39;
  v110 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v111, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v111 = *(std::string *)(a18 + 8);
  v112 = *(_DWORD *)(a18 + 32);
  v110 = &off_24C335AB8;
  v113 = *(_BYTE *)(a18 + 36);
  if (*(char *)(a18 + 63) < 0)
    std::string::__init_copy_ctor_external(&v114, *(const std::string::value_type **)(a18 + 40), *(_QWORD *)(a18 + 48));
  else
    v114 = *(std::string *)(a18 + 40);
  v105 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v106, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v106 = *(std::string *)(a19 + 8);
  v107 = *(_DWORD *)(a19 + 32);
  v105 = &off_24C335AB8;
  v108 = *(_BYTE *)(a19 + 36);
  if (*(char *)(a19 + 63) < 0)
    std::string::__init_copy_ctor_external(&v109, *(const std::string::value_type **)(a19 + 40), *(_QWORD *)(a19 + 48));
  else
    v109 = *(std::string *)(a19 + 40);
  v100 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v101, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v101 = *(std::string *)(a20 + 8);
  v102 = *(_DWORD *)(a20 + 32);
  v100 = &off_24C335AB8;
  v103 = *(_BYTE *)(a20 + 36);
  if (*(char *)(a20 + 63) < 0)
    std::string::__init_copy_ctor_external(&v104, *(const std::string::value_type **)(a20 + 40), *(_QWORD *)(a20 + 48));
  else
    v104 = *(std::string *)(a20 + 40);
  v95 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v96, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v96 = *(std::string *)(a21 + 8);
  v97 = *(_DWORD *)(a21 + 32);
  v95 = &off_24C335AB8;
  v98 = *(_BYTE *)(a21 + 36);
  if (*(char *)(a21 + 63) < 0)
    std::string::__init_copy_ctor_external(&v99, *(const std::string::value_type **)(a21 + 40), *(_QWORD *)(a21 + 48));
  else
    v99 = *(std::string *)(a21 + 40);
  if (*(char *)(a22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v92, *(const std::string::value_type **)(a22 + 8), *(_QWORD *)(a22 + 16));
  else
    v92 = *(std::string *)(a22 + 8);
  v69 = *(_DWORD *)(a22 + 32);
  v93 = v69;
  v91 = off_24C335AF8;
  v68 = *(_QWORD *)(a22 + 36);
  v94 = v68;
  if (*(char *)(a23 + 31) < 0)
    std::string::__init_copy_ctor_external(&v88, *(const std::string::value_type **)(a23 + 8), *(_QWORD *)(a23 + 16));
  else
    v88 = *(std::string *)(a23 + 8);
  v67 = *(_DWORD *)(a23 + 32);
  v89 = v67;
  v87 = off_24C335AF8;
  v66 = *(_QWORD *)(a23 + 36);
  v90 = v66;
  if (*(char *)(a24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v84, *(const std::string::value_type **)(a24 + 8), *(_QWORD *)(a24 + 16));
  else
    v84 = *(std::string *)(a24 + 8);
  v65 = *(_DWORD *)(a24 + 32);
  v85 = v65;
  v64 = *(_QWORD *)(a24 + 36);
  v86 = v64;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v278, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v278 = __s;
  v279 = v31;
  v277 = off_24C335AF8;
  v280 = v32;
  if (SHIBYTE(v173.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v274, v173.__r_.__value_.__l.__data_, v173.__r_.__value_.__l.__size_);
  else
    v274 = v173;
  v275 = v82;
  v273 = off_24C335AF8;
  v276 = v80;
  if (SHIBYTE(v169.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v270, v169.__r_.__value_.__l.__data_, v169.__r_.__value_.__l.__size_);
  else
    v270 = v169;
  v271 = v78;
  v269 = off_24C335AF8;
  v272 = v76;
  if (SHIBYTE(v165.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v266, v165.__r_.__value_.__l.__data_, v165.__r_.__value_.__l.__size_);
  else
    v266 = v165;
  v267 = v75;
  v265 = off_24C335AF8;
  v268 = v74;
  if (SHIBYTE(v160.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v261, v160.__r_.__value_.__l.__data_, v160.__r_.__value_.__l.__size_);
  else
    v261 = v160;
  v260 = off_24C335B18;
  v263 = v162;
  v262 = v73;
  v264 = v163;
  v255 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v155.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v256, v155.__r_.__value_.__l.__data_, v155.__r_.__value_.__l.__size_);
  else
    v256 = v155;
  v257 = v156;
  v255 = &off_24C335AB8;
  v258 = v157;
  if (SHIBYTE(v158.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v259, v158.__r_.__value_.__l.__data_, v158.__r_.__value_.__l.__size_);
  else
    v259 = v158;
  v250 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v150.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v251, v150.__r_.__value_.__l.__data_, v150.__r_.__value_.__l.__size_);
  else
    v251 = v150;
  v252 = v151;
  v250 = &off_24C335AB8;
  v253 = v152;
  if (SHIBYTE(v153.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v254, v153.__r_.__value_.__l.__data_, v153.__r_.__value_.__l.__size_);
  else
    v254 = v153;
  v245 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v145.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v246, v145.__r_.__value_.__l.__data_, v145.__r_.__value_.__l.__size_);
  else
    v246 = v145;
  v247 = v146;
  v245 = &off_24C335AB8;
  v248 = v147;
  if (SHIBYTE(v148.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v249, v148.__r_.__value_.__l.__data_, v148.__r_.__value_.__l.__size_);
  else
    v249 = v148;
  v240 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v241, v140.__r_.__value_.__l.__data_, v140.__r_.__value_.__l.__size_);
  else
    v241 = v140;
  v242 = v141;
  v240 = &off_24C335AB8;
  v243 = v142;
  if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v244, v143.__r_.__value_.__l.__data_, v143.__r_.__value_.__l.__size_);
  else
    v244 = v143;
  v235 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v135.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v236, v135.__r_.__value_.__l.__data_, v135.__r_.__value_.__l.__size_);
  else
    v236 = v135;
  v237 = v136;
  v235 = &off_24C335AB8;
  v238 = v137;
  if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v239, v138.__r_.__value_.__l.__data_, v138.__r_.__value_.__l.__size_);
  else
    v239 = v138;
  v230 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v130.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v231, v130.__r_.__value_.__l.__data_, v130.__r_.__value_.__l.__size_);
  else
    v231 = v130;
  v232 = v131;
  v230 = &off_24C335AB8;
  v233 = v132;
  if (SHIBYTE(v133.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v234, v133.__r_.__value_.__l.__data_, v133.__r_.__value_.__l.__size_);
  else
    v234 = v133;
  v40 = SHIBYTE(v125.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v125.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v226, v125.__r_.__value_.__l.__data_, v125.__r_.__value_.__l.__size_);
  else
    v226 = v125;
  v225 = off_24C335B18;
  v228 = v127;
  v227 = v72;
  v229 = v128;
  v41 = SHIBYTE(v120.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v120.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v221, v120.__r_.__value_.__l.__data_, v120.__r_.__value_.__l.__size_);
  else
    v221 = v120;
  v220 = off_24C335B18;
  v223 = v122;
  v222 = v71;
  v224 = v123;
  v42 = SHIBYTE(v116.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v116.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v217, v116.__r_.__value_.__l.__data_, v116.__r_.__value_.__l.__size_);
  else
    v217 = v116;
  v218 = v70;
  v216 = off_24C335AF8;
  v219 = v39;
  v211 = (uint64_t (**)())off_24C335D90;
  v58 = v39;
  if (SHIBYTE(v111.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v212, v111.__r_.__value_.__l.__data_, v111.__r_.__value_.__l.__size_);
  else
    v212 = v111;
  v213 = v112;
  v211 = &off_24C335AB8;
  v214 = v113;
  if (SHIBYTE(v114.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v215, v114.__r_.__value_.__l.__data_, v114.__r_.__value_.__l.__size_);
  else
    v215 = v114;
  v206 = (uint64_t (**)())off_24C335D90;
  v63 = v41;
  if (SHIBYTE(v106.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v207, v106.__r_.__value_.__l.__data_, v106.__r_.__value_.__l.__size_);
  else
    v207 = v106;
  v208 = v107;
  v206 = &off_24C335AB8;
  v209 = v108;
  if (SHIBYTE(v109.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v210, v109.__r_.__value_.__l.__data_, v109.__r_.__value_.__l.__size_);
  else
    v210 = v109;
  v201 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v101.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v202, v101.__r_.__value_.__l.__data_, v101.__r_.__value_.__l.__size_);
  else
    v202 = v101;
  v203 = v102;
  v201 = &off_24C335AB8;
  v204 = v103;
  if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v205, v104.__r_.__value_.__l.__data_, v104.__r_.__value_.__l.__size_);
  else
    v205 = v104;
  v196 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v197, v96.__r_.__value_.__l.__data_, v96.__r_.__value_.__l.__size_);
  else
    v197 = v96;
  v198 = v97;
  v196 = &off_24C335AB8;
  v199 = v98;
  if (SHIBYTE(v99.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v200, v99.__r_.__value_.__l.__data_, v99.__r_.__value_.__l.__size_);
  else
    v200 = v99;
  v62 = SHIBYTE(v92.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v92.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v193, v92.__r_.__value_.__l.__data_, v92.__r_.__value_.__l.__size_);
  else
    v193 = v92;
  v194 = v69;
  v192 = off_24C335AF8;
  v195 = v68;
  v188 = (uint64_t (**)())off_24C335D90;
  v61 = SHIBYTE(v88.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v189, v88.__r_.__value_.__l.__data_, v88.__r_.__value_.__l.__size_);
  else
    v189 = v88;
  v190 = v67;
  v188 = off_24C335AF8;
  v191 = v66;
  v184 = (uint64_t (**)())off_24C335D90;
  v60 = SHIBYTE(v84.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v185, v84.__r_.__value_.__l.__data_, v84.__r_.__value_.__l.__size_);
  else
    v185 = v84;
  v186 = v65;
  v184 = off_24C335AF8;
  v187 = v64;
  v370 = (uint64_t (**)())off_24C335D90;
  v57 = SHIBYTE(v274.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v274.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v371, v274.__r_.__value_.__l.__data_, v274.__r_.__value_.__l.__size_);
  else
    v371 = v274;
  v372 = v82;
  v370 = off_24C335AF8;
  v373 = v80;
  v366 = (uint64_t (**)())off_24C335D90;
  v83 = SHIBYTE(v270.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v270.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v367, v270.__r_.__value_.__l.__data_, v270.__r_.__value_.__l.__size_);
  else
    v367 = v270;
  v368 = v78;
  v366 = off_24C335AF8;
  v369 = v76;
  v362 = (uint64_t (**)())off_24C335D90;
  v81 = SHIBYTE(v266.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v266.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v363, v266.__r_.__value_.__l.__data_, v266.__r_.__value_.__l.__size_);
  else
    v363 = v266;
  v364 = v75;
  v362 = off_24C335AF8;
  v365 = v74;
  v357 = (uint64_t (**)())off_24C335D90;
  v79 = SHIBYTE(v261.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v261.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v358, v261.__r_.__value_.__l.__data_, v261.__r_.__value_.__l.__size_);
  else
    v358 = v261;
  v357 = off_24C335B18;
  v360 = v263;
  v359 = v73;
  v361 = v264;
  v352 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v256.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v353, v256.__r_.__value_.__l.__data_, v256.__r_.__value_.__l.__size_);
  else
    v353 = v256;
  v354 = v257;
  v352 = &off_24C335AB8;
  v355 = v258;
  if (SHIBYTE(v259.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v356, v259.__r_.__value_.__l.__data_, v259.__r_.__value_.__l.__size_);
  else
    v356 = v259;
  v347 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v251.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v348, v251.__r_.__value_.__l.__data_, v251.__r_.__value_.__l.__size_);
  else
    v348 = v251;
  v349 = v252;
  v347 = &off_24C335AB8;
  v350 = v253;
  if (SHIBYTE(v254.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v351, v254.__r_.__value_.__l.__data_, v254.__r_.__value_.__l.__size_);
  else
    v351 = v254;
  v342 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v246.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v343, v246.__r_.__value_.__l.__data_, v246.__r_.__value_.__l.__size_);
  else
    v343 = v246;
  v344 = v247;
  v342 = &off_24C335AB8;
  v345 = v248;
  if (SHIBYTE(v249.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v346, v249.__r_.__value_.__l.__data_, v249.__r_.__value_.__l.__size_);
  else
    v346 = v249;
  v337 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v241.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v338, v241.__r_.__value_.__l.__data_, v241.__r_.__value_.__l.__size_);
  else
    v338 = v241;
  v339 = v242;
  v337 = &off_24C335AB8;
  v340 = v243;
  if (SHIBYTE(v244.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v341, v244.__r_.__value_.__l.__data_, v244.__r_.__value_.__l.__size_);
  else
    v341 = v244;
  v332 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v236.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v333, v236.__r_.__value_.__l.__data_, v236.__r_.__value_.__l.__size_);
  else
    v333 = v236;
  v334 = v237;
  v332 = &off_24C335AB8;
  v335 = v238;
  if (SHIBYTE(v239.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v336, v239.__r_.__value_.__l.__data_, v239.__r_.__value_.__l.__size_);
  else
    v336 = v239;
  v327 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v231.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v328, v231.__r_.__value_.__l.__data_, v231.__r_.__value_.__l.__size_);
  else
    v328 = v231;
  v329 = v232;
  v327 = &off_24C335AB8;
  v330 = v233;
  if (SHIBYTE(v234.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v331, v234.__r_.__value_.__l.__data_, v234.__r_.__value_.__l.__size_);
  else
    v331 = v234;
  v322 = (uint64_t (**)())off_24C335D90;
  v43 = SHIBYTE(v226.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v226.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v323, v226.__r_.__value_.__l.__data_, v226.__r_.__value_.__l.__size_);
  else
    v323 = v226;
  v322 = off_24C335B18;
  v325 = v228;
  v324 = v72;
  v326 = v229;
  v317 = (uint64_t (**)())off_24C335D90;
  v77 = SHIBYTE(v221.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v221.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v318, v221.__r_.__value_.__l.__data_, v221.__r_.__value_.__l.__size_);
  else
    v318 = v221;
  v317 = off_24C335B18;
  v320 = v223;
  v319 = v71;
  v321 = v224;
  v313 = (uint64_t (**)())off_24C335D90;
  v44 = SHIBYTE(v217.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v217.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v314, v217.__r_.__value_.__l.__data_, v217.__r_.__value_.__l.__size_);
  else
    v314 = v217;
  v315 = v70;
  v313 = off_24C335AF8;
  v316 = v58;
  v308 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v212.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v309, v212.__r_.__value_.__l.__data_, v212.__r_.__value_.__l.__size_);
  else
    v309 = v212;
  v310 = v213;
  v308 = &off_24C335AB8;
  v311 = v214;
  if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v312, v215.__r_.__value_.__l.__data_, v215.__r_.__value_.__l.__size_);
  else
    v312 = v215;
  v303 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v207.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v304, v207.__r_.__value_.__l.__data_, v207.__r_.__value_.__l.__size_);
  else
    v304 = v207;
  v305 = v208;
  v303 = &off_24C335AB8;
  v306 = v209;
  if (SHIBYTE(v210.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v307, v210.__r_.__value_.__l.__data_, v210.__r_.__value_.__l.__size_);
  else
    v307 = v210;
  v298 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v202.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v299, v202.__r_.__value_.__l.__data_, v202.__r_.__value_.__l.__size_);
  else
    v299 = v202;
  v300 = v203;
  v298 = &off_24C335AB8;
  v301 = v204;
  if (SHIBYTE(v205.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v302, v205.__r_.__value_.__l.__data_, v205.__r_.__value_.__l.__size_);
  else
    v302 = v205;
  v293 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v197.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v294, v197.__r_.__value_.__l.__data_, v197.__r_.__value_.__l.__size_);
  else
    v294 = v197;
  v295 = v198;
  v293 = &off_24C335AB8;
  v296 = v199;
  if (SHIBYTE(v200.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v297, v200.__r_.__value_.__l.__data_, v200.__r_.__value_.__l.__size_);
  else
    v297 = v200;
  v289 = (uint64_t (**)())off_24C335D90;
  v45 = SHIBYTE(v193.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v193.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v290, v193.__r_.__value_.__l.__data_, v193.__r_.__value_.__l.__size_);
  else
    v290 = v193;
  v291 = v69;
  v289 = off_24C335AF8;
  v292 = v68;
  v285 = (uint64_t (**)())off_24C335D90;
  v46 = SHIBYTE(v189.__r_.__value_.__r.__words[2]);
  v47 = v43;
  if (SHIBYTE(v189.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v286, v189.__r_.__value_.__l.__data_, v189.__r_.__value_.__l.__size_);
  else
    v286 = v189;
  v287 = v67;
  v285 = off_24C335AF8;
  v288 = v66;
  v281 = (uint64_t (**)())off_24C335D90;
  v48 = SHIBYTE(v185.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v185.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v185.__r_.__value_.__l.__data_, v185.__r_.__value_.__l.__size_);
  else
    __p = v185;
  v283 = v65;
  v281 = off_24C335AF8;
  v284 = v64;
  mediaplatform::DatabaseColumnTuple<14ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::DatabaseColumnTuple(a1, (uint64_t)&v370, (uint64_t)&v366, (uint64_t)&v362, (uint64_t)&v357, (uint64_t)&v352, (uint64_t)&v347, (uint64_t)&v342, (uint64_t)&v337, (uint64_t)&v332, (uint64_t)&v327, (uint64_t)&v322, (uint64_t)&v317, (uint64_t)&v313, (uint64_t)&v308, (uint64_t)&v303, (uint64_t)&v298, (uint64_t)&v293, (uint64_t)&v289,
    (uint64_t)&v285,
    (uint64_t)&v281);
  v281 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v285 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v286.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v286.__r_.__value_.__l.__data_);
  v289 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v290.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v290.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v293);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v298);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v303);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v308);
  v313 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v314.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v314.__r_.__value_.__l.__data_);
  v317 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v318.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v318.__r_.__value_.__l.__data_);
  v322 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v323.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v323.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v327);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v332);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v337);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v342);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v347);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v352);
  v357 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v358.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v358.__r_.__value_.__l.__data_);
  v362 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v363.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v363.__r_.__value_.__l.__data_);
  v366 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v367.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v367.__r_.__value_.__l.__data_);
  v370 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v371.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v371.__r_.__value_.__l.__data_);
  *(_QWORD *)(a1 + 1120) = off_24C335D90;
  v49 = (std::string *)(a1 + 1128);
  v50 = SHIBYTE(v278.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v278.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v49, v278.__r_.__value_.__l.__data_, v278.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v49->__r_.__value_.__l.__data_ = *(_OWORD *)&v278.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 1144) = *((_QWORD *)&v278.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(a1 + 1152) = v279;
  *(_QWORD *)(a1 + 1120) = off_24C335AF8;
  *(_QWORD *)(a1 + 1156) = v280;
  v184 = (uint64_t (**)())off_24C335D90;
  if (v48 < 0)
    operator delete(v185.__r_.__value_.__l.__data_);
  v188 = (uint64_t (**)())off_24C335D90;
  if (v46 < 0)
    operator delete(v189.__r_.__value_.__l.__data_);
  v192 = (uint64_t (**)())off_24C335D90;
  if (v45 < 0)
    operator delete(v193.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v196);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v201);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v206);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v211);
  v216 = (uint64_t (**)())off_24C335D90;
  if (v44 < 0)
    operator delete(v217.__r_.__value_.__l.__data_);
  v220 = (uint64_t (**)())off_24C335D90;
  if (v77 < 0)
    operator delete(v221.__r_.__value_.__l.__data_);
  v225 = (uint64_t (**)())off_24C335D90;
  if (v47 < 0)
    operator delete(v226.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v230);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v235);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v240);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v245);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v250);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v255);
  v260 = (uint64_t (**)())off_24C335D90;
  if (v79 < 0)
    operator delete(v261.__r_.__value_.__l.__data_);
  if (v81 < 0)
    operator delete(v266.__r_.__value_.__l.__data_);
  if (v83 < 0)
    operator delete(v270.__r_.__value_.__l.__data_);
  if (v57 < 0)
  {
    operator delete(v274.__r_.__value_.__l.__data_);
    if ((v50 & 0x80000000) == 0)
      goto LABEL_323;
  }
  else if ((v50 & 0x80000000) == 0)
  {
    goto LABEL_323;
  }
  operator delete(v278.__r_.__value_.__l.__data_);
LABEL_323:
  *(_QWORD *)(a1 + 1168) = off_24C335D90;
  v51 = (std::string *)(a1 + 1176);
  v52 = SHIBYTE(v181.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v181.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v51, v181.__r_.__value_.__l.__data_, v181.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v51->__r_.__value_.__l.__data_ = *(_OWORD *)&v181.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 1192) = *((_QWORD *)&v181.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(a1 + 1200) = v182;
  *(_QWORD *)(a1 + 1168) = off_24C335AF8;
  *(_QWORD *)(a1 + 1204) = v183;
  if (v60 < 0)
    operator delete(v84.__r_.__value_.__l.__data_);
  if (v61 < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  if (v62 < 0)
    operator delete(v92.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v95);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v100);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v105);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v110);
  if ((v42 & 0x80000000) == 0)
  {
    if ((v63 & 0x80000000) == 0)
      goto LABEL_336;
LABEL_350:
    operator delete(v120.__r_.__value_.__l.__data_);
    if ((v40 & 0x80000000) == 0)
      goto LABEL_337;
    goto LABEL_351;
  }
  operator delete(v116.__r_.__value_.__l.__data_);
  if (v63 < 0)
    goto LABEL_350;
LABEL_336:
  if ((v40 & 0x80000000) == 0)
    goto LABEL_337;
LABEL_351:
  operator delete(v125.__r_.__value_.__l.__data_);
LABEL_337:
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v129);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v134);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v139);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v144);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v149);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v154);
  if (SHIBYTE(v160.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v160.__r_.__value_.__l.__data_);
  if (SHIBYTE(v165.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v165.__r_.__value_.__l.__data_);
  if (SHIBYTE(v169.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v169.__r_.__value_.__l.__data_);
  if (SHIBYTE(v173.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v173.__r_.__value_.__l.__data_);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__s.__r_.__value_.__l.__data_);
    if ((v52 & 0x80000000) == 0)
      goto LABEL_347;
  }
  else if ((v52 & 0x80000000) == 0)
  {
    goto LABEL_347;
  }
  operator delete(v181.__r_.__value_.__l.__data_);
LABEL_347:
  *(_QWORD *)(a1 + 1216) = off_24C335D90;
  v53 = (std::string *)(a1 + 1224);
  if (*(char *)(a2 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v53, *(const std::string::value_type **)(a2 + 8), *(_QWORD *)(a2 + 16));
  }
  else
  {
    v54 = *(_OWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 1240) = *(_QWORD *)(a2 + 24);
    *(_OWORD *)&v53->__r_.__value_.__l.__data_ = v54;
  }
  *(_DWORD *)(a1 + 1248) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 1216) = off_24C335B18;
  v55 = *(_QWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 1260) = *(_DWORD *)(a2 + 44);
  *(_QWORD *)(a1 + 1252) = v55;
  return a1;
}

void sub_20A8D7610(_Unwind_Exception *a1)
{
  uint64_t v1;

  mediaplatform::DatabaseColumnTuple<12ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(v1);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<11ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 1216) = off_24C335D90;
  if (*(char *)(a1 + 1247) < 0)
    operator delete(*(void **)(a1 + 1224));
  return mediaplatform::DatabaseColumnTuple<12ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<13ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 1120) = off_24C335D90;
  if (*(char *)(a1 + 1151) < 0)
    operator delete(*(void **)(a1 + 1128));
  *(_QWORD *)(a1 + 1072) = off_24C335D90;
  if (*(char *)(a1 + 1103) < 0)
    operator delete(*(void **)(a1 + 1080));
  *(_QWORD *)(a1 + 1024) = off_24C335D90;
  if (*(char *)(a1 + 1055) < 0)
    operator delete(*(void **)(a1 + 1032));
  *(_QWORD *)(a1 + 976) = off_24C335D90;
  if (*(char *)(a1 + 1007) < 0)
    operator delete(*(void **)(a1 + 984));
  *(_QWORD *)(a1 + 928) = off_24C335D90;
  if (*(char *)(a1 + 959) < 0)
    operator delete(*(void **)(a1 + 936));
  return mediaplatform::DatabaseColumnTuple<18ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<14ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  std::string *v49;
  int v50;
  std::string *v51;
  int v52;
  std::string *v53;
  int v54;
  std::string *v55;
  __int128 v56;
  uint64_t result;
  int v58;
  uint64_t v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  uint64_t v77;
  std::string v78;
  int v79;
  uint64_t v80;
  uint64_t (**v81)();
  std::string v82;
  int v83;
  uint64_t v84;
  uint64_t (**v85)();
  std::string v86;
  int v87;
  uint64_t v88;
  uint64_t (**v89)();
  std::string v90;
  int v91;
  char v92;
  std::string v93;
  uint64_t (**v94)();
  std::string v95;
  int v96;
  char v97;
  std::string v98;
  uint64_t (**v99)();
  std::string v100;
  int v101;
  char v102;
  std::string v103;
  uint64_t (**v104)();
  std::string v105;
  int v106;
  char v107;
  std::string v108;
  uint64_t (**v109)();
  std::string v110;
  int v111;
  uint64_t v112;
  uint64_t (**v113)();
  std::string v114;
  int v115;
  uint64_t v116;
  int v117;
  uint64_t (**v118)();
  std::string v119;
  int v120;
  uint64_t v121;
  int v122;
  uint64_t (**v123)();
  std::string v124;
  int v125;
  char v126;
  std::string v127;
  uint64_t (**v128)();
  std::string v129;
  int v130;
  char v131;
  std::string v132;
  uint64_t (**v133)();
  std::string v134;
  int v135;
  char v136;
  std::string v137;
  uint64_t (**v138)();
  std::string v139;
  int v140;
  char v141;
  std::string v142;
  uint64_t (**v143)();
  std::string v144;
  int v145;
  char v146;
  std::string v147;
  uint64_t (**v148)();
  std::string v149;
  int v150;
  char v151;
  std::string v152;
  uint64_t (**v153)();
  std::string v154;
  int v155;
  uint64_t v156;
  int v157;
  uint64_t (**v158)();
  std::string __s;
  int v160;
  uint64_t v161;
  uint64_t (**v162)();
  std::string v163;
  int v164;
  uint64_t v165;
  uint64_t (**v166)();
  std::string v167;
  int v168;
  uint64_t v169;
  uint64_t (**v170)();
  std::string v171;
  int v172;
  uint64_t v173;
  uint64_t (**v174)();
  std::string v175;
  int v176;
  uint64_t v177;
  uint64_t (**v178)();
  std::string v179;
  int v180;
  char v181;
  std::string v182;
  uint64_t (**v183)();
  std::string v184;
  int v185;
  char v186;
  std::string v187;
  uint64_t (**v188)();
  std::string v189;
  int v190;
  char v191;
  std::string v192;
  uint64_t (**v193)();
  std::string v194;
  int v195;
  char v196;
  std::string v197;
  uint64_t (**v198)();
  std::string v199;
  int v200;
  uint64_t v201;
  uint64_t (**v202)();
  std::string v203;
  int v204;
  uint64_t v205;
  int v206;
  uint64_t (**v207)();
  std::string v208;
  int v209;
  uint64_t v210;
  int v211;
  uint64_t (**v212)();
  std::string v213;
  int v214;
  char v215;
  std::string v216;
  uint64_t (**v217)();
  std::string v218;
  int v219;
  char v220;
  std::string v221;
  uint64_t (**v222)();
  std::string v223;
  int v224;
  char v225;
  std::string v226;
  uint64_t (**v227)();
  std::string v228;
  int v229;
  char v230;
  std::string v231;
  uint64_t (**v232)();
  std::string v233;
  int v234;
  char v235;
  std::string v236;
  uint64_t (**v237)();
  std::string v238;
  int v239;
  char v240;
  std::string v241;
  uint64_t (**v242)();
  std::string v243;
  int v244;
  uint64_t v245;
  int v246;
  uint64_t (**v247)();
  std::string v248;
  int v249;
  uint64_t v250;
  uint64_t (**v251)();
  std::string v252;
  int v253;
  uint64_t v254;
  uint64_t (**v255)();
  std::string v256;
  int v257;
  uint64_t v258;
  uint64_t (**v259)();
  std::string v260;
  int v261;
  uint64_t v262;
  uint64_t (**v263)();
  std::string v264;
  int v265;
  char v266;
  std::string v267;
  uint64_t (**v268)();
  std::string v269;
  int v270;
  char v271;
  std::string v272;
  uint64_t (**v273)();
  std::string v274;
  int v275;
  char v276;
  std::string v277;
  uint64_t (**v278)();
  std::string v279;
  int v280;
  char v281;
  std::string v282;
  uint64_t (**v283)();
  std::string v284;
  int v285;
  uint64_t v286;
  uint64_t (**v287)();
  std::string v288;
  int v289;
  uint64_t v290;
  int v291;
  uint64_t (**v292)();
  std::string v293;
  int v294;
  uint64_t v295;
  int v296;
  uint64_t (**v297)();
  std::string v298;
  int v299;
  char v300;
  std::string v301;
  uint64_t (**v302)();
  std::string v303;
  int v304;
  char v305;
  std::string v306;
  uint64_t (**v307)();
  std::string v308;
  int v309;
  char v310;
  std::string v311;
  uint64_t (**v312)();
  std::string v313;
  int v314;
  char v315;
  std::string v316;
  uint64_t (**v317)();
  std::string v318;
  int v319;
  char v320;
  std::string v321;
  uint64_t (**v322)();
  std::string v323;
  int v324;
  char v325;
  std::string v326;
  uint64_t (**v327)();
  std::string v328;
  int v329;
  uint64_t v330;
  int v331;
  uint64_t (**v332)();
  std::string __p;
  int v334;
  uint64_t v335;
  uint64_t (**v336)();
  std::string v337;
  int v338;
  uint64_t v339;
  uint64_t (**v340)();
  std::string v341;
  int v342;
  uint64_t v343;
  uint64_t (**v344)();
  std::string v345;
  int v346;
  char v347;
  std::string v348;
  uint64_t (**v349)();
  std::string v350;
  int v351;
  char v352;
  std::string v353;
  uint64_t (**v354)();
  std::string v355;
  int v356;
  char v357;
  std::string v358;
  uint64_t (**v359)();
  std::string v360;
  int v361;
  char v362;
  std::string v363;
  uint64_t (**v364)();
  std::string v365;
  int v366;
  uint64_t v367;
  uint64_t (**v368)();
  std::string v369;
  int v370;
  uint64_t v371;
  int v372;
  uint64_t (**v373)();
  std::string v374;
  int v375;
  uint64_t v376;
  int v377;
  uint64_t (**v378)();
  std::string v379;
  int v380;
  char v381;
  std::string v382;
  uint64_t (**v383)();
  std::string v384;
  int v385;
  char v386;
  std::string v387;
  uint64_t (**v388)();
  std::string v389;
  int v390;
  char v391;
  std::string v392;
  uint64_t (**v393)();
  std::string v394;
  int v395;
  char v396;
  std::string v397;
  uint64_t (**v398)();
  std::string v399;
  int v400;
  char v401;
  std::string v402;
  uint64_t (**v403)();
  std::string v404;
  int v405;
  char v406;
  std::string v407;

  v21 = MEMORY[0x24BDAC7A8](a1);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v33 = v22;
  v59 = v34;
  v77 = v21;
  if (*(char *)(v22 + 31) < 0)
    std::string::__init_copy_ctor_external(&v163, *(const std::string::value_type **)(v22 + 8), *(_QWORD *)(v22 + 16));
  else
    v163 = *(std::string *)(v22 + 8);
  v164 = *(_DWORD *)(v33 + 32);
  v162 = off_24C335AF8;
  v165 = *(_QWORD *)(v33 + 36);
  if (*(char *)(v32 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(v32 + 8), *(_QWORD *)(v32 + 16));
  else
    __s = *(std::string *)(v32 + 8);
  v35 = *(_DWORD *)(v32 + 32);
  v160 = v35;
  v158 = off_24C335AF8;
  v36 = *(_QWORD *)(v32 + 36);
  v161 = v36;
  if (*(char *)(v30 + 31) < 0)
    std::string::__init_copy_ctor_external(&v154, *(const std::string::value_type **)(v30 + 8), *(_QWORD *)(v30 + 16));
  else
    v154 = *(std::string *)(v30 + 8);
  v37 = *(_DWORD *)(v30 + 32);
  v153 = off_24C335B18;
  v156 = *(_QWORD *)(v30 + 36);
  v38 = *(_DWORD *)(v30 + 44);
  v76 = v37;
  v155 = v37;
  v157 = v38;
  v148 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v28 + 31) < 0)
    std::string::__init_copy_ctor_external(&v149, *(const std::string::value_type **)(v28 + 8), *(_QWORD *)(v28 + 16));
  else
    v149 = *(std::string *)(v28 + 8);
  v150 = *(_DWORD *)(v28 + 32);
  v148 = &off_24C335AB8;
  v151 = *(_BYTE *)(v28 + 36);
  if (*(char *)(v28 + 63) < 0)
    std::string::__init_copy_ctor_external(&v152, *(const std::string::value_type **)(v28 + 40), *(_QWORD *)(v28 + 48));
  else
    v152 = *(std::string *)(v28 + 40);
  v143 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v26 + 31) < 0)
    std::string::__init_copy_ctor_external(&v144, *(const std::string::value_type **)(v26 + 8), *(_QWORD *)(v26 + 16));
  else
    v144 = *(std::string *)(v26 + 8);
  v145 = *(_DWORD *)(v26 + 32);
  v143 = &off_24C335AB8;
  v146 = *(_BYTE *)(v26 + 36);
  if (*(char *)(v26 + 63) < 0)
    std::string::__init_copy_ctor_external(&v147, *(const std::string::value_type **)(v26 + 40), *(_QWORD *)(v26 + 48));
  else
    v147 = *(std::string *)(v26 + 40);
  v138 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(v24 + 31) < 0)
    std::string::__init_copy_ctor_external(&v139, *(const std::string::value_type **)(v24 + 8), *(_QWORD *)(v24 + 16));
  else
    v139 = *(std::string *)(v24 + 8);
  v140 = *(_DWORD *)(v24 + 32);
  v138 = &off_24C335AB8;
  v141 = *(_BYTE *)(v24 + 36);
  if (*(char *)(v24 + 63) < 0)
    std::string::__init_copy_ctor_external(&v142, *(const std::string::value_type **)(v24 + 40), *(_QWORD *)(v24 + 48));
  else
    v142 = *(std::string *)(v24 + 40);
  v133 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v134, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v134 = *(std::string *)(a9 + 8);
  v135 = *(_DWORD *)(a9 + 32);
  v133 = &off_24C335AB8;
  v136 = *(_BYTE *)(a9 + 36);
  if (*(char *)(a9 + 63) < 0)
    std::string::__init_copy_ctor_external(&v137, *(const std::string::value_type **)(a9 + 40), *(_QWORD *)(a9 + 48));
  else
    v137 = *(std::string *)(a9 + 40);
  v128 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v129, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v129 = *(std::string *)(a10 + 8);
  v130 = *(_DWORD *)(a10 + 32);
  v128 = &off_24C335AB8;
  v131 = *(_BYTE *)(a10 + 36);
  if (*(char *)(a10 + 63) < 0)
    std::string::__init_copy_ctor_external(&v132, *(const std::string::value_type **)(a10 + 40), *(_QWORD *)(a10 + 48));
  else
    v132 = *(std::string *)(a10 + 40);
  v123 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v124, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v124 = *(std::string *)(a11 + 8);
  v125 = *(_DWORD *)(a11 + 32);
  v123 = &off_24C335AB8;
  v126 = *(_BYTE *)(a11 + 36);
  if (*(char *)(a11 + 63) < 0)
    std::string::__init_copy_ctor_external(&v127, *(const std::string::value_type **)(a11 + 40), *(_QWORD *)(a11 + 48));
  else
    v127 = *(std::string *)(a11 + 40);
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v119, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v119 = *(std::string *)(a12 + 8);
  v39 = *(_DWORD *)(a12 + 32);
  v118 = off_24C335B18;
  v121 = *(_QWORD *)(a12 + 36);
  v40 = *(_DWORD *)(a12 + 44);
  v74 = v39;
  v120 = v39;
  v122 = v40;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v114, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v114 = *(std::string *)(a13 + 8);
  v41 = *(_DWORD *)(a13 + 32);
  v113 = off_24C335B18;
  v116 = *(_QWORD *)(a13 + 36);
  v42 = *(_DWORD *)(a13 + 44);
  v73 = v41;
  v115 = v41;
  v117 = v42;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v110, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v110 = *(std::string *)(a14 + 8);
  v72 = *(_DWORD *)(a14 + 32);
  v111 = v72;
  v109 = off_24C335AF8;
  v71 = *(_QWORD *)(a14 + 36);
  v112 = v71;
  v104 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v105, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v105 = *(std::string *)(a15 + 8);
  v106 = *(_DWORD *)(a15 + 32);
  v104 = &off_24C335AB8;
  v107 = *(_BYTE *)(a15 + 36);
  if (*(char *)(a15 + 63) < 0)
    std::string::__init_copy_ctor_external(&v108, *(const std::string::value_type **)(a15 + 40), *(_QWORD *)(a15 + 48));
  else
    v108 = *(std::string *)(a15 + 40);
  v99 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v100, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v100 = *(std::string *)(a16 + 8);
  v101 = *(_DWORD *)(a16 + 32);
  v99 = &off_24C335AB8;
  v102 = *(_BYTE *)(a16 + 36);
  if (*(char *)(a16 + 63) < 0)
    std::string::__init_copy_ctor_external(&v103, *(const std::string::value_type **)(a16 + 40), *(_QWORD *)(a16 + 48));
  else
    v103 = *(std::string *)(a16 + 40);
  v94 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v95, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v95 = *(std::string *)(a17 + 8);
  v96 = *(_DWORD *)(a17 + 32);
  v94 = &off_24C335AB8;
  v97 = *(_BYTE *)(a17 + 36);
  if (*(char *)(a17 + 63) < 0)
    std::string::__init_copy_ctor_external(&v98, *(const std::string::value_type **)(a17 + 40), *(_QWORD *)(a17 + 48));
  else
    v98 = *(std::string *)(a17 + 40);
  v89 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a18 + 31) < 0)
    std::string::__init_copy_ctor_external(&v90, *(const std::string::value_type **)(a18 + 8), *(_QWORD *)(a18 + 16));
  else
    v90 = *(std::string *)(a18 + 8);
  v91 = *(_DWORD *)(a18 + 32);
  v89 = &off_24C335AB8;
  v92 = *(_BYTE *)(a18 + 36);
  if (*(char *)(a18 + 63) < 0)
    std::string::__init_copy_ctor_external(&v93, *(const std::string::value_type **)(a18 + 40), *(_QWORD *)(a18 + 48));
  else
    v93 = *(std::string *)(a18 + 40);
  if (*(char *)(a19 + 31) < 0)
    std::string::__init_copy_ctor_external(&v86, *(const std::string::value_type **)(a19 + 8), *(_QWORD *)(a19 + 16));
  else
    v86 = *(std::string *)(a19 + 8);
  v70 = *(_DWORD *)(a19 + 32);
  v87 = v70;
  v85 = off_24C335AF8;
  v69 = *(_QWORD *)(a19 + 36);
  v88 = v69;
  if (*(char *)(a20 + 31) < 0)
    std::string::__init_copy_ctor_external(&v82, *(const std::string::value_type **)(a20 + 8), *(_QWORD *)(a20 + 16));
  else
    v82 = *(std::string *)(a20 + 8);
  v68 = *(_DWORD *)(a20 + 32);
  v83 = v68;
  v81 = off_24C335AF8;
  v67 = *(_QWORD *)(a20 + 36);
  v84 = v67;
  if (*(char *)(a21 + 31) < 0)
    std::string::__init_copy_ctor_external(&v78, *(const std::string::value_type **)(a21 + 8), *(_QWORD *)(a21 + 16));
  else
    v78 = *(std::string *)(a21 + 8);
  v66 = *(_DWORD *)(a21 + 32);
  v79 = v66;
  v65 = *(_QWORD *)(a21 + 36);
  v80 = v65;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v248, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v248 = __s;
  v249 = v35;
  v247 = off_24C335AF8;
  v250 = v36;
  if (SHIBYTE(v154.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v243, v154.__r_.__value_.__l.__data_, v154.__r_.__value_.__l.__size_);
  else
    v243 = v154;
  v242 = off_24C335B18;
  v245 = v156;
  v244 = v76;
  v246 = v157;
  v237 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v149.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v238, v149.__r_.__value_.__l.__data_, v149.__r_.__value_.__l.__size_);
  else
    v238 = v149;
  v239 = v150;
  v237 = &off_24C335AB8;
  v240 = v151;
  if (SHIBYTE(v152.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v241, v152.__r_.__value_.__l.__data_, v152.__r_.__value_.__l.__size_);
  else
    v241 = v152;
  v232 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v144.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v233, v144.__r_.__value_.__l.__data_, v144.__r_.__value_.__l.__size_);
  else
    v233 = v144;
  v234 = v145;
  v232 = &off_24C335AB8;
  v235 = v146;
  if (SHIBYTE(v147.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v236, v147.__r_.__value_.__l.__data_, v147.__r_.__value_.__l.__size_);
  else
    v236 = v147;
  v227 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v139.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v228, v139.__r_.__value_.__l.__data_, v139.__r_.__value_.__l.__size_);
  else
    v228 = v139;
  v229 = v140;
  v227 = &off_24C335AB8;
  v230 = v141;
  if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v231, v142.__r_.__value_.__l.__data_, v142.__r_.__value_.__l.__size_);
  else
    v231 = v142;
  v222 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v134.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v223, v134.__r_.__value_.__l.__data_, v134.__r_.__value_.__l.__size_);
  else
    v223 = v134;
  v224 = v135;
  v222 = &off_24C335AB8;
  v225 = v136;
  if (SHIBYTE(v137.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v226, v137.__r_.__value_.__l.__data_, v137.__r_.__value_.__l.__size_);
  else
    v226 = v137;
  v217 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v129.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v218, v129.__r_.__value_.__l.__data_, v129.__r_.__value_.__l.__size_);
  else
    v218 = v129;
  v219 = v130;
  v217 = &off_24C335AB8;
  v220 = v131;
  if (SHIBYTE(v132.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v221, v132.__r_.__value_.__l.__data_, v132.__r_.__value_.__l.__size_);
  else
    v221 = v132;
  v212 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v124.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v213, v124.__r_.__value_.__l.__data_, v124.__r_.__value_.__l.__size_);
  else
    v213 = v124;
  v214 = v125;
  v212 = &off_24C335AB8;
  v215 = v126;
  if (SHIBYTE(v127.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v216, v127.__r_.__value_.__l.__data_, v127.__r_.__value_.__l.__size_);
  else
    v216 = v127;
  if (SHIBYTE(v119.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v208, v119.__r_.__value_.__l.__data_, v119.__r_.__value_.__l.__size_);
  else
    v208 = v119;
  v207 = off_24C335B18;
  v210 = v121;
  v209 = v74;
  v211 = v122;
  if (SHIBYTE(v114.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v203, v114.__r_.__value_.__l.__data_, v114.__r_.__value_.__l.__size_);
  else
    v203 = v114;
  v202 = off_24C335B18;
  v205 = v116;
  v204 = v73;
  v206 = v117;
  if (SHIBYTE(v110.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v199, v110.__r_.__value_.__l.__data_, v110.__r_.__value_.__l.__size_);
  else
    v199 = v110;
  v200 = v72;
  v198 = off_24C335AF8;
  v201 = v71;
  v193 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v105.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v194, v105.__r_.__value_.__l.__data_, v105.__r_.__value_.__l.__size_);
  else
    v194 = v105;
  v195 = v106;
  v193 = &off_24C335AB8;
  v196 = v107;
  if (SHIBYTE(v108.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v197, v108.__r_.__value_.__l.__data_, v108.__r_.__value_.__l.__size_);
  else
    v197 = v108;
  v188 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v100.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v189, v100.__r_.__value_.__l.__data_, v100.__r_.__value_.__l.__size_);
  else
    v189 = v100;
  v190 = v101;
  v188 = &off_24C335AB8;
  v191 = v102;
  if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v192, v103.__r_.__value_.__l.__data_, v103.__r_.__value_.__l.__size_);
  else
    v192 = v103;
  v183 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v95.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v184, v95.__r_.__value_.__l.__data_, v95.__r_.__value_.__l.__size_);
  else
    v184 = v95;
  v185 = v96;
  v183 = &off_24C335AB8;
  v186 = v97;
  if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v187, v98.__r_.__value_.__l.__data_, v98.__r_.__value_.__l.__size_);
  else
    v187 = v98;
  v178 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v90.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v179, v90.__r_.__value_.__l.__data_, v90.__r_.__value_.__l.__size_);
  else
    v179 = v90;
  v180 = v91;
  v178 = &off_24C335AB8;
  v181 = v92;
  if (SHIBYTE(v93.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v182, v93.__r_.__value_.__l.__data_, v93.__r_.__value_.__l.__size_);
  else
    v182 = v93;
  if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v175, v86.__r_.__value_.__l.__data_, v86.__r_.__value_.__l.__size_);
  else
    v175 = v86;
  v176 = v70;
  v174 = off_24C335AF8;
  v177 = v69;
  if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v171, v82.__r_.__value_.__l.__data_, v82.__r_.__value_.__l.__size_);
  else
    v171 = v82;
  v172 = v68;
  v170 = off_24C335AF8;
  v173 = v67;
  if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v167, v78.__r_.__value_.__l.__data_, v78.__r_.__value_.__l.__size_);
  else
    v167 = v78;
  v168 = v66;
  v166 = off_24C335AF8;
  v169 = v65;
  if (SHIBYTE(v243.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v328, v243.__r_.__value_.__l.__data_, v243.__r_.__value_.__l.__size_);
  else
    v328 = v243;
  v327 = off_24C335B18;
  v330 = v245;
  v329 = v76;
  v331 = v246;
  v322 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v323, v238.__r_.__value_.__l.__data_, v238.__r_.__value_.__l.__size_);
  else
    v323 = v238;
  v324 = v239;
  v322 = &off_24C335AB8;
  v325 = v240;
  if (SHIBYTE(v241.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v326, v241.__r_.__value_.__l.__data_, v241.__r_.__value_.__l.__size_);
  else
    v326 = v241;
  v317 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v233.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v318, v233.__r_.__value_.__l.__data_, v233.__r_.__value_.__l.__size_);
  else
    v318 = v233;
  v319 = v234;
  v317 = &off_24C335AB8;
  v320 = v235;
  if (SHIBYTE(v236.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v321, v236.__r_.__value_.__l.__data_, v236.__r_.__value_.__l.__size_);
  else
    v321 = v236;
  v312 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v228.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v313, v228.__r_.__value_.__l.__data_, v228.__r_.__value_.__l.__size_);
  else
    v313 = v228;
  v314 = v229;
  v312 = &off_24C335AB8;
  v315 = v230;
  if (SHIBYTE(v231.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v316, v231.__r_.__value_.__l.__data_, v231.__r_.__value_.__l.__size_);
  else
    v316 = v231;
  v307 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v223.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v308, v223.__r_.__value_.__l.__data_, v223.__r_.__value_.__l.__size_);
  else
    v308 = v223;
  v309 = v224;
  v307 = &off_24C335AB8;
  v310 = v225;
  if (SHIBYTE(v226.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v311, v226.__r_.__value_.__l.__data_, v226.__r_.__value_.__l.__size_);
  else
    v311 = v226;
  v302 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v218.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v303, v218.__r_.__value_.__l.__data_, v218.__r_.__value_.__l.__size_);
  else
    v303 = v218;
  v304 = v219;
  v302 = &off_24C335AB8;
  v305 = v220;
  if (SHIBYTE(v221.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v306, v221.__r_.__value_.__l.__data_, v221.__r_.__value_.__l.__size_);
  else
    v306 = v221;
  v297 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v213.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v298, v213.__r_.__value_.__l.__data_, v213.__r_.__value_.__l.__size_);
  else
    v298 = v213;
  v299 = v214;
  v297 = &off_24C335AB8;
  v300 = v215;
  if (SHIBYTE(v216.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v301, v216.__r_.__value_.__l.__data_, v216.__r_.__value_.__l.__size_);
  else
    v301 = v216;
  v292 = (uint64_t (**)())off_24C335D90;
  v43 = SHIBYTE(v208.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v208.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v293, v208.__r_.__value_.__l.__data_, v208.__r_.__value_.__l.__size_);
  else
    v293 = v208;
  v292 = off_24C335B18;
  v295 = v210;
  v294 = v74;
  v296 = v211;
  v287 = (uint64_t (**)())off_24C335D90;
  v61 = SHIBYTE(v203.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v203.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v288, v203.__r_.__value_.__l.__data_, v203.__r_.__value_.__l.__size_);
  else
    v288 = v203;
  v287 = off_24C335B18;
  v290 = v205;
  v289 = v73;
  v291 = v206;
  v283 = (uint64_t (**)())off_24C335D90;
  v44 = SHIBYTE(v199.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v199.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v284, v199.__r_.__value_.__l.__data_, v199.__r_.__value_.__l.__size_);
  else
    v284 = v199;
  v285 = v72;
  v283 = off_24C335AF8;
  v286 = v71;
  v278 = (uint64_t (**)())off_24C335D90;
  v60 = v44;
  if (SHIBYTE(v194.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v279, v194.__r_.__value_.__l.__data_, v194.__r_.__value_.__l.__size_);
  else
    v279 = v194;
  v280 = v195;
  v278 = &off_24C335AB8;
  v281 = v196;
  if (SHIBYTE(v197.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v282, v197.__r_.__value_.__l.__data_, v197.__r_.__value_.__l.__size_);
  else
    v282 = v197;
  v273 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v189.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v274, v189.__r_.__value_.__l.__data_, v189.__r_.__value_.__l.__size_);
  else
    v274 = v189;
  v275 = v190;
  v273 = &off_24C335AB8;
  v276 = v191;
  if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v277, v192.__r_.__value_.__l.__data_, v192.__r_.__value_.__l.__size_);
  else
    v277 = v192;
  v268 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v184.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v269, v184.__r_.__value_.__l.__data_, v184.__r_.__value_.__l.__size_);
  else
    v269 = v184;
  v270 = v185;
  v268 = &off_24C335AB8;
  v271 = v186;
  if (SHIBYTE(v187.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v272, v187.__r_.__value_.__l.__data_, v187.__r_.__value_.__l.__size_);
  else
    v272 = v187;
  v263 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v264, v179.__r_.__value_.__l.__data_, v179.__r_.__value_.__l.__size_);
  else
    v264 = v179;
  v265 = v180;
  v263 = &off_24C335AB8;
  v266 = v181;
  if (SHIBYTE(v182.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v267, v182.__r_.__value_.__l.__data_, v182.__r_.__value_.__l.__size_);
  else
    v267 = v182;
  v259 = (uint64_t (**)())off_24C335D90;
  v63 = SHIBYTE(v175.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v175.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v260, v175.__r_.__value_.__l.__data_, v175.__r_.__value_.__l.__size_);
  else
    v260 = v175;
  v261 = v70;
  v259 = off_24C335AF8;
  v262 = v69;
  v255 = (uint64_t (**)())off_24C335D90;
  v62 = SHIBYTE(v171.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v171.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v256, v171.__r_.__value_.__l.__data_, v171.__r_.__value_.__l.__size_);
  else
    v256 = v171;
  v257 = v68;
  v255 = off_24C335AF8;
  v258 = v67;
  v251 = (uint64_t (**)())off_24C335D90;
  v58 = SHIBYTE(v167.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v167.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v252, v167.__r_.__value_.__l.__data_, v167.__r_.__value_.__l.__size_);
  else
    v252 = v167;
  v253 = v66;
  v251 = off_24C335AF8;
  v254 = v65;
  v403 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v323.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v404, v323.__r_.__value_.__l.__data_, v323.__r_.__value_.__l.__size_);
  else
    v404 = v323;
  v405 = v324;
  v403 = &off_24C335AB8;
  v406 = v325;
  if (SHIBYTE(v326.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v407, v326.__r_.__value_.__l.__data_, v326.__r_.__value_.__l.__size_);
  else
    v407 = v326;
  v398 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v318.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v399, v318.__r_.__value_.__l.__data_, v318.__r_.__value_.__l.__size_);
  else
    v399 = v318;
  v400 = v319;
  v398 = &off_24C335AB8;
  v401 = v320;
  if (SHIBYTE(v321.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v402, v321.__r_.__value_.__l.__data_, v321.__r_.__value_.__l.__size_);
  else
    v402 = v321;
  v393 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v313.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v394, v313.__r_.__value_.__l.__data_, v313.__r_.__value_.__l.__size_);
  else
    v394 = v313;
  v395 = v314;
  v393 = &off_24C335AB8;
  v396 = v315;
  if (SHIBYTE(v316.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v397, v316.__r_.__value_.__l.__data_, v316.__r_.__value_.__l.__size_);
  else
    v397 = v316;
  v388 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v389, v308.__r_.__value_.__l.__data_, v308.__r_.__value_.__l.__size_);
  else
    v389 = v308;
  v390 = v309;
  v388 = &off_24C335AB8;
  v391 = v310;
  if (SHIBYTE(v311.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v392, v311.__r_.__value_.__l.__data_, v311.__r_.__value_.__l.__size_);
  else
    v392 = v311;
  v383 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v303.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v384, v303.__r_.__value_.__l.__data_, v303.__r_.__value_.__l.__size_);
  else
    v384 = v303;
  v385 = v304;
  v383 = &off_24C335AB8;
  v386 = v305;
  if (SHIBYTE(v306.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v387, v306.__r_.__value_.__l.__data_, v306.__r_.__value_.__l.__size_);
  else
    v387 = v306;
  v378 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v298.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v379, v298.__r_.__value_.__l.__data_, v298.__r_.__value_.__l.__size_);
  else
    v379 = v298;
  v380 = v299;
  v378 = &off_24C335AB8;
  v381 = v300;
  if (SHIBYTE(v301.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v382, v301.__r_.__value_.__l.__data_, v301.__r_.__value_.__l.__size_);
  else
    v382 = v301;
  v373 = (uint64_t (**)())off_24C335D90;
  v64 = SHIBYTE(v293.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v293.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v374, v293.__r_.__value_.__l.__data_, v293.__r_.__value_.__l.__size_);
  else
    v374 = v293;
  v373 = off_24C335B18;
  v376 = v295;
  v375 = v74;
  v377 = v296;
  v368 = (uint64_t (**)())off_24C335D90;
  v75 = SHIBYTE(v288.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v288.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v369, v288.__r_.__value_.__l.__data_, v288.__r_.__value_.__l.__size_);
  else
    v369 = v288;
  v368 = off_24C335B18;
  v371 = v290;
  v370 = v73;
  v372 = v291;
  v364 = (uint64_t (**)())off_24C335D90;
  v45 = SHIBYTE(v284.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v284.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v365, v284.__r_.__value_.__l.__data_, v284.__r_.__value_.__l.__size_);
  else
    v365 = v284;
  v366 = v72;
  v364 = off_24C335AF8;
  v367 = v71;
  v359 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v279.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v360, v279.__r_.__value_.__l.__data_, v279.__r_.__value_.__l.__size_);
  else
    v360 = v279;
  v361 = v280;
  v359 = &off_24C335AB8;
  v362 = v281;
  if (SHIBYTE(v282.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v363, v282.__r_.__value_.__l.__data_, v282.__r_.__value_.__l.__size_);
  else
    v363 = v282;
  v354 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v274.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v355, v274.__r_.__value_.__l.__data_, v274.__r_.__value_.__l.__size_);
  else
    v355 = v274;
  v356 = v275;
  v354 = &off_24C335AB8;
  v357 = v276;
  if (SHIBYTE(v277.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v358, v277.__r_.__value_.__l.__data_, v277.__r_.__value_.__l.__size_);
  else
    v358 = v277;
  v349 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v269.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v350, v269.__r_.__value_.__l.__data_, v269.__r_.__value_.__l.__size_);
  else
    v350 = v269;
  v351 = v270;
  v349 = &off_24C335AB8;
  v352 = v271;
  if (SHIBYTE(v272.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v353, v272.__r_.__value_.__l.__data_, v272.__r_.__value_.__l.__size_);
  else
    v353 = v272;
  v344 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v264.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v345, v264.__r_.__value_.__l.__data_, v264.__r_.__value_.__l.__size_);
  else
    v345 = v264;
  v346 = v265;
  v344 = &off_24C335AB8;
  v347 = v266;
  if (SHIBYTE(v267.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v348, v267.__r_.__value_.__l.__data_, v267.__r_.__value_.__l.__size_);
  else
    v348 = v267;
  v340 = (uint64_t (**)())off_24C335D90;
  v46 = SHIBYTE(v260.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v260.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v341, v260.__r_.__value_.__l.__data_, v260.__r_.__value_.__l.__size_);
  else
    v341 = v260;
  v342 = v70;
  v340 = off_24C335AF8;
  v343 = v69;
  v336 = (uint64_t (**)())off_24C335D90;
  v47 = SHIBYTE(v256.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v256.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v337, v256.__r_.__value_.__l.__data_, v256.__r_.__value_.__l.__size_);
  else
    v337 = v256;
  v338 = v68;
  v336 = off_24C335AF8;
  v339 = v67;
  v332 = (uint64_t (**)())off_24C335D90;
  v48 = SHIBYTE(v252.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v252.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v252.__r_.__value_.__l.__data_, v252.__r_.__value_.__l.__size_);
  else
    __p = v252;
  v334 = v66;
  v332 = off_24C335AF8;
  v335 = v65;
  mediaplatform::DatabaseColumnTuple<18ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::DatabaseColumnTuple(v77, (uint64_t)&v403, (uint64_t)&v398, (uint64_t)&v393, (uint64_t)&v388, (uint64_t)&v383, (uint64_t)&v378, (uint64_t)&v373, (uint64_t)&v368, (uint64_t)&v364, (uint64_t)&v359, (uint64_t)&v354, (uint64_t)&v349, (uint64_t)&v344, (uint64_t)&v340, (uint64_t)&v336, (uint64_t)&v332);
  v332 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v336 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v337.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v337.__r_.__value_.__l.__data_);
  v340 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v341.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v341.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v344);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v349);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v354);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v359);
  v364 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v365.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v365.__r_.__value_.__l.__data_);
  v368 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v369.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v369.__r_.__value_.__l.__data_);
  v373 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v374.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v374.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v378);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v383);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v388);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v393);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v398);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v403);
  *(_QWORD *)(v77 + 928) = off_24C335D90;
  v49 = (std::string *)(v77 + 936);
  v50 = SHIBYTE(v328.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v328.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v49, v328.__r_.__value_.__l.__data_, v328.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v49->__r_.__value_.__l.__data_ = *(_OWORD *)&v328.__r_.__value_.__l.__data_;
    *(_QWORD *)(v77 + 952) = *((_QWORD *)&v328.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(v77 + 960) = v76;
  *(_QWORD *)(v77 + 928) = off_24C335B18;
  *(_QWORD *)(v77 + 964) = v330;
  *(_DWORD *)(v77 + 972) = v331;
  v251 = (uint64_t (**)())off_24C335D90;
  if (v48 < 0)
    operator delete(v252.__r_.__value_.__l.__data_);
  v255 = (uint64_t (**)())off_24C335D90;
  if (v47 < 0)
    operator delete(v256.__r_.__value_.__l.__data_);
  v259 = (uint64_t (**)())off_24C335D90;
  if (v46 < 0)
    operator delete(v260.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v263);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v268);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v273);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v278);
  v283 = (uint64_t (**)())off_24C335D90;
  if (v45 < 0)
    operator delete(v284.__r_.__value_.__l.__data_);
  v287 = (uint64_t (**)())off_24C335D90;
  if (v75 < 0)
    operator delete(v288.__r_.__value_.__l.__data_);
  v292 = (uint64_t (**)())off_24C335D90;
  if (v64 < 0)
    operator delete(v293.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v297);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v302);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v307);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v312);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v317);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v322);
  if (v50 < 0)
    operator delete(v328.__r_.__value_.__l.__data_);
  *(_QWORD *)(v77 + 976) = off_24C335D90;
  v51 = (std::string *)(v77 + 984);
  v52 = SHIBYTE(v248.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v248.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v51, v248.__r_.__value_.__l.__data_, v248.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v51->__r_.__value_.__l.__data_ = *(_OWORD *)&v248.__r_.__value_.__l.__data_;
    *(_QWORD *)(v77 + 1000) = *((_QWORD *)&v248.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(v77 + 1008) = v249;
  *(_QWORD *)(v77 + 976) = off_24C335AF8;
  *(_QWORD *)(v77 + 1012) = v250;
  v166 = (uint64_t (**)())off_24C335D90;
  if (v58 < 0)
    operator delete(v167.__r_.__value_.__l.__data_);
  v170 = (uint64_t (**)())off_24C335D90;
  if (v62 < 0)
    operator delete(v171.__r_.__value_.__l.__data_);
  v174 = (uint64_t (**)())off_24C335D90;
  if (v63 < 0)
    operator delete(v175.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v178);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v183);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v188);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v193);
  v198 = (uint64_t (**)())off_24C335D90;
  if (v60 < 0)
    operator delete(v199.__r_.__value_.__l.__data_);
  v202 = (uint64_t (**)())off_24C335D90;
  if (v61 < 0)
    operator delete(v203.__r_.__value_.__l.__data_);
  v207 = (uint64_t (**)())off_24C335D90;
  if (v43 < 0)
    operator delete(v208.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v212);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v217);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v222);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v227);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v232);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v237);
  if (SHIBYTE(v243.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v243.__r_.__value_.__l.__data_);
    if ((v52 & 0x80000000) == 0)
      goto LABEL_377;
  }
  else if ((v52 & 0x80000000) == 0)
  {
    goto LABEL_377;
  }
  operator delete(v248.__r_.__value_.__l.__data_);
LABEL_377:
  *(_QWORD *)(v77 + 1024) = off_24C335D90;
  v53 = (std::string *)(v77 + 1032);
  v54 = SHIBYTE(v163.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v163.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v53, v163.__r_.__value_.__l.__data_, v163.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v53->__r_.__value_.__l.__data_ = *(_OWORD *)&v163.__r_.__value_.__l.__data_;
    *(_QWORD *)(v77 + 1048) = *((_QWORD *)&v163.__r_.__value_.__l + 2);
  }
  *(_DWORD *)(v77 + 1056) = v164;
  *(_QWORD *)(v77 + 1024) = off_24C335AF8;
  *(_QWORD *)(v77 + 1060) = v165;
  if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v78.__r_.__value_.__l.__data_);
  if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v82.__r_.__value_.__l.__data_);
  if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v86.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v89);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v94);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v99);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v104);
  if (SHIBYTE(v110.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v110.__r_.__value_.__l.__data_);
  if (SHIBYTE(v114.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v114.__r_.__value_.__l.__data_);
  if (SHIBYTE(v119.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v119.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v123);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v128);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v133);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v138);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v143);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v148);
  if (SHIBYTE(v154.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v154.__r_.__value_.__l.__data_);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__s.__r_.__value_.__l.__data_);
    if ((v54 & 0x80000000) == 0)
      goto LABEL_398;
  }
  else if ((v54 & 0x80000000) == 0)
  {
    goto LABEL_398;
  }
  operator delete(v163.__r_.__value_.__l.__data_);
LABEL_398:
  *(_QWORD *)(v77 + 1072) = off_24C335D90;
  v55 = (std::string *)(v77 + 1080);
  if (*(char *)(v59 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v55, *(const std::string::value_type **)(v59 + 8), *(_QWORD *)(v59 + 16));
  }
  else
  {
    v56 = *(_OWORD *)(v59 + 8);
    *(_QWORD *)(v77 + 1096) = *(_QWORD *)(v59 + 24);
    *(_OWORD *)&v55->__r_.__value_.__l.__data_ = v56;
  }
  result = v77;
  *(_DWORD *)(v77 + 1104) = *(_DWORD *)(v59 + 32);
  *(_QWORD *)(v77 + 1072) = off_24C335AF8;
  *(_QWORD *)(v77 + 1108) = *(_QWORD *)(v59 + 36);
  return result;
}

void sub_20A8DA578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  mediaplatform::DatabaseColumnTuple<15ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a63);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<14ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 1072) = off_24C335D90;
  if (*(char *)(a1 + 1103) < 0)
    operator delete(*(void **)(a1 + 1080));
  *(_QWORD *)(a1 + 1024) = off_24C335D90;
  if (*(char *)(a1 + 1055) < 0)
    operator delete(*(void **)(a1 + 1032));
  *(_QWORD *)(a1 + 976) = off_24C335D90;
  if (*(char *)(a1 + 1007) < 0)
    operator delete(*(void **)(a1 + 984));
  *(_QWORD *)(a1 + 928) = off_24C335D90;
  if (*(char *)(a1 + 959) < 0)
    operator delete(*(void **)(a1 + 936));
  return mediaplatform::DatabaseColumnTuple<18ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<15ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 1024) = off_24C335D90;
  if (*(char *)(a1 + 1055) < 0)
    operator delete(*(void **)(a1 + 1032));
  *(_QWORD *)(a1 + 976) = off_24C335D90;
  if (*(char *)(a1 + 1007) < 0)
    operator delete(*(void **)(a1 + 984));
  *(_QWORD *)(a1 + 928) = off_24C335D90;
  if (*(char *)(a1 + 959) < 0)
    operator delete(*(void **)(a1 + 936));
  return mediaplatform::DatabaseColumnTuple<18ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<16ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 976) = off_24C335D90;
  if (*(char *)(a1 + 1007) < 0)
    operator delete(*(void **)(a1 + 984));
  *(_QWORD *)(a1 + 928) = off_24C335D90;
  if (*(char *)(a1 + 959) < 0)
    operator delete(*(void **)(a1 + 936));
  return mediaplatform::DatabaseColumnTuple<18ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<17ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 928) = off_24C335D90;
  if (*(char *)(a1 + 959) < 0)
    operator delete(*(void **)(a1 + 936));
  return mediaplatform::DatabaseColumnTuple<18ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<18ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::DatabaseColumnTuple(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  std::string *v35;
  std::string *v36;
  std::string *v37;
  std::string *v38;
  __int128 v39;
  std::string *v40;
  __int128 v41;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  int v62;
  int v63;
  int v64;
  std::string v65;
  int v66;
  uint64_t v67;
  uint64_t (**v68)();
  std::string v69;
  int v70;
  uint64_t v71;
  uint64_t (**v72)();
  std::string v73;
  int v74;
  uint64_t v75;
  uint64_t (**v76)();
  std::string v77;
  int v78;
  char v79;
  std::string v80;
  uint64_t (**v81)();
  std::string v82;
  int v83;
  char v84;
  std::string v85;
  uint64_t (**v86)();
  std::string v87;
  int v88;
  char v89;
  std::string v90;
  uint64_t (**v91)();
  std::string v92;
  int v93;
  char v94;
  std::string v95;
  uint64_t (**v96)();
  std::string v97;
  int v98;
  uint64_t v99;
  uint64_t (**v100)();
  std::string v101;
  int v102;
  uint64_t v103;
  int v104;
  uint64_t (**v105)();
  std::string v106;
  int v107;
  uint64_t v108;
  int v109;
  uint64_t (**v110)();
  std::string v111;
  int v112;
  char v113;
  std::string v114;
  uint64_t (**v115)();
  std::string v116;
  int v117;
  char v118;
  std::string v119;
  uint64_t (**v120)();
  std::string v121;
  int v122;
  char v123;
  std::string v124;
  uint64_t (**v125)();
  std::string __s;
  int v127;
  char v128;
  std::string v129;
  uint64_t (**v130)();
  std::string v131;
  int v132;
  char v133;
  std::string v134;
  uint64_t (**v135)();
  std::string v136;
  int v137;
  uint64_t v138;
  uint64_t (**v139)();
  std::string v140;
  int v141;
  uint64_t v142;
  uint64_t (**v143)();
  std::string v144;
  int v145;
  uint64_t v146;
  uint64_t (**v147)();
  std::string v148;
  int v149;
  char v150;
  std::string v151;
  uint64_t (**v152)();
  std::string v153;
  int v154;
  char v155;
  std::string v156;
  uint64_t (**v157)();
  std::string v158;
  int v159;
  char v160;
  std::string v161;
  uint64_t (**v162)();
  std::string v163;
  int v164;
  char v165;
  std::string v166;
  uint64_t (**v167)();
  std::string v168;
  int v169;
  uint64_t v170;
  uint64_t (**v171)();
  std::string v172;
  int v173;
  uint64_t v174;
  int v175;
  uint64_t (**v176)();
  std::string v177;
  int v178;
  uint64_t v179;
  int v180;
  uint64_t (**v181)();
  std::string v182;
  int v183;
  char v184;
  std::string v185;
  uint64_t (**v186)();
  std::string v187;
  int v188;
  char v189;
  std::string v190;
  uint64_t (**v191)();
  std::string v192;
  int v193;
  char v194;
  std::string v195;
  uint64_t (**v196)();
  std::string v197;
  int v198;
  char v199;
  std::string v200;
  uint64_t (**v201)();
  std::string v202;
  int v203;
  uint64_t v204;
  uint64_t (**v205)();
  std::string v206;
  int v207;
  uint64_t v208;
  uint64_t (**v209)();
  std::string v210;
  int v211;
  uint64_t v212;
  uint64_t (**v213)();
  std::string v214;
  int v215;
  char v216;
  std::string v217;
  uint64_t (**v218)();
  std::string v219;
  int v220;
  char v221;
  std::string v222;
  uint64_t (**v223)();
  std::string v224;
  int v225;
  char v226;
  std::string v227;
  uint64_t (**v228)();
  std::string v229;
  int v230;
  char v231;
  std::string v232;
  uint64_t (**v233)();
  std::string v234;
  int v235;
  uint64_t v236;
  uint64_t (**v237)();
  std::string v238;
  int v239;
  uint64_t v240;
  int v241;
  uint64_t (**v242)();
  std::string v243;
  int v244;
  uint64_t v245;
  int v246;
  uint64_t (**v247)();
  std::string v248;
  int v249;
  char v250;
  std::string v251;
  uint64_t (**v252)();
  std::string v253;
  int v254;
  char v255;
  std::string v256;
  uint64_t (**v257)();
  std::string v258;
  int v259;
  char v260;
  std::string v261;
  uint64_t (**v262)();
  std::string v263;
  int v264;
  uint64_t v265;
  uint64_t (**v266)();
  std::string v267;
  int v268;
  uint64_t v269;
  uint64_t (**v270)();
  std::string v271;
  int v272;
  uint64_t v273;
  uint64_t (**v274)();
  std::string v275;
  int v276;
  char v277;
  std::string v278;
  uint64_t (**v279)();
  std::string v280;
  int v281;
  char v282;
  std::string v283;
  uint64_t (**v284)();
  std::string v285;
  int v286;
  char v287;
  std::string v288;
  uint64_t (**v289)();
  std::string v290;
  int v291;
  char v292;
  std::string v293;
  uint64_t (**v294)();
  std::string v295;
  int v296;
  uint64_t v297;
  uint64_t (**v298)();
  std::string v299;
  int v300;
  uint64_t v301;
  int v302;
  uint64_t (**v303)();
  std::string v304;
  int v305;
  uint64_t v306;
  int v307;
  uint64_t (**v308)();
  std::string v309;
  int v310;
  char v311;
  std::string v312;
  uint64_t (**v313)();
  std::string v314;
  int v315;
  char v316;
  std::string v317;
  uint64_t (**v318)();
  std::string __p;
  int v320;
  uint64_t v321;
  uint64_t (**v322)();
  std::string v323;
  int v324;
  uint64_t v325;
  uint64_t (**v326)();
  std::string v327;
  int v328;
  uint64_t v329;
  uint64_t (**v330)();
  std::string v331;
  int v332;
  char v333;
  std::string v334;
  uint64_t (**v335)();
  std::string v336;
  int v337;
  char v338;
  std::string v339;
  uint64_t (**v340)();
  std::string v341;
  int v342;
  char v343;
  std::string v344;
  uint64_t (**v345)();
  std::string v346;
  int v347;
  char v348;
  std::string v349;
  uint64_t (**v350)();
  std::string v351;
  int v352;
  uint64_t v353;
  uint64_t (**v354)();
  std::string v355;
  int v356;
  uint64_t v357;
  int v358;
  uint64_t (**v359)();
  std::string v360;
  int v361;
  uint64_t v362;
  int v363;
  uint64_t (**v364)();
  std::string v365;
  int v366;
  char v367;
  std::string v368;

  v130 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a3 + 31) < 0)
    std::string::__init_copy_ctor_external(&v131, *(const std::string::value_type **)(a3 + 8), *(_QWORD *)(a3 + 16));
  else
    v131 = *(std::string *)(a3 + 8);
  v132 = *(_DWORD *)(a3 + 32);
  v130 = &off_24C335AB8;
  v133 = *(_BYTE *)(a3 + 36);
  if (*(char *)(a3 + 63) < 0)
    std::string::__init_copy_ctor_external(&v134, *(const std::string::value_type **)(a3 + 40), *(_QWORD *)(a3 + 48));
  else
    v134 = *(std::string *)(a3 + 40);
  v125 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a4 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(a4 + 8), *(_QWORD *)(a4 + 16));
  else
    __s = *(std::string *)(a4 + 8);
  v127 = *(_DWORD *)(a4 + 32);
  v125 = &off_24C335AB8;
  v128 = *(_BYTE *)(a4 + 36);
  if (*(char *)(a4 + 63) < 0)
    std::string::__init_copy_ctor_external(&v129, *(const std::string::value_type **)(a4 + 40), *(_QWORD *)(a4 + 48));
  else
    v129 = *(std::string *)(a4 + 40);
  v120 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a5 + 31) < 0)
    std::string::__init_copy_ctor_external(&v121, *(const std::string::value_type **)(a5 + 8), *(_QWORD *)(a5 + 16));
  else
    v121 = *(std::string *)(a5 + 8);
  v122 = *(_DWORD *)(a5 + 32);
  v120 = &off_24C335AB8;
  v123 = *(_BYTE *)(a5 + 36);
  if (*(char *)(a5 + 63) < 0)
    std::string::__init_copy_ctor_external(&v124, *(const std::string::value_type **)(a5 + 40), *(_QWORD *)(a5 + 48));
  else
    v124 = *(std::string *)(a5 + 40);
  v115 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a6 + 31) < 0)
    std::string::__init_copy_ctor_external(&v116, *(const std::string::value_type **)(a6 + 8), *(_QWORD *)(a6 + 16));
  else
    v116 = *(std::string *)(a6 + 8);
  v117 = *(_DWORD *)(a6 + 32);
  v115 = &off_24C335AB8;
  v118 = *(_BYTE *)(a6 + 36);
  if (*(char *)(a6 + 63) < 0)
    std::string::__init_copy_ctor_external(&v119, *(const std::string::value_type **)(a6 + 40), *(_QWORD *)(a6 + 48));
  else
    v119 = *(std::string *)(a6 + 40);
  v110 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a7 + 31) < 0)
    std::string::__init_copy_ctor_external(&v111, *(const std::string::value_type **)(a7 + 8), *(_QWORD *)(a7 + 16));
  else
    v111 = *(std::string *)(a7 + 8);
  v112 = *(_DWORD *)(a7 + 32);
  v110 = &off_24C335AB8;
  v113 = *(_BYTE *)(a7 + 36);
  if (*(char *)(a7 + 63) < 0)
    std::string::__init_copy_ctor_external(&v114, *(const std::string::value_type **)(a7 + 40), *(_QWORD *)(a7 + 48));
  else
    v114 = *(std::string *)(a7 + 40);
  if (*(char *)(a8 + 31) < 0)
    std::string::__init_copy_ctor_external(&v106, *(const std::string::value_type **)(a8 + 8), *(_QWORD *)(a8 + 16));
  else
    v106 = *(std::string *)(a8 + 8);
  v24 = *(_DWORD *)(a8 + 32);
  v105 = off_24C335B18;
  v108 = *(_QWORD *)(a8 + 36);
  v25 = *(_DWORD *)(a8 + 44);
  v64 = v24;
  v107 = v24;
  v109 = v25;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v101, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v101 = *(std::string *)(a9 + 8);
  v26 = *(_DWORD *)(a9 + 32);
  v100 = off_24C335B18;
  v103 = *(_QWORD *)(a9 + 36);
  v27 = *(_DWORD *)(a9 + 44);
  v63 = v26;
  v102 = v26;
  v104 = v27;
  if (*(char *)(a10 + 31) < 0)
    std::string::__init_copy_ctor_external(&v97, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
  else
    v97 = *(std::string *)(a10 + 8);
  v62 = *(_DWORD *)(a10 + 32);
  v98 = v62;
  v96 = off_24C335AF8;
  v61 = *(_QWORD *)(a10 + 36);
  v99 = v61;
  v91 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a11 + 31) < 0)
    std::string::__init_copy_ctor_external(&v92, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
  else
    v92 = *(std::string *)(a11 + 8);
  v93 = *(_DWORD *)(a11 + 32);
  v91 = &off_24C335AB8;
  v94 = *(_BYTE *)(a11 + 36);
  if (*(char *)(a11 + 63) < 0)
    std::string::__init_copy_ctor_external(&v95, *(const std::string::value_type **)(a11 + 40), *(_QWORD *)(a11 + 48));
  else
    v95 = *(std::string *)(a11 + 40);
  v86 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&v87, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    v87 = *(std::string *)(a12 + 8);
  v88 = *(_DWORD *)(a12 + 32);
  v86 = &off_24C335AB8;
  v89 = *(_BYTE *)(a12 + 36);
  if (*(char *)(a12 + 63) < 0)
    std::string::__init_copy_ctor_external(&v90, *(const std::string::value_type **)(a12 + 40), *(_QWORD *)(a12 + 48));
  else
    v90 = *(std::string *)(a12 + 40);
  v81 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a13 + 31) < 0)
    std::string::__init_copy_ctor_external(&v82, *(const std::string::value_type **)(a13 + 8), *(_QWORD *)(a13 + 16));
  else
    v82 = *(std::string *)(a13 + 8);
  v83 = *(_DWORD *)(a13 + 32);
  v81 = &off_24C335AB8;
  v84 = *(_BYTE *)(a13 + 36);
  if (*(char *)(a13 + 63) < 0)
    std::string::__init_copy_ctor_external(&v85, *(const std::string::value_type **)(a13 + 40), *(_QWORD *)(a13 + 48));
  else
    v85 = *(std::string *)(a13 + 40);
  v76 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a14 + 31) < 0)
    std::string::__init_copy_ctor_external(&v77, *(const std::string::value_type **)(a14 + 8), *(_QWORD *)(a14 + 16));
  else
    v77 = *(std::string *)(a14 + 8);
  v78 = *(_DWORD *)(a14 + 32);
  v76 = &off_24C335AB8;
  v79 = *(_BYTE *)(a14 + 36);
  if (*(char *)(a14 + 63) < 0)
    std::string::__init_copy_ctor_external(&v80, *(const std::string::value_type **)(a14 + 40), *(_QWORD *)(a14 + 48));
  else
    v80 = *(std::string *)(a14 + 40);
  if (*(char *)(a15 + 31) < 0)
    std::string::__init_copy_ctor_external(&v73, *(const std::string::value_type **)(a15 + 8), *(_QWORD *)(a15 + 16));
  else
    v73 = *(std::string *)(a15 + 8);
  v60 = *(_DWORD *)(a15 + 32);
  v74 = v60;
  v72 = off_24C335AF8;
  v59 = *(_QWORD *)(a15 + 36);
  v75 = v59;
  if (*(char *)(a16 + 31) < 0)
    std::string::__init_copy_ctor_external(&v69, *(const std::string::value_type **)(a16 + 8), *(_QWORD *)(a16 + 16));
  else
    v69 = *(std::string *)(a16 + 8);
  v58 = *(_DWORD *)(a16 + 32);
  v70 = v58;
  v68 = off_24C335AF8;
  v57 = *(_QWORD *)(a16 + 36);
  v71 = v57;
  if (*(char *)(a17 + 31) < 0)
    std::string::__init_copy_ctor_external(&v65, *(const std::string::value_type **)(a17 + 8), *(_QWORD *)(a17 + 16));
  else
    v65 = *(std::string *)(a17 + 8);
  v56 = *(_DWORD *)(a17 + 32);
  v66 = v56;
  v55 = *(_QWORD *)(a17 + 36);
  v67 = v55;
  v196 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v197, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v197 = __s;
  v198 = v127;
  v196 = &off_24C335AB8;
  v199 = v128;
  if (SHIBYTE(v129.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v200, v129.__r_.__value_.__l.__data_, v129.__r_.__value_.__l.__size_);
  else
    v200 = v129;
  v191 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v121.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v192, v121.__r_.__value_.__l.__data_, v121.__r_.__value_.__l.__size_);
  else
    v192 = v121;
  v193 = v122;
  v191 = &off_24C335AB8;
  v194 = v123;
  if (SHIBYTE(v124.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v195, v124.__r_.__value_.__l.__data_, v124.__r_.__value_.__l.__size_);
  else
    v195 = v124;
  v186 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v116.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v187, v116.__r_.__value_.__l.__data_, v116.__r_.__value_.__l.__size_);
  else
    v187 = v116;
  v188 = v117;
  v186 = &off_24C335AB8;
  v189 = v118;
  if (SHIBYTE(v119.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v190, v119.__r_.__value_.__l.__data_, v119.__r_.__value_.__l.__size_);
  else
    v190 = v119;
  v181 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v111.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v182, v111.__r_.__value_.__l.__data_, v111.__r_.__value_.__l.__size_);
  else
    v182 = v111;
  v183 = v112;
  v181 = &off_24C335AB8;
  v184 = v113;
  if (SHIBYTE(v114.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v185, v114.__r_.__value_.__l.__data_, v114.__r_.__value_.__l.__size_);
  else
    v185 = v114;
  if (SHIBYTE(v106.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v177, v106.__r_.__value_.__l.__data_, v106.__r_.__value_.__l.__size_);
  else
    v177 = v106;
  v176 = off_24C335B18;
  v179 = v108;
  v178 = v64;
  v180 = v109;
  if (SHIBYTE(v101.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v172, v101.__r_.__value_.__l.__data_, v101.__r_.__value_.__l.__size_);
  else
    v172 = v101;
  v171 = off_24C335B18;
  v174 = v103;
  v173 = v63;
  v175 = v104;
  if (SHIBYTE(v97.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v168, v97.__r_.__value_.__l.__data_, v97.__r_.__value_.__l.__size_);
  else
    v168 = v97;
  v169 = v62;
  v167 = off_24C335AF8;
  v170 = v61;
  v162 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v92.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v163, v92.__r_.__value_.__l.__data_, v92.__r_.__value_.__l.__size_);
  else
    v163 = v92;
  v164 = v93;
  v162 = &off_24C335AB8;
  v165 = v94;
  if (SHIBYTE(v95.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v166, v95.__r_.__value_.__l.__data_, v95.__r_.__value_.__l.__size_);
  else
    v166 = v95;
  v157 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v87.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v158, v87.__r_.__value_.__l.__data_, v87.__r_.__value_.__l.__size_);
  else
    v158 = v87;
  v159 = v88;
  v157 = &off_24C335AB8;
  v160 = v89;
  if (SHIBYTE(v90.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v161, v90.__r_.__value_.__l.__data_, v90.__r_.__value_.__l.__size_);
  else
    v161 = v90;
  v152 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v153, v82.__r_.__value_.__l.__data_, v82.__r_.__value_.__l.__size_);
  else
    v153 = v82;
  v154 = v83;
  v152 = &off_24C335AB8;
  v155 = v84;
  if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v156, v85.__r_.__value_.__l.__data_, v85.__r_.__value_.__l.__size_);
  else
    v156 = v85;
  v147 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v148, v77.__r_.__value_.__l.__data_, v77.__r_.__value_.__l.__size_);
  else
    v148 = v77;
  v149 = v78;
  v147 = &off_24C335AB8;
  v150 = v79;
  if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v151, v80.__r_.__value_.__l.__data_, v80.__r_.__value_.__l.__size_);
  else
    v151 = v80;
  if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v144, v73.__r_.__value_.__l.__data_, v73.__r_.__value_.__l.__size_);
  else
    v144 = v73;
  v145 = v60;
  v143 = off_24C335AF8;
  v146 = v59;
  if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v140, v69.__r_.__value_.__l.__data_, v69.__r_.__value_.__l.__size_);
  else
    v140 = v69;
  v141 = v58;
  v139 = off_24C335AF8;
  v142 = v57;
  if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v136, v65.__r_.__value_.__l.__data_, v65.__r_.__value_.__l.__size_);
  else
    v136 = v65;
  v137 = v56;
  v135 = off_24C335AF8;
  v138 = v55;
  v257 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v258, v192.__r_.__value_.__l.__data_, v192.__r_.__value_.__l.__size_);
  else
    v258 = v192;
  v259 = v193;
  v257 = &off_24C335AB8;
  v260 = v194;
  if (SHIBYTE(v195.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v261, v195.__r_.__value_.__l.__data_, v195.__r_.__value_.__l.__size_);
  else
    v261 = v195;
  v252 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v187.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v253, v187.__r_.__value_.__l.__data_, v187.__r_.__value_.__l.__size_);
  else
    v253 = v187;
  v254 = v188;
  v252 = &off_24C335AB8;
  v255 = v189;
  if (SHIBYTE(v190.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v256, v190.__r_.__value_.__l.__data_, v190.__r_.__value_.__l.__size_);
  else
    v256 = v190;
  v247 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v182.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v248, v182.__r_.__value_.__l.__data_, v182.__r_.__value_.__l.__size_);
  else
    v248 = v182;
  v249 = v183;
  v247 = &off_24C335AB8;
  v250 = v184;
  if (SHIBYTE(v185.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v251, v185.__r_.__value_.__l.__data_, v185.__r_.__value_.__l.__size_);
  else
    v251 = v185;
  if (SHIBYTE(v177.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v243, v177.__r_.__value_.__l.__data_, v177.__r_.__value_.__l.__size_);
  else
    v243 = v177;
  v242 = off_24C335B18;
  v245 = v179;
  v244 = v64;
  v246 = v180;
  if (SHIBYTE(v172.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v238, v172.__r_.__value_.__l.__data_, v172.__r_.__value_.__l.__size_);
  else
    v238 = v172;
  v237 = off_24C335B18;
  v240 = v174;
  v239 = v63;
  v241 = v175;
  v53 = SHIBYTE(v168.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v168.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v234, v168.__r_.__value_.__l.__data_, v168.__r_.__value_.__l.__size_);
  else
    v234 = v168;
  v235 = v62;
  v233 = off_24C335AF8;
  v236 = v61;
  v228 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v163.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v229, v163.__r_.__value_.__l.__data_, v163.__r_.__value_.__l.__size_);
  else
    v229 = v163;
  v230 = v164;
  v228 = &off_24C335AB8;
  v231 = v165;
  if (SHIBYTE(v166.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v232, v166.__r_.__value_.__l.__data_, v166.__r_.__value_.__l.__size_);
  else
    v232 = v166;
  v223 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v158.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v224, v158.__r_.__value_.__l.__data_, v158.__r_.__value_.__l.__size_);
  else
    v224 = v158;
  v225 = v159;
  v223 = &off_24C335AB8;
  v226 = v160;
  if (SHIBYTE(v161.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v227, v161.__r_.__value_.__l.__data_, v161.__r_.__value_.__l.__size_);
  else
    v227 = v161;
  v218 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v153.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v219, v153.__r_.__value_.__l.__data_, v153.__r_.__value_.__l.__size_);
  else
    v219 = v153;
  v220 = v154;
  v218 = &off_24C335AB8;
  v221 = v155;
  if (SHIBYTE(v156.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v222, v156.__r_.__value_.__l.__data_, v156.__r_.__value_.__l.__size_);
  else
    v222 = v156;
  v213 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v148.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v214, v148.__r_.__value_.__l.__data_, v148.__r_.__value_.__l.__size_);
  else
    v214 = v148;
  v215 = v149;
  v213 = &off_24C335AB8;
  v216 = v150;
  if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v217, v151.__r_.__value_.__l.__data_, v151.__r_.__value_.__l.__size_);
  else
    v217 = v151;
  v52 = SHIBYTE(v144.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v144.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v210, v144.__r_.__value_.__l.__data_, v144.__r_.__value_.__l.__size_);
  else
    v210 = v144;
  v211 = v60;
  v209 = off_24C335AF8;
  v212 = v59;
  v51 = SHIBYTE(v140.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v206, v140.__r_.__value_.__l.__data_, v140.__r_.__value_.__l.__size_);
  else
    v206 = v140;
  v207 = v58;
  v205 = off_24C335AF8;
  v208 = v57;
  v50 = SHIBYTE(v136.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v136.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v202, v136.__r_.__value_.__l.__data_, v136.__r_.__value_.__l.__size_);
  else
    v202 = v136;
  v203 = v56;
  v201 = off_24C335AF8;
  v204 = v55;
  v313 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v253.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v314, v253.__r_.__value_.__l.__data_, v253.__r_.__value_.__l.__size_);
  else
    v314 = v253;
  v315 = v254;
  v313 = &off_24C335AB8;
  v316 = v255;
  if (SHIBYTE(v256.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v317, v256.__r_.__value_.__l.__data_, v256.__r_.__value_.__l.__size_);
  else
    v317 = v256;
  v308 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v248.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v309, v248.__r_.__value_.__l.__data_, v248.__r_.__value_.__l.__size_);
  else
    v309 = v248;
  v310 = v249;
  v308 = &off_24C335AB8;
  v311 = v250;
  if (SHIBYTE(v251.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v312, v251.__r_.__value_.__l.__data_, v251.__r_.__value_.__l.__size_);
  else
    v312 = v251;
  v303 = (uint64_t (**)())off_24C335D90;
  v28 = SHIBYTE(v243.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v243.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v304, v243.__r_.__value_.__l.__data_, v243.__r_.__value_.__l.__size_);
  else
    v304 = v243;
  v303 = off_24C335B18;
  v306 = v245;
  v305 = v64;
  v307 = v246;
  v298 = (uint64_t (**)())off_24C335D90;
  v49 = SHIBYTE(v238.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v299, v238.__r_.__value_.__l.__data_, v238.__r_.__value_.__l.__size_);
  else
    v299 = v238;
  v298 = off_24C335B18;
  v301 = v240;
  v300 = v63;
  v302 = v241;
  v294 = (uint64_t (**)())off_24C335D90;
  v47 = SHIBYTE(v234.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v234.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v295, v234.__r_.__value_.__l.__data_, v234.__r_.__value_.__l.__size_);
  else
    v295 = v234;
  v296 = v62;
  v294 = off_24C335AF8;
  v297 = v61;
  v289 = (uint64_t (**)())off_24C335D90;
  v46 = v28;
  if (SHIBYTE(v229.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v290, v229.__r_.__value_.__l.__data_, v229.__r_.__value_.__l.__size_);
  else
    v290 = v229;
  v291 = v230;
  v289 = &off_24C335AB8;
  v292 = v231;
  if (SHIBYTE(v232.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v293, v232.__r_.__value_.__l.__data_, v232.__r_.__value_.__l.__size_);
  else
    v293 = v232;
  v284 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v224.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v285, v224.__r_.__value_.__l.__data_, v224.__r_.__value_.__l.__size_);
  else
    v285 = v224;
  v286 = v225;
  v284 = &off_24C335AB8;
  v287 = v226;
  if (SHIBYTE(v227.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v288, v227.__r_.__value_.__l.__data_, v227.__r_.__value_.__l.__size_);
  else
    v288 = v227;
  v279 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v219.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v280, v219.__r_.__value_.__l.__data_, v219.__r_.__value_.__l.__size_);
  else
    v280 = v219;
  v281 = v220;
  v279 = &off_24C335AB8;
  v282 = v221;
  if (SHIBYTE(v222.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v283, v222.__r_.__value_.__l.__data_, v222.__r_.__value_.__l.__size_);
  else
    v283 = v222;
  v274 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v214.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v275, v214.__r_.__value_.__l.__data_, v214.__r_.__value_.__l.__size_);
  else
    v275 = v214;
  v276 = v215;
  v274 = &off_24C335AB8;
  v277 = v216;
  if (SHIBYTE(v217.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v278, v217.__r_.__value_.__l.__data_, v217.__r_.__value_.__l.__size_);
  else
    v278 = v217;
  v270 = (uint64_t (**)())off_24C335D90;
  v54 = SHIBYTE(v210.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v210.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v271, v210.__r_.__value_.__l.__data_, v210.__r_.__value_.__l.__size_);
  else
    v271 = v210;
  v272 = v60;
  v270 = off_24C335AF8;
  v273 = v59;
  v266 = (uint64_t (**)())off_24C335D90;
  v45 = SHIBYTE(v206.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v206.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v267, v206.__r_.__value_.__l.__data_, v206.__r_.__value_.__l.__size_);
  else
    v267 = v206;
  v268 = v58;
  v266 = off_24C335AF8;
  v269 = v57;
  v262 = (uint64_t (**)())off_24C335D90;
  v44 = SHIBYTE(v202.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v202.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v263, v202.__r_.__value_.__l.__data_, v202.__r_.__value_.__l.__size_);
  else
    v263 = v202;
  v264 = v56;
  v262 = off_24C335AF8;
  v265 = v55;
  v364 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v309.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v365, v309.__r_.__value_.__l.__data_, v309.__r_.__value_.__l.__size_);
  else
    v365 = v309;
  v366 = v310;
  v364 = &off_24C335AB8;
  v367 = v311;
  if (SHIBYTE(v312.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v368, v312.__r_.__value_.__l.__data_, v312.__r_.__value_.__l.__size_);
  else
    v368 = v312;
  v359 = (uint64_t (**)())off_24C335D90;
  v29 = SHIBYTE(v304.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v304.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v360, v304.__r_.__value_.__l.__data_, v304.__r_.__value_.__l.__size_);
  else
    v360 = v304;
  v359 = off_24C335B18;
  v362 = v306;
  v361 = v64;
  v363 = v307;
  v354 = (uint64_t (**)())off_24C335D90;
  v30 = SHIBYTE(v299.__r_.__value_.__r.__words[2]);
  v43 = v29;
  if (SHIBYTE(v299.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v355, v299.__r_.__value_.__l.__data_, v299.__r_.__value_.__l.__size_);
  else
    v355 = v299;
  v354 = off_24C335B18;
  v357 = v301;
  v356 = v63;
  v358 = v302;
  v350 = (uint64_t (**)())off_24C335D90;
  v31 = SHIBYTE(v295.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v295.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v351, v295.__r_.__value_.__l.__data_, v295.__r_.__value_.__l.__size_);
  else
    v351 = v295;
  v352 = v62;
  v350 = off_24C335AF8;
  v353 = v61;
  v345 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v290.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v346, v290.__r_.__value_.__l.__data_, v290.__r_.__value_.__l.__size_);
  else
    v346 = v290;
  v347 = v291;
  v345 = &off_24C335AB8;
  v348 = v292;
  if (SHIBYTE(v293.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v349, v293.__r_.__value_.__l.__data_, v293.__r_.__value_.__l.__size_);
  else
    v349 = v293;
  v340 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v285.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v341, v285.__r_.__value_.__l.__data_, v285.__r_.__value_.__l.__size_);
  else
    v341 = v285;
  v342 = v286;
  v340 = &off_24C335AB8;
  v343 = v287;
  if (SHIBYTE(v288.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v344, v288.__r_.__value_.__l.__data_, v288.__r_.__value_.__l.__size_);
  else
    v344 = v288;
  v335 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v280.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v336, v280.__r_.__value_.__l.__data_, v280.__r_.__value_.__l.__size_);
  else
    v336 = v280;
  v337 = v281;
  v335 = &off_24C335AB8;
  v338 = v282;
  if (SHIBYTE(v283.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v339, v283.__r_.__value_.__l.__data_, v283.__r_.__value_.__l.__size_);
  else
    v339 = v283;
  v330 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v275.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v331, v275.__r_.__value_.__l.__data_, v275.__r_.__value_.__l.__size_);
  else
    v331 = v275;
  v332 = v276;
  v330 = &off_24C335AB8;
  v333 = v277;
  if (SHIBYTE(v278.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v334, v278.__r_.__value_.__l.__data_, v278.__r_.__value_.__l.__size_);
  else
    v334 = v278;
  v326 = (uint64_t (**)())off_24C335D90;
  v32 = SHIBYTE(v271.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v271.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v327, v271.__r_.__value_.__l.__data_, v271.__r_.__value_.__l.__size_);
  else
    v327 = v271;
  v328 = v60;
  v326 = off_24C335AF8;
  v329 = v59;
  v322 = (uint64_t (**)())off_24C335D90;
  v33 = SHIBYTE(v267.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v267.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v323, v267.__r_.__value_.__l.__data_, v267.__r_.__value_.__l.__size_);
  else
    v323 = v267;
  v324 = v58;
  v322 = off_24C335AF8;
  v325 = v57;
  v318 = (uint64_t (**)())off_24C335D90;
  v34 = SHIBYTE(v263.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v263.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v263.__r_.__value_.__l.__data_, v263.__r_.__value_.__l.__size_);
  else
    __p = v263;
  v320 = v56;
  v318 = off_24C335AF8;
  v321 = v55;
  mediaplatform::DatabaseColumnTuple<23ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::DatabaseColumnTuple(a1, (uint64_t)&v364, (uint64_t)&v359, (uint64_t)&v354, (uint64_t)&v350, (uint64_t)&v345, (uint64_t)&v340, (uint64_t)&v335, (uint64_t)&v330, (uint64_t)&v326, (uint64_t)&v322, (uint64_t)&v318);
  v318 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v322 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v323.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v323.__r_.__value_.__l.__data_);
  v326 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v327.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v327.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v330);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v335);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v340);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v345);
  v350 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v351.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v351.__r_.__value_.__l.__data_);
  v354 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v355.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v355.__r_.__value_.__l.__data_);
  v359 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v360.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v360.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v364);
  *(_QWORD *)(a1 + 608) = off_24C335D90;
  if (SHIBYTE(v314.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)(a1 + 616), v314.__r_.__value_.__l.__data_, v314.__r_.__value_.__l.__size_);
  else
    *(std::string *)(a1 + 616) = v314;
  *(_DWORD *)(a1 + 640) = v315;
  *(_QWORD *)(a1 + 608) = &off_24C335AB8;
  *(_BYTE *)(a1 + 644) = v316;
  v35 = (std::string *)(a1 + 648);
  if (SHIBYTE(v317.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v35, v317.__r_.__value_.__l.__data_, v317.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v35->__r_.__value_.__l.__data_ = *(_OWORD *)&v317.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 664) = *((_QWORD *)&v317.__r_.__value_.__l + 2);
  }
  v262 = (uint64_t (**)())off_24C335D90;
  if (v34 < 0)
    operator delete(v263.__r_.__value_.__l.__data_);
  v266 = (uint64_t (**)())off_24C335D90;
  if (v33 < 0)
    operator delete(v267.__r_.__value_.__l.__data_);
  v270 = (uint64_t (**)())off_24C335D90;
  if (v32 < 0)
    operator delete(v271.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v274);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v279);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v284);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v289);
  v294 = (uint64_t (**)())off_24C335D90;
  if (v31 < 0)
    operator delete(v295.__r_.__value_.__l.__data_);
  v298 = (uint64_t (**)())off_24C335D90;
  if (v30 < 0)
    operator delete(v299.__r_.__value_.__l.__data_);
  v303 = (uint64_t (**)())off_24C335D90;
  if (v43 < 0)
    operator delete(v304.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v308);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v313);
  *(_QWORD *)(a1 + 672) = off_24C335D90;
  if (SHIBYTE(v258.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)(a1 + 680), v258.__r_.__value_.__l.__data_, v258.__r_.__value_.__l.__size_);
  else
    *(std::string *)(a1 + 680) = v258;
  *(_DWORD *)(a1 + 704) = v259;
  *(_QWORD *)(a1 + 672) = &off_24C335AB8;
  *(_BYTE *)(a1 + 708) = v260;
  v36 = (std::string *)(a1 + 712);
  if (SHIBYTE(v261.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v36, v261.__r_.__value_.__l.__data_, v261.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v36->__r_.__value_.__l.__data_ = *(_OWORD *)&v261.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 728) = *((_QWORD *)&v261.__r_.__value_.__l + 2);
  }
  v201 = (uint64_t (**)())off_24C335D90;
  if (v44 < 0)
    operator delete(v202.__r_.__value_.__l.__data_);
  v205 = (uint64_t (**)())off_24C335D90;
  if (v45 < 0)
    operator delete(v206.__r_.__value_.__l.__data_);
  v209 = (uint64_t (**)())off_24C335D90;
  if (v54 < 0)
    operator delete(v210.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v213);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v218);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v223);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v228);
  v233 = (uint64_t (**)())off_24C335D90;
  if (v47 < 0)
    operator delete(v234.__r_.__value_.__l.__data_);
  v237 = (uint64_t (**)())off_24C335D90;
  if (v49 < 0)
    operator delete(v238.__r_.__value_.__l.__data_);
  v242 = (uint64_t (**)())off_24C335D90;
  if (v46 < 0)
    operator delete(v243.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v247);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v252);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v257);
  *(_QWORD *)(a1 + 736) = off_24C335D90;
  if (SHIBYTE(v197.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)(a1 + 744), v197.__r_.__value_.__l.__data_, v197.__r_.__value_.__l.__size_);
  else
    *(std::string *)(a1 + 744) = v197;
  *(_DWORD *)(a1 + 768) = v198;
  *(_QWORD *)(a1 + 736) = &off_24C335AB8;
  *(_BYTE *)(a1 + 772) = v199;
  v37 = (std::string *)(a1 + 776);
  if (SHIBYTE(v200.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v37, v200.__r_.__value_.__l.__data_, v200.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v37->__r_.__value_.__l.__data_ = *(_OWORD *)&v200.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 792) = *((_QWORD *)&v200.__r_.__value_.__l + 2);
  }
  v135 = (uint64_t (**)())off_24C335D90;
  if (v50 < 0)
    operator delete(v136.__r_.__value_.__l.__data_);
  v139 = (uint64_t (**)())off_24C335D90;
  if (v51 < 0)
    operator delete(v140.__r_.__value_.__l.__data_);
  v143 = (uint64_t (**)())off_24C335D90;
  if (v52 < 0)
    operator delete(v144.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v147);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v152);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v157);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v162);
  v167 = (uint64_t (**)())off_24C335D90;
  if (v53 < 0)
    operator delete(v168.__r_.__value_.__l.__data_);
  v171 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v172.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v172.__r_.__value_.__l.__data_);
  v176 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v177.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v177.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v181);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v186);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v191);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v196);
  *(_QWORD *)(a1 + 800) = off_24C335D90;
  if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)(a1 + 808), v131.__r_.__value_.__l.__data_, v131.__r_.__value_.__l.__size_);
  else
    *(std::string *)(a1 + 808) = v131;
  *(_DWORD *)(a1 + 832) = v132;
  *(_QWORD *)(a1 + 800) = &off_24C335AB8;
  *(_BYTE *)(a1 + 836) = v133;
  v38 = (std::string *)(a1 + 840);
  if (SHIBYTE(v134.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v38, v134.__r_.__value_.__l.__data_, v134.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v38->__r_.__value_.__l.__data_ = *(_OWORD *)&v134.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 856) = *((_QWORD *)&v134.__r_.__value_.__l + 2);
  }
  if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v65.__r_.__value_.__l.__data_);
  if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v69.__r_.__value_.__l.__data_);
  if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v73.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v76);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v81);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v86);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v91);
  if (SHIBYTE(v97.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v97.__r_.__value_.__l.__data_);
  if (SHIBYTE(v101.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v101.__r_.__value_.__l.__data_);
  if (SHIBYTE(v106.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v106.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v110);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v115);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v120);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v125);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v130);
  *(_QWORD *)(a1 + 864) = off_24C335D90;
  if (*(char *)(a2 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(a1 + 872), *(const std::string::value_type **)(a2 + 8), *(_QWORD *)(a2 + 16));
  }
  else
  {
    v39 = *(_OWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 888) = *(_QWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 872) = v39;
  }
  *(_DWORD *)(a1 + 896) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 864) = &off_24C335AB8;
  *(_BYTE *)(a1 + 900) = *(_BYTE *)(a2 + 36);
  v40 = (std::string *)(a1 + 904);
  if (*(char *)(a2 + 63) < 0)
  {
    std::string::__init_copy_ctor_external(v40, *(const std::string::value_type **)(a2 + 40), *(_QWORD *)(a2 + 48));
  }
  else
  {
    v41 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 920) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)&v40->__r_.__value_.__l.__data_ = v41;
  }
  return a1;
}

void sub_20A8DD598(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 864) = v3;
  if (*(char *)(v1 + 895) < 0)
    operator delete(*v2);
  mediaplatform::DatabaseColumnTuple<19ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(v1);
  _Unwind_Resume(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<19ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 800);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 736);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 672);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 608);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 544);
  *(_QWORD *)(a1 + 496) = off_24C335D90;
  if (*(char *)(a1 + 527) < 0)
    operator delete(*(void **)(a1 + 504));
  *(_QWORD *)(a1 + 448) = off_24C335D90;
  if (*(char *)(a1 + 479) < 0)
    operator delete(*(void **)(a1 + 456));
  return mediaplatform::DatabaseColumnTuple<26ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<20ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 736);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 672);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 608);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 544);
  *(_QWORD *)(a1 + 496) = off_24C335D90;
  if (*(char *)(a1 + 527) < 0)
    operator delete(*(void **)(a1 + 504));
  *(_QWORD *)(a1 + 448) = off_24C335D90;
  if (*(char *)(a1 + 479) < 0)
    operator delete(*(void **)(a1 + 456));
  return mediaplatform::DatabaseColumnTuple<26ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<21ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 672);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 608);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 544);
  *(_QWORD *)(a1 + 496) = off_24C335D90;
  if (*(char *)(a1 + 527) < 0)
    operator delete(*(void **)(a1 + 504));
  *(_QWORD *)(a1 + 448) = off_24C335D90;
  if (*(char *)(a1 + 479) < 0)
    operator delete(*(void **)(a1 + 456));
  return mediaplatform::DatabaseColumnTuple<26ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<22ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 608);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 544);
  *(_QWORD *)(a1 + 496) = off_24C335D90;
  if (*(char *)(a1 + 527) < 0)
    operator delete(*(void **)(a1 + 504));
  *(_QWORD *)(a1 + 448) = off_24C335D90;
  if (*(char *)(a1 + 479) < 0)
    operator delete(*(void **)(a1 + 456));
  return mediaplatform::DatabaseColumnTuple<26ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<23ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 544);
  *(_QWORD *)(a1 + 496) = off_24C335D90;
  if (*(char *)(a1 + 527) < 0)
    operator delete(*(void **)(a1 + 504));
  *(_QWORD *)(a1 + 448) = off_24C335D90;
  if (*(char *)(a1 + 479) < 0)
    operator delete(*(void **)(a1 + 456));
  return mediaplatform::DatabaseColumnTuple<26ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<24ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 496) = off_24C335D90;
  if (*(char *)(a1 + 527) < 0)
    operator delete(*(void **)(a1 + 504));
  *(_QWORD *)(a1 + 448) = off_24C335D90;
  if (*(char *)(a1 + 479) < 0)
    operator delete(*(void **)(a1 + 456));
  return mediaplatform::DatabaseColumnTuple<26ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<25ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 448) = off_24C335D90;
  if (*(char *)(a1 + 479) < 0)
    operator delete(*(void **)(a1 + 456));
  return mediaplatform::DatabaseColumnTuple<26ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<27ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 336);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 272);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 208);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 144);
  *(_QWORD *)(a1 + 96) = off_24C335D90;
  if (*(char *)(a1 + 127) < 0)
    operator delete(*(void **)(a1 + 104));
  *(_QWORD *)(a1 + 48) = off_24C335D90;
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  *(_QWORD *)a1 = off_24C335D90;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t mediaplatform::DatabaseColumnTuple<28ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 272);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 208);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 144);
  *(_QWORD *)(a1 + 96) = off_24C335D90;
  if (*(char *)(a1 + 127) < 0)
    operator delete(*(void **)(a1 + 104));
  *(_QWORD *)(a1 + 48) = off_24C335D90;
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  *(_QWORD *)a1 = off_24C335D90;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void mlcore::ItemExtraTable::persistentIDColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 1983) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 245), *((_QWORD *)this + 246));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1960);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 247);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 496);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 499);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 1988);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemExtraTable::titleColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 2031) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 251), *((_QWORD *)this + 252));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2008);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 253);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 508);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 2036);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 2063) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 255), *((_QWORD *)this + 256));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2040);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 257);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8DE458(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemExtraTable::sortTitleColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 2095) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 259), *((_QWORD *)this + 260));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2072);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 261);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 524);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 2100);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 2127) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 263), *((_QWORD *)this + 264));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2104);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 265);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8DE538(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemExtraTable::discCountColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 2159) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 267), *((_QWORD *)this + 268));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2136);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 269);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 540);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 2164);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemExtraTable::trackCountColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 2207) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 273), *((_QWORD *)this + 274));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2184);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 275);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 552);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 2212);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemExtraTable::totalTimeColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 2255) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 279), *((_QWORD *)this + 280));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2232);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 281);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 564);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 567);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 2260);
  *(_QWORD *)a2 = off_24C336A80;
}

void mlcore::ItemExtraTable::yearColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 2303) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 285), *((_QWORD *)this + 286));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2280);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 287);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 576);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 2308);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemExtraTable::locationColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 2351) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 291), *((_QWORD *)this + 292));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2328);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 293);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 588);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 2356);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 2383) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 295), *((_QWORD *)this + 296));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2360);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 297);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8DE810(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemExtraTable::fileSizeColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 2415) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 299), *((_QWORD *)this + 300));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2392);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 301);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 604);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 607);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 2420);
  *(_QWORD *)a2 = off_24C336AC0;
}

mediaplatform::Data *mlcore::ItemExtraTable::integrityColumn@<X0>(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  mediaplatform::Data *result;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 2463) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 305), *((_QWORD *)this + 306));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2440);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 307);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 616);
  *(_QWORD *)a2 = &off_24C335A98;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 2468);
  result = mediaplatform::Data::Data((mediaplatform::Data *)(a2 + 40), (mlcore::ItemExtraTable *)((char *)this + 2472));
  *(_QWORD *)a2 = &off_24C336A40;
  return result;
}

void sub_20A8DE950(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemExtraTable::isAudibleAudioBookColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 2543) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 315), *((_QWORD *)this + 316));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2520);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 317);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 636);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 2548);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemExtraTable::dateModifiedColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 2591) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 321), *((_QWORD *)this + 322));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2568);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 323);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 648);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 651);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 2596);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemExtraTable::mediaKindColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 2639) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 327), *((_QWORD *)this + 328));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2616);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 329);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 660);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 2644);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemExtraTable::contentRatingColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 2687) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 333), *((_QWORD *)this + 334));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2664);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 335);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 672);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 2692);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemExtraTable::contentRatingLevelColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 2735) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 339), *((_QWORD *)this + 340));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2712);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 341);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 684);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 2740);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemExtraTable::isUserDisabledColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 2783) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 345), *((_QWORD *)this + 346));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2760);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 347);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 696);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 2788);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemExtraTable::BPMColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 2831) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 351), *((_QWORD *)this + 352));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2808);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 353);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 708);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 2836);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemExtraTable::geniusPersistentIDColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 2879) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 357), *((_QWORD *)this + 358));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2856);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 359);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 720);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 723);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 2884);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemExtraTable::commentColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 2927) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 363), *((_QWORD *)this + 364));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2904);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 365);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 732);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 2932);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 2959) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 367), *((_QWORD *)this + 368));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2936);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 369);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8DEE20(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemExtraTable::groupingColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 2991) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 371), *((_QWORD *)this + 372));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2968);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 373);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 748);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 2996);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 3023) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 375), *((_QWORD *)this + 376));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3000);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 377);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8DEF00(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemExtraTable::descriptionColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3055) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 379), *((_QWORD *)this + 380));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3032);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 381);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 764);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 3060);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 3087) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 383), *((_QWORD *)this + 384));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3064);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 385);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8DEFE0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemExtraTable::descriptionLongColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3119) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 387), *((_QWORD *)this + 388));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3096);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 389);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 780);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 3124);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 3151) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 391), *((_QWORD *)this + 392));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3128);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 393);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8DF0C0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemExtraTable::collectionDescriptionColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3183) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 395), *((_QWORD *)this + 396));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3160);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 397);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 796);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 3188);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 3215) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 399), *((_QWORD *)this + 400));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3192);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 401);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8DF1A0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemExtraTable::copyrightColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3247) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 403), *((_QWORD *)this + 404));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3224);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 405);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 812);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 3252);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 3279) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 407), *((_QWORD *)this + 408));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3256);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 409);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8DF280(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemExtraTable::pendingGeniusChecksumColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3311) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 411), *((_QWORD *)this + 412));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3288);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 413);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 828);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 831);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3316);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemExtraTable::categoryIDColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3359) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 417), *((_QWORD *)this + 418));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3336);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 419);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 840);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 843);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3364);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemExtraTable::locationKindIDColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3407) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 423), *((_QWORD *)this + 424));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3384);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 425);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 852);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3412);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemExtraTable::versionColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3455) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 429), *((_QWORD *)this + 430));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3432);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 431);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 864);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 3460);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 3487) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 433), *((_QWORD *)this + 434));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3464);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 435);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8DF4E4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemExtraTable::displayVersionColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3519) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 437), *((_QWORD *)this + 438));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3496);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 439);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 880);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 3524);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 3551) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 441), *((_QWORD *)this + 442));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3528);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 443);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8DF5C4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemExtraTable::classicalWorkColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3583) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 445), *((_QWORD *)this + 446));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3560);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 447);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 896);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 3588);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 3615) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 449), *((_QWORD *)this + 450));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3592);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 451);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8DF6A4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemExtraTable::classicalMovementColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3647) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 453), *((_QWORD *)this + 454));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3624);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 455);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 912);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 3652);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 3679) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 457), *((_QWORD *)this + 458));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3656);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 459);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8DF784(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemExtraTable::classicalMovementCountColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3711) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 461), *((_QWORD *)this + 462));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3688);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 463);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 928);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3716);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemExtraTable::classicalMovementNumberColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3759) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 467), *((_QWORD *)this + 468));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3736);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 469);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 940);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3764);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemExtraTable::isPreorderColumn(mlcore::ItemExtraTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 3807) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 473), *((_QWORD *)this + 474));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 3784);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 475);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 952);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 3812);
  *(_QWORD *)a2 = off_24C336AA0;
}

uint64_t mediaplatform::DatabaseColumnBase::DatabaseColumnBase(uint64_t a1, __int128 *a2, int a3)
{
  std::string *v5;
  __int128 v6;

  *(_QWORD *)a1 = off_24C335D90;
  v5 = (std::string *)(a1 + 8);
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v6 = *a2;
    v5->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  *(_DWORD *)(a1 + 32) = a3;
  return a1;
}

{
  std::string *v5;
  __int128 v6;

  *(_QWORD *)a1 = off_24C335D90;
  v5 = (std::string *)(a1 + 8);
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v6 = *a2;
    v5->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  *(_DWORD *)(a1 + 32) = a3;
  return a1;
}

void mediaplatform::DatabaseColumnBase::name(mediaplatform::DatabaseColumnBase *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 31) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 1), *((_QWORD *)this + 2));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 8);
    a2->__r_.__value_.__r.__words[2] = *((_QWORD *)this + 3);
  }
}

uint64_t mediaplatform::DatabaseColumnBase::constraints(mediaplatform::DatabaseColumnBase *this)
{
  return *((unsigned int *)this + 8);
}

void mlcore::NullPredicate<long long>::~NullPredicate()
{
  JUMPOUT(0x20BD27AFCLL);
}

void mlcore::NullPredicateBase::description(mlcore::NullPredicateBase *this@<X0>, std::string *a2@<X8>)
{
  const std::string::value_type *v4;
  std::string *v5;
  std::string v6;

  (*(void (**)(std::string *__return_ptr))(**((_QWORD **)this + 1) + 40))(&v6);
  if (*((_BYTE *)this + 16))
    v4 = " is null";
  else
    v4 = " is not null";
  v5 = std::string::append(&v6, v4);
  *a2 = *v5;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v6.__r_.__value_.__l.__data_);
}

void sub_20A8DFAA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL mlcore::NullPredicate<long long>::matches(uint64_t a1, uint64_t a2)
{
  return mlcore::PropertyCache::hasValueForProperty((_QWORD *)(*(_QWORD *)a2 + 8), *(_QWORD *)(a1 + 8));
}

void std::__shared_ptr_emplace<mediaplatform::SQLNullExpression>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33BDE8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mediaplatform::SQLNullExpression>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33BDE8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD27AFCLL);
}

void mlcore::NullPredicate<std::string>::~NullPredicate()
{
  JUMPOUT(0x20BD27AFCLL);
}

BOOL mlcore::NullPredicate<std::string>::matches(uint64_t a1, uint64_t a2)
{
  return mlcore::PropertyCache::hasValueForProperty((_QWORD *)(*(_QWORD *)a2 + 8), *(_QWORD *)(a1 + 8));
}

void mlcore::NullPredicate<double>::~NullPredicate()
{
  JUMPOUT(0x20BD27AFCLL);
}

BOOL mlcore::NullPredicate<double>::matches(uint64_t a1, uint64_t a2)
{
  return mlcore::PropertyCache::hasValueForProperty((_QWORD *)(*(_QWORD *)a2 + 8), *(_QWORD *)(a1 + 8));
}

void mlcore::NullPredicate<int>::~NullPredicate()
{
  JUMPOUT(0x20BD27AFCLL);
}

BOOL mlcore::NullPredicate<int>::matches(uint64_t a1, uint64_t a2)
{
  return mlcore::PropertyCache::hasValueForProperty((_QWORD *)(*(_QWORD *)a2 + 8), *(_QWORD *)(a1 + 8));
}

void mlcore::NullPredicate<mediaplatform::Data>::~NullPredicate()
{
  JUMPOUT(0x20BD27AFCLL);
}

BOOL mlcore::NullPredicate<mediaplatform::Data>::matches(uint64_t a1, uint64_t a2)
{
  return mlcore::PropertyCache::hasValueForProperty((_QWORD *)(*(_QWORD *)a2 + 8), *(_QWORD *)(a1 + 8));
}

uint64_t mlcore::NullPredicate<long long>::NullPredicate(uint64_t result, uint64_t a2, char a3)
{
  *(_BYTE *)(result + 16) = a3;
  *(_QWORD *)result = &unk_24C337168;
  *(_QWORD *)(result + 8) = a2;
  return result;
}

{
  *(_BYTE *)(result + 16) = a3;
  *(_QWORD *)result = &unk_24C337168;
  *(_QWORD *)(result + 8) = a2;
  return result;
}

uint64_t mlcore::NullPredicateBase::NullPredicateBase(uint64_t this, mlcore::ModelPropertyBase *a2, char a3)
{
  *(_QWORD *)this = off_24C339860;
  *(_QWORD *)(this + 8) = a2;
  *(_BYTE *)(this + 16) = a3;
  return this;
}

uint64_t mlcore::NullPredicate<long long>::property(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t mlcore::NullPredicate<std::string>::NullPredicate(uint64_t result, uint64_t a2, char a3)
{
  *(_BYTE *)(result + 16) = a3;
  *(_QWORD *)result = &unk_24C337060;
  *(_QWORD *)(result + 8) = a2;
  return result;
}

{
  *(_BYTE *)(result + 16) = a3;
  *(_QWORD *)result = &unk_24C337060;
  *(_QWORD *)(result + 8) = a2;
  return result;
}

uint64_t mlcore::NullPredicate<std::string>::property(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t mlcore::NullPredicate<double>::NullPredicate(uint64_t result, uint64_t a2, char a3)
{
  *(_BYTE *)(result + 16) = a3;
  *(_QWORD *)result = &unk_24C3370B8;
  *(_QWORD *)(result + 8) = a2;
  return result;
}

{
  *(_BYTE *)(result + 16) = a3;
  *(_QWORD *)result = &unk_24C3370B8;
  *(_QWORD *)(result + 8) = a2;
  return result;
}

uint64_t mlcore::NullPredicate<double>::property(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t mlcore::NullPredicate<int>::NullPredicate(uint64_t result, uint64_t a2, char a3)
{
  *(_BYTE *)(result + 16) = a3;
  *(_QWORD *)result = &unk_24C337110;
  *(_QWORD *)(result + 8) = a2;
  return result;
}

{
  *(_BYTE *)(result + 16) = a3;
  *(_QWORD *)result = &unk_24C337110;
  *(_QWORD *)(result + 8) = a2;
  return result;
}

uint64_t mlcore::NullPredicate<int>::property(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t mlcore::NullPredicate<mediaplatform::Data>::NullPredicate(uint64_t result, uint64_t a2, char a3)
{
  *(_BYTE *)(result + 16) = a3;
  *(_QWORD *)result = &unk_24C337008;
  *(_QWORD *)(result + 8) = a2;
  return result;
}

{
  *(_BYTE *)(result + 16) = a3;
  *(_QWORD *)result = &unk_24C337008;
  *(_QWORD *)(result + 8) = a2;
  return result;
}

uint64_t mlcore::NullPredicate<mediaplatform::Data>::property(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t mlcore::NullPredicateBase::property(mlcore::NullPredicateBase *this)
{
  return *((_QWORD *)this + 1);
}

uint64_t mlcore::NullPredicateBase::isNull(mlcore::NullPredicateBase *this)
{
  return *((unsigned __int8 *)this + 16);
}

_QWORD *mediaplatform::DatabaseContext::DatabaseContext(_QWORD *this, void *a2)
{
  *this = a2;
  return this;
}

{
  *this = a2;
  return this;
}

void mediaplatform::DatabaseContext::setResult<int>(sqlite3_context **a1, int *a2)
{
  sqlite3_result_int(*a1, *a2);
}

void mediaplatform::DatabaseContext::setResult<long long>(sqlite3_context **a1, sqlite3_int64 *a2)
{
  sqlite3_result_int64(*a1, *a2);
}

void mediaplatform::DatabaseContext::setResult<double>(sqlite3_context **a1, double *a2)
{
  sqlite3_result_double(*a1, *a2);
}

void mediaplatform::DatabaseContext::setResult<std::string>(sqlite3_context **a1, const void **a2)
{
  size_t v4;
  char *v5;
  const char *v6;
  int v7;
  const void *v8;
  size_t v9;
  int v10;

  if (*((char *)a2 + 23) >= 0)
    v4 = *((unsigned __int8 *)a2 + 23);
  else
    v4 = (size_t)a2[1];
  v5 = (char *)malloc_type_malloc(v4, 0x8BAD7484uLL);
  v6 = v5;
  v7 = *((char *)a2 + 23);
  if (v7 >= 0)
    v8 = a2;
  else
    v8 = *a2;
  if (v7 >= 0)
    v9 = *((unsigned __int8 *)a2 + 23);
  else
    v9 = (size_t)a2[1];
  memcpy(v5, v8, v9);
  if (*((char *)a2 + 23) >= 0)
    v10 = *((unsigned __int8 *)a2 + 23);
  else
    v10 = *((_DWORD *)a2 + 2);
  sqlite3_result_text(*a1, v6, v10, (void (__cdecl *)(void *))MEMORY[0x24BDAE450]);
}

void mediaplatform::DatabaseContext::setResult<std::wstring>(sqlite3_context **a1, const void **a2)
{
  unint64_t v4;
  void *v5;
  const void *v6;
  int v7;
  const void *v8;
  size_t v9;
  int v10;

  v4 = *((unsigned __int8 *)a2 + 23);
  if ((v4 & 0x80u) != 0)
    v4 = (unint64_t)a2[1];
  v5 = malloc_type_malloc(4 * v4, 0x100004052888210uLL);
  v6 = v5;
  v7 = *((char *)a2 + 23);
  if (v7 >= 0)
    v8 = a2;
  else
    v8 = *a2;
  if (v7 >= 0)
    v9 = *((unsigned __int8 *)a2 + 23);
  else
    v9 = (size_t)a2[1];
  memcpy(v5, v8, v9);
  if (*((char *)a2 + 23) >= 0)
    v10 = *((unsigned __int8 *)a2 + 23);
  else
    v10 = *((_DWORD *)a2 + 2);
  sqlite3_result_text16(*a1, v6, v10, (void (__cdecl *)(void *))MEMORY[0x24BDAE450]);
}

void mediaplatform::DatabaseContext::setResult<mediaplatform::Data>(sqlite3_context **a1, uint64_t a2)
{
  void *v4;

  v4 = malloc_type_malloc(*(_QWORD *)(a2 + 8), 0xF9633991uLL);
  memcpy(v4, *(const void **)(a2 + 24), *(_QWORD *)(a2 + 8));
  sqlite3_result_blob(*a1, v4, *(_DWORD *)(a2 + 8), (void (__cdecl *)(void *))MEMORY[0x24BDAE450]);
}

void mediaplatform::DatabaseContext::setResult<mediaplatform::DatabaseValue>(sqlite3_context **a1, sqlite3_value **a2)
{
  sqlite3_result_value(*a1, *a2);
}

void mediaplatform::DatabaseContext::setResultNull(sqlite3_context **this)
{
  sqlite3_result_null(*this);
}

void mediaplatform::DatabaseContext::setResultError(sqlite3_context **a1, uint64_t *a2)
{
  sqlite3_context *v2;
  int v3;
  int v4;
  int v5;

  v2 = *a1;
  v3 = *((char *)a2 + 23);
  v4 = *((_DWORD *)a2 + 2);
  if (v3 >= 0)
  {
    v5 = v3;
  }
  else
  {
    a2 = (uint64_t *)*a2;
    v5 = v4;
  }
  sqlite3_result_error(v2, (const char *)a2, v5);
}

void *mediaplatform::DatabaseContext::auxilaryPointer(sqlite3_context **this, int a2)
{
  return sqlite3_get_auxdata(*this, a2);
}

void mediaplatform::DatabaseContext::setAuxilaryPointer(sqlite3_context **this, int a2, void *a3, void (__cdecl *a4)(void *))
{
  sqlite3_set_auxdata(*this, a2, a3, a4);
}

std::string *mediaplatform::DatabaseFunction::DatabaseFunction(std::string *this, __int128 *a2, std::string::size_type a3, uint64_t a4, int a5)
{
  __int128 v9;

  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v9 = *a2;
    this->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v9;
  }
  this[1].__r_.__value_.__r.__words[0] = a3;
  std::__function::__value_func<void ()(void)>::__value_func[abi:ne180100]((uint64_t)&this[1].__r_.__value_.__l.__size_, a4);
  LODWORD(this[2].__r_.__value_.__r.__words[2]) = a5;
  return this;
}

void sub_20A8DFF78(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void mediaplatform::DatabaseFunction::~DatabaseFunction(mediaplatform::DatabaseFunction *this)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = (char *)this + 32;
  v3 = (char *)*((_QWORD *)this + 7);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
LABEL_6:
  if (*((char *)this + 23) < 0)
    operator delete(*(void **)this);
}

uint64_t mediaplatform::DatabaseFunction::argumentsCount(mediaplatform::DatabaseFunction *this)
{
  return *((_QWORD *)this + 3);
}

uint64_t mediaplatform::DatabaseFunction::flags(mediaplatform::DatabaseFunction *this)
{
  return *((unsigned int *)this + 16);
}

uint64_t mediaplatform::DatabaseFunction::callback(mediaplatform::DatabaseFunction *this)
{
  return (uint64_t)this + 32;
}

_QWORD *mediaplatform::DatabaseFunction::setCallback(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;
  _QWORD v8[3];
  _QWORD *v9;
  _QWORD v10[4];

  v10[3] = *MEMORY[0x24BDAC8D0];
  std::__function::__value_func<void ()(void)>::__value_func[abi:ne180100]((uint64_t)v8, a2);
  v3 = a1 + 32;
  if ((_QWORD *)(a1 + 32) != v8)
  {
    v4 = v9;
    v5 = *(_QWORD *)(a1 + 56);
    if (v9 == v8)
    {
      if (v5 == v3)
      {
        (*(void (**)(_QWORD *, _QWORD *))(v8[0] + 24))(v8, v10);
        (*(void (**)(_QWORD *))(*v9 + 32))(v9);
        v9 = 0;
        (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(a1 + 56) + 24))(*(_QWORD *)(a1 + 56), v8);
        (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 56) + 32))(*(_QWORD *)(a1 + 56));
        *(_QWORD *)(a1 + 56) = 0;
        v9 = v8;
        (*(void (**)(_QWORD *, uint64_t))(v10[0] + 24))(v10, a1 + 32);
        (*(void (**)(_QWORD *))(v10[0] + 32))(v10);
      }
      else
      {
        (*(void (**)(_QWORD *, uint64_t))(v8[0] + 24))(v8, a1 + 32);
        (*(void (**)(_QWORD *))(*v9 + 32))(v9);
        v9 = *(_QWORD **)(a1 + 56);
      }
      *(_QWORD *)(a1 + 56) = v3;
    }
    else if (v5 == v3)
    {
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v3 + 24))(a1 + 32, v8);
      (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 56) + 32))(*(_QWORD *)(a1 + 56));
      *(_QWORD *)(a1 + 56) = v9;
      v9 = v8;
    }
    else
    {
      v9 = *(_QWORD **)(a1 + 56);
      *(_QWORD *)(a1 + 56) = v4;
    }
  }
  result = v9;
  if (v9 == v8)
  {
    v7 = 4;
    result = v8;
  }
  else
  {
    if (!v9)
      return result;
    v7 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v7))();
}

void sub_20A8E01D0(_Unwind_Exception *a1, int a2)
{
  if (a2)
    __clang_call_terminate(a1);
  _Unwind_Resume(a1);
}

mlcore::ContainerItemMediaTypeTable *mlcore::ContainerItemMediaTypeTable::ContainerItemMediaTypeTable(mlcore::ContainerItemMediaTypeTable *this)
{
  int v2;
  int v3;
  uint64_t v4;
  std::string *v5;
  int v6;
  int v7;
  int v8;
  void *v9;
  std::string *v10;
  int v11;
  std::string *v12;
  int v13;
  int v14;
  std::string *v15;
  _BOOL4 v16;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  std::string __str;
  void *v27[2];
  char v28;
  void (**v29)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v30;
  int v31;
  uint64_t v32;
  void *v33[2];
  char v34;
  void (**v35)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v36;
  int v37;
  uint64_t v38;
  void *v39[2];
  char v40;
  void (**v41)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v42;
  int v43;
  uint64_t v44;
  int v45;
  std::string v46;
  uint64_t (**v47)();
  std::string __p;
  int v49;
  uint64_t v50;
  uint64_t (**v51)();
  std::string v52;
  int v53;
  uint64_t v54;
  uint64_t (**v55)();
  std::string v56;
  int v57;
  uint64_t v58;
  int v59;
  std::string v60;
  void (**v61)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v62;
  int v63;
  uint64_t v64;
  void (**v65)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string __s;
  int v67;
  uint64_t v68;
  void (**v69)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v70;
  int v71;
  uint64_t v72;
  int v73;
  void (**v74)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v75;
  int v76;
  uint64_t v77;
  void (**v78)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v79;
  int v80;
  uint64_t v81;
  void (**v82)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v83;
  int v84;
  uint64_t v85;

  std::string::basic_string[abi:ne180100]<0>(&v46, "container_item_media_type");
  std::string::basic_string[abi:ne180100]<0>(v39, "container_pid");
  mlcore::MediaColumn<long long>::MediaColumn((uint64_t)&v41, (uint64_t)v39, 1);
  std::string::basic_string[abi:ne180100]<0>(v33, "media_type");
  mlcore::MediaColumn<int>::MediaColumn((uint64_t)&v35, (uint64_t)v33, 0);
  std::string::basic_string[abi:ne180100]<0>(v27, "count");
  mlcore::MediaColumn<int>::MediaColumn((uint64_t)&v29, (uint64_t)v27, 0);
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v60, v46.__r_.__value_.__l.__data_, v46.__r_.__value_.__l.__size_);
  else
    v60 = v46;
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v56, v42.__r_.__value_.__l.__data_, v42.__r_.__value_.__l.__size_);
  else
    v56 = v42;
  v55 = off_24C335B18;
  v58 = v44;
  v2 = v43;
  v57 = v43;
  v59 = v45;
  if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v52, v36.__r_.__value_.__l.__data_, v36.__r_.__value_.__l.__size_);
  else
    v52 = v36;
  v25 = v37;
  v53 = v37;
  v51 = off_24C335AF8;
  v24 = v38;
  v54 = v38;
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, v30.__r_.__value_.__l.__data_, v30.__r_.__value_.__l.__size_);
  else
    __p = v30;
  v3 = v31;
  v49 = v31;
  v47 = off_24C335AF8;
  v4 = v32;
  v50 = v32;
  *(_QWORD *)this = &off_24C330F50;
  v5 = (std::string *)((char *)this + 8);
  v6 = SHIBYTE(v60.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v5, v60.__r_.__value_.__l.__data_, v60.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)&v60.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 3) = *((_QWORD *)&v60.__r_.__value_.__l + 2);
  }
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 6) = 0;
  *(_QWORD *)this = off_24C335718;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  v69 = off_24C335D90;
  v21 = SHIBYTE(v56.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v70, v56.__r_.__value_.__l.__data_, v56.__r_.__value_.__l.__size_);
  else
    v70 = v56;
  v72 = v58;
  v71 = v2;
  v73 = v59;
  v65 = off_24C335D90;
  v7 = SHIBYTE(v52.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__s, v52.__r_.__value_.__l.__data_, v52.__r_.__value_.__l.__size_);
  else
    __s = v52;
  v67 = v25;
  v68 = v24;
  v61 = off_24C335D90;
  v20 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v62, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  else
    v62 = __p;
  v63 = v3;
  v64 = v4;
  v78 = off_24C335D90;
  v23 = SHIBYTE(__s.__r_.__value_.__r.__words[2]);
  v19 = v6;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v79, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v79 = __s;
  v80 = v25;
  v81 = v24;
  v74 = off_24C335D90;
  v22 = SHIBYTE(v62.__r_.__value_.__r.__words[2]);
  v18 = v2;
  if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v75, v62.__r_.__value_.__l.__data_, v62.__r_.__value_.__l.__size_);
  else
    v75 = v62;
  v76 = v3;
  v77 = v4;
  v8 = SHIBYTE(v75.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v83, v75.__r_.__value_.__l.__data_, v75.__r_.__value_.__l.__size_);
  else
    v83 = v75;
  v84 = v3;
  v85 = v4;
  *((_QWORD *)this + 10) = off_24C335D90;
  if (SHIBYTE(v83.__r_.__value_.__r.__words[2]) < 0)
  {
    v9 = (void *)v83.__r_.__value_.__r.__words[0];
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 88), v83.__r_.__value_.__l.__data_, v83.__r_.__value_.__l.__size_);
    *((_DWORD *)this + 28) = v3;
    *((_QWORD *)this + 10) = off_24C335AF8;
    *(_QWORD *)((char *)this + 116) = v4;
    operator delete(v9);
  }
  else
  {
    *(std::string *)((char *)this + 88) = v83;
    *((_DWORD *)this + 28) = v3;
    *((_QWORD *)this + 10) = off_24C335AF8;
    *(_QWORD *)((char *)this + 116) = v4;
    v82 = off_24C335D90;
  }
  *((_QWORD *)this + 16) = off_24C335D90;
  v10 = (std::string *)((char *)this + 136);
  v11 = SHIBYTE(v79.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v10, v79.__r_.__value_.__l.__data_, v79.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v10->__r_.__value_.__l.__data_ = *(_OWORD *)&v79.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 19) = *((_QWORD *)&v79.__r_.__value_.__l + 2);
  }
  *((_DWORD *)this + 40) = v25;
  *((_QWORD *)this + 16) = off_24C335AF8;
  *(_QWORD *)((char *)this + 164) = v24;
  if (v8 < 0)
  {
    operator delete(v75.__r_.__value_.__l.__data_);
    if ((v11 & 0x80000000) == 0)
      goto LABEL_42;
  }
  else if ((v11 & 0x80000000) == 0)
  {
    goto LABEL_42;
  }
  operator delete(v79.__r_.__value_.__l.__data_);
LABEL_42:
  *((_QWORD *)this + 22) = off_24C335D90;
  v12 = (std::string *)((char *)this + 184);
  v13 = SHIBYTE(v70.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v12, v70.__r_.__value_.__l.__data_, v70.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v12->__r_.__value_.__l.__data_ = *(_OWORD *)&v70.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 25) = *((_QWORD *)&v70.__r_.__value_.__l + 2);
  }
  *((_DWORD *)this + 52) = v18;
  *((_QWORD *)this + 22) = off_24C335B18;
  *(_QWORD *)((char *)this + 212) = v72;
  *((_DWORD *)this + 55) = v73;
  if (v22 < 0)
    operator delete(v62.__r_.__value_.__l.__data_);
  if (v23 < 0)
  {
    operator delete(__s.__r_.__value_.__l.__data_);
    if ((v13 & 0x80000000) == 0)
      goto LABEL_51;
  }
  else if ((v13 & 0x80000000) == 0)
  {
    goto LABEL_51;
  }
  operator delete(v70.__r_.__value_.__l.__data_);
LABEL_51:
  v47 = (uint64_t (**)())off_24C335D90;
  if (v20 < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v51 = (uint64_t (**)())off_24C335D90;
  if (v7 < 0)
    operator delete(v52.__r_.__value_.__l.__data_);
  v55 = (uint64_t (**)())off_24C335D90;
  if (v21 < 0)
  {
    operator delete(v56.__r_.__value_.__l.__data_);
    if ((v19 & 0x80000000) == 0)
      goto LABEL_57;
  }
  else if ((v19 & 0x80000000) == 0)
  {
    goto LABEL_57;
  }
  operator delete(v60.__r_.__value_.__l.__data_);
LABEL_57:
  *(_QWORD *)this = &off_24C336280;
  *((_QWORD *)this + 28) = off_24C335D90;
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 232), v42.__r_.__value_.__l.__data_, v42.__r_.__value_.__l.__size_);
  else
    *(std::string *)((char *)this + 232) = v42;
  v14 = v43;
  *((_QWORD *)this + 28) = off_24C336AC0;
  *((_DWORD *)this + 64) = v14;
  *(_QWORD *)((char *)this + 260) = v44;
  *((_DWORD *)this + 67) = v45;
  *((_QWORD *)this + 34) = off_24C335D90;
  if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 280), v36.__r_.__value_.__l.__data_, v36.__r_.__value_.__l.__size_);
  else
    *(std::string *)((char *)this + 280) = v36;
  *((_DWORD *)this + 76) = v37;
  *(_QWORD *)((char *)this + 308) = v38;
  *((_QWORD *)this + 34) = off_24C336AA0;
  *((_QWORD *)this + 40) = off_24C335D90;
  v15 = (std::string *)((char *)this + 328);
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v15, v30.__r_.__value_.__l.__data_, v30.__r_.__value_.__l.__size_);
    v16 = (v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0;
  }
  else
  {
    v16 = 0;
    *(_OWORD *)&v15->__r_.__value_.__l.__data_ = *(_OWORD *)&v30.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 43) = *((_QWORD *)&v30.__r_.__value_.__l + 2);
  }
  *((_DWORD *)this + 88) = v31;
  *(_QWORD *)((char *)this + 356) = v32;
  *((_QWORD *)this + 40) = off_24C336AA0;
  v29 = off_24C335D90;
  if (v16)
    operator delete(v30.__r_.__value_.__l.__data_);
  if (v28 < 0)
    operator delete(v27[0]);
  v35 = off_24C335D90;
  if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v36.__r_.__value_.__l.__data_);
  if (v34 < 0)
    operator delete(v33[0]);
  v41 = off_24C335D90;
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v42.__r_.__value_.__l.__data_);
  if (v40 < 0)
    operator delete(v39[0]);
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v46.__r_.__value_.__l.__data_);
  *(_QWORD *)this = &off_24C33A600;
  std::string::basic_string[abi:ne180100]<0>(&__str, "UNIQUE (container_pid, media_type)");
  std::string::operator=((std::string *)((char *)this + 56), &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  return this;
}

void sub_20A8E0988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43,uint64_t a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50,uint64_t a51,uint64_t a52,void *a53,uint64_t a54,int a55,__int16 a56,char a57,char a58,uint64_t a59,void *a60,uint64_t a61,int a62,__int16 a63)
{
  char a65;
  void *a68;
  char a72;
  uint64_t v72;
  void **v73;
  void **v74;
  uint64_t v75;

  *(_QWORD *)(v72 + 272) = v75;
  if (*(char *)(v72 + 303) < 0)
    operator delete(*v74);
  *(_QWORD *)(v72 + 224) = v75;
  if (*(char *)(v72 + 255) < 0)
    operator delete(*v73);
  mediaplatform::DatabaseTable<long long,int,int>::~DatabaseTable((mediaplatform::DatabaseTableBase *)v72);
  if (a35 < 0)
    operator delete(__p);
  if (a28 < 0)
    operator delete(a23);
  if (a50 < 0)
    operator delete(a45);
  if (a43 < 0)
    operator delete(a38);
  if (a65 < 0)
    operator delete(a60);
  if (a58 < 0)
    operator delete(a53);
  if (a72 < 0)
    operator delete(a68);
  _Unwind_Resume(a1);
}

void sub_20A8E0BE8()
{
  JUMPOUT(0x20A8E0B94);
}

void sub_20A8E0BF0()
{
  JUMPOUT(0x20A8E0BA4);
}

void sub_20A8E0BF8()
{
  JUMPOUT(0x20A8E0BC0);
}

void sub_20A8E0C00()
{
  JUMPOUT(0x20A8E0BD0);
}

void mlcore::MediaTable<long long,int,int>::~MediaTable(mediaplatform::DatabaseTableBase *this)
{
  *(_QWORD *)this = &off_24C336280;
  *((_QWORD *)this + 40) = off_24C335D90;
  if (*((char *)this + 351) < 0)
    operator delete(*((void **)this + 41));
  *((_QWORD *)this + 34) = off_24C335D90;
  if (*((char *)this + 303) < 0)
    operator delete(*((void **)this + 35));
  *((_QWORD *)this + 28) = off_24C335D90;
  if (*((char *)this + 255) < 0)
    operator delete(*((void **)this + 29));
  *(_QWORD *)this = off_24C335718;
  *((_QWORD *)this + 22) = off_24C335D90;
  if (*((char *)this + 207) < 0)
    operator delete(*((void **)this + 23));
  *((_QWORD *)this + 16) = off_24C335D90;
  if (*((char *)this + 159) < 0)
    operator delete(*((void **)this + 17));
  *((_QWORD *)this + 10) = off_24C335D90;
  if (*((char *)this + 111) < 0)
    operator delete(*((void **)this + 11));
  if (*((char *)this + 79) < 0)
    operator delete(*((void **)this + 7));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)this);
}

void mediaplatform::DatabaseTable<long long,int,int>::~DatabaseTable(mediaplatform::DatabaseTableBase *this)
{
  *(_QWORD *)this = off_24C335718;
  *((_QWORD *)this + 22) = off_24C335D90;
  if (*((char *)this + 207) < 0)
    operator delete(*((void **)this + 23));
  *((_QWORD *)this + 16) = off_24C335D90;
  if (*((char *)this + 159) < 0)
    operator delete(*((void **)this + 17));
  *((_QWORD *)this + 10) = off_24C335D90;
  if (*((char *)this + 111) < 0)
    operator delete(*((void **)this + 11));
  if (*((char *)this + 79) < 0)
    operator delete(*((void **)this + 7));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)this);
}

{
  *(_QWORD *)this = off_24C335718;
  *((_QWORD *)this + 22) = off_24C335D90;
  if (*((char *)this + 207) < 0)
    operator delete(*((void **)this + 23));
  *((_QWORD *)this + 16) = off_24C335D90;
  if (*((char *)this + 159) < 0)
    operator delete(*((void **)this + 17));
  *((_QWORD *)this + 10) = off_24C335D90;
  if (*((char *)this + 111) < 0)
    operator delete(*((void **)this + 11));
  if (*((char *)this + 79) < 0)
    operator delete(*((void **)this + 7));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)this);
  JUMPOUT(0x20BD27AFCLL);
}

{
  *(_QWORD *)this = off_24C335718;
  *((_QWORD *)this + 22) = off_24C335D90;
  if (*((char *)this + 207) < 0)
    operator delete(*((void **)this + 23));
  *((_QWORD *)this + 16) = off_24C335D90;
  if (*((char *)this + 159) < 0)
    operator delete(*((void **)this + 17));
  *((_QWORD *)this + 10) = off_24C335D90;
  if (*((char *)this + 111) < 0)
    operator delete(*((void **)this + 11));
  if (*((char *)this + 79) < 0)
    operator delete(*((void **)this + 7));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)this);
}

uint64_t mediaplatform::DatabaseTable<long long,int,int>::columnCount()
{
  return 3;
}

void mediaplatform::DatabaseTable<long long,int,int>::columnNames(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 176);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 128);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 80);
}

void sub_20A8E0E40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void mediaplatform::DatabaseTable<long long,int,int>::targetColumnExpression(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __int128 *v3;
  __int128 *v4[3];
  __int128 **v5;

  v3 = (__int128 *)(a1 + 8);
  (*(void (**)(__int128 **__return_ptr))(*(_QWORD *)a1 + 24))(v4);
  std::allocate_shared[abi:ne180100]<mediaplatform::SQLColumnNameExpression,std::allocator<mediaplatform::SQLColumnNameExpression>,std::string &,std::string const&,void>(a2, v4[0], v3);
  v5 = v4;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v5);
}

void sub_20A8E0EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void mlcore::MediaTable<long long,int,int>::~MediaTable(mediaplatform::DatabaseTableBase *a1)
{
  mlcore::MediaTable<long long,int,int>::~MediaTable(a1);
  JUMPOUT(0x20BD27AFCLL);
}

void mlcore::ContainerItemMediaTypeTable::~ContainerItemMediaTypeTable(mlcore::ContainerItemMediaTypeTable *this)
{
  mlcore::MediaTable<long long,int,int>::~MediaTable(this);
  JUMPOUT(0x20BD27AFCLL);
}

void mlcore::ContainerItemMediaTypeTable::persistentIDColumn(mlcore::ContainerItemMediaTypeTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 255) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 29), *((_QWORD *)this + 30));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 232);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 31);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 64);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 67);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 260);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ContainerItemMediaTypeTable::mediaTypeColumn(mlcore::ContainerItemMediaTypeTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 303) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 35), *((_QWORD *)this + 36));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 280);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 37);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 76);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 308);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ContainerItemMediaTypeTable::countColumn(mlcore::ContainerItemMediaTypeTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 351) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 41), *((_QWORD *)this + 42));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 328);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 43);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 88);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 356);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemStatsTable::~ItemStatsTable(mlcore::ItemStatsTable *this)
{
  *(_QWORD *)this = off_24C336328;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul,6ul,7ul,8ul,9ul,10ul,11ul,12ul,13ul,14ul,15ul,16ul,17ul,18ul,19ul,20ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<double>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<long long>>::~__tuple_impl((uint64_t)this + 1104);
  *(_QWORD *)this = off_24C3357C0;
  *((_QWORD *)this + 132) = off_24C335D90;
  if (*((char *)this + 1087) < 0)
    operator delete(*((void **)this + 133));
  *((_QWORD *)this + 126) = off_24C335D90;
  if (*((char *)this + 1039) < 0)
    operator delete(*((void **)this + 127));
  *((_QWORD *)this + 120) = off_24C335D90;
  if (*((char *)this + 991) < 0)
    operator delete(*((void **)this + 121));
  mediaplatform::DatabaseColumnTuple<3ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>>::~DatabaseColumnTuple((uint64_t)this + 80);
  if (*((char *)this + 79) < 0)
    operator delete(*((void **)this + 7));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)this);
}

{
  *(_QWORD *)this = off_24C336328;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul,6ul,7ul,8ul,9ul,10ul,11ul,12ul,13ul,14ul,15ul,16ul,17ul,18ul,19ul,20ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<double>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<long long>>::~__tuple_impl((uint64_t)this + 1104);
  *(_QWORD *)this = off_24C3357C0;
  *((_QWORD *)this + 132) = off_24C335D90;
  if (*((char *)this + 1087) < 0)
    operator delete(*((void **)this + 133));
  *((_QWORD *)this + 126) = off_24C335D90;
  if (*((char *)this + 1039) < 0)
    operator delete(*((void **)this + 127));
  *((_QWORD *)this + 120) = off_24C335D90;
  if (*((char *)this + 991) < 0)
    operator delete(*((void **)this + 121));
  mediaplatform::DatabaseColumnTuple<3ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>>::~DatabaseColumnTuple((uint64_t)this + 80);
  if (*((char *)this + 79) < 0)
    operator delete(*((void **)this + 7));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)this);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mediaplatform::DatabaseTable<long long,int,int,std::string,int,int,int,long long,long long,long long,int,int,int,int,double,int,int,int,int,int,long long>::columnCount()
{
  return 21;
}

void mediaplatform::DatabaseTable<long long,int,int,std::string,int,int,int,long long,long long,long long,int,int,int,int,double,int,int,int,int,int,long long>::columnNames(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 1056);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 1008);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 960);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 896);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 848);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 800);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 752);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 704);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 656);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 608);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 560);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 512);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 464);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 416);
  mediaplatform::ColumnNamesApplier::operator()<double>((uint64_t)a2, a1 + 368);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 320);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 272);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 224);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 176);
  mediaplatform::ColumnNamesApplier::operator()<int>((uint64_t)a2, a1 + 128);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 80);
}

void sub_20A8E13AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void mediaplatform::DatabaseTable<long long,int,int,std::string,int,int,int,long long,long long,long long,int,int,int,int,double,int,int,int,int,int,long long>::targetColumnExpression(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __int128 *v3;
  __int128 *v4[3];
  __int128 **v5;

  v3 = (__int128 *)(a1 + 8);
  (*(void (**)(__int128 **__return_ptr))(*(_QWORD *)a1 + 24))(v4);
  std::allocate_shared[abi:ne180100]<mediaplatform::SQLColumnNameExpression,std::allocator<mediaplatform::SQLColumnNameExpression>,std::string &,std::string const&,void>(a2, v4[0], v3);
  v5 = v4;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v5);
}

void sub_20A8E1424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul,6ul,7ul,8ul,9ul,10ul,11ul,12ul,13ul,14ul,15ul,16ul,17ul,18ul,19ul,20ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<double>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<long long>>::~__tuple_impl(uint64_t a1)
{
  *(_QWORD *)(a1 + 976) = off_24C335D90;
  if (*(char *)(a1 + 1007) < 0)
    operator delete(*(void **)(a1 + 984));
  *(_QWORD *)(a1 + 928) = off_24C335D90;
  if (*(char *)(a1 + 959) < 0)
    operator delete(*(void **)(a1 + 936));
  *(_QWORD *)(a1 + 880) = off_24C335D90;
  if (*(char *)(a1 + 911) < 0)
    operator delete(*(void **)(a1 + 888));
  *(_QWORD *)(a1 + 832) = off_24C335D90;
  if (*(char *)(a1 + 863) < 0)
    operator delete(*(void **)(a1 + 840));
  *(_QWORD *)(a1 + 784) = off_24C335D90;
  if (*(char *)(a1 + 815) < 0)
    operator delete(*(void **)(a1 + 792));
  *(_QWORD *)(a1 + 736) = off_24C335D90;
  if (*(char *)(a1 + 767) < 0)
    operator delete(*(void **)(a1 + 744));
  *(_QWORD *)(a1 + 688) = off_24C335D90;
  if (*(char *)(a1 + 719) < 0)
    operator delete(*(void **)(a1 + 696));
  *(_QWORD *)(a1 + 640) = off_24C335D90;
  if (*(char *)(a1 + 671) < 0)
    operator delete(*(void **)(a1 + 648));
  *(_QWORD *)(a1 + 592) = off_24C335D90;
  if (*(char *)(a1 + 623) < 0)
    operator delete(*(void **)(a1 + 600));
  *(_QWORD *)(a1 + 544) = off_24C335D90;
  if (*(char *)(a1 + 575) < 0)
    operator delete(*(void **)(a1 + 552));
  *(_QWORD *)(a1 + 496) = off_24C335D90;
  if (*(char *)(a1 + 527) < 0)
    operator delete(*(void **)(a1 + 504));
  *(_QWORD *)(a1 + 448) = off_24C335D90;
  if (*(char *)(a1 + 479) < 0)
    operator delete(*(void **)(a1 + 456));
  *(_QWORD *)(a1 + 400) = off_24C335D90;
  if (*(char *)(a1 + 431) < 0)
    operator delete(*(void **)(a1 + 408));
  *(_QWORD *)(a1 + 352) = off_24C335D90;
  if (*(char *)(a1 + 383) < 0)
    operator delete(*(void **)(a1 + 360));
  *(_QWORD *)(a1 + 304) = off_24C335D90;
  if (*(char *)(a1 + 335) < 0)
    operator delete(*(void **)(a1 + 312));
  *(_QWORD *)(a1 + 256) = off_24C335D90;
  if (*(char *)(a1 + 287) < 0)
    operator delete(*(void **)(a1 + 264));
  *(_QWORD *)(a1 + 208) = off_24C335D90;
  if (*(char *)(a1 + 239) < 0)
    operator delete(*(void **)(a1 + 216));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 144);
  *(_QWORD *)(a1 + 96) = off_24C335D90;
  if (*(char *)(a1 + 127) < 0)
    operator delete(*(void **)(a1 + 104));
  *(_QWORD *)(a1 + 48) = off_24C335D90;
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  *(_QWORD *)a1 = off_24C335D90;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t mediaplatform::DatabaseColumnTuple<3ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 816);
  *(_QWORD *)(a1 + 768) = off_24C335D90;
  if (*(char *)(a1 + 799) < 0)
    operator delete(*(void **)(a1 + 776));
  *(_QWORD *)(a1 + 720) = off_24C335D90;
  if (*(char *)(a1 + 751) < 0)
    operator delete(*(void **)(a1 + 728));
  *(_QWORD *)(a1 + 672) = off_24C335D90;
  if (*(char *)(a1 + 703) < 0)
    operator delete(*(void **)(a1 + 680));
  *(_QWORD *)(a1 + 624) = off_24C335D90;
  if (*(char *)(a1 + 655) < 0)
    operator delete(*(void **)(a1 + 632));
  *(_QWORD *)(a1 + 576) = off_24C335D90;
  if (*(char *)(a1 + 607) < 0)
    operator delete(*(void **)(a1 + 584));
  return mediaplatform::DatabaseColumnTuple<26ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>>::~DatabaseColumnTuple(a1);
}

void mediaplatform::DatabaseTable<long long,int,int,std::string,int,int,int,long long,long long,long long,int,int,int,int,double,int,int,int,int,int,long long>::~DatabaseTable(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C3357C0;
  *(_QWORD *)(a1 + 1056) = off_24C335D90;
  if (*(char *)(a1 + 1087) < 0)
    operator delete(*(void **)(a1 + 1064));
  *(_QWORD *)(a1 + 1008) = off_24C335D90;
  if (*(char *)(a1 + 1039) < 0)
    operator delete(*(void **)(a1 + 1016));
  *(_QWORD *)(a1 + 960) = off_24C335D90;
  if (*(char *)(a1 + 991) < 0)
    operator delete(*(void **)(a1 + 968));
  mediaplatform::DatabaseColumnTuple<3ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>>::~DatabaseColumnTuple(a1 + 80);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
}

{
  *(_QWORD *)a1 = off_24C3357C0;
  *(_QWORD *)(a1 + 1056) = off_24C335D90;
  if (*(char *)(a1 + 1087) < 0)
    operator delete(*(void **)(a1 + 1064));
  *(_QWORD *)(a1 + 1008) = off_24C335D90;
  if (*(char *)(a1 + 1039) < 0)
    operator delete(*(void **)(a1 + 1016));
  *(_QWORD *)(a1 + 960) = off_24C335D90;
  if (*(char *)(a1 + 991) < 0)
    operator delete(*(void **)(a1 + 968));
  mediaplatform::DatabaseColumnTuple<3ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>>::~DatabaseColumnTuple(a1 + 80);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
  JUMPOUT(0x20BD27AFCLL);
}

{
  *(_QWORD *)a1 = off_24C3357C0;
  *(_QWORD *)(a1 + 1056) = off_24C335D90;
  if (*(char *)(a1 + 1087) < 0)
    operator delete(*(void **)(a1 + 1064));
  *(_QWORD *)(a1 + 1008) = off_24C335D90;
  if (*(char *)(a1 + 1039) < 0)
    operator delete(*(void **)(a1 + 1016));
  *(_QWORD *)(a1 + 960) = off_24C335D90;
  if (*(char *)(a1 + 991) < 0)
    operator delete(*(void **)(a1 + 968));
  mediaplatform::DatabaseColumnTuple<3ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>>::~DatabaseColumnTuple(a1 + 80);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
}

void mlcore::MediaTable<long long,int,int,std::string,int,int,int,long long,long long,long long,int,int,int,int,double,int,int,int,int,int,long long>::~MediaTable(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C336328;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul,6ul,7ul,8ul,9ul,10ul,11ul,12ul,13ul,14ul,15ul,16ul,17ul,18ul,19ul,20ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<double>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<long long>>::~__tuple_impl(a1 + 1104);
  *(_QWORD *)a1 = off_24C3357C0;
  *(_QWORD *)(a1 + 1056) = off_24C335D90;
  if (*(char *)(a1 + 1087) < 0)
    operator delete(*(void **)(a1 + 1064));
  *(_QWORD *)(a1 + 1008) = off_24C335D90;
  if (*(char *)(a1 + 1039) < 0)
    operator delete(*(void **)(a1 + 1016));
  *(_QWORD *)(a1 + 960) = off_24C335D90;
  if (*(char *)(a1 + 991) < 0)
    operator delete(*(void **)(a1 + 968));
  mediaplatform::DatabaseColumnTuple<3ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>>::~DatabaseColumnTuple(a1 + 80);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
}

{
  *(_QWORD *)a1 = off_24C336328;
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul,6ul,7ul,8ul,9ul,10ul,11ul,12ul,13ul,14ul,15ul,16ul,17ul,18ul,19ul,20ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<std::string>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<double>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<long long>>::~__tuple_impl(a1 + 1104);
  *(_QWORD *)a1 = off_24C3357C0;
  *(_QWORD *)(a1 + 1056) = off_24C335D90;
  if (*(char *)(a1 + 1087) < 0)
    operator delete(*(void **)(a1 + 1064));
  *(_QWORD *)(a1 + 1008) = off_24C335D90;
  if (*(char *)(a1 + 1039) < 0)
    operator delete(*(void **)(a1 + 1016));
  *(_QWORD *)(a1 + 960) = off_24C335D90;
  if (*(char *)(a1 + 991) < 0)
    operator delete(*(void **)(a1 + 968));
  mediaplatform::DatabaseColumnTuple<3ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>>::~DatabaseColumnTuple(a1 + 80);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mediaplatform::DatabaseColumnTuple<1ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 928) = off_24C335D90;
  if (*(char *)(a1 + 959) < 0)
    operator delete(*(void **)(a1 + 936));
  *(_QWORD *)(a1 + 880) = off_24C335D90;
  if (*(char *)(a1 + 911) < 0)
    operator delete(*(void **)(a1 + 888));
  return mediaplatform::DatabaseColumnTuple<3ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>>::~DatabaseColumnTuple(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<2ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 880) = off_24C335D90;
  if (*(char *)(a1 + 911) < 0)
    operator delete(*(void **)(a1 + 888));
  return mediaplatform::DatabaseColumnTuple<3ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>>::~DatabaseColumnTuple(a1);
}

void mlcore::ItemStatsTable::persistentIDColumn(mlcore::ItemStatsTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 1135) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 139), *((_QWORD *)this + 140));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1112);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 141);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 284);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 287);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 1140);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStatsTable::userRatingColumn(mlcore::ItemStatsTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 1183) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 145), *((_QWORD *)this + 146));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1160);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 147);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 296);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 1188);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemStatsTable::needsRestoreColumn(mlcore::ItemStatsTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 1231) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 151), *((_QWORD *)this + 152));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1208);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 153);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 308);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 1236);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemStatsTable::downloadIdentifierColumn(mlcore::ItemStatsTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 1279) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 157), *((_QWORD *)this + 158));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1256);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 159);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 320);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 1284);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 1311) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 161), *((_QWORD *)this + 162));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1288);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 163);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8E1C90(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::ItemStatsTable::playCountUserColumn(mlcore::ItemStatsTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 1343) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 165), *((_QWORD *)this + 166));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1320);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 167);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 336);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 1348);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemStatsTable::playCountRecentColumn(mlcore::ItemStatsTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 1391) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 171), *((_QWORD *)this + 172));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1368);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 173);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 348);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 1396);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemStatsTable::hasBeenPlayedColumn(mlcore::ItemStatsTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 1439) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 177), *((_QWORD *)this + 178));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1416);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 179);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 360);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 1444);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemStatsTable::datePlayedColumn(mlcore::ItemStatsTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 1487) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 183), *((_QWORD *)this + 184));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1464);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 185);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 372);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 375);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 1492);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStatsTable::dateSkippedColumn(mlcore::ItemStatsTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 1535) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 189), *((_QWORD *)this + 190));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1512);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 191);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 384);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 387);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 1540);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStatsTable::dateAccessedColumn(mlcore::ItemStatsTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 1583) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 195), *((_QWORD *)this + 196));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1560);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 197);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 396);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 399);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 1588);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::ItemStatsTable::isAlarmColumn(mlcore::ItemStatsTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 1631) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 201), *((_QWORD *)this + 202));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1608);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 203);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 408);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 1636);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemStatsTable::skipCountUserColumn(mlcore::ItemStatsTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 1679) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 207), *((_QWORD *)this + 208));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1656);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 209);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 420);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 1684);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemStatsTable::skipCountRecentColumn(mlcore::ItemStatsTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 1727) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 213), *((_QWORD *)this + 214));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1704);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 215);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 432);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 1732);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemStatsTable::rememberBookmarkColumn(mlcore::ItemStatsTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 1775) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 219), *((_QWORD *)this + 220));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1752);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 221);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 444);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 1780);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemStatsTable::bookmarkTimeColumn(mlcore::ItemStatsTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 1823) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 225), *((_QWORD *)this + 226));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1800);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 227);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 456);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 459);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 1828);
  *(_QWORD *)a2 = off_24C336A80;
}

void mlcore::ItemStatsTable::hiddenColumn(mlcore::ItemStatsTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 1871) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 231), *((_QWORD *)this + 232));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1848);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 233);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 468);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 1876);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemStatsTable::chosenByAutoFillColumn(mlcore::ItemStatsTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 1919) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 237), *((_QWORD *)this + 238));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1896);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 239);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 480);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 1924);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemStatsTable::likedStateColumn(mlcore::ItemStatsTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 1967) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 243), *((_QWORD *)this + 244));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1944);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 245);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 492);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 1972);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemStatsTable::likedStateChangedColumn(mlcore::ItemStatsTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 2015) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 249), *((_QWORD *)this + 250));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1992);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 251);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 504);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 2020);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemStatsTable::userRatingIsDerivedColumn(mlcore::ItemStatsTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 2063) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 255), *((_QWORD *)this + 256));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2040);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 257);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 516);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 2068);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::ItemStatsTable::likedStateChangedDateColumn(mlcore::ItemStatsTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 2111) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 261), *((_QWORD *)this + 262));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 2088);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 263);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 528);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 531);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 2116);
  *(_QWORD *)a2 = off_24C336AC0;
}

_QWORD *mlcore::MediaTable<long long,std::string,mediaplatform::Data,int,long long,int,int,int,int,long long>::MediaTable(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v19;
  int v20;
  const void *v21;
  size_t v22;
  void *v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  std::string *v28;
  const void *v29;
  size_t v30;
  void *v31;
  const void *v32;
  size_t v33;
  void *v34;
  const void *v35;
  size_t v36;
  void *v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  _QWORD *v51;
  std::string::size_type v52;
  void *v53;
  std::string *v54;
  int v55;
  std::string *v56;
  int v57;
  std::string *v58;
  int v59;
  std::string *v60;
  int v61;
  std::string *v62;
  int v63;
  std::string *v64;
  int v65;
  std::string *v66;
  std::string *v67;
  int v68;
  __int128 v69;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 *v97;
  uint64_t v98;
  int v99;
  int v100;
  int v101;
  int v102;
  _QWORD *v103;
  uint64_t v104;
  int v105;
  int v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  int v112;
  int v113;
  uint64_t v114;
  int v115;
  std::string __p;
  int v117;
  uint64_t v118;
  int v119;
  uint64_t (**v120)();
  std::string v121;
  int v122;
  uint64_t v123;
  uint64_t (**v124)();
  std::string v125;
  int v126;
  uint64_t v127;
  uint64_t (**v128)();
  std::string v129;
  int v130;
  uint64_t v131;
  uint64_t (**v132)();
  std::string v133;
  int v134;
  uint64_t v135;
  uint64_t (**v136)();
  std::string v137;
  int v138;
  uint64_t v139;
  int v140;
  uint64_t (**v141)();
  std::string v142;
  int v143;
  uint64_t v144;
  uint64_t (**v145)();
  std::string v146;
  int v147;
  char v148;
  void (**v149)(mediaplatform::Data *__hidden);
  size_t v150;
  size_t v151;
  const void *v152;
  char v153;
  uint64_t (**v154)();
  std::string v155;
  int v156;
  char v157;
  std::string v158;
  uint64_t (**v159)();
  std::string __s;
  int v161;
  uint64_t v162;
  int v163;
  std::string v164;
  uint64_t (**v165)();
  std::string v166;
  int v167;
  uint64_t v168;
  int v169;
  uint64_t (**v170)();
  std::string v171;
  int v172;
  uint64_t v173;
  uint64_t (**v174)();
  std::string v175;
  int v176;
  uint64_t v177;
  uint64_t (**v178)();
  std::string v179;
  int v180;
  uint64_t v181;
  uint64_t (**v182)();
  std::string v183;
  int v184;
  uint64_t v185;
  uint64_t (**v186)();
  std::string v187;
  int v188;
  uint64_t v189;
  int v190;
  uint64_t (**v191)();
  std::string v192;
  int v193;
  uint64_t v194;
  uint64_t (**v195)();
  std::string v196;
  int v197;
  char v198;
  void (**v199)(mediaplatform::Data *__hidden);
  size_t v200;
  size_t v201;
  const void *v202;
  char v203;
  uint64_t (**v204)();
  std::string v205;
  int v206;
  char v207;
  std::string v208;
  uint64_t (**v209)();
  std::string v210;
  int v211;
  uint64_t v212;
  int v213;
  uint64_t (**v214)();
  std::string v215;
  int v216;
  uint64_t v217;
  int v218;
  uint64_t (**v219)();
  std::string v220;
  int v221;
  uint64_t v222;
  uint64_t (**v223)();
  std::string v224;
  int v225;
  uint64_t v226;
  uint64_t (**v227)();
  std::string v228;
  int v229;
  uint64_t v230;
  uint64_t (**v231)();
  std::string v232;
  int v233;
  uint64_t v234;
  uint64_t (**v235)();
  std::string v236;
  int v237;
  uint64_t v238;
  int v239;
  uint64_t (**v240)();
  std::string v241;
  int v242;
  uint64_t v243;
  uint64_t (**v244)();
  std::string v245;
  int v246;
  char v247;
  void (**v248)(mediaplatform::Data *__hidden);
  size_t v249;
  size_t v250;
  const void *v251;
  char v252;
  uint64_t (**v253)();
  std::string v254;
  int v255;
  char v256;
  std::string v257;
  uint64_t (**v258)();
  std::string v259;
  int v260;
  uint64_t v261;
  int v262;
  uint64_t (**v263)();
  std::string v264;
  int v265;
  uint64_t v266;
  uint64_t (**v267)();
  std::string v268;
  int v269;
  uint64_t v270;
  uint64_t (**v271)();
  std::string v272;
  int v273;
  uint64_t v274;
  uint64_t (**v275)();
  std::string v276;
  int v277;
  uint64_t v278;
  uint64_t (**v279)();
  std::string v280;
  int v281;
  uint64_t v282;
  int v283;
  uint64_t (**v284)();
  std::string v285;
  int v286;
  uint64_t v287;
  uint64_t (**v288)();
  std::string v289;
  int v290;
  char v291;
  _QWORD v292[4];
  char v293;
  uint64_t (**v294)();
  std::string v295;
  int v296;
  uint64_t v297;
  int v298;
  uint64_t (**v299)();
  std::string v300;
  int v301;
  uint64_t v302;
  uint64_t (**v303)();
  std::string v304;
  int v305;
  uint64_t v306;
  uint64_t (**v307)();
  std::string v308;
  int v309;
  uint64_t v310;
  uint64_t (**v311)();
  std::string v312;
  int v313;
  uint64_t v314;
  uint64_t (**v315)();
  std::string v316;
  int v317;
  uint64_t v318;
  int v319;
  uint64_t (**v320)();
  std::string v321;
  int v322;
  uint64_t v323;
  uint64_t (**v324)();
  std::string v325;
  int v326;
  uint64_t v327;
  int v328;
  uint64_t (**v329)();
  std::string v330;
  int v331;
  uint64_t v332;
  uint64_t (**v333)();
  std::string v334;
  int v335;
  uint64_t v336;
  uint64_t (**v337)();
  std::string v338;
  int v339;
  uint64_t v340;
  uint64_t (**v341)();
  std::string v342;
  int v343;
  uint64_t v344;
  uint64_t (**v345)();
  std::string v346;
  int v347;
  uint64_t v348;
  int v349;
  uint64_t (**v350)();
  std::string v351;
  int v352;
  uint64_t v353;
  int v354;
  uint64_t (**v355)();
  std::string v356;
  int v357;
  uint64_t v358;
  uint64_t (**v359)();
  std::string v360;
  int v361;
  uint64_t v362;
  uint64_t (**v363)();
  std::string v364;
  int v365;
  uint64_t v366;
  uint64_t (**v367)();
  std::string v368;
  int v369;
  uint64_t v370;
  uint64_t (**v371)();
  std::string v372;
  int v373;
  uint64_t v374;
  int v375;
  uint64_t (**v376)();
  std::string v377;
  int v378;
  uint64_t v379;
  uint64_t (**v380)();
  std::string v381;
  int v382;
  uint64_t v383;
  uint64_t (**v384)();
  std::string v385;
  int v386;
  uint64_t v387;
  void (**v388)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v389;
  int v390;
  uint64_t v391;
  int v392;
  void (**v393)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v394;
  int v395;
  uint64_t v396;
  void (**v397)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v398;
  int v399;
  uint64_t v400;
  void (**v401)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v402;
  int v403;
  uint64_t v404;
  int v405;
  void (**v406)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v407;
  int v408;
  uint64_t v409;
  void (**v410)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v411;
  int v412;
  uint64_t v413;
  int v414;

  if (*(char *)(a2 + 23) < 0)
    std::string::__init_copy_ctor_external(&v164, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
  else
    v164 = *(std::string *)a2;
  if (*(char *)(a3 + 31) < 0)
    std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)(a3 + 8), *(_QWORD *)(a3 + 16));
  else
    __s = *(std::string *)(a3 + 8);
  v19 = *(_DWORD *)(a3 + 32);
  v159 = off_24C335B18;
  v162 = *(_QWORD *)(a3 + 36);
  v20 = *(_DWORD *)(a3 + 44);
  v161 = v19;
  v163 = v20;
  v154 = (uint64_t (**)())off_24C335D90;
  if (*(char *)(a4 + 31) < 0)
    std::string::__init_copy_ctor_external(&v155, *(const std::string::value_type **)(a4 + 8), *(_QWORD *)(a4 + 16));
  else
    v155 = *(std::string *)(a4 + 8);
  v156 = *(_DWORD *)(a4 + 32);
  v154 = &off_24C335AB8;
  v157 = *(_BYTE *)(a4 + 36);
  if (*(char *)(a4 + 63) < 0)
    std::string::__init_copy_ctor_external(&v158, *(const std::string::value_type **)(a4 + 40), *(_QWORD *)(a4 + 48));
  else
    v158 = *(std::string *)(a4 + 40);
  v145 = (uint64_t (**)())off_24C335D90;
  v96 = a4;
  v98 = a3;
  if (*(char *)(a5 + 31) < 0)
    std::string::__init_copy_ctor_external(&v146, *(const std::string::value_type **)(a5 + 8), *(_QWORD *)(a5 + 16));
  else
    v146 = *(std::string *)(a5 + 8);
  v147 = *(_DWORD *)(a5 + 32);
  v145 = &off_24C335A98;
  v148 = *(_BYTE *)(a5 + 36);
  v21 = *(const void **)(a5 + 64);
  v22 = *(_QWORD *)(a5 + 48);
  v149 = &off_24C331510;
  v150 = v22;
  v151 = v22;
  if (v22)
    v23 = (void *)operator new[]();
  else
    v23 = 0;
  v152 = v23;
  v153 = 1;
  if (v21)
    memcpy(v23, v21, v22);
  else
    bzero(v23, v22);
  if (*(char *)(a6 + 31) < 0)
    std::string::__init_copy_ctor_external(&v142, *(const std::string::value_type **)(a6 + 8), *(_QWORD *)(a6 + 16));
  else
    v142 = *(std::string *)(a6 + 8);
  v105 = *(_DWORD *)(a6 + 32);
  v143 = v105;
  v141 = off_24C335AF8;
  v104 = *(_QWORD *)(a6 + 36);
  v144 = v104;
  if (*(char *)(a7 + 31) < 0)
    std::string::__init_copy_ctor_external(&v137, *(const std::string::value_type **)(a7 + 8), *(_QWORD *)(a7 + 16));
  else
    v137 = *(std::string *)(a7 + 8);
  v24 = *(_DWORD *)(a7 + 32);
  v136 = off_24C335B18;
  v139 = *(_QWORD *)(a7 + 36);
  v25 = *(_DWORD *)(a7 + 44);
  v106 = v24;
  v138 = v24;
  v140 = v25;
  if (*(char *)(a8 + 31) < 0)
    std::string::__init_copy_ctor_external(&v133, *(const std::string::value_type **)(a8 + 8), *(_QWORD *)(a8 + 16));
  else
    v133 = *(std::string *)(a8 + 8);
  v108 = *(_DWORD *)(a8 + 32);
  v134 = v108;
  v132 = off_24C335AF8;
  v107 = *(_QWORD *)(a8 + 36);
  v135 = v107;
  if (*(char *)(a9 + 31) < 0)
    std::string::__init_copy_ctor_external(&v129, *(const std::string::value_type **)(a9 + 8), *(_QWORD *)(a9 + 16));
  else
    v129 = *(std::string *)(a9 + 8);
  v26 = a10;
  v110 = *(_DWORD *)(a9 + 32);
  v130 = v110;
  v128 = off_24C335AF8;
  v109 = *(_QWORD *)(a9 + 36);
  v131 = v109;
  if (*(char *)(a10 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v125, *(const std::string::value_type **)(a10 + 8), *(_QWORD *)(a10 + 16));
    v26 = a10;
  }
  else
  {
    v125 = *(std::string *)(a10 + 8);
  }
  v92 = a8;
  v27 = a11;
  v112 = *(_DWORD *)(v26 + 32);
  v126 = v112;
  v124 = off_24C335AF8;
  v111 = *(_QWORD *)(v26 + 36);
  v127 = v111;
  if (*(char *)(a11 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v121, *(const std::string::value_type **)(a11 + 8), *(_QWORD *)(a11 + 16));
    v27 = a11;
  }
  else
  {
    v121 = *(std::string *)(a11 + 8);
  }
  v115 = *(_DWORD *)(v27 + 32);
  v122 = v115;
  v120 = off_24C335AF8;
  v91 = v27;
  v114 = *(_QWORD *)(v27 + 36);
  v123 = v114;
  if (*(char *)(a12 + 31) < 0)
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)(a12 + 8), *(_QWORD *)(a12 + 16));
  else
    __p = *(std::string *)(a12 + 8);
  v113 = *(_DWORD *)(a12 + 32);
  v117 = v113;
  v118 = *(_QWORD *)(a12 + 36);
  v119 = *(_DWORD *)(a12 + 44);
  *a1 = &off_24C330F50;
  v28 = (std::string *)(a1 + 1);
  v93 = a7;
  if (SHIBYTE(v164.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v28, v164.__r_.__value_.__l.__data_, v164.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v28->__r_.__value_.__l.__data_ = *(_OWORD *)&v164.__r_.__value_.__l.__data_;
    a1[3] = *((_QWORD *)&v164.__r_.__value_.__l + 2);
  }
  a1[4] = 0;
  a1[5] = 0;
  a1[6] = 0;
  a1[7] = 0;
  *a1 = off_24C335520;
  a1[8] = 0;
  a1[9] = 0;
  v103 = a1;
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v210, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v210 = __s;
  v209 = off_24C335B18;
  v212 = v162;
  v211 = v19;
  v213 = v163;
  v204 = (uint64_t (**)())off_24C335D90;
  v97 = (__int128 *)(a5 + 8);
  if (SHIBYTE(v155.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v205, v155.__r_.__value_.__l.__data_, v155.__r_.__value_.__l.__size_);
  else
    v205 = v155;
  v206 = v156;
  v204 = &off_24C335AB8;
  v207 = v157;
  if (SHIBYTE(v158.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v208, v158.__r_.__value_.__l.__data_, v158.__r_.__value_.__l.__size_);
  else
    v208 = v158;
  v195 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v146.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v196, v146.__r_.__value_.__l.__data_, v146.__r_.__value_.__l.__size_);
  else
    v196 = v146;
  v197 = v147;
  v195 = &off_24C335A98;
  v198 = v148;
  v29 = v152;
  v30 = v150;
  v199 = &off_24C331510;
  v200 = v150;
  v201 = v150;
  if (v150)
    v31 = (void *)operator new[]();
  else
    v31 = 0;
  v202 = v31;
  v203 = 1;
  if (v29)
    memcpy(v31, v29, v30);
  else
    bzero(v31, v30);
  if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v192, v142.__r_.__value_.__l.__data_, v142.__r_.__value_.__l.__size_);
  else
    v192 = v142;
  v193 = v105;
  v191 = off_24C335AF8;
  v194 = v104;
  if (SHIBYTE(v137.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v187, v137.__r_.__value_.__l.__data_, v137.__r_.__value_.__l.__size_);
  else
    v187 = v137;
  v186 = off_24C335B18;
  v189 = v139;
  v188 = v106;
  v190 = v140;
  if (SHIBYTE(v133.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v183, v133.__r_.__value_.__l.__data_, v133.__r_.__value_.__l.__size_);
  else
    v183 = v133;
  v184 = v108;
  v182 = off_24C335AF8;
  v185 = v107;
  if (SHIBYTE(v129.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v179, v129.__r_.__value_.__l.__data_, v129.__r_.__value_.__l.__size_);
  else
    v179 = v129;
  v180 = v110;
  v178 = off_24C335AF8;
  v181 = v109;
  v95 = a5;
  if (SHIBYTE(v125.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v175, v125.__r_.__value_.__l.__data_, v125.__r_.__value_.__l.__size_);
  else
    v175 = v125;
  v176 = v112;
  v174 = off_24C335AF8;
  v177 = v111;
  v94 = a6;
  if (SHIBYTE(v121.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v171, v121.__r_.__value_.__l.__data_, v121.__r_.__value_.__l.__size_);
  else
    v171 = v121;
  v172 = v115;
  v170 = off_24C335AF8;
  v173 = v114;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v166, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  else
    v166 = __p;
  v165 = off_24C335B18;
  v168 = v118;
  v167 = v113;
  v169 = v119;
  v253 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v205.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v254, v205.__r_.__value_.__l.__data_, v205.__r_.__value_.__l.__size_);
  else
    v254 = v205;
  v255 = v206;
  v253 = &off_24C335AB8;
  v256 = v207;
  if (SHIBYTE(v208.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v257, v208.__r_.__value_.__l.__data_, v208.__r_.__value_.__l.__size_);
  else
    v257 = v208;
  v244 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v196.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v245, v196.__r_.__value_.__l.__data_, v196.__r_.__value_.__l.__size_);
  else
    v245 = v196;
  v246 = v197;
  v244 = &off_24C335A98;
  v247 = v198;
  v32 = v202;
  v33 = v200;
  v248 = &off_24C331510;
  v249 = v200;
  v250 = v200;
  if (v200)
    v34 = (void *)operator new[]();
  else
    v34 = 0;
  v251 = v34;
  v252 = 1;
  if (v32)
    memcpy(v34, v32, v33);
  else
    bzero(v34, v33);
  if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v241, v192.__r_.__value_.__l.__data_, v192.__r_.__value_.__l.__size_);
  else
    v241 = v192;
  v242 = v105;
  v240 = off_24C335AF8;
  v243 = v104;
  if (SHIBYTE(v187.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v236, v187.__r_.__value_.__l.__data_, v187.__r_.__value_.__l.__size_);
  else
    v236 = v187;
  v235 = off_24C335B18;
  v238 = v189;
  v237 = v106;
  v239 = v190;
  if (SHIBYTE(v183.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v232, v183.__r_.__value_.__l.__data_, v183.__r_.__value_.__l.__size_);
  else
    v232 = v183;
  v233 = v108;
  v231 = off_24C335AF8;
  v234 = v107;
  if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v228, v179.__r_.__value_.__l.__data_, v179.__r_.__value_.__l.__size_);
  else
    v228 = v179;
  v229 = v110;
  v227 = off_24C335AF8;
  v230 = v109;
  if (SHIBYTE(v175.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v224, v175.__r_.__value_.__l.__data_, v175.__r_.__value_.__l.__size_);
  else
    v224 = v175;
  v225 = v112;
  v223 = off_24C335AF8;
  v226 = v111;
  if (SHIBYTE(v171.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v220, v171.__r_.__value_.__l.__data_, v171.__r_.__value_.__l.__size_);
  else
    v220 = v171;
  v221 = v115;
  v219 = off_24C335AF8;
  v222 = v114;
  if (SHIBYTE(v166.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v215, v166.__r_.__value_.__l.__data_, v166.__r_.__value_.__l.__size_);
  else
    v215 = v166;
  v214 = off_24C335B18;
  v217 = v168;
  v216 = v113;
  v218 = v169;
  v288 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v245.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v289, v245.__r_.__value_.__l.__data_, v245.__r_.__value_.__l.__size_);
  else
    v289 = v245;
  v290 = v246;
  v288 = &off_24C335A98;
  v291 = v247;
  v35 = v251;
  v36 = v249;
  v292[0] = &off_24C331510;
  v292[1] = v249;
  v292[2] = v249;
  if (v249)
    v37 = (void *)operator new[]();
  else
    v37 = 0;
  v292[3] = v37;
  v293 = 1;
  if (v35)
    memcpy(v37, v35, v36);
  else
    bzero(v37, v36);
  if (SHIBYTE(v241.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v285, v241.__r_.__value_.__l.__data_, v241.__r_.__value_.__l.__size_);
  else
    v285 = v241;
  v286 = v105;
  v284 = off_24C335AF8;
  v287 = v104;
  v279 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v236.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v280, v236.__r_.__value_.__l.__data_, v236.__r_.__value_.__l.__size_);
  else
    v280 = v236;
  v279 = off_24C335B18;
  v282 = v238;
  v281 = v106;
  v283 = v239;
  v275 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v232.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v276, v232.__r_.__value_.__l.__data_, v232.__r_.__value_.__l.__size_);
  else
    v276 = v232;
  v277 = v108;
  v275 = off_24C335AF8;
  v278 = v107;
  v271 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v228.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v272, v228.__r_.__value_.__l.__data_, v228.__r_.__value_.__l.__size_);
  else
    v272 = v228;
  v273 = v110;
  v271 = off_24C335AF8;
  v274 = v109;
  v267 = (uint64_t (**)())off_24C335D90;
  v38 = SHIBYTE(v224.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v224.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v268, v224.__r_.__value_.__l.__data_, v224.__r_.__value_.__l.__size_);
  else
    v268 = v224;
  v269 = v112;
  v267 = off_24C335AF8;
  v270 = v111;
  v263 = (uint64_t (**)())off_24C335D90;
  v39 = SHIBYTE(v220.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v220.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v264, v220.__r_.__value_.__l.__data_, v220.__r_.__value_.__l.__size_);
  else
    v264 = v220;
  v265 = v115;
  v263 = off_24C335AF8;
  v266 = v114;
  v258 = (uint64_t (**)())off_24C335D90;
  v101 = SHIBYTE(v215.__r_.__value_.__r.__words[2]);
  v102 = v38;
  if (SHIBYTE(v215.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v259, v215.__r_.__value_.__l.__data_, v215.__r_.__value_.__l.__size_);
  else
    v259 = v215;
  v258 = off_24C335B18;
  v261 = v217;
  v260 = v113;
  v262 = v218;
  v320 = (uint64_t (**)())off_24C335D90;
  v40 = SHIBYTE(v285.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v285.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v321, v285.__r_.__value_.__l.__data_, v285.__r_.__value_.__l.__size_);
  else
    v321 = v285;
  v322 = v105;
  v320 = off_24C335AF8;
  v323 = v104;
  v315 = (uint64_t (**)())off_24C335D90;
  v99 = SHIBYTE(v280.__r_.__value_.__r.__words[2]);
  v100 = v40;
  if (SHIBYTE(v280.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v316, v280.__r_.__value_.__l.__data_, v280.__r_.__value_.__l.__size_);
  else
    v316 = v280;
  v315 = off_24C335B18;
  v318 = v238;
  v317 = v106;
  v319 = v239;
  v311 = (uint64_t (**)())off_24C335D90;
  v90 = SHIBYTE(v276.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v276.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v312, v276.__r_.__value_.__l.__data_, v276.__r_.__value_.__l.__size_);
  else
    v312 = v276;
  v313 = v108;
  v311 = off_24C335AF8;
  v314 = v107;
  v307 = (uint64_t (**)())off_24C335D90;
  v89 = SHIBYTE(v272.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v272.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v308, v272.__r_.__value_.__l.__data_, v272.__r_.__value_.__l.__size_);
  else
    v308 = v272;
  v309 = v110;
  v307 = off_24C335AF8;
  v310 = v109;
  v303 = (uint64_t (**)())off_24C335D90;
  v88 = SHIBYTE(v268.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v268.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v304, v268.__r_.__value_.__l.__data_, v268.__r_.__value_.__l.__size_);
  else
    v304 = v268;
  v305 = v112;
  v303 = off_24C335AF8;
  v306 = v111;
  v299 = (uint64_t (**)())off_24C335D90;
  v86 = SHIBYTE(v264.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v264.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v300, v264.__r_.__value_.__l.__data_, v264.__r_.__value_.__l.__size_);
  else
    v300 = v264;
  v301 = v115;
  v299 = off_24C335AF8;
  v302 = v114;
  v294 = (uint64_t (**)())off_24C335D90;
  v84 = SHIBYTE(v259.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v259.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v295, v259.__r_.__value_.__l.__data_, v259.__r_.__value_.__l.__size_);
  else
    v295 = v259;
  v294 = off_24C335B18;
  v297 = v217;
  v296 = v113;
  v298 = v218;
  v345 = (uint64_t (**)())off_24C335D90;
  v41 = SHIBYTE(v316.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v316.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v346, v316.__r_.__value_.__l.__data_, v316.__r_.__value_.__l.__size_);
  else
    v346 = v316;
  v345 = off_24C335B18;
  v348 = v238;
  v347 = v106;
  v349 = v239;
  v341 = (uint64_t (**)())off_24C335D90;
  v87 = SHIBYTE(v312.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v312.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v342, v312.__r_.__value_.__l.__data_, v312.__r_.__value_.__l.__size_);
  else
    v342 = v312;
  v343 = v108;
  v341 = off_24C335AF8;
  v344 = v107;
  v337 = (uint64_t (**)())off_24C335D90;
  v42 = SHIBYTE(v308.__r_.__value_.__r.__words[2]);
  v85 = v41;
  if (SHIBYTE(v308.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v338, v308.__r_.__value_.__l.__data_, v308.__r_.__value_.__l.__size_);
  else
    v338 = v308;
  v339 = v110;
  v337 = off_24C335AF8;
  v340 = v109;
  v333 = (uint64_t (**)())off_24C335D90;
  v82 = SHIBYTE(v304.__r_.__value_.__r.__words[2]);
  v83 = v42;
  if (SHIBYTE(v304.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v334, v304.__r_.__value_.__l.__data_, v304.__r_.__value_.__l.__size_);
  else
    v334 = v304;
  v335 = v112;
  v333 = off_24C335AF8;
  v336 = v111;
  v329 = (uint64_t (**)())off_24C335D90;
  v43 = SHIBYTE(v300.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v300.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v330, v300.__r_.__value_.__l.__data_, v300.__r_.__value_.__l.__size_);
  else
    v330 = v300;
  v331 = v115;
  v329 = off_24C335AF8;
  v332 = v114;
  v324 = (uint64_t (**)())off_24C335D90;
  v81 = SHIBYTE(v295.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v295.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v325, v295.__r_.__value_.__l.__data_, v295.__r_.__value_.__l.__size_);
  else
    v325 = v295;
  v324 = off_24C335B18;
  v327 = v217;
  v326 = v113;
  v328 = v218;
  v367 = (uint64_t (**)())off_24C335D90;
  v44 = SHIBYTE(v342.__r_.__value_.__r.__words[2]);
  v80 = v43;
  if (SHIBYTE(v342.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v368, v342.__r_.__value_.__l.__data_, v342.__r_.__value_.__l.__size_);
  else
    v368 = v342;
  v369 = v108;
  v367 = off_24C335AF8;
  v370 = v107;
  v363 = (uint64_t (**)())off_24C335D90;
  v79 = SHIBYTE(v338.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v338.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v364, v338.__r_.__value_.__l.__data_, v338.__r_.__value_.__l.__size_);
  else
    v364 = v338;
  v365 = v110;
  v363 = off_24C335AF8;
  v366 = v109;
  v359 = (uint64_t (**)())off_24C335D90;
  v77 = SHIBYTE(v334.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v334.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v360, v334.__r_.__value_.__l.__data_, v334.__r_.__value_.__l.__size_);
  else
    v360 = v334;
  v361 = v112;
  v359 = off_24C335AF8;
  v362 = v111;
  v355 = (uint64_t (**)())off_24C335D90;
  v76 = SHIBYTE(v330.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v330.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v356, v330.__r_.__value_.__l.__data_, v330.__r_.__value_.__l.__size_);
  else
    v356 = v330;
  v357 = v115;
  v355 = off_24C335AF8;
  v358 = v114;
  v350 = (uint64_t (**)())off_24C335D90;
  v75 = SHIBYTE(v325.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v325.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v351, v325.__r_.__value_.__l.__data_, v325.__r_.__value_.__l.__size_);
  else
    v351 = v325;
  v350 = off_24C335B18;
  v353 = v217;
  v352 = v113;
  v354 = v218;
  v384 = (uint64_t (**)())off_24C335D90;
  v45 = SHIBYTE(v364.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v364.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v385, v364.__r_.__value_.__l.__data_, v364.__r_.__value_.__l.__size_);
  else
    v385 = v364;
  v386 = v110;
  v384 = off_24C335AF8;
  v387 = v109;
  v380 = (uint64_t (**)())off_24C335D90;
  v74 = SHIBYTE(v360.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v360.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v381, v360.__r_.__value_.__l.__data_, v360.__r_.__value_.__l.__size_);
  else
    v381 = v360;
  v382 = v112;
  v380 = off_24C335AF8;
  v383 = v111;
  v376 = (uint64_t (**)())off_24C335D90;
  v46 = SHIBYTE(v356.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v356.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v377, v356.__r_.__value_.__l.__data_, v356.__r_.__value_.__l.__size_);
  else
    v377 = v356;
  v378 = v115;
  v376 = off_24C335AF8;
  v379 = v114;
  v371 = (uint64_t (**)())off_24C335D90;
  v73 = SHIBYTE(v351.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v351.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v372, v351.__r_.__value_.__l.__data_, v351.__r_.__value_.__l.__size_);
  else
    v372 = v351;
  v371 = off_24C335B18;
  v374 = v217;
  v373 = v113;
  v375 = v218;
  v397 = off_24C335D90;
  v47 = SHIBYTE(v381.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v381.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v398, v381.__r_.__value_.__l.__data_, v381.__r_.__value_.__l.__size_);
  else
    v398 = v381;
  v399 = v112;
  v400 = v111;
  v393 = off_24C335D90;
  v72 = SHIBYTE(v377.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v377.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v394, v377.__r_.__value_.__l.__data_, v377.__r_.__value_.__l.__size_);
  else
    v394 = v377;
  v395 = v115;
  v396 = v114;
  v388 = off_24C335D90;
  v48 = SHIBYTE(v372.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v372.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v389, v372.__r_.__value_.__l.__data_, v372.__r_.__value_.__l.__size_);
  else
    v389 = v372;
  v391 = v217;
  v390 = v113;
  v392 = v218;
  v406 = off_24C335D90;
  v78 = SHIBYTE(v394.__r_.__value_.__r.__words[2]);
  v71 = v45;
  if (SHIBYTE(v394.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v407, v394.__r_.__value_.__l.__data_, v394.__r_.__value_.__l.__size_);
  else
    v407 = v394;
  v408 = v115;
  v409 = v114;
  v401 = off_24C335D90;
  v49 = SHIBYTE(v389.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v389.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v402, v389.__r_.__value_.__l.__data_, v389.__r_.__value_.__l.__size_);
  else
    v402 = v389;
  v404 = v217;
  v403 = v113;
  v405 = v218;
  v410 = off_24C335D90;
  v50 = SHIBYTE(v402.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v402.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v411, v402.__r_.__value_.__l.__data_, v402.__r_.__value_.__l.__size_);
  else
    v411 = v402;
  v413 = v217;
  v412 = v113;
  v414 = v218;
  v103[10] = off_24C335D90;
  if (SHIBYTE(v411.__r_.__value_.__r.__words[2]) < 0)
  {
    v52 = v411.__r_.__value_.__r.__words[0];
    std::string::__init_copy_ctor_external((std::string *)(v103 + 11), v411.__r_.__value_.__l.__data_, v411.__r_.__value_.__l.__size_);
    *((_DWORD *)v103 + 28) = v113;
    v103[10] = off_24C335B18;
    *(_QWORD *)((char *)v103 + 116) = v217;
    *((_DWORD *)v103 + 31) = v218;
    v410 = off_24C335D90;
    v53 = (void *)v52;
    v51 = v103;
    operator delete(v53);
  }
  else
  {
    *(std::string *)(v103 + 11) = v411;
    *((_DWORD *)v103 + 28) = v113;
    v103[10] = off_24C335B18;
    *(_QWORD *)((char *)v103 + 116) = v217;
    *((_DWORD *)v103 + 31) = v218;
    v410 = off_24C335D90;
    v51 = v103;
  }
  v51[16] = off_24C335D90;
  v54 = (std::string *)(v51 + 17);
  v55 = SHIBYTE(v407.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v407.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v54, v407.__r_.__value_.__l.__data_, v407.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v54->__r_.__value_.__l.__data_ = *(_OWORD *)&v407.__r_.__value_.__l.__data_;
    v51[19] = *((_QWORD *)&v407.__r_.__value_.__l + 2);
  }
  *((_DWORD *)v51 + 40) = v115;
  v51[16] = off_24C335AF8;
  *(_QWORD *)((char *)v51 + 164) = v114;
  v401 = off_24C335D90;
  if (v50 < 0)
    operator delete(v402.__r_.__value_.__l.__data_);
  v406 = off_24C335D90;
  if (v55 < 0)
    operator delete(v407.__r_.__value_.__l.__data_);
  v51[22] = off_24C335D90;
  v56 = (std::string *)(v51 + 23);
  v57 = SHIBYTE(v398.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v398.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v56, v398.__r_.__value_.__l.__data_, v398.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v56->__r_.__value_.__l.__data_ = *(_OWORD *)&v398.__r_.__value_.__l.__data_;
    v51[25] = *((_QWORD *)&v398.__r_.__value_.__l + 2);
  }
  *((_DWORD *)v51 + 52) = v112;
  v51[22] = off_24C335AF8;
  *(_QWORD *)((char *)v51 + 212) = v111;
  v388 = off_24C335D90;
  if (v49 < 0)
    operator delete(v389.__r_.__value_.__l.__data_);
  v393 = off_24C335D90;
  if (v78 < 0)
    operator delete(v394.__r_.__value_.__l.__data_);
  v397 = off_24C335D90;
  if (v57 < 0)
    operator delete(v398.__r_.__value_.__l.__data_);
  v51[28] = off_24C335D90;
  v58 = (std::string *)(v51 + 29);
  v59 = SHIBYTE(v385.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v385.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v58, v385.__r_.__value_.__l.__data_, v385.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v58->__r_.__value_.__l.__data_ = *(_OWORD *)&v385.__r_.__value_.__l.__data_;
    v51[31] = *((_QWORD *)&v385.__r_.__value_.__l + 2);
  }
  *((_DWORD *)v51 + 64) = v110;
  v51[28] = off_24C335AF8;
  *(_QWORD *)((char *)v51 + 260) = v109;
  v371 = (uint64_t (**)())off_24C335D90;
  if (v48 < 0)
    operator delete(v372.__r_.__value_.__l.__data_);
  v376 = (uint64_t (**)())off_24C335D90;
  if (v72 < 0)
    operator delete(v377.__r_.__value_.__l.__data_);
  v380 = (uint64_t (**)())off_24C335D90;
  if (v47 < 0)
    operator delete(v381.__r_.__value_.__l.__data_);
  v384 = (uint64_t (**)())off_24C335D90;
  if (v59 < 0)
    operator delete(v385.__r_.__value_.__l.__data_);
  v51[34] = off_24C335D90;
  v60 = (std::string *)(v51 + 35);
  v61 = SHIBYTE(v368.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v368.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v60, v368.__r_.__value_.__l.__data_, v368.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v60->__r_.__value_.__l.__data_ = *(_OWORD *)&v368.__r_.__value_.__l.__data_;
    v51[37] = *((_QWORD *)&v368.__r_.__value_.__l + 2);
  }
  *((_DWORD *)v51 + 76) = v108;
  v51[34] = off_24C335AF8;
  *(_QWORD *)((char *)v51 + 308) = v107;
  v350 = (uint64_t (**)())off_24C335D90;
  if (v73 < 0)
    operator delete(v351.__r_.__value_.__l.__data_);
  v355 = (uint64_t (**)())off_24C335D90;
  if (v46 < 0)
    operator delete(v356.__r_.__value_.__l.__data_);
  v359 = (uint64_t (**)())off_24C335D90;
  if (v74 < 0)
    operator delete(v360.__r_.__value_.__l.__data_);
  v363 = (uint64_t (**)())off_24C335D90;
  if (v71 < 0)
    operator delete(v364.__r_.__value_.__l.__data_);
  v367 = (uint64_t (**)())off_24C335D90;
  if (v61 < 0)
    operator delete(v368.__r_.__value_.__l.__data_);
  v51[40] = off_24C335D90;
  v62 = (std::string *)(v51 + 41);
  v63 = SHIBYTE(v346.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v346.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v62, v346.__r_.__value_.__l.__data_, v346.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v62->__r_.__value_.__l.__data_ = *(_OWORD *)&v346.__r_.__value_.__l.__data_;
    v51[43] = *((_QWORD *)&v346.__r_.__value_.__l + 2);
  }
  *((_DWORD *)v51 + 88) = v106;
  v51[40] = off_24C335B18;
  *(_QWORD *)((char *)v51 + 356) = v348;
  *((_DWORD *)v51 + 91) = v349;
  v324 = (uint64_t (**)())off_24C335D90;
  if (v75 < 0)
    operator delete(v325.__r_.__value_.__l.__data_);
  v329 = (uint64_t (**)())off_24C335D90;
  if (v76 < 0)
    operator delete(v330.__r_.__value_.__l.__data_);
  v333 = (uint64_t (**)())off_24C335D90;
  if (v77 < 0)
    operator delete(v334.__r_.__value_.__l.__data_);
  v337 = (uint64_t (**)())off_24C335D90;
  if (v79 < 0)
    operator delete(v338.__r_.__value_.__l.__data_);
  v341 = (uint64_t (**)())off_24C335D90;
  if (v44 < 0)
    operator delete(v342.__r_.__value_.__l.__data_);
  v345 = (uint64_t (**)())off_24C335D90;
  if (v63 < 0)
    operator delete(v346.__r_.__value_.__l.__data_);
  v51[46] = off_24C335D90;
  v64 = (std::string *)(v51 + 47);
  v65 = SHIBYTE(v321.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v321.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v64, v321.__r_.__value_.__l.__data_, v321.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v64->__r_.__value_.__l.__data_ = *(_OWORD *)&v321.__r_.__value_.__l.__data_;
    v51[49] = *((_QWORD *)&v321.__r_.__value_.__l + 2);
  }
  *((_DWORD *)v51 + 100) = v105;
  v51[46] = off_24C335AF8;
  *(_QWORD *)((char *)v51 + 404) = v104;
  v294 = (uint64_t (**)())off_24C335D90;
  if (v81 < 0)
    operator delete(v295.__r_.__value_.__l.__data_);
  v299 = (uint64_t (**)())off_24C335D90;
  if (v80 < 0)
    operator delete(v300.__r_.__value_.__l.__data_);
  v303 = (uint64_t (**)())off_24C335D90;
  if (v82 < 0)
    operator delete(v304.__r_.__value_.__l.__data_);
  v307 = (uint64_t (**)())off_24C335D90;
  if (v83 < 0)
    operator delete(v308.__r_.__value_.__l.__data_);
  v311 = (uint64_t (**)())off_24C335D90;
  if (v87 < 0)
    operator delete(v312.__r_.__value_.__l.__data_);
  v315 = (uint64_t (**)())off_24C335D90;
  if (v85 < 0)
    operator delete(v316.__r_.__value_.__l.__data_);
  v320 = (uint64_t (**)())off_24C335D90;
  if (v65 < 0)
    operator delete(v321.__r_.__value_.__l.__data_);
  v51[52] = off_24C335D90;
  if (SHIBYTE(v289.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)(v51 + 53), v289.__r_.__value_.__l.__data_, v289.__r_.__value_.__l.__size_);
  else
    *(std::string *)(v51 + 53) = v289;
  *((_DWORD *)v51 + 112) = v290;
  v51[52] = &off_24C335A98;
  *((_BYTE *)v51 + 452) = v291;
  mediaplatform::Data::Data((mediaplatform::Data *)(v51 + 57), (const mediaplatform::Data *)v292);
  v258 = (uint64_t (**)())off_24C335D90;
  if (v84 < 0)
    operator delete(v259.__r_.__value_.__l.__data_);
  v263 = (uint64_t (**)())off_24C335D90;
  if (v86 < 0)
    operator delete(v264.__r_.__value_.__l.__data_);
  v267 = (uint64_t (**)())off_24C335D90;
  if (v88 < 0)
    operator delete(v268.__r_.__value_.__l.__data_);
  v271 = (uint64_t (**)())off_24C335D90;
  if (v89 < 0)
    operator delete(v272.__r_.__value_.__l.__data_);
  v275 = (uint64_t (**)())off_24C335D90;
  if (v90 < 0)
    operator delete(v276.__r_.__value_.__l.__data_);
  v279 = (uint64_t (**)())off_24C335D90;
  if (v99 < 0)
    operator delete(v280.__r_.__value_.__l.__data_);
  v284 = (uint64_t (**)())off_24C335D90;
  if (v100 < 0)
    operator delete(v285.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)&v288);
  v51[62] = off_24C335D90;
  if (SHIBYTE(v254.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)v51 + 21, v254.__r_.__value_.__l.__data_, v254.__r_.__value_.__l.__size_);
  else
    *((std::string *)v51 + 21) = v254;
  *((_DWORD *)v51 + 132) = v255;
  v51[62] = &off_24C335AB8;
  *((_BYTE *)v51 + 532) = v256;
  v66 = (std::string *)(v51 + 67);
  if (SHIBYTE(v257.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v66, v257.__r_.__value_.__l.__data_, v257.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v66->__r_.__value_.__l.__data_ = *(_OWORD *)&v257.__r_.__value_.__l.__data_;
    v51[69] = *((_QWORD *)&v257.__r_.__value_.__l + 2);
  }
  v214 = (uint64_t (**)())off_24C335D90;
  if (v101 < 0)
    operator delete(v215.__r_.__value_.__l.__data_);
  v219 = (uint64_t (**)())off_24C335D90;
  if (v39 < 0)
    operator delete(v220.__r_.__value_.__l.__data_);
  v223 = (uint64_t (**)())off_24C335D90;
  if (v102 < 0)
    operator delete(v224.__r_.__value_.__l.__data_);
  v227 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v228.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v228.__r_.__value_.__l.__data_);
  v231 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v232.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v232.__r_.__value_.__l.__data_);
  if (SHIBYTE(v236.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v236.__r_.__value_.__l.__data_);
  if (SHIBYTE(v241.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v241.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)&v244);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v253);
  v51[70] = off_24C335D90;
  v67 = (std::string *)(v51 + 71);
  v68 = SHIBYTE(v210.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v210.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v67, v210.__r_.__value_.__l.__data_, v210.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v67->__r_.__value_.__l.__data_ = *(_OWORD *)&v210.__r_.__value_.__l.__data_;
    v51[73] = *((_QWORD *)&v210.__r_.__value_.__l + 2);
  }
  *((_DWORD *)v51 + 148) = v211;
  v51[70] = off_24C335B18;
  *(_QWORD *)((char *)v51 + 596) = v212;
  *((_DWORD *)v51 + 151) = v213;
  v165 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v166.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v166.__r_.__value_.__l.__data_);
  v170 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v171.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v171.__r_.__value_.__l.__data_);
  v174 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v175.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v175.__r_.__value_.__l.__data_);
  v178 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v179.__r_.__value_.__l.__data_);
  if (SHIBYTE(v183.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v183.__r_.__value_.__l.__data_);
  if (SHIBYTE(v187.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v187.__r_.__value_.__l.__data_);
  if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v192.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)&v195);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v204);
  if (v68 < 0)
    operator delete(v210.__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v121.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v121.__r_.__value_.__l.__data_);
  if (SHIBYTE(v125.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v125.__r_.__value_.__l.__data_);
  if (SHIBYTE(v129.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v129.__r_.__value_.__l.__data_);
  if (SHIBYTE(v133.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v133.__r_.__value_.__l.__data_);
  if (SHIBYTE(v137.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v137.__r_.__value_.__l.__data_);
  if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v142.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)&v145);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v154);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__s.__r_.__value_.__l.__data_);
  if (SHIBYTE(v164.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v164.__r_.__value_.__l.__data_);
  *v51 = &off_24C336088;
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>((uint64_t)(v51 + 76), v98);
  std::__tuple_leaf<1ul,mlcore::MediaColumn<std::string>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<std::string>&,void>((uint64_t)(v51 + 82), v96);
  v51[90] = off_24C335D90;
  if (*(char *)(v95 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(v51 + 91), *(const std::string::value_type **)(v95 + 8), *(_QWORD *)(v95 + 16));
  }
  else
  {
    v69 = *v97;
    v51[93] = *((_QWORD *)v97 + 2);
    *(_OWORD *)(v51 + 91) = v69;
  }
  *((_DWORD *)v51 + 188) = *(_DWORD *)(v95 + 32);
  v51[90] = &off_24C335A98;
  *((_BYTE *)v51 + 756) = *(_BYTE *)(v95 + 36);
  mediaplatform::Data::Data((mediaplatform::Data *)(v51 + 95), (const mediaplatform::Data *)(v95 + 40));
  v51[90] = &off_24C336A40;
  std::__tuple_leaf<3ul,mlcore::MediaColumn<int>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<int>&,void>((uint64_t)(v51 + 100), v94);
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>((uint64_t)(v51 + 106), v93);
  std::__tuple_leaf<3ul,mlcore::MediaColumn<int>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<int>&,void>((uint64_t)(v51 + 112), v92);
  std::__tuple_leaf<3ul,mlcore::MediaColumn<int>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<int>&,void>((uint64_t)(v51 + 118), a9);
  std::__tuple_leaf<3ul,mlcore::MediaColumn<int>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<int>&,void>((uint64_t)(v51 + 124), a10);
  std::__tuple_leaf<3ul,mlcore::MediaColumn<int>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<int>&,void>((uint64_t)(v51 + 130), v91);
  std::__tuple_leaf<0ul,mlcore::MediaColumn<long long>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<long long>&,void>((uint64_t)(v51 + 136), a12);
  return v51;
}

void sub_20A8E4988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,mediaplatform::DatabaseTableBase *a46)
{
  uint64_t v46;

  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(v46);
  *((_QWORD *)a46 + 76) = off_24C335D90;
  if (*((char *)a46 + 639) < 0)
    operator delete(*((void **)a46 + 77));
  mediaplatform::DatabaseTable<long long,std::string,mediaplatform::Data,int,long long,int,int,int,int,long long>::~DatabaseTable((uint64_t)a46);
  _Unwind_Resume(a1);
}

void sub_20A8E5464()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 720) = v1;
  if (*(char *)(v2 + 751) < 0)
    operator delete(*v0);
  JUMPOUT(0x20A8E5428);
}

void sub_20A8E5480()
{
  JUMPOUT(0x20A8E5430);
}

void sub_20A8E5488()
{
  JUMPOUT(0x20A8E5454);
}

void sub_20A8E5490()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 416) = v1;
  if (*(char *)(v2 + 447) < 0)
    operator delete(*v0);
  mediaplatform::DatabaseColumnTuple<14ul,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<double>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>>::~DatabaseColumnTuple(v3);
  JUMPOUT(0x20A8E4D90);
}

void mlcore::GenreTable::~GenreTable(mlcore::GenreTable *this)
{
  mlcore::MediaTable<long long,std::string,mediaplatform::Data,int,long long,int,int,int,int,long long>::~MediaTable((uint64_t)this);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mediaplatform::DatabaseTable<long long,std::string,mediaplatform::Data,int,long long,int,int,int,int,long long>::columnCount()
{
  return 10;
}

void mlcore::MediaTable<long long,std::string,mediaplatform::Data,int,long long,int,int,int,int,long long>::~MediaTable(uint64_t a1)
{
  *(_QWORD *)a1 = &off_24C336088;
  *(_QWORD *)(a1 + 1088) = off_24C335D90;
  if (*(char *)(a1 + 1119) < 0)
    operator delete(*(void **)(a1 + 1096));
  *(_QWORD *)(a1 + 1040) = off_24C335D90;
  if (*(char *)(a1 + 1071) < 0)
    operator delete(*(void **)(a1 + 1048));
  *(_QWORD *)(a1 + 992) = off_24C335D90;
  if (*(char *)(a1 + 1023) < 0)
    operator delete(*(void **)(a1 + 1000));
  *(_QWORD *)(a1 + 944) = off_24C335D90;
  if (*(char *)(a1 + 975) < 0)
    operator delete(*(void **)(a1 + 952));
  *(_QWORD *)(a1 + 896) = off_24C335D90;
  if (*(char *)(a1 + 927) < 0)
    operator delete(*(void **)(a1 + 904));
  *(_QWORD *)(a1 + 848) = off_24C335D90;
  if (*(char *)(a1 + 879) < 0)
    operator delete(*(void **)(a1 + 856));
  *(_QWORD *)(a1 + 800) = off_24C335D90;
  if (*(char *)(a1 + 831) < 0)
    operator delete(*(void **)(a1 + 808));
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn(a1 + 720);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 656);
  *(_QWORD *)(a1 + 608) = off_24C335D90;
  if (*(char *)(a1 + 639) < 0)
    operator delete(*(void **)(a1 + 616));
  *(_QWORD *)a1 = off_24C335520;
  *(_QWORD *)(a1 + 560) = off_24C335D90;
  if (*(char *)(a1 + 591) < 0)
    operator delete(*(void **)(a1 + 568));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 496);
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn(a1 + 416);
  *(_QWORD *)(a1 + 368) = off_24C335D90;
  if (*(char *)(a1 + 399) < 0)
    operator delete(*(void **)(a1 + 376));
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>>::~__tuple_impl(a1 + 80);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
}

{
  mlcore::MediaTable<long long,std::string,mediaplatform::Data,int,long long,int,int,int,int,long long>::~MediaTable(a1);
  JUMPOUT(0x20BD27AFCLL);
}

void mediaplatform::DatabaseTable<long long,std::string,mediaplatform::Data,int,long long,int,int,int,int,long long>::~DatabaseTable(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = off_24C335520;
  v2 = a1 + 80;
  *(_QWORD *)(a1 + 560) = off_24C335D90;
  if (*(char *)(a1 + 591) < 0)
    operator delete(*(void **)(a1 + 568));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 496);
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn(a1 + 416);
  *(_QWORD *)(a1 + 368) = off_24C335D90;
  if (*(char *)(a1 + 399) < 0)
    operator delete(*(void **)(a1 + 376));
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>>::~__tuple_impl(v2);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
}

{
  uint64_t v2;

  *(_QWORD *)a1 = off_24C335520;
  v2 = a1 + 80;
  *(_QWORD *)(a1 + 560) = off_24C335D90;
  if (*(char *)(a1 + 591) < 0)
    operator delete(*(void **)(a1 + 568));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 496);
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn(a1 + 416);
  *(_QWORD *)(a1 + 368) = off_24C335D90;
  if (*(char *)(a1 + 399) < 0)
    operator delete(*(void **)(a1 + 376));
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>>::~__tuple_impl(v2);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
  JUMPOUT(0x20BD27AFCLL);
}

{
  uint64_t v2;

  *(_QWORD *)a1 = off_24C335520;
  v2 = a1 + 80;
  *(_QWORD *)(a1 + 560) = off_24C335D90;
  if (*(char *)(a1 + 591) < 0)
    operator delete(*(void **)(a1 + 568));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 496);
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn(a1 + 416);
  *(_QWORD *)(a1 + 368) = off_24C335D90;
  if (*(char *)(a1 + 399) < 0)
    operator delete(*(void **)(a1 + 376));
  std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>>::~__tuple_impl(v2);
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<1ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 416);
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn(a1 + 336);
  *(_QWORD *)(a1 + 288) = off_24C335D90;
  if (*(char *)(a1 + 319) < 0)
    operator delete(*(void **)(a1 + 296));
  return std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>>::~__tuple_impl(a1);
}

uint64_t mediaplatform::DatabaseColumnTuple<2ul,mediaplatform::DatabaseColumn<mediaplatform::Data>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<int>,mediaplatform::DatabaseColumn<long long>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn(a1 + 336);
  *(_QWORD *)(a1 + 288) = off_24C335D90;
  if (*(char *)(a1 + 319) < 0)
    operator delete(*(void **)(a1 + 296));
  return std::__tuple_impl<std::__tuple_indices<0ul,1ul,2ul,3ul,4ul,5ul>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<long long>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>,mlcore::MediaColumn<int>>::~__tuple_impl(a1);
}

void mlcore::GenreTable::persistentIDColumn(mlcore::GenreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 639) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 77), *((_QWORD *)this + 78));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 616);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 79);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 160);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 163);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 644);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::GenreTable::nameColumn(mlcore::GenreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 687) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 83), *((_QWORD *)this + 84));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 664);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 85);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 172);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 692);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 719) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 87), *((_QWORD *)this + 88));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 696);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 89);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8E59F4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

mediaplatform::Data *mlcore::GenreTable::groupingKeyColumn@<X0>(mlcore::GenreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  mediaplatform::Data *result;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 751) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 91), *((_QWORD *)this + 92));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 728);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 93);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 188);
  *(_QWORD *)a2 = &off_24C335A98;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 756);
  result = mediaplatform::Data::Data((mediaplatform::Data *)(a2 + 40), (mlcore::GenreTable *)((char *)this + 760));
  *(_QWORD *)a2 = &off_24C336A40;
  return result;
}

void sub_20A8E5AB0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::GenreTable::cloudStatusColumn(mlcore::GenreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 831) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 101), *((_QWORD *)this + 102));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 808);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 103);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 208);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 836);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::GenreTable::representativeItemPersistentIDColumn(mlcore::GenreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 879) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 107), *((_QWORD *)this + 108));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 856);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 109);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 220);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 223);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 884);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::GenreTable::keepLocalColumn(mlcore::GenreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 927) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 113), *((_QWORD *)this + 114));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 904);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 115);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 232);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 932);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::GenreTable::keepLocalStatusColumn(mlcore::GenreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 975) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 119), *((_QWORD *)this + 120));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 952);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 121);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 244);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 980);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::GenreTable::keepLocalStatusReasonColumn(mlcore::GenreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 1023) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 125), *((_QWORD *)this + 126));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1000);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 127);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 256);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 1028);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::GenreTable::keepLocalConstraintsColumn(mlcore::GenreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 1071) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 131), *((_QWORD *)this + 132));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1048);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 133);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 268);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 1076);
  *(_QWORD *)a2 = off_24C336AA0;
}

void mlcore::GenreTable::syncIDColumn(mlcore::GenreTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 1119) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 137), *((_QWORD *)this + 138));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 1096);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 139);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 280);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 283);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 1124);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::Genre::~Genre(mlcore::Genre *this)
{
  *(_QWORD *)this = off_24C33A860;
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase((_QWORD *)this + 1);
}

{
  *(_QWORD *)this = off_24C33A860;
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase((_QWORD *)this + 1);
  JUMPOUT(0x20BD27AFCLL);
}

{
  *(_QWORD *)this = off_24C33A860;
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase((_QWORD *)this + 1);
}

double std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::TypedEntityClass<mlcore::Genre>::sharedPointer(void)::{lambda(void)#1} &&>>()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_QWORD *)(v0 + 96) = 0;
  *(_DWORD *)(v0 + 104) = 1065353216;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_DWORD *)(v0 + 144) = 1065353216;
  *(_QWORD *)v0 = &off_24C338CF0;
  *(_QWORD *)(v0 + 8) = 850045863;
  mlcore::TypedEntityClass<mlcore::Genre>::sharedPointer(void)::__sharedPointer = v0;
  return result;
}

void mlcore::TypedEntityClass<mlcore::Genre>::~TypedEntityClass(mlcore::EntityClass *a1)
{
  mlcore::EntityClass::~EntityClass(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mlcore::TypedEntityClass<mlcore::Genre>::description(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1);
}

double mlcore::TypedEntityClass<mlcore::Genre>::create@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _OWORD *a4@<X8>)
{
  double v8;
  unint64_t *v9;
  uint64_t v10;
  double result;
  double v12[3];
  unint64_t v13[3];
  unint64_t *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  std::allocate_shared[abi:ne180100]<mlcore::Genre,std::allocator<mlcore::Genre>,long long &,void>(v12, a2);
  v8 = v12[0];
  v13[0] = (unint64_t)&off_24C33B140;
  v14 = v13;
  mlcore::PropertyCache::mergePropertiesFromCache(*(_QWORD *)&v12[0] + 8, a3, (uint64_t)v13);
  v9 = v14;
  if (v14 == v13)
  {
    v10 = 4;
    v9 = v13;
    goto LABEL_5;
  }
  if (v14)
  {
    v10 = 5;
LABEL_5:
    (*(void (**)(void))(*v9 + 8 * v10))();
  }
  v13[0] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 112))(a1);
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>(*(_QWORD *)&v8 + 176, v13[0], v13)[3] = a2;
  result = v12[0];
  *a4 = *(_OWORD *)v12;
  return result;
}

void sub_20A8E604C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char *a15)
{
  char *v15;
  char *v17;
  uint64_t v18;

  v17 = a15;
  if (a15 == v15)
  {
    v18 = 4;
    v17 = &a12;
  }
  else
  {
    if (!a15)
      goto LABEL_6;
    v18 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v17 + 8 * v18))();
LABEL_6:
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t mlcore::TypedEntityClass<mlcore::Genre>::name(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
}

BOOL mlcore::TypedEntityClass<mlcore::Genre>::isRevisionTrackable(uint64_t a1)
{
  return (*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 64))(a1) != -1;
}

uint64_t mlcore::TypedEntityClass<mlcore::Genre>::isCloudUpdatable()
{
  return 0;
}

void mlcore::TypedEntityClass<mlcore::Genre>::databaseTablesToDeleteFrom(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

void mlcore::TypedEntityClass<mlcore::Genre>::databaseTablesToInsertInto(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::Genre>::trackForeignOrderingProperty()
{
  return 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::Genre>::sectionPropertyForOrderingProperty(mlcore *a1, mlcore *a2)
{
  mlcore *v3;

  v3 = (mlcore *)mlcore::GenrePropertyOrder(a1);
  if (v3 == a2)
    return mlcore::GenrePropertyOrderSection(v3);
  else
    return 0;
}

uint64_t mlcore::GenrePropertyOrderSection(mlcore *this)
{
  mlcore *v1;
  uint64_t v2;
  uint64_t v4[2];

  v1 = (mlcore *)mlcore::GenrePropertyRepresentativeItemPersistentID(this);
  v2 = mlcore::ItemPropertyGenreOrderSection(v1);
  v4[0] = 0;
  v4[1] = 0;
  return mlcore::GetForeignProperty<int>((uint64_t)v1, v2, v4);
}

void sub_20A8E6174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::GenrePropertyRepresentativeItemPersistentID(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::GenreTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __p;
  char v23;
  _QWORD v24[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::GenreTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v24[0] = *v1;
  v24[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::GenreTable **)mediaplatform::Singleton<mlcore::GenreTable>::sharedInstance();
  mlcore::GenreTable::representativeItemPersistentIDColumn(*v5, (uint64_t)&__p);
  mlcore::DatabaseModelProperty<long long>::DatabaseModelProperty(v0, v24, (uint64_t)&__p);
  mlcore::GenrePropertyRepresentativeItemPersistentID(void)::property = v0;
  if (v23 < 0)
    operator delete((void *)__p.__r_.__value_.__l.__size_);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::GenrePropertyRepresentativeItemPersistentID(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  std::string::operator=((std::string *)(v8 + 40), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::Genre>::sharedPointer();
  v10 = mlcore::GenrePropertyRepresentativeItemPersistentID(void)::property;
  v11 = mediaplatform::Singleton<mlcore::GenreTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "representativeItem");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A8E635C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, void *a17, int a18, __int16 a19, char a20,char a21,int a22,__int16 a23,char a24,char a25)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

mlcore::GenreTable *_ZNSt3__115allocate_sharedB8ne180100IN6mlcore10GenreTableENS_9allocatorIS2_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(mlcore::GenreTable **a1)
{
  _QWORD *v2;
  mlcore::GenreTable *result;

  v2 = operator new(0x488uLL);
  v2[1] = 0;
  v2[2] = 0;
  *v2 = &off_24C33C210;
  result = mlcore::GenreTable::GenreTable((mlcore::GenreTable *)(v2 + 3));
  *a1 = result;
  a1[1] = (mlcore::GenreTable *)v2;
  return result;
}

void sub_20A8E6458(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<mlcore::GenreTable>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33C210;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mlcore::GenreTable>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33C210;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t std::__shared_ptr_emplace<mlcore::GenreTable>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::GenrePropertyPersistentID(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::GenreTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __p;
  char v23;
  _QWORD v24[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::GenreTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v24[0] = *v1;
  v24[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::GenreTable **)mediaplatform::Singleton<mlcore::GenreTable>::sharedInstance();
  mlcore::GenreTable::persistentIDColumn(*v5, (uint64_t)&__p);
  mlcore::DatabaseModelProperty<long long>::DatabaseModelProperty(v0, v24, (uint64_t)&__p);
  mlcore::GenrePropertyPersistentID(void)::property = v0;
  if (v23 < 0)
    operator delete((void *)__p.__r_.__value_.__l.__size_);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::GenrePropertyPersistentID(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  std::string::operator=((std::string *)(v8 + 40), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::Genre>::sharedPointer();
  v10 = mlcore::GenrePropertyPersistentID(void)::property;
  v11 = mediaplatform::Singleton<mlcore::GenreTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "persistentID");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A8E6694(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, void *a17, int a18, __int16 a19, char a20,char a21,int a22,__int16 a23,char a24,char a25)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::GenrePropertyName(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::GenreTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __str;
  _QWORD v23[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::GenreTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v23[0] = *v1;
  v23[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::GenreTable **)mediaplatform::Singleton<mlcore::GenreTable>::sharedInstance();
  mlcore::GenreTable::nameColumn(*v5, (uint64_t)&__str);
  mlcore::DatabaseModelProperty<std::string>::DatabaseModelProperty(v0, v23, (uint64_t)&__str);
  mlcore::GenrePropertyName(void)::property = v0;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&__str);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::GenrePropertyName(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__str, "");
  std::string::operator=((std::string *)(v8 + 40), &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::Genre>::sharedPointer();
  v10 = mlcore::GenrePropertyName(void)::property;
  v11 = mediaplatform::Singleton<mlcore::GenreTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "name");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __str.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A8E691C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::GenrePropertyHasName(void)::$_0 &&>>()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  std::__shared_weak_count *v3;
  unint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::string __str;

  v0 = operator new();
  v1 = mlcore::GenrePropertyOrder((mlcore *)v0);
  v2 = (char *)operator new(0x48uLL);
  v3 = (std::__shared_weak_count *)v2;
  *(_OWORD *)(v2 + 8) = 0u;
  v4 = (unint64_t *)(v2 + 8);
  *(_QWORD *)v2 = &off_24C33CE88;
  *((_QWORD *)v2 + 4) = v1;
  *((_QWORD *)v2 + 5) = 0x100000000;
  *((_QWORD *)v2 + 3) = &unk_24C339CA8;
  *((_QWORD *)v2 + 6) = 0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_QWORD *)v0 = &off_24C3398B8;
  *(_QWORD *)(v0 + 64) = v2 + 24;
  *(_QWORD *)(v0 + 72) = v2;
  do
    v5 = __ldxr(v4);
  while (__stxr(v5 + 1, v4));
  mlcore::GenrePropertyHasName(void)::property = v0;
  do
    v6 = __ldaxr(v4);
  while (__stlxr(v6 - 1, v4));
  if (!v6)
  {
    (*(void (**)(char *))(*(_QWORD *)v2 + 16))(v2);
    std::__shared_weak_count::__release_weak(v3);
  }
  v7 = mlcore::GenrePropertyHasName(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__str, "has_name");
  std::string::operator=((std::string *)(v7 + 40), &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  v8 = mlcore::TypedEntityClass<mlcore::Genre>::sharedPointer();
  v9 = mlcore::GenrePropertyHasName(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__str, "hasName");
  mlcore::EntityClass::setPropertyForName(v8, v9, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
}

void sub_20A8E6B34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t mlcore::GenrePropertyGroupingKey(mlcore *this)
{
  unint64_t v1;
  char v3;
  char **v4;
  char *v5;

  v1 = atomic_load(&mlcore::GenrePropertyGroupingKey(void)::once);
  if (v1 != -1)
  {
    v5 = &v3;
    v4 = &v5;
    std::__call_once(&mlcore::GenrePropertyGroupingKey(void)::once, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::GenrePropertyGroupingKey(void)::$_0 &&>>);
  }
  return mlcore::GenrePropertyGroupingKey(void)::property;
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::GenrePropertyGroupingKey(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::GenreTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __str;
  _QWORD v23[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::GenreTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v23[0] = *v1;
  v23[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::GenreTable **)mediaplatform::Singleton<mlcore::GenreTable>::sharedInstance();
  mlcore::GenreTable::groupingKeyColumn(*v5, (uint64_t)&__str);
  mlcore::DatabaseModelProperty<mediaplatform::Data>::DatabaseModelProperty(v0, v23, (uint64_t)&__str);
  mlcore::GenrePropertyGroupingKey(void)::property = v0;
  mediaplatform::DatabaseColumn<mediaplatform::Data>::~DatabaseColumn((uint64_t)&__str);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::GenrePropertyGroupingKey(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__str, "");
  std::string::operator=((std::string *)(v8 + 40), &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::Genre>::sharedPointer();
  v10 = mlcore::GenrePropertyGroupingKey(void)::property;
  v11 = mediaplatform::Singleton<mlcore::GenreTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "groupingKey");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __str.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A8E6DA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t mlcore::GenrePropertyItemCount(mlcore *this)
{
  unint64_t v1;
  char v3;
  char **v4;
  char *v5;

  v1 = atomic_load(&mlcore::GenrePropertyItemCount(void)::once);
  if (v1 != -1)
  {
    v5 = &v3;
    v4 = &v5;
    std::__call_once(&mlcore::GenrePropertyItemCount(void)::once, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::GenrePropertyItemCount(void)::$_0 &&>>);
  }
  return mlcore::GenrePropertyItemCount(void)::property;
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::GenrePropertyItemCount(void)::$_0 &&>>()
{
  uint64_t v0;
  mlcore *v1;
  mlcore *v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  std::string __p;
  __int128 v18;

  v0 = operator new();
  v1 = (mlcore *)mlcore::TypedEntityClass<mlcore::Item>::sharedPointer();
  v2 = (mlcore *)mlcore::ItemPropertyGenrePersistentID(v1);
  v3 = mlcore::GenrePropertyPersistentID(v2);
  v4 = operator new(0x38uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = &off_24C33D240;
  v4[4] = v2;
  v4[5] = 0;
  v4[3] = &off_24C33A5A8;
  v4[6] = v3;
  *(_QWORD *)&v18 = v4 + 3;
  *((_QWORD *)&v18 + 1) = v4;
  std::allocate_shared[abi:ne180100]<mlcore::AggregateFunctionQuery,std::allocator<mlcore::AggregateFunctionQuery>,mlcore::EntityClass *,mlcore::AggregateFunctionQuery::AggregateFunction,decltype(nullptr),std::shared_ptr<mlcore::ComparisonPropertyPredicate>,void>(&__p, (uint64_t)v1, 0, &v18);
  v5 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = 0uLL;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_QWORD *)v0 = &off_24C337228;
  *(_OWORD *)(v0 + 64) = v5;
  if (*((_QWORD *)&v5 + 1))
  {
    v6 = (unint64_t *)(*((_QWORD *)&v5 + 1) + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
    mlcore::GenrePropertyItemCount(void)::property = v0;
    do
      v8 = __ldaxr(v6);
    while (__stlxr(v8 - 1, v6));
    if (!v8)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v5 + 1) + 16))(*((_QWORD *)&v5 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v5 + 1));
    }
  }
  else
  {
    mlcore::GenrePropertyItemCount(void)::property = v0;
  }
  size = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
  if (__p.__r_.__value_.__l.__size_)
  {
    v10 = (unint64_t *)(__p.__r_.__value_.__l.__size_ + 8);
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v18 + 1);
  if (*((_QWORD *)&v18 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v15 = mlcore::TypedEntityClass<mlcore::Item>::sharedPointer();
  v16 = mlcore::GenrePropertyItemCount(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "itemCount");
  mlcore::EntityClass::setPropertyForName(v15, v16, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20A8E7078(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t mlcore::GenrePropertyAlbumCount(mlcore *this)
{
  unint64_t v1;
  char v3;
  char **v4;
  char *v5;

  v1 = atomic_load(&mlcore::GenrePropertyAlbumCount(void)::once);
  if (v1 != -1)
  {
    v5 = &v3;
    v4 = &v5;
    std::__call_once(&mlcore::GenrePropertyAlbumCount(void)::once, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::GenrePropertyAlbumCount(void)::$_0 &&>>);
  }
  return mlcore::GenrePropertyAlbumCount(void)::property;
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::GenrePropertyAlbumCount(void)::$_0 &&>>()
{
  uint64_t v0;
  mlcore *v1;
  mlcore *v2;
  mlcore *v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *size;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::string __p;
  char v19;
  __int128 v20;

  v0 = operator new();
  v1 = (mlcore *)mlcore::TypedEntityClass<mlcore::Item>::sharedPointer();
  v2 = (mlcore *)mlcore::ItemPropertyAlbumPersistentID(v1);
  v3 = (mlcore *)mlcore::ItemPropertyGenrePersistentID(v2);
  v4 = mlcore::GenrePropertyPersistentID(v3);
  v5 = operator new(0x38uLL);
  v5[1] = 0;
  v5[2] = 0;
  *v5 = &off_24C33D240;
  v5[4] = v3;
  v5[5] = 0;
  v5[3] = &off_24C33A5A8;
  v5[6] = v4;
  *(_QWORD *)&v20 = v5 + 3;
  *((_QWORD *)&v20 + 1) = v5;
  v19 = 1;
  std::allocate_shared[abi:ne180100]<mlcore::AggregateFunctionQuery,std::allocator<mlcore::AggregateFunctionQuery>,mlcore::EntityClass *,mlcore::AggregateFunctionQuery::AggregateFunction,mlcore::ModelProperty<long long> *,std::shared_ptr<mlcore::ComparisonPropertyPredicate>,BOOL,void>(&__p, (uint64_t)v1, 0, (uint64_t)v2, &v20, &v19);
  v6 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = 0uLL;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_QWORD *)v0 = &off_24C337228;
  *(_OWORD *)(v0 + 64) = v6;
  if (*((_QWORD *)&v6 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v6 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
    mlcore::GenrePropertyAlbumCount(void)::property = v0;
    do
      v9 = __ldaxr(v7);
    while (__stlxr(v9 - 1, v7));
    if (!v9)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v6 + 1) + 16))(*((_QWORD *)&v6 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v6 + 1));
    }
  }
  else
  {
    mlcore::GenrePropertyAlbumCount(void)::property = v0;
  }
  size = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
  if (__p.__r_.__value_.__l.__size_)
  {
    v11 = (unint64_t *)(__p.__r_.__value_.__l.__size_ + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v20 + 1);
  if (*((_QWORD *)&v20 + 1))
  {
    v14 = (unint64_t *)(*((_QWORD *)&v20 + 1) + 8);
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  v16 = mlcore::TypedEntityClass<mlcore::Item>::sharedPointer();
  v17 = mlcore::GenrePropertyAlbumCount(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "albumCount");
  mlcore::EntityClass::setPropertyForName(v16, v17, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20A8E7340(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::GenrePropertyLatestItemDateAdded(void)::$_0 &&>>()
{
  uint64_t v0;
  mlcore *v1;
  mlcore *v2;
  mlcore *v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *size;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::string __p;
  __int128 v19;

  v0 = operator new();
  v1 = (mlcore *)mlcore::TypedEntityClass<mlcore::Item>::sharedPointer();
  v2 = (mlcore *)mlcore::ItemPropertyDateAdded(v1);
  v3 = (mlcore *)mlcore::ItemPropertyGenrePersistentID(v2);
  v4 = mlcore::GenrePropertyPersistentID(v3);
  v5 = operator new(0x38uLL);
  v5[1] = 0;
  v5[2] = 0;
  *v5 = &off_24C33D240;
  v5[4] = v3;
  v5[5] = 0;
  v5[3] = &off_24C33A5A8;
  v5[6] = v4;
  *(_QWORD *)&v19 = v5 + 3;
  *((_QWORD *)&v19 + 1) = v5;
  std::allocate_shared[abi:ne180100]<mlcore::AggregateFunctionQuery,std::allocator<mlcore::AggregateFunctionQuery>,mlcore::EntityClass *,mlcore::AggregateFunctionQuery::AggregateFunction,mlcore::ModelProperty<long long> *,std::shared_ptr<mlcore::ComparisonPropertyPredicate>,void>(&__p, (uint64_t)v1, 2, (uint64_t)v2, &v19);
  v6 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = 0uLL;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_QWORD *)v0 = &off_24C337228;
  *(_OWORD *)(v0 + 64) = v6;
  if (*((_QWORD *)&v6 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v6 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
    mlcore::GenrePropertyLatestItemDateAdded(void)::property = v0;
    do
      v9 = __ldaxr(v7);
    while (__stlxr(v9 - 1, v7));
    if (!v9)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v6 + 1) + 16))(*((_QWORD *)&v6 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v6 + 1));
    }
  }
  else
  {
    mlcore::GenrePropertyLatestItemDateAdded(void)::property = v0;
  }
  size = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
  if (__p.__r_.__value_.__l.__size_)
  {
    v11 = (unint64_t *)(__p.__r_.__value_.__l.__size_ + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v19 + 1);
  if (*((_QWORD *)&v19 + 1))
  {
    v14 = (unint64_t *)(*((_QWORD *)&v19 + 1) + 8);
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  v16 = mlcore::TypedEntityClass<mlcore::Genre>::sharedPointer();
  v17 = mlcore::GenrePropertyLatestItemDateAdded(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "latestItemDateAdded");
  mlcore::EntityClass::setPropertyForName(v16, v17, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20A8E75A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double mlcore::Genre::Genre(mlcore::Genre *this, uint64_t a2)
{
  double result;

  result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 12) = 1065353216;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_DWORD *)this + 22) = 1065353216;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_DWORD *)this + 32) = 1065353216;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_DWORD *)this + 42) = 1065353216;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_DWORD *)this + 52) = 1065353216;
  *((_QWORD *)this + 27) = &unk_24C3371E8;
  *((_QWORD *)this + 28) = a2;
  *(_QWORD *)this = &off_24C33A6F8;
  *((_QWORD *)this + 1) = &off_24C3371C0;
  return result;
}

{
  double result;

  result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 12) = 1065353216;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_DWORD *)this + 22) = 1065353216;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_DWORD *)this + 32) = 1065353216;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_DWORD *)this + 42) = 1065353216;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_DWORD *)this + 52) = 1065353216;
  *((_QWORD *)this + 27) = &unk_24C3371E8;
  *((_QWORD *)this + 28) = a2;
  *(_QWORD *)this = &off_24C33A6F8;
  *((_QWORD *)this + 1) = &off_24C3371C0;
  return result;
}

void mlcore::Genre::name(mlcore::Genre *this@<X0>, std::string *a2@<X8>)
{
  unint64_t v4;

  v4 = mlcore::GenrePropertyName(this);
  mlcore::Entity::valueForProperty<std::string>(a2, (uint64_t)this, v4);
}

void mlcore::Genre::setName(mlcore *a1, uint64_t a2)
{
  std::string::size_type v4;

  v4 = mlcore::GenrePropertyName(a1);
  mlcore::Entity::setValueForProperty<std::string>((uint64_t)a1, a2, v4);
}

uint64_t mlcore::LibraryView::LibraryView(uint64_t result, _QWORD *a2, int a3)
{
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  *(_QWORD *)result = &unk_24C3369F0;
  *(_OWORD *)(result + 8) = 0u;
  *(_OWORD *)(result + 24) = 0u;
  *(_DWORD *)(result + 40) = 1065353216;
  *(_WORD *)(result + 48) = 0;
  *(_BYTE *)(result + 50) = 0;
  *(int32x2_t *)(result + 52) = vdup_n_s32(0x3E8u);
  v3 = a2[1];
  *(_QWORD *)(result + 64) = *a2;
  *(_QWORD *)(result + 72) = v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  *(_DWORD *)(result + 80) = a3;
  return result;
}

uint64_t mlcore::LibraryView::contentRestrictions(mlcore::LibraryView *this)
{
  return *((_QWORD *)this + 6);
}

_QWORD *std::vector<std::shared_ptr<mlcore::Predicate>>::vector[abi:ne180100](_QWORD *a1, _QWORD *a2, unint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a3)
  {
    std::vector<std::shared_ptr<mlcore::Predicate>>::__vallocate[abi:ne180100](a1, a3);
    v6 = &a2[2 * a3];
    v7 = (_QWORD *)a1[1];
    do
    {
      *v7 = *a2;
      v8 = a2[1];
      v7[1] = v8;
      if (v8)
      {
        v9 = (unint64_t *)(v8 + 8);
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      a2 += 2;
      v7 += 2;
    }
    while (a2 != v6);
    a1[1] = v7;
  }
  return a1;
}

void sub_20A8E7874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  std::vector<std::shared_ptr<mediaplatform::SQLExpression const>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

_QWORD *std::vector<std::shared_ptr<mlcore::Predicate>>::push_back[abi:ne180100](_QWORD *result, uint64_t a2)
{
  char **v3;
  _QWORD *v4;
  unint64_t v5;
  _OWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  __int128 v18;
  int64x2_t v19;
  char *v20;
  uint64_t v21;
  int64x2_t v22;
  char *v23;
  _QWORD *v24;

  v3 = (char **)result;
  v4 = result + 2;
  v5 = result[2];
  v6 = (_OWORD *)result[1];
  if ((unint64_t)v6 >= v5)
  {
    v8 = ((uint64_t)v6 - *result) >> 4;
    if ((unint64_t)(v8 + 1) >> 60)
      std::vector<std::string>::__throw_length_error[abi:ne180100]();
    v9 = v5 - *result;
    v10 = v9 >> 3;
    if (v9 >> 3 <= (unint64_t)(v8 + 1))
      v10 = v8 + 1;
    if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF0)
      v11 = 0xFFFFFFFFFFFFFFFLL;
    else
      v11 = v10;
    v24 = v4;
    v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<mediaplatform::DatabaseParameterBase>>>(v11);
    v14 = &v12[16 * v8];
    *(_OWORD *)v14 = *(_OWORD *)a2;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    v16 = *v3;
    v15 = v3[1];
    if (v15 == *v3)
    {
      v19 = vdupq_n_s64((unint64_t)v15);
      v17 = &v12[16 * v8];
    }
    else
    {
      v17 = &v12[16 * v8];
      do
      {
        v18 = *((_OWORD *)v15 - 1);
        v15 -= 16;
        *((_OWORD *)v17 - 1) = v18;
        v17 -= 16;
        *(_QWORD *)v15 = 0;
        *((_QWORD *)v15 + 1) = 0;
      }
      while (v15 != v16);
      v19 = *(int64x2_t *)v3;
    }
    v7 = v14 + 16;
    *v3 = v17;
    v3[1] = v14 + 16;
    v22 = v19;
    v20 = v3[2];
    v3[2] = &v12[16 * v13];
    v23 = v20;
    v21 = v19.i64[0];
    result = (_QWORD *)std::__split_buffer<std::shared_ptr<mediaplatform::SQLExpression const>>::~__split_buffer((uint64_t)&v21);
  }
  else
  {
    *v6 = *(_OWORD *)a2;
    v7 = (char *)(v6 + 1);
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
  }
  v3[1] = v7;
  return result;
}

mlcore::BookletTable *mlcore::BookletTable::BookletTable(mlcore::BookletTable *this)
{
  std::string *v2;
  int v3;
  int v4;
  int v5;
  void *v6;
  std::string *v7;
  std::string *v8;
  int v9;
  std::string *v10;
  std::string *v11;
  int v12;
  std::string *v13;
  int v14;
  std::string *v15;
  int v16;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  void *v34[2];
  char v35;
  void (**v36)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string __p;
  int v38;
  uint64_t v39;
  int v40;
  void *v41[2];
  char v42;
  void *v43[2];
  char v44;
  _BYTE v45[8];
  std::string v46;
  int v47;
  char v48;
  std::string v49;
  void *v50[2];
  char v51;
  void (**v52)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v53;
  int v54;
  uint64_t v55;
  int v56;
  void *v57[2];
  char v58;
  void *v59[2];
  char v60;
  _BYTE v61[8];
  std::string v62;
  int v63;
  char v64;
  std::string v65;
  void *v66[2];
  char v67;
  void (**v68)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v69;
  int v70;
  uint64_t v71;
  int v72;
  void *v73[2];
  char v74;
  void (**v75)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v76;
  int v77;
  uint64_t v78;
  int v79;
  std::string __s;
  uint64_t (**v81)();
  std::string v82;
  int v83;
  uint64_t v84;
  int v85;
  uint64_t (**v86)();
  std::string v87;
  int v88;
  char v89;
  std::string v90;
  uint64_t (**v91)();
  std::string v92;
  int v93;
  uint64_t v94;
  int v95;
  uint64_t (**v96)();
  std::string v97;
  int v98;
  char v99;
  std::string v100;
  uint64_t (**v101)();
  std::string v102;
  int v103;
  uint64_t v104;
  int v105;
  uint64_t (**v106)();
  std::string v107;
  int v108;
  uint64_t v109;
  int v110;
  std::string v111;
  uint64_t (**v112)();
  std::string v113;
  int v114;
  uint64_t v115;
  int v116;
  uint64_t (**v117)();
  std::string v118;
  int v119;
  char v120;
  std::string v121;
  uint64_t (**v122)();
  std::string v123;
  int v124;
  uint64_t v125;
  int v126;
  uint64_t (**v127)();
  std::string v128;
  int v129;
  char v130;
  std::string v131;
  uint64_t (**v132)();
  std::string v133;
  int v134;
  uint64_t v135;
  int v136;
  uint64_t (**v137)();
  std::string v138;
  int v139;
  uint64_t v140;
  int v141;
  uint64_t (**v142)();
  std::string v143;
  int v144;
  uint64_t v145;
  int v146;
  uint64_t (**v147)();
  std::string v148;
  int v149;
  char v150;
  std::string v151;
  uint64_t (**v152)();
  std::string v153;
  int v154;
  uint64_t v155;
  int v156;
  uint64_t (**v157)();
  std::string v158;
  int v159;
  char v160;
  std::string v161;
  uint64_t (**v162)();
  std::string v163;
  int v164;
  uint64_t v165;
  int v166;
  uint64_t (**v167)();
  std::string v168;
  int v169;
  uint64_t v170;
  int v171;
  uint64_t (**v172)();
  std::string v173;
  int v174;
  char v175;
  std::string v176;
  uint64_t (**v177)();
  std::string v178;
  int v179;
  uint64_t v180;
  int v181;
  uint64_t (**v182)();
  std::string v183;
  int v184;
  char v185;
  std::string v186;
  void (**v187)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v188;
  int v189;
  uint64_t v190;
  int v191;
  uint64_t (**v192)();
  std::string v193;
  int v194;
  char v195;
  std::string v196;
  uint64_t (**v197)();
  std::string v198;
  int v199;
  uint64_t v200;
  int v201;
  void (**v202)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v203;
  int v204;
  uint64_t v205;
  int v206;
  uint64_t (**v207)();
  std::string v208;
  int v209;
  char v210;
  std::string v211;
  void (**v212)(mediaplatform::DatabaseColumnBase *__hidden);
  std::string v213;
  int v214;
  uint64_t v215;
  int v216;

  std::string::basic_string[abi:ne180100]<0>(&__s, "booklet");
  std::string::basic_string[abi:ne180100]<0>(v73, "booklet_pid");
  mlcore::MediaColumn<long long>::MediaColumn((uint64_t)&v75, (uint64_t)v73, 1);
  std::string::basic_string[abi:ne180100]<0>(v66, "item_pid");
  mlcore::MediaColumn<long long>::MediaColumn((uint64_t)&v68, (uint64_t)v66);
  std::string::basic_string[abi:ne180100]<0>(v59, "name");
  std::string::basic_string[abi:ne180100]<0>(v57, "");
  mlcore::MediaColumn<std::string>::MediaColumn((uint64_t)v61, (uint64_t)v59, (uint64_t)v57);
  std::string::basic_string[abi:ne180100]<0>(v50, "store_item_id");
  mlcore::MediaColumn<long long>::MediaColumn((uint64_t)&v52, (uint64_t)v50);
  std::string::basic_string[abi:ne180100]<0>(v43, "redownload_params");
  std::string::basic_string[abi:ne180100]<0>(v41, "");
  mlcore::MediaColumn<std::string>::MediaColumn((uint64_t)v45, (uint64_t)v43, (uint64_t)v41);
  std::string::basic_string[abi:ne180100]<0>(v34, "file_size");
  mlcore::MediaColumn<long long>::MediaColumn((uint64_t)&v36, (uint64_t)v34);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v111, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  else
    v111 = __s;
  if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v107, v76.__r_.__value_.__l.__data_, v76.__r_.__value_.__l.__size_);
  else
    v107 = v76;
  v106 = off_24C335B18;
  v109 = v78;
  v30 = v77;
  v108 = v77;
  v110 = v79;
  if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v102, v69.__r_.__value_.__l.__data_, v69.__r_.__value_.__l.__size_);
  else
    v102 = v69;
  v101 = off_24C335B18;
  v104 = v71;
  v31 = v70;
  v103 = v70;
  v105 = v72;
  v96 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v97, v62.__r_.__value_.__l.__data_, v62.__r_.__value_.__l.__size_);
  else
    v97 = v62;
  v98 = v63;
  v96 = &off_24C335AB8;
  v99 = v64;
  if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v100, v65.__r_.__value_.__l.__data_, v65.__r_.__value_.__l.__size_);
  else
    v100 = v65;
  if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v92, v53.__r_.__value_.__l.__data_, v53.__r_.__value_.__l.__size_);
  else
    v92 = v53;
  v91 = off_24C335B18;
  v94 = v55;
  v33 = v54;
  v93 = v54;
  v95 = v56;
  v86 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v87, v46.__r_.__value_.__l.__data_, v46.__r_.__value_.__l.__size_);
  else
    v87 = v46;
  v88 = v47;
  v86 = &off_24C335AB8;
  v89 = v48;
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v90, v49.__r_.__value_.__l.__data_, v49.__r_.__value_.__l.__size_);
  else
    v90 = v49;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v82, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  else
    v82 = __p;
  v81 = off_24C335B18;
  v84 = v39;
  v32 = v38;
  v83 = v38;
  v85 = v40;
  *(_QWORD *)this = &off_24C330F50;
  v2 = (std::string *)((char *)this + 8);
  v29 = SHIBYTE(v111.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v111.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v2, v111.__r_.__value_.__l.__data_, v111.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v2->__r_.__value_.__l.__data_ = *(_OWORD *)&v111.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 3) = *((_QWORD *)&v111.__r_.__value_.__l + 2);
  }
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *(_QWORD *)this = &off_24C335980;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  v28 = SHIBYTE(v107.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v138, v107.__r_.__value_.__l.__data_, v107.__r_.__value_.__l.__size_);
  else
    v138 = v107;
  v137 = off_24C335B18;
  v140 = v109;
  v139 = v30;
  v141 = v110;
  v27 = SHIBYTE(v102.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v102.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v133, v102.__r_.__value_.__l.__data_, v102.__r_.__value_.__l.__size_);
  else
    v133 = v102;
  v132 = off_24C335B18;
  v135 = v104;
  v134 = v31;
  v136 = v105;
  v127 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v97.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v128, v97.__r_.__value_.__l.__data_, v97.__r_.__value_.__l.__size_);
  else
    v128 = v97;
  v129 = v98;
  v127 = &off_24C335AB8;
  v130 = v99;
  if (SHIBYTE(v100.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v131, v100.__r_.__value_.__l.__data_, v100.__r_.__value_.__l.__size_);
  else
    v131 = v100;
  v26 = SHIBYTE(v92.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v92.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v123, v92.__r_.__value_.__l.__data_, v92.__r_.__value_.__l.__size_);
  else
    v123 = v92;
  v122 = off_24C335B18;
  v125 = v94;
  v124 = v33;
  v126 = v95;
  v117 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v87.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v118, v87.__r_.__value_.__l.__data_, v87.__r_.__value_.__l.__size_);
  else
    v118 = v87;
  v119 = v88;
  v117 = &off_24C335AB8;
  v120 = v89;
  if (SHIBYTE(v90.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v121, v90.__r_.__value_.__l.__data_, v90.__r_.__value_.__l.__size_);
  else
    v121 = v90;
  v25 = SHIBYTE(v82.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v113, v82.__r_.__value_.__l.__data_, v82.__r_.__value_.__l.__size_);
  else
    v113 = v82;
  v112 = off_24C335B18;
  v115 = v84;
  v114 = v32;
  v116 = v85;
  v24 = SHIBYTE(v133.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v133.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v163, v133.__r_.__value_.__l.__data_, v133.__r_.__value_.__l.__size_);
  else
    v163 = v133;
  v162 = off_24C335B18;
  v165 = v104;
  v164 = v31;
  v166 = v105;
  v157 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v128.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v158, v128.__r_.__value_.__l.__data_, v128.__r_.__value_.__l.__size_);
  else
    v158 = v128;
  v159 = v129;
  v157 = &off_24C335AB8;
  v160 = v130;
  if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v161, v131.__r_.__value_.__l.__data_, v131.__r_.__value_.__l.__size_);
  else
    v161 = v131;
  v23 = SHIBYTE(v123.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v123.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v153, v123.__r_.__value_.__l.__data_, v123.__r_.__value_.__l.__size_);
  else
    v153 = v123;
  v152 = off_24C335B18;
  v155 = v94;
  v154 = v33;
  v156 = v95;
  v147 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v118.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v148, v118.__r_.__value_.__l.__data_, v118.__r_.__value_.__l.__size_);
  else
    v148 = v118;
  v149 = v119;
  v147 = &off_24C335AB8;
  v150 = v120;
  if (SHIBYTE(v121.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v151, v121.__r_.__value_.__l.__data_, v121.__r_.__value_.__l.__size_);
  else
    v151 = v121;
  v22 = SHIBYTE(v113.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v113.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v143, v113.__r_.__value_.__l.__data_, v113.__r_.__value_.__l.__size_);
  else
    v143 = v113;
  v142 = off_24C335B18;
  v145 = v84;
  v144 = v32;
  v146 = v85;
  v182 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v158.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v183, v158.__r_.__value_.__l.__data_, v158.__r_.__value_.__l.__size_);
  else
    v183 = v158;
  v184 = v159;
  v182 = &off_24C335AB8;
  v185 = v160;
  if (SHIBYTE(v161.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v186, v161.__r_.__value_.__l.__data_, v161.__r_.__value_.__l.__size_);
  else
    v186 = v161;
  v21 = SHIBYTE(v153.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v153.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v178, v153.__r_.__value_.__l.__data_, v153.__r_.__value_.__l.__size_);
  else
    v178 = v153;
  v177 = off_24C335B18;
  v180 = v94;
  v179 = v33;
  v181 = v95;
  v172 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v148.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v173, v148.__r_.__value_.__l.__data_, v148.__r_.__value_.__l.__size_);
  else
    v173 = v148;
  v174 = v149;
  v172 = &off_24C335AB8;
  v175 = v150;
  if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v176, v151.__r_.__value_.__l.__data_, v151.__r_.__value_.__l.__size_);
  else
    v176 = v151;
  v167 = (uint64_t (**)())off_24C335D90;
  v20 = SHIBYTE(v143.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v168, v143.__r_.__value_.__l.__data_, v143.__r_.__value_.__l.__size_);
  else
    v168 = v143;
  v167 = off_24C335B18;
  v170 = v84;
  v169 = v32;
  v171 = v85;
  v197 = (uint64_t (**)())off_24C335D90;
  v3 = SHIBYTE(v178.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v178.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v198, v178.__r_.__value_.__l.__data_, v178.__r_.__value_.__l.__size_);
  else
    v198 = v178;
  v197 = off_24C335B18;
  v200 = v94;
  v199 = v33;
  v201 = v95;
  v192 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v173.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v193, v173.__r_.__value_.__l.__data_, v173.__r_.__value_.__l.__size_);
  else
    v193 = v173;
  v194 = v174;
  v192 = &off_24C335AB8;
  v195 = v175;
  if (SHIBYTE(v176.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v196, v176.__r_.__value_.__l.__data_, v176.__r_.__value_.__l.__size_);
  else
    v196 = v176;
  v187 = off_24C335D90;
  v18 = SHIBYTE(v168.__r_.__value_.__r.__words[2]);
  v19 = v3;
  if (SHIBYTE(v168.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v188, v168.__r_.__value_.__l.__data_, v168.__r_.__value_.__l.__size_);
  else
    v188 = v168;
  v190 = v84;
  v189 = v32;
  v191 = v85;
  v207 = (uint64_t (**)())off_24C335D90;
  if (SHIBYTE(v193.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v208, v193.__r_.__value_.__l.__data_, v193.__r_.__value_.__l.__size_);
  else
    v208 = v193;
  v209 = v194;
  v207 = &off_24C335AB8;
  v210 = v195;
  if (SHIBYTE(v196.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v211, v196.__r_.__value_.__l.__data_, v196.__r_.__value_.__l.__size_);
  else
    v211 = v196;
  v202 = off_24C335D90;
  v4 = SHIBYTE(v188.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v188.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v203, v188.__r_.__value_.__l.__data_, v188.__r_.__value_.__l.__size_);
  else
    v203 = v188;
  v205 = v84;
  v204 = v32;
  v206 = v85;
  v212 = off_24C335D90;
  v5 = SHIBYTE(v203.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v203.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v213, v203.__r_.__value_.__l.__data_, v203.__r_.__value_.__l.__size_);
  else
    v213 = v203;
  v215 = v84;
  v214 = v32;
  v216 = v85;
  *((_QWORD *)this + 10) = off_24C335D90;
  if (SHIBYTE(v213.__r_.__value_.__r.__words[2]) < 0)
  {
    v6 = (void *)v213.__r_.__value_.__r.__words[0];
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 88), v213.__r_.__value_.__l.__data_, v213.__r_.__value_.__l.__size_);
    *((_DWORD *)this + 28) = v32;
    *((_QWORD *)this + 10) = off_24C335B18;
    *(_QWORD *)((char *)this + 116) = v84;
    *((_DWORD *)this + 31) = v85;
    v212 = off_24C335D90;
    operator delete(v6);
  }
  else
  {
    *(std::string *)((char *)this + 88) = v213;
    *((_DWORD *)this + 28) = v32;
    *((_QWORD *)this + 10) = off_24C335B18;
    *(_QWORD *)((char *)this + 116) = v84;
    *((_DWORD *)this + 31) = v85;
    v212 = off_24C335D90;
  }
  *((_QWORD *)this + 16) = off_24C335D90;
  if (SHIBYTE(v208.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 136), v208.__r_.__value_.__l.__data_, v208.__r_.__value_.__l.__size_);
  else
    *(std::string *)((char *)this + 136) = v208;
  *((_DWORD *)this + 40) = v209;
  *((_QWORD *)this + 16) = &off_24C335AB8;
  *((_BYTE *)this + 164) = v210;
  v7 = (std::string *)((char *)this + 168);
  if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v7, v211.__r_.__value_.__l.__data_, v211.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = *(_OWORD *)&v211.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 23) = *((_QWORD *)&v211.__r_.__value_.__l + 2);
  }
  v202 = off_24C335D90;
  if (v5 < 0)
    operator delete(v203.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v207);
  *((_QWORD *)this + 24) = off_24C335D90;
  v8 = (std::string *)((char *)this + 200);
  v9 = SHIBYTE(v198.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v198.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v8, v198.__r_.__value_.__l.__data_, v198.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v8->__r_.__value_.__l.__data_ = *(_OWORD *)&v198.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 27) = *((_QWORD *)&v198.__r_.__value_.__l + 2);
  }
  *((_DWORD *)this + 56) = v33;
  *((_QWORD *)this + 24) = off_24C335B18;
  *(_QWORD *)((char *)this + 228) = v200;
  *((_DWORD *)this + 59) = v201;
  v187 = off_24C335D90;
  if (v4 < 0)
    operator delete(v188.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v192);
  v197 = (uint64_t (**)())off_24C335D90;
  if (v9 < 0)
    operator delete(v198.__r_.__value_.__l.__data_);
  *((_QWORD *)this + 30) = off_24C335D90;
  if (SHIBYTE(v183.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 248), v183.__r_.__value_.__l.__data_, v183.__r_.__value_.__l.__size_);
  else
    *(std::string *)((char *)this + 248) = v183;
  *((_DWORD *)this + 68) = v184;
  *((_QWORD *)this + 30) = &off_24C335AB8;
  *((_BYTE *)this + 276) = v185;
  v10 = (std::string *)((char *)this + 280);
  if (SHIBYTE(v186.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v10, v186.__r_.__value_.__l.__data_, v186.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v10->__r_.__value_.__l.__data_ = *(_OWORD *)&v186.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 37) = *((_QWORD *)&v186.__r_.__value_.__l + 2);
  }
  v167 = (uint64_t (**)())off_24C335D90;
  if (v18 < 0)
    operator delete(v168.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v172);
  v177 = (uint64_t (**)())off_24C335D90;
  if (v19 < 0)
    operator delete(v178.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v182);
  *((_QWORD *)this + 38) = off_24C335D90;
  v11 = (std::string *)((char *)this + 312);
  v12 = SHIBYTE(v163.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v163.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v11, v163.__r_.__value_.__l.__data_, v163.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v11->__r_.__value_.__l.__data_ = *(_OWORD *)&v163.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 41) = *((_QWORD *)&v163.__r_.__value_.__l + 2);
  }
  *((_DWORD *)this + 84) = v31;
  *((_QWORD *)this + 38) = off_24C335B18;
  *(_QWORD *)((char *)this + 340) = v165;
  *((_DWORD *)this + 87) = v166;
  v142 = (uint64_t (**)())off_24C335D90;
  if (v20 < 0)
    operator delete(v143.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v147);
  if (v21 < 0)
    operator delete(v153.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v157);
  if (v12 < 0)
    operator delete(v163.__r_.__value_.__l.__data_);
  *((_QWORD *)this + 44) = off_24C335D90;
  v13 = (std::string *)((char *)this + 360);
  v14 = SHIBYTE(v138.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v13, v138.__r_.__value_.__l.__data_, v138.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v13->__r_.__value_.__l.__data_ = *(_OWORD *)&v138.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 47) = *((_QWORD *)&v138.__r_.__value_.__l + 2);
  }
  *((_DWORD *)this + 96) = v30;
  *((_QWORD *)this + 44) = off_24C335B18;
  *(_QWORD *)((char *)this + 388) = v140;
  *((_DWORD *)this + 99) = v141;
  if (v22 < 0)
    operator delete(v113.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v117);
  if (v23 < 0)
    operator delete(v123.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v127);
  if (v24 < 0)
  {
    operator delete(v133.__r_.__value_.__l.__data_);
    if ((v14 & 0x80000000) == 0)
      goto LABEL_164;
  }
  else if ((v14 & 0x80000000) == 0)
  {
    goto LABEL_164;
  }
  operator delete(v138.__r_.__value_.__l.__data_);
LABEL_164:
  v81 = (uint64_t (**)())off_24C335D90;
  if (v25 < 0)
    operator delete(v82.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v86);
  v91 = (uint64_t (**)())off_24C335D90;
  if (v26 < 0)
    operator delete(v92.__r_.__value_.__l.__data_);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&v96);
  v101 = (uint64_t (**)())off_24C335D90;
  if (v27 < 0)
    operator delete(v102.__r_.__value_.__l.__data_);
  v106 = (uint64_t (**)())off_24C335D90;
  if (v28 < 0)
    operator delete(v107.__r_.__value_.__l.__data_);
  if (v29 < 0)
    operator delete(v111.__r_.__value_.__l.__data_);
  *(_QWORD *)this = off_24C3364E8;
  *((_QWORD *)this + 50) = off_24C335D90;
  if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)this + 17, v76.__r_.__value_.__l.__data_, v76.__r_.__value_.__l.__size_);
  else
    *((std::string *)this + 17) = v76;
  *((_DWORD *)this + 108) = v77;
  *(_QWORD *)((char *)this + 436) = v78;
  *((_DWORD *)this + 111) = v79;
  *((_QWORD *)this + 50) = off_24C336AC0;
  *((_QWORD *)this + 56) = off_24C335D90;
  if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)this + 19, v69.__r_.__value_.__l.__data_, v69.__r_.__value_.__l.__size_);
  else
    *((std::string *)this + 19) = v69;
  *((_DWORD *)this + 120) = v70;
  *(_QWORD *)((char *)this + 484) = v71;
  *((_DWORD *)this + 123) = v72;
  *((_QWORD *)this + 56) = off_24C336AC0;
  std::__tuple_leaf<2ul,mlcore::MediaColumn<std::string>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<std::string>&,void>((uint64_t)this + 496, (uint64_t)v61);
  *((_QWORD *)this + 70) = off_24C335D90;
  if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 568), v53.__r_.__value_.__l.__data_, v53.__r_.__value_.__l.__size_);
  else
    *(std::string *)((char *)this + 568) = v53;
  *((_DWORD *)this + 148) = v54;
  *(_QWORD *)((char *)this + 596) = v55;
  *((_DWORD *)this + 151) = v56;
  *((_QWORD *)this + 70) = off_24C336AC0;
  std::__tuple_leaf<4ul,mlcore::MediaColumn<std::string>,false>::__tuple_leaf[abi:ne180100]<mlcore::MediaColumn<std::string>&,void>((uint64_t)this + 608, (uint64_t)v45);
  *((_QWORD *)this + 84) = off_24C335D90;
  v15 = (std::string *)((char *)this + 680);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v15, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v16 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    *((_DWORD *)this + 176) = v38;
    *(_QWORD *)((char *)this + 708) = v39;
    *((_DWORD *)this + 179) = v40;
    *((_QWORD *)this + 84) = off_24C336AC0;
    v36 = off_24C335D90;
    if (v16 < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    *(_OWORD *)&v15->__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 87) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *((_DWORD *)this + 176) = v38;
    *(_QWORD *)((char *)this + 708) = v39;
    *((_DWORD *)this + 179) = v40;
    *((_QWORD *)this + 84) = off_24C336AC0;
    v36 = off_24C335D90;
  }
  if (v35 < 0)
    operator delete(v34[0]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)v45);
  if (v42 < 0)
    operator delete(v41[0]);
  if (v44 < 0)
    operator delete(v43[0]);
  v52 = off_24C335D90;
  if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v53.__r_.__value_.__l.__data_);
  if (v51 < 0)
    operator delete(v50[0]);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)v61);
  if (v58 < 0)
    operator delete(v57[0]);
  if (v60 < 0)
    operator delete(v59[0]);
  v68 = off_24C335D90;
  if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v69.__r_.__value_.__l.__data_);
  if (v67 < 0)
    operator delete(v66[0]);
  v75 = off_24C335D90;
  if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v76.__r_.__value_.__l.__data_);
  if (v74 < 0)
    operator delete(v73[0]);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__s.__r_.__value_.__l.__data_);
  *(_QWORD *)this = off_24C336D70;
  return this;
}

void sub_20A8E8E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *__p,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,char a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,void *a63)
{
  char a68;
  void (**a69)(mediaplatform::DatabaseColumnBase *__hidden);
  void *a70;
  char a72;
  void *a73;
  char a74;
  void *a75;
  char a76;
  char a77;
  uint64_t v77;
  void **v78;
  void **v79;
  uint64_t v80;
  void **v81;
  uint64_t v82;

  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(v82);
  *(_QWORD *)(v77 + 560) = off_24C335D90;
  if (*(char *)(v77 + 591) < 0)
    operator delete(*v81);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(v80);
  *(_QWORD *)(v77 + 448) = off_24C335D90;
  if (*(char *)(v77 + 479) < 0)
    operator delete(*v79);
  *(_QWORD *)(v77 + 400) = off_24C335D90;
  if (*(char *)(v77 + 431) < 0)
    operator delete(*v78);
  mediaplatform::DatabaseTable<long long,long long,std::string,long long,std::string,long long>::~DatabaseTable(v77);
  if (a40 < 0)
    operator delete(__p);
  if (a33 < 0)
    operator delete(a28);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&a55);
  if (a48 < 0)
    operator delete(a43);
  if (a54 < 0)
    operator delete(a49);
  a69 = off_24C335D90;
  if (a72 < 0)
    operator delete(a70);
  if (a68 < 0)
    operator delete(a63);
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&a77);
  if (a74 < 0)
    operator delete(a73);
  if (a76 < 0)
    operator delete(a75);
  STACK[0x220] = (unint64_t)off_24C335D90;
  if (SLOBYTE(STACK[0x23F]) < 0)
    operator delete((void *)STACK[0x228]);
  if (SLOBYTE(STACK[0x21F]) < 0)
    operator delete((void *)STACK[0x208]);
  STACK[0x268] = (unint64_t)off_24C335D90;
  if (SLOBYTE(STACK[0x287]) < 0)
    operator delete((void *)STACK[0x270]);
  if (SLOBYTE(STACK[0x267]) < 0)
    operator delete((void *)STACK[0x250]);
  if (SLOBYTE(STACK[0x2AF]) < 0)
    operator delete((void *)STACK[0x298]);
  _Unwind_Resume(a1);
}

void sub_20A8E94FC()
{
  JUMPOUT(0x20A8E9400);
}

void sub_20A8E9504()
{
  JUMPOUT(0x20A8E9410);
}

void sub_20A8E950C()
{
  JUMPOUT(0x20A8E9418);
}

void sub_20A8E9514()
{
  JUMPOUT(0x20A8E9428);
}

void sub_20A8E951C()
{
  JUMPOUT(0x20A8E9438);
}

void sub_20A8E9524()
{
  JUMPOUT(0x20A8E9454);
}

void sub_20A8E952C()
{
  JUMPOUT(0x20A8E9464);
}

void sub_20A8E9534()
{
  JUMPOUT(0x20A8E946CLL);
}

void sub_20A8E953C()
{
  JUMPOUT(0x20A8E947CLL);
}

void sub_20A8E9544()
{
  JUMPOUT(0x20A8E948CLL);
}

void sub_20A8E954C()
{
  JUMPOUT(0x20A8E94A8);
}

void sub_20A8E9554()
{
  JUMPOUT(0x20A8E94B8);
}

void sub_20A8E955C()
{
  JUMPOUT(0x20A8E94D4);
}

void sub_20A8E9564()
{
  JUMPOUT(0x20A8E94E4);
}

void mlcore::BookletTable::~BookletTable(mlcore::BookletTable *this)
{
  *(_QWORD *)this = off_24C3364E8;
  *((_QWORD *)this + 84) = off_24C335D90;
  if (*((char *)this + 703) < 0)
    operator delete(*((void **)this + 85));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)this + 608);
  *((_QWORD *)this + 70) = off_24C335D90;
  if (*((char *)this + 591) < 0)
    operator delete(*((void **)this + 71));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)this + 496);
  *((_QWORD *)this + 56) = off_24C335D90;
  if (*((char *)this + 479) < 0)
    operator delete(*((void **)this + 57));
  *((_QWORD *)this + 50) = off_24C335D90;
  if (*((char *)this + 431) < 0)
    operator delete(*((void **)this + 51));
  mediaplatform::DatabaseTable<long long,long long,std::string,long long,std::string,long long>::~DatabaseTable((uint64_t)this);
}

{
  *(_QWORD *)this = off_24C3364E8;
  *((_QWORD *)this + 84) = off_24C335D90;
  if (*((char *)this + 703) < 0)
    operator delete(*((void **)this + 85));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)this + 608);
  *((_QWORD *)this + 70) = off_24C335D90;
  if (*((char *)this + 591) < 0)
    operator delete(*((void **)this + 71));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)this + 496);
  *((_QWORD *)this + 56) = off_24C335D90;
  if (*((char *)this + 479) < 0)
    operator delete(*((void **)this + 57));
  *((_QWORD *)this + 50) = off_24C335D90;
  if (*((char *)this + 431) < 0)
    operator delete(*((void **)this + 51));
  mediaplatform::DatabaseTable<long long,long long,std::string,long long,std::string,long long>::~DatabaseTable((uint64_t)this);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mediaplatform::DatabaseTable<long long,long long,std::string,long long,std::string,long long>::columnCount()
{
  return 6;
}

void mediaplatform::DatabaseTable<long long,long long,std::string,long long,std::string,long long>::columnNames(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 352);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 304);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 240);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 192);
  mediaplatform::ColumnNamesApplier::operator()<std::string>((uint64_t)a2, a1 + 128);
  mediaplatform::ColumnNamesApplier::operator()<long long>((uint64_t)a2, a1 + 80);
}

void sub_20A8E9728(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void mediaplatform::DatabaseTable<long long,long long,std::string,long long,std::string,long long>::targetColumnExpression(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __int128 *v3;
  __int128 *v4[3];
  __int128 **v5;

  v3 = (__int128 *)(a1 + 8);
  (*(void (**)(__int128 **__return_ptr))(*(_QWORD *)a1 + 24))(v4);
  std::allocate_shared[abi:ne180100]<mediaplatform::SQLColumnNameExpression,std::allocator<mediaplatform::SQLColumnNameExpression>,std::string &,std::string const&,void>(a2, v4[0], v3);
  v5 = v4;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v5);
}

void sub_20A8E97A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void mediaplatform::DatabaseTable<long long,long long,std::string,long long,std::string,long long>::~DatabaseTable(uint64_t a1)
{
  *(_QWORD *)a1 = &off_24C335980;
  *(_QWORD *)(a1 + 352) = off_24C335D90;
  if (*(char *)(a1 + 383) < 0)
    operator delete(*(void **)(a1 + 360));
  *(_QWORD *)(a1 + 304) = off_24C335D90;
  if (*(char *)(a1 + 335) < 0)
    operator delete(*(void **)(a1 + 312));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 240);
  *(_QWORD *)(a1 + 192) = off_24C335D90;
  if (*(char *)(a1 + 223) < 0)
    operator delete(*(void **)(a1 + 200));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 128);
  *(_QWORD *)(a1 + 80) = off_24C335D90;
  if (*(char *)(a1 + 111) < 0)
    operator delete(*(void **)(a1 + 88));
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  mediaplatform::DatabaseTableBase::~DatabaseTableBase((void **)a1);
}

{
  mediaplatform::DatabaseTable<long long,long long,std::string,long long,std::string,long long>::~DatabaseTable(a1);
  JUMPOUT(0x20BD27AFCLL);
}

void mlcore::MediaTable<long long,long long,std::string,long long,std::string,long long>::~MediaTable(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C3364E8;
  *(_QWORD *)(a1 + 672) = off_24C335D90;
  if (*(char *)(a1 + 703) < 0)
    operator delete(*(void **)(a1 + 680));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 608);
  *(_QWORD *)(a1 + 560) = off_24C335D90;
  if (*(char *)(a1 + 591) < 0)
    operator delete(*(void **)(a1 + 568));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 496);
  *(_QWORD *)(a1 + 448) = off_24C335D90;
  if (*(char *)(a1 + 479) < 0)
    operator delete(*(void **)(a1 + 456));
  *(_QWORD *)(a1 + 400) = off_24C335D90;
  if (*(char *)(a1 + 431) < 0)
    operator delete(*(void **)(a1 + 408));
  mediaplatform::DatabaseTable<long long,long long,std::string,long long,std::string,long long>::~DatabaseTable(a1);
}

{
  *(_QWORD *)a1 = off_24C3364E8;
  *(_QWORD *)(a1 + 672) = off_24C335D90;
  if (*(char *)(a1 + 703) < 0)
    operator delete(*(void **)(a1 + 680));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 608);
  *(_QWORD *)(a1 + 560) = off_24C335D90;
  if (*(char *)(a1 + 591) < 0)
    operator delete(*(void **)(a1 + 568));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 496);
  *(_QWORD *)(a1 + 448) = off_24C335D90;
  if (*(char *)(a1 + 479) < 0)
    operator delete(*(void **)(a1 + 456));
  *(_QWORD *)(a1 + 400) = off_24C335D90;
  if (*(char *)(a1 + 431) < 0)
    operator delete(*(void **)(a1 + 408));
  mediaplatform::DatabaseTable<long long,long long,std::string,long long,std::string,long long>::~DatabaseTable(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mediaplatform::DatabaseColumnTuple<1ul,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>>::~DatabaseColumnTuple(uint64_t a1)
{
  *(_QWORD *)(a1 + 224) = off_24C335D90;
  if (*(char *)(a1 + 255) < 0)
    operator delete(*(void **)(a1 + 232));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 160);
  *(_QWORD *)(a1 + 112) = off_24C335D90;
  if (*(char *)(a1 + 143) < 0)
    operator delete(*(void **)(a1 + 120));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 48);
  *(_QWORD *)a1 = off_24C335D90;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t mediaplatform::DatabaseColumnTuple<2ul,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>,mediaplatform::DatabaseColumn<std::string>,mediaplatform::DatabaseColumn<long long>>::~DatabaseColumnTuple(uint64_t a1)
{
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 160);
  *(_QWORD *)(a1 + 112) = off_24C335D90;
  if (*(char *)(a1 + 143) < 0)
    operator delete(*(void **)(a1 + 120));
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn(a1 + 48);
  *(_QWORD *)a1 = off_24C335D90;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void mlcore::BookletTable::persistentIDColumn(mlcore::BookletTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 431) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 51), *((_QWORD *)this + 52));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 408);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 53);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 108);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 111);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 436);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::BookletTable::itemPersistentIDColumn(mlcore::BookletTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 479) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 57), *((_QWORD *)this + 58));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 456);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 59);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 120);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 123);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 484);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::BookletTable::nameColumn(mlcore::BookletTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 527) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 63), *((_QWORD *)this + 64));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 504);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 65);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 132);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 532);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 559) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 67), *((_QWORD *)this + 68));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 536);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 69);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8E9C54(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::BookletTable::storeItemIDColumn(mlcore::BookletTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 591) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 71), *((_QWORD *)this + 72));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 568);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 73);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 148);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 151);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 596);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::BookletTable::redownloadParamsColumn(mlcore::BookletTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;
  std::string *v5;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 639) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 77), *((_QWORD *)this + 78));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 616);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 79);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 160);
  *(_QWORD *)a2 = &off_24C335AB8;
  *(_BYTE *)(a2 + 36) = *((_BYTE *)this + 644);
  v5 = (std::string *)(a2 + 40);
  if (*((char *)this + 671) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)this + 81), *((_QWORD *)this + 82));
  }
  else
  {
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 648);
    *(_QWORD *)(a2 + 56) = *((_QWORD *)this + 83);
  }
  *(_QWORD *)a2 = &off_24C336A60;
}

void sub_20A8E9DB8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;

  *(_QWORD *)v1 = v3;
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void mlcore::BookletTable::fileSizeColumn(mlcore::BookletTable *this@<X0>, uint64_t a2@<X8>)
{
  std::string *v4;

  *(_QWORD *)a2 = off_24C335D90;
  v4 = (std::string *)(a2 + 8);
  if (*((char *)this + 703) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *((const std::string::value_type **)this + 85), *((_QWORD *)this + 86));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 680);
    *(_QWORD *)(a2 + 24) = *((_QWORD *)this + 87);
  }
  *(_DWORD *)(a2 + 32) = *((_DWORD *)this + 176);
  *(_DWORD *)(a2 + 44) = *((_DWORD *)this + 179);
  *(_QWORD *)(a2 + 36) = *(_QWORD *)((char *)this + 708);
  *(_QWORD *)a2 = off_24C336AC0;
}

void mlcore::StringForMediaKind(mlcore *this@<X0>, std::string *a2@<X8>)
{
  int v2;
  uint64_t *v4;
  _OWORD *v5;
  int v6;
  __int128 v7;
  std::string __p;

  v2 = (int)this;
  mlcore::_InitializeKinds(this);
  v4 = *(uint64_t **)(mlcore::__kindsForStrings + 16);
  if (v4)
  {
    while (1)
    {
      v5 = v4 + 2;
      if (*((char *)v4 + 39) < 0)
      {
        std::string::__init_copy_ctor_external(&__p, (const std::string::value_type *)v4[2], v4[3]);
      }
      else
      {
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = *v5;
        __p.__r_.__value_.__r.__words[2] = v4[4];
      }
      v6 = *((_DWORD *)v4 + 10);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if (v6 == v2)
        break;
      v4 = (uint64_t *)*v4;
      if (!v4)
        goto LABEL_9;
    }
    if (*((char *)v4 + 39) < 0)
    {
      std::string::__init_copy_ctor_external(a2, (const std::string::value_type *)v4[2], v4[3]);
    }
    else
    {
      v7 = *v5;
      a2->__r_.__value_.__r.__words[2] = v4[4];
      *(_OWORD *)&a2->__r_.__value_.__l.__data_ = v7;
    }
  }
  else
  {
LABEL_9:
    std::string::basic_string[abi:ne180100]<0>(a2, "UnknownKind");
  }
}

void mlcore::_InitializeKinds(mlcore *this)
{
  unint64_t v1;
  char v2;
  char **v3;
  char *v4;

  v1 = atomic_load(&mlcore::_InitializeKinds(void)::once);
  if (v1 != -1)
  {
    v4 = &v2;
    v3 = &v4;
    std::__call_once(&mlcore::_InitializeKinds(void)::once, &v3, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::_InitializeKinds(void)::$_0 &&>>);
  }
}

void mlcore::_InitializeKinds(void)::$_0::operator()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void *__p[2];
  uint64_t v5;
  void *v6[2];
  uint64_t v7;
  void *v8[2];
  uint64_t v9;
  void *v10[2];
  uint64_t v11;
  void *v12[2];
  uint64_t v13;
  void *v14[2];
  uint64_t v15;
  void *v16[2];
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  void *v20[2];
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  void *v24[2];
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  void *v28[2];
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  void *v32[2];
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  void *v36[2];
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  void *v40[2];
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  void *v44[2];
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  void *v48[2];
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  void *v52[2];
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  void *v56[2];
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  void *v60[2];
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  void *v64[2];
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  void *v68[2];
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  void *v72[2];
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  void *v76[2];
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  void *v80[2];
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  void *v84[2];
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  void *v88[2];
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  void *v92[2];
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  void *v96[2];
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  void *v100[2];
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  void *v104[2];
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  void *v108[2];
  uint64_t v109;
  __int128 v110;
  uint64_t v111;
  void *v112[2];
  uint64_t v113;
  __int128 v114;
  uint64_t v115;
  void *v116[2];
  uint64_t v117;
  void *v118[2];
  uint64_t v119;
  __int128 v120;
  uint64_t v121;
  int v122;
  __int128 v123;
  uint64_t v124;
  int v125;
  __int128 v126;
  uint64_t v127;
  int v128;
  __int128 v129;
  uint64_t v130;
  int v131;
  __int128 v132;
  uint64_t v133;
  int v134;
  __int128 v135;
  uint64_t v136;
  int v137;
  __int128 v138;
  uint64_t v139;
  int v140;
  __int128 v141;
  uint64_t v142;
  int v143;
  __int128 v144;
  uint64_t v145;
  int v146;
  __int128 v147;
  uint64_t v148;
  int v149;
  __int128 v150;
  uint64_t v151;
  int v152;
  __int128 v153;
  uint64_t v154;
  int v155;
  __int128 v156;
  uint64_t v157;
  int v158;
  __int128 v159;
  uint64_t v160;
  int v161;
  __int128 v162;
  uint64_t v163;
  int v164;
  __int128 v165;
  uint64_t v166;
  int v167;
  __int128 v168;
  uint64_t v169;
  int v170;
  __int128 v171;
  uint64_t v172;
  int v173;
  __int128 v174;
  uint64_t v175;
  int v176;
  __int128 v177;
  uint64_t v178;
  int v179;
  __int128 v180;
  uint64_t v181;
  int v182;
  __int128 v183;
  uint64_t v184;
  int v185;
  __int128 v186;
  uint64_t v187;
  int v188;
  __int128 v189;
  uint64_t v190;
  int v191;
  __int128 v192;
  uint64_t v193;
  int v194;
  __int128 v195;
  uint64_t v196;
  int v197;
  __int128 v198;
  uint64_t v199;
  int v200;
  __int128 v201;
  uint64_t v202;
  int v203;
  __int128 v204;
  uint64_t v205;
  int v206;
  __int128 v207;
  uint64_t v208;
  int v209;
  __int128 v210;
  uint64_t v211;
  int v212;
  __int128 v213;
  uint64_t v214;
  int v215;
  __int128 v216;
  uint64_t v217;
  int v218;
  __int128 v219;
  uint64_t v220;
  int v221;
  __int128 v222;
  uint64_t v223;
  int v224;
  __int128 v225;
  uint64_t v226;
  int v227;
  __int128 v228;
  uint64_t v229;
  int v230;
  __int128 v231;
  uint64_t v232;
  int v233;
  __int128 v234;
  uint64_t v235;
  int v236;
  __int128 v237;
  uint64_t v238;
  int v239;
  __int128 v240;
  uint64_t v241;
  int v242;
  __int128 v243;
  uint64_t v244;
  int v245;
  __int128 v246;
  uint64_t v247;
  int v248;
  __int128 v249;
  uint64_t v250;
  int v251;
  __int128 v252;
  uint64_t v253;
  int v254;
  __int128 v255;
  uint64_t v256;
  int v257;
  __int128 v258;
  uint64_t v259;
  int v260;
  __int128 v261;
  uint64_t v262;
  int v263;
  __int128 v264;
  uint64_t v265;
  int v266;
  __int128 v267;
  uint64_t v268;
  int v269;
  __int128 v270;
  uint64_t v271;
  int v272;
  __int128 v273;
  uint64_t v274;
  int v275;
  __int128 v276;
  uint64_t v277;
  int v278;
  __int128 v279;
  uint64_t v280;
  int v281;
  __int128 v282;
  uint64_t v283;
  int v284;
  __int128 v285;
  uint64_t v286;
  int v287;
  __int128 v288;
  uint64_t v289;
  int v290;
  __int128 v291;
  uint64_t v292;
  int v293;
  uint64_t v294;

  v294 = *MEMORY[0x24BDAC8D0];
  v0 = (uint64_t *)operator new();
  mlcore::_CreateString((mlcore *)v118, CFSTR("QUICKTIME_MOVIE_KIND"));
  v120 = *(_OWORD *)v118;
  v121 = v119;
  v119 = 0;
  *(_OWORD *)v118 = 0uLL;
  v122 = 1;
  mlcore::_CreateString((mlcore *)v116, CFSTR("QUICKTIME_MOVIE_URL_KIND"));
  v123 = *(_OWORD *)v116;
  v124 = v117;
  v117 = 0;
  v116[0] = 0;
  v116[1] = 0;
  v125 = 2;
  mlcore::_CreateString((mlcore *)&v114, CFSTR("PROTECTED_VIDEO_KIND"));
  v126 = v114;
  v127 = v115;
  v115 = 0;
  v114 = 0uLL;
  v128 = 3;
  mlcore::_CreateString((mlcore *)v112, CFSTR("UNPROTECTED_VIDEO_KIND"));
  v129 = *(_OWORD *)v112;
  v130 = v113;
  v113 = 0;
  v112[0] = 0;
  v112[1] = 0;
  v131 = 4;
  mlcore::_CreateString((mlcore *)&v110, CFSTR("PURCHASED_VIDEO_KIND"));
  v132 = v110;
  v133 = v111;
  v111 = 0;
  v110 = 0uLL;
  v134 = 5;
  mlcore::_CreateString((mlcore *)v108, CFSTR("MATCHED_VIDEO_KIND"));
  v135 = *(_OWORD *)v108;
  v136 = v109;
  v109 = 0;
  v108[0] = 0;
  v108[1] = 0;
  v137 = 6;
  mlcore::_CreateString((mlcore *)&v106, CFSTR("MPEG4_AUDIO_FILE_KIND"));
  v138 = v106;
  v139 = v107;
  v107 = 0;
  v106 = 0uLL;
  v140 = 7;
  mlcore::_CreateString((mlcore *)v104, CFSTR("MPEG4_PROTECTED_AUDIO_FILE_KIND"));
  v141 = *(_OWORD *)v104;
  v142 = v105;
  v105 = 0;
  v104[0] = 0;
  v104[1] = 0;
  v143 = 8;
  mlcore::_CreateString((mlcore *)&v102, CFSTR("MPEG4_PURCHASED_AUDIO_FILE_KIND"));
  v144 = v102;
  v145 = v103;
  v103 = 0;
  v102 = 0uLL;
  v146 = 9;
  mlcore::_CreateString((mlcore *)v100, CFSTR("MPEG4_AUDIO_STREAM_KIND"));
  v147 = *(_OWORD *)v100;
  v148 = v101;
  v101 = 0;
  v100[0] = 0;
  v100[1] = 0;
  v149 = 10;
  mlcore::_CreateString((mlcore *)&v98, CFSTR("MPEG4_PROTECTED_AUDIO_STREAM_KIND"));
  v150 = v98;
  v151 = v99;
  v99 = 0;
  v98 = 0uLL;
  v152 = 11;
  mlcore::_CreateString((mlcore *)v96, CFSTR("AAC_AUDIO_FILE_KIND"));
  v153 = *(_OWORD *)v96;
  v154 = v97;
  v97 = 0;
  v96[0] = 0;
  v96[1] = 0;
  v155 = 12;
  mlcore::_CreateString((mlcore *)&v94, CFSTR("AAC_PROTECTED_AUDIO_FILE_KIND"));
  v156 = v94;
  v157 = v95;
  v95 = 0;
  v94 = 0uLL;
  v158 = 13;
  mlcore::_CreateString((mlcore *)v92, CFSTR("AAC_PURCHASED_AUDIO_FILE_KIND"));
  v159 = *(_OWORD *)v92;
  v160 = v93;
  v93 = 0;
  v92[0] = 0;
  v92[1] = 0;
  v161 = 14;
  mlcore::_CreateString((mlcore *)&v90, CFSTR("AAC_MATCHED_AUDIO_FILE_KIND"));
  v162 = v90;
  v163 = v91;
  v91 = 0;
  v90 = 0uLL;
  v164 = 15;
  mlcore::_CreateString((mlcore *)v88, CFSTR("AAC_PROTECTED_MASTERED_AUDIO_FILE_KIND"));
  v165 = *(_OWORD *)v88;
  v166 = v89;
  v89 = 0;
  v88[0] = 0;
  v88[1] = 0;
  v167 = 16;
  mlcore::_CreateString((mlcore *)&v86, CFSTR("AAC_PURCHASED_MASTERED_AUDIO_FILE_KIND"));
  v168 = v86;
  v169 = v87;
  v87 = 0;
  v86 = 0uLL;
  v170 = 17;
  mlcore::_CreateString((mlcore *)v84, CFSTR("AAC_MATCHED_MASTERED_AUDIO_FILE_KIND"));
  v171 = *(_OWORD *)v84;
  v172 = v85;
  v85 = 0;
  v84[0] = 0;
  v84[1] = 0;
  v173 = 18;
  mlcore::_CreateString((mlcore *)&v82, CFSTR("AAC_AUDIO_STREAM_KIND"));
  v174 = v82;
  v175 = v83;
  v83 = 0;
  v82 = 0uLL;
  v176 = 19;
  mlcore::_CreateString((mlcore *)v80, CFSTR("AAC_PROTECTED_AUDIO_STREAM_KIND"));
  v177 = *(_OWORD *)v80;
  v178 = v81;
  v81 = 0;
  v80[0] = 0;
  v80[1] = 0;
  v179 = 20;
  mlcore::_CreateString((mlcore *)&v78, CFSTR("AAC_PURCHASED_AUDIO_STREAM_KIND"));
  v180 = v78;
  v181 = v79;
  v79 = 0;
  v78 = 0uLL;
  v182 = 21;
  mlcore::_CreateString((mlcore *)v76, CFSTR("AAC_MATCHED_AUDIO_STREAM_KIND"));
  v183 = *(_OWORD *)v76;
  v184 = v77;
  v77 = 0;
  v76[0] = 0;
  v76[1] = 0;
  v185 = 22;
  mlcore::_CreateString((mlcore *)&v74, CFSTR("AAC_PROTECTED_MASTERED_AUDIO_STREAM_KIND"));
  v186 = v74;
  v187 = v75;
  v75 = 0;
  v74 = 0uLL;
  v188 = 23;
  mlcore::_CreateString((mlcore *)v72, CFSTR("AAC_PURCHASED_MASTERED_AUDIO_STREAM_KIND"));
  v189 = *(_OWORD *)v72;
  v190 = v73;
  v73 = 0;
  v72[0] = 0;
  v72[1] = 0;
  v191 = 24;
  mlcore::_CreateString((mlcore *)&v70, CFSTR("AAC_MATCHED_MASTERED_AUDIO_STREAM_KIND"));
  v192 = v70;
  v193 = v71;
  v71 = 0;
  v70 = 0uLL;
  v194 = 25;
  mlcore::_CreateString((mlcore *)v68, CFSTR("LOSSLESS_AUDIO_FILE_KIND"));
  v195 = *(_OWORD *)v68;
  v196 = v69;
  v69 = 0;
  v68[0] = 0;
  v68[1] = 0;
  v197 = 26;
  mlcore::_CreateString((mlcore *)&v66, CFSTR("LOSSLESS_PROTECTED_AUDIO_FILE_KIND"));
  v198 = v66;
  v199 = v67;
  v67 = 0;
  v66 = 0uLL;
  v200 = 27;
  mlcore::_CreateString((mlcore *)v64, CFSTR("LOSSLESS_AUDIO_STREAM_KIND"));
  v201 = *(_OWORD *)v64;
  v202 = v65;
  v65 = 0;
  v64[0] = 0;
  v64[1] = 0;
  v203 = 30;
  mlcore::_CreateString((mlcore *)&v62, CFSTR("LOSSLESS_PROTECTED_AUDIO_STREAM_KIND"));
  v204 = v62;
  v205 = v63;
  v63 = 0;
  v62 = 0uLL;
  v206 = 31;
  mlcore::_CreateString((mlcore *)v60, CFSTR("RINGTONE_AUDIO_FILE_KIND"));
  v207 = *(_OWORD *)v60;
  v208 = v61;
  v61 = 0;
  v60[0] = 0;
  v60[1] = 0;
  v209 = 34;
  mlcore::_CreateString((mlcore *)&v58, CFSTR("AUDIBLE_FILE_KIND"));
  v210 = v58;
  v211 = v59;
  v59 = 0;
  v58 = 0uLL;
  v212 = 35;
  mlcore::_CreateString((mlcore *)v56, CFSTR("INTERNET_AUDIO_STREAM_KIND"));
  v213 = *(_OWORD *)v56;
  v214 = v57;
  v57 = 0;
  v56[0] = 0;
  v56[1] = 0;
  v215 = 36;
  mlcore::_CreateString((mlcore *)&v54, CFSTR("INTERNET_AUDIO_FILE_KIND"));
  v216 = v54;
  v217 = v55;
  v55 = 0;
  v54 = 0uLL;
  v218 = 37;
  mlcore::_CreateString((mlcore *)v52, CFSTR("MP3_INTERNET_AUDIO_STREAM_KIND"));
  v219 = *(_OWORD *)v52;
  v220 = v53;
  v53 = 0;
  v52[0] = 0;
  v52[1] = 0;
  v221 = 38;
  mlcore::_CreateString((mlcore *)&v50, CFSTR("MPEG4_INTERNET_AUDIO_STREAM_KIND"));
  v222 = v50;
  v223 = v51;
  v51 = 0;
  v50 = 0uLL;
  v224 = 39;
  mlcore::_CreateString((mlcore *)v48, CFSTR("AAC_INTERNET_AUDIO_STREAM_KIND"));
  v225 = *(_OWORD *)v48;
  v226 = v49;
  v49 = 0;
  v48[0] = 0;
  v48[1] = 0;
  v227 = 40;
  mlcore::_CreateString((mlcore *)&v46, CFSTR("HEAAC_INTERNET_AUDIO_STREAM_KIND"));
  v228 = v46;
  v229 = v47;
  v47 = 0;
  v46 = 0uLL;
  v230 = 41;
  mlcore::_CreateString((mlcore *)v44, CFSTR("MP3_AUDIO_FILE_KIND"));
  v231 = *(_OWORD *)v44;
  v232 = v45;
  v44[1] = 0;
  v45 = 0;
  v44[0] = 0;
  v233 = 42;
  mlcore::_CreateString((mlcore *)&v42, CFSTR("MP3_AUDIO_STREAM_KIND"));
  v234 = v42;
  v235 = v43;
  v43 = 0;
  v42 = 0uLL;
  v236 = 43;
  mlcore::_CreateString((mlcore *)v40, CFSTR("AIFF_AUDIO_FILE_KIND"));
  v237 = *(_OWORD *)v40;
  v238 = v41;
  v40[1] = 0;
  v41 = 0;
  v40[0] = 0;
  v239 = 44;
  mlcore::_CreateString((mlcore *)&v38, CFSTR("WAV_AUDIO_FILE_KIND"));
  v240 = v38;
  v241 = v39;
  v39 = 0;
  v38 = 0uLL;
  v242 = 45;
  mlcore::_CreateString((mlcore *)v36, CFSTR("SD2_AUDIO_FILE_KIND"));
  v243 = *(_OWORD *)v36;
  v244 = v37;
  v36[1] = 0;
  v37 = 0;
  v36[0] = 0;
  v245 = 46;
  mlcore::_CreateString((mlcore *)&v34, CFSTR("AIFF_AUDIO_STREAM_KIND"));
  v246 = v34;
  v247 = v35;
  v35 = 0;
  v34 = 0uLL;
  v248 = 47;
  mlcore::_CreateString((mlcore *)v32, CFSTR("WAV_AUDIO_STREAM_KIND"));
  v249 = *(_OWORD *)v32;
  v250 = v33;
  v32[1] = 0;
  v33 = 0;
  v32[0] = 0;
  v251 = 48;
  mlcore::_CreateString((mlcore *)&v30, CFSTR("AUDIBLE_FILE_KIND"));
  v252 = v30;
  v253 = v31;
  v31 = 0;
  v30 = 0uLL;
  v254 = 49;
  mlcore::_CreateString((mlcore *)v28, CFSTR("BOOK_FILE_KIND"));
  v255 = *(_OWORD *)v28;
  v256 = v29;
  v28[1] = 0;
  v29 = 0;
  v28[0] = 0;
  v257 = 50;
  mlcore::_CreateString((mlcore *)&v26, CFSTR("BOOK_PURCHASED_FILE_KIND"));
  v258 = v26;
  v259 = v27;
  v27 = 0;
  v26 = 0uLL;
  v260 = 51;
  mlcore::_CreateString((mlcore *)v24, CFSTR("BOOK_PROTECTED_FILE_KIND"));
  v261 = *(_OWORD *)v24;
  v262 = v25;
  v24[1] = 0;
  v25 = 0;
  v24[0] = 0;
  v263 = 52;
  mlcore::_CreateString((mlcore *)&v22, CFSTR("ITUNES_EXTRA_KIND"));
  v264 = v22;
  v265 = v23;
  v23 = 0;
  v22 = 0uLL;
  v266 = 53;
  mlcore::_CreateString((mlcore *)v20, CFSTR("ITUNES_LP_KIND"));
  v267 = *(_OWORD *)v20;
  v268 = v21;
  v20[1] = 0;
  v21 = 0;
  v20[0] = 0;
  v269 = 54;
  mlcore::_CreateString((mlcore *)&v18, CFSTR("PDF_FILE_KIND"));
  v270 = v18;
  v271 = v19;
  v19 = 0;
  v18 = 0uLL;
  v272 = 55;
  mlcore::_CreateString((mlcore *)v16, CFSTR("PLAYLIST_URL_KIND"));
  v273 = *(_OWORD *)v16;
  v274 = v17;
  v16[1] = 0;
  v17 = 0;
  v16[0] = 0;
  v275 = 56;
  mlcore::_CreateString((mlcore *)v14, CFSTR("IPHONE_APPLICATION_KIND"));
  v276 = *(_OWORD *)v14;
  v277 = v15;
  v14[1] = 0;
  v15 = 0;
  v14[0] = 0;
  v278 = 57;
  mlcore::_CreateString((mlcore *)v12, CFSTR("UNIVERSAL_APPLICATION_KIND"));
  v279 = *(_OWORD *)v12;
  v280 = v13;
  v12[1] = 0;
  v13 = 0;
  v12[0] = 0;
  v281 = 58;
  mlcore::_CreateString((mlcore *)v10, CFSTR("IPAD_APPLICATION_KIND"));
  v282 = *(_OWORD *)v10;
  v283 = v11;
  v10[1] = 0;
  v11 = 0;
  v10[0] = 0;
  v284 = 59;
  mlcore::_CreateString((mlcore *)v8, CFSTR("IPOD_GAME_KIND"));
  v285 = *(_OWORD *)v8;
  v286 = v9;
  v8[1] = 0;
  v9 = 0;
  v8[0] = 0;
  v287 = 60;
  mlcore::_CreateString((mlcore *)v6, CFSTR("WMA_AUDIO_FILE_KIND"));
  v288 = *(_OWORD *)v6;
  v289 = v7;
  v6[1] = 0;
  v7 = 0;
  v6[0] = 0;
  v290 = 61;
  mlcore::_CreateString((mlcore *)__p, CFSTR("CAF_AUDIO_FILE_KIND"));
  v291 = *(_OWORD *)__p;
  v292 = v5;
  __p[1] = 0;
  v5 = 0;
  __p[0] = 0;
  v293 = 62;
  std::unordered_map<std::string,int>::unordered_map(v0, (uint64_t)&v120, 58);
  mlcore::__kindsForStrings = (uint64_t)v0;
  v1 = 232;
  do
  {
    if (SHIBYTE(v118[v1 + 1]) < 0)
      operator delete(v118[v1 - 1]);
    v1 -= 4;
  }
  while (v1 * 8);
  if (SHIBYTE(v5) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v7) < 0)
    operator delete(v6[0]);
  if (SHIBYTE(v9) < 0)
    operator delete(v8[0]);
  if (SHIBYTE(v11) < 0)
    operator delete(v10[0]);
  if (SHIBYTE(v13) < 0)
    operator delete(v12[0]);
  if (SHIBYTE(v15) < 0)
    operator delete(v14[0]);
  if (SHIBYTE(v17) < 0)
    operator delete(v16[0]);
  if (SHIBYTE(v19) < 0)
    operator delete((void *)v18);
  if (SHIBYTE(v21) < 0)
    operator delete(v20[0]);
  if (SHIBYTE(v23) < 0)
    operator delete((void *)v22);
  if (SHIBYTE(v25) < 0)
    operator delete(v24[0]);
  if (SHIBYTE(v27) < 0)
    operator delete((void *)v26);
  if (SHIBYTE(v29) < 0)
    operator delete(v28[0]);
  if (SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  if (SHIBYTE(v33) < 0)
    operator delete(v32[0]);
  if (SHIBYTE(v35) < 0)
    operator delete((void *)v34);
  if (SHIBYTE(v37) < 0)
    operator delete(v36[0]);
  if (SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (SHIBYTE(v41) < 0)
    operator delete(v40[0]);
  if (SHIBYTE(v43) < 0)
    operator delete((void *)v42);
  if (SHIBYTE(v45) < 0)
    operator delete(v44[0]);
  if (SHIBYTE(v47) < 0)
    operator delete((void *)v46);
  if (SHIBYTE(v49) < 0)
    operator delete(v48[0]);
  if (SHIBYTE(v51) < 0)
    operator delete((void *)v50);
  if (SHIBYTE(v53) < 0)
    operator delete(v52[0]);
  if (SHIBYTE(v55) < 0)
    operator delete((void *)v54);
  if (SHIBYTE(v57) < 0)
    operator delete(v56[0]);
  if (SHIBYTE(v59) < 0)
    operator delete((void *)v58);
  if (SHIBYTE(v61) < 0)
    operator delete(v60[0]);
  if (SHIBYTE(v63) < 0)
    operator delete((void *)v62);
  if (SHIBYTE(v65) < 0)
    operator delete(v64[0]);
  if (SHIBYTE(v67) < 0)
    operator delete((void *)v66);
  if (SHIBYTE(v69) < 0)
    operator delete(v68[0]);
  if (SHIBYTE(v71) < 0)
    operator delete((void *)v70);
  if (SHIBYTE(v73) < 0)
    operator delete(v72[0]);
  if (SHIBYTE(v75) < 0)
    operator delete((void *)v74);
  if (SHIBYTE(v77) < 0)
    operator delete(v76[0]);
  if (SHIBYTE(v79) < 0)
    operator delete((void *)v78);
  if (SHIBYTE(v81) < 0)
    operator delete(v80[0]);
  if (SHIBYTE(v83) < 0)
    operator delete((void *)v82);
  if (SHIBYTE(v85) < 0)
    operator delete(v84[0]);
  if (SHIBYTE(v87) < 0)
    operator delete((void *)v86);
  if (SHIBYTE(v89) < 0)
    operator delete(v88[0]);
  if (SHIBYTE(v91) < 0)
    operator delete((void *)v90);
  if (SHIBYTE(v93) < 0)
    operator delete(v92[0]);
  if (SHIBYTE(v95) < 0)
    operator delete((void *)v94);
  if (SHIBYTE(v97) < 0)
    operator delete(v96[0]);
  if (SHIBYTE(v99) < 0)
    operator delete((void *)v98);
  if (SHIBYTE(v101) < 0)
    operator delete(v100[0]);
  if (SHIBYTE(v103) < 0)
    operator delete((void *)v102);
  if (SHIBYTE(v105) < 0)
    operator delete(v104[0]);
  if (SHIBYTE(v107) < 0)
    operator delete((void *)v106);
  if (SHIBYTE(v109) < 0)
    operator delete(v108[0]);
  if (SHIBYTE(v111) < 0)
    operator delete((void *)v110);
  if (SHIBYTE(v113) < 0)
    operator delete(v112[0]);
  if (SHIBYTE(v115) < 0)
    operator delete((void *)v114);
  if (SHIBYTE(v117) < 0)
    operator delete(v116[0]);
  if (SHIBYTE(v119) < 0)
    operator delete(v118[0]);
  v2 = (uint64_t *)operator new();
  mlcore::_CreateString((mlcore *)v118, CFSTR("QUICKTIME_MOVIE_KIND_OLD"));
  v120 = *(_OWORD *)v118;
  v121 = v119;
  v119 = 0;
  *(_OWORD *)v118 = 0uLL;
  v122 = 1;
  mlcore::_CreateString((mlcore *)v116, CFSTR("QUICKTIME_MOVIE_URL_KIND_OLD"));
  v123 = *(_OWORD *)v116;
  v124 = v117;
  v117 = 0;
  v116[0] = 0;
  v116[1] = 0;
  v125 = 2;
  mlcore::_CreateString((mlcore *)&v114, CFSTR("PROTECTED_VIDEO_KIND_OLD"));
  v126 = v114;
  v127 = v115;
  v115 = 0;
  v114 = 0uLL;
  v128 = 3;
  mlcore::_CreateString((mlcore *)v112, CFSTR("UNPROTECTED_VIDEO_KIND_OLD"));
  v129 = *(_OWORD *)v112;
  v130 = v113;
  v113 = 0;
  v112[0] = 0;
  v112[1] = 0;
  v131 = 4;
  mlcore::_CreateString((mlcore *)&v110, CFSTR("PURCHASED_VIDEO_KIND_OLD"));
  v132 = v110;
  v133 = v111;
  v111 = 0;
  v110 = 0uLL;
  v134 = 5;
  mlcore::_CreateString((mlcore *)v108, CFSTR("MATCHED_VIDEO_KIND_OLD"));
  v135 = *(_OWORD *)v108;
  v136 = v109;
  v109 = 0;
  v108[0] = 0;
  v108[1] = 0;
  v137 = 6;
  mlcore::_CreateString((mlcore *)&v106, CFSTR("MPEG4_AUDIO_FILE_KIND_OLD"));
  v138 = v106;
  v139 = v107;
  v107 = 0;
  v106 = 0uLL;
  v140 = 7;
  mlcore::_CreateString((mlcore *)v104, CFSTR("MPEG4_PROTECTED_AUDIO_FILE_KIND_OLD"));
  v141 = *(_OWORD *)v104;
  v142 = v105;
  v105 = 0;
  v104[0] = 0;
  v104[1] = 0;
  v143 = 8;
  mlcore::_CreateString((mlcore *)&v102, CFSTR("MPEG4_PURCHASED_AUDIO_FILE_KIND_OLD"));
  v144 = v102;
  v145 = v103;
  v103 = 0;
  v102 = 0uLL;
  v146 = 9;
  mlcore::_CreateString((mlcore *)v100, CFSTR("MPEG4_AUDIO_STREAM_KIND_OLD"));
  v147 = *(_OWORD *)v100;
  v148 = v101;
  v101 = 0;
  v100[0] = 0;
  v100[1] = 0;
  v149 = 10;
  mlcore::_CreateString((mlcore *)&v98, CFSTR("MPEG4_PROTECTED_AUDIO_STREAM_KIND_OLD"));
  v150 = v98;
  v151 = v99;
  v99 = 0;
  v98 = 0uLL;
  v152 = 11;
  mlcore::_CreateString((mlcore *)v96, CFSTR("AAC_AUDIO_FILE_KIND_OLD"));
  v153 = *(_OWORD *)v96;
  v154 = v97;
  v97 = 0;
  v96[0] = 0;
  v96[1] = 0;
  v155 = 12;
  mlcore::_CreateString((mlcore *)&v94, CFSTR("AAC_PROTECTED_AUDIO_FILE_KIND_OLD"));
  v156 = v94;
  v157 = v95;
  v95 = 0;
  v94 = 0uLL;
  v158 = 13;
  mlcore::_CreateString((mlcore *)v92, CFSTR("AAC_PURCHASED_AUDIO_FILE_KIND_OLD"));
  v159 = *(_OWORD *)v92;
  v160 = v93;
  v93 = 0;
  v92[0] = 0;
  v92[1] = 0;
  v161 = 14;
  mlcore::_CreateString((mlcore *)&v90, CFSTR("AAC_MATCHED_AUDIO_FILE_KIND_OLD"));
  v162 = v90;
  v163 = v91;
  v91 = 0;
  v90 = 0uLL;
  v164 = 15;
  mlcore::_CreateString((mlcore *)v88, CFSTR("AAC_AUDIO_STREAM_KIND_OLD"));
  v165 = *(_OWORD *)v88;
  v166 = v89;
  v89 = 0;
  v88[0] = 0;
  v88[1] = 0;
  v167 = 19;
  mlcore::_CreateString((mlcore *)&v86, CFSTR("AAC_PROTECTED_AUDIO_STREAM_KIND_OLD"));
  v168 = v86;
  v169 = v87;
  v87 = 0;
  v86 = 0uLL;
  v170 = 20;
  mlcore::_CreateString((mlcore *)v84, CFSTR("AAC_PURCHASED_AUDIO_STREAM_KIND_OLD"));
  v171 = *(_OWORD *)v84;
  v172 = v85;
  v85 = 0;
  v84[0] = 0;
  v84[1] = 0;
  v173 = 21;
  mlcore::_CreateString((mlcore *)&v82, CFSTR("AAC_MATCHED_AUDIO_STREAM_KIND_OLD"));
  v174 = v82;
  v175 = v83;
  v83 = 0;
  v82 = 0uLL;
  v176 = 22;
  mlcore::_CreateString((mlcore *)v80, CFSTR("LOSSLESS_AUDIO_FILE_KIND_OLD"));
  v177 = *(_OWORD *)v80;
  v178 = v81;
  v81 = 0;
  v80[0] = 0;
  v80[1] = 0;
  v179 = 26;
  mlcore::_CreateString((mlcore *)&v78, CFSTR("LOSSLESS_PROTECTED_AUDIO_FILE_KIND_OLD"));
  v180 = v78;
  v181 = v79;
  v79 = 0;
  v78 = 0uLL;
  v182 = 27;
  mlcore::_CreateString((mlcore *)v76, CFSTR("LOSSLESS_AUDIO_STREAM_KIND_OLD"));
  v183 = *(_OWORD *)v76;
  v184 = v77;
  v77 = 0;
  v76[0] = 0;
  v76[1] = 0;
  v185 = 30;
  mlcore::_CreateString((mlcore *)&v74, CFSTR("LOSSLESS_PROTECTED_AUDIO_STREAM_KIND_OLD"));
  v186 = v74;
  v187 = v75;
  v75 = 0;
  v74 = 0uLL;
  v188 = 31;
  mlcore::_CreateString((mlcore *)v72, CFSTR("RINGTONE_AUDIO_FILE_KIND_OLD"));
  v189 = *(_OWORD *)v72;
  v190 = v73;
  v73 = 0;
  v72[0] = 0;
  v72[1] = 0;
  v191 = 34;
  mlcore::_CreateString((mlcore *)&v70, CFSTR("AUDIBLE_FILE_KIND_OLD"));
  v192 = v70;
  v193 = v71;
  v71 = 0;
  v70 = 0uLL;
  v194 = 35;
  mlcore::_CreateString((mlcore *)v68, CFSTR("INTERNET_AUDIO_STREAM_KIND_OLD"));
  v195 = *(_OWORD *)v68;
  v196 = v69;
  v69 = 0;
  v68[0] = 0;
  v68[1] = 0;
  v197 = 36;
  mlcore::_CreateString((mlcore *)&v66, CFSTR("INTERNET_AUDIO_FILE_KIND_OLD"));
  v198 = v66;
  v199 = v67;
  v67 = 0;
  v66 = 0uLL;
  v200 = 37;
  mlcore::_CreateString((mlcore *)v64, CFSTR("MP3_INTERNET_AUDIO_STREAM_KIND_OLD"));
  v201 = *(_OWORD *)v64;
  v202 = v65;
  v65 = 0;
  v64[0] = 0;
  v64[1] = 0;
  v203 = 38;
  mlcore::_CreateString((mlcore *)&v62, CFSTR("MPEG4_INTERNET_AUDIO_STREAM_KIND_OLD"));
  v204 = v62;
  v205 = v63;
  v63 = 0;
  v62 = 0uLL;
  v206 = 39;
  mlcore::_CreateString((mlcore *)v60, CFSTR("AAC_INTERNET_AUDIO_STREAM_KIND_OLD"));
  v207 = *(_OWORD *)v60;
  v208 = v61;
  v61 = 0;
  v60[0] = 0;
  v60[1] = 0;
  v209 = 40;
  mlcore::_CreateString((mlcore *)&v58, CFSTR("HEAAC_INTERNET_AUDIO_STREAM_KIND_OLD"));
  v210 = v58;
  v211 = v59;
  v59 = 0;
  v58 = 0uLL;
  v212 = 41;
  mlcore::_CreateString((mlcore *)v56, CFSTR("MP3_AUDIO_FILE_KIND_OLD"));
  v213 = *(_OWORD *)v56;
  v214 = v57;
  v57 = 0;
  v56[0] = 0;
  v56[1] = 0;
  v215 = 42;
  mlcore::_CreateString((mlcore *)&v54, CFSTR("MP3_AUDIO_STREAM_KIND_OLD"));
  v216 = v54;
  v217 = v55;
  v55 = 0;
  v54 = 0uLL;
  v218 = 43;
  mlcore::_CreateString((mlcore *)v52, CFSTR("AIFF_AUDIO_FILE_KIND_OLD"));
  v219 = *(_OWORD *)v52;
  v220 = v53;
  v53 = 0;
  v52[0] = 0;
  v52[1] = 0;
  v221 = 44;
  mlcore::_CreateString((mlcore *)&v50, CFSTR("WAV_AUDIO_FILE_KIND_OLD"));
  v222 = v50;
  v223 = v51;
  v51 = 0;
  v50 = 0uLL;
  v224 = 45;
  mlcore::_CreateString((mlcore *)v48, CFSTR("SD2_AUDIO_FILE_KIND_OLD"));
  v225 = *(_OWORD *)v48;
  v226 = v49;
  v49 = 0;
  v48[0] = 0;
  v48[1] = 0;
  v227 = 46;
  mlcore::_CreateString((mlcore *)&v46, CFSTR("AIFF_AUDIO_STREAM_KIND_OLD"));
  v228 = v46;
  v229 = v47;
  v47 = 0;
  v46 = 0uLL;
  v230 = 47;
  mlcore::_CreateString((mlcore *)v44, CFSTR("WAV_AUDIO_STREAM_KIND_OLD"));
  v231 = *(_OWORD *)v44;
  v232 = v45;
  v44[1] = 0;
  v45 = 0;
  v44[0] = 0;
  v233 = 48;
  mlcore::_CreateString((mlcore *)&v42, CFSTR("AUDIBLE_FILE_KIND_OLD"));
  v234 = v42;
  v235 = v43;
  v43 = 0;
  v42 = 0uLL;
  v236 = 49;
  mlcore::_CreateString((mlcore *)v40, CFSTR("BOOK_FILE_KIND_OLD"));
  v237 = *(_OWORD *)v40;
  v238 = v41;
  v40[1] = 0;
  v41 = 0;
  v40[0] = 0;
  v239 = 50;
  mlcore::_CreateString((mlcore *)&v38, CFSTR("BOOK_PURCHASED_FILE_KIND_OLD"));
  v240 = v38;
  v241 = v39;
  v39 = 0;
  v38 = 0uLL;
  v242 = 51;
  mlcore::_CreateString((mlcore *)v36, CFSTR("BOOK_PROTECTED_FILE_KIND_OLD"));
  v243 = *(_OWORD *)v36;
  v244 = v37;
  v36[1] = 0;
  v37 = 0;
  v36[0] = 0;
  v245 = 52;
  mlcore::_CreateString((mlcore *)&v34, CFSTR("ITUNES_EXTRA_KIND_OLD"));
  v246 = v34;
  v247 = v35;
  v35 = 0;
  v34 = 0uLL;
  v248 = 53;
  mlcore::_CreateString((mlcore *)v32, CFSTR("ITUNES_LP_KIND_OLD"));
  v249 = *(_OWORD *)v32;
  v250 = v33;
  v32[1] = 0;
  v33 = 0;
  v32[0] = 0;
  v251 = 54;
  mlcore::_CreateString((mlcore *)&v30, CFSTR("PDF_FILE_KIND_OLD"));
  v252 = v30;
  v253 = v31;
  v31 = 0;
  v30 = 0uLL;
  v254 = 55;
  mlcore::_CreateString((mlcore *)v28, CFSTR("PLAYLIST_URL_KIND_OLD"));
  v255 = *(_OWORD *)v28;
  v256 = v29;
  v28[1] = 0;
  v29 = 0;
  v28[0] = 0;
  v257 = 56;
  mlcore::_CreateString((mlcore *)&v26, CFSTR("IPHONE_APPLICATION_KIND_OLD"));
  v258 = v26;
  v259 = v27;
  v27 = 0;
  v26 = 0uLL;
  v260 = 57;
  mlcore::_CreateString((mlcore *)v24, CFSTR("UNIVERSAL_APPLICATION_KIND_OLD"));
  v261 = *(_OWORD *)v24;
  v262 = v25;
  v24[1] = 0;
  v25 = 0;
  v24[0] = 0;
  v263 = 58;
  mlcore::_CreateString((mlcore *)&v22, CFSTR("IPAD_APPLICATION_KIND_OLD"));
  v264 = v22;
  v265 = v23;
  v23 = 0;
  v22 = 0uLL;
  v266 = 59;
  mlcore::_CreateString((mlcore *)v20, CFSTR("IPOD_GAME_KIND_OLD"));
  v267 = *(_OWORD *)v20;
  v268 = v21;
  v20[1] = 0;
  v21 = 0;
  v20[0] = 0;
  v269 = 60;
  mlcore::_CreateString((mlcore *)&v18, CFSTR("WMA_AUDIO_FILE_KIND_OLD"));
  v270 = v18;
  v271 = v19;
  v19 = 0;
  v18 = 0uLL;
  v272 = 61;
  mlcore::_CreateString((mlcore *)v16, CFSTR("CAF_AUDIO_FILE_KIND_OLD"));
  v273 = *(_OWORD *)v16;
  v274 = v17;
  v16[1] = 0;
  v17 = 0;
  v16[0] = 0;
  v275 = 62;
  std::unordered_map<std::string,int>::unordered_map(v2, (uint64_t)&v120, 52);
  mlcore::__kindsForOldStrings = (uint64_t)v2;
  v3 = 208;
  do
  {
    if (SHIBYTE(v118[v3 + 1]) < 0)
      operator delete(v118[v3 - 1]);
    v3 -= 4;
  }
  while (v3 * 8);
  if (SHIBYTE(v17) < 0)
    operator delete(v16[0]);
  if (SHIBYTE(v19) < 0)
    operator delete((void *)v18);
  if (SHIBYTE(v21) < 0)
    operator delete(v20[0]);
  if (SHIBYTE(v23) < 0)
    operator delete((void *)v22);
  if (SHIBYTE(v25) < 0)
    operator delete(v24[0]);
  if (SHIBYTE(v27) < 0)
    operator delete((void *)v26);
  if (SHIBYTE(v29) < 0)
    operator delete(v28[0]);
  if (SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  if (SHIBYTE(v33) < 0)
    operator delete(v32[0]);
  if (SHIBYTE(v35) < 0)
    operator delete((void *)v34);
  if (SHIBYTE(v37) < 0)
    operator delete(v36[0]);
  if (SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (SHIBYTE(v41) < 0)
    operator delete(v40[0]);
  if (SHIBYTE(v43) < 0)
    operator delete((void *)v42);
  if (SHIBYTE(v45) < 0)
    operator delete(v44[0]);
  if (SHIBYTE(v47) < 0)
    operator delete((void *)v46);
  if (SHIBYTE(v49) < 0)
    operator delete(v48[0]);
  if (SHIBYTE(v51) < 0)
    operator delete((void *)v50);
  if (SHIBYTE(v53) < 0)
    operator delete(v52[0]);
  if (SHIBYTE(v55) < 0)
    operator delete((void *)v54);
  if (SHIBYTE(v57) < 0)
    operator delete(v56[0]);
  if (SHIBYTE(v59) < 0)
    operator delete((void *)v58);
  if (SHIBYTE(v61) < 0)
    operator delete(v60[0]);
  if (SHIBYTE(v63) < 0)
    operator delete((void *)v62);
  if (SHIBYTE(v65) < 0)
    operator delete(v64[0]);
  if (SHIBYTE(v67) < 0)
    operator delete((void *)v66);
  if (SHIBYTE(v69) < 0)
    operator delete(v68[0]);
  if (SHIBYTE(v71) < 0)
    operator delete((void *)v70);
  if (SHIBYTE(v73) < 0)
    operator delete(v72[0]);
  if (SHIBYTE(v75) < 0)
    operator delete((void *)v74);
  if (SHIBYTE(v77) < 0)
    operator delete(v76[0]);
  if (SHIBYTE(v79) < 0)
    operator delete((void *)v78);
  if (SHIBYTE(v81) < 0)
    operator delete(v80[0]);
  if (SHIBYTE(v83) < 0)
    operator delete((void *)v82);
  if (SHIBYTE(v85) < 0)
    operator delete(v84[0]);
  if (SHIBYTE(v87) < 0)
    operator delete((void *)v86);
  if (SHIBYTE(v89) < 0)
    operator delete(v88[0]);
  if (SHIBYTE(v91) < 0)
    operator delete((void *)v90);
  if (SHIBYTE(v93) < 0)
    operator delete(v92[0]);
  if (SHIBYTE(v95) < 0)
    operator delete((void *)v94);
  if (SHIBYTE(v97) < 0)
    operator delete(v96[0]);
  if (SHIBYTE(v99) < 0)
    operator delete((void *)v98);
  if (SHIBYTE(v101) < 0)
    operator delete(v100[0]);
  if (SHIBYTE(v103) < 0)
    operator delete((void *)v102);
  if (SHIBYTE(v105) < 0)
    operator delete(v104[0]);
  if (SHIBYTE(v107) < 0)
    operator delete((void *)v106);
  if (SHIBYTE(v109) < 0)
    operator delete(v108[0]);
  if (SHIBYTE(v111) < 0)
    operator delete((void *)v110);
  if (SHIBYTE(v113) < 0)
    operator delete(v112[0]);
  if (SHIBYTE(v115) < 0)
    operator delete((void *)v114);
  if (SHIBYTE(v117) < 0)
    operator delete(v116[0]);
  if (SHIBYTE(v119) < 0)
    operator delete(v118[0]);
}

void sub_20A8EBFE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,void *a57,uint64_t a58,int a59,__int16 a60,char a61,char a62,void *a63)
{
  char a68;
  void *a69;
  char a72;
  void *a73;
  char a74;
  void *a75;
  char a76;
  void *a77;
  char a78;
  void *a79;
  char a80;
  void *a81;
  char a82;
  void *a83;
  char a84;
  void *a85;
  char a86;
  void *a87;
  uint64_t v87;
  uint64_t v88;
  uint64_t v90;

  v90 = 1664;
  while (1)
  {
    if (*(char *)(v88 + v90 - 9) < 0)
      operator delete(*(void **)(v88 + v90 - 32));
    v90 -= 32;
    if (!v90)
    {
      if (a32 < 0)
        operator delete(__p);
      if (a38 < 0)
        operator delete(a33);
      if (a44 < 0)
        operator delete(a39);
      if (a50 < 0)
        operator delete(a45);
      if (a56 < 0)
        operator delete(a51);
      if (a62 < 0)
        operator delete(a57);
      if (a68 < 0)
        operator delete(a63);
      if (a72 < 0)
        operator delete(a69);
      if (a74 < 0)
        operator delete(a73);
      if (a76 < 0)
        operator delete(a75);
      if (a78 < 0)
        operator delete(a77);
      if (a80 < 0)
        operator delete(a79);
      if (a82 < 0)
        operator delete(a81);
      if (a84 < 0)
        operator delete(a83);
      if (a86 < 0)
        operator delete(a85);
      if (SLOBYTE(STACK[0x20F]) < 0)
        operator delete(a87);
      if (SLOBYTE(STACK[0x227]) < 0)
        operator delete((void *)STACK[0x210]);
      if (SLOBYTE(STACK[0x23F]) < 0)
        operator delete((void *)STACK[0x228]);
      if (SLOBYTE(STACK[0x257]) < 0)
        operator delete((void *)STACK[0x240]);
      if (SLOBYTE(STACK[0x26F]) < 0)
        operator delete((void *)STACK[0x258]);
      if (SLOBYTE(STACK[0x287]) < 0)
        operator delete((void *)STACK[0x270]);
      if (SLOBYTE(STACK[0x29F]) < 0)
        operator delete((void *)STACK[0x288]);
      if (SLOBYTE(STACK[0x2B7]) < 0)
        operator delete((void *)STACK[0x2A0]);
      if (SLOBYTE(STACK[0x2CF]) < 0)
        operator delete((void *)STACK[0x2B8]);
      if (SLOBYTE(STACK[0x2E7]) < 0)
        operator delete((void *)STACK[0x2D0]);
      if (SLOBYTE(STACK[0x2FF]) < 0)
        operator delete((void *)STACK[0x2E8]);
      if (SLOBYTE(STACK[0x317]) < 0)
        operator delete((void *)STACK[0x300]);
      if (SLOBYTE(STACK[0x32F]) < 0)
        operator delete((void *)STACK[0x318]);
      if (SLOBYTE(STACK[0x347]) < 0)
        operator delete((void *)STACK[0x330]);
      if (SLOBYTE(STACK[0x35F]) < 0)
        operator delete((void *)STACK[0x348]);
      if (SLOBYTE(STACK[0x377]) < 0)
        operator delete((void *)STACK[0x360]);
      if (SLOBYTE(STACK[0x38F]) < 0)
        operator delete((void *)STACK[0x378]);
      if (SLOBYTE(STACK[0x3A7]) < 0)
        operator delete((void *)STACK[0x390]);
      if (SLOBYTE(STACK[0x3BF]) < 0)
        operator delete((void *)STACK[0x3A8]);
      if (SLOBYTE(STACK[0x3D7]) < 0)
        operator delete((void *)STACK[0x3C0]);
      if (SLOBYTE(STACK[0x3EF]) < 0)
        operator delete((void *)STACK[0x3D8]);
      if (SLOBYTE(STACK[0x407]) < 0)
        operator delete((void *)STACK[0x3F0]);
      if (SLOBYTE(STACK[0x41F]) < 0)
        operator delete((void *)STACK[0x408]);
      if (SLOBYTE(STACK[0x437]) < 0)
        operator delete((void *)STACK[0x420]);
      if (SLOBYTE(STACK[0x44F]) < 0)
        operator delete((void *)STACK[0x438]);
      if (SLOBYTE(STACK[0x467]) < 0)
        operator delete((void *)STACK[0x450]);
      if (SLOBYTE(STACK[0x47F]) < 0)
        operator delete((void *)STACK[0x468]);
      if (SLOBYTE(STACK[0x497]) < 0)
        operator delete((void *)STACK[0x480]);
      if (SLOBYTE(STACK[0x4AF]) < 0)
        operator delete((void *)STACK[0x498]);
      if (SLOBYTE(STACK[0x4C7]) < 0)
        operator delete((void *)STACK[0x4B0]);
      if (SLOBYTE(STACK[0x4DF]) < 0)
        operator delete((void *)STACK[0x4C8]);
      if (SLOBYTE(STACK[0x4F7]) < 0)
        operator delete((void *)STACK[0x4E0]);
      if (SLOBYTE(STACK[0x50F]) < 0)
        operator delete((void *)STACK[0x4F8]);
      if (SLOBYTE(STACK[0x527]) < 0)
        operator delete((void *)STACK[0x510]);
      if (SLOBYTE(STACK[0x53F]) < 0)
        operator delete((void *)STACK[0x528]);
      if (SLOBYTE(STACK[0x557]) < 0)
        operator delete((void *)STACK[0x540]);
      if (SLOBYTE(STACK[0x56F]) < 0)
        operator delete((void *)STACK[0x558]);
      MEMORY[0x20BD27AFC](v87, 0x10A0C408EF24B1CLL);
      _Unwind_Resume(a1);
    }
  }
}

void sub_20A8ECA74()
{
  JUMPOUT(0x20A8EC710);
}

void sub_20A8ECA80()
{
  JUMPOUT(0x20A8EC720);
}

void sub_20A8ECA8C()
{
  JUMPOUT(0x20A8EC730);
}

void sub_20A8ECA98()
{
  JUMPOUT(0x20A8EC740);
}

void sub_20A8ECAA4()
{
  JUMPOUT(0x20A8EC750);
}

void sub_20A8ECAB0()
{
  JUMPOUT(0x20A8EC760);
}

void sub_20A8ECABC()
{
  JUMPOUT(0x20A8EC770);
}

void sub_20A8ECAC8()
{
  JUMPOUT(0x20A8EC780);
}

void sub_20A8ECAD4()
{
  JUMPOUT(0x20A8EC790);
}

void sub_20A8ECAE0()
{
  JUMPOUT(0x20A8EC7A0);
}

void sub_20A8ECAEC()
{
  JUMPOUT(0x20A8EC7B0);
}

void sub_20A8ECAF8()
{
  JUMPOUT(0x20A8EC7C0);
}

void sub_20A8ECB04()
{
  JUMPOUT(0x20A8EC7D0);
}

void sub_20A8ECB10()
{
  JUMPOUT(0x20A8EC7E0);
}

void sub_20A8ECB1C()
{
  JUMPOUT(0x20A8EC7F0);
}

void sub_20A8ECB28()
{
  JUMPOUT(0x20A8EC800);
}

void sub_20A8ECB34()
{
  JUMPOUT(0x20A8EC810);
}

void sub_20A8ECB40()
{
  JUMPOUT(0x20A8EC820);
}

void sub_20A8ECB4C()
{
  JUMPOUT(0x20A8EC830);
}

void sub_20A8ECB58()
{
  JUMPOUT(0x20A8EC840);
}

void sub_20A8ECB64()
{
  JUMPOUT(0x20A8EC850);
}

void sub_20A8ECB70()
{
  JUMPOUT(0x20A8EC860);
}

void sub_20A8ECB7C()
{
  JUMPOUT(0x20A8EC870);
}

void sub_20A8ECB88()
{
  JUMPOUT(0x20A8EC880);
}

void sub_20A8ECB94()
{
  JUMPOUT(0x20A8EC890);
}

void sub_20A8ECBA0()
{
  JUMPOUT(0x20A8EC8A0);
}

void sub_20A8ECBAC()
{
  JUMPOUT(0x20A8EC8B0);
}

void sub_20A8ECBB8()
{
  JUMPOUT(0x20A8EC8C0);
}

void sub_20A8ECBC4()
{
  JUMPOUT(0x20A8EC8D0);
}

void sub_20A8ECBD0()
{
  JUMPOUT(0x20A8EC8E0);
}

void sub_20A8ECBDC()
{
  JUMPOUT(0x20A8EC8F0);
}

void sub_20A8ECBE8()
{
  JUMPOUT(0x20A8EC900);
}

void sub_20A8ECBF4()
{
  JUMPOUT(0x20A8EC910);
}

void sub_20A8ECC00()
{
  JUMPOUT(0x20A8EC920);
}

void sub_20A8ECC0C()
{
  JUMPOUT(0x20A8EC930);
}

void sub_20A8ECC18()
{
  JUMPOUT(0x20A8EC940);
}

void sub_20A8ECC24()
{
  JUMPOUT(0x20A8EC950);
}

void sub_20A8ECC30()
{
  JUMPOUT(0x20A8EC960);
}

void sub_20A8ECC3C()
{
  JUMPOUT(0x20A8EC970);
}

void sub_20A8ECC48()
{
  JUMPOUT(0x20A8EC980);
}

void sub_20A8ECC54()
{
  JUMPOUT(0x20A8EC990);
}

void sub_20A8ECC60()
{
  JUMPOUT(0x20A8EC9A0);
}

void sub_20A8ECC6C()
{
  JUMPOUT(0x20A8EC9B0);
}

void sub_20A8ECC78()
{
  JUMPOUT(0x20A8EC9C0);
}

void sub_20A8ECC84()
{
  JUMPOUT(0x20A8EC9D0);
}

void sub_20A8ECC90()
{
  JUMPOUT(0x20A8EC9E0);
}

void sub_20A8ECC9C()
{
  JUMPOUT(0x20A8EC9F0);
}

void sub_20A8ECCA8()
{
  JUMPOUT(0x20A8ECA00);
}

void sub_20A8ECCB4()
{
  JUMPOUT(0x20A8ECA10);
}

void mlcore::_CreateString(mlcore *this, const __CFString *a2)
{
  __CFBundle *BundleWithIdentifier;
  const __CFString *v5;
  const __CFString *v6;
  CFIndex Length;
  CFIndex MaximumSizeForEncoding;
  CFIndex v9;
  char *v10;

  BundleWithIdentifier = CFBundleGetBundleWithIdentifier(CFSTR("com.apple.MediaLibraryCore"));
  v5 = CFBundleCopyLocalizedString(BundleWithIdentifier, a2, a2, CFSTR("MediaLibraryCore"));
  v6 = v5;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = 0;
  if (v5)
  {
    Length = CFStringGetLength(v5);
    MaximumSizeForEncoding = CFStringGetMaximumSizeForEncoding(Length, 0x8000100u);
    if ((MaximumSizeForEncoding & 0x8000000000000000) == 0)
    {
      v9 = MaximumSizeForEncoding + 1;
      v10 = (char *)malloc_type_malloc(MaximumSizeForEncoding + 1, 0x1DE48D06uLL);
      if (CFStringGetCString(v6, v10, v9, 0x8000100u))
        MEMORY[0x20BD277A8](this, v10);
      free(v10);
    }
  }
  CFRelease(v6);
}

void sub_20A8ECD88(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t *std::unordered_map<std::string,int>::unordered_map(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  unint64_t v12;
  unsigned __int8 **v13;
  unsigned __int8 *i;
  unint64_t v15;
  char *v16;
  std::string *v17;
  __int128 v18;
  float v19;
  float v20;
  _BOOL8 v21;
  unint64_t v22;
  unint64_t v23;
  int8x8_t prime;
  void *v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  uint8x8_t v30;
  unint64_t v31;
  uint8x8_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  void *v39;
  uint64_t v41;

  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  *((_DWORD *)a1 + 8) = 1065353216;
  if (a3)
  {
    v5 = a2;
    v6 = 0;
    v7 = a1 + 2;
    v41 = a2 + 32 * a3;
    while (1)
    {
      v8 = std::__string_hash<char>::operator()[abi:ne180100](v5);
      v9 = v8;
      v10 = a1[1];
      if (v10)
      {
        v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
        v11.i16[0] = vaddlv_u8(v11);
        v12 = v11.u32[0];
        if (v11.u32[0] > 1uLL)
        {
          v3 = v8;
          if (v8 >= v10)
            v3 = v8 % v10;
        }
        else
        {
          v3 = (v10 - 1) & v8;
        }
        v13 = *(unsigned __int8 ***)(*a1 + 8 * v3);
        if (v13)
        {
          for (i = *v13; i; i = *(unsigned __int8 **)i)
          {
            v15 = *((_QWORD *)i + 1);
            if (v15 == v9)
            {
              if (std::equal_to<std::string>::operator()[abi:ne180100](i + 16, (unsigned __int8 *)v5))
                goto LABEL_78;
            }
            else
            {
              if (v12 > 1)
              {
                if (v15 >= v10)
                  v15 %= v10;
              }
              else
              {
                v15 &= v10 - 1;
              }
              if (v15 != v3)
                break;
            }
          }
        }
      }
      v16 = (char *)operator new(0x30uLL);
      *(_QWORD *)v16 = 0;
      *((_QWORD *)v16 + 1) = v9;
      v17 = (std::string *)(v16 + 16);
      if (*(char *)(v5 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(v17, *(const std::string::value_type **)v5, *(_QWORD *)(v5 + 8));
        v6 = a1[3];
      }
      else
      {
        v18 = *(_OWORD *)v5;
        *((_QWORD *)v16 + 4) = *(_QWORD *)(v5 + 16);
        *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
      }
      *((_DWORD *)v16 + 10) = *(_DWORD *)(v5 + 24);
      v19 = (float)(unint64_t)(v6 + 1);
      v20 = *((float *)a1 + 8);
      if (!v10 || (float)(v20 * (float)v10) < v19)
        break;
LABEL_68:
      v36 = *a1;
      v37 = *(_QWORD **)(*a1 + 8 * v3);
      if (v37)
      {
        *(_QWORD *)v16 = *v37;
      }
      else
      {
        *(_QWORD *)v16 = *v7;
        *v7 = v16;
        *(_QWORD *)(v36 + 8 * v3) = v7;
        if (!*(_QWORD *)v16)
          goto LABEL_77;
        v38 = *(_QWORD *)(*(_QWORD *)v16 + 8);
        if ((v10 & (v10 - 1)) != 0)
        {
          if (v38 >= v10)
            v38 %= v10;
        }
        else
        {
          v38 &= v10 - 1;
        }
        v37 = (_QWORD *)(*a1 + 8 * v38);
      }
      *v37 = v16;
LABEL_77:
      v6 = a1[3] + 1;
      a1[3] = v6;
LABEL_78:
      v5 += 32;
      if (v5 == v41)
        return a1;
    }
    v21 = (v10 & (v10 - 1)) != 0;
    if (v10 < 3)
      v21 = 1;
    v22 = v21 | (2 * v10);
    v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23)
      prime = (int8x8_t)v23;
    else
      prime = (int8x8_t)v22;
    if (*(_QWORD *)&prime == 1)
    {
      prime = (int8x8_t)2;
    }
    else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
    {
      prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
    }
    v10 = a1[1];
    if (*(_QWORD *)&prime > v10)
      goto LABEL_34;
    if (*(_QWORD *)&prime < v10)
    {
      v31 = vcvtps_u32_f32((float)(unint64_t)a1[3] / *((float *)a1 + 8));
      if (v10 < 3 || (v32 = (uint8x8_t)vcnt_s8((int8x8_t)v10), v32.i16[0] = vaddlv_u8(v32), v32.u32[0] > 1uLL))
      {
        v31 = std::__next_prime(v31);
      }
      else
      {
        v33 = 1 << -(char)__clz(v31 - 1);
        if (v31 >= 2)
          v31 = v33;
      }
      if (*(_QWORD *)&prime <= v31)
        prime = (int8x8_t)v31;
      if (*(_QWORD *)&prime >= v10)
      {
        v10 = a1[1];
      }
      else
      {
        if (prime)
        {
LABEL_34:
          if (*(_QWORD *)&prime >> 61)
            std::__throw_bad_array_new_length[abi:ne180100]();
          v25 = operator new(8 * *(_QWORD *)&prime);
          v26 = (void *)*a1;
          *a1 = (uint64_t)v25;
          if (v26)
            operator delete(v26);
          v27 = 0;
          a1[1] = (uint64_t)prime;
          do
            *(_QWORD *)(*a1 + 8 * v27++) = 0;
          while (*(_QWORD *)&prime != v27);
          v28 = (_QWORD *)*v7;
          if (*v7)
          {
            v29 = v28[1];
            v30 = (uint8x8_t)vcnt_s8(prime);
            v30.i16[0] = vaddlv_u8(v30);
            if (v30.u32[0] > 1uLL)
            {
              if (v29 >= *(_QWORD *)&prime)
                v29 %= *(_QWORD *)&prime;
            }
            else
            {
              v29 &= *(_QWORD *)&prime - 1;
            }
            *(_QWORD *)(*a1 + 8 * v29) = v7;
            v34 = (_QWORD *)*v28;
            if (*v28)
            {
              do
              {
                v35 = v34[1];
                if (v30.u32[0] > 1uLL)
                {
                  if (v35 >= *(_QWORD *)&prime)
                    v35 %= *(_QWORD *)&prime;
                }
                else
                {
                  v35 &= *(_QWORD *)&prime - 1;
                }
                if (v35 != v29)
                {
                  if (!*(_QWORD *)(*a1 + 8 * v35))
                  {
                    *(_QWORD *)(*a1 + 8 * v35) = v28;
                    goto LABEL_59;
                  }
                  *v28 = *v34;
                  *v34 = **(_QWORD **)(*a1 + 8 * v35);
                  **(_QWORD **)(*a1 + 8 * v35) = v34;
                  v34 = v28;
                }
                v35 = v29;
LABEL_59:
                v28 = v34;
                v34 = (_QWORD *)*v34;
                v29 = v35;
              }
              while (v34);
            }
          }
          v10 = (unint64_t)prime;
          goto LABEL_63;
        }
        v39 = (void *)*a1;
        *a1 = 0;
        if (v39)
          operator delete(v39);
        v10 = 0;
        a1[1] = 0;
      }
    }
LABEL_63:
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
        v3 = v9 % v10;
      else
        v3 = v9;
    }
    else
    {
      v3 = (v10 - 1) & v9;
    }
    goto LABEL_68;
  }
  return a1;
}

void sub_20A8ED1F4(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;

  std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](1, v2);
  std::__hash_table<std::__hash_value_type<std::string,int>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,int>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,int>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,int>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__hash_table<std::__hash_value_type<std::string,int>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,int>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,int>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,int>>>::~__hash_table(uint64_t a1)
{
  void **v2;
  void **v3;
  void *v4;

  v2 = *(void ***)(a1 + 16);
  if (v2)
  {
    do
    {
      v3 = (void **)*v2;
      if (*((char *)v2 + 39) < 0)
        operator delete(v2[2]);
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v4)
    operator delete(v4);
  return a1;
}

void mlcore::OldStringForMediaKind(mlcore *this@<X0>, std::string *a2@<X8>)
{
  int v2;
  uint64_t *v4;
  _OWORD *v5;
  int v6;
  __int128 v7;
  std::string __p;

  v2 = (int)this;
  mlcore::_InitializeKinds(this);
  v4 = *(uint64_t **)(mlcore::__kindsForStrings + 16);
  if (v4)
  {
    while (1)
    {
      v5 = v4 + 2;
      if (*((char *)v4 + 39) < 0)
      {
        std::string::__init_copy_ctor_external(&__p, (const std::string::value_type *)v4[2], v4[3]);
      }
      else
      {
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = *v5;
        __p.__r_.__value_.__r.__words[2] = v4[4];
      }
      v6 = *((_DWORD *)v4 + 10);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if (v6 == v2)
        break;
      v4 = (uint64_t *)*v4;
      if (!v4)
        goto LABEL_9;
    }
    if (*((char *)v4 + 39) < 0)
    {
      std::string::__init_copy_ctor_external(a2, (const std::string::value_type *)v4[2], v4[3]);
    }
    else
    {
      v7 = *v5;
      a2->__r_.__value_.__r.__words[2] = v4[4];
      *(_OWORD *)&a2->__r_.__value_.__l.__data_ = v7;
    }
  }
  else
  {
LABEL_9:
    std::string::basic_string[abi:ne180100]<0>(a2, "UnknownKind");
  }
}

unsigned __int8 *mlcore::MediaKindForString(mlcore *a1)
{
  unsigned __int8 *result;

  mlcore::_InitializeKinds(a1);
  result = std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>((_QWORD *)mlcore::__kindsForStrings, (unsigned __int8 *)a1);
  if (result)
    return (unsigned __int8 *)*((unsigned int *)result + 10);
  result = std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>((_QWORD *)mlcore::__kindsForOldStrings, (unsigned __int8 *)a1);
  if (result)
    return (unsigned __int8 *)*((unsigned int *)result + 10);
  return result;
}

void mlcore::MediaKindsPassingTest(mlcore *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  mlcore::_InitializeKinds(a1);
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_DWORD *)(a2 + 32) = 1065353216;
  v4 = mlcore::__kindsForStrings + 16;
  do
  {
    v4 = *(_QWORD *)v4;
    if (!v4)
      break;
    v9 = 0;
    v5 = *((_QWORD *)a1 + 3);
    if (!v5)
      std::__throw_bad_function_call[abi:ne180100]();
    if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(*(_QWORD *)v5 + 48))(v5, v4 + 16, &v9))
      std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__emplace_unique_key_args<int,int const&>(a2, *(_DWORD *)(v4 + 40), *(_DWORD *)(v4 + 40));
  }
  while (!v9);
  v6 = mlcore::__kindsForOldStrings + 16;
  do
  {
    v6 = *(_QWORD *)v6;
    if (!v6)
      break;
    v8 = 0;
    v7 = *((_QWORD *)a1 + 3);
    if (!v7)
      std::__throw_bad_function_call[abi:ne180100]();
    if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(*(_QWORD *)v7 + 48))(v7, v6 + 16, &v8))
      std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__emplace_unique_key_args<int,int const&>(a2, *(_DWORD *)(v6 + 40), *(_DWORD *)(v6 + 40));
  }
  while (!v8);
}

void sub_20A8ED4C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::__hash_table<mlcore::ModelPropertyBase *,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::allocator<mlcore::ModelPropertyBase *>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

void mediaplatform::SearchMatcher::~SearchMatcher(mediaplatform::SearchMatcher *this)
{
  mediaplatform::SearchMatcher::~SearchMatcher(this);
  JUMPOUT(0x20BD27AFCLL);
}

{
  void **v2;

  *(_QWORD *)this = &off_24C330D88;
  v2 = (void **)((char *)this + 48);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
  if (*((char *)this + 47) < 0)
    operator delete(*((void **)this + 3));
  *((_QWORD *)this + 1) = &off_24C330DC8;
  std::unique_ptr<mediaplatform::UnicodeSearch::Context>::reset[abi:ne180100]((uint64_t **)this + 2);
}

std::vector<std::string> *mediaplatform::SearchMatcher::SearchMatcher(std::vector<std::string> *a1, std::string *a2, uint64_t a3, int a4)
{
  std::string *v6;
  __int128 v7;
  std::vector<std::string>::pointer begin;
  std::vector<std::string>::pointer end;
  std::string::size_type size;
  int v11;
  std::string *v12;
  std::vector<std::string>::pointer v13;
  std::string __p;
  std::vector<std::string> v16;

  a1->__begin_ = (std::vector<std::string>::pointer)&off_24C330D88;
  v6 = (std::string *)&a1[1];
  mediaplatform::UnicodeSearch::UnicodeSearch(&a1->__end_, a3, a4);
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(v6, a2->__r_.__value_.__l.__data_, a2->__r_.__value_.__l.__size_);
  }
  else
  {
    v7 = *(_OWORD *)&a2->__r_.__value_.__l.__data_;
    v6->__r_.__value_.__r.__words[2] = a2->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = v7;
  }
  a1[2].__begin_ = 0;
  a1[2].__end_ = 0;
  a1[2].__end_cap_.__value_ = 0;
  std::string::basic_string[abi:ne180100]<0>(&__p, " ");
  mediaplatform::ComponentsSeparatedByString(a2, (char *)&__p, &v16);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  begin = v16.__begin_;
  end = v16.__end_;
  while (begin != end)
  {
    if (SHIBYTE(begin->__r_.__value_.__r.__words[2]) < 0)
      std::string::__init_copy_ctor_external(&__p, begin->__r_.__value_.__l.__data_, begin->__r_.__value_.__l.__size_);
    else
      __p = *begin;
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    v11 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      size = __p.__r_.__value_.__l.__size_;
    if (size)
    {
      v12 = a1[2].__end_;
      if (v12 >= a1[2].__end_cap_.__value_)
      {
        v13 = std::vector<std::string>::__push_back_slow_path<std::string const&>(a1 + 2, (__int128 *)&__p);
      }
      else
      {
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          std::string::__init_copy_ctor_external(a1[2].__end_, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
        else
          *v12 = __p;
        v13 = v12 + 1;
        a1[2].__end_ = v12 + 1;
      }
      a1[2].__end_ = v13;
    }
    if (v11 < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    ++begin;
  }
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v16;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  return a1;
}

{
  return mediaplatform::SearchMatcher::SearchMatcher(a1, a2, a3, a4);
}

void sub_20A8ED6FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  uint64_t v15;

  *(_QWORD *)(v15 + 8) = &off_24C330DC8;
  std::unique_ptr<mediaplatform::UnicodeSearch::Context>::reset[abi:ne180100]((uint64_t **)(v15 + 16));
  _Unwind_Resume(a1);
}

BOOL mediaplatform::SearchMatcher::matches(std::string *a1, uint64_t a2, int a3)
{
  std::string::pointer data;
  std::string::size_type size;
  uint64_t p_size;
  _BOOL8 v9;
  std::string::pointer v10;
  __int128 v11;
  BOOL v12;
  std::string __p;

  data = a1[2].__r_.__value_.__l.__data_;
  size = a1[2].__r_.__value_.__l.__size_;
  if ((std::string::pointer)size == data)
    return 0;
  p_size = (uint64_t)&a1->__r_.__value_.__l.__size_;
  if ((a3 - 7) < 0xFFFFFFFE)
    return mediaplatform::UnicodeSearch::matches((uint64_t)&a1->__r_.__value_.__l.__size_, a2, a1 + 1, a3);
  v10 = data + 24;
  do
  {
    if (*(v10 - 1) < 0)
    {
      std::string::__init_copy_ctor_external(&__p, *((const std::string::value_type **)v10 - 3), *((_QWORD *)v10 - 2));
    }
    else
    {
      v11 = *(_OWORD *)(v10 - 24);
      __p.__r_.__value_.__r.__words[2] = *((_QWORD *)v10 - 1);
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v11;
    }
    v9 = mediaplatform::UnicodeSearch::matches(p_size, a2, &__p, a3);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v12 = v10 != (std::string::pointer)size && v9;
    v10 += 24;
  }
  while (v12);
  return v9;
}

void sub_20A8ED88C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void mediaplatform::SearchMatcher::reasons(std::string *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t p_size;
  std::string *v8;
  int v9;
  std::string::pointer data;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  __int128 v14;
  std::string __p;

  *(_OWORD *)(a3 + 8) = 0u;
  v6 = a3 + 8;
  *(_DWORD *)a3 = 0;
  *(_OWORD *)(a3 + 24) = 0u;
  *(_DWORD *)(a3 + 40) = 1065353216;
  p_size = (uint64_t)&a1->__r_.__value_.__l.__size_;
  v8 = a1 + 1;
  if (mediaplatform::UnicodeSearch::matches((uint64_t)&a1->__r_.__value_.__l.__size_, a2, a1 + 1, 2))
  {
    v9 = 1;
LABEL_5:
    *(_DWORD *)a3 = v9;
    return;
  }
  if (mediaplatform::UnicodeSearch::matches(p_size, a2, v8, 5))
  {
    v9 = 2;
    goto LABEL_5;
  }
  data = a1[2].__r_.__value_.__l.__data_;
  if ((std::string::pointer)a1[2].__r_.__value_.__l.__size_ != data)
  {
    v11 = 0;
    v12 = 0;
    do
    {
      v13 = &data[v11];
      if (v13[23] < 0)
      {
        std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)v13, *((_QWORD *)v13 + 1));
      }
      else
      {
        v14 = *(_OWORD *)v13;
        __p.__r_.__value_.__r.__words[2] = *((_QWORD *)v13 + 2);
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v14;
      }
      if (mediaplatform::UnicodeSearch::matches(p_size, a2, &__p, 5))
      {
        *(_DWORD *)a3 = 3;
        std::__hash_table<unsigned long,std::hash<unsigned long>,std::equal_to<unsigned long>,std::allocator<unsigned long>>::__emplace_unique_key_args<unsigned long,unsigned long const&>(v6, v12, v12);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      ++v12;
      data = a1[2].__r_.__value_.__l.__data_;
      v11 += 24;
    }
    while (v12 < 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[2].__r_.__value_.__l.__size_ - (_QWORD)data) >> 3));
  }
}

void sub_20A8EDA00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;

  std::__hash_table<mlcore::ModelPropertyBase *,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::allocator<mlcore::ModelPropertyBase *>>::~__hash_table(v14);
  _Unwind_Resume(a1);
}

unint64_t mediaplatform::SearchMatcher::numberOfPartialTokens(mediaplatform::SearchMatcher *this)
{
  return 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)this + 7) - *((_QWORD *)this + 6)) >> 3);
}

void mlcore::PredicateProperty::~PredicateProperty(void **this)
{
  *this = &off_24C3398B8;
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)(this + 8));
  mlcore::ModelPropertyBase::~ModelPropertyBase(this);
}

{
  *this = &off_24C3398B8;
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)(this + 8));
  mlcore::ModelPropertyBase::~ModelPropertyBase(this);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mlcore::PredicateProperty::description(mlcore::PredicateProperty *this)
{
  return (*(uint64_t (**)(_QWORD))(**((_QWORD **)this + 8) + 40))(*((_QWORD *)this + 8));
}

uint64_t mlcore::PredicateProperty::databaseTables@<X0>(mlcore::PredicateProperty *this@<X0>, _QWORD *a2@<X8>)
{
  unint64_t v2;
  char *v3;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  _QWORD *v11;
  _QWORD *i;
  unint64_t v13;
  _QWORD *v14;
  float v15;
  _BOOL8 v16;
  unint64_t v17;
  unint64_t v18;
  int8x8_t prime;
  void *v20;
  void *v21;
  uint64_t v22;
  _QWORD **v23;
  unint64_t v24;
  uint8x8_t v25;
  unint64_t v26;
  uint8x8_t v27;
  uint64_t v28;
  _QWORD *j;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  unint64_t v33;
  void *v34;
  _QWORD *v35;
  unint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  char *v43;
  _QWORD *v44;
  _QWORD *v45;
  void *v46;
  char *v47;
  uint64_t v48;
  void *__p[2];
  __int128 v50;
  float v51;

  *(_OWORD *)__p = 0u;
  v50 = 0u;
  v51 = 1.0;
  (*(void (**)(void **__return_ptr))(**((_QWORD **)this + 8) + 56))(&v46);
  v3 = (char *)v46;
  v43 = v47;
  if (v46 != v47)
  {
    while (1)
    {
      (*(void (**)(_QWORD **__return_ptr))(**(_QWORD **)v3 + 64))(&v44);
      v4 = v44;
      v5 = v45;
      if (v44 != v45)
        break;
LABEL_87:
      if (v4)
      {
        v45 = v4;
        operator delete(v4);
      }
      v3 += 8;
      if (v3 == v43)
        goto LABEL_90;
    }
    v6 = (unint64_t)__p[1];
    while (1)
    {
      v7 = 0x9DDFEA08EB382D69 * ((8 * *v4 + 8) ^ HIDWORD(*v4));
      v8 = 0x9DDFEA08EB382D69 * (HIDWORD(*v4) ^ (v7 >> 47) ^ v7);
      v9 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
      if (v6)
      {
        v10 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
        v10.i16[0] = vaddlv_u8(v10);
        if (v10.u32[0] > 1uLL)
        {
          v2 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
          if (v9 >= v6)
            v2 = v9 % v6;
        }
        else
        {
          v2 = v9 & (v6 - 1);
        }
        v11 = (_QWORD *)*((_QWORD *)__p[0] + v2);
        if (v11)
        {
          for (i = (_QWORD *)*v11; i; i = (_QWORD *)*i)
          {
            v13 = i[1];
            if (v13 == v9)
            {
              if (i[2] == *v4)
                goto LABEL_76;
            }
            else
            {
              if (v10.u32[0] > 1uLL)
              {
                if (v13 >= v6)
                  v13 %= v6;
              }
              else
              {
                v13 &= v6 - 1;
              }
              if (v13 != v2)
                break;
            }
          }
        }
      }
      v14 = operator new(0x18uLL);
      *v14 = 0;
      v14[1] = v9;
      v14[2] = *v4;
      v15 = (float)(unint64_t)(*((_QWORD *)&v50 + 1) + 1);
      if (!v6 || (float)(v51 * (float)v6) < v15)
        break;
LABEL_66:
      v31 = __p[0];
      v32 = (_QWORD *)*((_QWORD *)__p[0] + v2);
      if (v32)
      {
        *v14 = *v32;
      }
      else
      {
        *v14 = v50;
        *(_QWORD *)&v50 = v14;
        v31[v2] = &v50;
        if (!*v14)
          goto LABEL_75;
        v33 = *(_QWORD *)(*v14 + 8);
        if ((v6 & (v6 - 1)) != 0)
        {
          if (v33 >= v6)
            v33 %= v6;
        }
        else
        {
          v33 &= v6 - 1;
        }
        v32 = (char *)__p[0] + 8 * v33;
      }
      *v32 = v14;
LABEL_75:
      ++*((_QWORD *)&v50 + 1);
LABEL_76:
      if (++v4 == v5)
      {
        v4 = v44;
        goto LABEL_87;
      }
    }
    v16 = (v6 & (v6 - 1)) != 0;
    if (v6 < 3)
      v16 = 1;
    v17 = v16 | (2 * v6);
    v18 = vcvtps_u32_f32(v15 / v51);
    if (v17 <= v18)
      prime = (int8x8_t)v18;
    else
      prime = (int8x8_t)v17;
    if (*(_QWORD *)&prime == 1)
    {
      prime = (int8x8_t)2;
    }
    else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
    {
      prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
      v6 = (unint64_t)__p[1];
    }
    if (*(_QWORD *)&prime > v6)
      goto LABEL_32;
    if (*(_QWORD *)&prime < v6)
    {
      v26 = vcvtps_u32_f32((float)*((unint64_t *)&v50 + 1) / v51);
      if (v6 < 3 || (v27 = (uint8x8_t)vcnt_s8((int8x8_t)v6), v27.i16[0] = vaddlv_u8(v27), v27.u32[0] > 1uLL))
      {
        v26 = std::__next_prime(v26);
      }
      else
      {
        v28 = 1 << -(char)__clz(v26 - 1);
        if (v26 >= 2)
          v26 = v28;
      }
      if (*(_QWORD *)&prime <= v26)
        prime = (int8x8_t)v26;
      if (*(_QWORD *)&prime >= v6)
      {
        v6 = (unint64_t)__p[1];
      }
      else
      {
        if (prime)
        {
LABEL_32:
          if (*(_QWORD *)&prime >> 61)
            std::__throw_bad_array_new_length[abi:ne180100]();
          v20 = operator new(8 * *(_QWORD *)&prime);
          v21 = __p[0];
          __p[0] = v20;
          if (v21)
            operator delete(v21);
          v22 = 0;
          __p[1] = (void *)prime;
          do
            *((_QWORD *)__p[0] + v22++) = 0;
          while (*(_QWORD *)&prime != v22);
          v23 = (_QWORD **)v50;
          if ((_QWORD)v50)
          {
            v24 = *(_QWORD *)(v50 + 8);
            v25 = (uint8x8_t)vcnt_s8(prime);
            v25.i16[0] = vaddlv_u8(v25);
            if (v25.u32[0] > 1uLL)
            {
              if (v24 >= *(_QWORD *)&prime)
                v24 %= *(_QWORD *)&prime;
            }
            else
            {
              v24 &= *(_QWORD *)&prime - 1;
            }
            *((_QWORD *)__p[0] + v24) = &v50;
            for (j = *v23; j; v24 = v30)
            {
              v30 = j[1];
              if (v25.u32[0] > 1uLL)
              {
                if (v30 >= *(_QWORD *)&prime)
                  v30 %= *(_QWORD *)&prime;
              }
              else
              {
                v30 &= *(_QWORD *)&prime - 1;
              }
              if (v30 != v24)
              {
                if (!*((_QWORD *)__p[0] + v30))
                {
                  *((_QWORD *)__p[0] + v30) = v23;
                  goto LABEL_57;
                }
                *v23 = (_QWORD *)*j;
                *j = **((_QWORD **)__p[0] + v30);
                **((_QWORD **)__p[0] + v30) = j;
                j = v23;
              }
              v30 = v24;
LABEL_57:
              v23 = (_QWORD **)j;
              j = (_QWORD *)*j;
            }
          }
          v6 = (unint64_t)prime;
          goto LABEL_61;
        }
        v34 = __p[0];
        __p[0] = 0;
        if (v34)
          operator delete(v34);
        v6 = 0;
        __p[1] = 0;
      }
    }
LABEL_61:
    if ((v6 & (v6 - 1)) != 0)
    {
      if (v9 >= v6)
        v2 = v9 % v6;
      else
        v2 = v9;
    }
    else
    {
      v2 = (v6 - 1) & v9;
    }
    goto LABEL_66;
  }
LABEL_90:
  v35 = (_QWORD *)v50;
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  if (v35)
  {
    v36 = -1;
    v37 = v35;
    do
    {
      v38 = v36;
      v37 = (_QWORD *)*v37;
      ++v36;
    }
    while (v37);
    if (v36 >= 0x1FFFFFFFFFFFFFFFLL)
      std::vector<std::string>::__throw_length_error[abi:ne180100]();
    v39 = v38 + 2;
    v40 = operator new(8 * (v38 + 2));
    *a2 = v40;
    a2[1] = v40;
    a2[2] = &v40[v39];
    do
    {
      *v40++ = v35[2];
      v35 = (_QWORD *)*v35;
    }
    while (v35);
    a2[1] = v40;
  }
  std::__hash_table<mlcore::ModelPropertyBase *,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::allocator<mlcore::ModelPropertyBase *>>::~__hash_table((uint64_t)&v48);
  if (v46)
  {
    v47 = (char *)v46;
    operator delete(v46);
  }
  return std::__hash_table<mlcore::ModelPropertyBase *,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::allocator<mlcore::ModelPropertyBase *>>::~__hash_table((uint64_t)__p);
}

void sub_20A8EDFFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  std::__hash_table<mlcore::ModelPropertyBase *,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::allocator<mlcore::ModelPropertyBase *>>::~__hash_table((uint64_t)&a23);
  _Unwind_Resume(a1);
}

void mlcore::PredicateProperty::databaseColumn(mlcore::PredicateProperty *this)
{
  std::runtime_error *exception;

  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "This property has no database column");
  __cxa_throw(exception, MEMORY[0x24BEDB730], MEMORY[0x24BEDAB60]);
}

void sub_20A8EE08C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t mlcore::PredicateProperty::PredicateProperty(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;

  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 16) = 0u;
  *(_QWORD *)result = &off_24C3398B8;
  v2 = a2[1];
  *(_QWORD *)(result + 64) = *a2;
  *(_QWORD *)(result + 72) = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;

  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 16) = 0u;
  *(_QWORD *)result = &off_24C3398B8;
  v2 = a2[1];
  *(_QWORD *)(result + 64) = *a2;
  *(_QWORD *)(result + 72) = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

uint64_t mlcore::PredicateProperty::predicate(mlcore::PredicateProperty *this)
{
  return (uint64_t)this + 64;
}

void mlcore::EntityChange::~EntityChange(mlcore::EntityChange *this)
{
  *(_QWORD *)this = off_24C33A860;
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase((_QWORD *)this + 1);
}

{
  *(_QWORD *)this = off_24C33A860;
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase((_QWORD *)this + 1);
  JUMPOUT(0x20BD27AFCLL);
}

_QWORD *mlcore::EntityChange::className@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "EntityChange");
}

void mlcore::EntityChange::descriptionAttributes(mlcore::EntityChange *this@<X0>, std::string **a2@<X8>)
{
  unint64_t v4;
  mlcore *v5;
  unint64_t v6;
  mlcore *v7;
  unint64_t v8;
  unsigned int v9;
  char *v10;
  unint64_t v11;
  mlcore *v12;
  unint64_t v13;
  unsigned int v14;
  char *v15;
  mlcore *v16;
  unint64_t v17;
  unsigned int v18;
  char *v19;
  mlcore *v20;
  unint64_t v21;
  unsigned int v22;
  char *v23;
  mlcore *v24;
  unint64_t v25;
  mlcore *v26;
  unint64_t v27;
  std::string *v28;
  uint64_t v29;
  mlcore *v30;
  unint64_t v31;
  std::string *v32;
  uint64_t v33;
  std::string __p;
  uint64_t v35;
  void *v36[2];
  char v37;
  void *v38[2];
  char v39;
  uint64_t v40;
  std::string **v41;
  char v42;
  std::string v43;
  std::string v44;
  std::string v45;
  std::string v46;
  std::string v47;
  __int128 v48;

  *(_QWORD *)&v48 = *MEMORY[0x24BDAC8D0];
  v4 = mlcore::EntityChangePropertyChangeType(this);
  v5 = (mlcore *)mlcore::Entity::valueForProperty<int>((uint64_t)this, v4);
  if ((_DWORD)v5 == 1)
  {
    v6 = mlcore::EntityChangePropertyEntityPersistentID(v5);
    v40 = mlcore::Entity::valueForProperty<long long>((uint64_t)this, v6);
    mediaplatform::FormatString<long long>(&v43, (std::string *)"pid = {0}", &v40);
    v8 = mlcore::EntityChangePropertyEntityType(v7);
    v9 = mlcore::Entity::valueForProperty<int>((uint64_t)this, v8) + 1;
    if (v9 > 0xA)
      v10 = "Unknown";
    else
      v10 = (&off_24C33DB80)[v9];
    std::string::basic_string[abi:ne180100]<0>(v38, v10);
    mediaplatform::FormatString<std::string>(&v44, (std::string *)"class = {0}", (uint64_t)v38);
    v17 = mlcore::EntityChangePropertyChangeType(v16);
    v18 = mlcore::Entity::valueForProperty<int>((uint64_t)this, v17);
    if (v18 > 2)
      v19 = "Unknown";
    else
      v19 = (&off_24C33DB68)[v18];
    std::string::basic_string[abi:ne180100]<0>(v36, v19);
    mediaplatform::FormatString<std::string>(&v45, (std::string *)"type = {0}", (uint64_t)v36);
    v25 = mlcore::EntityChangePropertySourceID(v24);
    v35 = mlcore::Entity::valueForProperty<long long>((uint64_t)this, v25);
    mediaplatform::FormatString<long long>(&v46, (std::string *)"source = {0}", &v35);
    v27 = mlcore::EntityChangePropertyChanges(v26);
    mlcore::Entity::valueForProperty<std::string>(&__p, (uint64_t)this, v27);
    mediaplatform::FormatString<std::string>(&v47, (std::string *)"changes = \"{0}\"", (uint64_t)&__p);
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    v41 = a2;
    v42 = 0;
    v28 = (std::string *)operator new(0x78uLL);
    *a2 = v28;
    a2[1] = v28;
    a2[2] = v28 + 5;
    v29 = 0;
    a2[1] = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)(a2 + 2), (__int128 *)&v43, &v48, v28);
    do
    {
      if (SHIBYTE(v47.__r_.__value_.__r.__words[v29 + 2]) < 0)
        operator delete(*(void **)((char *)&v47.__r_.__value_.__l.__data_ + v29 * 8));
      v29 -= 3;
    }
    while (v29 != -15);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    v11 = mlcore::EntityChangePropertyEntityPersistentID(v5);
    v41 = (std::string **)mlcore::Entity::valueForProperty<long long>((uint64_t)this, v11);
    mediaplatform::FormatString<long long>(&v43, (std::string *)"pid = {0}", (uint64_t *)&v41);
    v13 = mlcore::EntityChangePropertyEntityType(v12);
    v14 = mlcore::Entity::valueForProperty<int>((uint64_t)this, v13) + 1;
    if (v14 > 0xA)
      v15 = "Unknown";
    else
      v15 = (&off_24C33DB80)[v14];
    std::string::basic_string[abi:ne180100]<0>(v38, v15);
    mediaplatform::FormatString<std::string>(&v44, (std::string *)"class = {0}", (uint64_t)v38);
    v21 = mlcore::EntityChangePropertyChangeType(v20);
    v22 = mlcore::Entity::valueForProperty<int>((uint64_t)this, v21);
    if (v22 > 2)
      v23 = "Unknown";
    else
      v23 = (&off_24C33DB68)[v22];
    std::string::basic_string[abi:ne180100]<0>(v36, v23);
    mediaplatform::FormatString<std::string>(&v45, (std::string *)"type = {0}", (uint64_t)v36);
    v31 = mlcore::EntityChangePropertySourceID(v30);
    v40 = mlcore::Entity::valueForProperty<long long>((uint64_t)this, v31);
    mediaplatform::FormatString<long long>(&v46, (std::string *)"source = {0}", &v40);
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    __p.__r_.__value_.__s.__data_[8] = 0;
    v32 = (std::string *)operator new(0x60uLL);
    *a2 = v32;
    a2[1] = v32;
    a2[2] = v32 + 4;
    v33 = 0;
    a2[1] = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)(a2 + 2), (__int128 *)&v43, (__int128 *)&v47, v32);
    do
    {
      if (SHIBYTE(v46.__r_.__value_.__r.__words[v33 + 2]) < 0)
        operator delete(*(void **)((char *)&v46.__r_.__value_.__l.__data_ + v33 * 8));
      v33 -= 3;
    }
    while (v33 != -12);
  }
  if (v37 < 0)
    operator delete(v36[0]);
  if (v39 < 0)
    operator delete(v38[0]);
}

void sub_20A8EE558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32)
{
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;

  v34 = v33;
  *(_QWORD *)(v32 + 8) = v34;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a10);
  v36 = 0;
  while (1)
  {
    if (*(&a32 + v36 + 95) < 0)
      operator delete(*(void **)(&a32 + v36 + 72));
    v36 -= 24;
    if (v36 == -96)
    {
      if (a22 < 0)
        operator delete(__p);
      if (a28 < 0)
        operator delete(a23);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t mlcore::TypedEntityClass<mlcore::EntityChange>::sharedPointer()
{
  unint64_t v0;
  char v2;
  char **v3;
  char *v4;

  v0 = atomic_load(&mlcore::TypedEntityClass<mlcore::EntityChange>::sharedPointer(void)::__once);
  if (v0 != -1)
  {
    v4 = &v2;
    v3 = &v4;
    std::__call_once(&mlcore::TypedEntityClass<mlcore::EntityChange>::sharedPointer(void)::__once, &v3, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::TypedEntityClass<mlcore::EntityChange>::sharedPointer(void)::{lambda(void)#1} &&>>);
  }
  return mlcore::TypedEntityClass<mlcore::EntityChange>::sharedPointer(void)::__sharedPointer;
}

double std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::TypedEntityClass<mlcore::EntityChange>::sharedPointer(void)::{lambda(void)#1} &&>>()
{
  uint64_t v0;
  double result;

  v0 = operator new();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_QWORD *)(v0 + 96) = 0;
  *(_DWORD *)(v0 + 104) = 1065353216;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_DWORD *)(v0 + 144) = 1065353216;
  *(_QWORD *)v0 = &off_24C338510;
  *(_QWORD *)(v0 + 8) = 850045863;
  mlcore::TypedEntityClass<mlcore::EntityChange>::sharedPointer(void)::__sharedPointer = v0;
  return result;
}

void mlcore::TypedEntityClass<mlcore::EntityChange>::~TypedEntityClass(mlcore::EntityClass *a1)
{
  mlcore::EntityClass::~EntityClass(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t mlcore::TypedEntityClass<mlcore::EntityChange>::description(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1);
}

__n128 mlcore::TypedEntityClass<mlcore::EntityChange>::create@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, __n128 *a4@<X8>)
{
  char *v8;
  uint64_t v9;
  unint64_t *v10;
  uint64_t v11;
  __n128 result;
  __n128 v13;
  unint64_t v14[3];
  unint64_t *v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v8 = (char *)operator new(0x100uLL);
  *((_QWORD *)v8 + 1) = 0;
  *((_QWORD *)v8 + 2) = 0;
  *(_QWORD *)v8 = &off_24C33C590;
  *(_OWORD *)(v8 + 40) = 0u;
  *(_OWORD *)(v8 + 56) = 0u;
  *((_DWORD *)v8 + 18) = 1065353216;
  *((_OWORD *)v8 + 5) = 0u;
  *((_OWORD *)v8 + 6) = 0u;
  *((_DWORD *)v8 + 28) = 1065353216;
  *(_OWORD *)(v8 + 120) = 0u;
  *(_OWORD *)(v8 + 136) = 0u;
  *((_DWORD *)v8 + 38) = 1065353216;
  *((_OWORD *)v8 + 10) = 0u;
  *((_OWORD *)v8 + 11) = 0u;
  *((_DWORD *)v8 + 48) = 1065353216;
  *(_OWORD *)(v8 + 216) = 0u;
  *((_DWORD *)v8 + 58) = 1065353216;
  *((_QWORD *)v8 + 30) = &unk_24C3371E8;
  *((_QWORD *)v8 + 31) = a2;
  *(_OWORD *)(v8 + 200) = 0u;
  v9 = (uint64_t)(v8 + 200);
  *((_QWORD *)v8 + 4) = &off_24C3371C0;
  *((_QWORD *)v8 + 3) = &off_24C336DE0;
  v13.n128_u64[0] = (unint64_t)(v8 + 24);
  v13.n128_u64[1] = (unint64_t)v8;
  v14[0] = (unint64_t)&off_24C33B140;
  v15 = v14;
  mlcore::PropertyCache::mergePropertiesFromCache((uint64_t)(v8 + 32), a3, (uint64_t)v14);
  v10 = v15;
  if (v15 == v14)
  {
    v11 = 4;
    v10 = v14;
    goto LABEL_5;
  }
  if (v15)
  {
    v11 = 5;
LABEL_5:
    (*(void (**)(void))(*v10 + 8 * v11))();
  }
  v14[0] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 112))(a1);
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>(v9, v14[0], v14)[3] = a2;
  result = v13;
  *a4 = v13;
  return result;
}

void sub_20A8EE98C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char *a15)
{
  char *v15;
  char *v17;
  uint64_t v18;

  v17 = a15;
  if (a15 == v15)
  {
    v18 = 4;
    v17 = &a12;
  }
  else
  {
    if (!a15)
      goto LABEL_6;
    v18 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v17 + 8 * v18))();
LABEL_6:
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t mlcore::TypedEntityClass<mlcore::EntityChange>::name(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
}

uint64_t mlcore::TypedEntityClass<mlcore::EntityChange>::entityType()
{
  return 0xFFFFFFFFLL;
}

BOOL mlcore::TypedEntityClass<mlcore::EntityChange>::isRevisionTrackable(uint64_t a1)
{
  return (*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 64))(a1) != -1;
}

uint64_t mlcore::TypedEntityClass<mlcore::EntityChange>::isCloudUpdatable()
{
  return 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::EntityChange>::databaseTable()
{
  return *(_QWORD *)mediaplatform::Singleton<mlcore::EntityChangeTable>::sharedInstance();
}

void mlcore::TypedEntityClass<mlcore::EntityChange>::databaseTablesToDeleteFrom(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

void mlcore::TypedEntityClass<mlcore::EntityChange>::databaseTablesToInsertInto(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::EntityChange>::persistentIDProperty()
{
  return 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::EntityChange>::representativeItemPersistentIDProperty()
{
  return 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::EntityChange>::trackForeignPersistentIDProperty()
{
  return 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::EntityChange>::trackForeignOrderingProperty()
{
  return 0;
}

uint64_t mlcore::TypedEntityClass<mlcore::EntityChange>::sectionPropertyForOrderingProperty()
{
  return 0;
}

uint64_t mediaplatform::Singleton<mlcore::EntityChangeTable>::sharedInstance()
{
  unsigned __int8 v0;
  mlcore::EntityChangeTable **v2;

  if ((v0 & 1) == 0
  {
    v2 = (mlcore::EntityChangeTable **)operator new();
    _ZNSt3__115allocate_sharedB8ne180100IN6mlcore17EntityChangeTableENS_9allocatorIS2_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(v2);
    mediaplatform::Singleton<mlcore::EntityChangeTable>::sharedInstance(void)::_sharedInstance = (uint64_t)v2;
  }
  return mediaplatform::Singleton<mlcore::EntityChangeTable>::sharedInstance(void)::_sharedInstance;
}

void sub_20A8EEAE0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD27AFC](v1, 0x20C40A4A59CD2);
  _Unwind_Resume(a1);
}

mlcore::EntityChangeTable *_ZNSt3__115allocate_sharedB8ne180100IN6mlcore17EntityChangeTableENS_9allocatorIS2_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(mlcore::EntityChangeTable **a1)
{
  _QWORD *v2;
  mlcore::EntityChangeTable *result;

  v2 = operator new(0x268uLL);
  v2[1] = 0;
  v2[2] = 0;
  *v2 = &off_24C33CD00;
  result = mlcore::EntityChangeTable::EntityChangeTable((mlcore::EntityChangeTable *)(v2 + 3));
  *a1 = result;
  a1[1] = (mlcore::EntityChangeTable *)v2;
  return result;
}

void sub_20A8EEB58(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<mlcore::EntityChangeTable>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33CD00;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mlcore::EntityChangeTable>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33CD00;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t std::__shared_ptr_emplace<mlcore::EntityChangeTable>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void std::__shared_ptr_emplace<mlcore::EntityChange>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33C590;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mlcore::EntityChange>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33C590;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD27AFCLL);
}

uint64_t std::__shared_ptr_emplace<mlcore::EntityChange>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t mlcore::EntityChangePropertyChangeType(mlcore *this)
{
  unint64_t v1;
  char v3;
  char **v4;
  char *v5;

  v1 = atomic_load(&mlcore::EntityChangePropertyChangeType(void)::once);
  if (v1 != -1)
  {
    v5 = &v3;
    v4 = &v5;
    std::__call_once(&mlcore::EntityChangePropertyChangeType(void)::once, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::EntityChangePropertyChangeType(void)::$_0 &&>>);
  }
  return mlcore::EntityChangePropertyChangeType(void)::property;
}

uint64_t mlcore::EntityChangePropertyEntityPersistentID(mlcore *this)
{
  unint64_t v1;
  char v3;
  char **v4;
  char *v5;

  v1 = atomic_load(&mlcore::EntityChangePropertyEntityPersistentID(void)::once);
  if (v1 != -1)
  {
    v5 = &v3;
    v4 = &v5;
    std::__call_once(&mlcore::EntityChangePropertyEntityPersistentID(void)::once, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::EntityChangePropertyEntityPersistentID(void)::$_0 &&>>);
  }
  return mlcore::EntityChangePropertyEntityPersistentID(void)::property;
}

uint64_t mlcore::EntityChangePropertyEntityType(mlcore *this)
{
  unint64_t v1;
  char v3;
  char **v4;
  char *v5;

  v1 = atomic_load(&mlcore::EntityChangePropertyEntityType(void)::once);
  if (v1 != -1)
  {
    v5 = &v3;
    v4 = &v5;
    std::__call_once(&mlcore::EntityChangePropertyEntityType(void)::once, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::EntityChangePropertyEntityType(void)::$_0 &&>>);
  }
  return mlcore::EntityChangePropertyEntityType(void)::property;
}

uint64_t mlcore::EntityChangePropertySourceID(mlcore *this)
{
  unint64_t v1;
  char v3;
  char **v4;
  char *v5;

  v1 = atomic_load(&mlcore::EntityChangePropertySourceID(void)::once);
  if (v1 != -1)
  {
    v5 = &v3;
    v4 = &v5;
    std::__call_once(&mlcore::EntityChangePropertySourceID(void)::once, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::EntityChangePropertySourceID(void)::$_0 &&>>);
  }
  return mlcore::EntityChangePropertySourceID(void)::property;
}

uint64_t mlcore::EntityChangePropertyChanges(mlcore *this)
{
  unint64_t v1;
  char v3;
  char **v4;
  char *v5;

  v1 = atomic_load(&mlcore::EntityChangePropertyChanges(void)::once);
  if (v1 != -1)
  {
    v5 = &v3;
    v4 = &v5;
    std::__call_once(&mlcore::EntityChangePropertyChanges(void)::once, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::EntityChangePropertyChanges(void)::$_0 &&>>);
  }
  return mlcore::EntityChangePropertyChanges(void)::property;
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::EntityChangePropertyChanges(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::EntityChangeTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __str;
  _QWORD v23[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::EntityChangeTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v23[0] = *v1;
  v23[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::EntityChangeTable **)mediaplatform::Singleton<mlcore::EntityChangeTable>::sharedInstance();
  mlcore::EntityChangeTable::changesColumn(*v5, (uint64_t)&__str);
  mlcore::DatabaseModelProperty<std::string>::DatabaseModelProperty(v0, v23, (uint64_t)&__str);
  mlcore::EntityChangePropertyChanges(void)::property = v0;
  mediaplatform::DatabaseColumn<std::string>::~DatabaseColumn((uint64_t)&__str);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::EntityChangePropertyChanges(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__str, "");
  std::string::operator=((std::string *)(v8 + 40), &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::EntityChange>::sharedPointer();
  v10 = mlcore::EntityChangePropertyChanges(void)::property;
  v11 = mediaplatform::Singleton<mlcore::EntityChangeTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "changes");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __str.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A8EEFA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::EntityChangePropertySourceID(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::EntityChangeTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __p;
  char v23;
  _QWORD v24[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::EntityChangeTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v24[0] = *v1;
  v24[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::EntityChangeTable **)mediaplatform::Singleton<mlcore::EntityChangeTable>::sharedInstance();
  mlcore::EntityChangeTable::sourcePersistentIDColumn(*v5, (uint64_t)&__p);
  mlcore::DatabaseModelProperty<long long>::DatabaseModelProperty(v0, v24, (uint64_t)&__p);
  mlcore::EntityChangePropertySourceID(void)::property = v0;
  if (v23 < 0)
    operator delete((void *)__p.__r_.__value_.__l.__size_);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::EntityChangePropertySourceID(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  std::string::operator=((std::string *)(v8 + 40), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::EntityChange>::sharedPointer();
  v10 = mlcore::EntityChangePropertySourceID(void)::property;
  v11 = mediaplatform::Singleton<mlcore::EntityChangeTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "sourceID");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A8EF230(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, void *a17, int a18, __int16 a19, char a20,char a21,int a22,__int16 a23,char a24,char a25)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::EntityChangePropertyEntityType(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::EntityChangeTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __p;
  char v23;
  _QWORD v24[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::EntityChangeTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v24[0] = *v1;
  v24[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::EntityChangeTable **)mediaplatform::Singleton<mlcore::EntityChangeTable>::sharedInstance();
  mlcore::EntityChangeTable::classColumn(*v5, (uint64_t)&__p);
  mlcore::DatabaseModelProperty<int>::DatabaseModelProperty(v0, v24, (uint64_t)&__p);
  mlcore::EntityChangePropertyEntityType(void)::property = v0;
  if (v23 < 0)
    operator delete((void *)__p.__r_.__value_.__l.__size_);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::EntityChangePropertyEntityType(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  std::string::operator=((std::string *)(v8 + 40), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::EntityChange>::sharedPointer();
  v10 = mlcore::EntityChangePropertyEntityType(void)::property;
  v11 = mediaplatform::Singleton<mlcore::EntityChangeTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "entityType");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A8EF4C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, void *a17, int a18, __int16 a19, char a20,char a21,int a22,__int16 a23,char a24,char a25)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::EntityChangePropertyEntityPersistentID(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::EntityChangeTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __p;
  char v23;
  _QWORD v24[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::EntityChangeTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v24[0] = *v1;
  v24[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::EntityChangeTable **)mediaplatform::Singleton<mlcore::EntityChangeTable>::sharedInstance();
  mlcore::EntityChangeTable::persistentIDColumn(*v5, (uint64_t)&__p);
  mlcore::DatabaseModelProperty<long long>::DatabaseModelProperty(v0, v24, (uint64_t)&__p);
  mlcore::EntityChangePropertyEntityPersistentID(void)::property = v0;
  if (v23 < 0)
    operator delete((void *)__p.__r_.__value_.__l.__size_);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::EntityChangePropertyEntityPersistentID(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  std::string::operator=((std::string *)(v8 + 40), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::EntityChange>::sharedPointer();
  v10 = mlcore::EntityChangePropertyEntityPersistentID(void)::property;
  v11 = mediaplatform::Singleton<mlcore::EntityChangeTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "persistentID");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A8EF750(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, void *a17, int a18, __int16 a19, char a20,char a21,int a22,__int16 a23,char a24,char a25)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<mlcore::EntityChangePropertyChangeType(void)::$_0 &&>>()
{
  uint64_t v0;
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  mlcore::EntityChangeTable **v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;
  __int128 v20;
  std::string v21;
  std::string __p;
  char v23;
  _QWORD v24[2];

  v0 = operator new();
  v1 = (_QWORD *)mediaplatform::Singleton<mlcore::EntityChangeTable>::sharedInstance();
  v2 = (std::__shared_weak_count *)v1[1];
  v24[0] = *v1;
  v24[1] = v2;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v5 = (mlcore::EntityChangeTable **)mediaplatform::Singleton<mlcore::EntityChangeTable>::sharedInstance();
  mlcore::EntityChangeTable::changeTypeColumn(*v5, (uint64_t)&__p);
  mlcore::DatabaseModelProperty<int>::DatabaseModelProperty(v0, v24, (uint64_t)&__p);
  mlcore::EntityChangePropertyChangeType(void)::property = v0;
  if (v23 < 0)
    operator delete((void *)__p.__r_.__value_.__l.__size_);
  if (v2)
  {
    v6 = (unint64_t *)&v2->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v8 = mlcore::EntityChangePropertyChangeType(void)::property;
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  std::string::operator=((std::string *)(v8 + 40), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v9 = mlcore::TypedEntityClass<mlcore::EntityChange>::sharedPointer();
  v10 = mlcore::EntityChangePropertyChangeType(void)::property;
  v11 = mediaplatform::Singleton<mlcore::EntityChangeTable>::sharedInstance();
  v12 = *(_QWORD *)v11;
  if (*(char *)(*(_QWORD *)v11 + 31) >= 0)
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 31);
  else
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  v14 = &v21;
  std::string::basic_string[abi:ne180100]((uint64_t)&v21, v13 + 1);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v17 = *(char **)(v12 + 8);
    v16 = (char *)(v12 + 8);
    v15 = v17;
    if (v16[23] >= 0)
      v18 = v16;
    else
      v18 = v15;
    memmove(v14, v18, v13);
  }
  *(_WORD *)((char *)&v14->__r_.__value_.__l.__data_ + v13) = 46;
  v19 = std::string::append(&v21, "changeType");
  v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  mlcore::EntityClass::setPropertyForName(v9, v10, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_20A8EF9E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, void *a17, int a18, __int16 a19, char a20,char a21,int a22,__int16 a23,char a24,char a25)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

double mlcore::EntityChange::EntityChange(mlcore::EntityChange *this, uint64_t a2)
{
  double result;

  result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 12) = 1065353216;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_DWORD *)this + 22) = 1065353216;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_DWORD *)this + 32) = 1065353216;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_DWORD *)this + 42) = 1065353216;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_DWORD *)this + 52) = 1065353216;
  *((_QWORD *)this + 27) = &unk_24C3371E8;
  *((_QWORD *)this + 28) = a2;
  *(_QWORD *)this = &off_24C336DE0;
  *((_QWORD *)this + 1) = &off_24C3371C0;
  return result;
}

{
  double result;

  result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 12) = 1065353216;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_DWORD *)this + 22) = 1065353216;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_DWORD *)this + 32) = 1065353216;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_DWORD *)this + 42) = 1065353216;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_DWORD *)this + 52) = 1065353216;
  *((_QWORD *)this + 27) = &unk_24C3371E8;
  *((_QWORD *)this + 28) = a2;
  *(_QWORD *)this = &off_24C336DE0;
  *((_QWORD *)this + 1) = &off_24C3371C0;
  return result;
}

uint64_t mlcore::EntityChange::EntityChange(uint64_t a1, _QWORD *a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  mlcore *v11;
  int v12;
  mlcore *v13;
  uint64_t v14;
  mlcore *v15;
  mlcore *v16;
  void *v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  std::vector<std::string>::pointer end;
  __int128 v24;
  std::string *v25;
  mlcore *v26;
  std::string::size_type v27;
  mlcore *v28;
  std::string::size_type v29;
  void *v31[2];
  char v32;
  void *__p;
  uint64_t *v34;
  char v35;
  std::vector<std::string> v36;

  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_DWORD *)(a1 + 48) = 1065353216;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_DWORD *)(a1 + 88) = 1065353216;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_DWORD *)(a1 + 128) = 1065353216;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  v8 = a1 + 136;
  *(_DWORD *)(a1 + 168) = 1065353216;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  v9 = a1 + 176;
  *(_DWORD *)(a1 + 208) = 1065353216;
  *(_QWORD *)(a1 + 8) = &off_24C3371C0;
  *(_QWORD *)(a1 + 216) = &unk_24C3371E8;
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)a1 = &off_24C336DE0;
  v10 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a2 + 48))(*a2);
  v11 = (mlcore *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 64))(v10);
  v12 = (int)v11;
  v36.__begin_ = (std::vector<std::string>::pointer)mlcore::EntityChangePropertyEntityType(v11);
  v13 = (mlcore *)std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::__emplace_unique_key_args<mlcore::ModelProperty<int> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<int> * const&>,std::tuple<>>(v8, (unint64_t)v36.__begin_, &v36);
  *((_DWORD *)v13 + 6) = v12;
  v14 = *(_QWORD *)(*a2 + 224);
  v36.__begin_ = (std::vector<std::string>::pointer)mlcore::EntityChangePropertyEntityPersistentID(v13);
  v15 = (mlcore *)std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>(v9, (unint64_t)v36.__begin_, &v36);
  *((_QWORD *)v15 + 3) = v14;
  v36.__begin_ = (std::vector<std::string>::pointer)mlcore::EntityChangePropertySourceID(v15);
  v16 = (mlcore *)std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>(v9, (unint64_t)v36.__begin_, &v36);
  *((_QWORD *)v16 + 3) = a4;
  v36.__begin_ = (std::vector<std::string>::pointer)mlcore::EntityChangePropertyChangeType(v16);
  *((_DWORD *)std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::__emplace_unique_key_args<mlcore::ModelProperty<int> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<int> * const&>,std::tuple<>>(v8, (unint64_t)v36.__begin_, &v36)+ 6) = a3;
  if (a3 == 1)
  {
    memset(&v36, 0, sizeof(v36));
    mlcore::PropertyCache::allProperties((mlcore::PropertyCache *)(*a2 + 8), &__p);
    v17 = __p;
    v18 = v34;
    if (__p != v34)
    {
      v19 = (uint64_t *)__p;
      do
      {
        v20 = *v19;
        v21 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a2 + 48))(*a2);
        if (v20 != (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 112))(v21))
        {
          v22 = (__int128 *)(v20 + 16);
          end = v36.__end_;
          if (v36.__end_ >= v36.__end_cap_.__value_)
          {
            v25 = std::vector<std::string>::__push_back_slow_path<std::string const&>(&v36, v22);
          }
          else
          {
            if (*(char *)(v20 + 39) < 0)
            {
              std::string::__init_copy_ctor_external(v36.__end_, *(const std::string::value_type **)(v20 + 16), *(_QWORD *)(v20 + 24));
            }
            else
            {
              v24 = *v22;
              v36.__end_->__r_.__value_.__r.__words[2] = *(_QWORD *)(v20 + 32);
              *(_OWORD *)&end->__r_.__value_.__l.__data_ = v24;
            }
            v25 = end + 1;
          }
          v36.__end_ = v25;
        }
        ++v19;
      }
      while (v19 != v18);
    }
    if (v17)
      operator delete(v17);
    std::string::basic_string[abi:ne180100]<0>(v31, ",");
    v26 = (mlcore *)mediaplatform::ComponentsJoinedByString<std::string>((uint64_t)&__p, (uint64_t *)&v36, (uint64_t)v31);
    v27 = mlcore::EntityChangePropertyChanges(v26);
    mlcore::Entity::setValueForProperty<std::string>(a1, (uint64_t)&__p, v27);
    if (v35 < 0)
      operator delete(__p);
    if (v32 < 0)
      operator delete(v31[0]);
    __p = &v36;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  }
  else
  {
    v28 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(&v36, "");
    v29 = mlcore::EntityChangePropertyChanges(v28);
    mlcore::Entity::setValueForProperty<std::string>(a1, (uint64_t)&v36, v29);
    if (SHIBYTE(v36.__end_cap_.__value_) < 0)
      operator delete(v36.__begin_);
  }
  return a1;
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  mlcore *v11;
  int v12;
  mlcore *v13;
  uint64_t v14;
  mlcore *v15;
  mlcore *v16;
  void *v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  std::vector<std::string>::pointer end;
  __int128 v24;
  std::string *v25;
  mlcore *v26;
  std::string::size_type v27;
  mlcore *v28;
  std::string::size_type v29;
  void *v31[2];
  char v32;
  void *__p;
  uint64_t *v34;
  char v35;
  std::vector<std::string> v36;

  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_DWORD *)(a1 + 48) = 1065353216;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_DWORD *)(a1 + 88) = 1065353216;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_DWORD *)(a1 + 128) = 1065353216;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  v8 = a1 + 136;
  *(_DWORD *)(a1 + 168) = 1065353216;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  v9 = a1 + 176;
  *(_DWORD *)(a1 + 208) = 1065353216;
  *(_QWORD *)(a1 + 8) = &off_24C3371C0;
  *(_QWORD *)(a1 + 216) = &unk_24C3371E8;
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)a1 = &off_24C336DE0;
  v10 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a2 + 48))(*a2);
  v11 = (mlcore *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 64))(v10);
  v12 = (int)v11;
  v36.__begin_ = (std::vector<std::string>::pointer)mlcore::EntityChangePropertyEntityType(v11);
  v13 = (mlcore *)std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::__emplace_unique_key_args<mlcore::ModelProperty<int> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<int> * const&>,std::tuple<>>(v8, (unint64_t)v36.__begin_, &v36);
  *((_DWORD *)v13 + 6) = v12;
  v14 = *(_QWORD *)(*a2 + 224);
  v36.__begin_ = (std::vector<std::string>::pointer)mlcore::EntityChangePropertyEntityPersistentID(v13);
  v15 = (mlcore *)std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>(v9, (unint64_t)v36.__begin_, &v36);
  *((_QWORD *)v15 + 3) = v14;
  v36.__begin_ = (std::vector<std::string>::pointer)mlcore::EntityChangePropertySourceID(v15);
  v16 = (mlcore *)std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>(v9, (unint64_t)v36.__begin_, &v36);
  *((_QWORD *)v16 + 3) = a4;
  v36.__begin_ = (std::vector<std::string>::pointer)mlcore::EntityChangePropertyChangeType(v16);
  *((_DWORD *)std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::__emplace_unique_key_args<mlcore::ModelProperty<int> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<int> * const&>,std::tuple<>>(v8, (unint64_t)v36.__begin_, &v36)+ 6) = a3;
  if (a3 == 1)
  {
    memset(&v36, 0, sizeof(v36));
    mlcore::PropertyCache::allProperties((mlcore::PropertyCache *)(*a2 + 8), &__p);
    v17 = __p;
    v18 = v34;
    if (__p != v34)
    {
      v19 = (uint64_t *)__p;
      do
      {
        v20 = *v19;
        v21 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a2 + 48))(*a2);
        if (v20 != (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 112))(v21))
        {
          v22 = (__int128 *)(v20 + 16);
          end = v36.__end_;
          if (v36.__end_ >= v36.__end_cap_.__value_)
          {
            v25 = std::vector<std::string>::__push_back_slow_path<std::string const&>(&v36, v22);
          }
          else
          {
            if (*(char *)(v20 + 39) < 0)
            {
              std::string::__init_copy_ctor_external(v36.__end_, *(const std::string::value_type **)(v20 + 16), *(_QWORD *)(v20 + 24));
            }
            else
            {
              v24 = *v22;
              v36.__end_->__r_.__value_.__r.__words[2] = *(_QWORD *)(v20 + 32);
              *(_OWORD *)&end->__r_.__value_.__l.__data_ = v24;
            }
            v25 = end + 1;
          }
          v36.__end_ = v25;
        }
        ++v19;
      }
      while (v19 != v18);
    }
    if (v17)
      operator delete(v17);
    std::string::basic_string[abi:ne180100]<0>(v31, ",");
    v26 = (mlcore *)mediaplatform::ComponentsJoinedByString<std::string>((uint64_t)&__p, (uint64_t *)&v36, (uint64_t)v31);
    v27 = mlcore::EntityChangePropertyChanges(v26);
    mlcore::Entity::setValueForProperty<std::string>(a1, (uint64_t)&__p, v27);
    if (v35 < 0)
      operator delete(__p);
    if (v32 < 0)
      operator delete(v31[0]);
    __p = &v36;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  }
  else
  {
    v28 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(&v36, "");
    v29 = mlcore::EntityChangePropertyChanges(v28);
    mlcore::Entity::setValueForProperty<std::string>(a1, (uint64_t)&v36, v29);
    if (SHIBYTE(v36.__end_cap_.__value_) < 0)
      operator delete(v36.__begin_);
  }
  return a1;
}

void sub_20A8EFDF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  _QWORD *v27;
  _QWORD *v28;

  *v27 = off_24C33A860;
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase(v28);
  _Unwind_Resume(a1);
}

_QWORD *mlcore::EntityChange::setEntityType(mlcore::EntityChange *this, int a2)
{
  _QWORD *result;
  unint64_t v5;

  v5 = mlcore::EntityChangePropertyEntityType(this);
  result = std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::__emplace_unique_key_args<mlcore::ModelProperty<int> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<int> * const&>,std::tuple<>>((uint64_t)this + 136, v5, &v5);
  *((_DWORD *)result + 6) = a2;
  return result;
}

_QWORD *mlcore::EntityChange::setEntityPersistentID(mlcore::EntityChange *this, uint64_t a2)
{
  _QWORD *result;
  unint64_t v5;

  v5 = mlcore::EntityChangePropertyEntityPersistentID(this);
  result = std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>((uint64_t)this + 176, v5, &v5);
  result[3] = a2;
  return result;
}

_QWORD *mlcore::EntityChange::setSourceID(mlcore::EntityChange *this, uint64_t a2)
{
  _QWORD *result;
  unint64_t v5;

  v5 = mlcore::EntityChangePropertySourceID(this);
  result = std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>((uint64_t)this + 176, v5, &v5);
  result[3] = a2;
  return result;
}

_QWORD *mlcore::EntityChange::setChangeType(mlcore *a1, int a2)
{
  _QWORD *result;
  unint64_t v5;

  v5 = mlcore::EntityChangePropertyChangeType(a1);
  result = std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::__emplace_unique_key_args<mlcore::ModelProperty<int> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<int> * const&>,std::tuple<>>((uint64_t)a1 + 136, v5, &v5);
  *((_DWORD *)result + 6) = a2;
  return result;
}

void mlcore::EntityChange::setChanges(mlcore *a1, uint64_t a2)
{
  std::string::size_type v4;

  v4 = mlcore::EntityChangePropertyChanges(a1);
  mlcore::Entity::setValueForProperty<std::string>((uint64_t)a1, a2, v4);
}

void sub_20A8F0278(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  _QWORD *v27;
  _QWORD *v28;

  *v27 = off_24C33A860;
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase(v28);
  _Unwind_Resume(a1);
}

uint64_t mlcore::EntityChange::entityType(mlcore::EntityChange *this)
{
  unint64_t v2;

  v2 = mlcore::EntityChangePropertyEntityType(this);
  return mlcore::Entity::valueForProperty<int>((uint64_t)this, v2);
}

uint64_t mlcore::EntityChange::entityPersistentID(mlcore::EntityChange *this)
{
  unint64_t v2;

  v2 = mlcore::EntityChangePropertyEntityPersistentID(this);
  return mlcore::Entity::valueForProperty<long long>((uint64_t)this, v2);
}

uint64_t mlcore::EntityChange::changeType(mlcore::EntityChange *this)
{
  unint64_t v2;

  v2 = mlcore::EntityChangePropertyChangeType(this);
  return mlcore::Entity::valueForProperty<int>((uint64_t)this, v2);
}

uint64_t mlcore::EntityChange::sourceID(mlcore::EntityChange *this)
{
  unint64_t v2;

  v2 = mlcore::EntityChangePropertySourceID(this);
  return mlcore::Entity::valueForProperty<long long>((uint64_t)this, v2);
}

void mlcore::EntityChange::changes(mlcore::EntityChange *this@<X0>, std::string *a2@<X8>)
{
  unint64_t v4;

  v4 = mlcore::EntityChangePropertyChanges(this);
  mlcore::Entity::valueForProperty<std::string>(a2, (uint64_t)this, v4);
}

void mlcore::EntityChange::setChanges(uint64_t a1, uint64_t **a2)
{
  uint64_t *v3;
  uint64_t *v4;
  std::vector<std::string>::pointer v5;
  uint64_t v6;
  __int128 *v7;
  __int128 v8;
  mlcore *v9;
  std::string::size_type v10;
  void *v11[2];
  char v12;
  void *__p[2];
  char v14;
  std::vector<std::string> v15;

  memset(&v15, 0, sizeof(v15));
  v3 = *a2;
  v4 = a2[1];
  if (*a2 != v4)
  {
    v5 = 0;
    do
    {
      v6 = *v3;
      v7 = (__int128 *)(*v3 + 16);
      if (v5 >= v15.__end_cap_.__value_)
      {
        v5 = std::vector<std::string>::__push_back_slow_path<std::string const&>(&v15, v7);
      }
      else
      {
        if (*(char *)(v6 + 39) < 0)
        {
          std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)(v6 + 16), *(_QWORD *)(v6 + 24));
        }
        else
        {
          v8 = *v7;
          v5->__r_.__value_.__r.__words[2] = *(_QWORD *)(*v3 + 32);
          *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v8;
        }
        ++v5;
      }
      v15.__end_ = v5;
      ++v3;
    }
    while (v3 != v4);
  }
  std::string::basic_string[abi:ne180100]<0>(v11, ",");
  v9 = (mlcore *)mediaplatform::ComponentsJoinedByString<std::string>((uint64_t)__p, (uint64_t *)&v15, (uint64_t)v11);
  v10 = mlcore::EntityChangePropertyChanges(v9);
  mlcore::Entity::setValueForProperty<std::string>(a1, (uint64_t)__p, v10);
  if (v14 < 0)
    operator delete(__p[0]);
  if (v12 < 0)
    operator delete(v11[0]);
  __p[0] = &v15;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
}

void sub_20A8F04F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,uint64_t a23)
{
  if (a15 < 0)
    operator delete(__p);
  a16 = &a22;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a16);
  _Unwind_Resume(a1);
}

void mlcore::EntityChange::setChanges(mlcore::EntityChange *this, const mlcore::PropertyCache *a2)
{
  void *__p[3];

  mlcore::PropertyCache::allProperties(a2, __p);
  mlcore::EntityChange::setChanges((uint64_t)this, (uint64_t **)__p);
  if (__p[0])
    operator delete(__p[0]);
}

void sub_20A8F05A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void mlcore::EntityChange::propertyChanges(mlcore::EntityChange *this@<X0>, uint64_t **a2@<X8>)
{
  unint64_t v4;
  mlcore::EntityClass *v5;
  mlcore *v6;
  unint64_t v7;
  __int128 *begin;
  std::vector<std::string>::pointer end;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  void *__p[2];
  char v24;
  std::string v25;
  std::vector<std::string> v26;

  v4 = mlcore::EntityChangePropertyEntityType(this);
  v5 = (mlcore::EntityClass *)mlcore::Entity::valueForProperty<int>((uint64_t)this, v4);
  v6 = (mlcore *)mlcore::EntityClass::classFromType(v5);
  v7 = mlcore::EntityChangePropertyChanges(v6);
  mlcore::Entity::valueForProperty<std::string>(&v25, (uint64_t)this, v7);
  std::string::basic_string[abi:ne180100]<0>(__p, ",");
  mediaplatform::ComponentsSeparatedByString(&v25, (char *)__p, &v26);
  if (v24 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v25.__r_.__value_.__l.__data_);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  begin = (__int128 *)v26.__begin_;
  end = v26.__end_;
  if (v26.__begin_ != v26.__end_)
  {
    v10 = 0;
    do
    {
      v11 = mlcore::EntityClass::propertyForName((uint64_t)v6, begin);
      v12 = v11;
      if (v11)
      {
        v13 = (unint64_t)a2[2];
        if ((unint64_t)v10 >= v13)
        {
          v15 = *a2;
          v16 = v10 - *a2;
          v17 = v16 + 1;
          if ((unint64_t)(v16 + 1) >> 61)
            std::vector<std::string>::__throw_length_error[abi:ne180100]();
          v18 = v13 - (_QWORD)v15;
          if (v18 >> 2 > v17)
            v17 = v18 >> 2;
          if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFF8)
            v19 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v19 = v17;
          if (v19)
            v19 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v19);
          else
            v20 = 0;
          v21 = (uint64_t *)(v19 + 8 * v16);
          *v21 = v12;
          v14 = v21 + 1;
          if (v10 != v15)
          {
            do
            {
              v22 = *--v10;
              *--v21 = v22;
            }
            while (v10 != v15);
            v10 = *a2;
          }
          *a2 = v21;
          a2[1] = v14;
          a2[2] = (uint64_t *)(v19 + 8 * v20);
          if (v10)
            operator delete(v10);
        }
        else
        {
          *v10 = v11;
          v14 = v10 + 1;
        }
        a2[1] = v14;
        v10 = v14;
      }
      begin = (__int128 *)((char *)begin + 24);
    }
    while (begin != (__int128 *)end);
  }
  v25.__r_.__value_.__r.__words[0] = (std::string::size_type)&v26;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v25);
}

void sub_20A8F0768(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a15 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  _Unwind_Resume(exception_object);
}

void mlcore::PlaylistItemEntityQuery::~PlaylistItemEntityQuery(void **this)
{
  *this = off_24C33A410;
  if (*((char *)this + 183) < 0)
    operator delete(this[20]);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)(this + 17));
  mlcore::EntityQuery::~EntityQuery((mlcore::EntityQuery *)this);
}

{
  *this = off_24C33A410;
  if (*((char *)this + 183) < 0)
    operator delete(this[20]);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)(this + 17));
  mlcore::EntityQuery::~EntityQuery((mlcore::EntityQuery *)this);
  JUMPOUT(0x20BD27AFCLL);
}

void mlcore::PlaylistItemEntityQuery::_SQLResultColumnExpressions(uint64_t a1@<X0>, uint64_t *a2@<X1>, int64x2_t *a3@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;
  _OWORD *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  _QWORD *v27;
  char *v28;
  __int128 v29;
  int64x2_t v30;
  _OWORD *v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  __int128 v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  void *__p;
  uint64_t *v52;
  uint64_t v53;
  _QWORD v54[2];
  uint64_t v55;
  int64x2_t v56;
  uint64_t v57;
  int64x2_t *v58;

  if (*(_BYTE *)(a1 + 152))
  {
    a3->i64[0] = 0;
    a3->i64[1] = 0;
    a3[1].i64[0] = 0;
    v5 = (std::__shared_weak_count *)a2[1];
    v49 = *a2;
    v50 = v5;
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
    }
    mlcore::PlaylistItemEntityQuery::_resultPropertiesToFetch(a1, (uint64_t)&__p);
    if (v5)
    {
      v8 = (unint64_t *)&v5->__shared_owners_;
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    v10 = (uint64_t *)__p;
    v11 = v52;
    if (__p != v52)
    {
      do
      {
        v12 = *v10;
        v13 = (std::__shared_weak_count *)a2[1];
        v45 = *a2;
        v46 = v13;
        if (v13)
        {
          v14 = (unint64_t *)&v13->__shared_owners_;
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t *))(*(_QWORD *)v12 + 96))(&v47, v12, &v45);
        v16 = v47;
        v48 = v47;
        v47 = 0uLL;
        v17 = (_OWORD *)a3->i64[1];
        v18 = a3[1].u64[0];
        if ((unint64_t)v17 >= v18)
        {
          v44 = v16;
          v19 = ((uint64_t)v17 - a3->i64[0]) >> 4;
          v20 = v19 + 1;
          if ((unint64_t)(v19 + 1) >> 60)
            std::vector<std::string>::__throw_length_error[abi:ne180100]();
          v21 = v18 - a3->i64[0];
          if (v21 >> 3 > v20)
            v20 = v21 >> 3;
          if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFF0)
            v22 = 0xFFFFFFFFFFFFFFFLL;
          else
            v22 = v20;
          v58 = a3 + 1;
          v23 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<mediaplatform::DatabaseParameterBase>>>(v22);
          v25 = &v23[16 * v19];
          *(_OWORD *)v25 = v44;
          v48 = 0uLL;
          v27 = (_QWORD *)a3->i64[0];
          v26 = (_QWORD *)a3->i64[1];
          if (v26 == (_QWORD *)a3->i64[0])
          {
            v30 = vdupq_n_s64((unint64_t)v26);
            v28 = &v23[16 * v19];
          }
          else
          {
            v28 = &v23[16 * v19];
            do
            {
              v29 = *((_OWORD *)v26 - 1);
              v26 -= 2;
              *((_OWORD *)v28 - 1) = v29;
              v28 -= 16;
              *v26 = 0;
              v26[1] = 0;
            }
            while (v26 != v27);
            v30 = *a3;
          }
          v31 = v25 + 16;
          a3->i64[0] = (uint64_t)v28;
          a3->i64[1] = (uint64_t)(v25 + 16);
          v56 = v30;
          v32 = a3[1].i64[0];
          a3[1].i64[0] = (uint64_t)&v23[16 * v24];
          v57 = v32;
          v55 = v30.i64[0];
          std::__split_buffer<std::shared_ptr<mediaplatform::SQLExpression const>>::~__split_buffer((uint64_t)&v55);
          v33 = (std::__shared_weak_count *)*((_QWORD *)&v47 + 1);
          a3->i64[1] = (uint64_t)v31;
          if (v33)
          {
            v34 = (unint64_t *)&v33->__shared_owners_;
            do
              v35 = __ldaxr(v34);
            while (__stlxr(v35 - 1, v34));
            if (!v35)
            {
              ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
              std::__shared_weak_count::__release_weak(v33);
            }
          }
        }
        else
        {
          *v17 = v16;
          v48 = 0uLL;
          a3->i64[1] = (uint64_t)(v17 + 1);
        }
        v36 = v46;
        if (v46)
        {
          v37 = (unint64_t *)&v46->__shared_owners_;
          do
            v38 = __ldaxr(v37);
          while (__stlxr(v38 - 1, v37));
          if (!v38)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        ++v10;
      }
      while (v10 != v11);
    }
    std::__hash_table<mlcore::ModelPropertyBase *,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::allocator<mlcore::ModelPropertyBase *>>::~__hash_table((uint64_t)&v53);
    if (__p)
    {
      v52 = (uint64_t *)__p;
      operator delete(__p);
    }
  }
  else
  {
    v39 = (std::__shared_weak_count *)a2[1];
    v54[0] = *a2;
    v54[1] = v39;
    if (v39)
    {
      v40 = (unint64_t *)&v39->__shared_owners_;
      do
        v41 = __ldxr(v40);
      while (__stxr(v41 + 1, v40));
    }
    mlcore::EntityQuery::_SQLResultColumnExpressions(a1, (const mlcore::EntityClass *)v54, (char **)a3);
    if (v39)
    {
      v42 = (unint64_t *)&v39->__shared_owners_;
      do
        v43 = __ldaxr(v42);
      while (__stlxr(v43 - 1, v42));
      if (!v43)
      {
        ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
        std::__shared_weak_count::__release_weak(v39);
      }
    }
  }
}

void sub_20A8F0B68(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100](v1 - 136);
  _Unwind_Resume(a1);
}

void mlcore::PlaylistItemEntityQuery::_SQLSelectStatement(mlcore::PlaylistItemEntityQuery *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  mlcore *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t IsLimited;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  __int128 *v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  __int128 *v37;
  uint64_t v38;
  mlcore *v39;
  unint64_t v40;
  mlcore *v41;
  uint64_t v42;
  unint64_t v43;
  mlcore *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  std::string *p_shared_weak_owners;
  unint64_t v52;
  std::__shared_weak_count *v53;
  uint64_t v54[2];
  uint64_t v55[2];
  _QWORD v56[2];
  __int128 v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  uint64_t v60[3];
  uint64_t v61[2];
  uint64_t v62[2];
  void **v63;
  __int128 v64;
  uint64_t v65;

  if (*((_BYTE *)a1 + 152))
  {
    v6 = (std::__shared_weak_count *)a2[1];
    v61[0] = *a2;
    v61[1] = (uint64_t)v6;
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
    }
    mlcore::Query::_SQLSelectStatement((uint64_t)a1, v61, a3);
    if (v6)
    {
      v9 = (unint64_t *)&v6->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
    v11 = *a3;
    v12 = a2[1];
    v58 = *a2;
    v59 = (std::__shared_weak_count *)v12;
    if (v12)
    {
      v13 = (unint64_t *)(v12 + 8);
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
    }
    (*(void (**)(__int128 *__return_ptr, mlcore::PlaylistItemEntityQuery *, uint64_t *))(*(_QWORD *)a1 + 80))(&v64, a1, &v58);
    v53 = (std::__shared_weak_count *)*((_QWORD *)&v64 + 1);
    *(_OWORD *)v60 = v64;
    v64 = 0uLL;
    mediaplatform::SQLSelectStatement::setWhereExpression(v11, v60);
    if (v53)
    {
      v16 = (unint64_t *)&v53->__shared_owners_;
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
        std::__shared_weak_count::__release_weak(v53);
      }
    }
    v18 = (std::__shared_weak_count *)*((_QWORD *)&v64 + 1);
    if (*((_QWORD *)&v64 + 1))
    {
      v19 = (unint64_t *)(*((_QWORD *)&v64 + 1) + 8);
      do
        v20 = __ldaxr(v19);
      while (__stlxr(v20 - 1, v19));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    v21 = v59;
    if (v59)
    {
      v22 = (unint64_t *)&v59->__shared_owners_;
      do
        v23 = __ldaxr(v22);
      while (__stlxr(v23 - 1, v22));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
        std::__shared_weak_count::__release_weak(v21);
      }
    }
    v24 = *((_QWORD *)a1 + 17);
    IsLimited = mlcore::PlaylistPropertySmartIsLimited(v15);
    if (mlcore::Entity::valueForProperty<int>(v24, IsLimited))
    {
      v26 = (std::__shared_weak_count *)*((_QWORD *)a1 + 18);
      v56[0] = *((_QWORD *)a1 + 17);
      v56[1] = v26;
      if (v26)
      {
        v27 = (unint64_t *)&v26->__shared_owners_;
        do
          v28 = __ldxr(v27);
        while (__stxr(v28 + 1, v27));
      }
      mlcore::SortDescriptorsForPlaylistLimitOrder((mlcore *)v56, 0, (char *)&v57);
      v55[0] = 0;
      v55[1] = 0;
      mlcore::SQLOrderingTermsForSortDescriptors((uint64_t *)&v57, v55, (char **)&v64);
      v63 = (void **)&v57;
      std::vector<mlcore::SortDescriptor>::__destroy_vector::operator()[abi:ne180100](&v63);
      if (v26)
      {
        v29 = (unint64_t *)&v26->__shared_owners_;
        do
          v30 = __ldaxr(v29);
        while (__stlxr(v30 - 1, v29));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      v31 = (__int128 *)(*a3 + 56);
      if (v31 != &v64)
        std::vector<std::shared_ptr<mediaplatform::SQLOrderingTerm const>>::__assign_with_size[abi:ne180100]<std::shared_ptr<mediaplatform::SQLOrderingTerm const>*,std::shared_ptr<mediaplatform::SQLOrderingTerm const>*>((uint64_t)v31, (uint64_t *)v64, *((uint64_t **)&v64 + 1), (uint64_t)(*((_QWORD *)&v64 + 1) - v64) >> 4);
      *(_QWORD *)&v57 = &v64;
    }
    else
    {
      mlcore::PlaylistItemEntityQuery::_sortDescriptorsForDisplay(a1, &v57);
      v54[0] = 0;
      v54[1] = 0;
      mlcore::SQLOrderingTermsForSortDescriptors((uint64_t *)&v57, v54, (char **)&v64);
      v63 = (void **)&v57;
      std::vector<mlcore::SortDescriptor>::__destroy_vector::operator()[abi:ne180100](&v63);
      v37 = (__int128 *)(*a3 + 56);
      if (v37 != &v64)
        std::vector<std::shared_ptr<mediaplatform::SQLOrderingTerm const>>::__assign_with_size[abi:ne180100]<std::shared_ptr<mediaplatform::SQLOrderingTerm const>*,std::shared_ptr<mediaplatform::SQLOrderingTerm const>*>((uint64_t)v37, (uint64_t *)v64, *((uint64_t **)&v64 + 1), (uint64_t)(*((_QWORD *)&v64 + 1) - v64) >> 4);
      *(_QWORD *)&v57 = &v64;
    }
    std::vector<std::shared_ptr<mediaplatform::SQLExpression const>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v57);
    v38 = *((_QWORD *)a1 + 17);
    v40 = mlcore::PlaylistPropertySmartIsLimited(v39);
    v41 = (mlcore *)mlcore::Entity::valueForProperty<int>(v38, v40);
    if ((_DWORD)v41)
    {
      v42 = *((_QWORD *)a1 + 17);
      v43 = mlcore::PlaylistPropertySmartLimitKind(v41);
      v44 = (mlcore *)mlcore::Entity::valueForProperty<int>(v42, v43);
      if ((_DWORD)v44 == 2)
      {
        v45 = *a3;
        v46 = *((_QWORD *)a1 + 17);
        v47 = mlcore::PlaylistPropertySmartLimitValue(v44);
        v48 = mlcore::Entity::valueForProperty<long long>(v46, v47);
        v49 = (std::__shared_weak_count *)operator new(0x40uLL);
        v49->__shared_owners_ = 0;
        v50 = (unint64_t *)&v49->__shared_owners_;
        v49->__shared_weak_owners_ = 0;
        v49->__vftable = (std::__shared_weak_count_vtbl *)&off_24C33BB10;
        std::string::basic_string[abi:ne180100]<0>(&v64, "");
        v49[1].__vftable = (std::__shared_weak_count_vtbl *)off_24C335BD8;
        v49[1].__shared_owners_ = v48;
        p_shared_weak_owners = (std::string *)&v49[1].__shared_weak_owners_;
        if (SHIBYTE(v65) < 0)
        {
          std::string::__init_copy_ctor_external(p_shared_weak_owners, (const std::string::value_type *)v64, *((std::string::size_type *)&v64 + 1));
          if (SHIBYTE(v65) < 0)
            operator delete((void *)v64);
        }
        else
        {
          *(_OWORD *)&p_shared_weak_owners->__r_.__value_.__l.__data_ = v64;
          v49[2].__shared_owners_ = v65;
        }
        std::shared_ptr<mlcore::Predicate>::operator=[abi:ne180100]((_QWORD *)(v45 + 24), (uint64_t)&v49[1], (uint64_t)v49);
        do
          v52 = __ldaxr(v50);
        while (__stlxr(v52 - 1, v50));
        if (!v52)
        {
          ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
          std::__shared_weak_count::__release_weak(v49);
        }
      }
    }
  }
  else
  {
    v32 = (std::__shared_weak_count *)a2[1];
    v62[0] = *a2;
    v62[1] = (uint64_t)v32;
    if (v32)
    {
      v33 = (unint64_t *)&v32->__shared_owners_;
      do
        v34 = __ldxr(v33);
      while (__stxr(v34 + 1, v33));
    }
    mlcore::PropertiesQuery::_SQLSelectStatement(a1, v62, a3);
    if (v32)
    {
      v35 = (unint64_t *)&v32->__shared_owners_;
      do
        v36 = __ldaxr(v35);
      while (__stlxr(v36 - 1, v35));
      if (!v36)
      {
        ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
        std::__shared_weak_count::__release_weak(v32);
      }
    }
  }
}

void sub_20A8F103C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  void *v30;

  if (*(char *)(v28 - 73) < 0)
    operator delete(*(void **)(v28 - 96));
  std::__shared_weak_count::~__shared_weak_count(v27);
  operator delete(v30);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100](v26);
  _Unwind_Resume(a1);
}

void mlcore::PlaylistItemEntityQuery::_SQLWhereExpression(uint64_t a1@<X0>, mlcore::LibraryView **a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  mlcore::LibraryView *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  mlcore::LibraryView *v18;
  std::__shared_weak_count *v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  __int128 v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  __int128 *v38;
  char v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  unint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  uint64_t i;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  uint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  std::__shared_weak_count *v66;
  unint64_t *v67;
  unint64_t v68;
  _QWORD v69[2];
  mlcore::LibraryView *v70;
  std::__shared_weak_count *v71;
  mlcore::LibraryView *v72;
  std::__shared_weak_count *v73;
  __int128 *v74;
  __int128 *v75;
  __int128 *v76;
  uint64_t v77;
  std::__shared_weak_count *v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  std::__shared_weak_count *v82;
  _QWORD v83[2];
  __int128 **v84;
  char v85;
  __int128 v86;
  uint64_t v87;
  std::__shared_weak_count *v88;
  uint64_t v89;

  v89 = *MEMORY[0x24BDAC8D0];
  if (*(_BYTE *)(a1 + 152))
  {
    mlcore::Playlist::filterPredicate(*(mlcore::Playlist **)(a1 + 136), &v81);
    if (!v81)
    {
      v18 = *a2;
      v19 = (std::__shared_weak_count *)a2[1];
      v69[0] = v18;
      v69[1] = v19;
      if (v19)
      {
        p_shared_owners = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(p_shared_owners);
        while (__stxr(v21 + 1, p_shared_owners));
      }
      mlcore::Query::_SQLWhereExpression(a1, (uint64_t)v69, a3);
      if (!v19)
        goto LABEL_77;
      v22 = (unint64_t *)&v19->__shared_owners_;
      do
        v23 = __ldaxr(v22);
      while (__stlxr(v23 - 1, v22));
      if (v23)
        goto LABEL_77;
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      v24 = v19;
      goto LABEL_76;
    }
    v6 = *(_QWORD *)(a1 + 16);
    v7 = *(std::__shared_weak_count **)(a1 + 24);
    *(_QWORD *)&v80 = v6;
    *((_QWORD *)&v80 + 1) = v7;
    if (v7)
    {
      v8 = (unint64_t *)&v7->__shared_owners_;
      do
        v9 = __ldxr(v8);
      while (__stxr(v9 + 1, v8));
      v10 = *a2;
      if (*a2)
      {
        *(_QWORD *)&v79 = v6;
        *((_QWORD *)&v79 + 1) = v7;
        v11 = (unint64_t *)&v7->__shared_owners_;
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
        goto LABEL_28;
      }
    }
    else
    {
      v10 = *a2;
      if (*a2)
      {
        v79 = v6;
LABEL_28:
        mlcore::LibraryView::_predicateByApplyingFilters(v10, &v79, *(mlcore::EntityClass **)(a1 + 8), &v86);
        v25 = v86;
        v86 = 0uLL;
        v80 = v25;
        if (v7)
        {
          v26 = (unint64_t *)&v7->__shared_owners_;
          do
            v27 = __ldaxr(v26);
          while (__stlxr(v27 - 1, v26));
          if (!v27)
          {
            ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
            std::__shared_weak_count::__release_weak(v7);
          }
        }
        v28 = (std::__shared_weak_count *)*((_QWORD *)&v86 + 1);
        if (*((_QWORD *)&v86 + 1))
        {
          v29 = (unint64_t *)(*((_QWORD *)&v86 + 1) + 8);
          do
            v30 = __ldaxr(v29);
          while (__stlxr(v30 - 1, v29));
          if (!v30)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        v31 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (*((_QWORD *)&v79 + 1))
        {
          v32 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
          do
            v33 = __ldaxr(v32);
          while (__stlxr(v33 - 1, v32));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        v6 = v80;
      }
    }
    if (v6)
    {
      *(_QWORD *)&v86 = v6;
      *((_QWORD *)&v86 + 1) = *((_QWORD *)&v80 + 1);
      if (*((_QWORD *)&v80 + 1))
      {
        v34 = (unint64_t *)(*((_QWORD *)&v80 + 1) + 8);
        do
          v35 = __ldxr(v34);
        while (__stxr(v35 + 1, v34));
      }
      v87 = v81;
      v88 = v82;
      if (v82)
      {
        v36 = (unint64_t *)&v82->__shared_owners_;
        do
          v37 = __ldxr(v36);
        while (__stxr(v37 + 1, v36));
      }
      v74 = 0;
      v75 = 0;
      v76 = 0;
      v84 = &v74;
      v85 = 0;
      v38 = (__int128 *)operator new(0x20uLL);
      v39 = 0;
      v40 = 0;
      v74 = v38;
      v75 = v38;
      v76 = v38 + 2;
      do
      {
        v41 = v39;
        v42 = *(&v86 + v40);
        *v38 = v42;
        if (*((_QWORD *)&v42 + 1))
        {
          v43 = (unint64_t *)(*((_QWORD *)&v42 + 1) + 8);
          do
            v44 = __ldxr(v43);
          while (__stxr(v44 + 1, v43));
        }
        ++v38;
        v39 = 1;
        v40 = 1;
      }
      while ((v41 & 1) == 0);
      v75 = v38;
      mlcore::CreateAndPredicate(&v74, &v77);
      v45 = v77;
      v46 = (std::__shared_weak_count *)a2[1];
      v72 = *a2;
      v73 = v46;
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldxr(v47);
        while (__stxr(v48 + 1, v47));
      }
      (*(void (**)(uint64_t, mlcore::LibraryView **))(*(_QWORD *)v45 + 64))(v45, &v72);
      v49 = v73;
      if (v73)
      {
        v50 = (unint64_t *)&v73->__shared_owners_;
        do
          v51 = __ldaxr(v50);
        while (__stlxr(v51 - 1, v50));
        if (!v51)
        {
          ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
          std::__shared_weak_count::__release_weak(v49);
        }
      }
      v52 = v78;
      if (v78)
      {
        v53 = (unint64_t *)&v78->__shared_owners_;
        do
          v54 = __ldaxr(v53);
        while (__stlxr(v54 - 1, v53));
        if (!v54)
        {
          ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
          std::__shared_weak_count::__release_weak(v52);
        }
      }
      v84 = &v74;
      std::vector<std::shared_ptr<mediaplatform::SQLExpression const>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v84);
      for (i = 16; i != -16; i -= 16)
        std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)&v86 + i);
    }
    else
    {
      v62 = v81;
      v63 = (std::__shared_weak_count *)a2[1];
      v70 = *a2;
      v71 = v63;
      if (v63)
      {
        v64 = (unint64_t *)&v63->__shared_owners_;
        do
          v65 = __ldxr(v64);
        while (__stxr(v65 + 1, v64));
      }
      (*(void (**)(uint64_t, mlcore::LibraryView **))(*(_QWORD *)v62 + 64))(v62, &v70);
      v66 = v71;
      if (v71)
      {
        v67 = (unint64_t *)&v71->__shared_owners_;
        do
          v68 = __ldaxr(v67);
        while (__stlxr(v68 - 1, v67));
        if (!v68)
        {
          ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
          std::__shared_weak_count::__release_weak(v66);
        }
      }
    }
    v56 = (std::__shared_weak_count *)*((_QWORD *)&v80 + 1);
    if (!*((_QWORD *)&v80 + 1))
      goto LABEL_77;
    v57 = (unint64_t *)(*((_QWORD *)&v80 + 1) + 8);
    do
      v58 = __ldaxr(v57);
    while (__stlxr(v58 - 1, v57));
    if (v58)
      goto LABEL_77;
    ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
    v24 = v56;
LABEL_76:
    std::__shared_weak_count::__release_weak(v24);
LABEL_77:
    v59 = v82;
    if (v82)
    {
      v60 = (unint64_t *)&v82->__shared_owners_;
      do
        v61 = __ldaxr(v60);
      while (__stlxr(v61 - 1, v60));
      if (!v61)
      {
        ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
        std::__shared_weak_count::__release_weak(v59);
      }
    }
    return;
  }
  v13 = (std::__shared_weak_count *)a2[1];
  v83[0] = *a2;
  v83[1] = v13;
  if (v13)
  {
    v14 = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 1, v14));
  }
  mlcore::Query::_SQLWhereExpression(a1, (uint64_t)v83, a3);
  if (v13)
  {
    v16 = (unint64_t *)&v13->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
}

void sub_20A8F1618(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  va_list va1;
  uint64_t v19;
  va_list va2;

  va_start(va2, a4);
  va_start(va1, a4);
  va_start(va, a4);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v17 = va_arg(va2, _QWORD);
  v19 = va_arg(va2, _QWORD);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)va);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)va1);
  std::shared_ptr<mlcore::Predicate>::~shared_ptr[abi:ne180100]((uint64_t)va2);
  _Unwind_Resume(a1);
}

