uint64_t assignWithTake for MLError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1D46B2D0C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MLError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF9 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 249);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 7)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MLError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 249;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1D479B6D4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1D479B6DC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MLError()
{
  return &type metadata for MLError;
}

uint64_t sub_1D479B6F4()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AnyVIImageContent()
{
  return objc_opt_self();
}

id sub_1D479B738()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_orientation);
}

id sub_1D479B74C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_imageSize);
}

id sub_1D479B760()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_pixelBuffer);
  if (!v1)
  {
    sub_1D479B7D0();
    swift_allocError();
    swift_willThrow();
  }
  return v1;
}

unint64_t sub_1D479B7D0()
{
  unint64_t result;

  result = qword_1EFEAB6F8;
  if (!qword_1EFEAB6F8)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4932890, &type metadata for AnyVIImageContent.Error);
    atomic_store(result, (unint64_t *)&qword_1EFEAB6F8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AnyVIImageContent.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D479B854 + 4 * asc_1D49327D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D479B874 + 4 * byte_1D49327D5[v4]))();
}

_BYTE *sub_1D479B854(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D479B874(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D479B87C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D479B884(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D479B88C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D479B894(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AnyVIImageContent.Error()
{
  return &type metadata for AnyVIImageContent.Error;
}

unint64_t sub_1D479B8B4()
{
  unint64_t result;

  result = qword_1EFEAB700;
  if (!qword_1EFEAB700)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4932868, &type metadata for AnyVIImageContent.Error);
    atomic_store(result, (unint64_t *)&qword_1EFEAB700);
  }
  return result;
}

uint64_t sub_1D479B8F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;

  type metadata accessor for SceneClassificationModelFactory();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *a2 = v4;
  return swift_retain();
}

id sub_1D479B94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[6];
  _OWORD v36[10];
  uint64_t v37;
  _QWORD v38[4];
  char v39;

  v4 = v3;
  v29 = a1;
  v30 = sub_1D492246C();
  v33 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D4922484();
  v31 = *(_QWORD *)(v9 - 8);
  v32 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CancelSession()), sel_init);
  v38[0] = 0xD000000000000011;
  v38[1] = 0x80000001D4944680;
  v38[2] = "Text Lookup Overall";
  v38[3] = 19;
  v39 = 2;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  v14 = sub_1D47C12D0((uint64_t)v38, 0);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v14;
  v15[3] = sub_1D479CFD4;
  v15[4] = v13;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1D479D008;
  *(_QWORD *)(v16 + 24) = v15;
  v28 = *(_QWORD *)(v4 + 80);
  v17 = swift_allocObject();
  swift_weakInit();
  sub_1D479D044(v29, (uint64_t)v36);
  v18 = swift_allocObject();
  v19 = v36[8];
  *(_OWORD *)(v18 + 152) = v36[7];
  *(_OWORD *)(v18 + 168) = v19;
  *(_OWORD *)(v18 + 184) = v36[9];
  v20 = v36[2];
  *(_OWORD *)(v18 + 88) = v36[3];
  *(_OWORD *)(v18 + 104) = v36[4];
  v21 = v36[6];
  *(_OWORD *)(v18 + 120) = v36[5];
  *(_OWORD *)(v18 + 136) = v21;
  v22 = v36[1];
  *(_OWORD *)(v18 + 40) = v36[0];
  *(_OWORD *)(v18 + 56) = v22;
  *(_QWORD *)(v18 + 16) = sub_1D479D014;
  *(_QWORD *)(v18 + 24) = v16;
  *(_QWORD *)(v18 + 32) = v17;
  v23 = v37;
  *(_OWORD *)(v18 + 72) = v20;
  *(_QWORD *)(v18 + 200) = v23;
  *(_QWORD *)(v18 + 208) = v12;
  v35[4] = sub_1D479D130;
  v35[5] = v18;
  v35[0] = MEMORY[0x1E0C809B0];
  v35[1] = 1107296256;
  v35[2] = sub_1D47E5A84;
  v35[3] = &block_descriptor_3;
  v24 = _Block_copy(v35);
  swift_retain();
  swift_retain();
  v25 = v12;
  sub_1D4922478();
  v34 = MEMORY[0x1E0DEE9D8];
  sub_1D4696EA4(&qword_1ED98D0C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D1D0);
  sub_1D479D804((unint64_t *)&qword_1ED98D1E0, (uint64_t *)&unk_1ED98D1D0);
  v26 = v30;
  sub_1D4922AFC();
  MEMORY[0x1D8261CD4](0, v11, v8, v24);
  _Block_release(v24);
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v26);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v32);
  swift_release();
  swift_release();
  return v25;
}

void sub_1D479BCEC(void (*a1)(void *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  void *v25;
  _BYTE *v26;
  _OWORD v27[10];
  uint64_t v28;

  v10 = sub_1D4922370();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((VIIsSettingsEnabledForLookup() & 1) != 0)
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_retain();
      swift_release();
      sub_1D479D044(a4, (uint64_t)v27);
      v14 = swift_allocObject();
      v15 = v27[6];
      *(_OWORD *)(v14 + 136) = v27[7];
      v16 = v27[9];
      *(_OWORD *)(v14 + 152) = v27[8];
      *(_OWORD *)(v14 + 168) = v16;
      v17 = v27[2];
      *(_OWORD *)(v14 + 72) = v27[3];
      v18 = v27[5];
      *(_OWORD *)(v14 + 88) = v27[4];
      *(_OWORD *)(v14 + 104) = v18;
      *(_OWORD *)(v14 + 120) = v15;
      v19 = v27[1];
      *(_OWORD *)(v14 + 24) = v27[0];
      *(_OWORD *)(v14 + 40) = v19;
      *(_QWORD *)(v14 + 16) = a3;
      v20 = v28;
      *(_OWORD *)(v14 + 56) = v17;
      *(_QWORD *)(v14 + 184) = v20;
      *(_QWORD *)(v14 + 192) = a5;
      *(_QWORD *)(v14 + 200) = a1;
      *(_QWORD *)(v14 + 208) = a2;
      swift_retain();
      v21 = a5;
      swift_retain();
      sub_1D47E48F0((uint64_t (*)(uint64_t))sub_1D479D20C, v14);
      swift_release();
      swift_release();
    }
  }
  else
  {
    sub_1D470C76C((uint64_t)v13);
    v22 = sub_1D4922358();
    v23 = sub_1D4922910();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1D467C000, v22, v23, "Text lookup disabled by settings", v24, 2u);
      MEMORY[0x1D82635B8](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_1D479CE94();
    v25 = (void *)swift_allocError();
    *v26 = 1;
    a1(v25, 1);

  }
}

void sub_1D479BF34(char a1, uint64_t a2, _QWORD *a3, char *a4, void (*a5)(void *, uint64_t), uint64_t a6)
{
  void *v10;
  _BYTE *v11;

  if ((a1 & 1) != 0)
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_1D479C8A4(a3, a4, a5, a6);
      swift_release();
    }
  }
  else
  {
    sub_1D479CE94();
    v10 = (void *)swift_allocError();
    *v11 = 1;
    a5(v10, 1);

  }
}

void *sub_1D479C00C(_QWORD *a1, NSObject *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint8_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  _BYTE *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  double *v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v50;
  uint8_t *v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  os_log_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 *v61;
  _QWORD *v62;
  _QWORD v63[3];
  void *v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  _QWORD v69[3];
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v56 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA490);
  MEMORY[0x1E0C80A78](v5);
  v55 = (uint64_t)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for SceneClassificationModelFactory.Input();
  MEMORY[0x1E0C80A78](v54);
  v61 = (__int128 *)((char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1D4920FD8();
  v57 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v60 = sub_1D4922370();
  *(_QWORD *)&v59 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v58 = (uint64_t)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D49224A8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint8_t **)((char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v62 = v2;
  v16 = (void *)v2[10];
  *v15 = v16;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DEF740], v12);
  v17 = v16;
  v18 = sub_1D49224C0();
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v18 & 1) != 0)
  {
    if (a1[12] != 1)
    {
      v19 = (void *)a1[17];
      if (v19)
      {
        swift_bridgeObjectRetain();
        return v19;
      }
    }
    __swift_project_boxed_opaque_existential_1(v62 + 5, v62[8]);
    sub_1D4921E24();
    sub_1D479CED8((uint64_t)(a1 + 7), (uint64_t)v63);
    v19 = v64;
    if (v64)
    {
      v20 = v65;
      v21 = __swift_project_boxed_opaque_existential_1(v63, (uint64_t)v64);
      v22 = (uint64_t)v19;
      v19 = v21;
      sub_1D483D504(v22, v20, (uint64_t **)&v66);
      v18 = v3;
      v23 = v63;
      if (v3)
      {
LABEL_21:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
        return v19;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
      if (*((_QWORD *)&v67 + 1))
      {
        sub_1D46B2A10(&v66, (uint64_t)v69);
        v24 = v58;
        sub_1D470C76C(v58);
        v25 = v57;
        (*(void (**)(char *, os_log_t, uint64_t))(v57 + 16))(v10, v56, v8);
        v26 = sub_1D4922358();
        v27 = sub_1D4922910();
        v28 = v27;
        if (os_log_type_enabled(v26, v27))
        {
          v56 = v26;
          v29 = (uint8_t *)swift_slowAlloc();
          v53 = swift_slowAlloc();
          *(_QWORD *)&v66 = v53;
          v52 = v28;
          v51 = v29;
          *(_DWORD *)v29 = 136315138;
          sub_1D4696EA4(&qword_1EFEAB720, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
          v30 = sub_1D4922E14();
          v63[0] = sub_1D47F0250(v30, v31, (uint64_t *)&v66);
          v18 = 0;
          sub_1D4922A78();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v8);
          v26 = v56;
          v32 = v51;
          _os_log_impl(&dword_1D467C000, v56, (os_log_type_t)v52, "Start scene classification for lookup: %s", v51, 0xCu);
          v33 = v53;
          swift_arrayDestroy();
          MEMORY[0x1D82635B8](v33, -1, -1);
          MEMORY[0x1D82635B8](v32, -1, -1);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v8);
        }

        (*(void (**)(uint64_t, _QWORD))(v59 + 8))(v24, v60);
        if (qword_1ED98CC88 == -1)
          goto LABEL_14;
        goto LABEL_28;
      }
    }
    else
    {
      sub_1D46992EC((uint64_t)v63, &qword_1ED98D920);
      v66 = 0u;
      v67 = 0u;
      v68 = 0;
    }
    sub_1D46992EC((uint64_t)&v66, (uint64_t *)&unk_1ED98DBD0);
    sub_1D479CE94();
    swift_allocError();
    *v34 = 3;
    swift_willThrow();
    return v19;
  }
  __break(1u);
LABEL_28:
  swift_once();
LABEL_14:
  v60 = xmmword_1ED98CC60;
  v59 = xmmword_1ED98CC70;
  v35 = (void *)a1[20];
  if (v35 && objc_msgSend(v35, sel_preferredMetalDevice))
  {
    swift_getObjectType();
    v36 = v55;
    sub_1D4892C18(v55);
    swift_unknownObjectRelease();
  }
  else
  {
    v37 = sub_1D49223A0();
    v36 = v55;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v55, 1, 1, v37);
  }
  v38 = (double *)v61;
  v39 = v54;
  v40 = v59;
  *v61 = v60;
  *((_OWORD *)v38 + 1) = v40;
  sub_1D479CF20(v36, (uint64_t)v38 + *(int *)(v39 + 20));
  v41 = swift_allocObject();
  sub_1D479CE94();
  v42 = swift_allocError();
  *v43 = 0;
  *(_QWORD *)(v41 + 16) = v42;
  *(_QWORD *)(v41 + 24) = 0;
  *(_BYTE *)(v41 + 32) = 1;
  v19 = (void *)v62[2];
  sub_1D48C55A0();
  if (v18)
  {
    sub_1D4697DE0((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for SceneClassificationModelFactory.Input);
    swift_release();
    v23 = v69;
    goto LABEL_21;
  }
  swift_retain();
  sub_1D4725C18(v38, (uint64_t)sub_1D479CF9C, v41, (NSObject **)&v66);
  swift_release();
  swift_release();
  v44 = v70;
  v45 = v71;
  __swift_project_boxed_opaque_existential_1(v69, v70);
  v46 = *((_QWORD *)&v67 + 1);
  v47 = v68;
  __swift_project_boxed_opaque_existential_1(&v66, *((uint64_t *)&v67 + 1));
  v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 16))(v46, v47);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 8))(v48, v44, v45);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v19 = *(void **)(v41 + 16);
  if ((*(_BYTE *)(v41 + 32) & 1) != 0)
  {
    v72 = *(_QWORD *)(v41 + 16);
    v50 = v19;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98ECF0);
    swift_willThrowTypedImpl();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_1D4697DE0((uint64_t)v61, (uint64_t (*)(_QWORD))type metadata accessor for SceneClassificationModelFactory.Input);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
  return v19;
}

void sub_1D479C7A0(void *a1, void *a2, __int16 a3, uint64_t a4)
{
  void *v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char v18;

  if ((a3 & 0x100) != 0)
  {
    v13 = a3;
    sub_1D46AAFD4();
    v14 = swift_allocError();
    *(_QWORD *)v15 = a1;
    *(_QWORD *)(v15 + 8) = a2;
    *(_BYTE *)(v15 + 16) = v13;
    swift_beginAccess();
    v16 = *(void **)(a4 + 16);
    v17 = *(_QWORD *)(a4 + 24);
    v18 = *(_BYTE *)(a4 + 32);
    *(_QWORD *)(a4 + 16) = v14;
    *(_QWORD *)(a4 + 24) = 0;
    *(_BYTE *)(a4 + 32) = 1;
    sub_1D46B2CC8(a1, a2, v13);
    v10 = v16;
    v11 = v17;
    v12 = v18;
  }
  else
  {
    swift_beginAccess();
    v7 = *(void **)(a4 + 16);
    v8 = *(_QWORD *)(a4 + 24);
    v9 = *(_BYTE *)(a4 + 32);
    *(_QWORD *)(a4 + 16) = a1;
    *(_QWORD *)(a4 + 24) = a2;
    *(_BYTE *)(a4 + 32) = 0;
    swift_bridgeObjectRetain();
    v10 = v7;
    v11 = v8;
    v12 = v9;
  }
  sub_1D479CF90(v10, v11, v12);
}

void sub_1D479C8A4(_QWORD *a1, char *a2, void (*a3)(void *, uint64_t), uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  os_unfair_lock_s *v19;
  int v20;
  void *v21;
  _BYTE *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(void *, uint64_t);
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;

  v5 = v4;
  v10 = sub_1D4922370();
  v41 = *(_QWORD *)(v10 - 8);
  v42 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D49224A8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = (void *)v5[10];
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF740], v13);
  v18 = v17;
  LOBYTE(v17) = sub_1D49224C0();
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) != 0)
  {
    v19 = (os_unfair_lock_s *)(*(_QWORD *)&a2[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock] + 16);
    os_unfair_lock_lock(v19);
    v20 = a2[OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled];
    os_unfair_lock_unlock(v19);
    if (v20 == 1)
    {
      sub_1D479CE94();
      v21 = (void *)swift_allocError();
      *v22 = 2;
      a3(v21, 1);

    }
    else
    {
      v40 = a1;
      v23 = sub_1D479C00C(a1, &a2[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_identifier]);
      v25 = sub_1D46D1778((uint64_t)v23, v24, (uint64_t)v5 + OBJC_IVAR____TtC18VisualIntelligence14TextLookupFlow_config, v5[3]);
      v27 = v26;
      sub_1D470C76C((uint64_t)v12);
      swift_bridgeObjectRetain();
      v28 = sub_1D4922358();
      v29 = sub_1D4922910();
      if (os_log_type_enabled(v28, v29))
      {
        v37 = v25;
        v39 = a4;
        v30 = (uint8_t *)swift_slowAlloc();
        v31 = swift_slowAlloc();
        v45 = v31;
        *(_DWORD *)v30 = 136315138;
        v38 = a3;
        v36 = v27;
        if (v23)
          v32 = v23[2];
        else
          v32 = 0;
        v43 = v32;
        v44 = v23 == 0;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98ED50);
        v33 = sub_1D4922670();
        v43 = sub_1D47F0250(v33, v34, &v45);
        sub_1D4922A78();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D467C000, v28, v29, "End scene classification for lookup. %s", v30, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D82635B8](v31, -1, -1);
        MEMORY[0x1D82635B8](v30, -1, -1);

        (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v42);
        a3 = v38;
        a4 = v39;
        v27 = v36;
        v25 = v37;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v42);
      }
      __swift_project_boxed_opaque_existential_1(v5 + 5, v5[8]);
      sub_1D47B25E8((uint64_t)v40, v25, v27, a2, (uint64_t)a3, a4);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D479CC44()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);

  sub_1D4697DE0(v0 + OBJC_IVAR____TtC18VisualIntelligence14TextLookupFlow_config, (uint64_t (*)(_QWORD))type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig);
  return swift_deallocClassInstance();
}

uint64_t sub_1D479CCA4()
{
  return type metadata accessor for TextLookupFlow();
}

uint64_t type metadata accessor for TextLookupFlow()
{
  uint64_t result;

  result = qword_1ED98F038;
  if (!qword_1ED98F038)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D479CCE8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TextLookupFlowError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D479CDCC + 4 * byte_1D49328D5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D479CE00 + 4 * byte_1D49328D0[v4]))();
}

uint64_t sub_1D479CE00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D479CE08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D479CE10);
  return result;
}

uint64_t sub_1D479CE1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D479CE24);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D479CE28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D479CE30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextLookupFlowError()
{
  return &type metadata for TextLookupFlowError;
}

unint64_t sub_1D479CE50()
{
  unint64_t result;

  result = qword_1EFEAB710;
  if (!qword_1EFEAB710)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4932994, &type metadata for TextLookupFlowError);
    atomic_store(result, (unint64_t *)&qword_1EFEAB710);
  }
  return result;
}

unint64_t sub_1D479CE94()
{
  unint64_t result;

  result = qword_1EFEAB718;
  if (!qword_1EFEAB718)
  {
    result = MEMORY[0x1D82634E0](&unk_1D49329BC, &type metadata for TextLookupFlowError);
    atomic_store(result, (unint64_t *)&qword_1EFEAB718);
  }
  return result;
}

uint64_t sub_1D479CED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D479CF20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA490);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D479CF68()
{
  uint64_t v0;

  sub_1D479CF90(*(id *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocObject();
}

void sub_1D479CF90(id a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

void sub_1D479CF9C(void *a1, void *a2, __int16 a3)
{
  uint64_t v3;

  sub_1D479C7A0(a1, a2, a3 & 0x1FF, v3);
}

uint64_t sub_1D479CFB0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D479CFD4(uint64_t a1)
{
  uint64_t v1;

  return sub_1D47B2580(a1, *(uint64_t (**)(_QWORD, _QWORD))(v1 + 16));
}

uint64_t sub_1D479CFDC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D479D008(uint64_t *a1)
{
  uint64_t v1;

  return sub_1D47B4818(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t *))(v1 + 24));
}

uint64_t sub_1D479D014(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1D47B25B0(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

uint64_t sub_1D479D020()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D479D044(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TextLookupQuery(a2, a1);
  return a2;
}

uint64_t sub_1D479D080()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 64))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 120))
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  if (*(_QWORD *)(v0 + 136) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

void sub_1D479D130()
{
  uint64_t v0;

  sub_1D479BCEC(*(void (**)(void *, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v0 + 40, *(void **)(v0 + 208));
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_1D479D15C()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104))
    __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  if (*(_QWORD *)(v0 + 120) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_release();
  return swift_deallocObject();
}

void sub_1D479D20C(char a1)
{
  uint64_t v1;

  sub_1D479BF34(a1, *(_QWORD *)(v1 + 16), (_QWORD *)(v1 + 24), *(char **)(v1 + 192), *(void (**)(void *, uint64_t))(v1 + 200), *(_QWORD *)(v1 + 208));
}

_QWORD *sub_1D479D220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[5];
  uint64_t v45;

  v0 = type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig();
  v1 = MEMORY[0x1E0C80A78](v0);
  v45 = (uint64_t)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v43 = (uint64_t)&v41 - v3;
  v4 = sub_1D4921DF4();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D4922934();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v7);
  v9 = sub_1D4922484();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1D492294C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4793D88();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF8D8], v10);
  sub_1D4922478();
  v44[0] = MEMORY[0x1E0DEE9D8];
  sub_1D4696EA4(&qword_1ED98F348, v8, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98F330);
  sub_1D479D804((unint64_t *)&qword_1ED98F338, &qword_1ED98F330);
  sub_1D4922AFC();
  v14 = (void *)sub_1D4922970();
  sub_1D4921E60();
  swift_allocObject();
  v15 = sub_1D4921E54();
  v16 = v14;
  sub_1D4921E18();
  v17 = sub_1D4921E00();
  swift_release();
  swift_retain();
  sub_1D4921E18();
  swift_release();
  sub_1D4921E0C();
  swift_release();
  type metadata accessor for PegasusProxyEnableListener();
  swift_allocObject();
  v42 = sub_1D47E4388(v16, v17, (uint64_t)v6, 5.0);
  LOBYTE(v17) = sub_1D473117C();
  type metadata accessor for TrialWrapper();
  swift_initStackObject();
  sub_1D48BEC44((v17 & 1) == 0);
  v18 = sub_1D48BEE58(12, 0, 25200, 0xE200000000000000);
  v19 = v43;
  sub_1D46D0670(v18, v20, v43);
  swift_release();
  swift_bridgeObjectRelease();
  v21 = type metadata accessor for TextLookupServerFlow();
  v22 = swift_allocObject();
  v23 = v22 + OBJC_IVAR____TtC18VisualIntelligence20TextLookupServerFlow_timeoutSeconds;
  *(_QWORD *)(v22 + OBJC_IVAR____TtC18VisualIntelligence20TextLookupServerFlow_timeoutSeconds) = 10;
  v24 = *MEMORY[0x1E0DEF4A0];
  v25 = sub_1D4922460();
  v26 = v24;
  v27 = v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v23, v26, v25);
  v28 = OBJC_IVAR____TtC18VisualIntelligence20TextLookupServerFlow_searchFetches;
  v29 = v16;
  swift_retain();
  v30 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + v28) = sub_1D47C560C(MEMORY[0x1E0DEE9D8]);
  v31 = OBJC_IVAR____TtC18VisualIntelligence20TextLookupServerFlow_completions;
  *(_QWORD *)(v22 + v31) = sub_1D47C58C0(v30);
  *(_QWORD *)(v22 + 16) = v15;
  *(_QWORD *)(v22 + 24) = v29;
  v44[3] = v21;
  v44[4] = &off_1E98025A8;
  v44[0] = v22;
  v32 = v45;
  sub_1D46D1BD8(v27, v45);
  type metadata accessor for TextLookupFlow();
  v33 = (_QWORD *)swift_allocObject();
  type metadata accessor for VISceneTaxonomy();
  swift_allocObject();
  swift_retain();
  v34 = sub_1D47C1638();
  if (v34)
  {
    v35 = v34;
    v33[10] = v29;
    v33[4] = v42;
    sub_1D46AAF28((uint64_t)v44, (uint64_t)(v33 + 5));
    v33[3] = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB728);
    v36 = swift_allocObject();
    *(_QWORD *)(v36 + 24) = 0;
    *(_BYTE *)(v36 + 32) = -1;
    *(_QWORD *)(v36 + 56) = 0;
    *(_QWORD *)(v36 + 64) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB70);
    v37 = swift_allocObject();
    *(_DWORD *)(v37 + 16) = 0;
    *(_QWORD *)(v36 + 80) = v37;
    *(_QWORD *)(v36 + 40) = sub_1D479D844;
    *(_QWORD *)(v36 + 48) = v35;
    swift_retain_n();
    swift_retain();
    sub_1D46A56B4(0);
    *(_QWORD *)(v36 + 72) = 0;
    swift_release();
    v38 = sub_1D4835CD8();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
    v33[2] = v38;
    sub_1D46D1CA0(v32, (uint64_t)v33 + OBJC_IVAR____TtC18VisualIntelligence14TextLookupFlow_config);
  }
  else
  {
    sub_1D479CE94();
    swift_allocError();
    *v39 = 4;
    swift_willThrow();
    swift_release();

    sub_1D4697DE0(v32, (uint64_t (*)(_QWORD))type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
    swift_deallocPartialClassInstance();
  }
  sub_1D4697DE0(v27, (uint64_t (*)(_QWORD))type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig);
  swift_release();
  swift_release();
  return v33;
}

uint64_t sub_1D479D804(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0DEAF38], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D479D844@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1D479B8F8(v1, a1);
}

_QWORD *sub_1D479D860(_DWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_DWORD *)a2;
    v7 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0) + 20);
    v8 = (char *)v4 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1D492201C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = *(int *)(a3 + 24);
    *((_BYTE *)v4 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
  }
  return v4;
}

uint64_t sub_1D479D924(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0) + 20);
  v2 = sub_1D492201C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

_DWORD *sub_1D479D968(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  *a1 = *a2;
  v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0) + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D492201C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v12[8];
  return a1;
}

_DWORD *sub_1D479DA00(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char v13;

  *a1 = *a2;
  v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0) + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D492201C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = v12[8];
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v13;
  return a1;
}

_DWORD *sub_1D479DA9C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  *a1 = *a2;
  v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0) + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D492201C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v12[8];
  return a1;
}

_DWORD *sub_1D479DB34(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  *a1 = *a2;
  v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0) + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D492201C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v12[8];
  return a1;
}

uint64_t sub_1D479DBCC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D479DBD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0x1A)
    return v9 - 25;
  else
    return 0;
}

uint64_t sub_1D479DC50()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D479DC5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 25;
  return result;
}

uint64_t type metadata accessor for StorefrontDomainAssignmentRule()
{
  uint64_t result;

  result = qword_1ED98DD20;
  if (!qword_1ED98DD20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D479DD10()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D479DD8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  float *v4;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  float v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  double v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  uint64_t v36;
  CGFloat MinX;
  uint64_t v38;
  unint64_t v39;
  CGFloat MinY;
  CGFloat Width;
  CGFloat Height;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void (*v47)(char *, uint64_t);
  NSObject *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[20];
  uint64_t v60[21];
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;

  v56 = a4;
  v8 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1E0C80A78](v8);
  v10 = (double *)((char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v57 = sub_1D4922370();
  v55 = *(_QWORD *)(v57 - 8);
  v11 = MEMORY[0x1E0C80A78](v57);
  v13 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)v53 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v53 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CD70);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D46A4760(a1, (uint64_t)v60);
  v22 = *v4;
  v23 = type metadata accessor for DomainAssignmentSignals(0);
  sub_1D479E2E8(a3 + *(int *)(v23 + 24), (uint64_t)v21);
  v24 = type metadata accessor for DomainAssignmentSignals.ImageMetadata(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v21, 1, v24) == 1)
  {
    sub_1D479E330((uint64_t)v21);
LABEL_7:
    sub_1D470C76C((uint64_t)v13);
    sub_1D46A8550(a2, (uint64_t)v10);
    v28 = sub_1D4922358();
    v29 = sub_1D4922910();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v54 = v31;
      *(_DWORD *)v30 = 136315138;
      v59[0] = v31;
      v53[1] = v30 + 4;
      v32 = *v10;
      v33 = v10[1];
      v34 = v10[2];
      v35 = v10[3];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
      v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_1D4927560;
      v61.origin.x = v32;
      v61.origin.y = v33;
      v61.size.width = v34;
      v61.size.height = v35;
      MinX = CGRectGetMinX(v61);
      v38 = MEMORY[0x1E0DEF040];
      *(_QWORD *)(v36 + 56) = MEMORY[0x1E0DEF040];
      v39 = sub_1D46A492C();
      *(_QWORD *)(v36 + 64) = v39;
      *(CGFloat *)(v36 + 32) = MinX;
      v62.origin.x = v32;
      v62.origin.y = v33;
      v62.size.width = v34;
      v62.size.height = v35;
      MinY = CGRectGetMinY(v62);
      *(_QWORD *)(v36 + 96) = v38;
      *(_QWORD *)(v36 + 104) = v39;
      *(CGFloat *)(v36 + 72) = MinY;
      v63.origin.x = v32;
      v63.origin.y = v33;
      v63.size.width = v34;
      v63.size.height = v35;
      Width = CGRectGetWidth(v63);
      *(_QWORD *)(v36 + 136) = v38;
      *(_QWORD *)(v36 + 144) = v39;
      *(CGFloat *)(v36 + 112) = Width;
      v64.origin.x = v32;
      v64.origin.y = v33;
      v64.size.width = v34;
      v64.size.height = v35;
      Height = CGRectGetHeight(v64);
      *(_QWORD *)(v36 + 176) = v38;
      *(_QWORD *)(v36 + 184) = v39;
      *(CGFloat *)(v36 + 152) = Height;
      v43 = sub_1D4922640();
      v58 = sub_1D47F0250(v43, v44, v59);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      sub_1D4697DE0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      _os_log_impl(&dword_1D467C000, v28, v29, "Reject any domain to region %s", v30, 0xCu);
      v45 = v54;
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v45, -1, -1);
      MEMORY[0x1D82635B8](v30, -1, -1);
    }
    else
    {
      sub_1D4697DE0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    }

    (*(void (**)(char *, uint64_t))(v55 + 8))(v13, v57);
    sub_1D46C6BD0((uint64_t)v59);
    return (uint64_t *)sub_1D46A4760((uint64_t)v59, v56);
  }
  v25 = *(void **)&v21[*(int *)(v24 + 24)];
  v26 = v25;
  sub_1D4697DE0((uint64_t)v21, type metadata accessor for DomainAssignmentSignals.ImageMetadata);
  if (!v25)
    goto LABEL_7;
  objc_msgSend(v26, sel_horizontalAccuracy);
  if (v22 >= 0.0 && v27 >= v22)
  {

    goto LABEL_7;
  }
  sub_1D470C76C((uint64_t)v18);
  sub_1D470C928((uint64_t)v16);
  v47 = *(void (**)(char *, uint64_t))(v55 + 8);
  v47(v18, v57);
  v48 = v26;
  v49 = sub_1D4922358();
  v50 = sub_1D4922910();
  if (os_log_type_enabled(v49, v50))
  {
    v51 = swift_slowAlloc();
    *(_DWORD *)v51 = 134218240;
    -[NSObject horizontalAccuracy](v48, sel_horizontalAccuracy);
    v59[0] = v52;
    sub_1D4922A78();

    *(_WORD *)(v51 + 12) = 2048;
    *(double *)v59 = v22;
    sub_1D4922A78();
    _os_log_impl(&dword_1D467C000, v49, v50, "Location horizontalAccuracy %f within the errorThreshold %f", (uint8_t *)v51, 0x16u);
    MEMORY[0x1D82635B8](v51, -1, -1);
  }
  else
  {

    v49 = v48;
  }

  v47(v16, v57);
  sub_1D46A4760((uint64_t)v60, v56);
  return sub_1D470F8E4(v60);
}

uint64_t sub_1D479E2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CD70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D479E330(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CD70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D479E370(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  _QWORD v16[2];
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v19 = a2;
  v17 = 0;
  v18 = 0xE000000000000000;
  if ((a4 & 0x2000000000000000) != 0)
    v6 = HIBYTE(a4) & 0xF;
  else
    v6 = a3 & 0xFFFFFFFFFFFFLL;
  if (v6)
  {
    v9 = 0;
    v15 = a4 & 0xFFFFFFFFFFFFFFLL;
    do
    {
      if ((a4 & 0x1000000000000000) != 0)
      {
        v10 = sub_1D4922B74();
      }
      else
      {
        if ((a4 & 0x2000000000000000) != 0)
        {
          v16[0] = a3;
          v16[1] = v15;
        }
        else if ((a3 & 0x1000000000000000) == 0)
        {
          sub_1D4922BC8();
        }
        v10 = sub_1D4922BD4();
      }
      v12 = v11;
      LODWORD(v16[0]) = v10;
      v13 = a1(v16);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if ((v13 & 1) != 0)
        sub_1D49226B8();
      v9 += v12;
    }
    while (v9 < v6);
    swift_bridgeObjectRelease();
    return v17;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1D479E4C4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1D46D74D0(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1D479E560(v5);
  *a1 = v2;
  return result;
}

void sub_1D479E52C()
{
  qword_1EFEAB730 = (uint64_t)&unk_1E97FCE78;
}

uint64_t type metadata accessor for OCRTextRerankingUtil()
{
  return objc_opt_self();
}

uint64_t sub_1D479E560(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  double v25;
  uint64_t v26;
  double *v27;
  double v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t i;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  unint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  double *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_1D4922E08();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v80 = 0;
      v81 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v83 = *(double *)(v81 + 8 * i);
        v84 = v80;
        do
        {
          v85 = v81 + 8 * v84;
          if (*(double *)v85 >= v83)
            break;
          if (!v81)
            goto LABEL_140;
          *(_QWORD *)(v85 + 8) = *(_QWORD *)v85;
          *(double *)(v81 + 8 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v97 = result;
  v98 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (double *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_102:
      v96 = v8;
      if (v12 >= 2)
      {
        v86 = *v2;
        do
        {
          v87 = v12 - 2;
          if (v12 < 2)
            goto LABEL_131;
          if (!v86)
            goto LABEL_144;
          v88 = v11;
          v89 = v11 + 32;
          v90 = *(_QWORD *)&v11[16 * v87 + 32];
          v91 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_1D479EBF0((double *)(v86 + 8 * v90), (double *)(v86 + 8 * *(_QWORD *)&v89[16 * v12 - 16]), v86 + 8 * v91, __dst);
          if (v1)
            break;
          if (v91 < v90)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v88 = sub_1D46D5B88((uint64_t)v88);
          if (v87 >= *((_QWORD *)v88 + 2))
            goto LABEL_133;
          v92 = &v88[16 * v87 + 32];
          *(_QWORD *)v92 = v90;
          *((_QWORD *)v92 + 1) = v91;
          v93 = *((_QWORD *)v88 + 2);
          if (v12 > v93)
            goto LABEL_134;
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
          v11 = v88;
          *((_QWORD *)v88 + 2) = v93 - 1;
          v12 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v96 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1D4922850();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v98;
    v96 = v7;
    __dst = (double *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v94 = v2;
  v95 = *v2 - 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v99 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(double *)(v10 + 8 * v9);
      v15 = *(double *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = v16;
          v16 = *(double *)(v10 + 8 * v9);
          if (v15 < v14 == v17 >= v16)
            break;
          if (v3 == ++v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v15 < v14)
      {
        if (v9 < v13)
          goto LABEL_137;
        if (v13 < v9)
        {
          v18 = (uint64_t *)(v95 + 8 * v9);
          v19 = v9;
          v20 = v13;
          v21 = (uint64_t *)(v10 + 8 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10)
                goto LABEL_143;
              v22 = *v21;
              *v21 = *v18;
              *v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v9, v13))
      goto LABEL_135;
    if (v9 - v13 >= v97)
      goto LABEL_46;
    v23 = v13 + v97;
    if (__OFADD__(v13, v97))
      goto LABEL_138;
    if (v23 >= v3)
      v23 = v3;
    if (v23 < v13)
      break;
    if (v9 != v23)
    {
      v24 = (double *)(v95 + 8 * v9);
      do
      {
        v25 = *(double *)(v10 + 8 * v9);
        v26 = v13;
        v27 = v24;
        do
        {
          v28 = *v27;
          if (*v27 >= v25)
            break;
          if (!v10)
            goto LABEL_141;
          *v27 = v25;
          v27[1] = v28;
          --v27;
          ++v26;
        }
        while (v9 != v26);
        ++v9;
        ++v24;
      }
      while (v9 != v23);
      v9 = v23;
    }
LABEL_46:
    if (v9 < v13)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1D46D5278(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v30 = *((_QWORD *)v11 + 2);
    v29 = *((_QWORD *)v11 + 3);
    v12 = v30 + 1;
    v10 = v99;
    if (v30 >= v29 >> 1)
    {
      v79 = sub_1D46D5278((char *)(v29 > 1), v30 + 1, 1, v11);
      v10 = v99;
      v11 = v79;
    }
    *((_QWORD *)v11 + 2) = v12;
    v31 = v11 + 32;
    v32 = &v11[16 * v30 + 32];
    *(_QWORD *)v32 = v13;
    *((_QWORD *)v32 + 1) = v9;
    if (v30)
    {
      while (1)
      {
        v33 = v12 - 1;
        if (v12 >= 4)
        {
          v38 = &v31[16 * v12];
          v39 = *((_QWORD *)v38 - 8);
          v40 = *((_QWORD *)v38 - 7);
          v44 = __OFSUB__(v40, v39);
          v41 = v40 - v39;
          if (v44)
            goto LABEL_119;
          v43 = *((_QWORD *)v38 - 6);
          v42 = *((_QWORD *)v38 - 5);
          v44 = __OFSUB__(v42, v43);
          v36 = v42 - v43;
          v37 = v44;
          if (v44)
            goto LABEL_120;
          v45 = v12 - 2;
          v46 = &v31[16 * v12 - 32];
          v48 = *(_QWORD *)v46;
          v47 = *((_QWORD *)v46 + 1);
          v44 = __OFSUB__(v47, v48);
          v49 = v47 - v48;
          if (v44)
            goto LABEL_122;
          v44 = __OFADD__(v36, v49);
          v50 = v36 + v49;
          if (v44)
            goto LABEL_125;
          if (v50 >= v41)
          {
            v68 = &v31[16 * v33];
            v70 = *(_QWORD *)v68;
            v69 = *((_QWORD *)v68 + 1);
            v44 = __OFSUB__(v69, v70);
            v71 = v69 - v70;
            if (v44)
              goto LABEL_129;
            v61 = v36 < v71;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v62 = *((_QWORD *)v11 + 4);
            v63 = *((_QWORD *)v11 + 5);
            v44 = __OFSUB__(v63, v62);
            v55 = v63 - v62;
            v56 = v44;
            goto LABEL_77;
          }
          v35 = *((_QWORD *)v11 + 4);
          v34 = *((_QWORD *)v11 + 5);
          v44 = __OFSUB__(v34, v35);
          v36 = v34 - v35;
          v37 = v44;
        }
        if ((v37 & 1) != 0)
          goto LABEL_121;
        v45 = v12 - 2;
        v51 = &v31[16 * v12 - 32];
        v53 = *(_QWORD *)v51;
        v52 = *((_QWORD *)v51 + 1);
        v54 = __OFSUB__(v52, v53);
        v55 = v52 - v53;
        v56 = v54;
        if (v54)
          goto LABEL_124;
        v57 = &v31[16 * v33];
        v59 = *(_QWORD *)v57;
        v58 = *((_QWORD *)v57 + 1);
        v44 = __OFSUB__(v58, v59);
        v60 = v58 - v59;
        if (v44)
          goto LABEL_127;
        if (__OFADD__(v55, v60))
          goto LABEL_128;
        if (v55 + v60 >= v36)
        {
          v61 = v36 < v60;
LABEL_83:
          if (v61)
            v33 = v45;
          goto LABEL_85;
        }
LABEL_77:
        if ((v56 & 1) != 0)
          goto LABEL_123;
        v64 = &v31[16 * v33];
        v66 = *(_QWORD *)v64;
        v65 = *((_QWORD *)v64 + 1);
        v44 = __OFSUB__(v65, v66);
        v67 = v65 - v66;
        if (v44)
          goto LABEL_126;
        if (v67 < v55)
          goto LABEL_15;
LABEL_85:
        v72 = v33 - 1;
        if (v33 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10)
          goto LABEL_142;
        v73 = &v31[16 * v72];
        v74 = *(_QWORD *)v73;
        v75 = v31;
        v76 = &v31[16 * v33];
        v77 = *((_QWORD *)v76 + 1);
        sub_1D479EBF0((double *)(v10 + 8 * *(_QWORD *)v73), (double *)(v10 + 8 * *(_QWORD *)v76), v10 + 8 * v77, __dst);
        if (v1)
          goto LABEL_113;
        if (v77 < v74)
          goto LABEL_116;
        if (v33 > *((_QWORD *)v11 + 2))
          goto LABEL_117;
        *(_QWORD *)v73 = v74;
        *(_QWORD *)&v75[16 * v72 + 8] = v77;
        v78 = *((_QWORD *)v11 + 2);
        if (v33 >= v78)
          goto LABEL_118;
        v12 = v78 - 1;
        memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
        v31 = v75;
        *((_QWORD *)v11 + 2) = v78 - 1;
        v10 = v99;
        if (v78 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v98;
    if (v9 >= v98)
    {
      v8 = v96;
      v2 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_1D4922C28();
  __break(1u);
  return result;
}

uint64_t sub_1D479EBF0(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  double *v18;
  double *v19;
  double v20;
  uint64_t result;
  double *v22;
  double *v23;
  double *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (double *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 1;
          v19 = v6 - 1;
          v20 = *(v6 - 1);
          if (v20 >= *(v16 - 1))
          {
            v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *v17 = *(v16 - 1);
            --v16;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *v17 = v20;
            v24 = --v6;
            if (v19 <= v7)
              goto LABEL_42;
          }
          --v17;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*v4 >= *v6)
        {
          if (v7 != v4)
            *v7 = *v4;
          v23 = ++v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *v7 = *v6;
        }
        ++v7;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_1D46D57EC((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_1D4922C88();
  __break(1u);
  return result;
}

double sub_1D479EE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  double v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0.0;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = swift_bridgeObjectRetain() + 40;
  do
  {
    v5 = sub_1D492267C();
    if (*(_QWORD *)(v3 + 16) && (v7 = sub_1D47CA4DC(v5, v6), (v8 & 1) != 0))
    {
      v9 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v7);
      swift_bridgeObjectRelease();
      if ((v9 & 0x8000000000000000) == 0)
      {
        v10 = 1.0;
        goto LABEL_10;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v4 += 16;
    --v2;
  }
  while (v2);
  v10 = 0.0;
LABEL_10:
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1D479EF10(uint64_t a1, unint64_t a2, CGFloat *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  BOOL v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  CGFloat v32;
  double Width;
  double Height;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  double v42;
  double v43;
  CGFloat v44;
  CGFloat v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  double v64;
  double v65;
  _BOOL4 v66;
  _BOOL4 v67;
  double v68;
  double v69;
  double v70;
  CGFloat v71;
  uint64_t inited;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  CGFloat v77;
  CGFloat v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  double v88;
  unint64_t v89;
  double v90;
  unint64_t v91;
  unint64_t v92;
  _QWORD *v93;
  unint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  __int128 v107;
  double v108;
  double v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  CGFloat v116;
  CGFloat v117;
  double v118;
  CGFloat v119;
  uint64_t v120;
  CGFloat v121;
  CGFloat v122;
  double v123;
  double v124;
  double v125;
  double v126;
  double v127;
  CGFloat v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(char *, uint64_t);
  CGFloat v137;
  uint64_t v138;
  char *v139;
  _QWORD v140[64];
  uint64_t v141;
  CGRect v142;
  CGRect v143;
  CGRect v144;
  CGRect v145;
  CGRect v146;
  CGRect v147;
  CGRect v148;
  CGRect v149;
  CGRect v150;
  CGRect v151;

  v115 = a6;
  v133 = a5;
  v134 = a4;
  v138 = sub_1D4920D8C();
  v9 = *(_QWORD *)(v138 - 8);
  v10 = MEMORY[0x1E0C80A78](v138);
  v139 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v97 - v12;
  v137 = *a3;
  v119 = a3[1];
  v14 = a3[2];
  v116 = a3[3];
  v117 = v14;
  sub_1D4920D68();
  v140[2] = v13;
  swift_bridgeObjectRetain();
  v15 = 0;
  sub_1D479E370((uint64_t (*)(_QWORD *))sub_1D47A25B4, (uint64_t)v140, a1, a2);
  v16 = sub_1D492267C();
  v18 = v17;
  v19 = sub_1D49226DC();
  if (v19)
  {
    v20 = v19;
    v21 = sub_1D47D44F8(v19, 0);
    swift_bridgeObjectRetain();
    v22 = sub_1D47D4440(&v141, v21 + 4, v20, v16, v18);
    swift_bridgeObjectRelease();
    if (v22 != (_QWORD *)v20)
      goto LABEL_56;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v136 = *(void (**)(char *, uint64_t))(v9 + 8);
  v136(v13, v138);
  v23 = v21[2];
  if (!v23)
    goto LABEL_52;
  v24 = 0;
  v131 = swift_bridgeObjectRetain();
  v25 = v131 + 40;
  v26 = v23;
  while (1)
  {
    swift_bridgeObjectRetain();
    v27 = sub_1D49225BC();
    swift_bridgeObjectRelease();
    if ((v27 & 1) != 0)
    {
      v28 = __OFADD__(v24++, 1);
      if (v28)
        break;
    }
    v25 += 16;
    if (!--v26)
      goto LABEL_12;
  }
  __break(1u);
LABEL_12:
  swift_release();
  v29 = v137;
  v142.origin.x = v137;
  v30 = v119;
  v142.origin.y = v119;
  v32 = v116;
  v31 = v117;
  v142.size.width = v117;
  v142.size.height = v116;
  Width = CGRectGetWidth(v142);
  v143.origin.x = v29;
  v143.origin.y = v30;
  v143.size.width = v31;
  v143.size.height = v32;
  Height = CGRectGetHeight(v143);
  v135 = *(_QWORD *)(v134 + 16);
  if (v135 >= v133)
    v35 = v133;
  else
    v35 = v135;
  if (v35 < 0)
    goto LABEL_57;
  if (!v35)
  {
LABEL_52:
    swift_release();
    return;
  }
  v36 = 0;
  v134 += 32;
  v113 = 0x80000001D4944740;
  v114 = 0x80000001D4944720;
  v37 = (double)v24 / (double)v23;
  v111 = 0x80000001D4944760;
  v112 = 0x80000001D493EB10;
  v110 = 0x80000001D4944780;
  v108 = v119 + Height * 0.5;
  v109 = v137 + Width * 0.5;
  v38 = 0.5;
  v107 = xmmword_1D4932A60;
  v105 = 0x80000001D493EB50;
  v106 = 0x80000001D493EB30;
  v103 = 0x80000001D493EB90;
  v104 = 0x80000001D493EB70;
  v101 = 0x80000001D493EBD0;
  v102 = 0x80000001D493EBB0;
  v99 = 0x80000001D493EC10;
  v100 = 0x80000001D493EBF0;
  v97 = 0x80000001D493EC50;
  v98 = 0x80000001D493EC30;
  v132 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v133 = v35;
  v118 = v37;
  while (v36 != v35)
  {
    if (v36 == v135)
      goto LABEL_54;
    v39 = v134 + 56 * v36;
    v40 = *(_QWORD *)v39;
    v41 = *(_QWORD *)(v39 + 8);
    v42 = *(double *)(v39 + 24);
    v43 = *(double *)(v39 + 32);
    v44 = *(double *)(v39 + 40);
    v45 = *(double *)(v39 + 48);
    swift_bridgeObjectRetain_n();
    v46 = v139;
    v47 = sub_1D4920D68();
    MEMORY[0x1E0C80A78](v47);
    *(&v97 - 2) = (unint64_t)v46;
    swift_bridgeObjectRetain();
    sub_1D479E370((uint64_t (*)(_QWORD *))sub_1D47A25D0, (uint64_t)(&v97 - 4), v40, v41);
    v48 = sub_1D492267C();
    v50 = v49;
    v51 = sub_1D49226DC();
    if (v51)
    {
      v52 = v51;
      v53 = sub_1D47D44F8(v51, 0);
      swift_bridgeObjectRetain();
      v54 = sub_1D47D4440(&v141, v53 + 4, v52, v48, v50);
      swift_bridgeObjectRelease();
      if (v54 != (_QWORD *)v52)
        goto LABEL_55;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v53 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v136(v139, v138);
    swift_bridgeObjectRelease();
    v55 = v53[2];
    if (v55)
    {
      swift_retain();
      v56 = 0;
      v57 = v53 + 5;
      do
      {
        swift_bridgeObjectRetain();
        v58 = sub_1D49225BC();
        swift_bridgeObjectRelease();
        if ((v58 & 1) != 0)
        {
          v28 = __OFADD__(v56++, 1);
          if (v28)
          {
            __break(1u);
            goto LABEL_53;
          }
        }
        v57 += 2;
        --v55;
      }
      while (v55);
      swift_release();
      v59 = (double)v56 / (double)(uint64_t)v53[2];
      if (vabdd_f64(v37, v59) <= v38)
      {
        v120 = v15;
        v60 = sub_1D46CF49C((uint64_t)v53, v131, v115);
        v62 = v61;
        v144.origin.x = v42;
        v144.origin.y = v43;
        v144.size.width = v44;
        v144.size.height = v45;
        v63 = v42 + CGRectGetWidth(v144) * v38;
        v145.origin.x = v42;
        v145.origin.y = v43;
        v145.size.width = v44;
        v145.size.height = v45;
        v64 = v43 + CGRectGetHeight(v145) * v38;
        v146.origin.x = v42;
        v146.origin.y = v43;
        v146.size.width = v44;
        v146.size.height = v45;
        v128 = CGRectGetWidth(v146);
        v147.origin.x = v42;
        v147.origin.y = v43;
        v121 = v44;
        v147.size.width = v44;
        v147.size.height = v45;
        v65 = CGRectGetHeight(v147);
        v129 = v60;
        v130 = v62;
        if (v137 <= v63)
        {
          v68 = v65;
          v148.origin.x = v137;
          v148.origin.y = v119;
          v148.size.height = v116;
          v148.size.width = v117;
          v66 = v63 <= v137 + CGRectGetWidth(v148);
          if (v137 <= v64)
          {
            v65 = v68;
            goto LABEL_40;
          }
          v67 = 0;
          v65 = v68;
        }
        else
        {
          v66 = 0;
          v67 = 0;
          if (v137 > v64)
            goto LABEL_41;
LABEL_40:
          v149.origin.x = v137;
          v69 = v119;
          v70 = v65;
          v149.origin.y = v119;
          v149.size.height = v116;
          v149.size.width = v117;
          v71 = CGRectGetHeight(v149);
          v65 = v70;
          v37 = v118;
          v67 = v64 <= v69 + v71;
        }
LABEL_41:
        v122 = v128 * v65;
        v123 = sqrt((v63 + -0.5) * (v63 + -0.5) + (v64 + -0.5) * (v64 + -0.5));
        v124 = fabs(v63 + -0.5);
        v125 = vabdd_f64(v63, v109);
        v128 = vabdd_f64(v64, v108);
        v126 = fabs(v64 + -0.5);
        v127 = sqrt((v63 - v109) * (v63 - v109) + (v64 - v108) * (v64 - v108));
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB738);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v107;
        v73 = v114;
        *(_QWORD *)(inited + 32) = 0xD000000000000012;
        *(_QWORD *)(inited + 40) = v73;
        *(double *)(inited + 48) = (double)*(uint64_t *)(v131 + 16);
        v74 = v113;
        *(_QWORD *)(inited + 56) = 0xD00000000000001CLL;
        *(_QWORD *)(inited + 64) = v74;
        *(double *)(inited + 72) = v37;
        strcpy((char *)(inited + 80), "pattern_length");
        *(_BYTE *)(inited + 95) = -18;
        v75 = v53[2];
        swift_release();
        *(double *)(inited + 96) = (double)v75;
        v76 = v112;
        *(_QWORD *)(inited + 104) = 0xD000000000000018;
        *(_QWORD *)(inited + 112) = v76;
        *(double *)(inited + 120) = v59;
        strcpy((char *)(inited + 128), "pattern_size_x");
        *(_BYTE *)(inited + 143) = -18;
        v150.origin.x = v42;
        v150.origin.y = v43;
        v77 = v121;
        v150.size.width = v121;
        v150.size.height = v45;
        *(CGFloat *)(inited + 144) = CGRectGetWidth(v150);
        strcpy((char *)(inited + 152), "pattern_size_y");
        *(_BYTE *)(inited + 167) = -18;
        v151.origin.x = v42;
        v151.origin.y = v43;
        v151.size.width = v77;
        v151.size.height = v45;
        v78 = CGRectGetHeight(v151);
        swift_bridgeObjectRelease();
        *(CGFloat *)(inited + 168) = v78;
        strcpy((char *)(inited + 176), "pattern_area");
        *(_BYTE *)(inited + 189) = 0;
        *(_WORD *)(inited + 190) = -5120;
        *(CGFloat *)(inited + 192) = v122;
        v79 = v111;
        *(_QWORD *)(inited + 200) = 0xD000000000000010;
        *(_QWORD *)(inited + 208) = v79;
        *(double *)(inited + 216) = v63;
        v80 = v110;
        *(_QWORD *)(inited + 224) = 0xD000000000000010;
        *(_QWORD *)(inited + 232) = v80;
        *(double *)(inited + 240) = v64;
        v81 = v106;
        *(_QWORD *)(inited + 248) = 0xD000000000000019;
        *(_QWORD *)(inited + 256) = v81;
        *(double *)(inited + 264) = v124;
        v82 = v105;
        *(_QWORD *)(inited + 272) = 0xD000000000000019;
        *(_QWORD *)(inited + 280) = v82;
        *(double *)(inited + 288) = v126;
        v83 = v104;
        *(_QWORD *)(inited + 296) = 0xD000000000000017;
        *(_QWORD *)(inited + 304) = v83;
        *(double *)(inited + 312) = v123;
        v84 = v103;
        *(_QWORD *)(inited + 320) = 0xD000000000000017;
        *(_QWORD *)(inited + 328) = v84;
        *(double *)(inited + 336) = v125;
        v85 = v102;
        *(_QWORD *)(inited + 344) = 0xD000000000000017;
        *(_QWORD *)(inited + 352) = v85;
        *(CGFloat *)(inited + 360) = v128;
        v86 = v101;
        *(_QWORD *)(inited + 368) = 0xD000000000000015;
        *(_QWORD *)(inited + 376) = v86;
        *(double *)(inited + 384) = v127;
        v87 = v100;
        *(_QWORD *)(inited + 392) = 0xD00000000000001CLL;
        *(_QWORD *)(inited + 400) = v87;
        if (v66)
          v88 = 1.0;
        else
          v88 = 0.0;
        *(double *)(inited + 408) = v88;
        v89 = v99;
        *(_QWORD *)(inited + 416) = 0xD00000000000001CLL;
        *(_QWORD *)(inited + 424) = v89;
        if (v67)
          v90 = 1.0;
        else
          v90 = 0.0;
        *(double *)(inited + 432) = v90;
        v91 = v98;
        *(_QWORD *)(inited + 440) = 0xD00000000000001BLL;
        *(_QWORD *)(inited + 448) = v91;
        *(double *)(inited + 456) = (double)v129;
        *(_QWORD *)(inited + 464) = 0xD000000000000019;
        *(_QWORD *)(inited + 472) = v97;
        *(double *)(inited + 480) = (double)v130;
        v92 = sub_1D47C47A8(inited);
        v93 = v132;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v132 = sub_1D48A9BF4(0, v93[2] + 1, 1, v93);
        v35 = v133;
        v15 = v120;
        v38 = 0.5;
        v95 = v132[2];
        v94 = v132[3];
        v37 = v118;
        if (v95 >= v94 >> 1)
          v132 = sub_1D48A9BF4((_QWORD *)(v94 > 1), v95 + 1, 1, v132);
        v96 = v132;
        v132[2] = v95 + 1;
        v96[v95 + 4] = v92;
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    v35 = v133;
LABEL_19:
    if (++v36 == v35)
      goto LABEL_52;
  }
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
}

uint64_t sub_1D479F908(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int32x2_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  double v25;
  uint64_t result;
  uint64_t v27;
  float v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = sub_1D4922370();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v41 - v7;
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11 || (v12 = a2[2]) == 0)
  {
    sub_1D470C76C((uint64_t)&v41 - v7);
    v32 = sub_1D4922358();
    v33 = sub_1D492291C();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_1D467C000, v32, v33, "Input to batchPredictWithLinearModelHelper is empty.", v34, 2u);
      MEMORY[0x1D82635B8](v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    return 0;
  }
  v45 = v8;
  v46 = v5;
  v47 = v4;
  v9.i32[0] = 0;
  v13 = sub_1D48C3578(v12, v9);
  v14 = (_QWORD *)sub_1D48C384C(v13, v11);
  v15 = 0;
  v16 = a1 + 32;
  v17 = a2[4];
  v48 = a2[5];
  v18 = a2 + 7;
  v19 = v12 - 1;
  v42 = a2 + 7;
  v43 = v17;
  while (2)
  {
    v20 = *(_QWORD *)(v16 + 8 * v15);
    if (!*(_QWORD *)(v20 + 16))
    {
LABEL_24:
      swift_bridgeObjectRelease();
      v36 = v46;
      v35 = v47;
      v37 = v45;
      sub_1D470C76C(v45);
      v38 = sub_1D4922358();
      v39 = sub_1D492291C();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v40 = 0;
        _os_log_impl(&dword_1D467C000, v38, v39, "A feature name is not in the features.", v40, 2u);
        MEMORY[0x1D82635B8](v40, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v35);
      return 0;
    }
    swift_bridgeObjectRetain();
    v21 = v48;
    swift_bridgeObjectRetain();
    v22 = sub_1D47CA4DC(v17, v21);
    if ((v23 & 1) == 0)
    {
LABEL_23:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    v24 = 0;
    v44 = v15 + 1;
    while (1)
    {
      v25 = *(double *)(*(_QWORD *)(v20 + 56) + 8 * v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1D47DFAFC(v14);
        v14 = (_QWORD *)result;
      }
      if (v15 >= v14[2])
      {
        __break(1u);
LABEL_30:
        __break(1u);
        return result;
      }
      v27 = v14[v15 + 4];
      result = swift_isUniquelyReferenced_nonNull_native();
      v14[v15 + 4] = v27;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1D47DFAC0(v27);
        v27 = result;
        v14[v15 + 4] = result;
      }
      if (v24 >= *(_QWORD *)(v27 + 16))
        goto LABEL_30;
      v28 = v25;
      *(float *)(v27 + 4 * v24 + 32) = v28;
      if (v19 == v24)
        break;
      v20 = *(_QWORD *)(v16 + 8 * v15);
      if (!*(_QWORD *)(v20 + 16))
        goto LABEL_24;
      v30 = *(v18 - 1);
      v29 = *v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22 = sub_1D47CA4DC(v30, v29);
      ++v24;
      v18 += 2;
      if ((v31 & 1) == 0)
        goto LABEL_23;
    }
    v17 = v43;
    v15 = v44;
    v18 = v42;
    if (v44 != v11)
      continue;
    return (uint64_t)v14;
  }
}

unint64_t sub_1D479FC58(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  unint64_t v50;
  uint64_t v51;
  _BOOL8 v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  char v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t result;
  _QWORD v61[3];
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;

  v62 = a6;
  v65 = a1;
  v10 = sub_1D4922370();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D47C47A8(MEMORY[0x1E0DEE9D8]);
  if (a5 < 0)
    goto LABEL_50;
  v15 = (_QWORD *)v14;
  v63 = (_QWORD *)a4;
  v64 = a3;
  v61[0] = v13;
  v61[1] = v11;
  v61[2] = v10;
  if (a5)
  {
    v16 = 0;
    do
    {
      v68 = (_QWORD *)v65;
      v69 = a2;
      swift_bridgeObjectRetain();
      sub_1D492270C();
      v67 = v16;
      sub_1D4922E14();
      sub_1D492270C();
      swift_bridgeObjectRelease();
      v17 = (uint64_t)v68;
      v18 = v69;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v68 = v15;
      v21 = sub_1D47CA4DC(v17, v18);
      v22 = v15[2];
      v23 = (v20 & 1) == 0;
      v24 = v22 + v23;
      if (__OFADD__(v22, v23))
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      v25 = v20;
      if (v15[3] >= v24)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v15 = v68;
          if ((v20 & 1) != 0)
            goto LABEL_4;
        }
        else
        {
          sub_1D47AE2C0();
          v15 = v68;
          if ((v25 & 1) != 0)
            goto LABEL_4;
        }
      }
      else
      {
        sub_1D47A5174(v24, isUniquelyReferenced_nonNull_native);
        v26 = sub_1D47CA4DC(v17, v18);
        if ((v25 & 1) != (v27 & 1))
          goto LABEL_53;
        v21 = v26;
        v15 = v68;
        if ((v25 & 1) != 0)
        {
LABEL_4:
          *(_QWORD *)(v15[7] + 8 * v21) = 0;
          goto LABEL_5;
        }
      }
      v15[(v21 >> 6) + 8] |= 1 << v21;
      v28 = (uint64_t *)(v15[6] + 16 * v21);
      *v28 = v17;
      v28[1] = v18;
      *(_QWORD *)(v15[7] + 8 * v21) = 0;
      v29 = v15[2];
      v30 = __OFADD__(v29, 1);
      v31 = v29 + 1;
      if (v30)
        goto LABEL_47;
      v15[2] = v31;
      swift_bridgeObjectRetain();
LABEL_5:
      ++v16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    while (a5 != v16);
  }
  v32 = sub_1D479F908((uint64_t)v63, v64);
  if (!v32)
  {
    swift_bridgeObjectRelease();
    return sub_1D47C47A8(MEMORY[0x1E0DEE9D8]);
  }
  v33 = v32;
  v67 = MEMORY[0x1E0DEE9D8];
  v34 = *(_QWORD *)(v32 + 16);
  if (v34)
  {
    v35 = 0;
    v36 = *(_QWORD *)(v62 + 24);
    do
    {
      v37 = *(_QWORD *)(v33 + 8 * v35 + 32);
      swift_bridgeObjectRetain();
      sub_1D47A09D4(v36, v37, (void (*)(_QWORD))type metadata accessor for OCRTitleModelInput, (void (*)(_QWORD))type metadata accessor for OCRTitleModelOutput);
      v39 = v38;
      ++v35;
      swift_bridgeObjectRelease();
      sub_1D4895F4C(v39);
    }
    while (v34 != v35);
    swift_bridgeObjectRelease();
    v40 = v67;
  }
  else
  {
    swift_bridgeObjectRelease();
    v40 = MEMORY[0x1E0DEE9D8];
  }
  v68 = (_QWORD *)v40;
  swift_bridgeObjectRetain_n();
  sub_1D479E4C4((uint64_t *)&v68);
  swift_bridgeObjectRelease_n();
  v67 = (uint64_t)v68;
  v41 = v68[2];
  if (v41 >= a5)
    v42 = a5;
  else
    v42 = v68[2];
  v63 = v68;
  if (!v42)
  {
LABEL_44:
    swift_release();
    return (unint64_t)v15;
  }
  if (!v41)
    goto LABEL_51;
  v43 = v42;
  if (v42 - 1 < v41)
  {
    v44 = 0;
    v64 = v68 + 4;
    while (1)
    {
      v68 = (_QWORD *)v65;
      v69 = a2;
      swift_bridgeObjectRetain();
      sub_1D492270C();
      v66 = v44;
      sub_1D4922E14();
      sub_1D492270C();
      swift_bridgeObjectRelease();
      v46 = (uint64_t)v68;
      v45 = v69;
      v47 = v64[v44];
      v48 = swift_isUniquelyReferenced_nonNull_native();
      v68 = v15;
      v50 = sub_1D47CA4DC(v46, v45);
      v51 = v15[2];
      v52 = (v49 & 1) == 0;
      v53 = v51 + v52;
      if (__OFADD__(v51, v52))
        goto LABEL_48;
      v54 = v49;
      if (v15[3] >= v53)
      {
        if ((v48 & 1) != 0)
        {
          v15 = v68;
          if ((v49 & 1) != 0)
            goto LABEL_31;
        }
        else
        {
          sub_1D47AE2C0();
          v15 = v68;
          if ((v54 & 1) != 0)
            goto LABEL_31;
        }
      }
      else
      {
        sub_1D47A5174(v53, v48);
        v55 = sub_1D47CA4DC(v46, v45);
        if ((v54 & 1) != (v56 & 1))
          goto LABEL_53;
        v50 = v55;
        v15 = v68;
        if ((v54 & 1) != 0)
        {
LABEL_31:
          *(_QWORD *)(v15[7] + 8 * v50) = v47;
          goto LABEL_32;
        }
      }
      v15[(v50 >> 6) + 8] |= 1 << v50;
      v57 = (uint64_t *)(v15[6] + 16 * v50);
      *v57 = v46;
      v57[1] = v45;
      *(_QWORD *)(v15[7] + 8 * v50) = v47;
      v58 = v15[2];
      v30 = __OFADD__(v58, 1);
      v59 = v58 + 1;
      if (v30)
        goto LABEL_49;
      v15[2] = v59;
      swift_bridgeObjectRetain();
LABEL_32:
      ++v44;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v43 == v44)
        goto LABEL_44;
    }
  }
LABEL_52:
  __break(1u);
LABEL_53:
  swift_release();
  sub_1D4922E8C();
  __break(1u);
  swift_release();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1D47A0260(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB108);
  v3 = MEMORY[0x1E0C80A78](v2);
  v61 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v60 = (uint64_t)&v54 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v57 = (uint64_t)&v54 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v55 = (uint64_t)&v54 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v56 = (uint64_t)&v54 - v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v54 - v13;
  v15 = type metadata accessor for Com_Apple_Visualintelligence_StructuredAddress(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (uint64_t *)((char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (uint64_t *)((char *)&v54 - v21);
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (uint64_t *)((char *)&v54 - v24);
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (uint64_t *)((char *)&v54 - v27);
  v29 = MEMORY[0x1E0C80A78](v26);
  v31 = (uint64_t *)((char *)&v54 - v30);
  MEMORY[0x1E0C80A78](v29);
  v33 = (uint64_t *)((char *)&v54 - v32);
  v62 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0) + 20));
  v34 = v62
      + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__prefAddress;
  swift_beginAccess();
  sub_1D47A24AC(v34, (uint64_t)v14);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v36 = v35(v14, 1, v15);
  v37 = MEMORY[0x1E0DEE9D8];
  if (v36 == 1)
  {
    *v33 = 0;
    v33[1] = 0xE000000000000000;
    v33[2] = 0;
    v33[3] = 0xE000000000000000;
    v33[4] = 0;
    v33[5] = 0xE000000000000000;
    v33[6] = 0;
    v33[7] = 0xE000000000000000;
    v33[8] = 0;
    v33[9] = 0xE000000000000000;
    v33[10] = 0;
    v33[11] = 0xE000000000000000;
    v33[12] = v37;
    v33[13] = 0;
    v33[14] = 0xE000000000000000;
    v33[15] = 0;
    v33[16] = 0xE000000000000000;
    v33[17] = 0;
    v33[18] = 0xE000000000000000;
    sub_1D4922010();
    sub_1D47A24F4((uint64_t)v14);
  }
  else
  {
    sub_1D47A2570((uint64_t)v14, (uint64_t)v33);
  }
  v38 = v33[16];
  v58 = v33[15];
  v59 = v38;
  swift_bridgeObjectRetain();
  sub_1D47A2534((uint64_t)v33);
  v39 = v62
      + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__prefAddress;
  swift_beginAccess();
  v40 = v56;
  sub_1D47A24AC(v39, v56);
  v41 = v35((char *)v40, 1, v15);
  v42 = (uint64_t)v61;
  if (v41 == 1)
  {
    *v31 = 0;
    v31[1] = 0xE000000000000000;
    v31[2] = 0;
    v31[3] = 0xE000000000000000;
    v31[4] = 0;
    v31[5] = 0xE000000000000000;
    v31[6] = 0;
    v31[7] = 0xE000000000000000;
    v31[8] = 0;
    v31[9] = 0xE000000000000000;
    v31[10] = 0;
    v31[11] = 0xE000000000000000;
    v31[12] = MEMORY[0x1E0DEE9D8];
    v31[13] = 0;
    v31[14] = 0xE000000000000000;
    v31[15] = 0;
    v31[16] = 0xE000000000000000;
    v31[17] = 0;
    v31[18] = 0xE000000000000000;
    sub_1D4922010();
    sub_1D47A24F4(v40);
  }
  else
  {
    sub_1D47A2570(v40, (uint64_t)v31);
  }
  v56 = v31[13];
  swift_bridgeObjectRetain();
  sub_1D47A2534((uint64_t)v31);
  v43 = v62
      + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__prefAddress;
  swift_beginAccess();
  v44 = v43;
  v45 = v55;
  sub_1D47A24AC(v44, v55);
  if (v35((char *)v45, 1, v15) == 1)
  {
    *v28 = 0;
    v28[1] = 0xE000000000000000;
    v28[2] = 0;
    v28[3] = 0xE000000000000000;
    v28[4] = 0;
    v28[5] = 0xE000000000000000;
    v28[6] = 0;
    v28[7] = 0xE000000000000000;
    v28[8] = 0;
    v28[9] = 0xE000000000000000;
    v28[10] = 0;
    v28[11] = 0xE000000000000000;
    v28[12] = MEMORY[0x1E0DEE9D8];
    v28[13] = 0;
    v28[14] = 0xE000000000000000;
    v28[15] = 0;
    v28[16] = 0xE000000000000000;
    v28[17] = 0;
    v28[18] = 0xE000000000000000;
    sub_1D4922010();
    sub_1D47A24F4(v45);
  }
  else
  {
    sub_1D47A2570(v45, (uint64_t)v28);
  }
  v55 = v28[10];
  swift_bridgeObjectRetain();
  sub_1D47A2534((uint64_t)v28);
  v46 = v62
      + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__prefAddress;
  swift_beginAccess();
  v47 = v46;
  v48 = v57;
  sub_1D47A24AC(v47, v57);
  if (v35((char *)v48, 1, v15) == 1)
  {
    *v25 = 0;
    v25[1] = 0xE000000000000000;
    v25[2] = 0;
    v25[3] = 0xE000000000000000;
    v25[4] = 0;
    v25[5] = 0xE000000000000000;
    v25[6] = 0;
    v25[7] = 0xE000000000000000;
    v25[8] = 0;
    v25[9] = 0xE000000000000000;
    v25[10] = 0;
    v25[11] = 0xE000000000000000;
    v25[12] = MEMORY[0x1E0DEE9D8];
    v25[13] = 0;
    v25[14] = 0xE000000000000000;
    v25[15] = 0;
    v25[16] = 0xE000000000000000;
    v25[17] = 0;
    v25[18] = 0xE000000000000000;
    sub_1D4922010();
    sub_1D47A24F4(v48);
  }
  else
  {
    sub_1D47A2570(v48, (uint64_t)v25);
  }
  v57 = v25[17];
  swift_bridgeObjectRetain();
  sub_1D47A2534((uint64_t)v25);
  v49 = v62
      + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__prefAddress;
  swift_beginAccess();
  v50 = v49;
  v51 = v60;
  sub_1D47A24AC(v50, v60);
  if (v35((char *)v51, 1, v15) == 1)
  {
    *v22 = 0;
    v22[1] = 0xE000000000000000;
    v22[2] = 0;
    v22[3] = 0xE000000000000000;
    v22[4] = 0;
    v22[5] = 0xE000000000000000;
    v22[6] = 0;
    v22[7] = 0xE000000000000000;
    v22[8] = 0;
    v22[9] = 0xE000000000000000;
    v22[10] = 0;
    v22[11] = 0xE000000000000000;
    v22[12] = MEMORY[0x1E0DEE9D8];
    v22[13] = 0;
    v22[14] = 0xE000000000000000;
    v22[15] = 0;
    v22[16] = 0xE000000000000000;
    v22[17] = 0;
    v22[18] = 0xE000000000000000;
    sub_1D4922010();
    sub_1D47A24F4(v51);
  }
  else
  {
    sub_1D47A2570(v51, (uint64_t)v22);
  }
  swift_bridgeObjectRetain();
  sub_1D47A2534((uint64_t)v22);
  v52 = v62
      + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__prefAddress;
  swift_beginAccess();
  sub_1D47A24AC(v52, v42);
  if (v35((char *)v42, 1, v15) == 1)
  {
    *v19 = 0;
    v19[1] = 0xE000000000000000;
    v19[2] = 0;
    v19[3] = 0xE000000000000000;
    v19[6] = 0;
    v19[7] = 0xE000000000000000;
    v19[8] = 0;
    v19[9] = 0xE000000000000000;
    v19[10] = 0;
    v19[11] = 0xE000000000000000;
    v19[12] = MEMORY[0x1E0DEE9D8];
    v19[13] = 0;
    v19[14] = 0xE000000000000000;
    v19[15] = 0;
    v19[16] = 0xE000000000000000;
    v19[17] = 0;
    v19[18] = 0xE000000000000000;
    v19[4] = 0;
    v19[5] = 0xE000000000000000;
    sub_1D4922010();
    sub_1D47A24F4(v42);
  }
  else
  {
    sub_1D47A2570(v42, (uint64_t)v19);
  }
  swift_bridgeObjectRetain();
  sub_1D47A2534((uint64_t)v19);
  v63 = 0;
  v64 = 0xE000000000000000;
  sub_1D4922B80();
  swift_bridgeObjectRelease();
  v63 = v58;
  v64 = v59;
  sub_1D492270C();
  sub_1D492270C();
  swift_bridgeObjectRelease();
  sub_1D492270C();
  sub_1D492270C();
  swift_bridgeObjectRelease();
  sub_1D492270C();
  sub_1D492270C();
  swift_bridgeObjectRelease();
  sub_1D492270C();
  sub_1D492270C();
  swift_bridgeObjectRelease();
  sub_1D492270C();
  sub_1D492270C();
  swift_bridgeObjectRelease();
  return v63;
}

void sub_1D47A09D4(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), void (*a4)(_QWORD))
{
  uint64_t v4;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  id v33;
  id v34[2];

  v34[1] = *(id *)MEMORY[0x1E0C80C00];
  v8 = sub_1D4801E9C(a2, 0);
  if (!v4)
  {
    v9 = v8;
    a3(0);
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v9;
    v11 = objc_allocWithZone(MEMORY[0x1E0C9E9B0]);
    v12 = v9;
    v13 = objc_msgSend(v11, sel_init);
    v14 = *(void **)(a1 + 16);
    v34[0] = 0;
    v15 = objc_msgSend(v14, sel_predictionFromFeatures_options_error_, v10, v13, v34);
    v16 = v34[0];
    if (v15)
    {
      v17 = v15;
      a4(0);
      *(_QWORD *)(swift_initStackObject() + 16) = v17;
      v18 = v16;

      swift_release();
      v19 = (void *)sub_1D49225F8();
      v20 = objc_msgSend(v17, sel_featureValueForName_, v19);

      if (v20)
      {
        v21 = objc_msgSend(v20, sel_multiArrayValue);

        if (v21)
        {
          swift_release();
          v22 = objc_msgSend(v21, sel_numberArray);

          sub_1D46C2548();
          v23 = sub_1D4922820();

          if (v23 >> 62)
          {
            swift_bridgeObjectRetain();
            v24 = sub_1D4922C4C();
            if (v24)
              goto LABEL_7;
          }
          else
          {
            v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v24)
            {
LABEL_7:
              if (v24 < 1)
                __break(1u);
              v25 = 0;
              v26 = (_QWORD *)MEMORY[0x1E0DEE9D8];
              do
              {
                if ((v23 & 0xC000000000000001) != 0)
                  v27 = (id)MEMORY[0x1D8261F20](v25, v23);
                else
                  v27 = *(id *)(v23 + 8 * v25 + 32);
                v28 = v27;
                objc_msgSend(v27, sel_doubleValue);
                v30 = v29;

                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v26 = sub_1D48A99BC(0, v26[2] + 1, 1, v26);
                v32 = v26[2];
                v31 = v26[3];
                if (v32 >= v31 >> 1)
                  v26 = sub_1D48A99BC((_QWORD *)(v31 > 1), v32 + 1, 1, v26);
                ++v25;
                v26[2] = v32 + 1;
                v26[v32 + 4] = v30;
              }
              while (v24 != v25);
            }
          }
          swift_bridgeObjectRelease_n();
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
    else
    {
      v33 = v34[0];
      sub_1D4920E64();

      swift_willThrow();
      swift_release();

    }
  }
}

unint64_t sub_1D47A0D34(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  unint64_t v50;
  uint64_t v51;
  _BOOL8 v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  char v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t result;
  _QWORD v61[3];
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;

  v62 = a6;
  v65 = a1;
  v10 = sub_1D4922370();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D47C47A8(MEMORY[0x1E0DEE9D8]);
  if (a5 < 0)
    goto LABEL_50;
  v15 = (_QWORD *)v14;
  v63 = (_QWORD *)a4;
  v64 = a3;
  v61[0] = v13;
  v61[1] = v11;
  v61[2] = v10;
  if (a5)
  {
    v16 = 0;
    do
    {
      v68 = (_QWORD *)v65;
      v69 = a2;
      swift_bridgeObjectRetain();
      sub_1D492270C();
      v67 = v16;
      sub_1D4922E14();
      sub_1D492270C();
      swift_bridgeObjectRelease();
      v17 = (uint64_t)v68;
      v18 = v69;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v68 = v15;
      v21 = sub_1D47CA4DC(v17, v18);
      v22 = v15[2];
      v23 = (v20 & 1) == 0;
      v24 = v22 + v23;
      if (__OFADD__(v22, v23))
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      v25 = v20;
      if (v15[3] >= v24)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v15 = v68;
          if ((v20 & 1) != 0)
            goto LABEL_4;
        }
        else
        {
          sub_1D47AE2C0();
          v15 = v68;
          if ((v25 & 1) != 0)
            goto LABEL_4;
        }
      }
      else
      {
        sub_1D47A5174(v24, isUniquelyReferenced_nonNull_native);
        v26 = sub_1D47CA4DC(v17, v18);
        if ((v25 & 1) != (v27 & 1))
          goto LABEL_53;
        v21 = v26;
        v15 = v68;
        if ((v25 & 1) != 0)
        {
LABEL_4:
          *(_QWORD *)(v15[7] + 8 * v21) = 0;
          goto LABEL_5;
        }
      }
      v15[(v21 >> 6) + 8] |= 1 << v21;
      v28 = (uint64_t *)(v15[6] + 16 * v21);
      *v28 = v17;
      v28[1] = v18;
      *(_QWORD *)(v15[7] + 8 * v21) = 0;
      v29 = v15[2];
      v30 = __OFADD__(v29, 1);
      v31 = v29 + 1;
      if (v30)
        goto LABEL_47;
      v15[2] = v31;
      swift_bridgeObjectRetain();
LABEL_5:
      ++v16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    while (a5 != v16);
  }
  v32 = sub_1D479F908((uint64_t)v63, v64);
  if (!v32)
  {
    swift_bridgeObjectRelease();
    return sub_1D47C47A8(MEMORY[0x1E0DEE9D8]);
  }
  v33 = v32;
  v67 = MEMORY[0x1E0DEE9D8];
  v34 = *(_QWORD *)(v32 + 16);
  if (v34)
  {
    v35 = 0;
    v36 = *(_QWORD *)(v62 + 32);
    do
    {
      v37 = *(_QWORD *)(v33 + 8 * v35 + 32);
      swift_bridgeObjectRetain();
      sub_1D47A09D4(v36, v37, (void (*)(_QWORD))type metadata accessor for OCRAddressModelInput, (void (*)(_QWORD))type metadata accessor for OCRAddressModelOutput);
      v39 = v38;
      ++v35;
      swift_bridgeObjectRelease();
      sub_1D4895F4C(v39);
    }
    while (v34 != v35);
    swift_bridgeObjectRelease();
    v40 = v67;
  }
  else
  {
    swift_bridgeObjectRelease();
    v40 = MEMORY[0x1E0DEE9D8];
  }
  v68 = (_QWORD *)v40;
  swift_bridgeObjectRetain_n();
  sub_1D479E4C4((uint64_t *)&v68);
  swift_bridgeObjectRelease_n();
  v67 = (uint64_t)v68;
  v41 = v68[2];
  if (v41 >= a5)
    v42 = a5;
  else
    v42 = v68[2];
  v63 = v68;
  if (!v42)
  {
LABEL_44:
    swift_release();
    return (unint64_t)v15;
  }
  if (!v41)
    goto LABEL_51;
  v43 = v42;
  if (v42 - 1 < v41)
  {
    v44 = 0;
    v64 = v68 + 4;
    while (1)
    {
      v68 = (_QWORD *)v65;
      v69 = a2;
      swift_bridgeObjectRetain();
      sub_1D492270C();
      v66 = v44;
      sub_1D4922E14();
      sub_1D492270C();
      swift_bridgeObjectRelease();
      v46 = (uint64_t)v68;
      v45 = v69;
      v47 = v64[v44];
      v48 = swift_isUniquelyReferenced_nonNull_native();
      v68 = v15;
      v50 = sub_1D47CA4DC(v46, v45);
      v51 = v15[2];
      v52 = (v49 & 1) == 0;
      v53 = v51 + v52;
      if (__OFADD__(v51, v52))
        goto LABEL_48;
      v54 = v49;
      if (v15[3] >= v53)
      {
        if ((v48 & 1) != 0)
        {
          v15 = v68;
          if ((v49 & 1) != 0)
            goto LABEL_31;
        }
        else
        {
          sub_1D47AE2C0();
          v15 = v68;
          if ((v54 & 1) != 0)
            goto LABEL_31;
        }
      }
      else
      {
        sub_1D47A5174(v53, v48);
        v55 = sub_1D47CA4DC(v46, v45);
        if ((v54 & 1) != (v56 & 1))
          goto LABEL_53;
        v50 = v55;
        v15 = v68;
        if ((v54 & 1) != 0)
        {
LABEL_31:
          *(_QWORD *)(v15[7] + 8 * v50) = v47;
          goto LABEL_32;
        }
      }
      v15[(v50 >> 6) + 8] |= 1 << v50;
      v57 = (uint64_t *)(v15[6] + 16 * v50);
      *v57 = v46;
      v57[1] = v45;
      *(_QWORD *)(v15[7] + 8 * v50) = v47;
      v58 = v15[2];
      v30 = __OFADD__(v58, 1);
      v59 = v58 + 1;
      if (v30)
        goto LABEL_49;
      v15[2] = v59;
      swift_bridgeObjectRetain();
LABEL_32:
      ++v44;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v43 == v44)
        goto LABEL_44;
    }
  }
LABEL_52:
  __break(1u);
LABEL_53:
  swift_release();
  sub_1D4922E8C();
  __break(1u);
  swift_release();
  result = swift_release();
  __break(1u);
  return result;
}

void sub_1D47A133C(_QWORD *a1)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  double v6;
  char v7;
  long double v8;
  long double v11;
  uint64_t v12;
  uint64_t v13;

  v1 = a1;
  v2 = a1[2];
  if (!v2)
  {
    swift_bridgeObjectRetain();
    return;
  }
  v3 = 0;
  v4 = 0;
  v5 = v2 - 1;
  v6 = 0.0;
LABEL_3:
  if (v4 < v2)
  {
    v7 = 0;
    do
    {
      if ((v7 & 1) != 0 || (v8 = *(double *)&v1[v4 + 4], v8 == 0.0))
      {
        if (v5 == v4)
          goto LABEL_19;
        v7 = 1;
      }
      else
      {
        if (v8 > 0.0)
        {
          if (__OFADD__(v3++, 1))
            goto LABEL_29;
          v6 = v6 + log(v8);
          if (v5 == v4++)
          {
LABEL_17:
            if (v3)
              v11 = exp(v6 / (double)v3);
            else
LABEL_19:
              v11 = 0.0;
            swift_bridgeObjectRetain();
            v12 = -(uint64_t)v2;
            v13 = 4;
            do
            {
              if (*(double *)&v1[v13] < 0.0)
              {
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v1 = sub_1D47DFAD4(v1);
                *(long double *)&v1[v13] = v11;
              }
              ++v13;
            }
            while (v12 + v13 != 4);
            return;
          }
          goto LABEL_3;
        }
        if (v5 == v4)
          goto LABEL_17;
        v7 = 0;
      }
      ++v4;
    }
    while (v2 != v4);
  }
  __break(1u);
LABEL_29:
  __break(1u);
}

void sub_1D47A1484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  id v36;
  void *v37;
  double v38;
  double v39;
  id v40;
  void *v41;
  char v42;
  uint64_t v43;
  id v44[3];

  v44[2] = *(id *)MEMORY[0x1E0C80C00];
  v10 = *(_QWORD *)(a1 + 16);
  v11 = (_QWORD *)sub_1D48C3750(v10, 0.0);
  v12 = sub_1D4801E9C(a2, 1);
  type metadata accessor for TitleClassificationModelInput();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E9B0]), sel_init);
  v15 = *(void **)(a4 + 16);
  v44[0] = 0;
  v16 = objc_msgSend(v15, sel_predictionFromFeatures_options_error_, v13, v14, v44);
  v17 = v44[0];
  if (!v16)
  {
    v40 = v44[0];
    v41 = (void *)sub_1D4920E64();

    swift_willThrow();
    swift_release();

    return;
  }
  v18 = v16;
  type metadata accessor for TitleClassificationModelOutput();
  *(_QWORD *)(swift_initStackObject() + 16) = v18;
  v19 = v17;
  swift_release();

  v20 = (void *)sub_1D49225F8();
  v21 = objc_msgSend(v18, sel_featureValueForName_, v20);

  if (!v21)
  {
    __break(1u);
    goto LABEL_31;
  }
  v22 = objc_msgSend(v21, sel_multiArrayValue);

  if (!v22)
  {
LABEL_31:
    __break(1u);
    return;
  }
  v42 = a5;
  swift_release();
  v23 = objc_msgSend(v22, sel_numberArray);

  sub_1D46C2548();
  v24 = sub_1D4922820();

  v43 = v24;
  if (v10)
  {
    v25 = 0;
    v26 = v24 & 0xC000000000000001;
    v27 = *(_QWORD *)(a3 + 24);
    v28 = v24 & 0xFFFFFFFFFFFFFF8;
    v29 = v24 + 32;
    v30 = (uint64_t *)(a1 + 40);
    do
    {
      if (*(_QWORD *)(v27 + 16))
      {
        v32 = *(v30 - 1);
        v31 = *v30;
        swift_bridgeObjectRetain();
        v33 = sub_1D47CA4DC(v32, v31);
        if ((v34 & 1) != 0)
        {
          v35 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v33);
          swift_bridgeObjectRelease();
          if ((v35 & 0x8000000000000000) == 0)
          {
            if (v26)
            {
              v36 = (id)MEMORY[0x1D8261F20](v35, v43);
            }
            else
            {
              if (v35 >= *(_QWORD *)(v28 + 16))
                goto LABEL_28;
              v36 = *(id *)(v29 + 8 * v35);
            }
            v37 = v36;
            objc_msgSend(v36, sel_doubleValue);
            v39 = v38;

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v11 = sub_1D47DFAD4(v11);
            if (v25 >= v11[2])
              goto LABEL_29;
            goto LABEL_8;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1D47DFAD4(v11);
      v39 = -1.0;
      if (v25 >= v11[2])
      {
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
      }
LABEL_8:
      *(double *)&v11[v25 + 4] = v39;
      v30 += 2;
      ++v25;
    }
    while (v10 != v25);
  }
  swift_bridgeObjectRelease();
  if ((v42 & 1) != 0)
  {
    sub_1D47A133C(v11);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D47A1814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  unint64_t v10;
  uint64_t result;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t i;
  BOOL v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  unint64_t v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92[2];
  uint64_t v93;
  unint64_t v94;
  _QWORD *v95;

  v10 = *(_QWORD *)(a2 + 16);
  result = sub_1D48C3750(v10, 0.0);
  v12 = (_QWORD *)result;
  v81 = v10;
  v82 = a4;
  v77 = a2;
  if (!v10)
  {
LABEL_74:
    if ((a6 & 1) != 0)
    {
      sub_1D47A133C(v12);
      v65 = v64;
      swift_bridgeObjectRelease();
      v12 = v65;
    }
    if (v81)
    {
      v66 = *(_QWORD *)(a4 + 16);
      if (v66)
      {
        v67 = 0;
        v84 = a4 + 72;
        v80 = v66 - 1;
        do
        {
          v91 = *(_QWORD *)(v77 + 32 + 8 * v67);
          v68 = *(_QWORD *)(v91 + 16);
          if (!v68)
            goto LABEL_95;
          v88 = v67;
          result = swift_bridgeObjectRetain_n();
          v69 = 0;
          v87 = v68;
          do
          {
            if (v69 >= *(_QWORD *)(v91 + 16))
              goto LABEL_106;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v70 = sub_1D4922778();
            swift_bridgeObjectRelease();
            if ((v70 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              goto LABEL_80;
            }
            if (v66 == 1)
            {
              swift_bridgeObjectRelease();
              result = swift_bridgeObjectRelease();
            }
            else
            {
              v71 = v66;
              swift_bridgeObjectRetain();
              v72 = sub_1D4922778();
              swift_bridgeObjectRelease();
              v73 = v80;
              v74 = v84;
              if ((v72 & 1) != 0)
              {
LABEL_79:
                swift_bridgeObjectRelease();
                v66 = v71;
LABEL_80:
                v67 = v88;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                goto LABEL_81;
              }
              while (--v73)
              {
                v75 = v74 + 16;
                swift_bridgeObjectRetain();
                v76 = sub_1D4922778();
                swift_bridgeObjectRelease();
                v74 = v75;
                if ((v76 & 1) != 0)
                  goto LABEL_79;
              }
              swift_bridgeObjectRelease();
              result = swift_bridgeObjectRelease();
              v66 = v71;
              v68 = v87;
            }
            ++v69;
          }
          while (v69 != v68);
          swift_bridgeObjectRelease_n();
          v67 = v88;
LABEL_95:
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1D47DFAD4(v12);
            v12 = (_QWORD *)result;
          }
          if (v67 >= v12[2])
            goto LABEL_110;
          v12[v67 + 4] = 0;
LABEL_81:
          ++v67;
        }
        while (v67 != v81);
      }
    }
    return (uint64_t)v12;
  }
  v13 = 0;
  v79 = a2 + 32;
  v85 = a1;
  v14 = a1 + 32;
  v83 = a5;
  v90 = a1 + 32;
  while (1)
  {
    v15 = *(_QWORD *)(v79 + 8 * v13);
    v16 = *(_QWORD *)(v15 + 16);
    if ((a5 & 1) != 0)
    {
      if (v16)
      {
        v95 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_1D48AB4A4(0, v16, 0);
        v17 = v95;
        v18 = v15 + 40;
        do
        {
          v92[0] = sub_1D492267C();
          v92[1] = v19;
          v93 = 46;
          v94 = 0xE100000000000000;
          sub_1D4696FE8();
          swift_bridgeObjectRetain();
          v20 = (_QWORD *)sub_1D4922A90();
          result = swift_bridgeObjectRelease();
          if (!v20[2])
          {
LABEL_104:
            __break(1u);
LABEL_105:
            __break(1u);
LABEL_106:
            __break(1u);
LABEL_107:
            __break(1u);
LABEL_108:
            __break(1u);
LABEL_109:
            __break(1u);
LABEL_110:
            __break(1u);
            goto LABEL_111;
          }
          v22 = v20[4];
          v21 = v20[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v95 = v17;
          v24 = v17[2];
          v23 = v17[3];
          if (v24 >= v23 >> 1)
          {
            sub_1D48AB4A4(v23 > 1, v24 + 1, 1);
            v17 = v95;
          }
          v18 += 16;
          v17[2] = v24 + 1;
          v25 = &v17[2 * v24];
          v25[4] = v22;
          v25[5] = v21;
          --v16;
          v14 = v90;
        }
        while (v16);
        swift_bridgeObjectRelease();
        a5 = v83;
      }
      else
      {
        v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      v93 = sub_1D49228EC();
      v34 = v17[2];
      if (v34)
      {
        v35 = v17 + 5;
        do
        {
          v36 = *(v35 - 1);
          v37 = *v35;
          swift_bridgeObjectRetain();
          sub_1D47CC84C(v92, v36, v37);
          swift_bridgeObjectRelease();
          v35 += 2;
          --v34;
        }
        while (v34);
      }
      swift_bridgeObjectRelease();
      v38 = v93;
      v39 = *(_QWORD *)(v93 + 16);
      if (v39)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D3C0);
        v26 = (_QWORD *)swift_allocObject();
        v40 = _swift_stdlib_malloc_size(v26);
        v41 = v40 - 32;
        if (v40 < 32)
          v41 = v40 - 17;
        v26[2] = v39;
        v26[3] = 2 * (v41 >> 4);
        v42 = sub_1D46BE1B8((uint64_t)v92, v26 + 4, v39, v38);
        swift_bridgeObjectRetain();
        result = sub_1D46BE038();
        if (v42 != v39)
          goto LABEL_112;
        result = swift_bridgeObjectRelease();
        a4 = v82;
        a5 = v83;
      }
      else
      {
        result = swift_bridgeObjectRelease();
        v26 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        a4 = v82;
      }
    }
    else if (v16)
    {
      v92[0] = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1D48AB4A4(0, v16, 0);
      v26 = (_QWORD *)v92[0];
      v27 = v15 + 40;
      do
      {
        v28 = sub_1D492267C();
        v30 = v29;
        v92[0] = (uint64_t)v26;
        v32 = v26[2];
        v31 = v26[3];
        if (v32 >= v31 >> 1)
        {
          sub_1D48AB4A4(v31 > 1, v32 + 1, 1);
          v26 = (_QWORD *)v92[0];
        }
        v27 += 16;
        v26[2] = v32 + 1;
        v33 = &v26[2 * v32];
        v33[4] = v28;
        v33[5] = v30;
        --v16;
      }
      while (v16);
      result = swift_bridgeObjectRelease();
      a4 = v82;
      a5 = v83;
      v14 = v90;
    }
    else
    {
      v26 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v89 = v26[2];
    if (v89)
      break;
    result = swift_bridgeObjectRelease();
    if ((a6 & 1) != 0)
    {
LABEL_70:
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1D47DFAD4(v12);
        v12 = (_QWORD *)result;
      }
      if (v13 >= v12[2])
        goto LABEL_113;
      v12[v13 + 4] = 0xBFF0000000000000;
    }
LABEL_4:
    if (++v13 == v81)
      goto LABEL_74;
  }
  v43 = 0;
  for (i = 0; i != v89; ++i)
  {
    if (i >= v26[2])
    {
LABEL_103:
      __break(1u);
      goto LABEL_104;
    }
    v46 = &v26[2 * i + 4];
    v47 = *v46;
    v48 = v46[1];
    if ((a5 & 1) != 0)
    {
      v49 = *(_QWORD *)(a3 + 32);
      v50 = *(_QWORD *)(v49 + 16);
      swift_bridgeObjectRetain();
      if (v50)
      {
        swift_bridgeObjectRetain();
        v51 = sub_1D47CA4DC(v47, v48);
        v52 = MEMORY[0x1E0DEE9D8];
        if ((v53 & 1) != 0)
        {
          v52 = *(_QWORD *)(*(_QWORD *)(v49 + 56) + 8 * v51);
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v52 = MEMORY[0x1E0DEE9D8];
      }
      v14 = v90;
      result = swift_bridgeObjectRelease();
      v59 = *(_QWORD *)(v52 + 16);
      if (!v59)
        goto LABEL_60;
      v60 = 0;
      v61 = *(_QWORD *)(v85 + 16);
      do
      {
        v62 = *(_QWORD *)(v52 + 8 * v60 + 32);
        if (v62 < v61)
        {
          if (v62 < 0)
          {
            __break(1u);
LABEL_102:
            __break(1u);
            goto LABEL_103;
          }
          v63 = *(double *)(v90 + 8 * v62);
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1D47DFAD4(v12);
            v12 = (_QWORD *)result;
          }
          if (v13 >= v12[2])
            goto LABEL_102;
          *(double *)&v12[v13 + 4] = v63 + *(double *)&v12[v13 + 4];
        }
        ++v60;
      }
      while (v59 != v60);
      result = swift_bridgeObjectRelease();
      v45 = __OFADD__(v43++, 1);
      a5 = v83;
      if (v45)
        goto LABEL_105;
    }
    else
    {
      v54 = *(_QWORD *)(a3 + 16);
      if (!*(_QWORD *)(v54 + 16))
        continue;
      swift_bridgeObjectRetain();
      v55 = sub_1D47CA4DC(v47, v48);
      if ((v56 & 1) == 0)
      {
LABEL_60:
        result = swift_bridgeObjectRelease();
        continue;
      }
      v57 = *(_QWORD *)(*(_QWORD *)(v54 + 56) + 8 * v55);
      result = swift_bridgeObjectRelease();
      if ((v57 & 0x8000000000000000) == 0)
      {
        if (v57 >= *(_QWORD *)(v85 + 16))
          goto LABEL_107;
        v58 = *(double *)(v14 + 8 * v57);
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1D47DFAD4(v12);
          v12 = (_QWORD *)result;
        }
        if (v13 >= v12[2])
          goto LABEL_108;
        *(double *)&v12[v13 + 4] = v58 + *(double *)&v12[v13 + 4];
        v45 = __OFADD__(v43++, 1);
        if (v45)
          goto LABEL_109;
      }
    }
  }
  result = swift_bridgeObjectRelease();
  if (v43 < 1)
  {
    a4 = v82;
    if ((a6 & 1) == 0)
      goto LABEL_4;
    goto LABEL_70;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1D47DFAD4(v12);
    v12 = (_QWORD *)result;
  }
  if (v13 < v12[2])
  {
    *(double *)&v12[v13 + 4] = *(double *)&v12[v13 + 4] / (double)v43;
    a4 = v82;
    goto LABEL_4;
  }
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
  return result;
}

void sub_1D47A20CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  unint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  void *v36;
  char v37;
  uint64_t v38;
  id v39[3];

  v39[2] = *(id *)MEMORY[0x1E0C80C00];
  v12 = *(_QWORD *)(a1 + 16);
  sub_1D48C3750(v12, 0.0);
  sub_1D48C3750(v12, 0.0);
  v13 = sub_1D4801E9C(a2, 1);
  v37 = a6;
  v38 = a5;
  type metadata accessor for CategoryClassificationModelInput();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E9B0]), sel_init);
  v16 = *(void **)(a4 + 16);
  v39[0] = 0;
  v17 = objc_msgSend(v16, sel_predictionFromFeatures_options_error_, v14, v15, v39);
  v18 = v39[0];
  if (!v17)
  {
    v35 = v39[0];
    v36 = (void *)sub_1D4920E64();

    swift_willThrow();
    swift_release();

    return;
  }
  v19 = v17;
  type metadata accessor for CategoryClassificationModelOutput();
  *(_QWORD *)(swift_initStackObject() + 16) = v19;
  v20 = v18;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v21 = (void *)sub_1D49225F8();
  v22 = objc_msgSend(v19, sel_featureValueForName_, v21);

  if (v22)
  {
    v23 = objc_msgSend(v22, sel_multiArrayValue);

    if (v23)
    {
      swift_release();
      v24 = objc_msgSend(v23, sel_numberArray);

      sub_1D46C2548();
      v25 = sub_1D4922820();

      if (v25 >> 62)
      {
        swift_bridgeObjectRetain();
        v26 = sub_1D4922C4C();
        if (v26)
          goto LABEL_6;
      }
      else
      {
        v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v26)
        {
LABEL_6:
          if (v26 < 1)
            __break(1u);
          v27 = 0;
          v28 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          do
          {
            if ((v25 & 0xC000000000000001) != 0)
              v29 = (id)MEMORY[0x1D8261F20](v27, v25);
            else
              v29 = *(id *)(v25 + 8 * v27 + 32);
            v30 = v29;
            objc_msgSend(v29, sel_doubleValue);
            v32 = v31;

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v28 = sub_1D48A99BC(0, v28[2] + 1, 1, v28);
            v34 = v28[2];
            v33 = v28[3];
            if (v34 >= v33 >> 1)
              v28 = sub_1D48A99BC((_QWORD *)(v33 > 1), v34 + 1, 1, v28);
            ++v27;
            v28[2] = v34 + 1;
            v28[v34 + 4] = v32;
          }
          while (v26 != v27);
          goto LABEL_20;
        }
      }
      v28 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_20:
      swift_bridgeObjectRelease_n();
      sub_1D47A1814((uint64_t)v28, a1, a3, v38, 0, v37 & 1);
      sub_1D47A1814((uint64_t)v28, a1, a3, v38, 1, v37 & 1);
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1D47A24AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D47A24F4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB108);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D47A2534(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Com_Apple_Visualintelligence_StructuredAddress(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D47A2570(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Com_Apple_Visualintelligence_StructuredAddress(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D47A25B4()
{
  return sub_1D46CEE04() & 1;
}

uint64_t sub_1D47A25D0()
{
  return sub_1D47A25B4() & 1;
}

uint64_t sub_1D47A25E8()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB50);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9E0];
  qword_1ED98D978 = result;
  return result;
}

uint64_t sub_1D47A2628@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  char v10;
  id v11;
  void *v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v15;

  v8 = *a1;
  if (!*(_QWORD *)(*a1 + 16))
    goto LABEL_5;
  swift_bridgeObjectRetain();
  v9 = sub_1D47CA4DC(a2, a3);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    sub_1D470D004();
    swift_bridgeObjectRetain();
    v12 = (void *)sub_1D4922A48();
    swift_bridgeObjectRetain();
    v11 = v12;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *a1;
    *a1 = 0x8000000000000000;
    sub_1D47AB490((uint64_t)v11, a2, a3, isUniquelyReferenced_nonNull_native);
    *a1 = v15;
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v11 = *(id *)(*(_QWORD *)(v8 + 56) + 8 * v9);
LABEL_6:
  result = swift_bridgeObjectRelease();
  *a4 = v11;
  return result;
}

uint64_t sub_1D47A2750()
{
  uint64_t v0;

  sub_1D47B10E0(v0 + OBJC_IVAR____TtC18VisualIntelligence13SignpostEvent_signpostID);

  return swift_deallocClassInstance();
}

uint64_t sub_1D47A2790()
{
  return type metadata accessor for SignpostEvent();
}

uint64_t type metadata accessor for SignpostEvent()
{
  uint64_t result;

  result = qword_1ED98EDD0;
  if (!qword_1ED98EDD0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D47A27D4()
{
  unint64_t v0;

  sub_1D47A284C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1D47A284C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED98EF38)
  {
    sub_1D492234C();
    v0 = sub_1D4922A60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED98EF38);
  }
}

uint64_t sub_1D47A28A0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _OWORD v36[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98F400);
  v35 = a2;
  v6 = sub_1D4922C70();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v8 + 63) >> 6;
    v13 = v6 + 64;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v15 << 6);
      }
      else
      {
        if (__OFADD__(v15++, 1))
          goto LABEL_39;
        if (v15 >= v12)
        {
LABEL_32:
          swift_release();
          v3 = v2;
          if ((v35 & 1) != 0)
          {
            v34 = 1 << *(_BYTE *)(v5 + 32);
            if (v34 >= 64)
              bzero((void *)(v5 + 64), ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
            else
              *v9 = -1 << v34;
            *(_QWORD *)(v5 + 16) = 0;
          }
          break;
        }
        v21 = v9[v15];
        if (!v21)
        {
          v22 = v15 + 1;
          if (v15 + 1 >= v12)
            goto LABEL_32;
          v21 = v9[v22];
          if (!v21)
          {
            while (1)
            {
              v15 = v22 + 1;
              if (__OFADD__(v22, 1))
                break;
              if (v15 >= v12)
                goto LABEL_32;
              v21 = v9[v15];
              ++v22;
              if (v21)
                goto LABEL_19;
            }
LABEL_38:
            __break(1u);
LABEL_39:
            __break(1u);
            return result;
          }
          ++v15;
        }
LABEL_19:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v15 << 6);
      }
      v23 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v19);
      v25 = *v23;
      v24 = v23[1];
      v26 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v19);
      if ((v35 & 1) != 0)
      {
        sub_1D46FADFC(v26, v36);
      }
      else
      {
        sub_1D4696FAC((uint64_t)v26, (uint64_t)v36);
        swift_bridgeObjectRetain();
      }
      sub_1D4922EF8();
      sub_1D49226D0();
      result = sub_1D4922F34();
      v27 = -1 << *(_BYTE *)(v7 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v13 + 8 * (v28 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v13 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v13 + 8 * v29);
        }
        while (v33 == -1);
        v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v16);
      *v17 = v25;
      v17[1] = v24;
      result = (uint64_t)sub_1D46FADFC(v36, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v16));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D47A2B84(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2F8);
  v36 = a2;
  v6 = sub_1D4922C70();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1D4922EF8();
    sub_1D49226D0();
    result = sub_1D4922F34();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D47A2E98(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  unsigned __int8 v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB5F0);
  v6 = sub_1D4922C70();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v32 = a2;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v8 + 63) >> 6;
    v13 = v6 + 64;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v15 << 6);
      }
      else
      {
        v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          return result;
        }
        if (v19 >= v12)
          goto LABEL_31;
        v20 = v9[v19];
        ++v15;
        if (!v20)
        {
          v15 = v19 + 1;
          if (v19 + 1 >= v12)
            goto LABEL_31;
          v20 = v9[v15];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v12)
            {
LABEL_31:
              swift_release();
              v3 = v2;
              if ((v32 & 1) != 0)
              {
                v31 = 1 << *(_BYTE *)(v5 + 32);
                if (v31 >= 64)
                  bzero((void *)(v5 + 64), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v9 = -1 << v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v15 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_38;
                if (v15 >= v12)
                  goto LABEL_31;
                v20 = v9[v15];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v15 = v21;
          }
        }
LABEL_21:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      v22 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v23 = *(_DWORD *)(*(_QWORD *)(v5 + 56) + 4 * v18);
      sub_1D4922EF8();
      sub_1D46F8BC8(v22);
      sub_1D49226D0();
      swift_bridgeObjectRelease();
      result = sub_1D4922F34();
      v24 = -1 << *(_BYTE *)(v7 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_37;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v13 + 8 * v26);
        }
        while (v30 == -1);
        v16 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v22;
      *(_DWORD *)(*(_QWORD *)(v7 + 56) + 4 * v16) = v23;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D47A317C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unsigned int v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EBD8);
  result = sub_1D4922C70();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = a2;
    v34 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v10;
    v33 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13)
          goto LABEL_31;
        v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_31;
          v20 = v9[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v32;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v20 = v9[v8];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v8 = v21;
          }
        }
LABEL_21:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = 4 * v18;
      v23 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + v22);
      v24 = *(_DWORD *)(*(_QWORD *)(v5 + 56) + v22);
      result = MEMORY[0x1D8262250](*(_QWORD *)(v7 + 40), v23, 4);
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = 4 * v15;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + v16) = v23;
      *(_DWORD *)(*(_QWORD *)(v7 + 56) + v16) = v24;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1D47A3424(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  int v27;
  int v28;
  int64_t v29;
  _QWORD *v30;
  unint64_t v31;
  int64_t v32;
  __int128 *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char v44;
  unint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  int64_t v50;
  _QWORD *v51;
  uint64_t i;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  char v64;
  char v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  _BYTE v78[28];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D580);
  v53 = a2;
  v6 = sub_1D4922C70();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v51 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v49 = v2;
  v50 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      if ((v53 & 1) != 0)
        goto LABEL_10;
      goto LABEL_23;
    }
    v29 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v29 >= v50)
      break;
    v30 = v51;
    v31 = v51[v29];
    ++v13;
    if (!v31)
    {
      v13 = v29 + 1;
      if (v29 + 1 >= v50)
        goto LABEL_33;
      v31 = v51[v13];
      if (!v31)
      {
        v32 = v29 + 2;
        if (v32 >= v50)
        {
LABEL_33:
          swift_release();
          v3 = v49;
          if ((v53 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v31 = v51[v32];
        if (!v31)
        {
          while (1)
          {
            v13 = v32 + 1;
            if (__OFADD__(v32, 1))
              goto LABEL_42;
            if (v13 >= v50)
              goto LABEL_33;
            v31 = v51[v13];
            ++v32;
            if (v31)
              goto LABEL_22;
          }
        }
        v13 = v32;
      }
    }
LABEL_22:
    v10 = (v31 - 1) & v31;
    v17 = __clz(__rbit64(v31)) + (v13 << 6);
    if ((v53 & 1) != 0)
    {
LABEL_10:
      v18 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v17);
      v19 = *(_QWORD *)(v5 + 56) + 160 * v17;
      v20 = *(_BYTE *)v19;
      v21 = *(_QWORD *)(v19 + 8);
      v22 = *(_QWORD *)(v19 + 16);
      v24 = *(_QWORD *)(v19 + 24);
      v23 = *(_QWORD *)(v19 + 32);
      v25 = *(_BYTE *)(v19 + 40);
      v59 = *(_QWORD *)(v19 + 64);
      v56 = *(_QWORD *)(v19 + 72);
      v57 = *(_QWORD *)(v19 + 48);
      v62 = *(_QWORD *)(v19 + 80);
      v60 = *(_QWORD *)(v19 + 88);
      v58 = *(_QWORD *)(v19 + 96);
      v54 = *(_QWORD *)(v19 + 56);
      v55 = *(_QWORD *)(v19 + 104);
      v26 = *(_QWORD *)(v19 + 112);
      v27 = *(_DWORD *)(v19 + 120);
      v61 = *(_BYTE *)(v19 + 124);
      v63 = *(_BYTE *)(v19 + 125);
      v64 = *(_BYTE *)(v19 + 126);
      v65 = *(_BYTE *)(v19 + 127);
      v66 = *(_BYTE *)(v19 + 128);
      v68 = *(_BYTE *)(v19 + 129);
      v69 = *(_QWORD *)(v19 + 136);
      v67 = *(_QWORD *)(v19 + 144);
      v28 = *(_DWORD *)(v19 + 152);
      goto LABEL_24;
    }
LABEL_23:
    v18 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v17);
    v33 = (__int128 *)(*(_QWORD *)(v5 + 56) + 160 * v17);
    v34 = v33[1];
    v70 = *v33;
    v71 = v34;
    v35 = v33[5];
    v37 = v33[2];
    v36 = v33[3];
    v74 = v33[4];
    v75 = v35;
    v72 = v37;
    v73 = v36;
    v39 = v33[7];
    v38 = v33[8];
    v40 = v33[6];
    *(_OWORD *)&v78[12] = *(__int128 *)((char *)v33 + 140);
    v77 = v39;
    *(_OWORD *)v78 = v38;
    v76 = v40;
    v28 = *(_DWORD *)&v78[24];
    v69 = *((_QWORD *)&v38 + 1);
    v67 = *(_QWORD *)&v78[16];
    v68 = BYTE1(v38);
    v65 = HIBYTE(v39);
    v66 = v38;
    v63 = BYTE13(v39);
    v64 = BYTE14(v39);
    v61 = BYTE12(v39);
    v27 = DWORD2(v39);
    v26 = v39;
    v62 = v35;
    v59 = v74;
    v60 = *((_QWORD *)&v35 + 1);
    v55 = *((_QWORD *)&v40 + 1);
    v56 = *((_QWORD *)&v74 + 1);
    v57 = v73;
    v58 = v40;
    v54 = *((_QWORD *)&v73 + 1);
    v25 = BYTE8(v72);
    v24 = *((_QWORD *)&v71 + 1);
    v23 = v72;
    v21 = *((_QWORD *)&v70 + 1);
    v22 = v71;
    v20 = v70;
    sub_1D46A47CC((uint64_t)&v70);
LABEL_24:
    sub_1D4922EF8();
    sub_1D46F8BC8(v18);
    sub_1D49226D0();
    swift_bridgeObjectRelease();
    result = sub_1D4922F34();
    v41 = -1 << *(_BYTE *)(v7 + 32);
    v42 = result & ~v41;
    v43 = v42 >> 6;
    if (((-1 << v42) & ~*(_QWORD *)(v11 + 8 * (v42 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v42) & ~*(_QWORD *)(v11 + 8 * (v42 >> 6)))) | v42 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v44 = 0;
      v45 = (unint64_t)(63 - v41) >> 6;
      do
      {
        if (++v43 == v45 && (v44 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v46 = v43 == v45;
        if (v43 == v45)
          v43 = 0;
        v44 |= v46;
        v47 = *(_QWORD *)(v11 + 8 * v43);
      }
      while (v47 == -1);
      v14 = __clz(__rbit64(~v47)) + (v43 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v14) = v18;
    v15 = *(_QWORD *)(v7 + 56) + 160 * v14;
    *(_BYTE *)v15 = v20;
    *(_QWORD *)(v15 + 8) = v21;
    *(_QWORD *)(v15 + 16) = v22;
    *(_QWORD *)(v15 + 24) = v24;
    *(_QWORD *)(v15 + 32) = v23;
    *(_BYTE *)(v15 + 40) = v25;
    *(_QWORD *)(v15 + 48) = v57;
    *(_QWORD *)(v15 + 56) = v54;
    *(_QWORD *)(v15 + 64) = v59;
    *(_QWORD *)(v15 + 72) = v56;
    *(_QWORD *)(v15 + 80) = v62;
    *(_QWORD *)(v15 + 88) = v60;
    *(_QWORD *)(v15 + 96) = v58;
    *(_QWORD *)(v15 + 104) = v55;
    *(_QWORD *)(v15 + 112) = v26;
    *(_DWORD *)(v15 + 120) = v27;
    *(_BYTE *)(v15 + 124) = v61;
    *(_BYTE *)(v15 + 125) = v63;
    *(_BYTE *)(v15 + 126) = v64;
    *(_BYTE *)(v15 + 127) = v65;
    *(_BYTE *)(v15 + 128) = v66;
    *(_BYTE *)(v15 + 129) = v68;
    *(_QWORD *)(v15 + 136) = v69;
    *(_QWORD *)(v15 + 144) = v67;
    *(_DWORD *)(v15 + 152) = v28;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v49;
  v30 = v51;
  if ((v53 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v48 = 1 << *(_BYTE *)(v5 + 32);
  if (v48 >= 64)
    bzero(v30, ((unint64_t)(v48 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v30 = -1 << v48;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D47A3948(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB7B0);
  result = sub_1D4922C70();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_1D4922EEC();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D47A3BFC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2F0);
  v42 = a2;
  v6 = sub_1D4922C70();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1D4922EF8();
    sub_1D49226D0();
    result = sub_1D4922F34();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D47A3F20(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  double *v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;

  v3 = v2;
  v5 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB7A8);
  v10 = (_QWORD *)sub_1D4922C70();
  if (*(_QWORD *)(v9 + 16))
  {
    v31 = v3;
    v11 = 1 << *(_BYTE *)(v9 + 32);
    v12 = (_QWORD *)(v9 + 64);
    v13 = -1;
    if (v11 < 64)
      v13 = ~(-1 << v11);
    v14 = v13 & *(_QWORD *)(v9 + 64);
    v15 = (unint64_t)(v11 + 63) >> 6;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v14)
      {
        v18 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v19 = v18 | (v17 << 6);
      }
      else
      {
        v20 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v20 >= v15)
          goto LABEL_23;
        v21 = v12[v20];
        ++v17;
        if (!v21)
        {
          v17 = v20 + 1;
          if (v20 + 1 >= v15)
            goto LABEL_23;
          v21 = v12[v17];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v31;
                goto LABEL_30;
              }
              v29 = 1 << *(_BYTE *)(v9 + 32);
              if (v29 >= 64)
                bzero((void *)(v9 + 64), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v12 = -1 << v29;
              v3 = v31;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v21 = v12[v22];
            if (!v21)
            {
              while (1)
              {
                v17 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_32;
                if (v17 >= v15)
                  goto LABEL_23;
                v21 = v12[v17];
                ++v22;
                if (v21)
                  goto LABEL_20;
              }
            }
            v17 = v22;
          }
        }
LABEL_20:
        v14 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v17 << 6);
      }
      v23 = (double *)(*(_QWORD *)(v9 + 48) + 32 * v19);
      v25 = *v23;
      v24 = v23[1];
      v27 = v23[2];
      v26 = v23[3];
      v28 = *(_QWORD *)(v9 + 56) + *(_QWORD *)(v6 + 72) * v19;
      if ((a2 & 1) != 0)
        sub_1D469C630(v28, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      else
        sub_1D469C304(v28, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      result = sub_1D47AC1B0((uint64_t)v8, v10, v25, v24, v27, v26);
    }
  }
  result = swift_release();
LABEL_30:
  *v3 = v10;
  return result;
}

uint64_t sub_1D47A4190(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EBB8);
  v37 = a2;
  v6 = sub_1D4922C70();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_DWORD *)(*(_QWORD *)(v5 + 56) + 4 * v21);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1D4922EF8();
    sub_1D49226D0();
    result = sub_1D4922F34();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_DWORD *)(*(_QWORD *)(v7 + 56) + 4 * v18) = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D47A4494(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_1D4921638();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB780);
  v42 = a2;
  v10 = sub_1D4922C70();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_bridgeObjectRetain();
    }
    sub_1D4696EA4(&qword_1EFEAB788, (uint64_t (*)(uint64_t))MEMORY[0x1E0D6ED80], MEMORY[0x1E0D6ED90]);
    result = sub_1D49225A4();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

unint64_t sub_1D47A4828(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  double *v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB7C0);
  v6 = (_QWORD *)sub_1D4922C70();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v15 = v14 | (v13 << 6);
      }
      else
      {
        v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11)
          goto LABEL_22;
        v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          v13 = v16 + 1;
          if (v16 + 1 >= v11)
            goto LABEL_22;
          v17 = v8[v13];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v27 = 1 << *(_BYTE *)(v5 + 32);
                if (v27 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v27;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                v13 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_29;
                if (v13 >= v11)
                  goto LABEL_22;
                v17 = v8[v13];
                ++v18;
                if (v17)
                  goto LABEL_19;
              }
            }
            v13 = v18;
          }
        }
LABEL_19:
        v10 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      v19 = (double *)(*(_QWORD *)(v5 + 48) + 32 * v15);
      v21 = *v19;
      v20 = v19[1];
      v23 = v19[2];
      v22 = v19[3];
      v24 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v15);
      v25 = *v24;
      v26 = v24[1];
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      result = sub_1D47AC338(v25, v26, v6, v21, v20, v23, v22);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1D47A4A3C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;

  v3 = v2;
  v5 = type metadata accessor for LandmarkSignals(0);
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB748);
  v43 = a2;
  v9 = sub_1D4922C70();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v41 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v39 = v2;
  v40 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40)
      break;
    v23 = v41;
    v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v40)
        goto LABEL_34;
      v24 = v41[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v40)
              goto LABEL_34;
            v24 = v41[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v42 + 72);
    v30 = *(_QWORD *)(v8 + 56) + v29 * v21;
    if ((v43 & 1) != 0)
    {
      sub_1D469C630(v30, (uint64_t)v7, type metadata accessor for LandmarkSignals);
    }
    else
    {
      sub_1D469C304(v30, (uint64_t)v7, type metadata accessor for LandmarkSignals);
      swift_bridgeObjectRetain();
    }
    sub_1D4922EF8();
    sub_1D49226D0();
    result = sub_1D4922F34();
    v31 = -1 << *(_BYTE *)(v10 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
    *v19 = v28;
    v19[1] = v27;
    result = sub_1D469C630((uint64_t)v7, *(_QWORD *)(v10 + 56) + v29 * v18, type metadata accessor for LandmarkSignals);
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v39;
  v23 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v8 + 32);
  if (v38 >= 64)
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v38;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1D47A4DBC(uint64_t a1, char a2)
{
  return sub_1D47A67D4(a1, a2, &qword_1ED98D308);
}

uint64_t sub_1D47A4DC8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t i;
  int v44;
  uint64_t v45;

  v3 = v2;
  v5 = sub_1D4921008();
  v45 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB740);
  v44 = a2;
  v9 = sub_1D4922C70();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v42 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v40 = v2;
  v41 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  for (i = v8; ; v8 = i)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v41)
      break;
    v23 = v42;
    v24 = v42[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v41)
        goto LABEL_34;
      v24 = v42[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v41)
        {
LABEL_34:
          swift_release();
          v3 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v42[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v41)
              goto LABEL_34;
            v24 = v42[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v45 + 72);
    v27 = *(_QWORD *)(v8 + 48) + v26 * v21;
    if ((v44 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v45 + 32))(v7, v27, v5);
      v28 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v21);
      v30 = *v28;
      v29 = v28[1];
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v7, v27, v5);
      v31 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v21);
      v30 = *v31;
      v29 = v31[1];
      swift_bridgeObjectRetain();
    }
    sub_1D4696EA4((unint64_t *)&qword_1EFEAA8D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E58]);
    result = sub_1D49225A4();
    v32 = -1 << *(_BYTE *)(v10 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v15 + 8 * v34);
      }
      while (v38 == -1);
      v18 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v45 + 32))(*(_QWORD *)(v10 + 48) + v26 * v18, v7, v5);
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 56) + 16 * v18);
    *v19 = v30;
    v19[1] = v29;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v40;
  v23 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v39 = 1 << *(_BYTE *)(v8 + 32);
  if (v39 >= 64)
    bzero(v23, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v39;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1D47A5174(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB758);
  v37 = a2;
  v6 = sub_1D4922C70();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1D4922EF8();
    sub_1D49226D0();
    result = sub_1D4922F34();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D47A5478(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;

  v3 = v2;
  v5 = type metadata accessor for StorefrontSignals(0);
  v38 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB750);
  v39 = a2;
  result = sub_1D4922C70();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v35 = v3;
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v37 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v36 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v19 = v18 | (v11 << 6);
      }
      else
      {
        v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = (uint64_t)v37;
        if (v20 >= v36)
          goto LABEL_34;
        v21 = v37[v20];
        ++v11;
        if (!v21)
        {
          v11 = v20 + 1;
          if (v20 + 1 >= v36)
            goto LABEL_34;
          v21 = v37[v11];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v36)
            {
LABEL_34:
              if ((v39 & 1) == 0)
              {
                result = swift_release();
                v3 = v35;
                goto LABEL_41;
              }
              v33 = 1 << *(_BYTE *)(v8 + 32);
              if (v33 >= 64)
                bzero(v37, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v33;
              v3 = v35;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v21 = v37[v22];
            if (!v21)
            {
              while (1)
              {
                v11 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v11 >= v36)
                  goto LABEL_34;
                v21 = v37[v11];
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v11 = v22;
          }
        }
LABEL_21:
        v15 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      v23 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v19);
      v24 = *(_QWORD *)(v38 + 72);
      v25 = *(_QWORD *)(v8 + 56) + v24 * v19;
      if ((v39 & 1) != 0)
        sub_1D469C630(v25, (uint64_t)v7, type metadata accessor for StorefrontSignals);
      else
        sub_1D469C304(v25, (uint64_t)v7, type metadata accessor for StorefrontSignals);
      result = sub_1D4922EEC();
      v26 = -1 << *(_BYTE *)(v10 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v17) = v23;
      result = sub_1D469C630((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24 * v17, type metadata accessor for StorefrontSignals);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v10;
  return result;
}

uint64_t sub_1D47A57A8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t *v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EBD0);
  result = sub_1D4922C70();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v34 = (uint64_t *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v9;
    v32 = v9;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v33)
          goto LABEL_33;
        v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v33)
            goto LABEL_33;
          v21 = v34[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero(v34, 8 * v33);
                else
                  *v34 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v21 = v34[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v19);
      v28 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v19);
      v29 = *v28;
      v30 = v28[1];
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_1D4922EEC();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v27;
      v17 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v16);
      *v17 = v29;
      v17[1] = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D47A5A5C(uint64_t a1, char a2)
{
  return sub_1D47A8088(a1, a2, &qword_1ED98EBC0);
}

uint64_t sub_1D47A5A68(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  char v19;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2D8);
  v19 = a2;
  v6 = sub_1D4922C70();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_28;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v5 + 64);
  v18 = (unint64_t)(v7 + 63) >> 6;
  swift_retain();
  if (v9)
  {
    v10 = __clz(__rbit64(v9));
    goto LABEL_18;
  }
  if (v18 <= 1)
  {
    swift_release();
    v11 = (_QWORD *)(v5 + 64);
    if ((v19 & 1) == 0)
      goto LABEL_28;
    goto LABEL_24;
  }
  v11 = (_QWORD *)(v5 + 64);
  v12 = *(_QWORD *)(v5 + 72);
  v13 = 1;
  if (v12)
    goto LABEL_17;
  v13 = 2;
  if (v18 <= 2)
    goto LABEL_21;
  v12 = *(_QWORD *)(v5 + 80);
  if (v12)
  {
LABEL_17:
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_18:
    v15 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v10);
    if ((v19 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1D4922EF8();
    __asm { BR              X8 }
  }
  v14 = 3;
  if (v18 > 3)
  {
    v12 = *(_QWORD *)(v5 + 88);
    if (v12)
    {
      v13 = 3;
      goto LABEL_17;
    }
    while (1)
    {
      v13 = v14 + 1;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
        JUMPOUT(0x1D47A5E5CLL);
      }
      if (v13 >= v18)
        break;
      v12 = *(_QWORD *)(v5 + 64 + 8 * v13);
      ++v14;
      if (v12)
        goto LABEL_17;
    }
  }
LABEL_21:
  swift_release();
  if ((v19 & 1) == 0)
    goto LABEL_28;
LABEL_24:
  v16 = 1 << *(_BYTE *)(v5 + 32);
  if (v16 >= 64)
    bzero(v11, ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v11 = -1 << v16;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_28:
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1D47A5E78(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  int v40;

  v3 = v2;
  v5 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig(0);
  v39 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB78);
  v40 = a2;
  v9 = sub_1D4922C70();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v38 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v36 = v2;
  v37 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37)
      break;
    v22 = v38;
    v23 = v38[v21];
    ++v17;
    if (!v23)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v37)
        goto LABEL_34;
      v23 = v38[v17];
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          v3 = v36;
          if ((v40 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = v38[v24];
        if (!v23)
        {
          while (1)
          {
            v17 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v17 >= v37)
              goto LABEL_34;
            v23 = v38[v17];
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v17 = v24;
      }
    }
LABEL_21:
    v14 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    v25 = *(_BYTE *)(*(_QWORD *)(v8 + 48) + v20);
    v26 = *(_QWORD *)(v39 + 72);
    v27 = *(_QWORD *)(v8 + 56) + v26 * v20;
    if ((v40 & 1) != 0)
      sub_1D469C630(v27, (uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
    else
      sub_1D469C304(v27, (uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
    sub_1D4922EF8();
    sub_1D46F8BC8(v25);
    sub_1D49226D0();
    swift_bridgeObjectRelease();
    result = sub_1D4922F34();
    v28 = -1 << *(_BYTE *)(v10 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_BYTE *)(*(_QWORD *)(v10 + 48) + v18) = v25;
    result = sub_1D469C630((uint64_t)v7, *(_QWORD *)(v10 + 56) + v26 * v18, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v36;
  v22 = v38;
  if ((v40 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v8 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1D47A61FC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB80);
  v6 = sub_1D4922C70();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_38;
  v32 = a2;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v2;
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      return result;
    }
    if (v18 >= v11)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_31;
      v20 = *(_QWORD *)(v34 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_31:
          swift_release();
          v3 = v33;
          if ((v32 & 1) == 0)
            goto LABEL_38;
          goto LABEL_34;
        }
        v20 = *(_QWORD *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_40;
            if (v14 >= v11)
              goto LABEL_31;
            v20 = *(_QWORD *)(v34 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v17);
    v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
    sub_1D4922EF8();
    sub_1D46F8BC8(v22);
    sub_1D49226D0();
    swift_bridgeObjectRelease();
    result = sub_1D4922F34();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v15) = v22;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v15) = v23;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v33;
  v19 = (_QWORD *)(v5 + 64);
  if ((v32 & 1) == 0)
    goto LABEL_38;
LABEL_34:
  v31 = 1 << *(_BYTE *)(v5 + 32);
  if (v31 >= 64)
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v31;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_38:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D47A64F4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  int64_t v35;
  uint64_t *v36;
  __int128 v37;
  __int128 v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB7B8);
  result = sub_1D4922C70();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = a2;
    v8 = 0;
    v36 = (uint64_t *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v9;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v33 = 1 << *(_BYTE *)(v5 + 32);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v17 >= v35)
          goto LABEL_31;
        v18 = v36[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v35)
            goto LABEL_31;
          v18 = v36[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v35)
            {
LABEL_31:
              if ((v34 & 1) != 0)
              {
                if (v33 >= 64)
                  bzero(v36, 8 * v35);
                else
                  *v36 = v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v18 = v36[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_39;
                if (v8 >= v35)
                  goto LABEL_31;
                v18 = v36[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
      v21 = *(_QWORD *)(v5 + 56) + 56 * v16;
      v22 = *(_QWORD *)(v21 + 48);
      v37 = *(_OWORD *)(v21 + 16);
      v38 = *(_OWORD *)(v21 + 32);
      v23 = *(_DWORD *)(v21 + 8);
      v24 = *(_QWORD *)v21;
      result = sub_1D4922EEC();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v13 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v13) = v20;
      v14 = *(_QWORD *)(v7 + 56) + 56 * v13;
      *(_QWORD *)v14 = v24;
      *(_DWORD *)(v14 + 8) = v23;
      *(_OWORD *)(v14 + 16) = v37;
      *(_OWORD *)(v14 + 32) = v38;
      *(_QWORD *)(v14 + 48) = v22;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D47A67D4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_1D4922C70();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1D4922EF8();
    sub_1D49226D0();
    result = sub_1D4922F34();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1D47A6AE4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _QWORD *v18;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2D0);
  v6 = sub_1D4922C70();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_26;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v18 = (_QWORD *)(v5 + 64);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v5 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  swift_retain();
  if (v9)
  {
    v11 = __clz(__rbit64(v9));
    goto LABEL_18;
  }
  if (v10 > 1)
  {
    v12 = *(_QWORD *)(v5 + 72);
    v13 = 1;
    if (v12)
      goto LABEL_17;
    v13 = 2;
    if (v10 > 2)
    {
      v12 = *(_QWORD *)(v5 + 80);
      if (!v12)
      {
        v14 = 3;
        if (v10 > 3)
        {
          v12 = *(_QWORD *)(v5 + 88);
          if (v12)
          {
            v13 = 3;
            goto LABEL_17;
          }
          while (1)
          {
            v13 = v14 + 1;
            if (__OFADD__(v14, 1))
            {
              __break(1u);
              JUMPOUT(0x1D47A6E9CLL);
            }
            if (v13 >= v10)
              break;
            v12 = v18[v13];
            ++v14;
            if (v12)
              goto LABEL_17;
          }
        }
        goto LABEL_21;
      }
LABEL_17:
      v11 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_18:
      v15 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v11);
      if ((a2 & 1) == 0)
        swift_unknownObjectRetain();
      sub_1D4922EF8();
      __asm { BR              X8 }
    }
  }
LABEL_21:
  swift_release();
  v3 = v2;
  if ((a2 & 1) != 0)
  {
    v16 = 1 << *(_BYTE *)(v5 + 32);
    if (v16 >= 64)
      bzero(v18, ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v18 = -1 << v16;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_26:
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1D47A6EB8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  int v24;
  uint64_t *v25;
  const char *v26;
  int64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v31 = sub_1D4920F18();
  v5 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2E8);
  v9 = sub_1D4922C70();
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_29;
  v25 = v2;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  v11 = *(_QWORD *)(v8 + 64);
  v28 = (_QWORD *)(v8 + 64);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v27 = (unint64_t)(v10 + 63) >> 6;
  swift_retain();
  v24 = a2;
  if ((a2 & 1) != 0)
    v14 = 32;
  else
    v14 = 16;
  v29 = "orld";
  v30 = v14;
  v26 = "animalsMapping";
  if (v13)
  {
    v15 = __clz(__rbit64(v13));
    goto LABEL_21;
  }
  if (v27 <= 1)
  {
    swift_release();
    v3 = v25;
    v16 = v28;
    if ((v24 & 1) == 0)
      goto LABEL_29;
    goto LABEL_25;
  }
  v16 = v28;
  v17 = v28[1];
  v18 = 1;
  if (v17)
    goto LABEL_20;
  v18 = 2;
  if (v27 <= 2)
    goto LABEL_22;
  v17 = v28[2];
  if (v17)
  {
LABEL_20:
    v15 = __clz(__rbit64(v17)) + (v18 << 6);
LABEL_21:
    v20 = *(unsigned __int8 *)(*(_QWORD *)(v8 + 48) + v15);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + v30))(v7, *(_QWORD *)(v8 + 56) + *(_QWORD *)(v5 + 72) * v15, v31);
    sub_1D4922EF8();
    __asm { BR              X8 }
  }
  v19 = 3;
  if (v27 > 3)
  {
    v17 = v28[3];
    if (v17)
    {
      v18 = 3;
      goto LABEL_20;
    }
    while (1)
    {
      v18 = v19 + 1;
      if (__OFADD__(v19, 1))
      {
        __break(1u);
        JUMPOUT(0x1D47A7368);
      }
      if (v18 >= v27)
        break;
      v17 = v28[v18];
      ++v19;
      if (v17)
        goto LABEL_20;
    }
  }
LABEL_22:
  swift_release();
  v3 = v25;
  if ((v24 & 1) == 0)
    goto LABEL_29;
LABEL_25:
  v21 = 1 << *(_BYTE *)(v8 + 32);
  if (v21 >= 64)
    bzero(v16, ((unint64_t)(v21 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v16 = -1 << v21;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_29:
  result = swift_release();
  *v3 = v9;
  return result;
}

uint64_t sub_1D47A7394(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t *v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EBE0);
  result = sub_1D4922C70();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v34 = (uint64_t *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v9;
    v32 = v9;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v33)
          goto LABEL_33;
        v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v33)
            goto LABEL_33;
          v21 = v34[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero(v34, 8 * v33);
                else
                  *v34 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v21 = v34[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(unsigned int *)(*(_QWORD *)(v5 + 48) + 4 * v19);
      v28 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v19);
      v29 = *v28;
      v30 = v28[1];
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = MEMORY[0x1D8262250](*(_QWORD *)(v7 + 40), v27, 4);
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v16) = v27;
      v17 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v16);
      *v17 = v29;
      v17[1] = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D47A764C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_1D4920FD8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB768);
  v42 = a2;
  v10 = sub_1D4922C70();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_retain();
    }
    sub_1D4696EA4(&qword_1EFEAB770, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1D49225A4();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1D47A79E0(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  int v41;
  __int128 v42;

  v5 = v3;
  v7 = sub_1D4920FD8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v41 = a2;
  v12 = sub_1D4922C70();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v40 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v38 = v3;
  v39 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  while (1)
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v39)
      break;
    v25 = v40;
    v26 = v40[v24];
    ++v20;
    if (!v26)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v39)
        goto LABEL_34;
      v26 = v40[v20];
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v39)
        {
LABEL_34:
          swift_release();
          v5 = v38;
          if ((v41 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v26 = v40[v27];
        if (!v26)
        {
          while (1)
          {
            v20 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_43;
            if (v20 >= v39)
              goto LABEL_34;
            v26 = v40[v20];
            ++v27;
            if (v26)
              goto LABEL_21;
          }
        }
        v20 = v27;
      }
    }
LABEL_21:
    v17 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    v28 = *(_QWORD *)(v8 + 72);
    v29 = *(_QWORD *)(v11 + 48) + v28 * v23;
    if ((v41 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v29, v7);
      v42 = *(_OWORD *)(*(_QWORD *)(v11 + 56) + 16 * v23);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v29, v7);
      v42 = *(_OWORD *)(*(_QWORD *)(v11 + 56) + 16 * v23);
      swift_retain();
    }
    sub_1D4696EA4(&qword_1EFEAB770, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1D49225A4();
    v30 = -1 << *(_BYTE *)(v13 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v18 + 8 * (v31 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v18 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v18 + 8 * v32);
      }
      while (v36 == -1);
      v21 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v28 * v21, v10, v7);
    *(_OWORD *)(*(_QWORD *)(v13 + 56) + 16 * v21) = v42;
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v5 = v38;
  v25 = v40;
  if ((v41 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v37 = 1 << *(_BYTE *)(v11 + 32);
  if (v37 >= 64)
    bzero(v25, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v37;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v5 = v13;
  return result;
}

uint64_t sub_1D47A7D7C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  char v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2C0);
  v34 = a2;
  v6 = sub_1D4922C70();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v32 = v2;
  v33 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_31;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v33 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_33;
      v23 = *(_QWORD *)(v33 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v32;
          if ((v34 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v33 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v23 = *(_QWORD *)(v33 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v14 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_31:
    v29 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v20);
    v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v34 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1D4922EF8();
    sub_1D46F8BC8(v29);
    sub_1D49226D0();
    swift_bridgeObjectRelease();
    result = sub_1D4922F34();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v17 == v26;
        if (v17 == v26)
          v17 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v28 == -1);
      v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v18) = v29;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v18) = v30;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v32;
  v22 = (_QWORD *)(v5 + 64);
  if ((v34 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v31 = 1 << *(_BYTE *)(v5 + 32);
  if (v31 >= 64)
    bzero(v22, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v31;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D47A8088(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v39 = a2;
  v7 = sub_1D4922C70();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v34 = v33;
    }
    sub_1D4922EF8();
    sub_1D49226D0();
    result = sub_1D4922F34();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v23 = (_QWORD *)(v6 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

void sub_1D47A8390(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  double *v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32[2];
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EBA8);
  v6 = (_QWORD *)sub_1D4922C70();
  if (*(_QWORD *)(v5 + 16))
  {
    v29 = v3;
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    swift_retain();
    v12 = 0;
    while (1)
    {
      if (v10)
      {
        v13 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v14 = v13 | (v12 << 6);
      }
      else
      {
        v15 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v15 >= v11)
          goto LABEL_22;
        v16 = v8[v15];
        ++v12;
        if (!v16)
        {
          v12 = v15 + 1;
          if (v15 + 1 >= v11)
            goto LABEL_22;
          v16 = v8[v12];
          if (!v16)
          {
            v17 = v15 + 2;
            if (v17 >= v11)
            {
LABEL_22:
              swift_release();
              v3 = v29;
              if ((a2 & 1) != 0)
              {
                v28 = 1 << *(_BYTE *)(v5 + 32);
                if (v28 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v28;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v16 = v8[v17];
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_29;
                if (v12 >= v11)
                  goto LABEL_22;
                v16 = v8[v12];
                ++v17;
                if (v16)
                  goto LABEL_19;
              }
            }
            v12 = v17;
          }
        }
LABEL_19:
        v10 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v12 << 6);
      }
      v18 = (double *)(*(_QWORD *)(v5 + 48) + 32 * v14);
      v19 = *v18;
      v20 = v18[1];
      v22 = v18[2];
      v21 = v18[3];
      v23 = *(_QWORD *)(v5 + 56) + 48 * v14;
      v25 = *(_OWORD *)v23;
      v24 = *(_OWORD *)(v23 + 16);
      v27 = *(_QWORD *)(v23 + 32);
      v26 = *(_QWORD *)(v23 + 40);
      if ((a2 & 1) == 0)
      {
        v30 = *(_OWORD *)v23;
        v31 = *(_OWORD *)(v23 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v25 = v30;
        v24 = v31;
      }
      v32[0] = v25;
      v32[1] = v24;
      v33 = v27;
      v34 = v26;
      sub_1D47AC4A4(v32, v6, v19, v20, v22, v21);
    }
  }
  swift_release();
  *v3 = v6;
}

unint64_t sub_1D47A85C8(uint64_t a1, char a2)
{
  return sub_1D47A9810(a1, a2, &qword_1ED98D2E0);
}

unint64_t sub_1D47A85D4(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB7C8);
  v6 = (_QWORD *)sub_1D4922C70();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v15 = v14 | (v13 << 6);
      }
      else
      {
        v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_27:
          __break(1u);
          return result;
        }
        if (v16 >= v11)
          goto LABEL_20;
        v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          v13 = v16 + 1;
          if (v16 + 1 >= v11)
            goto LABEL_20;
          v17 = v8[v13];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_20:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v19 = 1 << *(_BYTE *)(v5 + 32);
                if (v19 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v19;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                v13 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_27;
                if (v13 >= v11)
                  goto LABEL_20;
                v17 = v8[v13];
                ++v18;
                if (v17)
                  goto LABEL_19;
              }
            }
            v13 = v18;
          }
        }
LABEL_19:
        v10 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      result = sub_1D47AC61C(*(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v15), v6, *(double *)(*(_QWORD *)(v5 + 48) + 24 * v15), *(double *)(*(_QWORD *)(v5 + 48) + 24 * v15 + 8), *(double *)(*(_QWORD *)(v5 + 48) + 24 * v15 + 16));
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1D47A87A8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t i;
  char v38;
  char v39;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2B8);
  v38 = a2;
  v6 = sub_1D4922C70();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v20 = v19 | (v13 << 6);
      }
      else
      {
        v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v35)
          goto LABEL_33;
        v22 = v36[v21];
        ++v13;
        if (!v22)
        {
          v13 = v21 + 1;
          if (v21 + 1 >= v35)
            goto LABEL_33;
          v22 = v36[v13];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v38 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v36[v23];
            if (!v22)
            {
              while (1)
              {
                v13 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_40;
                if (v13 >= v35)
                  goto LABEL_33;
                v22 = v36[v13];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v13 = v23;
          }
        }
LABEL_30:
        v10 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      v28 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v20);
      v29 = *(_QWORD *)(v5 + 56) + 40 * v20;
      v31 = *(_QWORD *)v29;
      v30 = *(_QWORD *)(v29 + 8);
      v32 = *(_QWORD *)(v29 + 16);
      v33 = *(_QWORD *)(v29 + 24);
      v39 = *(_BYTE *)(v29 + 32);
      if ((v38 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1D4922EF8();
      sub_1D46F8BC8(v28);
      sub_1D49226D0();
      swift_bridgeObjectRelease();
      result = sub_1D4922F34();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v17) = v28;
      v18 = *(_QWORD *)(v7 + 56) + 40 * v17;
      *(_QWORD *)v18 = v31;
      *(_QWORD *)(v18 + 8) = v30;
      *(_QWORD *)(v18 + 16) = v32;
      *(_QWORD *)(v18 + 24) = v33;
      *(_BYTE *)(v18 + 32) = v39;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D47A8AEC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB88);
  v6 = sub_1D4922C70();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_28;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v5 + 64);
  v18 = (unint64_t)(v7 + 63) >> 6;
  swift_retain();
  if (v9)
  {
    v10 = __clz(__rbit64(v9));
    goto LABEL_18;
  }
  if (v18 <= 1)
  {
    swift_release();
    v11 = (_QWORD *)(v5 + 64);
    if ((a2 & 1) == 0)
      goto LABEL_28;
    goto LABEL_24;
  }
  v11 = (_QWORD *)(v5 + 64);
  v12 = *(_QWORD *)(v5 + 72);
  v13 = 1;
  if (v12)
    goto LABEL_17;
  v13 = 2;
  if (v18 <= 2)
    goto LABEL_21;
  v12 = *(_QWORD *)(v5 + 80);
  if (v12)
  {
LABEL_17:
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_18:
    v15 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v10);
    if ((a2 & 1) == 0)
      swift_retain();
    sub_1D4922EF8();
    __asm { BR              X8 }
  }
  v14 = 3;
  if (v18 > 3)
  {
    v12 = *(_QWORD *)(v5 + 88);
    if (v12)
    {
      v13 = 3;
      goto LABEL_17;
    }
    while (1)
    {
      v13 = v14 + 1;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
        JUMPOUT(0x1D47A8EB4);
      }
      if (v13 >= v18)
        break;
      v12 = *(_QWORD *)(v5 + 64 + 8 * v13);
      ++v14;
      if (v12)
        goto LABEL_17;
    }
  }
LABEL_21:
  swift_release();
  if ((a2 & 1) == 0)
    goto LABEL_28;
LABEL_24:
  v16 = 1 << *(_BYTE *)(v5 + 32);
  if (v16 >= 64)
    bzero(v11, ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v11 = -1 << v16;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_28:
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1D47A8ED0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98AED8);
  v37 = a2;
  v6 = sub_1D4922C70();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1D4922EF8();
    sub_1D49226D0();
    result = sub_1D4922F34();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D47A91D8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  unsigned __int8 v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2C8);
  v6 = sub_1D4922C70();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_38;
  v32 = a2;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v2;
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      return result;
    }
    if (v18 >= v11)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_31;
      v20 = *(_QWORD *)(v34 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_31:
          swift_release();
          v3 = v33;
          if ((v32 & 1) == 0)
            goto LABEL_38;
          goto LABEL_34;
        }
        v20 = *(_QWORD *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_40;
            if (v14 >= v11)
              goto LABEL_31;
            v20 = *(_QWORD *)(v34 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v17);
    v23 = *(_DWORD *)(*(_QWORD *)(v5 + 56) + 4 * v17);
    sub_1D4922EF8();
    sub_1D46F8BC8(v22);
    sub_1D49226D0();
    swift_bridgeObjectRelease();
    result = sub_1D4922F34();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v15) = v22;
    *(_DWORD *)(*(_QWORD *)(v7 + 56) + 4 * v15) = v23;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v33;
  v19 = (_QWORD *)(v5 + 64);
  if ((v32 & 1) == 0)
    goto LABEL_38;
LABEL_34:
  v31 = 1 << *(_BYTE *)(v5 + 32);
  if (v31 >= 64)
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v31;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_38:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D47A94D0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  uint64_t v34;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v7 = sub_1D4922C70();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v34 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v32 = v3;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v18 >= v33)
      break;
    v19 = (_QWORD *)(v6 + 64);
    v20 = *(_QWORD *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v34 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v33)
        {
LABEL_33:
          swift_release();
          v4 = v32;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v20 = *(_QWORD *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_42;
            if (v14 >= v33)
              goto LABEL_33;
            v20 = *(_QWORD *)(v34 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v11 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(_BYTE *)(*(_QWORD *)(v6 + 48) + v17);
    v23 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v17);
    if ((a2 & 1) == 0)
      swift_retain();
    sub_1D4922EF8();
    sub_1D49226D0();
    swift_bridgeObjectRelease();
    result = sub_1D4922F34();
    v24 = -1 << *(_BYTE *)(v8 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_BYTE *)(*(_QWORD *)(v8 + 48) + v15) = v22;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v15) = v23;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v32;
  v19 = (_QWORD *)(v6 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v31 = 1 << *(_BYTE *)(v6 + 32);
  if (v31 >= 64)
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v31;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

unint64_t sub_1D47A9804(uint64_t a1, char a2)
{
  return sub_1D47A9810(a1, a2, &qword_1EFEAB778);
}

unint64_t sub_1D47A9810(uint64_t a1, char a2, uint64_t *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  double *v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  uint64_t v25;
  uint64_t v26;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v7 = (_QWORD *)sub_1D4922C70();
  if (*(_QWORD *)(v6 + 16))
  {
    v8 = 1 << *(_BYTE *)(v6 + 32);
    v9 = (_QWORD *)(v6 + 64);
    v10 = -1;
    if (v8 < 64)
      v10 = ~(-1 << v8);
    v11 = v10 & *(_QWORD *)(v6 + 64);
    v12 = (unint64_t)(v8 + 63) >> 6;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v14 << 6);
      }
      else
      {
        v17 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v17 >= v12)
          goto LABEL_22;
        v18 = v9[v17];
        ++v14;
        if (!v18)
        {
          v14 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_22;
          v18 = v9[v14];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_22:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v26 = 1 << *(_BYTE *)(v6 + 32);
                if (v26 > 63)
                  bzero((void *)(v6 + 64), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v9 = -1 << v26;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v18 = v9[v19];
            if (!v18)
            {
              while (1)
              {
                v14 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_29;
                if (v14 >= v12)
                  goto LABEL_22;
                v18 = v9[v14];
                ++v19;
                if (v18)
                  goto LABEL_19;
              }
            }
            v14 = v19;
          }
        }
LABEL_19:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v14 << 6);
      }
      v20 = (double *)(*(_QWORD *)(v6 + 48) + 32 * v16);
      v22 = *v20;
      v21 = v20[1];
      v24 = v20[2];
      v23 = v20[3];
      v25 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v16);
      if ((a2 & 1) == 0)
        v25 = swift_bridgeObjectRetain();
      result = sub_1D47AC710(v25, v7, v22, v21, v24, v23);
    }
  }
  result = swift_release();
  *v4 = v7;
  return result;
}

uint64_t sub_1D47A9A00(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EBB0);
  v36 = a2;
  v6 = sub_1D4922C70();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1D4922EF8();
    sub_1D49226D0();
    result = sub_1D4922F34();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D47A9D14(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  _QWORD *v19;
  char v20;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v20 = a2;
  v7 = sub_1D4922C70();
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_26;
  v8 = 1 << *(_BYTE *)(v6 + 32);
  v19 = (_QWORD *)(v6 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v6 + 64);
  v18 = (unint64_t)(v8 + 63) >> 6;
  swift_retain();
  if (v10)
  {
    v11 = __clz(__rbit64(v10));
    goto LABEL_18;
  }
  if (v18 > 1)
  {
    v12 = *(_QWORD *)(v6 + 72);
    v13 = 1;
    if (v12)
      goto LABEL_17;
    v13 = 2;
    if (v18 > 2)
    {
      v12 = *(_QWORD *)(v6 + 80);
      if (!v12)
      {
        v14 = 3;
        if (v18 > 3)
        {
          v12 = *(_QWORD *)(v6 + 88);
          if (v12)
          {
            v13 = 3;
            goto LABEL_17;
          }
          while (1)
          {
            v13 = v14 + 1;
            if (__OFADD__(v14, 1))
            {
              __break(1u);
              JUMPOUT(0x1D47AA0B4);
            }
            if (v13 >= v18)
              break;
            v12 = v19[v13];
            ++v14;
            if (v12)
              goto LABEL_17;
          }
        }
        goto LABEL_21;
      }
LABEL_17:
      v11 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_18:
      v15 = *(unsigned __int8 *)(*(_QWORD *)(v6 + 48) + v11);
      if ((v20 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1D4922EF8();
      __asm { BR              X8 }
    }
  }
LABEL_21:
  swift_release();
  v4 = v3;
  if ((v20 & 1) != 0)
  {
    v16 = 1 << *(_BYTE *)(v6 + 32);
    if (v16 >= 64)
      bzero(v19, ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v19 = -1 << v16;
    *(_QWORD *)(v6 + 16) = 0;
  }
LABEL_26:
  result = swift_release();
  *v4 = v7;
  return result;
}

uint64_t sub_1D47AA0C8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98F368);
  v6 = sub_1D4922C70();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_38;
  v32 = a2;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v2;
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      return result;
    }
    if (v18 >= v11)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_31;
      v20 = *(_QWORD *)(v34 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_31:
          swift_release();
          v3 = v33;
          if ((v32 & 1) == 0)
            goto LABEL_38;
          goto LABEL_34;
        }
        v20 = *(_QWORD *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_40;
            if (v14 >= v11)
              goto LABEL_31;
            v20 = *(_QWORD *)(v34 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v17);
    v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
    sub_1D4922EF8();
    sub_1D48BE504(v22);
    sub_1D49226D0();
    swift_bridgeObjectRelease();
    result = sub_1D4922F34();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v15) = v22;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v15) = v23;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v33;
  v19 = (_QWORD *)(v5 + 64);
  if ((v32 & 1) == 0)
    goto LABEL_38;
LABEL_34:
  v31 = 1 << *(_BYTE *)(v5 + 32);
  if (v31 >= 64)
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v31;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_38:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D47AA3C0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98F360);
  v37 = a2;
  v6 = sub_1D4922C70();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v20);
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v20);
    v31 = *v30;
    v32 = v30[1];
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1D4922EF8();
    sub_1D48BE504(v29);
    sub_1D49226D0();
    swift_bridgeObjectRelease();
    result = sub_1D4922F34();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v17) = v29;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v17);
    *v18 = v31;
    v18[1] = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D47AA6E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1D47CA4DC(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1D47ACE0C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_release();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1D47A2B84(v15, a4 & 1);
  v21 = sub_1D47CA4DC(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1D4922E8C();
  __break(1u);
  return result;
}

uint64_t sub_1D47AA83C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_1D47CA4DC(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1D47AD690();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_bridgeObjectRelease();
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1D47A3BFC(v17, a5 & 1);
  v23 = sub_1D47CA4DC(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1D4922E8C();
  __break(1u);
  return result;
}

uint64_t sub_1D47AA9B0(uint64_t a1, char a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  char v27;

  v7 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_1D47CA748(a3, a4, a5, a6);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= v19 && (a2 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = v22[7];
        v24 = type metadata accessor for VisualUnderstanding.ImageRegion();
        return sub_1D47B1120(a1, v23 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * v16, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      }
      return sub_1D47AC874(v16, a1, v22, a3, a4, a5, a6);
    }
    if (v21 >= v19 && (a2 & 1) == 0)
    {
      sub_1D47AD848();
      goto LABEL_7;
    }
    sub_1D47A3F20(v19, a2 & 1);
    v26 = sub_1D47CA748(a3, a4, a5, a6);
    if ((v20 & 1) == (v27 & 1))
    {
      v16 = v26;
      v22 = *v7;
      if ((v20 & 1) != 0)
        goto LABEL_8;
      return sub_1D47AC874(v16, a1, v22, a3, a4, a5, a6);
    }
  }
  result = sub_1D4922E8C();
  __break(1u);
  return result;
}

uint64_t sub_1D47AAB04(uint64_t a1, uint64_t a2, char a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t result;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  char v26;
  double *v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;

  v8 = v7;
  v16 = *v7;
  v18 = sub_1D47CA748(a4, a5, a6, a7);
  v19 = *(_QWORD *)(v16 + 16);
  v20 = (v17 & 1) == 0;
  result = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v22 = v17;
  v23 = *(_QWORD *)(v16 + 24);
  if (v23 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v23 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1D47ADC38();
LABEL_7:
    v24 = (_QWORD *)*v8;
    if ((v22 & 1) != 0)
    {
LABEL_8:
      v25 = (_QWORD *)(v24[7] + 16 * v18);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *v25 = a1;
      v25[1] = a2;
      return result;
    }
LABEL_11:
    v24[(v18 >> 6) + 8] |= 1 << v18;
    v27 = (double *)(v24[6] + 32 * v18);
    *v27 = a4;
    v27[1] = a5;
    v27[2] = a6;
    v27[3] = a7;
    v28 = (_QWORD *)(v24[7] + 16 * v18);
    *v28 = a1;
    v28[1] = a2;
    v29 = v24[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (!v30)
    {
      v24[2] = v31;
      return result;
    }
    goto LABEL_14;
  }
  sub_1D47A4828(result, a3 & 1);
  result = sub_1D47CA748(a4, a5, a6, a7);
  if ((v22 & 1) == (v26 & 1))
  {
    v18 = result;
    v24 = (_QWORD *)*v8;
    if ((v22 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1D4922E8C();
  __break(1u);
  return result;
}

uint64_t sub_1D47AAC74(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1D47AB078(a1, a2, a3, a4, &qword_1ED98D308);
}

uint64_t sub_1D47AAC80(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1D47D1618(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = type metadata accessor for StorefrontSignals(0);
        return sub_1D47B1120(a1, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, type metadata accessor for StorefrontSignals);
      }
      return sub_1D47AC998(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1D47AE46C();
      goto LABEL_7;
    }
    sub_1D47A5478(v13, a3 & 1);
    v20 = sub_1D47D1618(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1D47AC998(v10, a2, a1, v16);
    }
  }
  result = sub_1D4922E8C();
  __break(1u);
  return result;
}

uint64_t sub_1D47AADA8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v6 = v5;
  v12 = *v5;
  v14 = sub_1D47CA850(a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= result && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= result && (a5 & 1) == 0)
  {
    result = (uint64_t)sub_1D47AE850();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7] + 24 * v14;
      result = swift_bridgeObjectRelease();
      *(_QWORD *)v21 = a1;
      *(_QWORD *)(v21 + 8) = a2;
      *(_BYTE *)(v21 + 16) = a3;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    *(_BYTE *)(v20[6] + v14) = a4;
    v23 = v20[7] + 24 * v14;
    *(_QWORD *)v23 = a1;
    *(_QWORD *)(v23 + 8) = a2;
    *(_BYTE *)(v23 + 16) = a3;
    v24 = v20[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v20[2] = v26;
      return result;
    }
    goto LABEL_14;
  }
  sub_1D47A5A68(result, a5 & 1);
  result = sub_1D47CA850(a4);
  if ((v18 & 1) == (v22 & 1))
  {
    v14 = result;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1D4922E8C();
  __break(1u);
  return result;
}

uint64_t sub_1D47AAF00(uint64_t a1, unsigned __int8 a2, char a3)
{
  return sub_1D47ABB58(a1, a2, a3, &qword_1ED98EBA0);
}

uint64_t sub_1D47AAF0C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1D47CA710(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1D47AEDB8();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7] + 56 * v10;
      v18 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)v17 = *(_OWORD *)a1;
      *(_OWORD *)(v17 + 16) = v18;
      *(_OWORD *)(v17 + 32) = *(_OWORD *)(a1 + 32);
      *(_QWORD *)(v17 + 48) = *(_QWORD *)(a1 + 48);
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_QWORD *)(v16[6] + 8 * v10) = a2;
    v20 = v16[7] + 56 * v10;
    v21 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)v20 = *(_OWORD *)a1;
    *(_OWORD *)(v20 + 16) = v21;
    *(_OWORD *)(v20 + 32) = *(_OWORD *)(a1 + 32);
    *(_QWORD *)(v20 + 48) = *(_QWORD *)(a1 + 48);
    v22 = v16[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v16[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1D47A64F4(result, a3 & 1);
  result = sub_1D47CA710(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1D4922E8C();
  __break(1u);
  return result;
}

uint64_t sub_1D47AB06C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1D47AB078(a1, a2, a3, a4, &qword_1ED98D300);
}

uint64_t sub_1D47AB078(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v7 = v5;
  v12 = *v5;
  v14 = sub_1D47CA4DC(a2, a3);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_1D47AEF6C(a5);
LABEL_7:
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a2;
    v25[1] = a3;
    *(_QWORD *)(v20[7] + 8 * v14) = a1;
    v26 = v20[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v20[2] = v28;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1D47A67D4(v17, a4 & 1, a5);
  v23 = sub_1D47CA4DC(a2, a3);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1D4922E8C();
  __break(1u);
  return result;
}

uint64_t sub_1D47AB1EC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1D47CA6B4(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = sub_1D4920F18();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_1D47ACA24(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1D47AF2BC();
      goto LABEL_7;
    }
    sub_1D47A6EB8(v13, a3 & 1);
    v20 = sub_1D47CA6B4(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1D47ACA24(v10, a2, a1, v16);
    }
  }
  result = sub_1D4922E8C();
  __break(1u);
  return result;
}

uint64_t sub_1D47AB310(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_1D4920FD8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1D47CA9F4(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_release();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1D47AF684();
    goto LABEL_7;
  }
  sub_1D47A764C(v17, a3 & 1);
  v23 = sub_1D47CA9F4(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_1D4922E8C();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1D47ACAB0(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1D47AB46C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1D47AB608(a1, a2, a3, a4, &qword_1EFEAB7A0);
}

uint64_t sub_1D47AB478(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1D47AB608(a1, a2, a3, a4, &qword_1EFEAB798);
}

uint64_t sub_1D47AB484(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1D47AB608(a1, a2, a3, a4, &qword_1EFEAB790);
}

void sub_1D47AB490(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1D47CA4DC(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1D47AFA78(&qword_1ED98EBC8);
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_1D47A8088(v15, a4 & 1, &qword_1ED98EBC8);
  v20 = sub_1D47CA4DC(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1D4922E8C();
  __break(1u);
}

uint64_t sub_1D47AB5FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1D47AB608(a1, a2, a3, a4, &qword_1EFEAB760);
}

uint64_t sub_1D47AB608(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  _QWORD *v5;
  _QWORD **v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t result;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;

  v7 = (_QWORD **)v5;
  v28 = a1;
  v29 = a2;
  v10 = sub_1D4920FD8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)*v5;
  v16 = sub_1D47CA9F4(a3);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_14;
  }
  v20 = v15;
  v21 = v14[3];
  if (v21 >= v19 && (a4 & 1) != 0)
  {
LABEL_7:
    v22 = *v7;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = (_QWORD *)(v22[7] + 16 * v16);
      result = swift_release();
      v25 = v29;
      *v23 = v28;
      v23[1] = v25;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a4 & 1) == 0)
  {
    sub_1D47AFC2C(a5);
    goto LABEL_7;
  }
  sub_1D47A79E0(v19, a4 & 1, a5);
  v26 = sub_1D47CA9F4(a3);
  if ((v20 & 1) != (v27 & 1))
  {
LABEL_14:
    result = sub_1D4922E8C();
    __break(1u);
    return result;
  }
  v16 = v26;
  v22 = *v7;
  if ((v20 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  return sub_1D47ACB48(v16, (uint64_t)v13, v28, v29, v22);
}

_OWORD *sub_1D47AB77C(__int128 *a1, char a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  _OWORD *result;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  char v23;
  double *v24;
  _OWORD *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;

  v7 = v6;
  v14 = *v6;
  v16 = sub_1D47CA748(a3, a4, a5, a6);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  result = (_OWORD *)(v17 + v18);
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= (uint64_t)result && (a2 & 1) != 0)
    goto LABEL_7;
  if (v21 >= (uint64_t)result && (a2 & 1) == 0)
  {
    result = sub_1D47AFE68();
LABEL_7:
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
      return sub_1D47B10A4(a1, (_OWORD *)(v22[7] + 48 * v16));
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v24 = (double *)(v22[6] + 32 * v16);
    *v24 = a3;
    v24[1] = a4;
    v24[2] = a5;
    v24[3] = a6;
    v25 = (_OWORD *)(v22[7] + 48 * v16);
    v26 = *a1;
    v27 = a1[2];
    v25[1] = a1[1];
    v25[2] = v27;
    *v25 = v26;
    v28 = v22[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (!v29)
    {
      v22[2] = v30;
      return result;
    }
    goto LABEL_14;
  }
  sub_1D47A8390((uint64_t)result, a2 & 1);
  result = (_OWORD *)sub_1D47CA748(a3, a4, a5, a6);
  if ((v20 & 1) == (v23 & 1))
  {
    v16 = (unint64_t)result;
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
      return sub_1D47B10A4(a1, (_OWORD *)(v22[7] + 48 * v16));
    goto LABEL_11;
  }
LABEL_15:
  result = (_OWORD *)sub_1D4922E8C();
  __break(1u);
  return result;
}

uint64_t sub_1D47AB8FC(int a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1D47CA6C8(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1D47B0554();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_DWORD *)(v16[7] + 4 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_DWORD *)(v16[7] + 4 * v10) = a1;
    v18 = v16[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_1D47A91D8(result, a3 & 1);
  result = sub_1D47CA6C8(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1D4922E8C();
  __break(1u);
  return result;
}

uint64_t sub_1D47ABA24(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1D47CA6C8(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1D47AEC2C();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v18 = v16[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_1D47A61FC(result, a3 & 1);
  result = sub_1D47CA6C8(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1D4922E8C();
  __break(1u);
  return result;
}

uint64_t sub_1D47ABB4C(uint64_t a1, unsigned __int8 a2, char a3)
{
  return sub_1D47ABB58(a1, a2, a3, &qword_1ED98EB98);
}

uint64_t sub_1D47ABB58(uint64_t a1, unsigned __int8 a2, char a3, uint64_t *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v6 = v4;
  v10 = *v4;
  v12 = sub_1D47CA948(a2);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1D47B06E0(a4);
LABEL_7:
    v18 = (_QWORD *)*v6;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_release();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_BYTE *)(v18[6] + v12) = a2;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return result;
    }
    goto LABEL_14;
  }
  sub_1D47A94D0(result, a3 & 1, a4);
  result = sub_1D47CA948(a2);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v6;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1D4922E8C();
  __break(1u);
  return result;
}

uint64_t sub_1D47ABC98(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1D47CA4DC(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1D47B0A24();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1D47A9A00(v15, a4 & 1);
  v21 = sub_1D47CA4DC(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1D4922E8C();
  __break(1u);
  return result;
}

void sub_1D47ABDF4(uint64_t a1, char a2, char a3)
{
  sub_1D47ABE0C(a1, a2, a3, &qword_1ED98F378);
}

void sub_1D47ABE00(uint64_t a1, char a2, char a3)
{
  sub_1D47ABE0C(a1, a2, a3, &qword_1ED98F370);
}

void sub_1D47ABE0C(uint64_t a1, char a2, char a3, uint64_t *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v6 = v4;
  v10 = *v4;
  sub_1D47CA5D8(a2);
  v13 = v12;
  v14 = *(_QWORD *)(v10 + 16);
  v15 = (v11 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v17 = v11;
  v18 = *(_QWORD *)(v10 + 24);
  if (v18 >= v16 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_1D47B0BD8(a4);
LABEL_7:
    v19 = (_QWORD *)*v6;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 8 * v13) = a1;
      return;
    }
LABEL_11:
    v19[(v13 >> 6) + 8] |= 1 << v13;
    *(_BYTE *)(v19[6] + v13) = a2;
    *(_QWORD *)(v19[7] + 8 * v13) = a1;
    v23 = v19[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v19[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_1D47A9D14(v16, a3 & 1, a4);
  sub_1D47CA5D8(a2);
  if ((v17 & 1) == (v22 & 1))
  {
    v13 = v21;
    v19 = (_QWORD *)*v6;
    if ((v17 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1D4922E8C();
  __break(1u);
}

uint64_t sub_1D47ABF4C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1D47CABA8(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1D47B0D70();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v18 = v16[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_1D47AA0C8(result, a3 & 1);
  result = sub_1D47CABA8(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1D4922E8C();
  __break(1u);
  return result;
}

uint64_t sub_1D47AC074(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1D47CABA8(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_1D47B0EFC();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_QWORD *)(v18[7] + 16 * v12);
      result = swift_bridgeObjectRelease();
      *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_BYTE *)(v18[6] + v12) = a3;
    v21 = (_QWORD *)(v18[7] + 16 * v12);
    *v21 = a1;
    v21[1] = a2;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1D47AA3C0(result, a4 & 1);
  result = sub_1D47CABA8(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1D4922E8C();
  __break(1u);
  return result;
}

uint64_t sub_1D47AC1B0(uint64_t a1, _QWORD *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  unint64_t v12;
  double *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  CGRect v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;

  sub_1D4922EF8();
  v17.origin.x = a3;
  v17.origin.y = a4;
  v17.size.width = a5;
  v17.size.height = a6;
  CGRectGetMinX(v17);
  sub_1D4922F28();
  v18.origin.x = a3;
  v18.origin.y = a4;
  v18.size.width = a5;
  v18.size.height = a6;
  CGRectGetMaxX(v18);
  sub_1D4922F28();
  v19.origin.x = a3;
  v19.origin.y = a4;
  v19.size.width = a5;
  v19.size.height = a6;
  CGRectGetMinY(v19);
  sub_1D4922F28();
  v20.origin.x = a3;
  v20.origin.y = a4;
  v20.size.width = a5;
  v20.size.height = a6;
  CGRectGetMaxY(v20);
  sub_1D4922F28();
  sub_1D4922F34();
  v12 = sub_1D4922B14();
  *(_QWORD *)((char *)a2 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v12;
  v13 = (double *)(a2[6] + 32 * v12);
  *v13 = a3;
  v13[1] = a4;
  v13[2] = a5;
  v13[3] = a6;
  v14 = a2[7];
  v15 = type metadata accessor for VisualUnderstanding.ImageRegion();
  result = sub_1D469C630(a1, v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * v12, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  ++a2[2];
  return result;
}

unint64_t sub_1D47AC338(uint64_t a1, uint64_t a2, _QWORD *a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7)
{
  unint64_t result;
  double *v15;
  _QWORD *v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;

  sub_1D4922EF8();
  v17.origin.x = a4;
  v17.origin.y = a5;
  v17.size.width = a6;
  v17.size.height = a7;
  CGRectGetMinX(v17);
  sub_1D4922F28();
  v18.origin.x = a4;
  v18.origin.y = a5;
  v18.size.width = a6;
  v18.size.height = a7;
  CGRectGetMaxX(v18);
  sub_1D4922F28();
  v19.origin.x = a4;
  v19.origin.y = a5;
  v19.size.width = a6;
  v19.size.height = a7;
  CGRectGetMinY(v19);
  sub_1D4922F28();
  v20.origin.x = a4;
  v20.origin.y = a5;
  v20.size.width = a6;
  v20.size.height = a7;
  CGRectGetMaxY(v20);
  sub_1D4922F28();
  sub_1D4922F34();
  result = sub_1D4922B14();
  *(_QWORD *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  v15 = (double *)(a3[6] + 32 * result);
  *v15 = a4;
  v15[1] = a5;
  v15[2] = a6;
  v15[3] = a7;
  v16 = (_QWORD *)(a3[7] + 16 * result);
  *v16 = a1;
  v16[1] = a2;
  ++a3[2];
  return result;
}

__n128 sub_1D47AC4A4(__int128 *a1, _QWORD *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  unint64_t v12;
  double *v13;
  uint64_t v14;
  __int128 v15;
  __n128 result;
  __int128 v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;

  sub_1D4922EF8();
  v18.origin.x = a3;
  v18.origin.y = a4;
  v18.size.width = a5;
  v18.size.height = a6;
  CGRectGetMinX(v18);
  sub_1D4922F28();
  v19.origin.x = a3;
  v19.origin.y = a4;
  v19.size.width = a5;
  v19.size.height = a6;
  CGRectGetMaxX(v19);
  sub_1D4922F28();
  v20.origin.x = a3;
  v20.origin.y = a4;
  v20.size.width = a5;
  v20.size.height = a6;
  CGRectGetMinY(v20);
  sub_1D4922F28();
  v21.origin.x = a3;
  v21.origin.y = a4;
  v21.size.width = a5;
  v21.size.height = a6;
  CGRectGetMaxY(v21);
  sub_1D4922F28();
  sub_1D4922F34();
  v12 = sub_1D4922B14();
  *(_QWORD *)((char *)a2 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v12;
  v13 = (double *)(a2[6] + 32 * v12);
  *v13 = a3;
  v13[1] = a4;
  v13[2] = a5;
  v13[3] = a6;
  v14 = a2[7] + 48 * v12;
  v15 = a1[2];
  v17 = *a1;
  result = (__n128)a1[1];
  *(__n128 *)(v14 + 16) = result;
  *(_OWORD *)(v14 + 32) = v15;
  *(_OWORD *)v14 = v17;
  ++a2[2];
  return result;
}

unint64_t sub_1D47AC61C(uint64_t a1, _QWORD *a2, double a3, double a4, double a5)
{
  unint64_t result;
  double *v11;

  sub_1D4922EF8();
  sub_1D4922F28();
  sub_1D4922F34();
  result = sub_1D4922B14();
  *(_QWORD *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  v11 = (double *)(a2[6] + 24 * result);
  *v11 = a3;
  v11[1] = a4;
  v11[2] = a5;
  *(_QWORD *)(a2[7] + 8 * result) = a1;
  ++a2[2];
  return result;
}

unint64_t sub_1D47AC710(uint64_t a1, _QWORD *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  unint64_t result;
  double *v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;

  sub_1D4922EF8();
  v14.origin.x = a3;
  v14.origin.y = a4;
  v14.size.width = a5;
  v14.size.height = a6;
  CGRectGetMinX(v14);
  sub_1D4922F28();
  v15.origin.x = a3;
  v15.origin.y = a4;
  v15.size.width = a5;
  v15.size.height = a6;
  CGRectGetMaxX(v15);
  sub_1D4922F28();
  v16.origin.x = a3;
  v16.origin.y = a4;
  v16.size.width = a5;
  v16.size.height = a6;
  CGRectGetMinY(v16);
  sub_1D4922F28();
  v17.origin.x = a3;
  v17.origin.y = a4;
  v17.size.width = a5;
  v17.size.height = a6;
  CGRectGetMaxY(v17);
  sub_1D4922F28();
  sub_1D4922F34();
  result = sub_1D4922B14();
  *(_QWORD *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  v13 = (double *)(a2[6] + 32 * result);
  *v13 = a3;
  v13[1] = a4;
  v13[2] = a5;
  v13[3] = a6;
  *(_QWORD *)(a2[7] + 8 * result) = a1;
  ++a2[2];
  return result;
}

uint64_t sub_1D47AC874(unint64_t a1, uint64_t a2, _QWORD *a3, double a4, double a5, double a6, double a7)
{
  double *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a3[(a1 >> 6) + 8] |= 1 << a1;
  v10 = (double *)(a3[6] + 32 * a1);
  *v10 = a4;
  v10[1] = a5;
  v10[2] = a6;
  v10[3] = a7;
  v11 = a3[7];
  v12 = type metadata accessor for VisualUnderstanding.ImageRegion();
  result = sub_1D469C630(a2, v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  v14 = a3[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a3[2] = v16;
  return result;
}

uint64_t sub_1D47AC908(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = type metadata accessor for LandmarkSignals(0);
  result = sub_1D469C630(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, type metadata accessor for LandmarkSignals);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

uint64_t sub_1D47AC998(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = type metadata accessor for StorefrontSignals(0);
  result = sub_1D469C630(a3, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, type metadata accessor for StorefrontSignals);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_1D47ACA24(unint64_t a1, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  v7 = a4[7];
  v8 = sub_1D4920F18();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_1D47ACAB0(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1D4920FD8();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_1D47ACB48(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a5[6];
  v11 = sub_1D4920FD8();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a2, v11);
  v13 = (_QWORD *)(a5[7] + 16 * a1);
  *v13 = a3;
  v13[1] = a4;
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

unint64_t sub_1D47ACBE8(unint64_t result, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a4[6] + result) = a2;
  v4 = a4[7] + 40 * result;
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a3;
  *(_OWORD *)(v4 + 16) = v5;
  *(_BYTE *)(v4 + 32) = *(_BYTE *)(a3 + 32);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

void *sub_1D47ACC40()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98F400);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_26:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1))
      goto LABEL_28;
    if (v9 >= v13)
    {
LABEL_24:
      result = (void *)swift_release();
      v1 = v25;
      goto LABEL_26;
    }
    v23 = *(_QWORD *)(v6 + 8 * v9);
    if (!v23)
      break;
LABEL_23:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1D4696FAC(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1D46FADFC(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v9 + 1;
  if (v9 + 1 >= v13)
    goto LABEL_24;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_24;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_23;
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47ACE0C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2F8);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47ACFC0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB5F0);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_DWORD *)(*(_QWORD *)(v2 + 56) + 4 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_DWORD *)(*(_QWORD *)(v4 + 56) + 4 * v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47AD14C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EBD8);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_DWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_DWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47AD2D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  __int128 *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _OWORD *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _OWORD v44[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D580);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v33 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v33 >= v13)
      goto LABEL_26;
    v34 = *(_QWORD *)(v6 + 8 * v33);
    ++v9;
    if (!v34)
    {
      v9 = v33 + 1;
      if (v33 + 1 >= v13)
        goto LABEL_26;
      v34 = *(_QWORD *)(v6 + 8 * v9);
      if (!v34)
        break;
    }
LABEL_25:
    v12 = (v34 - 1) & v34;
    v15 = __clz(__rbit64(v34)) + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    v17 = (__int128 *)(*(_QWORD *)(v2 + 56) + 160 * v15);
    v18 = v17[2];
    v19 = v17[3];
    v20 = v17[5];
    v40 = v17[4];
    v41 = v20;
    v39 = v19;
    v22 = v17[7];
    v21 = v17[8];
    v23 = v17[6];
    *(_OWORD *)((char *)v44 + 12) = *(__int128 *)((char *)v17 + 140);
    v43 = v22;
    v44[0] = v21;
    v42 = v23;
    v24 = v17[1];
    v36 = *v17;
    v37 = v24;
    v38 = v18;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = v16;
    v25 = (_OWORD *)(*(_QWORD *)(v4 + 56) + 160 * v15);
    v26 = v37;
    *v25 = v36;
    v25[1] = v26;
    v27 = v38;
    v28 = v39;
    v29 = v41;
    v25[4] = v40;
    v25[5] = v29;
    v25[2] = v27;
    v25[3] = v28;
    v30 = v42;
    v31 = v43;
    v32 = v44[0];
    *(_OWORD *)((char *)v25 + 140) = *(_OWORD *)((char *)v44 + 12);
    v25[7] = v31;
    v25[8] = v32;
    v25[6] = v30;
    result = (void *)sub_1D46A47CC((uint64_t)&v36);
  }
  v35 = v33 + 2;
  if (v35 >= v13)
    goto LABEL_26;
  v34 = *(_QWORD *)(v6 + 8 * v35);
  if (v34)
  {
    v9 = v35;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v34 = *(_QWORD *)(v6 + 8 * v9);
    ++v35;
    if (v34)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47AD4F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB7B0);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47AD690()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2F0);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47AD848()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  __int128 v31;

  v1 = v0;
  v2 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v30 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB7A8);
  v5 = *v0;
  v6 = sub_1D4922C64();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v29 = v1;
  result = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v26 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v16)
      goto LABEL_26;
    v27 = *(_QWORD *)(v9 + 8 * v26);
    ++v12;
    if (!v27)
    {
      v12 = v26 + 1;
      if (v26 + 1 >= v16)
        goto LABEL_26;
      v27 = *(_QWORD *)(v9 + 8 * v12);
      if (!v27)
        break;
    }
LABEL_25:
    v15 = (v27 - 1) & v27;
    v18 = __clz(__rbit64(v27)) + (v12 << 6);
LABEL_12:
    v19 = 32 * v18;
    v20 = *(_QWORD *)(v5 + 56);
    v21 = *(_QWORD *)(v5 + 48) + 32 * v18;
    v31 = *(_OWORD *)v21;
    v22 = *(_QWORD *)(v21 + 16);
    v23 = *(_QWORD *)(v21 + 24);
    v24 = *(_QWORD *)(v30 + 72) * v18;
    sub_1D469C304(v20 + v24, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v25 = *(_QWORD *)(v7 + 48) + v19;
    *(_OWORD *)v25 = v31;
    *(_QWORD *)(v25 + 16) = v22;
    *(_QWORD *)(v25 + 24) = v23;
    result = (void *)sub_1D469C630((uint64_t)v4, *(_QWORD *)(v7 + 56) + v24, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  }
  v28 = v26 + 2;
  if (v28 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v29;
    goto LABEL_28;
  }
  v27 = *(_QWORD *)(v9 + 8 * v28);
  if (v27)
  {
    v12 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v27 = *(_QWORD *)(v9 + 8 * v12);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D47ADA8C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EBB8);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 4 * v15;
    v20 = *(_DWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_DWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47ADC38()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB7C0);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (_OWORD *)(*(_QWORD *)(v2 + 48) + 32 * v15);
    v18 = 16 * v15;
    v19 = (_OWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v20 = v17[1];
    v21 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *v19 = *v17;
    v19[1] = v20;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47ADE00()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = type metadata accessor for LandmarkSignals(0);
  v29 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB748);
  v5 = *v0;
  v6 = sub_1D4922C64();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v26 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v27 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v28 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v23 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v11;
    if (!v24)
    {
      v11 = v23 + 1;
      if (v23 + 1 >= v28)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v11);
      if (!v24)
        break;
    }
LABEL_25:
    v14 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v11 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v16);
    v19 = *v18;
    v20 = v18[1];
    v21 = *(_QWORD *)(v29 + 72) * v16;
    sub_1D469C304(*(_QWORD *)(v5 + 56) + v21, (uint64_t)v4, type metadata accessor for LandmarkSignals);
    v22 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v17);
    *v22 = v19;
    v22[1] = v20;
    sub_1D469C630((uint64_t)v4, *(_QWORD *)(v7 + 56) + v21, type metadata accessor for LandmarkSignals);
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v28)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v11 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v11 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v11);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D47AE044()
{
  return sub_1D47AEF6C(&qword_1ED98D308);
}

void *sub_1D47AE050()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  const void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = sub_1D4921008();
  v1 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v35 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB740);
  v32 = v0;
  v3 = *v0;
  v4 = sub_1D4922C64();
  v5 = *(_QWORD *)(v3 + 16);
  v38 = v4;
  if (!v5)
  {
    result = (void *)swift_release();
    v30 = v38;
    v29 = v32;
LABEL_28:
    *v29 = v30;
    return result;
  }
  v6 = v4;
  result = (void *)(v4 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = (const void *)(v3 + 64);
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    result = memmove(result, v34, 8 * v8);
    v6 = v38;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v37 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v33 = (unint64_t)(v11 + 63) >> 6;
  v15 = v35;
  v14 = v36;
  v16 = v38;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v10 << 6);
      v19 = v37;
      goto LABEL_12;
    }
    v26 = v10 + 1;
    v19 = v37;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v33)
      goto LABEL_26;
    v27 = *((_QWORD *)v34 + v26);
    ++v10;
    if (!v27)
    {
      v10 = v26 + 1;
      if (v26 + 1 >= v33)
        goto LABEL_26;
      v27 = *((_QWORD *)v34 + v10);
      if (!v27)
        break;
    }
LABEL_25:
    v13 = (v27 - 1) & v27;
    v18 = __clz(__rbit64(v27)) + (v10 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, *(_QWORD *)(v19 + 48) + v20, v14);
    v21 = 16 * v18;
    v22 = (uint64_t *)(*(_QWORD *)(v19 + 56) + 16 * v18);
    v23 = *v22;
    v24 = v22[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v16 + 48) + v20, v15, v14);
    v25 = (_QWORD *)(*(_QWORD *)(v16 + 56) + v21);
    *v25 = v23;
    v25[1] = v24;
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v33)
  {
LABEL_26:
    result = (void *)swift_release();
    v29 = v32;
    v30 = v38;
    goto LABEL_28;
  }
  v27 = *((_QWORD *)v34 + v28);
  if (v27)
  {
    v10 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v10 >= v33)
      goto LABEL_26;
    v27 = *((_QWORD *)v34 + v10);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D47AE2C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB758);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47AE46C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for StorefrontSignals(0);
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB750);
  v5 = *v0;
  v6 = sub_1D4922C64();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = 8 * v17;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v20 = *(_QWORD *)(v27 + 72) * v17;
    sub_1D469C304(*(_QWORD *)(v5 + 56) + v20, (uint64_t)v4, type metadata accessor for StorefrontSignals);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v19;
    result = (void *)sub_1D469C630((uint64_t)v4, *(_QWORD *)(v7 + 56) + v20, type metadata accessor for StorefrontSignals);
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D47AE698()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EBD0);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v18);
    v21 = *v19;
    v20 = v19[1];
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v22 = v21;
    v22[1] = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1D47AE844()
{
  return sub_1D47AFA78(&qword_1ED98EBC0);
}

void *sub_1D47AE850()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2D8);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(v2 + 56) + 24 * v15;
    v18 = *(_QWORD *)v16;
    v17 = *(_QWORD *)(v16 + 8);
    LOBYTE(v16) = *(_BYTE *)(v16 + 16);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    v19 = *(_QWORD *)(v4 + 56) + 24 * v15;
    *(_QWORD *)v19 = v18;
    *(_QWORD *)(v19 + 8) = v17;
    *(_BYTE *)(v19 + 16) = v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47AEA04()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig(0);
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB78);
  v5 = *v0;
  v6 = sub_1D4922C64();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v24 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v15)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v15)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v17 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v18 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v17);
    v19 = *(_QWORD *)(v26 + 72) * v17;
    sub_1D469C304(*(_QWORD *)(v5 + 56) + v19, (uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    result = (void *)sub_1D469C630((uint64_t)v4, *(_QWORD *)(v7 + 56) + v19, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
  }
  v22 = v20 + 2;
  if (v22 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v24;
    goto LABEL_28;
  }
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D47AEC2C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB80);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47AEDB8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB7B8);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v29 = __clz(__rbit64(v27));
    v12 = (v27 - 1) & v27;
    v15 = v29 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 56 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_QWORD *)v19;
    v21 = *(_DWORD *)(v19 + 8);
    v22 = *(_QWORD *)(v19 + 48);
    v23 = *(_OWORD *)(v19 + 16);
    v24 = *(_OWORD *)(v19 + 32);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v25 = *(_QWORD *)(v4 + 56) + v18;
    *(_QWORD *)v25 = v20;
    *(_DWORD *)(v25 + 8) = v21;
    *(_OWORD *)(v25 + 16) = v23;
    *(_OWORD *)(v25 + 32) = v24;
    *(_QWORD *)(v25 + 48) = v22;
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47AEF6C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1D4922C64();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47AF118()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2D0);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + 16 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + 16 * v15) = v16;
    result = (void *)swift_unknownObjectRetain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47AF2BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = sub_1D4920F18();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2E8);
  v23 = v0;
  v5 = *v0;
  v6 = sub_1D4922C64();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v23 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v24 = v5 + 64;
  v25 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_26;
      v20 = *(_QWORD *)(v24 + 8 * v11);
      if (!v20)
        break;
    }
LABEL_25:
    v14 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_12:
    v17 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16);
    v18 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v18, v1);
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v17;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v18, v4, v1);
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_26;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47AF4D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EBE0);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 16 * v15;
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v18);
    v21 = *v19;
    v20 = v19[1];
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v22 = v21;
    v22[1] = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47AF684()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1D4920FD8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB768);
  v24 = v0;
  v5 = *v0;
  v6 = sub_1D4922C64();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47AF8B4()
{
  return sub_1D47AFC2C(&qword_1EFEAB7A0);
}

void *sub_1D47AF8C0()
{
  return sub_1D47AFC2C(&qword_1EFEAB798);
}

void *sub_1D47AF8CC()
{
  return sub_1D47AFC2C(&qword_1EFEAB790);
}

void *sub_1D47AF8D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2C0);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1D47AFA78(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1D4922C64();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47AFC20()
{
  return sub_1D47AFC2C(&qword_1EFEAB760);
}

void *sub_1D47AFC2C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(unint64_t, char *, uint64_t);
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  __int128 v30;

  v3 = v1;
  v4 = sub_1D4920FD8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v8 = *v1;
  v9 = sub_1D4922C64();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v3 = v10;
    return result;
  }
  v28 = v3;
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v29 = v8 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    v25 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v18)
      goto LABEL_26;
    v26 = *(_QWORD *)(v29 + 8 * v25);
    ++v14;
    if (!v26)
    {
      v14 = v25 + 1;
      if (v25 + 1 >= v18)
        goto LABEL_26;
      v26 = *(_QWORD *)(v29 + 8 * v14);
      if (!v26)
        break;
    }
LABEL_25:
    v17 = (v26 - 1) & v26;
    v20 = __clz(__rbit64(v26)) + (v14 << 6);
LABEL_12:
    v21 = *(_QWORD *)(v5 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v21, v4);
    v22 = 16 * v20;
    v23 = *(_QWORD *)(v10 + 48) + v21;
    v24 = *(void (**)(unint64_t, char *, uint64_t))(v5 + 32);
    v30 = *(_OWORD *)(*(_QWORD *)(v8 + 56) + v22);
    v24(v23, v7, v4);
    *(_OWORD *)(*(_QWORD *)(v10 + 56) + v22) = v30;
    result = (void *)swift_retain();
  }
  v27 = v25 + 2;
  if (v27 >= v18)
  {
LABEL_26:
    result = (void *)swift_release();
    v3 = v28;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v29 + 8 * v27);
  if (v26)
  {
    v14 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v14 >= v18)
      goto LABEL_26;
    v26 = *(_QWORD *)(v29 + 8 * v14);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D47AFE68()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  uint64_t v18;
  __int128 *v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _OWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EBA8);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (_OWORD *)(*(_QWORD *)(v2 + 48) + 32 * v15);
    v18 = 48 * v15;
    v19 = (__int128 *)(*(_QWORD *)(v2 + 56) + v18);
    v20 = (_OWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v21 = v17[1];
    v22 = v19[1];
    v23 = v19[2];
    v24 = *v19;
    *v20 = *v17;
    v20[1] = v21;
    v25 = (_OWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v25 = v24;
    v25[1] = v22;
    v25[2] = v23;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47B0044()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB7C8);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v25 = __clz(__rbit64(v23));
    v12 = (v23 - 1) & v23;
    v15 = v25 + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 24 * v15;
    v18 = *(_QWORD *)(v17 + 16);
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_OWORD *)v21 = *(_OWORD *)v17;
    *(_QWORD *)(v21 + 16) = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47B01E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2B8);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(v2 + 56) + 40 * v15;
    v18 = *(_QWORD *)v16;
    v17 = *(_QWORD *)(v16 + 8);
    v19 = *(_QWORD *)(v16 + 16);
    v20 = *(_QWORD *)(v16 + 24);
    LOBYTE(v16) = *(_BYTE *)(v16 + 32);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    v21 = *(_QWORD *)(v4 + 56) + 40 * v15;
    *(_QWORD *)v21 = v18;
    *(_QWORD *)(v21 + 8) = v17;
    *(_QWORD *)(v21 + 16) = v19;
    *(_QWORD *)(v21 + 24) = v20;
    *(_BYTE *)(v21 + 32) = v16;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47B03AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98AED8);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15);
    *v19 = v18;
    v19[1] = v17;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47B0554()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2C8);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_DWORD *)(*(_QWORD *)(v2 + 56) + 4 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_DWORD *)(*(_QWORD *)(v4 + 56) + 4 * v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47B06E0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1D4922C64();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v14)
        goto LABEL_26;
      v19 = *(_QWORD *)(v7 + 8 * v10);
      if (!v19)
        break;
    }
LABEL_25:
    v13 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    v17 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v16);
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16) = v17;
    result = (void *)swift_retain();
  }
  v20 = v18 + 2;
  if (v20 >= v14)
    goto LABEL_26;
  v19 = *(_QWORD *)(v7 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47B0878()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  __int128 v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB778);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (_OWORD *)(*(_QWORD *)(v2 + 48) + 32 * v15);
    v18 = 8 * v15;
    v19 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v18);
    v20 = (_OWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v21 = v17[1];
    *v20 = *v17;
    v20[1] = v21;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47B0A24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EBB0);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47B0BD8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1D4922C64();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v14)
        goto LABEL_26;
      v19 = *(_QWORD *)(v7 + 8 * v10);
      if (!v19)
        break;
    }
LABEL_25:
    v13 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    v17 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v16);
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v14)
    goto LABEL_26;
  v19 = *(_QWORD *)(v7 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47B0D70()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98F368);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D47B0EFC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98F360);
  v2 = *v0;
  v3 = sub_1D4922C64();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 56) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 56) + 16 * v15);
    *v19 = v18;
    v19[1] = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

_OWORD *sub_1D47B10A4(_OWORD *a1, _OWORD *a2)
{
  assignWithTake for VisualUnderstanding.Signal(a2, a1);
  return a2;
}

uint64_t sub_1D47B10E0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D0B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D47B1120(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D47B1164()
{
  void *v0;
  id v1;
  void *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  id v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t v58;
  id v59[2];

  v59[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = objc_msgSend(v0, sel_results);
  if (v1
    && (v2 = v1,
        sub_1D46F2DB4(0, (unint64_t *)&qword_1ED98AEA0),
        v3 = sub_1D4922820(),
        v2,
        v4 = sub_1D483FA8C(v3),
        swift_bridgeObjectRelease(),
        v4))
  {
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v5 = sub_1D4922C4C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    v58 = v4;
    if (v5)
    {
      v53 = v4 >> 62;
      v55 = v4 & 0xC000000000000001;
      v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      v7 = 4;
      v54 = v5;
      while (1)
      {
        if (v55)
          v10 = (id)MEMORY[0x1D8261F20](v7 - 4, v4);
        else
          v10 = *(id *)(v4 + 8 * v7);
        v11 = v10;
        v12 = v7 - 3;
        if (__OFADD__(v7 - 4, 1))
        {
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
        v57 = v7;
        v13 = objc_msgSend(v10, sel_featureName);
        v14 = sub_1D492261C();
        v16 = v15;

        v17 = objc_msgSend(v11, sel_featureValue);
        v18 = objc_msgSend(v17, sel_multiArrayValue);

        if (!v18)
        {
          v56 = v6;
          v19 = v14;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98ECE8);
          v20 = swift_allocObject();
          *(_OWORD *)(v20 + 16) = xmmword_1D4929910;
          sub_1D46F2DB4(0, (unint64_t *)&qword_1ED98D298);
          *(_QWORD *)(v20 + 32) = sub_1D4922A24();
          v59[0] = (id)v20;
          sub_1D4922838();
          v21 = objc_allocWithZone(MEMORY[0x1E0C9E970]);
          v22 = (void *)sub_1D4922814();
          swift_bridgeObjectRelease();
          v59[0] = 0;
          v18 = objc_msgSend(v21, sel_initWithShape_dataType_error_, v22, 65568, v59);

          if (!v18)
          {
            v52 = v59[0];
            sub_1D4920E64();

            swift_willThrow();
            swift_bridgeObjectRelease_n();

            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
          v23 = v59[0];
          v14 = v19;
          v6 = v56;
        }
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v59[0] = v6;
        v26 = sub_1D47CA4DC(v14, v16);
        v27 = v6[2];
        v28 = (v25 & 1) == 0;
        v29 = v27 + v28;
        if (__OFADD__(v27, v28))
          goto LABEL_45;
        v30 = v25;
        if (v6[3] >= v29)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_1D47AE844();
          v31 = v16;
          v6 = v59[0];
          if ((v30 & 1) == 0)
            goto LABEL_24;
        }
        else
        {
          sub_1D47A5A5C(v29, isUniquelyReferenced_nonNull_native);
          v31 = v16;
          v32 = sub_1D47CA4DC(v14, v16);
          if ((v30 & 1) != (v33 & 1))
          {
            result = sub_1D4922E8C();
            __break(1u);
            return result;
          }
          v26 = v32;
          v6 = v59[0];
          if ((v30 & 1) == 0)
          {
LABEL_24:
            v6[(v26 >> 6) + 8] |= 1 << v26;
            v34 = (uint64_t *)(v6[6] + 16 * v26);
            *v34 = v14;
            v34[1] = v31;
            *(_QWORD *)(v6[7] + 8 * v26) = v18;
            v35 = v6[2];
            v36 = __OFADD__(v35, 1);
            v37 = v35 + 1;
            if (v36)
              goto LABEL_46;
            v6[2] = v37;
            swift_bridgeObjectRetain();
            goto LABEL_8;
          }
        }
        v8 = v6[7];
        v9 = 8 * v26;

        *(_QWORD *)(v8 + v9) = v18;
LABEL_8:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v7 = v57 + 1;
        v4 = v58;
        if (v12 == v54)
        {
          swift_bridgeObjectRelease();
          if (v53)
            goto LABEL_40;
LABEL_29:
          v39 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v39)
            goto LABEL_30;
LABEL_41:
          swift_bridgeObjectRelease();
          v41 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          goto LABEL_42;
        }
      }
    }
    swift_bridgeObjectRelease();
    v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    if (!(v4 >> 62))
      goto LABEL_29;
LABEL_40:
    swift_bridgeObjectRetain();
    v39 = sub_1D4922C4C();
    swift_bridgeObjectRelease();
    if (!v39)
      goto LABEL_41;
LABEL_30:
    v59[0] = (id)MEMORY[0x1E0DEE9D8];
    sub_1D48AB4A4(0, v39 & ~(v39 >> 63), 0);
    if (v39 < 0)
      __break(1u);
    v40 = 0;
    v41 = v59[0];
    v42 = v4 & 0xC000000000000001;
    do
    {
      if (v42)
        v43 = (id)MEMORY[0x1D8261F20](v40, v4);
      else
        v43 = *(id *)(v4 + 8 * v40 + 32);
      v44 = v43;
      v45 = objc_msgSend(v43, sel_featureName, v53);
      v46 = sub_1D492261C();
      v48 = v47;

      v59[0] = v41;
      v50 = v41[2];
      v49 = v41[3];
      if (v50 >= v49 >> 1)
      {
        sub_1D48AB4A4(v49 > 1, v50 + 1, 1);
        v41 = v59[0];
      }
      ++v40;
      v41[2] = v50 + 1;
      v51 = &v41[2 * v50];
      v51[4] = v46;
      v51[5] = v48;
      v4 = v58;
    }
    while (v39 != v40);
    swift_bridgeObjectRelease();
LABEL_42:
    type metadata accessor for EngineResult();
    swift_allocObject();
    return sub_1D4893798((uint64_t)v41, (uint64_t)v6);
  }
  else
  {
    if (qword_1ED98D918 != -1)
LABEL_47:
      swift_once();
    return swift_retain();
  }
}

uint64_t sub_1D47B1784()
{
  return sub_1D47B1164();
}

uint64_t sub_1D47B17A4()
{
  void **v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EC40);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1D49273C0;
  *(_QWORD *)(v2 + 56) = sub_1D46F2DB4(0, (unint64_t *)&qword_1ED98D2A0);
  *(_QWORD *)(v2 + 64) = &off_1E9804848;
  *(_QWORD *)(v2 + 32) = v1;
  v3 = v1;
  return v2;
}

id sub_1D47B1818(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unsigned __int8 v6;
  id v8;
  uint64_t v9;
  _BYTE v10[40];
  uint64_t v11;
  id v12[6];

  v12[5] = *(id *)MEMORY[0x1E0C80C00];
  v9 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = a1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1D46AAF28(v3, (uint64_t)v12);
      sub_1D46AAF28((uint64_t)v12, (uint64_t)v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D960);
      sub_1D46F2DB4(0, (unint64_t *)&qword_1ED98D2A0);
      if ((swift_dynamicCast() & 1) == 0)
        v11 = 0;
      v4 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
      if (v11)
      {
        MEMORY[0x1D8261B78](v4);
        if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1D4922844();
        sub_1D492285C();
        sub_1D4922838();
      }
      v3 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  sub_1D46F2DB4(0, (unint64_t *)&qword_1ED98D2A0);
  v5 = (void *)sub_1D4922814();
  swift_bridgeObjectRelease();
  v12[0] = 0;
  v6 = objc_msgSend(v1, sel_performRequests_error_, v5, v12);

  if ((v6 & 1) != 0)
    return v12[0];
  v8 = v12[0];
  sub_1D4920E64();

  return (id)swift_willThrow();
}

id sub_1D47B1A40(uint64_t a1)
{
  return sub_1D47B1818(a1);
}

ValueMetadata *type metadata accessor for VisionModelRequest()
{
  return &type metadata for VisionModelRequest;
}

ValueMetadata *type metadata accessor for VisionModel()
{
  return &type metadata for VisionModel;
}

uint64_t type metadata accessor for PlaceholderPIRClient()
{
  return objc_opt_self();
}

uint64_t sub_1D47B1AA0()
{
  sub_1D47B1AE4();
  swift_allocError();
  return swift_willThrow();
}

unint64_t sub_1D47B1AE4()
{
  unint64_t result;

  result = qword_1EFEAB7D0;
  if (!qword_1EFEAB7D0)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4932BE8, &type metadata for PlaceholderPIRClient.Error);
    atomic_store(result, (unint64_t *)&qword_1EFEAB7D0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PlaceholderPIRClient.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D47B1B68 + 4 * byte_1D4932B40[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D47B1B88 + 4 * byte_1D4932B45[v4]))();
}

_BYTE *sub_1D47B1B68(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D47B1B88(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D47B1B90(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D47B1B98(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D47B1BA0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D47B1BA8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PlaceholderPIRClient.Error()
{
  return &type metadata for PlaceholderPIRClient.Error;
}

unint64_t sub_1D47B1BC8()
{
  unint64_t result;

  result = qword_1EFEAB7D8;
  if (!qword_1EFEAB7D8)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4932BC0, &type metadata for PlaceholderPIRClient.Error);
    atomic_store(result, (unint64_t *)&qword_1EFEAB7D8);
  }
  return result;
}

_QWORD *sub_1D47B1C0C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1D47B1C18(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_1D47B1C20@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1D47B1C34@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_1D47B1C48@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1D47B1C5C(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_1D47B1C8C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1D47B1CB8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_1D47B1CDC(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1D47B1CF0(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_1D47B1D04(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_1D47B1D18@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1D47B1D2C(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1D47B1D40(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1D47B1D54(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1D47B1D68()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_1D47B1D78()
{
  return sub_1D4922AF0();
}

_QWORD *sub_1D47B1D90(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_1D47B1DA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1D4836900();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1D47B1DE0()
{
  _OWORD *v0;

  sub_1D47B1E50();
  swift_allocError();
  *v0 = xmmword_1D4927AB0;
  return swift_willThrow();
}

uint64_t type metadata accessor for DomainModelRequestFactory()
{
  return objc_opt_self();
}

unint64_t sub_1D47B1E50()
{
  unint64_t result;

  result = qword_1EFEAB7E8;
  if (!qword_1EFEAB7E8)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4932C80, &type metadata for DomainModelRequestFactory.BaseClassError);
    atomic_store(result, (unint64_t *)&qword_1EFEAB7E8);
  }
  return result;
}

unint64_t destroy for DomainModelRequestFactory.BaseClassError(uint64_t a1)
{
  unint64_t result;
  int v2;

  result = *(_QWORD *)(a1 + 8);
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if ((v2 + 1) <= 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s18VisualIntelligence25DomainModelRequestFactoryC14BaseClassErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = *(_QWORD *)(a2 + 8);
  if ((v4 + 1) > 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for DomainModelRequestFactory.BaseClassError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;

  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL)
    LODWORD(v5) = -1;
  else
    v5 = a1[1];
  v6 = v5 + 1;
  if (a2[1] < 0xFFFFFFFFuLL)
    v4 = a2[1];
  v7 = v4 + 1;
  if (v6 > 1)
  {
    if (v7 <= 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v7 > 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DomainModelRequestFactory.BaseClassError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if ((v5 + 1) > 1)
    goto LABEL_9;
  v6 = *(_QWORD *)(a2 + 8);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF)
    v7 = *(_QWORD *)(a2 + 8);
  if ((v7 + 1) > 1)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DomainModelRequestFactory.BaseClassError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 2)
    return (v3 - 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DomainModelRequestFactory.BaseClassError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_1D47B20F0(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  if ((v1 + 1) >= 2)
    return v1;
  else
    return 0;
}

_QWORD *sub_1D47B2110(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = 0;
    result[1] = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DomainModelRequestFactory.BaseClassError()
{
  return &type metadata for DomainModelRequestFactory.BaseClassError;
}

uint64_t destroy for DomainModelRequestFactory.Input(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for DomainModelRequestFactory.Input(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v5 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v5;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DomainModelRequestFactory.Input(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for DomainModelRequestFactory.Input(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v5 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v5;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DomainModelRequestFactory.Input(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 152))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DomainModelRequestFactory.Input(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 152) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DomainModelRequestFactory.Input()
{
  return &type metadata for DomainModelRequestFactory.Input;
}

ValueMetadata *type metadata accessor for DomainModelRequestFactory.RequestOptions()
{
  return &type metadata for DomainModelRequestFactory.RequestOptions;
}

ValueMetadata *type metadata accessor for DomainModelRequestFactory.HeadOptions()
{
  return &type metadata for DomainModelRequestFactory.HeadOptions;
}

unint64_t sub_1D47B2460()
{
  unint64_t result;

  result = qword_1EFEAB7F0;
  if (!qword_1EFEAB7F0)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4932D0C, &type metadata for DomainModelRequestFactory.HeadOptions);
    atomic_store(result, (unint64_t *)&qword_1EFEAB7F0);
  }
  return result;
}

unint64_t sub_1D47B24A8()
{
  unint64_t result;

  result = qword_1EFEAB7F8;
  if (!qword_1EFEAB7F8)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4932CDC, &type metadata for DomainModelRequestFactory.HeadOptions);
    atomic_store(result, (unint64_t *)&qword_1EFEAB7F8);
  }
  return result;
}

unint64_t sub_1D47B24F0()
{
  unint64_t result;

  result = qword_1EFEAB800;
  if (!qword_1EFEAB800)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4932D34, &type metadata for DomainModelRequestFactory.HeadOptions);
    atomic_store(result, (unint64_t *)&qword_1EFEAB800);
  }
  return result;
}

unint64_t sub_1D47B2538()
{
  unint64_t result;

  result = qword_1EFEAB808;
  if (!qword_1EFEAB808)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4932D6C, &type metadata for DomainModelRequestFactory.HeadOptions);
    atomic_store(result, (unint64_t *)&qword_1EFEAB808);
  }
  return result;
}

uint64_t sub_1D47B2580(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD))
{
  return a2(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1D47B25B0(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4;
  char v5;

  v4 = a1;
  v5 = a2 & 1;
  return a3(&v4);
}

uint64_t sub_1D47B25E8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[6];
  _OWORD v36[10];
  uint64_t v37;

  v28 = a5;
  v29 = a3;
  v11 = sub_1D492246C();
  v33 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1D4922484();
  v31 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *(_QWORD *)(v6 + 24);
  v16 = swift_allocObject();
  swift_weakInit();
  sub_1D479D044(a1, (uint64_t)v36);
  v17 = swift_allocObject();
  v18 = v36[8];
  *(_OWORD *)(v17 + 152) = v36[7];
  *(_OWORD *)(v17 + 168) = v18;
  *(_OWORD *)(v17 + 184) = v36[9];
  v19 = v36[2];
  *(_OWORD *)(v17 + 88) = v36[3];
  *(_OWORD *)(v17 + 104) = v36[4];
  v20 = v36[6];
  *(_OWORD *)(v17 + 120) = v36[5];
  *(_OWORD *)(v17 + 136) = v20;
  v21 = v36[1];
  *(_OWORD *)(v17 + 40) = v36[0];
  *(_OWORD *)(v17 + 56) = v21;
  v22 = v28;
  *(_QWORD *)(v17 + 16) = a4;
  *(_QWORD *)(v17 + 24) = v22;
  *(_QWORD *)(v17 + 32) = a6;
  v23 = v37;
  *(_OWORD *)(v17 + 72) = v19;
  *(_QWORD *)(v17 + 200) = v23;
  *(_QWORD *)(v17 + 208) = a2;
  *(_QWORD *)(v17 + 216) = v29;
  *(_QWORD *)(v17 + 224) = v16;
  aBlock[4] = sub_1D47B4A6C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D47E5A84;
  aBlock[3] = &block_descriptor_37;
  v24 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  v25 = a4;
  swift_retain();
  sub_1D4922478();
  v34 = MEMORY[0x1E0DEE9D8];
  sub_1D4696EA4(&qword_1ED98D0C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D1D0);
  sub_1D46BF03C((unint64_t *)&qword_1ED98D1E0, (uint64_t *)&unk_1ED98D1D0, MEMORY[0x1E0DEAF38]);
  sub_1D4922AFC();
  MEMORY[0x1D8261CD4](0, v15, v13, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v11);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v32);
  swift_release();
  return swift_release();
}

void sub_1D47B28F8(_QWORD *a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  os_unfair_lock_s *v16;
  int v17;
  uint64_t v18;
  void *v19;
  _BYTE *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void (*v26)(void *, uint64_t);
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a5;
  v29 = a6;
  v10 = sub_1D49210F8();
  v30 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v25 - v14;
  v16 = (os_unfair_lock_s *)(*(_QWORD *)((char *)a1 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock) + 16);
  os_unfair_lock_lock(v16);
  v17 = *((unsigned __int8 *)a1 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled);
  os_unfair_lock_unlock(v16);
  if (v17 == 1)
  {
    sub_1D47B4268();
    v19 = (void *)swift_allocError();
    *v20 = 1;
    a2(v19, 1);

  }
  else
  {
    v26 = a2;
    v27 = &v25;
    MEMORY[0x1E0C80A78](v18);
    v21 = v28;
    *(&v25 - 4) = a4;
    *(&v25 - 3) = v21;
    *(&v25 - 2) = v29;
    sub_1D4696EA4(&qword_1EFEAB840, (uint64_t (*)(uint64_t))MEMORY[0x1E0D6D238], MEMORY[0x1E0D6D220]);
    sub_1D49221FC();
    v22 = *(void **)(a4 + 160);
    if (v22)
    {
      objc_msgSend(*(id *)(a4 + 160), sel_queryID);
      sub_1D49210EC();
    }
    v23 = v30;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v15, v13, v10);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      if (v22)
        v24 = objc_msgSend(v22, sel_queryID);
      else
        v24 = 0;
      sub_1D47B2B60((uint64_t)v15, (uint64_t)v24, v22 == 0, a1, (uint64_t)v26, a3);
      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v10);
  }
}

uint64_t sub_1D47B2B60(uint64_t a1, uint64_t a2, int a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v51;
  char v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  _QWORD v59[2];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71[3];
  _QWORD v72[4];
  char v73;

  v7 = v6;
  v66 = a3;
  v64 = a1;
  v65 = a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB830);
  v68 = *(_QWORD *)(v11 - 8);
  v69 = v11;
  MEMORY[0x1E0C80A78](v11);
  v67 = (char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D4922370();
  v62 = *(_QWORD *)(v13 - 8);
  v63 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D49224A8();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (_QWORD *)((char *)v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = *(void **)(v7 + 24);
  *v19 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E0DEF740], v16);
  v21 = v20;
  v22 = sub_1D49224C0();
  (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
  if ((v22 & 1) != 0)
  {
    v72[0] = 0xD000000000000011;
    v72[1] = 0x80000001D4944680;
    v72[2] = "Text Lookup On Server";
    v72[3] = 21;
    v73 = 2;
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = a5;
    *(_QWORD *)(v23 + 24) = a6;
    type metadata accessor for DurationMeasurement();
    swift_allocObject();
    swift_retain();
    v24 = sub_1D47C12D0((uint64_t)v72, 0);
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = v24;
    v25[3] = sub_1D47B486C;
    v25[4] = v23;
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = sub_1D47B48C4;
    *(_QWORD *)(v26 + 24) = v25;
    v61 = v26;
    sub_1D470C76C((uint64_t)v15);
    v27 = a4;
    v28 = sub_1D4922358();
    v29 = sub_1D4922910();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v59[1] = v21;
      v31 = (uint8_t *)v30;
      v32 = swift_slowAlloc();
      v60 = v7;
      v33 = v32;
      v71[0] = v32;
      *(_DWORD *)v31 = 136315138;
      sub_1D4920FD8();
      sub_1D4696EA4(&qword_1EFEAB720, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v34 = sub_1D4922E14();
      v70 = sub_1D47F0250(v34, v35, v71);
      sub_1D4922A78();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D467C000, v28, v29, "Network fetch for task: %s", v31, 0xCu);
      swift_arrayDestroy();
      v36 = v33;
      v7 = v60;
      MEMORY[0x1D82635B8](v36, -1, -1);
      MEMORY[0x1D82635B8](v31, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v62 + 8))(v15, v63);
    v37 = v67;
    sub_1D4921E3C();
    v38 = swift_allocObject();
    swift_weakInit();
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = v38;
    *(_QWORD *)(v39 + 24) = v27;
    v40 = swift_allocObject();
    swift_weakInit();
    v41 = swift_allocObject();
    v42 = v65;
    *(_QWORD *)(v41 + 16) = v40;
    *(_QWORD *)(v41 + 24) = v42;
    *(_BYTE *)(v41 + 32) = v66 & 1;
    *(_QWORD *)(v41 + 40) = v27;
    sub_1D46BF03C(&qword_1EFEAB838, &qword_1EFEAB830, MEMORY[0x1E0C95B90]);
    v43 = v27;
    v44 = v69;
    v45 = sub_1D49223C4();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v37, v44);
    v46 = (uint64_t)&v43[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_identifier];
    v47 = swift_allocObject();
    v48 = v61;
    *(_QWORD *)(v47 + 16) = sub_1D47B47E0;
    *(_QWORD *)(v47 + 24) = v48;
    v49 = (uint64_t *)(v7 + OBJC_IVAR____TtC18VisualIntelligence20TextLookupServerFlow_completions);
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v70 = *v49;
    *v49 = 0x8000000000000000;
    sub_1D47AB5FC((uint64_t)sub_1D47B486C, v47, v46, isUniquelyReferenced_nonNull_native);
    *v49 = v70;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v51 = (uint64_t *)(v7 + OBJC_IVAR____TtC18VisualIntelligence20TextLookupServerFlow_searchFetches);
    swift_beginAccess();
    swift_retain();
    v52 = swift_isUniquelyReferenced_nonNull_native();
    v70 = *v51;
    *v51 = 0x8000000000000000;
    sub_1D47AB310(v45, v46, v52);
    *v51 = v70;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v53 = swift_allocObject();
    swift_weakInit();
    v17 = *(_QWORD *)&v43[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock] + 16;
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)v17);
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = sub_1D47B49AC;
    *(_QWORD *)(v16 + 24) = v53;
    v21 = &v43[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_onCancels];
    swift_beginAccess();
    a4 = *(_QWORD **)v21;
    swift_retain();
    v54 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v21 = a4;
    if ((v54 & 1) != 0)
      goto LABEL_6;
  }
  else
  {
    __break(1u);
  }
  a4 = sub_1D48AA9BC(0, a4[2] + 1, 1, a4);
  *(_QWORD *)v21 = a4;
LABEL_6:
  v56 = a4[2];
  v55 = a4[3];
  if (v56 >= v55 >> 1)
  {
    a4 = sub_1D48AA9BC((_QWORD *)(v55 > 1), v56 + 1, 1, a4);
    *(_QWORD *)v21 = a4;
  }
  a4[2] = v56 + 1;
  v57 = &a4[2 * v56];
  v57[4] = sub_1D4720070;
  v57[5] = v16;
  swift_endAccess();
  os_unfair_lock_unlock((os_unfair_lock_t)v17);
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_1D47B3288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D47B33F4(a1, a3 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_identifier);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D47B3304(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D47B3624(a1, a3, a4 & 1, a5 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_identifier);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D47B3398(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D47B3D14(a1);
    return swift_release();
  }
  return result;
}

void sub_1D47B33F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  void *v17;
  _BYTE *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a2;
  v4 = sub_1D4921E48();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB828);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D49224A8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(v2 + 24);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DEF740], v11);
  v16 = v15;
  LOBYTE(v15) = sub_1D49224C0();
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    sub_1D469C5EC(a1, (uint64_t)v10, &qword_1EFEAB828);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
    {
      sub_1D47B4268();
      v17 = (void *)swift_allocError();
      *v18 = 0;
      sub_1D47B38F0(v22, (uint64_t)v17, 1);

    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
      sub_1D4696EA4(&qword_1EFEAB820, (uint64_t (*)(uint64_t))MEMORY[0x1E0D707D8], MEMORY[0x1E0D707E8]);
      v19 = (void *)swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(v20, v7, v4);
      sub_1D47B38F0(v22, (uint64_t)v19, 1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D47B3624(uint64_t a1, void *a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  uint64_t result;
  uint64_t v23;
  _BYTE *v24;
  void *v25;
  uint64_t v26;
  char v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[4];
  int v32;
  uint64_t v33;
  id v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a1;
  v38 = a4;
  v32 = a3;
  v34 = a2;
  v5 = sub_1D4921E48();
  v36 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v35 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v33 = sub_1D4921110();
  v7 = *(_QWORD *)(v33 - 8);
  v8 = MEMORY[0x1E0C80A78](v33);
  v10 = &v31[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v31[-v11];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB818);
  MEMORY[0x1E0C80A78](v13);
  v15 = &v31[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_1D49224A8();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = &v31[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v39 = v4;
  v20 = *(void **)(v4 + 24);
  *v19 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E0DEF740], v16);
  v21 = v20;
  LOBYTE(v20) = sub_1D49224C0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) != 0)
  {
    sub_1D469C5EC(v37, (uint64_t)v15, &qword_1EFEAB818);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = v35;
      v23 = v36;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v36 + 32))(v35, v15, v5);
      sub_1D4696EA4(&qword_1EFEAB820, (uint64_t (*)(uint64_t))MEMORY[0x1E0D707D8], MEMORY[0x1E0D707E8]);
      v25 = (void *)swift_allocError();
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(v23 + 16))(v26, v24, v5);
      sub_1D47B38F0(v38, (uint64_t)v25, 1);

      return (*(uint64_t (**)(_BYTE *, uint64_t))(v23 + 8))(v24, v5);
    }
    else
    {
      v27 = v32 & 1;
      v28 = v15;
      v29 = v33;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v12, v28, v33);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v10, v12, v29);
      v30 = sub_1D4754500((uint64_t)v10);
      sub_1D484A9B0(v34, v27, v30);
      sub_1D47B38F0(v38, v30, 0);
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v12, v29);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D47B38F0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t result;
  void (*v19)(char *, uint64_t, uint64_t);
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  void (*v32)(uint64_t, char);
  uint64_t v33;
  char v34;
  uint8_t *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43[3];

  v36 = a3;
  v37 = a2;
  v5 = sub_1D4920FD8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D4922370();
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D49224A8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint8_t **)((char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_QWORD *)&v41 = v3;
  v16 = *(void **)(v3 + 24);
  *v15 = v16;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DEF740], v12);
  v17 = v16;
  LOBYTE(v16) = sub_1D49224C0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  sub_1D470C76C((uint64_t)v11);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v38 = a1;
  v19(v8, a1, v5);
  v20 = sub_1D4922358();
  v21 = sub_1D4922910();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v43[0] = v23;
    *(_DWORD *)v22 = 136315138;
    v35 = v22 + 4;
    sub_1D4696EA4(&qword_1EFEAB720, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v24 = sub_1D4922E14();
    v42 = sub_1D47F0250(v24, v25, v43);
    sub_1D4922A78();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    _os_log_impl(&dword_1D467C000, v20, v21, "completing task: %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v23, -1, -1);
    MEMORY[0x1D82635B8](v22, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v40);
  v26 = (uint64_t *)(v41 + OBJC_IVAR____TtC18VisualIntelligence20TextLookupServerFlow_completions);
  swift_beginAccess();
  v27 = *v26;
  v28 = v38;
  if (*(_QWORD *)(*v26 + 16))
  {
    swift_bridgeObjectRetain();
    v29 = sub_1D47CA9F4(v28);
    if ((v30 & 1) != 0)
    {
      v41 = *(_OWORD *)(*(_QWORD *)(v27 + 56) + 16 * v29);
      swift_retain();
      swift_bridgeObjectRelease();
      v31 = 0;
      *(_OWORD *)(swift_allocObject() + 16) = v41;
      v32 = (void (*)(uint64_t, char))sub_1D47B47E0;
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  v32 = 0;
  v31 = 1;
LABEL_10:
  swift_beginAccess();
  sub_1D47B45D8(v28);
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  v33 = sub_1D47B46EC(v28, (void (*)(unint64_t, uint64_t))sub_1D48C2944, (void (*)(void))sub_1D47AFC20);
  swift_endAccess();
  result = sub_1D46A56B4(v33);
  if ((v31 & 1) == 0)
  {
    v34 = v36 & 1;
    swift_retain();
    v32(v37, v34);
    sub_1D46A56B4((uint64_t)v32);
    return sub_1D46A56B4((uint64_t)v32);
  }
  return result;
}

uint64_t sub_1D47B3D14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_1D492246C();
  v22 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D4922484();
  v20 = *(_QWORD *)(v7 - 8);
  v21 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D4920FD8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(_QWORD *)(v2 + 24);
  v14 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  v15 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v14;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v16 + v15, v13, v10);
  aBlock[4] = sub_1D47B4344;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D47E5A84;
  aBlock[3] = &block_descriptor_4;
  v17 = _Block_copy(aBlock);
  swift_retain();
  sub_1D4922478();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1D4696EA4(&qword_1ED98D0C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D1D0);
  sub_1D46BF03C((unint64_t *)&qword_1ED98D1E0, (uint64_t *)&unk_1ED98D1D0, MEMORY[0x1E0DEAF38]);
  sub_1D4922AFC();
  MEMORY[0x1D8261CD4](0, v9, v6, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v21);
  swift_release();
  return swift_release();
}

uint64_t sub_1D47B3FA8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D47B4004(a2);
    return swift_release();
  }
  return result;
}

void sub_1D47B4004(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  void *v5;
  _BYTE *v6;

  v3 = v1 + OBJC_IVAR____TtC18VisualIntelligence20TextLookupServerFlow_searchFetches;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v3 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1D47CA9F4(a1);
    if ((v4 & 1) != 0)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1D49223B8();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  sub_1D47B4268();
  v5 = (void *)swift_allocError();
  *v6 = 1;
  sub_1D47B38F0(a1, (uint64_t)v5, 1);

}

uint64_t sub_1D47B40EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();

  v1 = v0 + OBJC_IVAR____TtC18VisualIntelligence20TextLookupServerFlow_timeoutSeconds;
  v2 = sub_1D4922460();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D47B416C()
{
  return type metadata accessor for TextLookupServerFlow();
}

uint64_t type metadata accessor for TextLookupServerFlow()
{
  uint64_t result;

  result = qword_1ED98EDA8;
  if (!qword_1ED98EDA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D47B41B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D4922460();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D47B4248(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

unint64_t sub_1D47B4268()
{
  unint64_t result;

  result = qword_1EFEAB810;
  if (!qword_1EFEAB810)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4932F60, &type metadata for TextLookupServerError);
    atomic_store(result, (unint64_t *)&qword_1EFEAB810);
  }
  return result;
}

uint64_t sub_1D47B42AC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D47B42D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1D4920FD8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1D47B4344()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D4920FD8() - 8) + 80);
  return sub_1D47B3FA8(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_1D47B438C@<X0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v12;
  char v13;
  char v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v6 = v5;
  swift_bridgeObjectRetain();
  v12 = sub_1D47CA748(a2, a3, a4, a5);
  v14 = v13;
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v5;
    v25 = *v6;
    *v6 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D47AD848();
      v16 = v25;
    }
    v17 = *(_QWORD *)(v16 + 56);
    v18 = type metadata accessor for VisualUnderstanding.ImageRegion();
    v19 = *(_QWORD *)(v18 - 8);
    sub_1D46A8594(v17 + *(_QWORD *)(v19 + 72) * v12, a1);
    sub_1D48C1B30(v12, v16);
    *v6 = v16;
    swift_bridgeObjectRelease();
    v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
    v21 = a1;
    v22 = 0;
    v23 = v18;
  }
  else
  {
    v23 = type metadata accessor for VisualUnderstanding.ImageRegion();
    v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
    v21 = a1;
    v22 = 1;
  }
  return v20(v21, v22, 1, v23);
}

uint64_t sub_1D47B44C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1D47CA6B4(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v15 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D47AF2BC();
      v9 = v15;
    }
    v10 = *(_QWORD *)(v9 + 56);
    v11 = sub_1D4920F18();
    v12 = *(_QWORD *)(v11 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 32))(a2, v10 + *(_QWORD *)(v12 + 72) * v6, v11);
    sub_1D48C2348(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
  }
  else
  {
    v14 = sub_1D4920F18();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
}

uint64_t sub_1D47B45D8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1D47CA9F4(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1D47AF684();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_1D4920FD8();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_1D48C26A4(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1D47B46B0(uint64_t a1)
{
  return sub_1D47B46EC(a1, (void (*)(unint64_t, uint64_t))sub_1D48C2944, (void (*)(void))sub_1D47AF8B4);
}

uint64_t sub_1D47B46C4(uint64_t a1)
{
  return sub_1D47B46EC(a1, (void (*)(unint64_t, uint64_t))sub_1D48C2944, (void (*)(void))sub_1D47AF8C0);
}

uint64_t sub_1D47B46D8(uint64_t a1)
{
  return sub_1D47B46EC(a1, (void (*)(unint64_t, uint64_t))sub_1D48C2944, (void (*)(void))sub_1D47AF8CC);
}

uint64_t sub_1D47B46EC(uint64_t a1, void (*a2)(unint64_t, uint64_t), void (*a3)(void))
{
  uint64_t *v3;
  uint64_t *v6;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v6 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1D47CA9F4(a1);
  LOBYTE(a1) = v9;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *v6;
  v16 = *v6;
  *v6 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a3();
    v11 = v16;
  }
  v12 = *(_QWORD *)(v11 + 48);
  v13 = sub_1D4920FD8();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * v8, v13);
  v14 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 16 * v8);
  a2(v8, v11);
  *v6 = v11;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1D47B47E0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  char v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_1D47B4818(uint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t *))
{
  char v4;
  uint64_t v6;
  char v7;

  v4 = *((_BYTE *)a1 + 8);
  v6 = *a1;
  v7 = v4;
  sub_1D47C0B30();
  return a3(&v6);
}

uint64_t sub_1D47B486C(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1D47B4898()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D47B48C4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  char v3;
  uint64_t v5;
  char v6;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 24);
  v3 = *((_BYTE *)a1 + 8);
  v5 = *a1;
  v6 = v3;
  sub_1D47C0B30();
  return v2(&v5);
}

uint64_t sub_1D47B4918()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D47B493C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1D47B4968(uint64_t a1)
{
  uint64_t v1;

  return sub_1D47B3288(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1D47B4970()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1D47B499C(uint64_t a1)
{
  uint64_t v1;

  return sub_1D47B3304(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1D47B49AC(uint64_t a1)
{
  return sub_1D47B3398(a1);
}

uint64_t sub_1D47B49B4()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 64))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 120))
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  if (*(_QWORD *)(v0 + 136) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1D47B4A6C()
{
  uint64_t v0;

  sub_1D47B28F8(*(_QWORD **)(v0 + 16), *(void (**)(void *, uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32), v0 + 40, *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216));
}

uint64_t sub_1D47B4A84(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D484AF20(a1, v1[2], v1[3], v1[4]);
}

uint64_t storeEnumTagSinglePayload for TextLookupServerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D47B4AEC + 4 * byte_1D4932E75[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D47B4B20 + 4 * byte_1D4932E70[v4]))();
}

uint64_t sub_1D47B4B20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D47B4B28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D47B4B30);
  return result;
}

uint64_t sub_1D47B4B3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D47B4B44);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D47B4B48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D47B4B50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextLookupServerError()
{
  return &type metadata for TextLookupServerError;
}

unint64_t sub_1D47B4B70()
{
  unint64_t result;

  result = qword_1EFEAB848;
  if (!qword_1EFEAB848)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4932F38, &type metadata for TextLookupServerError);
    atomic_store(result, (unint64_t *)&qword_1EFEAB848);
  }
  return result;
}

VisualIntelligence::S2Point __swiftcall S2Point.init(x:y:z:)(Swift::Double x, Swift::Double y, Swift::Double z)
{
  Swift::Double *v3;
  VisualIntelligence::S2Point result;

  *v3 = x;
  v3[1] = y;
  v3[2] = z;
  result.z = z;
  result.y = y;
  result.x = x;
  return result;
}

uint64_t S2Point.largestAbsComponent.getter()
{
  double *v0;
  double v1;
  double v2;
  double v3;
  uint64_t v4;

  v1 = fabs(*v0);
  v2 = fabs(v0[1]);
  v3 = fabs(v0[2]);
  v4 = 2;
  if (v3 < v2)
    v4 = 1;
  if (v2 >= v1)
    return v4;
  else
    return 2 * (v3 >= v1);
}

Swift::Double __swiftcall S2Point.get(axis:)(Swift::Int axis)
{
  Swift::Double *v1;
  Swift::Double *v2;

  v2 = v1 + 1;
  if (axis != 1)
    v2 = v1 + 2;
  if (!axis)
    v2 = v1;
  return *v2;
}

double static S2Point.normalize(point:)@<D0>(double *a1@<X0>, double *a2@<X8>)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double result;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = sqrt(v2 * v2 + v3 * v3 + v4 * v4);
  if (v5 != 0.0)
    v5 = 1.0 / v5;
  result = v2 * v5;
  *a2 = result;
  a2[1] = v3 * v5;
  a2[2] = v4 * v5;
  return result;
}

float64_t - prefix(_:)@<D0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X8>)
{
  float64_t result;

  result = -a1[1].f64[0];
  *a2 = vnegq_f64(*a1);
  a2[1].f64[0] = result;
  return result;
}

VisualIntelligence::S2Point __swiftcall S2Point.crossProd(_:)(VisualIntelligence::S2Point a1)
{
  uint64_t v1;
  float64x2_t *v2;
  uint64_t v3;
  float64x2_t v4;
  float64x2_t v5;
  float64x2_t v6;
  float64x2_t v7;
  double v8;
  double v9;
  VisualIntelligence::S2Point result;

  v4 = *(float64x2_t *)(v1 + 8);
  v5 = *(float64x2_t *)(v3 + 8);
  *(_QWORD *)&v6.f64[0] = vdupq_laneq_s64((int64x2_t)v4, 1).u64[0];
  v6.f64[1] = *(float64_t *)v1;
  *(_QWORD *)&v7.f64[0] = vdupq_laneq_s64((int64x2_t)v5, 1).u64[0];
  v7.f64[1] = *(float64_t *)v3;
  v8 = *(double *)v3 * v4.f64[0];
  v9 = v8 - *(double *)v1 * v5.f64[0];
  *v2 = vsubq_f64(vmulq_f64(v6, v5), vmulq_f64(v4, v7));
  v2[1].f64[0] = v9;
  result.z = v4.f64[0];
  result.y = v8;
  result.x = v9;
  return result;
}

Swift::Double __swiftcall S2Point.dotProd(_:)(VisualIntelligence::S2Point a1)
{
  uint64_t v1;
  uint64_t v2;
  float64x2_t v3;

  v3 = vmulq_f64(*(float64x2_t *)(v1 + 8), *(float64x2_t *)(v2 + 8));
  return *(double *)v1 * *(double *)v2 + v3.f64[0] + v3.f64[1];
}

float64_t + infix(_:_:)@<D0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X1>, float64x2_t *a3@<X8>)
{
  float64_t result;

  result = a1[1].f64[0] + a2[1].f64[0];
  *a3 = vaddq_f64(*a1, *a2);
  a3[1].f64[0] = result;
  return result;
}

float64_t - infix(_:_:)@<D0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X1>, float64x2_t *a3@<X8>)
{
  float64_t result;

  result = a1[1].f64[0] - a2[1].f64[0];
  *a3 = vsubq_f64(*a1, *a2);
  a3[1].f64[0] = result;
  return result;
}

double S2Point.norm.getter()
{
  double *v0;

  return sqrt(*v0 * *v0 + v0[1] * v0[1] + v0[2] * v0[2]);
}

double S2Point.ortho.getter@<D0>(double *a1@<X8>)
{
  double *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double result;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = fabs(*v1);
  v6 = fabs(v3);
  v7 = fabs(v4);
  if (v6 < v5)
  {
    if (v7 < v5)
    {
      v8 = 1.0;
      v9 = 0.0;
      v10 = 0.0;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 >= v6)
  {
LABEL_6:
    v10 = 1.0;
    v9 = 0.0;
    goto LABEL_7;
  }
  v10 = 0.0;
  v9 = 1.0;
LABEL_7:
  v8 = 0.0;
LABEL_8:
  v11 = v3 * v8 - v4 * v10;
  v12 = v4 * v9 - v2 * v8;
  v13 = v2 * v10 - v3 * v9;
  v14 = sqrt(v13 * v13 + v11 * v11 + v12 * v12);
  if (v14 != 0.0)
    v14 = 1.0 / v14;
  result = v13 * v14;
  *a1 = v11 * v14;
  a1[1] = v12 * v14;
  a1[2] = result;
  return result;
}

double S2Point.norm2.getter()
{
  double *v0;

  return *v0 * *v0 + v0[1] * v0[1] + v0[2] * v0[2];
}

Swift::Double __swiftcall S2Point.angle(to:)(VisualIntelligence::S2Point to)
{
  double *v1;
  double *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;

  v3 = v1[1];
  v4 = v1[2];
  v5 = v2[1];
  v6 = v2[2];
  v7 = *v1 * v6 - v4 * *v2;
  v8 = v3 * *v2 - *v1 * v5;
  return atan2(sqrt(v8 * v8 + (v4 * v5 - v3 * v6) * (v4 * v5 - v3 * v6) + v7 * v7), *v1 * *v2 + v3 * v5 + v4 * v6);
}

double S2Point.x.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double S2Point.y.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double S2Point.z.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double static S2Point.fabs(point:)@<D0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X8>)
{
  double result;

  result = fabs(a1[1].f64[0]);
  *a2 = vabsq_f64(*a1);
  a2[1].f64[0] = result;
  return result;
}

double × infix(_:_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, float64x2_t *a3@<X8>)
{
  float64x2_t v3;
  float64x2_t v4;
  float64x2_t v5;
  float64x2_t v6;
  double result;

  v3 = *(float64x2_t *)(a1 + 8);
  v4 = *(float64x2_t *)(a2 + 8);
  *(_QWORD *)&v5.f64[0] = vdupq_laneq_s64((int64x2_t)v4, 1).u64[0];
  v5.f64[1] = *(float64_t *)a2;
  *(_QWORD *)&v6.f64[0] = vdupq_laneq_s64((int64x2_t)v3, 1).u64[0];
  v6.f64[1] = *(float64_t *)a1;
  result = *(double *)a1 * v4.f64[0] - *(double *)a2 * v3.f64[0];
  *a3 = vsubq_f64(vmulq_f64(v3, v5), vmulq_f64(v6, v4));
  a3[1].f64[0] = result;
  return result;
}

double ⋅ infix(_:_:)(uint64_t a1, uint64_t a2)
{
  float64x2_t v2;

  v2 = vmulq_f64(*(float64x2_t *)(a1 + 8), *(float64x2_t *)(a2 + 8));
  return *(double *)a1 * *(double *)a2 + v2.f64[0] + v2.f64[1];
}

Swift::Bool __swiftcall S2Point.aequal(that:margin:)(VisualIntelligence::S2Point that, Swift::Double margin)
{
  double *v2;
  double *v3;

  return vabdd_f64(*v3, *v2) < that.x && vabdd_f64(v3[1], v2[1]) < that.x && vabdd_f64(v3[2], v2[2]) < that.x;
}

uint64_t S2Point.hash(into:)()
{
  return sub_1D4922F28();
}

uint64_t S2Point.hashValue.getter()
{
  sub_1D4922EF8();
  sub_1D4922F28();
  return sub_1D4922F34();
}

BOOL sub_1D47B50F4(double *a1, double *a2)
{
  double v3;
  double v4;

  if (*a2 < *a1)
    return 0;
  if (*a1 < *a2)
    return 1;
  v3 = a1[1];
  v4 = a2[1];
  if (v4 < v3)
    return 0;
  return v3 < v4 || a2[2] >= a1[2];
}

BOOL sub_1D47B5150(double *a1, double *a2)
{
  double v3;
  double v4;

  if (*a1 < *a2)
    return 0;
  if (*a2 < *a1)
    return 1;
  v3 = a1[1];
  v4 = a2[1];
  if (v3 < v4)
    return 0;
  return v4 < v3 || a1[2] >= a2[2];
}

BOOL sub_1D47B51AC(double *a1, double *a2)
{
  double v3;
  double v4;

  if (*a2 < *a1)
    return 1;
  if (*a1 < *a2)
    return 0;
  v3 = a1[1];
  v4 = a2[1];
  if (v4 < v3)
    return 1;
  return v3 >= v4 && a2[2] < a1[2];
}

uint64_t sub_1D47B5210()
{
  sub_1D4922EF8();
  sub_1D4922F28();
  return sub_1D4922F34();
}

BOOL sub_1D47B5270(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

VisualIntelligence::S2Point __swiftcall abs(x:)(VisualIntelligence::S2Point x)
{
  float64x2_t *v1;
  float64x2_t *v2;
  double v3;
  float64x2_t v4;

  v3 = fabs(v1[1].f64[0]);
  v4 = vabsq_f64(*v1);
  *v2 = v4;
  v2[1].f64[0] = v3;
  x.y = v4.f64[0];
  x.x = v3;
  return x;
}

float64x2_t / infix(_:_:)@<Q0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X8>, uint64_t a3@<D0>)
{
  float64_t v3;
  float64x2_t result;

  v3 = a1[1].f64[0] / *(double *)&a3;
  result = vdivq_f64(*a1, (float64x2_t)vdupq_lane_s64(a3, 0));
  *a2 = result;
  a2[1].f64[0] = v3;
  return result;
}

unint64_t sub_1D47B52E0()
{
  unint64_t result;

  result = qword_1EFEAB850;
  if (!qword_1EFEAB850)
  {
    result = MEMORY[0x1D82634E0](&protocol conformance descriptor for S2Point, &type metadata for S2Point);
    atomic_store(result, (unint64_t *)&qword_1EFEAB850);
  }
  return result;
}

ValueMetadata *type metadata accessor for S2Point()
{
  return &type metadata for S2Point;
}

uint64_t sub_1D47B5334(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  int64_t v6;
  int *v7;
  uint64_t result;
  uint64_t *v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v32 = MEMORY[0x1E0DEE9D8];
  sub_1D48AC218(0, v6, 0);
  v25 = v6;
  v28 = a2;
  v29 = a1;
  v26 = v5;
  v27 = v4;
  if (v6)
  {
    v7 = (int *)(a2 + 32);
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v9 = (uint64_t *)(a1 + 40);
    while (v4)
    {
      if (!v5)
        goto LABEL_26;
      v10 = *v9;
      v31 = *(v9 - 1);
      v11 = *v7;
      v13 = *(_QWORD *)(v32 + 16);
      v12 = *(_QWORD *)(v32 + 24);
      result = swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1)
        result = sub_1D48AC218(v12 > 1, v13 + 1, 1);
      *(_QWORD *)(v32 + 16) = v13 + 1;
      v14 = v32 + 24 * v13;
      --v5;
      *(_QWORD *)(v14 + 32) = v31;
      *(_QWORD *)(v14 + 40) = v10;
      *(_DWORD *)(v14 + 48) = v11;
      --v4;
      ++v7;
      v9 += 2;
      if (!--v6)
        goto LABEL_13;
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
LABEL_13:
    if (v27 <= v26)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v32;
    }
    v15 = 0;
    if (v25 <= v26)
      v16 = v26;
    else
      v16 = v25;
    v30 = v16 - v25;
    v17 = v27 - v25;
    v18 = (uint64_t *)(v29 + 16 * v25 + 40);
    while (v17 != v15)
    {
      if (v26 - v25 == v15)
        goto LABEL_24;
      if (v30 == v15)
        goto LABEL_28;
      v20 = *(v18 - 1);
      v19 = *v18;
      v21 = *(_DWORD *)(v28 + 4 * v25 + 32 + 4 * v15);
      v23 = *(_QWORD *)(v32 + 16);
      v22 = *(_QWORD *)(v32 + 24);
      result = swift_bridgeObjectRetain();
      if (v23 >= v22 >> 1)
        result = sub_1D48AC218(v22 > 1, v23 + 1, 1);
      *(_QWORD *)(v32 + 16) = v23 + 1;
      v24 = v32 + 24 * v23;
      *(_QWORD *)(v24 + 32) = v20;
      *(_QWORD *)(v24 + 40) = v19;
      *(_DWORD *)(v24 + 48) = v21;
      ++v15;
      v18 += 2;
      if (v17 == v15)
        goto LABEL_24;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1D47B5570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 *v16;
  _QWORD *v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v22;

  v9 = type metadata accessor for EspressoModel(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v4 + 136))
    sub_1D483D748(*(_QWORD *)(a1 + 80));
  sub_1D47B6118(a3, (uint64_t)v11);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = qword_1ED98CC88;
  swift_retain();
  if (v13 != -1)
    swift_once();
  v22 = xmmword_1ED98CC60;
  v14 = xmmword_1ED98CC70;
  type metadata accessor for EspressoRequest(0);
  v15 = swift_allocObject();
  sub_1D47B6118((uint64_t)v11, v15 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_model);
  *(_QWORD *)(v15 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_features) = 0;
  *(_QWORD *)(v15 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_vnScalingMode) = v12;
  v16 = (__int128 *)(v15 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_regionOfInterest);
  *v16 = v22;
  v16[1] = v14;
  *(_QWORD *)(v15 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_outputs) = 0;
  v17 = (_QWORD *)(v15 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_completionHandler);
  *v17 = faiss::NormalizationTransform::~NormalizationTransform;
  v17[1] = 0;
  if (qword_1ED98D918 != -1)
    swift_once();
  v18 = qword_1ED9A4A78;
  swift_retain();
  sub_1D47B615C((uint64_t)v11);
  *(_QWORD *)(v15 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_engineResult) = v18;
  *(_BYTE *)(v15 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_usesCPUOnly) = 0;
  *(_QWORD *)(v15 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_metricsBucket) = a4;
  v19 = (_OWORD *)(v15 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_regionOfInterest);
  v20 = *(_OWORD *)(a1 + 56);
  *v19 = *(_OWORD *)(a1 + 40);
  v19[1] = v20;
  return v15;
}

void sub_1D47B5770()
{
  qword_1ED9A49D0 = (uint64_t)&unk_1E97FC4D8;
}

uint64_t sub_1D47B5784()
{
  return sub_1D47C0B30();
}

void sub_1D47B57A4(uint64_t *a1@<X0>, double *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  uint64_t v15;
  int v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  double v27;
  double v28;
  CGFloat Width;
  CGFloat Height;
  CGFloat x;
  CGFloat y;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  CGFloat v38;
  __int128 v39;
  CGFloat v40;
  double v41;
  CGFloat MinX;
  double v43;
  double v44;
  double v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  double v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;

  v15 = *a1;
  v16 = *((_DWORD *)a1 + 2);
  v18 = *((double *)a1 + 2);
  v17 = *((double *)a1 + 3);
  v19 = *((double *)a1 + 4);
  v20 = *((double *)a1 + 5);
  sub_1D47547D0(a1[6], 0, 0, &v47);
  v21 = v48;
  if (v48)
  {
    v46 = v49;
    v22 = v47;
    v44 = v19 - v18;
    v45 = v20 - v17;
    v23 = a2[5];
    v24 = a2[6];
    v50 = a8;
    v43 = a7;
    v25 = a2[7];
    v26 = a2[8];
    v51.origin.x = v23;
    v51.origin.y = v24;
    v51.size.width = v25;
    v51.size.height = v26;
    MinX = CGRectGetMinX(v51);
    v52.origin.x = v23;
    v52.origin.y = v24;
    v52.size.width = v25;
    v52.size.height = v26;
    v40 = 1.0 - CGRectGetMaxY(v52);
    v41 = a6;
    v53.origin.x = v23;
    v53.origin.y = v24;
    v53.size.width = v25;
    v53.size.height = v26;
    v27 = v17;
    v28 = a5;
    Width = CGRectGetWidth(v53);
    v54.origin.x = v23;
    v54.origin.y = v24;
    v54.size.width = v25;
    v54.size.height = v26;
    Height = CGRectGetHeight(v54);
    VIPredictionInNormalizedImageCoordinates(a3, v27, v18, v45, v44, v28, v41, v43, v50, MinX, v40, Width, Height);
    x = v55.origin.x;
    y = v55.origin.y;
    v33 = v55.size.width;
    v34 = v55.size.height;
    v35 = CGRectGetMinX(v55);
    v56.origin.x = x;
    v56.origin.y = y;
    v56.size.width = v33;
    v56.size.height = v34;
    v36 = 1.0 - CGRectGetMaxY(v56);
    v57.origin.x = x;
    v57.origin.y = y;
    v57.size.width = v33;
    v57.size.height = v34;
    v37 = CGRectGetWidth(v57);
    v58.origin.x = x;
    v58.origin.y = y;
    v58.size.width = v33;
    v58.size.height = v34;
    v38 = CGRectGetHeight(v58);
    *(_QWORD *)a4 = v15;
    *(CGFloat *)(a4 + 8) = v35;
    *(double *)(a4 + 16) = v36;
    *(CGFloat *)(a4 + 24) = v37;
    *(CGFloat *)(a4 + 32) = v38;
    v39 = v46;
    *(_QWORD *)(a4 + 40) = v22;
    *(_QWORD *)(a4 + 48) = v21;
  }
  else
  {
    v16 = 0;
    *(_QWORD *)(a4 + 48) = 0;
    v39 = 0uLL;
    *(_OWORD *)(a4 + 16) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)a4 = 0u;
  }
  *(_OWORD *)(a4 + 56) = v39;
  *(_DWORD *)(a4 + 72) = v16;
}

void sub_1D47B59AC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, _QWORD *a5@<X4>, void *a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  double v22;
  void *v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  id v27;
  char *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  _QWORD *v33;
  void *v34;
  _QWORD *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  unsigned int v42;
  _BYTE v43[16];
  uint64_t v44;
  double v45;
  double v46;
  int64x2_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  uint64_t v51;
  _QWORD *v52;
  void *v53;
  void *v54;
  void *v55;
  uint64_t v56;
  _QWORD v57[5];

  sub_1D472DA88(a4, *(_BYTE *)(a1 + 72), a2, a3, a5, (uint64_t)v57);
  if (!v7)
  {
    v52 = a7;
    v13 = v57[0];
    v55 = (void *)v57[2];
    v56 = v57[1];
    v53 = (void *)v57[4];
    v54 = (void *)v57[3];
    v15 = *(_QWORD *)(a1 + 24);
    v14 = *(_QWORD *)(a1 + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)a1, v15);
    v16 = (*(double (**)(uint64_t, uint64_t))(v14 + 16))(v15, v14);
    v18 = v17;
    v19 = *(_QWORD *)(a1 + 24);
    v20 = *(_QWORD *)(a1 + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)a1, v19);
    v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
    if (v21 >= 5)
    {
      v22 = v18;
      v23 = a6;
      if (v21 - 5 >= 4)
      {
        v42 = v21;
        type metadata accessor for CGImagePropertyOrientation(0);
        LODWORD(v57[0]) = v42;
        sub_1D4922E74();
        __break(1u);
        return;
      }
    }
    else
    {
      v22 = v16;
      v16 = v18;
      v23 = a6;
    }
    v24 = VIvnCropScaleToVi(*(_QWORD *)(a2 + 72));
    v44 = a3;
    v45 = v22;
    v46 = v16;
    v47 = vdupq_n_s64(0x4080000000000000uLL);
    v48 = a1;
    v49 = MEMORY[0x1E0C80A78](v24);
    v25 = sub_1D489C344((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1D47B6054, (uint64_t)v43, v13);
    v26 = swift_bridgeObjectRelease();
    if (v23)
    {
      v27 = v23;
      v28 = (char *)sub_1D49225EC();
      v38 = sub_1D48525D4(v28, v37);
      if (qword_1ED98D470 != -1)
        swift_once();
      v39 = swift_bridgeObjectRetain();
      v51 = sub_1D47B5334(v39, v38);
      swift_release();
      swift_bridgeObjectRelease();

      if (!v56)
        goto LABEL_12;
    }
    else
    {
      v51 = 0;
      if (!v56)
      {
LABEL_12:
        v35 = 0;
        v31 = 0;
        v32 = 0;
        v23 = 0;
        goto LABEL_13;
      }
    }
    v50[1] = v50;
    MEMORY[0x1E0C80A78](v26);
    v44 = a3;
    v45 = v22;
    v46 = v16;
    v47 = vdupq_n_s64(0x4080000000000000uLL);
    v48 = a1;
    v49 = v24;
    v30 = (uint64_t)v29;
    v32 = v54;
    v31 = v55;
    v33 = v25;
    v34 = v53;
    sub_1D47B608C(v29, v55, v54, v53);
    swift_bridgeObjectRetain();
    v35 = sub_1D489C344((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1D47B6054, (uint64_t)v43, v30);
    sub_1D47B60D4(v30, v31, v32, v34);
    swift_bridgeObjectRelease();
    v36 = v23;
    swift_bridgeObjectRelease();

    v25 = v33;
LABEL_13:
    v41 = v51;
    v40 = v52;
    *v52 = v25;
    v40[1] = v41;
    v40[2] = v35;
    v40[3] = v31;
    v40[4] = v32;
    v40[5] = v23;
  }
}

void sub_1D47B5D4C(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[6];
  _BYTE v43[16];
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;

  v10 = a2[3];
  v11 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  if (v5)
    return;
  v13 = v12;
  v14 = *(_QWORD *)(v12 + 24);
  if (!*(_QWORD *)(v14 + 16))
  {
LABEL_13:
    sub_1D46AAFD4();
    swift_allocError();
    *(_QWORD *)v32 = 0xD000000000000019;
    *(_QWORD *)(v32 + 8) = 0x80000001D49448C0;
    *(_BYTE *)(v32 + 16) = 4;
    swift_willThrow();
    swift_release();
    return;
  }
  v15 = a3[1];
  v16 = a3[2];
  swift_bridgeObjectRetain();
  v17 = sub_1D47CA4DC(v15, v16);
  if ((v18 & 1) == 0)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v19 = *(id *)(*(_QWORD *)(v14 + 56) + 8 * v17);
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v13 + 24);
  if (!*(_QWORD *)(v20 + 16))
  {

    goto LABEL_13;
  }
  v21 = a3[4];
  v22 = a3[5];
  swift_bridgeObjectRetain();
  v23 = sub_1D47CA4DC(v21, v22);
  if ((v24 & 1) == 0)
  {

    goto LABEL_12;
  }
  v46 = *(id *)(*(_QWORD *)(v20 + 56) + 8 * v23);
  swift_bridgeObjectRelease();
  sub_1D47B600C((uint64_t)(a3 + 12), (uint64_t)v43);
  sub_1D47B600C((uint64_t)v43, (uint64_t)&v44);
  v25 = v45;
  if (!v45)
  {
    v30 = 0;
    goto LABEL_16;
  }
  v26 = *(_QWORD *)(v13 + 24);
  if (*(_QWORD *)(v26 + 16))
  {
    v27 = v44;
    swift_bridgeObjectRetain();
    v28 = sub_1D47CA4DC(v27, v25);
    if ((v29 & 1) != 0)
    {
      v30 = *(void **)(*(_QWORD *)(v26 + 56) + 8 * v28);
      v31 = v30;
      sub_1D46CCAB0((uint64_t)v43);
LABEL_16:
      v33 = a4;
      v34 = v46;
      sub_1D47B59AC(a1, (uint64_t)a3, v33, v19, v46, v30, v42);
      v35 = v42[1];
      v36 = v42[2];
      v37 = v42[3];
      v40 = v42[4];
      v41 = v42[0];
      v39 = v42[5];
      swift_release();

      *a5 = v41;
      a5[1] = v35;
      a5[2] = v36;
      a5[3] = v37;
      a5[4] = v40;
      a5[5] = v39;
      return;
    }
    sub_1D46CCAB0((uint64_t)v43);
  }
  sub_1D46AAFD4();
  swift_allocError();
  *(_QWORD *)v38 = 0xD00000000000002FLL;
  *(_QWORD *)(v38 + 8) = 0x80000001D49448E0;
  *(_BYTE *)(v38 + 16) = 4;
  swift_willThrow();
  swift_release();

}

uint64_t sub_1D47B600C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D47B6054(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1D47B6068(a1, a2);
}

void sub_1D47B6068(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1D47B57A4(a1, *(double **)(v2 + 56), *(_QWORD *)(v2 + 64), a2, *(double *)(v2 + 24), *(double *)(v2 + 32), *(double *)(v2 + 40), *(double *)(v2 + 48));
}

id sub_1D47B608C(id result, void *a2, void *a3, void *a4)
{
  id v5;
  id v6;

  if (result)
  {
    v5 = a4;
    swift_bridgeObjectRetain();
    v6 = a2;
    return a3;
  }
  return result;
}

void sub_1D47B60D4(uint64_t a1, void *a2, void *a3, void *a4)
{
  if (a1)
  {
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_1D47B6118(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EspressoModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D47B615C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EspressoModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

VisualIntelligence::S2::Metric __swiftcall S2.Metric.init(dim:deriv:)(Swift::Int dim, Swift::Double deriv)
{
  uint64_t v2;
  VisualIntelligence::S2::Metric result;

  *(Swift::Double *)v2 = deriv;
  *(_QWORD *)(v2 + 8) = dim;
  result.deriv = deriv;
  result.dim = dim;
  return result;
}

void static S2.robustCrossProd(a:b:)(double *a1@<X0>, double *a2@<X1>, double *a3@<X8>)
{
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a2[1];
  v6 = a2[2];
  v7 = *a1 + *a2;
  v8 = v3 + v5;
  v9 = *a2 - *a1;
  v10 = v5 - v3;
  v11 = (v3 + v5) * (v6 - v4) - (v5 - v3) * (v4 + v6);
  v12 = v9 * (v4 + v6) - v7 * (v6 - v4);
  v13 = v7 * v10 - v9 * v8;
  if (v11 == 0.0 && v12 == 0.0 && v13 == 0.0)
  {
    S2Point.ortho.getter(a3);
  }
  else
  {
    *a3 = v11;
    a3[1] = v12;
    a3[2] = v13;
  }
}

BOOL static S2.isUnitLength(point:)(double *a1)
{
  return fabs(*a1 * *a1 + a1[1] * a1[1] + a1[2] * a1[2] + -1.0) <= 1.0e-15;
}

BOOL static S2.simpleCCW(a:b:c:)(uint64_t a1, float64x2_t *a2, uint64_t a3)
{
  float64x2_t v3;
  float64x2_t v4;
  float64x2_t v5;
  float64x2_t v6;

  v3 = *(float64x2_t *)(a1 + 8);
  *(_QWORD *)&v4.f64[0] = vdupq_laneq_s64((int64x2_t)v3, 1).u64[0];
  v4.f64[1] = *(float64_t *)a1;
  v5 = *(float64x2_t *)(a3 + 8);
  *(_QWORD *)&v6.f64[0] = vdupq_laneq_s64((int64x2_t)v5, 1).u64[0];
  v6.f64[1] = *(float64_t *)a3;
  return a2[1].f64[0] * (*(double *)a3 * v3.f64[0] - *(double *)a1 * v5.f64[0])
       + vaddvq_f64(vmulq_f64(*a2, vsubq_f64(vmulq_f64(v4, v5), vmulq_f64(v3, v6)))) > 0.0;
}

uint64_t static S2.swapMask.getter()
{
  return 1;
}

uint64_t static S2.invertMask.getter()
{
  return 2;
}

void sub_1D47B62FC()
{
  qword_1ED9A49E8 = (uint64_t)&unk_1E97FD3D0;
}

unint64_t static S2.posToOrientation(position:)(unint64_t result)
{
  unint64_t v1;

  if (result > 3)
  {
    __break(1u);
  }
  else
  {
    v1 = result;
    if (qword_1ED98DCC8 == -1)
      goto LABEL_3;
  }
  result = swift_once();
LABEL_3:
  if (*(_QWORD *)(qword_1ED9A49E8 + 16) > v1)
    return *(_QWORD *)(qword_1ED9A49E8 + 8 * v1 + 32);
  __break(1u);
  return result;
}

double sub_1D47B6380()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98ECC0);
  v0 = swift_allocObject();
  *(_QWORD *)&result = 4;
  *(_OWORD *)(v0 + 16) = xmmword_1D4927560;
  *(_QWORD *)(v0 + 32) = &unk_1E97FD5D0;
  *(_QWORD *)(v0 + 40) = &unk_1E97FD510;
  *(_QWORD *)(v0 + 48) = &unk_1E97FD550;
  *(_QWORD *)(v0 + 56) = &unk_1E97FD590;
  off_1ED98DCD0 = (_UNKNOWN *)v0;
  return result;
}

uint64_t static S2.posToIJ(orientation:position:)(uint64_t a1, unint64_t a2)
{
  return sub_1D47B6480(a1, a2, &qword_1ED98DCE0, (uint64_t)&off_1ED98DCD0);
}

double sub_1D47B6400()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98ECC0);
  v0 = swift_allocObject();
  *(_QWORD *)&result = 4;
  *(_OWORD *)(v0 + 16) = xmmword_1D4927560;
  *(_QWORD *)(v0 + 32) = &unk_1E97FD4D0;
  *(_QWORD *)(v0 + 40) = &unk_1E97FD410;
  *(_QWORD *)(v0 + 48) = &unk_1E97FD450;
  *(_QWORD *)(v0 + 56) = &unk_1E97FD490;
  qword_1EFEAB858 = v0;
  return result;
}

uint64_t static S2.toPos(orientation:ijIndex:)(uint64_t a1, unint64_t a2)
{
  return sub_1D47B6480(a1, a2, qword_1EFEA9F18, (uint64_t)&qword_1EFEAB858);
}

uint64_t sub_1D47B6480(uint64_t result, unint64_t a2, _QWORD *a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if ((a2 | result) > 3)
  {
    __break(1u);
  }
  else
  {
    v6 = a4;
    v4 = a2;
    v5 = result;
    if (*a3 == -1)
      goto LABEL_3;
  }
  result = swift_once();
LABEL_3:
  if (*(_QWORD *)(*(_QWORD *)v6 + 16) <= v5)
  {
    __break(1u);
  }
  else
  {
    v7 = *(_QWORD *)(*(_QWORD *)v6 + 8 * v5 + 32);
    if (*(_QWORD *)(v7 + 16) > v4)
      return *(_QWORD *)(v7 + 8 * v4 + 32);
  }
  __break(1u);
  return result;
}

double S2.Metric.deriv.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t S2.Metric.dim.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

Swift::Double __swiftcall S2.Metric.getValue(level:)(Swift::Int level)
{
  uint64_t v1;

  return scalb(*(double *)v1, (1.0 - (double)level) * (double)*(uint64_t *)(v1 + 8));
}

Swift::Int __swiftcall S2.Metric.getClosestLevel(value:)(Swift::Double value)
{
  return S2.Metric.getMinLevel(value:)(value * 1.41421356);
}

Swift::Int __swiftcall S2.Metric.getMinLevel(value:)(Swift::Double value)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  Swift::Int result;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  Swift::Int v11;
  uint64_t v12;

  if (value <= 0.0)
    return 30;
  v2 = *(_QWORD *)(v1 + 8);
  v3 = 1 << v2;
  if (v2 >= 0x40)
    v3 = 0;
  if (v2 > 0x40)
    v3 = 0;
  v6 = exp(value / (*(double *)v1 * (double)v3));
  v7 = *(_QWORD *)&v6;
  if ((*(_QWORD *)&v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v5 = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v5 < -64)
  {
LABEL_9:
    v8 = 0;
    goto LABEL_18;
  }
  v7 = *(_QWORD *)&v6 - 1;
  if (v5 > 64)
    goto LABEL_12;
  if ((v5 & 0x8000000000000000) == 0)
  {
    if ((unint64_t)v5 < 0x40)
    {
      v9 = v7 >> v5;
      v10 = __OFSUB__(0, v9);
      v8 = -v9;
      if (!v10)
        goto LABEL_18;
      goto LABEL_26;
    }
LABEL_12:
    v8 = -(v7 >> 63);
    if (!__OFSUB__(0, v7 >> 63))
      goto LABEL_18;
LABEL_26:
    __break(1u);
    return result;
  }
LABEL_23:
  if ((unint64_t)v5 <= 0xFFFFFFFFFFFFFFC0)
    goto LABEL_9;
  v12 = v7 << -(char)v5;
  v10 = __OFSUB__(0, v12);
  v8 = -v12;
  if (v10)
    goto LABEL_26;
LABEL_18:
  v11 = v8 & ~(v8 >> 63);
  if (v11 >= 30)
    return 30;
  else
    return v11;
}

Swift::Int __swiftcall S2.Metric.getMaxLevel(value:)(Swift::Double value)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  long double v5;
  unint64_t v6;
  uint64_t v8;

  if (value <= 0.0)
    return 30;
  v2 = *(_QWORD *)(v1 + 8);
  v3 = 1 << v2;
  if (v2 >= 0x40)
    v3 = 0;
  if (v2 > 0x40)
    v3 = 0;
  v5 = exp(*(double *)v1 * (double)v3 / value);
  v6 = *(_QWORD *)&v5 - 1;
  if (v5 == 0.0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v4 = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v4 < -64 || v4 > 64)
    return 0;
  if (v4 < 0)
  {
LABEL_19:
    if ((unint64_t)v4 > 0xFFFFFFFFFFFFFFC0)
    {
      v8 = v6 << -(char)v4;
      if (v8 <= 29)
        return v8 & ~(v8 >> 63);
      return 30;
    }
    return 0;
  }
  if ((unint64_t)v4 >= 0x40)
    return 0;
  v8 = v6 >> v4;
  if (v8 <= 29)
    return v8 & ~(v8 >> 63);
  return 30;
}

double static S2.origin.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = xmmword_1D4927DA0;
  *(_QWORD *)(a1 + 16) = 0;
  return result;
}

double static S2.signedArea(a:b:c:)(uint64_t a1, double *a2, double *a3, double a4, double a5, double a6)
{
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  double v13;
  double v14;
  double v16;
  double v17[3];
  double v18;
  uint64_t v19;
  double v20;
  __int128 v21;
  double v22;
  __int128 v23;
  double v24;

  v7 = *(double *)(a1 + 8);
  v8 = *(double *)(a1 + 16);
  v9 = *a2;
  v10 = a2[1];
  v11 = a2[2];
  v13 = *a3;
  v12 = *((_QWORD *)a3 + 1);
  v16 = a3[2];
  *(_QWORD *)&v23 = *(_QWORD *)a1;
  v6 = *(double *)&v23;
  *((double *)&v23 + 1) = v7;
  v24 = v8;
  *(double *)&v21 = v9;
  *((double *)&v21 + 1) = v10;
  v22 = v11;
  v18 = v13;
  v19 = v12;
  v20 = v16;
  sub_1D47B766C((uint64_t *)&v23, (uint64_t *)&v21, &v18, v16, a5, a6);
  *(double *)&v23 = v6;
  *((double *)&v23 + 1) = v7;
  v24 = v8;
  *(double *)&v21 = v9;
  *((double *)&v21 + 1) = v10;
  v22 = v11;
  v18 = v13;
  v19 = v12;
  v20 = v16;
  v17[0] = v7 * v11 - v8 * v10;
  v17[1] = v8 * v9 - v6 * v11;
  v17[2] = v6 * v10 - v7 * v9;
  return v14 * (double)_s18VisualIntelligence2S2V9robustCCW1a1b1c7aCrossBSiAA0C5PointV_A3JtFZ_0(&v23, &v21, &v18, v17);
}

uint64_t static S2.robustCCW(a:b:c:)(uint64_t a1, double *a2, __int128 *a3)
{
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  double v10[3];
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  double v14;
  __int128 v15;
  double v16;

  v3 = *(double *)(a1 + 8);
  v4 = *(double *)(a1 + 16);
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = *((_QWORD *)a3 + 2);
  *(_QWORD *)&v15 = *(_QWORD *)a1;
  *((double *)&v15 + 1) = v3;
  v16 = v4;
  *(double *)&v13 = v5;
  *((double *)&v13 + 1) = v6;
  v14 = v7;
  v11 = *a3;
  v12 = v8;
  v10[0] = v3 * v7 - v4 * v6;
  v10[1] = v4 * v5 - *(double *)&v15 * v7;
  v10[2] = *(double *)&v15 * v6 - v3 * v5;
  return _s18VisualIntelligence2S2V9robustCCW1a1b1c7aCrossBSiAA0C5PointV_A3JtFZ_0(&v15, &v13, (double *)&v11, v10);
}

float64_t static S2.planarCentroid(a:b:c:)@<D0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X1>, float64x2_t *a3@<X2>, float64x2_t *a4@<X8>)
{
  float64_t result;

  result = (a1[1].f64[0] + a2[1].f64[0] + a3[1].f64[0]) / 3.0;
  __asm { FMOV            V2.2D, #3.0 }
  *a4 = vdivq_f64(vaddq_f64(vaddq_f64(*a1, *a2), *a3), _Q2);
  a4[1].f64[0] = result;
  return result;
}

double static S2.trueCentroid(a:b:c:)@<D0>(double *a1@<X0>, double *a2@<X1>, double *a3@<X2>, double *a4@<X8>)
{
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  BOOL v26;
  long double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  long double v33;
  double result;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;

  v5 = a1[1];
  v6 = a1[2];
  v7 = a2[1];
  v8 = a2[2];
  v9 = a3[1];
  v10 = a3[2];
  v11 = v7 * v10 - v8 * v9;
  v12 = v8 * *a3 - *a2 * v10;
  v13 = *a2 * v9 - v7 * *a3;
  v14 = sqrt(v13 * v13 + v11 * v11 + v12 * v12);
  v15 = v6 * v9 - v5 * v10;
  v16 = *a1 * v10 - v6 * *a3;
  v17 = v5 * *a3 - *a1 * v9;
  v18 = sqrt(v17 * v17 + v15 * v15 + v16 * v16);
  v19 = v5 * v8 - v6 * v7;
  v20 = v6 * *a2 - *a1 * v8;
  v21 = *a1 * v7 - v5 * *a2;
  v22 = sqrt(v21 * v21 + v19 * v19 + v20 * v20);
  if (v14 == 0.0)
  {
    if (v18 == 0.0)
    {
      v23 = 1.0;
      v24 = 1.0;
      v25 = 1.0;
      if (v22 != 0.0)
        goto LABEL_10;
      goto LABEL_11;
    }
    v35 = v19;
    v37 = v20;
    v39 = v6 * v9 - v5 * v10;
    v41 = *a2 * v9 - v7 * *a3;
    v24 = 1.0;
  }
  else
  {
    v35 = v19;
    v37 = v20;
    v39 = v6 * v9 - v5 * v10;
    v41 = *a2 * v9 - v7 * *a3;
    v24 = asin(v14) / v14;
    if (v18 == 0.0)
    {
      v23 = 1.0;
      v26 = v22 == 0.0;
      v25 = 1.0;
      goto LABEL_9;
    }
  }
  v27 = asin(v18);
  v25 = 1.0;
  v26 = v22 == 0.0;
  v23 = v27 / v18;
LABEL_9:
  v15 = v39;
  v13 = v41;
  v19 = v35;
  v20 = v37;
  if (!v26)
  {
LABEL_10:
    v40 = v17;
    v42 = v16;
    v36 = v21;
    v38 = v11;
    v28 = v12;
    v29 = v13;
    v30 = v15;
    v31 = v20;
    v32 = v19;
    v33 = asin(v22);
    v19 = v32;
    v20 = v31;
    v15 = v30;
    v13 = v29;
    v12 = v28;
    v21 = v36;
    v11 = v38;
    v17 = v40;
    v16 = v42;
    v25 = v33 / v22;
  }
LABEL_11:
  result = (v19 * v25 + v15 * v23 + v11 * v24) * 0.5;
  *a4 = result;
  a4[1] = (v20 * v25 + v16 * v23 + v12 * v24) * 0.5;
  a4[2] = (v21 * v25 + v17 * v23 + v13 * v24) * 0.5;
  return result;
}

Swift::Double static S2.angle(a:b:c:)(uint64_t a1, double *a2, double *a3)
{
  double v3;
  double v4;
  double v5;
  double v6;
  VisualIntelligence::S2Point v8;

  v3 = a2[1];
  v4 = a2[2];
  v5 = a3[1];
  v6 = a3[2];
  v8.x = v4 * v5 - v3 * v6;
  v8.y = *a2 * v6 - v4 * *a3;
  v8.z = v3 * *a3 - *a2 * v5;
  return S2Point.angle(to:)(v8);
}

uint64_t static S2.turnAngle(a:b:c:)(double *a1, double *a2, double *a3)
{
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17[3];
  double v18[3];
  __int128 v19;
  double v20;
  __int128 v21;
  double v22;
  VisualIntelligence::S2Point v23;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = *a2;
  v7 = a2[1];
  v8 = a2[2];
  v10 = *a3;
  v9 = a3[1];
  v12 = a3[2];
  v15 = *a1 * v8;
  v16 = v5 * *a2;
  v13 = v4 * *a2;
  v14 = *a1 * v7;
  v23.x = v8 * v9 - v7 * v12;
  v23.y = *a2 * v12 - v8 * *a3;
  v23.z = v7 * *a3 - *a2 * v9;
  S2Point.angle(to:)(v23);
  *(double *)&v21 = v3;
  *((double *)&v21 + 1) = v4;
  v22 = v5;
  *(double *)&v19 = v6;
  *((double *)&v19 + 1) = v7;
  v20 = v8;
  v18[0] = v10;
  v18[1] = v9;
  v18[2] = v12;
  v17[0] = v4 * v8 - v5 * v7;
  v17[1] = v16 - v15;
  v17[2] = v14 - v13;
  return _s18VisualIntelligence2S2V9robustCCW1a1b1c7aCrossBSiAA0C5PointV_A3JtFZ_0(&v21, &v19, v18, v17);
}

BOOL static S2.approxEquals(_:_:maxError:)(Swift::Double *a1, Swift::Double *a2, Swift::Double a3)
{
  VisualIntelligence::S2Point v5;

  v5.y = a2[2];
  v5.z = *a1;
  v5.x = *a2;
  return S2Point.angle(to:)(v5) <= a3;
}

BOOL static S2.approxEquals(_:_:maxError:)(double a1, double a2, double a3)
{
  return vabdd_f64(a1, a2) <= a3;
}

BOOL _s18VisualIntelligence2S2V14simpleCrossing1a1b1c1dSbAA0C5PointV_A3JtFZ_0(double *a1, double *a2, double *a3, double *a4)
{
  _BOOL8 result;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;

  result = 0;
  v6 = a1[1];
  v7 = a1[2];
  v8 = a2[1];
  v9 = a2[2];
  v10 = a3[1];
  v11 = a3[2];
  v12 = a4[1];
  v13 = a4[2];
  v14 = v6 * v9 - v7 * v8;
  v15 = v7 * *a2 - *a1 * v9;
  v16 = *a1 * v8 - v6 * *a2;
  v17 = v10 * v13 - v11 * v12;
  v18 = v11 * *a4 - *a3 * v13;
  v19 = *a3 * v12 - v10 * *a4;
  v20 = v9 * v19 + *a2 * v17 + v8 * v18;
  if ((*a3 * v14 + v15 * v10 + v16 * v11) * v20 > 0.0)
  {
    v21 = v14 * *a4 + v15 * v12 + v16 * v13;
    if (-(v20 * v21) > 0.0)
      return v21 * (v7 * v19 + *a1 * v17 + v6 * v18) > 0.0;
  }
  return result;
}

uint64_t _s18VisualIntelligence2S2V9planarCCW1a1bSiAA8R2VectorV_AHtFZ_0(double *a1, double *a2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  BOOL v11;
  double v12;
  uint64_t v13;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  v6 = 1.0;
  if (*a1 * *a2 + v3 * v5 > 0.0)
    v6 = -1.0;
  v7 = v2 + v4 * v6;
  v8 = v3 + v5 * v6;
  v9 = v2 * v2 + v3 * v3;
  v10 = v4 * v4 + v5 * v5;
  if (v9 < v10 || v9 == v10 && (v2 < v4 || (v4 >= v2 ? (v11 = v3 < v5) : (v11 = 0), v11)))
    v12 = v6 * (v2 * v8 - v3 * v7);
  else
    v12 = v5 * v7 - v4 * v8;
  if (v12 >= 0.0)
    v13 = 0;
  else
    v13 = -1;
  if (v12 > 0.0)
    return 1;
  else
    return v13;
}

uint64_t _s18VisualIntelligence2S2V16planarOrderedCCW1a1b1cSiAA8R2VectorV_A2ItFZ_0(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *a1;
  v4 = a1[1];
  v5 = *a2;
  v6 = a2[1];
  v7 = *a3;
  v8 = a3[1];
  v16 = *a1;
  v17 = v4;
  v14 = v5;
  v15 = v6;
  v9 = _s18VisualIntelligence2S2V9planarCCW1a1bSiAA8R2VectorV_AHtFZ_0((double *)&v16, (double *)&v14);
  v16 = v5;
  v17 = v6;
  v14 = v7;
  v15 = v8;
  result = _s18VisualIntelligence2S2V9planarCCW1a1bSiAA8R2VectorV_AHtFZ_0((double *)&v16, (double *)&v14);
  v11 = __OFADD__(v9, result);
  v12 = v9 + result;
  if (v11)
  {
    __break(1u);
    goto LABEL_7;
  }
  v16 = v7;
  v17 = v8;
  v14 = v3;
  v15 = v4;
  result = _s18VisualIntelligence2S2V9planarCCW1a1bSiAA8R2VectorV_AHtFZ_0((double *)&v16, (double *)&v14);
  v13 = v12 + result;
  if (__OFADD__(v12, result))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  if (v13 >= 1)
    return 1;
  else
    return v13 >> 63;
}

uint64_t sub_1D47B6F88(double *a1, double *a2, double *a3)
{
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v11;
  double v12;
  double v13;
  BOOL v14;
  BOOL v16;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  BOOL v34;
  uint64_t result;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = *a2;
  v7 = a2[1];
  v8 = a2[2];
  if (*a1 == *a2 && v4 == v7 && v5 == v8)
    return 0;
  v11 = *a3;
  v12 = a3[1];
  v13 = a3[2];
  v14 = v6 == *a3 && v7 == v12;
  if (v14 && v8 == v13)
    return 0;
  v16 = v11 == v3 && v12 == v4;
  if (v16 && v13 == v5)
    return 0;
  v18 = 1.0;
  if (v3 * v6 + v4 * v7 + v5 * v8 <= 0.0)
    v19 = 1.0;
  else
    v19 = -1.0;
  if (v6 * v11 + v7 * v12 + v8 * v13 <= 0.0)
    v20 = 1.0;
  else
    v20 = -1.0;
  if (v3 * v11 + v4 * v12 + v5 * v13 > 0.0)
    v18 = -1.0;
  v21 = v3 + v6 * v19;
  v22 = v4 + v7 * v19;
  v23 = v5 + v8 * v19;
  v24 = v6 + v11 * v20;
  v25 = v7 + v12 * v20;
  v26 = v8 + v13 * v20;
  v27 = v11 + v3 * v18;
  v28 = v12 + v4 * v18;
  v29 = v13 + v5 * v18;
  v30 = v23 * v23 + v21 * v21 + v22 * v22;
  v31 = v26 * v26 + v24 * v24 + v25 * v25;
  v32 = v29 * v29 + v27 * v27 + v28 * v28;
  if (v32 < v31 || v32 == v31 && (v3 < v6 || v6 >= v3 && (v4 < v7 || v7 >= v4 && v5 < v8)))
  {
    if (v30 < v31 || v30 == v31 && (v3 < v11 || v11 >= v3 && (v4 < v12 || v12 >= v4 && v5 < v13)))
    {
      v36 = v19 * (v5 * (v21 * v28 - v22 * v27) + v3 * (v22 * v29 - v23 * v28) + v4 * (v23 * v27 - v21 * v29));
      v34 = v36 < 0.0;
      if (v36 <= 0.0)
        goto LABEL_56;
      return 1;
    }
LABEL_55:
    v37 = v18 * (v13 * (v27 * v25 - v28 * v24) + v11 * (v28 * v26 - v29 * v25) + v12 * (v29 * v24 - v27 * v26));
    v34 = v37 < 0.0;
    if (v37 <= 0.0)
      goto LABEL_56;
    return 1;
  }
  if (v30 >= v32 && (v30 != v32 || v6 >= v11 && (v11 < v6 || v7 >= v12 && (v12 < v7 || v8 >= v13))))
    goto LABEL_55;
  v33 = v20 * (v8 * (v22 * v24 - v21 * v25) + v6 * (v23 * v25 - v22 * v26) + v7 * (v21 * v26 - v23 * v24));
  v34 = v33 < 0.0;
  if (v33 > 0.0)
    return 1;
LABEL_56:
  if (v34)
    return -1;
  v43 = a1[1];
  v44 = v5;
  v41 = v7;
  v42 = v8;
  v38 = v12;
  v39 = v12;
  v40 = v13;
  result = _s18VisualIntelligence2S2V16planarOrderedCCW1a1b1cSiAA8R2VectorV_A2ItFZ_0((uint64_t *)&v43, (uint64_t *)&v41, (uint64_t *)&v39);
  if (!result)
  {
    v43 = v5;
    v44 = v3;
    v41 = v8;
    v42 = v6;
    v39 = v13;
    v40 = v11;
    result = _s18VisualIntelligence2S2V16planarOrderedCCW1a1b1cSiAA8R2VectorV_A2ItFZ_0((uint64_t *)&v43, (uint64_t *)&v41, (uint64_t *)&v39);
    if (!result)
    {
      v43 = v3;
      v44 = v4;
      v41 = v6;
      v42 = v7;
      v39 = v11;
      v40 = v38;
      return _s18VisualIntelligence2S2V16planarOrderedCCW1a1b1cSiAA8R2VectorV_A2ItFZ_0((uint64_t *)&v43, (uint64_t *)&v41, (uint64_t *)&v39);
    }
  }
  return result;
}

uint64_t _s18VisualIntelligence2S2V9robustCCW1a1b1c7aCrossBSiAA0C5PointV_A3JtFZ_0(__int128 *a1, __int128 *a2, double *a3, double *a4)
{
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  double v12[3];
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  v4 = *a3;
  v5 = a3[1];
  v6 = a3[2];
  v7 = *a3 * *a4 + v5 * a4[1] + v6 * a4[2];
  if (v7 > 1.6e-15)
    return 1;
  if (v7 < -1.6e-15)
    return -1;
  v9 = *((_QWORD *)a1 + 2);
  v10 = *a2;
  v11 = *((_QWORD *)a2 + 2);
  v15 = *a1;
  v16 = v9;
  v13 = v10;
  v14 = v11;
  v12[0] = v4;
  v12[1] = v5;
  v12[2] = v6;
  return sub_1D47B6F88((double *)&v15, (double *)&v13, v12);
}

BOOL _s18VisualIntelligence2S2V10orderedCCW1a1b1c1oSbAA0C5PointV_A3JtFZ_0(double *a1, double *a2, double *a3, double *a4)
{
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  unint64_t v16;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  __int128 v28;
  double v29;
  __int128 v30;
  double v31;

  v20 = a1[1];
  v21 = *a1;
  v4 = *a2;
  v5 = a2[1];
  v6 = a2[2];
  v7 = *a3;
  v8 = a3[1];
  v18 = a3[2];
  v19 = a1[2];
  v9 = *a4;
  v10 = a4[1];
  v11 = a4[2];
  *(double *)&v30 = v4;
  *((double *)&v30 + 1) = v5;
  v31 = v6;
  *(double *)&v28 = v9;
  *((double *)&v28 + 1) = v10;
  v29 = v11;
  v25 = v21;
  v26 = v20;
  v27 = v19;
  v22 = v5 * v11 - v6 * v10;
  v23 = v6 * v9 - v4 * v11;
  v24 = v4 * v10 - v5 * v9;
  v12 = _s18VisualIntelligence2S2V9robustCCW1a1b1c7aCrossBSiAA0C5PointV_A3JtFZ_0(&v30, &v28, &v25, &v22);
  *(double *)&v30 = v7;
  *((double *)&v30 + 1) = v8;
  v31 = v18;
  *(double *)&v28 = v9;
  *((double *)&v28 + 1) = v10;
  v29 = v11;
  v25 = v4;
  v26 = v5;
  v27 = v6;
  v22 = v8 * v11 - v18 * v10;
  v23 = v18 * v9 - v7 * v11;
  v24 = v7 * v10 - v8 * v9;
  v13 = _s18VisualIntelligence2S2V9robustCCW1a1b1c7aCrossBSiAA0C5PointV_A3JtFZ_0(&v30, &v28, &v25, &v22);
  v14 = 1;
  if (v12 >= 0)
    v14 = 2;
  if (v13 >= 0)
    v15 = v14;
  else
    v15 = v12 >= 0;
  *(double *)&v30 = v21;
  *((double *)&v30 + 1) = v20;
  v31 = v19;
  *(double *)&v28 = v9;
  *((double *)&v28 + 1) = v10;
  v29 = v11;
  v25 = v7;
  v26 = v8;
  v27 = v18;
  v22 = v20 * v11 - v19 * v10;
  v23 = v19 * v9 - v21 * v11;
  v24 = v21 * v10 - v20 * v9;
  if (_s18VisualIntelligence2S2V9robustCCW1a1b1c7aCrossBSiAA0C5PointV_A3JtFZ_0(&v30, &v28, &v25, &v22) <= 0)
    v16 = v15;
  else
    v16 = v15 + 1;
  return v16 > 1;
}

void _s18VisualIntelligence2S2V10girardArea1a1b1cSdAA0C5PointV_A2ItFZ_0(double *a1, uint64_t a2, double *a3)
{
  VisualIntelligence::S2Point v3;
  VisualIntelligence::S2Point v4;
  VisualIntelligence::S2Point v5;

  v3.z = a1[2] * *a3;
  v3.x = *a1 * a3[1];
  v3.y = a1[1] * *a3;
  v4.x = S2Point.angle(to:)(v3);
  v5.x = S2Point.angle(to:)(v4);
  S2Point.angle(to:)(v5);
}

void sub_1D47B766C(uint64_t *a1, uint64_t *a2, double *a3, double a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double x;
  double v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  long double v27;
  long double v28;
  double v29;
  uint64_t v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  VisualIntelligence::S2Point v43;
  VisualIntelligence::S2Point v44;

  v6 = *a1;
  v7 = a1[1];
  v35 = *a1;
  v8 = a1[2];
  v9 = *a2;
  v10 = a2[1];
  v11 = a2[2];
  v12 = *a3;
  v13 = a3[1];
  v14 = a3[2];
  v43.x = S2Point.angle(to:)(*(VisualIntelligence::S2Point *)(&a5 - 1));
  v32 = v12;
  x = v43.x;
  v31 = v14;
  v44.x = S2Point.angle(to:)(v43);
  v16 = v44.x;
  v40 = v35;
  v41 = v7;
  v33 = v11;
  v34 = v7;
  v42 = v8;
  v30 = v9;
  v37 = v9;
  v38 = v10;
  v17 = v10;
  v39 = v11;
  v18 = S2Point.angle(to:)(v44);
  v19 = x;
  v20 = x + v16;
  v21 = v16;
  v22 = (v20 + v18) * 0.5;
  if (v22 < 0.0003)
    goto LABEL_9;
  if (v16 > v18)
    v23 = v16;
  else
    v23 = v18;
  if (v19 > v23)
    v23 = v19;
  if (v22 - v23 >= v22 * v22 * (v22 * 0.01 * (v22 * v22)))
    goto LABEL_9;
  v40 = v35;
  v41 = v34;
  v42 = v8;
  v37 = v30;
  v38 = v17;
  v39 = v33;
  v36[0] = v32;
  v36[1] = v13;
  v36[2] = v31;
  v24 = v22 - v23;
  _s18VisualIntelligence2S2V10girardArea1a1b1cSdAA0C5PointV_A2ItFZ_0((double *)&v40, (uint64_t)&v37, v36);
  if (v24 >= v22 * (v25 * 0.1))
  {
LABEL_9:
    v26 = tan(v22 * 0.5);
    v27 = v26 * tan((v22 - v19) * 0.5);
    v28 = v27 * tan((v22 - v21) * 0.5);
    v29 = v28 * tan((v22 - v18) * 0.5);
    if (v29 < 0.0)
      v29 = 0.0;
    atan(sqrt(v29));
  }
}

ValueMetadata *type metadata accessor for S2()
{
  return &type metadata for S2;
}

ValueMetadata *type metadata accessor for S2.Metric()
{
  return &type metadata for S2.Metric;
}

VisualIntelligence::S2LatLng __swiftcall S2LatLng.init(lat:lng:)(VisualIntelligence::S1Angle lat, VisualIntelligence::S1Angle lng)
{
  Swift::Double *v2;
  Swift::Double *v3;
  Swift::Double *v4;
  Swift::Double v5;
  Swift::Double v6;
  VisualIntelligence::S2LatLng result;

  v5 = *v2;
  v6 = *v3;
  *v4 = *v2;
  v4[1] = v6;
  result.lng = *(VisualIntelligence::S1Angle *)&v6;
  result.lat = *(VisualIntelligence::S1Angle *)&v5;
  return result;
}

void static S2LatLng.fromRadians(lat:lng:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  *a1 = a2;
  a1[1] = a3;
}

BOOL S2LatLng.isValid.getter()
{
  double *v0;
  _BOOL4 v1;

  v1 = fabs(*v0) <= 1.57079633;
  return fabs(v0[1]) <= 3.14159265 && v1;
}

double S2LatLng.point.getter@<D0>(double *a1@<X8>)
{
  double *v1;
  double v3;
  __double2 v4;
  __double2 v5;
  double result;

  v3 = v1[1];
  v4 = __sincos_stret(*v1);
  v5 = __sincos_stret(v3);
  result = v4.__cosval * v5.__sinval;
  *a1 = v4.__cosval * v5.__cosval;
  a1[1] = v4.__cosval * v5.__sinval;
  a1[2] = v4.__sinval;
  return result;
}

void S2LatLng.normalized.getter(double *a1@<X8>)
{
  uint64_t v1;
  double v3;
  long double v4;

  v3 = fmax(fmin(*(double *)v1, 1.57079633), -1.57079633);
  v4 = remainder(*(long double *)(v1 + 8), 6.28318531);
  *a1 = v3;
  a1[1] = v4;
}

VisualIntelligence::S2LatLng __swiftcall S2LatLng.init(point:)(VisualIntelligence::S2Point point)
{
  long double *v1;
  uint64_t v2;
  uint64_t v3;
  long double v4;
  long double v5;
  long double v6;
  double v7;
  Swift::Double v8;
  VisualIntelligence::S2LatLng result;

  v3 = v2;
  v4 = *v1;
  v5 = v1[1];
  v6 = atan2(v1[2], sqrt(v4 * v4 + v5 * v5));
  v7 = atan2(v5, v4);
  *(long double *)v3 = v6;
  *(double *)(v3 + 8) = v7;
  result.lng = *(VisualIntelligence::S1Angle *)&v8;
  result.lat = *(VisualIntelligence::S1Angle *)&v7;
  return result;
}

void static S2LatLng.longitude(point:)(long double *a1@<X0>, long double *a2@<X8>)
{
  *a2 = atan2(a1[1], *a1);
}

double static S2LatLng.earthRadiusMeters.getter()
{
  return 6367000.0;
}

double S2LatLng.lat.getter@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

double S2LatLng.lng.getter@<D0>(double *a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + 8);
  *a1 = result;
  return result;
}

void static S2LatLng.latitude(point:)(uint64_t a1@<X0>, long double *a2@<X8>)
{
  *a2 = atan2(*(long double *)(a1 + 16), sqrt(*(double *)a1 * *(double *)a1 + *(double *)(a1 + 8) * *(double *)(a1 + 8)));
}

double static S2LatLng.fromDegrees(lat:lng:)@<D0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  double result;

  result = a2 * 0.0174532925;
  *a1 = result;
  a1[1] = a3 * 0.0174532925;
  return result;
}

float64x2_t static S2LatLng.fromE5(lat:lng:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, float64x2_t *a3@<X8>)
{
  int64x2_t v3;
  float64x2_t result;

  v3.i64[0] = a1;
  v3.i64[1] = a2;
  result = vmulq_f64(vmulq_f64(vcvtq_f64_s64(v3), (float64x2_t)vdupq_n_s64(0x3EE4F8B588E368F1uLL)), (float64x2_t)vdupq_n_s64(0x3F91DF46A2529D39uLL));
  *a3 = result;
  return result;
}

float64x2_t static S2LatLng.fromE6(lat:lng:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, float64x2_t *a3@<X8>)
{
  int64x2_t v3;
  float64x2_t result;

  v3.i64[0] = a1;
  v3.i64[1] = a2;
  result = vmulq_f64(vmulq_f64(vcvtq_f64_s64(v3), (float64x2_t)vdupq_n_s64(0x3EB0C6F7A0B5ED8DuLL)), (float64x2_t)vdupq_n_s64(0x3F91DF46A2529D39uLL));
  *a3 = result;
  return result;
}

float64x2_t static S2LatLng.fromE7(lat:lng:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, float64x2_t *a3@<X8>)
{
  int64x2_t v3;
  float64x2_t result;

  v3.i64[0] = a1;
  v3.i64[1] = a2;
  result = vmulq_f64(vmulq_f64(vcvtq_f64_s64(v3), (float64x2_t)vdupq_n_s64(0x3E7AD7F29ABCAF48uLL)), (float64x2_t)vdupq_n_s64(0x3F91DF46A2529D39uLL));
  *a3 = result;
  return result;
}

VisualIntelligence::S1Angle __swiftcall S2LatLng.getDistance(to:)(VisualIntelligence::S2LatLng to)
{
  uint64_t v1;
  double *v2;
  uint64_t v3;
  double *v4;
  long double v5;
  double v6;
  long double v7;
  double v8;
  double v9;
  long double v10;
  long double v11;
  double v12;
  double v13;
  long double v14;
  VisualIntelligence::S1Angle result;

  v4 = v2;
  v5 = *(double *)v1;
  v6 = *(double *)(v1 + 8);
  v7 = *(double *)v3;
  v8 = *(double *)(v3 + 8);
  v9 = sin((*(double *)v1 - *(double *)v3) * 0.5);
  v10 = sin((v6 - v8) * 0.5);
  v11 = cos(v7) * (v10 * v10);
  v12 = v9 * v9 + cos(v5) * v11;
  v13 = 1.0 - v12;
  if (1.0 - v12 < 0.0)
    v13 = 0.0;
  v14 = atan2(sqrt(v12), sqrt(v13));
  result.radians = v14 + v14;
  *v4 = result.radians;
  return result;
}

Swift::Double __swiftcall S2LatLng.getDistance(to:radius:)(VisualIntelligence::S2LatLng to, Swift::Double radius)
{
  uint64_t v2;
  uint64_t v3;
  double radians;
  long double v5;
  double v6;
  long double v7;
  double v8;
  double v9;
  long double v10;
  long double v11;
  double v12;
  double v13;
  long double v14;

  radians = to.lat.radians;
  v5 = *(double *)v2;
  v6 = *(double *)(v2 + 8);
  v7 = *(double *)v3;
  v8 = *(double *)(v3 + 8);
  v9 = sin((*(double *)v2 - *(double *)v3) * 0.5);
  v10 = sin((v6 - v8) * 0.5);
  v11 = cos(v7) * (v10 * v10);
  v12 = v9 * v9 + cos(v5) * v11;
  v13 = 1.0 - v12;
  if (1.0 - v12 < 0.0)
    v13 = 0.0;
  v14 = atan2(sqrt(v12), sqrt(v13));
  return (v14 + v14) * radians;
}

Swift::Bool __swiftcall S2LatLng.approxEquals(to:maxError:)(VisualIntelligence::S2LatLng to, Swift::Double maxError)
{
  double *v2;
  double *v3;
  Swift::Bool v4;

  v4 = vabdd_f64(*v3, *v2) < to.lat.radians;
  return vabdd_f64(v3[1], v2[1]) < to.lat.radians && v4;
}

ValueMetadata *type metadata accessor for S2LatLng()
{
  return &type metadata for S2LatLng;
}

_QWORD *sub_1D47B7D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t);
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _QWORD *result;
  _QWORD *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  _BYTE v35[40];
  _OWORD v36[9];
  uint64_t v37;
  uint64_t v38;

  v6 = v4;
  v38 = a3;
  v34 = a2;
  v33 = a4;
  v8 = sub_1D4922370();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v30 - v13;
  sub_1D470C76C((uint64_t)&v30 - v13);
  sub_1D470C928((uint64_t)v12);
  v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v14, v8);
  v16 = sub_1D4922358();
  v17 = sub_1D4922910();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_1D467C000, v16, v17, "Create model request for unified", v18, 2u);
    MEMORY[0x1D82635B8](v18, -1, -1);
  }

  v15(v12, v8);
  LOBYTE(v36[0]) = *(_BYTE *)(a1 + 104);
  result = sub_1D47B82F0((unsigned __int8 *)v36, *(_QWORD *)(a1 + 128));
  if (!v5)
  {
    v20 = result;
    v32 = type metadata accessor for DomainModelRequestFactory();
    v21 = *(unsigned __int8 *)(v6 + 16);
    v31 = OBJC_IVAR____TtC18VisualIntelligence19UnifiedModelFactory_modelInfo;
    v22 = swift_allocObject();
    swift_weakInit();
    sub_1D46E3084(a1, (uint64_t)v36);
    v23 = swift_allocObject();
    v24 = v36[7];
    *(_OWORD *)(v23 + 136) = v36[6];
    *(_OWORD *)(v23 + 152) = v24;
    *(_OWORD *)(v23 + 168) = v36[8];
    v25 = v36[3];
    *(_OWORD *)(v23 + 72) = v36[2];
    *(_OWORD *)(v23 + 88) = v25;
    v26 = v36[5];
    *(_OWORD *)(v23 + 104) = v36[4];
    *(_OWORD *)(v23 + 120) = v26;
    v27 = v36[1];
    *(_OWORD *)(v23 + 40) = v36[0];
    *(_QWORD *)(v23 + 16) = v34;
    *(_QWORD *)(v23 + 24) = v38;
    *(_QWORD *)(v23 + 32) = v22;
    v28 = v37;
    *(_OWORD *)(v23 + 56) = v27;
    *(_QWORD *)(v23 + 184) = v28;
    *(_QWORD *)(v23 + 192) = v20;
    v29 = *(_QWORD *)(a1 + 120);
    swift_retain();
    swift_retain();
    sub_1D483D748(v29);
    sub_1D48C4C08((uint64_t)v35);
    if (v21)
    {
      if (v21 == 1)
        sub_1D48C66F8(a1, (uint64_t)v35, 2, 0, (uint64_t)sub_1D47B93D0, v23, v33);
      else
        sub_1D48C6AD0(a1, (uint64_t)v35, 2, (uint64_t)sub_1D47B93D0, v23, v33);
    }
    else
    {
      sub_1D48C6448((double *)a1, (uint64_t)v35, v6 + v31, 2, (uint64_t)sub_1D47B93D0, v23, v33);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    swift_release();
    return (_QWORD *)swift_release();
  }
  return result;
}

void sub_1D47B8050(uint64_t a1, void (*a2)(void **), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v9;
  id v10;
  id v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  char v15;
  id v16[5];
  char v17;

  sub_1D47B93E4(a1, (uint64_t)v16);
  if (v17 == 1)
  {
    v9 = v16[0];
    v11 = v16[0];
    v12 = 0u;
    v13 = 0u;
    v14 = 0;
    v15 = v17;
    v10 = v16[0];
    a2(&v11);

  }
  else
  {
    sub_1D46B2A10((__int128 *)v16, (uint64_t)&v11);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_1D47B8148(&v11, a5, a6, a2);
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  }
}

uint64_t sub_1D47B8148(_QWORD *a1, uint64_t a2, uint64_t a3, void (*a4)(void **))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _OWORD v27[2];
  _BYTE v28[48];

  v8 = v4 + OBJC_IVAR____TtC18VisualIntelligence19UnifiedModelFactory_modelInfo;
  v9 = type metadata accessor for MLModelInfo(0);
  sub_1D469A744(*(_BYTE *)(v8 + *(int *)(v9 + 32)));
  v10 = *(_QWORD *)(a2 + 144);
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  sub_1D47C12D0((uint64_t)v28, v10);
  swift_release();
  v11 = *(_OWORD *)(a2 + 88);
  v27[0] = *(_OWORD *)(a2 + 72);
  v27[1] = v11;
  sub_1D47DFE10(a1, a3, (uint64_t *)v27, &v20);
  v13 = v20;
  v12 = v21;
  v14 = v22;
  v15 = v23;
  v16 = v24;
  v17 = v25;
  v26 = 0;
  sub_1D478249C(v20, v21, v22, v23, v24, v25, 0);
  a4(&v20);
  sub_1D46B2DE8(v13, v12, v14, v15, v16, v17, 0);
  sub_1D47C0B30();
  sub_1D46B2DE8(v13, v12, v14, v15, v16, v17, 0);
  return swift_release();
}

_QWORD *sub_1D47B82F0(unsigned __int8 *a1, char a2)
{
  uint64_t v2;
  unsigned __int8 v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;

  v4 = *a1;
  if (sub_1D46F8BC8(*a1) == 7631457 && v5 == 0xE300000000000000)
    goto LABEL_13;
  v7 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
LABEL_14:
    v12 = v2 + OBJC_IVAR____TtC18VisualIntelligence19UnifiedModelFactory_modelInfo;
    v13 = 0xD000000000000016;
    v14 = 0x80000001D49449B0;
    v15 = a2;
    return sub_1D48C6E7C(v15, v12, v13, v14, 0x74696E676F636572, 0xEB000000006E6F69);
  }
  if (sub_1D46F8BC8(v4) == 0x616964656DLL && v8 == 0xE500000000000000)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v10 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
    goto LABEL_14;
  if (sub_1D46F8BC8(v4) == 1802465122 && v11 == 0xE400000000000000)
    goto LABEL_13;
  v17 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
    goto LABEL_14;
  if (sub_1D46F8BC8(v4) == 0x6D75626C61 && v18 == 0xE500000000000000)
    goto LABEL_13;
  v19 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
    goto LABEL_14;
  if (sub_1D46F8BC8(v4) == 0x44327463656A626FLL && v20 == 0xE800000000000000)
    goto LABEL_13;
  v21 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
    goto LABEL_14;
  if (sub_1D46F8BC8(v4) == 0x6B72616D646E616CLL && v22 == 0xE800000000000000)
    goto LABEL_13;
  v23 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  if ((v23 & 1) != 0)
    goto LABEL_14;
  if (sub_1D46F8BC8(v4) == 0x727574706C756373 && v24 == 0xE900000000000065)
    goto LABEL_13;
  v25 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  if ((v25 & 1) != 0)
    goto LABEL_14;
  if (sub_1D46F8BC8(v4) == 0x4C6C61727574616ELL && v26 == 0xEF6B72616D646E61)
    goto LABEL_13;
  v27 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  if ((v27 & 1) != 0)
    goto LABEL_14;
  if (sub_1D46F8BC8(v4) == 0x6F726665726F7473 && v28 == 0xEA0000000000746ELL)
    goto LABEL_13;
  v29 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  if ((v29 & 1) != 0)
    goto LABEL_14;
  if (sub_1D46F8BC8(v4) == 0x656E696C796B73 && v30 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_39:
    v12 = v2 + OBJC_IVAR____TtC18VisualIntelligence19UnifiedModelFactory_modelInfo;
    v14 = 0x80000001D4944990;
    v15 = a2;
    v13 = 0xD000000000000012;
    return sub_1D48C6E7C(v15, v12, v13, v14, 0x74696E676F636572, 0xEB000000006E6F69);
  }
  v31 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  if ((v31 & 1) != 0)
    goto LABEL_39;
  return 0;
}

uint64_t sub_1D47B87A0(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  int64_t v39;
  _QWORD *v40;
  int64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  char v48;
  uint64_t *v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  int64_t v75;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  _QWORD v89[2];
  unint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t vars0;

  v107 = a2;
  v7 = sub_1D4922370();
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
    goto LABEL_6;
  v101 = v8;
  LOBYTE(v105) = *a1;
  v11 = sub_1D47B82F0((unsigned __int8 *)&v105, a3);
  if (v4)
    return v12 & 1;
  v13 = v11;
  if (!v11)
  {
LABEL_6:
    v12 = 0;
    return v12 & 1;
  }
  v14 = swift_bridgeObjectRetain();
  v15 = sub_1D488FC04(v14);
  swift_bridgeObjectRelease();
  v100 = *(_QWORD *)(v15 + 16);
  if (!v100)
  {
LABEL_116:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = 1;
    return v12 & 1;
  }
  v96 = v7;
  v17 = 0;
  v92 = v3 + OBJC_IVAR____TtC18VisualIntelligence19UnifiedModelFactory_modelInfo;
  v99 = v15 + 32;
  v91 = "neric";
  v89[1] = 0;
  v90 = 0x80000001D493F830;
  *(_QWORD *)&v16 = 136315138;
  v94 = v16;
  v93 = MEMORY[0x1E0DEE9B8] + 8;
  v97 = v15;
  v98 = v13;
  v95 = v10;
  v18 = v107;
  while (1)
  {
    if (v17 >= *(_QWORD *)(v15 + 16))
      goto LABEL_126;
    v20 = (uint64_t *)(v99 + 16 * v17);
    v22 = *v20;
    v21 = v20[1];
    v23 = v13[2];
    swift_bridgeObjectRetain();
    if (!v23)
      goto LABEL_18;
    swift_bridgeObjectRetain();
    sub_1D47CA4DC(v22, v21);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_18:
      if (qword_1ED98F398 != -1)
        swift_once();
      v102 = v17;
      if (byte_1ED98F388 != 1)
        goto LABEL_57;
      v27 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
      v28 = objc_msgSend(v27, sel_bundleIdentifier);

      if (v28)
      {
        v29 = sub_1D492261C();
        v31 = v30;

        if (v29 == 0xD00000000000002BLL && v31 == v90)
        {
          swift_bridgeObjectRelease();
          goto LABEL_50;
        }
        v48 = sub_1D4922E38();
        swift_bridgeObjectRelease();
        if ((v48 & 1) != 0)
        {
LABEL_50:
          v49 = &qword_1EFEAA908;
          if (qword_1EFEA9C20 != -1)
          {
            swift_once();
            v49 = &qword_1EFEAA908;
          }
          goto LABEL_54;
        }
      }
      v49 = (uint64_t *)&off_1ED98F3F0;
      if (qword_1ED98F3A8 != -1)
      {
        swift_once();
        v49 = (uint64_t *)&off_1ED98F3F0;
      }
LABEL_54:
      v50 = *(void **)(*v49 + 32);
      swift_retain();
      v51 = (void *)sub_1D49225F8();
      LODWORD(v50) = objc_msgSend(v50, sel_BOOLForKey_, v51);
      swift_release();

      if ((_DWORD)v50)
      {
        v52 = v22;
        v53 = qword_1EFEAAA30;
        if (qword_1EFEA9C78 != -1)
        {
          swift_once();
          v53 = qword_1EFEAAA30;
        }
LABEL_59:
        v54 = v96;
        v55 = __swift_project_value_buffer(v96, (uint64_t)v53);
        v56 = v101;
        v57 = v95;
        (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v95, v55, v54);
        swift_bridgeObjectRetain();
        v58 = sub_1D4922358();
        v59 = sub_1D4922910();
        if (os_log_type_enabled(v58, v59))
        {
          v60 = swift_slowAlloc();
          v61 = swift_slowAlloc();
          v105 = v61;
          *(_DWORD *)v60 = v94;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v60 + 4) = sub_1D47F0250(v52, v21, &v105);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1D467C000, v58, v59, "No model urn suffix for %s", (uint8_t *)v60, 0xCu);
          swift_arrayDestroy();
          v62 = v61;
          v15 = v97;
          MEMORY[0x1D82635B8](v62, -1, -1);
          MEMORY[0x1D82635B8](v60, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v54);
        v18 = v107;
        v13 = v98;
        v17 = v102;
        goto LABEL_10;
      }
LABEL_57:
      v52 = v22;
      v53 = qword_1ED98F3B0;
      if (qword_1ED98F3D0 != -1)
      {
        swift_once();
        v53 = qword_1ED98F3B0;
      }
      goto LABEL_59;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v25 = (uint64_t *)(v92 + *(int *)(type metadata accessor for MLModelInfo(0) + 24));
    v26 = v25[1];
    v105 = *v25;
    v106 = v26;
    swift_bridgeObjectRetain();
    sub_1D492270C();
    swift_bridgeObjectRelease();
    v103 = v105;
    v104 = v106;
    if (v22 == 0x6E69646465626D65 && v21 == 0xE900000000000067)
      break;
    v32 = sub_1D4922E38();
    swift_bridgeObjectRelease();
    if ((v32 & 1) != 0)
      goto LABEL_26;
    v69 = *(_QWORD *)(v18 + 16);
    if (v69)
    {
      swift_bridgeObjectRetain();
      v70 = 72;
      v71 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      while (1)
      {
        v72 = *(_QWORD *)(v18 + v70);
        v73 = *(_QWORD *)(v72 + 16);
        v74 = v71[2];
        v75 = v74 + v73;
        if (__OFADD__(v74, v73))
          goto LABEL_124;
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
        if ((_DWORD)isUniquelyReferenced_nonNull_native && v75 <= v71[3] >> 1)
        {
          if (*(_QWORD *)(v72 + 16))
            goto LABEL_89;
        }
        else
        {
          if (v74 <= v75)
            v77 = v74 + v73;
          else
            v77 = v74;
          v71 = sub_1D48A933C(isUniquelyReferenced_nonNull_native, v77, 1, v71);
          if (*(_QWORD *)(v72 + 16))
          {
LABEL_89:
            v78 = v71[2];
            if ((v71[3] >> 1) - v78 < v73)
              goto LABEL_127;
            v79 = (unint64_t)&v71[3 * v78 + 4];
            if (v72 + 32 < v79 + 24 * v73 && v79 < v72 + 32 + 24 * v73)
              goto LABEL_131;
            swift_arrayInitWithCopy();
            if (v73)
            {
              v81 = v71[2];
              v46 = __OFADD__(v81, v73);
              v82 = v81 + v73;
              if (v46)
                goto LABEL_129;
              v71[2] = v82;
            }
            goto LABEL_79;
          }
        }
        if (v73)
          goto LABEL_125;
LABEL_79:
        swift_bridgeObjectRelease();
        v70 += 48;
        if (!--v69)
        {
          swift_bridgeObjectRelease();
          v13 = v98;
          goto LABEL_100;
        }
      }
    }
    v71 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_100:
    v83 = v71[2];
    v15 = v97;
    if (!v83)
      goto LABEL_118;
    if (v71[4] == v103 && v71[5] == v104 || (sub_1D4922E38() & 1) != 0)
      goto LABEL_104;
    if (v83 == 1)
      goto LABEL_118;
    v84 = v71 + 8;
    v85 = 1;
    v86 = v104;
    while (1)
    {
      v87 = v85 + 1;
      if (__OFADD__(v85, 1))
        goto LABEL_130;
      v88 = *(v84 - 1) == v103 && *v84 == v86;
      if (v88 || (sub_1D4922E38() & 1) != 0)
        break;
      v84 += 3;
      ++v85;
      v86 = v104;
      if (v87 == v83)
        goto LABEL_118;
    }
LABEL_115:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = v97;
    v13 = v98;
LABEL_10:
    if (++v17 == v100)
      goto LABEL_116;
  }
  swift_bridgeObjectRelease();
LABEL_26:
  v33 = *(_QWORD *)(v18 + 16);
  if (!v33)
  {
    v35 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_62:
    v63 = v35[2];
    v15 = v97;
    if (!v63)
      goto LABEL_118;
    if ((v35[5] != v103 || v35[6] != v104) && (sub_1D4922E38() & 1) == 0)
    {
      if (v63 != 1)
      {
        v64 = v35 + 9;
        v65 = 1;
        v66 = v104;
        do
        {
          v67 = v65 + 1;
          if (__OFADD__(v65, 1))
            goto LABEL_128;
          v68 = *(v64 - 1) == v103 && *v64 == v66;
          if (v68 || (sub_1D4922E38() & 1) != 0)
            goto LABEL_115;
          v64 += 3;
          ++v65;
          v66 = v104;
        }
        while (v67 != v63);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = 0;
      return v12 & 1;
    }
LABEL_104:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v34 = 64;
  v35 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v36 = *(_QWORD *)(v18 + v34);
    v37 = *(_QWORD *)(v36 + 16);
    v38 = v35[2];
    v39 = v38 + v37;
    if (__OFADD__(v38, v37))
      break;
    swift_bridgeObjectRetain();
    v40 = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)v40 && v39 <= v35[3] >> 1)
    {
      if (*(_QWORD *)(v36 + 16))
        goto LABEL_39;
    }
    else
    {
      if (v38 <= v39)
        v41 = v38 + v37;
      else
        v41 = v38;
      v35 = sub_1D48A9218(v40, v41, 1, v35);
      if (*(_QWORD *)(v36 + 16))
      {
LABEL_39:
        v42 = v35[2];
        if ((v35[3] >> 1) - v42 < v37)
          goto LABEL_122;
        v43 = (unint64_t)&v35[3 * v42 + 4];
        if (v36 + 32 < v43 + 24 * v37 && v43 < v36 + 32 + 24 * v37)
          goto LABEL_131;
        swift_arrayInitWithCopy();
        if (v37)
        {
          v45 = v35[2];
          v46 = __OFADD__(v45, v37);
          v47 = v45 + v37;
          if (v46)
            goto LABEL_123;
          v35[2] = v47;
        }
        goto LABEL_29;
      }
    }
    if (v37)
      goto LABEL_121;
LABEL_29:
    swift_bridgeObjectRelease();
    v34 += 48;
    if (!--v33)
    {
      swift_bridgeObjectRelease();
      v13 = v98;
      goto LABEL_62;
    }
  }
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  LODWORD(vars0) = 0;
  v109 = 1092;
  LOBYTE(v108) = 2;
  result = sub_1D4922C88();
  __break(1u);
  return result;
}

uint64_t sub_1D47B9208()
{
  uint64_t v0;

  sub_1D46C35F0(v0 + OBJC_IVAR____TtC18VisualIntelligence19UnifiedModelFactory_modelInfo);
  swift_release();
  return swift_release();
}

uint64_t sub_1D47B9244()
{
  uint64_t v0;

  sub_1D46C35F0(v0 + OBJC_IVAR____TtC18VisualIntelligence19UnifiedModelFactory_modelInfo);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D47B9294()
{
  return type metadata accessor for UnifiedModelFactory();
}

uint64_t type metadata accessor for UnifiedModelFactory()
{
  uint64_t result;

  result = qword_1ED98F098;
  if (!qword_1ED98F098)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D47B92D8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MLModelInfo(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D47B9360()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D47B9384()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1D47B93D0(uint64_t a1)
{
  uint64_t v1;

  sub_1D47B8050(a1, *(void (**)(void **))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + 40, *(_QWORD *)(v1 + 192));
}

uint64_t sub_1D47B93E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98ED08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D47B942C(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  char v12;

  v6 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  *(_BYTE *)(a3 + 16) = (_BYTE)a1;
  sub_1D46C2AA4(a2, a3 + OBJC_IVAR____TtC18VisualIntelligence19UnifiedModelFactory_modelInfo);
  v12 = (char)a1;
  sub_1D46C2AA4(a2, (uint64_t)v8);
  type metadata accessor for CachedCoreMLModelProvider();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)(a3 + OBJC_IVAR____TtC18VisualIntelligence19UnifiedModelFactory_coreMLModelProvider) = sub_1D483F304(&v12, (uint64_t)v8, 16, 0, 0, 0);
  sub_1D46C2AA4(a2, (uint64_t)v8);
  type metadata accessor for UnifiedModelPostProcessor();
  swift_allocObject();
  v9 = sub_1D47DFCC4((uint64_t)v8);
  sub_1D46C35F0(a2);
  *(_QWORD *)(a3 + OBJC_IVAR____TtC18VisualIntelligence19UnifiedModelFactory_postProcessor) = v9;
  return a3;
}

unint64_t sub_1D47B9550(uint64_t a1, uint64_t *a2, _QWORD *a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)();
  _BYTE *v54;
  __int128 v55;
  uint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t *v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  NSObject *v69;
  char v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t *v77;
  void *v78;
  void *v79;
  char *v80;
  uint64_t v81;
  double *v82;
  uint64_t *v83;
  NSObject *v84;
  uint64_t (*v85)();
  os_log_type_t v86;
  _BOOL4 v87;
  uint64_t v88;
  CGFloat v89;
  CGFloat v90;
  CGFloat v91;
  CGFloat v92;
  uint64_t v93;
  CGFloat MinX;
  uint64_t v95;
  unint64_t v96;
  CGFloat MinY;
  CGFloat Width;
  CGFloat Height;
  uint64_t v100;
  unint64_t v101;
  uint64_t *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  char *v107;
  id v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t *v114;
  void *v115;
  void *v116;
  uint64_t *v117;
  uint64_t v118;
  _QWORD *v119;
  NSObject *v120;
  int v121;
  uint64_t v122;
  int64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  _QWORD *v129;
  CGFloat v130;
  CGFloat v131;
  CGFloat v132;
  CGFloat v133;
  uint64_t v134;
  CGFloat v135;
  uint64_t v136;
  unint64_t v137;
  CGFloat v138;
  CGFloat v139;
  CGFloat v140;
  uint64_t v141;
  unint64_t v142;
  os_log_t v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  int64_t v160;
  int64_t v161;
  uint64_t v162;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v168;
  BOOL v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(uint64_t, uint64_t);
  NSObject *v176;
  os_log_type_t v177;
  uint8_t *v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  id *v184;
  id v185;
  _QWORD v187[2];
  char *v188;
  id *v189;
  uint64_t v190;
  uint64_t *v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  __int128 v195;
  const char *v196;
  char *v197;
  uint64_t v198;
  unint64_t v199;
  __int128 v200;
  uint64_t *v201;
  int v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t v211;
  uint64_t v212;
  __int128 v213;
  unint64_t v214;
  _QWORD *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  int v219;
  uint64_t v220;
  double *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t *v226;
  uint64_t v227;
  NSObject *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  char *v234;
  _QWORD *v235;
  char *v236;
  __int128 v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t *v240;
  uint64_t v241;
  uint64_t v242;
  _QWORD *v243;
  _QWORD v244[4];
  char v245;
  unint64_t v246;
  CGRect v247;
  CGRect v248;
  CGRect v249;
  CGRect v250;
  CGRect v251;
  CGRect v252;
  CGRect v253;
  CGRect v254;

  v209 = a7;
  v220 = a5;
  v208 = a4;
  v210 = a3;
  v230 = sub_1D4922370();
  v233 = *(_QWORD *)(v230 - 8);
  v10 = MEMORY[0x1E0C80A78](v230);
  v192 = (uint64_t)&v189 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v190 = (uint64_t)&v189 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v189 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v232 = (char *)&v189 - v18;
  MEMORY[0x1E0C80A78](v17);
  v234 = (char *)&v189 - v19;
  v20 = *(_QWORD *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
  v21 = a1;
  v22 = *(_QWORD *)(v20 + 64);
  v23 = MEMORY[0x1E0C80A78](v21);
  v207 = (uint64_t)&v189 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v23);
  v215 = (id **)((char *)&v189 - v25);
  v26 = MEMORY[0x1E0C80A78](v24);
  v221 = (double *)((char *)&v189 - v27);
  v28 = MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v189 - v29;
  v31 = MEMORY[0x1E0C80A78](v28);
  v33 = (char *)&v189 - v32;
  v34 = MEMORY[0x1E0C80A78](v31);
  v36 = (id **)((char *)&v189 - v35);
  v37 = a2[1];
  v206 = *a2;
  v39 = a2[2];
  v38 = a2[3];
  v40 = *(_QWORD *)(v34 + 16);
  v193 = v34;
  v216 = v16;
  v236 = v30;
  v222 = v40;
  if (v40)
  {
    v41 = v34 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v42 = *(_QWORD *)(v20 + 72);
    swift_bridgeObjectRetain();
    v43 = v40;
    while (1)
    {
      sub_1D469C304(v41, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v33[96] == 1)
        break;
      sub_1D4697DE0((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      v41 += v42;
      if (!--v43)
      {
        swift_bridgeObjectRelease();
        v225 = 0;
        v224 = 0;
        v223 = 0;
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    sub_1D469C630((uint64_t)v33, (uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v44 = v36[10];
    v45 = v36[11];
    v225 = v36[9];
    v224 = v44;
    v223 = v45;
    sub_1D46C1E20(v225, v44);
    sub_1D4697DE0((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
LABEL_8:
    v30 = v236;
  }
  else
  {
    v225 = 0;
    v224 = 0;
    v223 = 0;
  }
  v46 = swift_allocObject();
  v47 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v48 = sub_1D47C509C(MEMORY[0x1E0DEE9D8]);
  v211 = v46;
  *(_QWORD *)(v46 + 16) = v48;
  v191 = (uint64_t *)(v46 + 16);
  v49 = swift_allocObject();
  v212 = v49;
  *(_QWORD *)(v49 + 16) = 0;
  v189 = (id *)(v49 + 16);
  v246 = sub_1D47C5208((uint64_t)v47);
  v243 = v47;
  if (v222)
  {
    v219 = a6 & 1;
    v50 = *(unsigned __int8 *)(v20 + 80);
    v51 = (v50 + 32) & ~v50;
    v218 = v193 + v51;
    v217 = *(_QWORD *)(v20 + 72);
    v197 = (char *)&v237 + 8;
    v205 = v51;
    v204 = v51 + v22;
    v203 = v50 | 7;
    swift_bridgeObjectRetain();
    v52 = 0;
    v53 = type metadata accessor for VisualUnderstanding.ImageRegion;
    v54 = (_BYTE *)&unk_1ED98F000;
    v214 = (unint64_t)"neric";
    v194 = 0x80000001D493F830;
    *(_QWORD *)&v55 = 136315138;
    v200 = v55;
    *((_QWORD *)&v55 + 1) = 8;
    v213 = xmmword_1D4927560;
    v196 = "Model Postprocess Results";
    v199 = 0x80000001D493FD60;
    v198 = MEMORY[0x1E0DEE9B8] + 8;
    *(_QWORD *)&v55 = 136315394;
    v195 = v55;
    v56 = v230;
    while (1)
    {
      v231 = v52;
      sub_1D469C304(v218 + v217 * v52, (uint64_t)v30, (uint64_t (*)(_QWORD))v53);
      if (qword_1ED98F398 != -1)
        swift_once();
      if (v54[904] != 1)
        goto LABEL_29;
      v57 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
      v58 = objc_msgSend(v57, sel_bundleIdentifier);

      if (v58)
      {
        v59 = sub_1D492261C();
        v61 = v60;

        if (v59 == 0xD00000000000002BLL && v61 == v194)
        {
          swift_bridgeObjectRelease();
LABEL_21:
          v63 = &qword_1EFEAA908;
          if (qword_1EFEA9C20 != -1)
          {
            swift_once();
            v63 = &qword_1EFEAA908;
          }
          goto LABEL_25;
        }
        v62 = sub_1D4922E38();
        swift_bridgeObjectRelease();
        if ((v62 & 1) != 0)
          goto LABEL_21;
      }
      v63 = (uint64_t *)&off_1ED98F3F0;
      if (qword_1ED98F3A8 != -1)
      {
        swift_once();
        v63 = (uint64_t *)&off_1ED98F3F0;
      }
LABEL_25:
      v64 = *(void **)(*v63 + 32);
      swift_retain();
      v65 = (void *)sub_1D49225F8();
      LODWORD(v64) = objc_msgSend(v64, sel_BOOLForKey_, v65);
      swift_release();

      v53 = type metadata accessor for VisualUnderstanding.ImageRegion;
      if ((_DWORD)v64)
      {
        if (qword_1EFEA9C78 != -1)
          swift_once();
        v66 = v56;
        v67 = qword_1EFEAAA30;
        goto LABEL_32;
      }
LABEL_29:
      if (qword_1ED98F3D0 != -1)
        swift_once();
      v66 = v56;
      v67 = qword_1ED98F3B0;
LABEL_32:
      v68 = __swift_project_value_buffer(v66, (uint64_t)v67);
      v69 = *(NSObject **)(v233 + 16);
      ((void (*)(char *, uint64_t, uint64_t))v69)(v234, v68, v56);
      v70 = v54[904];
      v228 = v69;
      if ((v70 & 1) == 0)
        goto LABEL_44;
      v71 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
      v72 = objc_msgSend(v71, sel_bundleIdentifier);

      if (v72)
      {
        v73 = sub_1D492261C();
        v75 = v74;

        if (v73 == 0xD00000000000002BLL && v75 == (v214 | 0x8000000000000000))
        {
          swift_bridgeObjectRelease();
LABEL_38:
          v77 = &qword_1EFEAA908;
          if (qword_1EFEA9C20 != -1)
          {
            swift_once();
            v77 = &qword_1EFEAA908;
          }
          goto LABEL_42;
        }
        v76 = sub_1D4922E38();
        swift_bridgeObjectRelease();
        if ((v76 & 1) != 0)
          goto LABEL_38;
      }
      v77 = (uint64_t *)&off_1ED98F3F0;
      if (qword_1ED98F3A8 != -1)
      {
        swift_once();
        v77 = (uint64_t *)&off_1ED98F3F0;
      }
LABEL_42:
      v78 = *(void **)(*v77 + 32);
      swift_retain();
      v79 = (void *)sub_1D49225F8();
      LODWORD(v78) = objc_msgSend(v78, sel_BOOLForKey_, v79);
      swift_release();

      v53 = type metadata accessor for VisualUnderstanding.ImageRegion;
      if ((_DWORD)v78)
      {
        v80 = v232;
        v81 = (uint64_t)v234;
        goto LABEL_47;
      }
LABEL_44:
      if (qword_1ED98F3D0 != -1)
        swift_once();
      v81 = __swift_project_value_buffer(v56, (uint64_t)qword_1ED98F3B0);
      v80 = v232;
LABEL_47:
      ((void (*)(char *, uint64_t, uint64_t))v69)(v80, v81, v56);
      v82 = v221;
      v83 = *(uint64_t **)(v233 + 8);
      ((void (*)(char *, uint64_t))v83)(v234, v56);
      sub_1D469C304((uint64_t)v236, (uint64_t)v82, (uint64_t (*)(_QWORD))v53);
      v84 = sub_1D4922358();
      v85 = v53;
      v86 = sub_1D4922910();
      v87 = os_log_type_enabled(v84, v86);
      v235 = v47;
      if (v87)
      {
        v88 = swift_slowAlloc();
        v226 = (uint64_t *)swift_slowAlloc();
        v240 = v226;
        *(_DWORD *)v88 = v200;
        v89 = *v82;
        v90 = v82[1];
        v91 = v82[2];
        v92 = v82[3];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
        v93 = swift_allocObject();
        *(_OWORD *)(v93 + 16) = v213;
        v247.origin.x = v89;
        v247.origin.y = v90;
        v247.size.width = v91;
        v247.size.height = v92;
        MinX = CGRectGetMinX(v247);
        v95 = MEMORY[0x1E0DEF040];
        *(_QWORD *)(v93 + 56) = MEMORY[0x1E0DEF040];
        v96 = sub_1D46A492C();
        *(_QWORD *)(v93 + 64) = v96;
        *(CGFloat *)(v93 + 32) = MinX;
        v248.origin.x = v89;
        v248.origin.y = v90;
        v248.size.width = v91;
        v248.size.height = v92;
        MinY = CGRectGetMinY(v248);
        *(_QWORD *)(v93 + 96) = v95;
        *(_QWORD *)(v93 + 104) = v96;
        *(CGFloat *)(v93 + 72) = MinY;
        v249.origin.x = v89;
        v249.origin.y = v90;
        v249.size.width = v91;
        v249.size.height = v92;
        Width = CGRectGetWidth(v249);
        *(_QWORD *)(v93 + 136) = v95;
        *(_QWORD *)(v93 + 144) = v96;
        *(CGFloat *)(v93 + 112) = Width;
        v250.origin.x = v89;
        v250.origin.y = v90;
        v250.size.width = v91;
        v250.size.height = v92;
        Height = CGRectGetHeight(v250);
        *(_QWORD *)(v93 + 176) = v95;
        *(_QWORD *)(v93 + 184) = v96;
        v54 = &unk_1ED98F000;
        *(CGFloat *)(v93 + 152) = Height;
        v100 = sub_1D4922640();
        *(_QWORD *)(v88 + 4) = sub_1D47F0250(v100, v101, (uint64_t *)&v240);
        v56 = v230;
        swift_bridgeObjectRelease();
        sub_1D4697DE0((uint64_t)v82, (uint64_t (*)(_QWORD))v85);
        _os_log_impl(&dword_1D467C000, v84, v86, "Process %s", (uint8_t *)v88, 0xCu);
        v102 = v226;
        swift_arrayDestroy();
        v47 = v235;
        MEMORY[0x1D82635B8](v102, -1, -1);
        MEMORY[0x1D82635B8](v88, -1, -1);
      }
      else
      {
        sub_1D4697DE0((uint64_t)v82, (uint64_t (*)(_QWORD))v85);
      }

      ((void (*)(char *, uint64_t))v83)(v232, v56);
      v53 = v85;
      v30 = v236;
      v103 = sub_1D47BBB30((uint64_t)v236, v47[2], v225, v224, v223, v220, v219, (uint64_t *)&v246);
      v104 = (uint64_t)v103;
      if (*((_QWORD *)v103 + 2))
      {
        v226 = v83;
        MEMORY[0x1E0C80A78](v103);
        v188 = v30;
        v105 = v227;
        v106 = sub_1D489C084((void (*)(_QWORD *__return_ptr, _QWORD))sub_1D47BE624, (uint64_t)v187, v104);
        v227 = v105;
        sub_1D48963B0((uint64_t)v106);
        v107 = v216;
        if (v54[904] != 1)
          goto LABEL_64;
        v108 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
        v109 = objc_msgSend(v108, sel_bundleIdentifier);

        if (v109)
        {
          v110 = sub_1D492261C();
          v112 = v111;

          if (v110 == 0xD00000000000002BLL && v112 == (v214 | 0x8000000000000000))
          {
            swift_bridgeObjectRelease();
LABEL_57:
            v114 = &qword_1EFEAA908;
            if (qword_1EFEA9C20 != -1)
            {
              swift_once();
              v114 = &qword_1EFEAA908;
            }
LABEL_61:
            v115 = *(void **)(*v114 + 32);
            swift_retain();
            v116 = (void *)sub_1D49225F8();
            LODWORD(v115) = objc_msgSend(v115, sel_BOOLForKey_, v116);
            swift_release();

            v56 = v230;
            if ((_DWORD)v115)
            {
              v117 = qword_1EFEAAA30;
              if (qword_1EFEA9C78 != -1)
              {
                swift_once();
                v117 = qword_1EFEAAA30;
              }
LABEL_66:
              v118 = __swift_project_value_buffer(v56, (uint64_t)v117);
              ((void (*)(char *, uint64_t, uint64_t))v228)(v107, v118, v56);
              v119 = v215;
              sub_1D469C304((uint64_t)v30, (uint64_t)v215, (uint64_t (*)(_QWORD))v53);
              swift_bridgeObjectRetain_n();
              v120 = sub_1D4922358();
              v121 = sub_1D4922910();
              if (os_log_type_enabled(v120, (os_log_type_t)v121))
              {
                v202 = v121;
                v228 = v120;
                v122 = swift_slowAlloc();
                v201 = (uint64_t *)swift_slowAlloc();
                v240 = v201;
                *(_DWORD *)v122 = v195;
                v123 = *(_QWORD *)(v104 + 16);
                if (v123)
                {
                  *(_QWORD *)&v237 = MEMORY[0x1E0DEE9D8];
                  sub_1D48AB4A4(0, v123, 0);
                  __asm { BR              X9 }
                }
                v126 = MEMORY[0x1D8261B9C](MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEA968]);
                v128 = v127;
                swift_bridgeObjectRelease();
                *(_QWORD *)&v237 = sub_1D47F0250(v126, v128, (uint64_t *)&v240);
                sub_1D4922A78();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                *(_WORD *)(v122 + 12) = 2080;
                v129 = v215;
                v130 = *(double *)v215;
                v131 = *((double *)v215 + 1);
                v132 = *((double *)v215 + 2);
                v133 = *((double *)v215 + 3);
                __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
                v134 = swift_allocObject();
                *(_OWORD *)(v134 + 16) = v213;
                v251.origin.x = v130;
                v251.origin.y = v131;
                v251.size.width = v132;
                v251.size.height = v133;
                v135 = CGRectGetMinX(v251);
                v136 = MEMORY[0x1E0DEF040];
                *(_QWORD *)(v134 + 56) = MEMORY[0x1E0DEF040];
                v137 = sub_1D46A492C();
                *(_QWORD *)(v134 + 64) = v137;
                *(CGFloat *)(v134 + 32) = v135;
                v252.origin.x = v130;
                v252.origin.y = v131;
                v252.size.width = v132;
                v252.size.height = v133;
                v138 = CGRectGetMinY(v252);
                *(_QWORD *)(v134 + 96) = v136;
                *(_QWORD *)(v134 + 104) = v137;
                *(CGFloat *)(v134 + 72) = v138;
                v253.origin.x = v130;
                v253.origin.y = v131;
                v253.size.width = v132;
                v253.size.height = v133;
                v139 = CGRectGetWidth(v253);
                *(_QWORD *)(v134 + 136) = v136;
                *(_QWORD *)(v134 + 144) = v137;
                *(CGFloat *)(v134 + 112) = v139;
                v254.origin.x = v130;
                v254.origin.y = v131;
                v254.size.width = v132;
                v254.size.height = v133;
                v140 = CGRectGetHeight(v254);
                *(_QWORD *)(v134 + 176) = v136;
                *(_QWORD *)(v134 + 184) = v137;
                *(CGFloat *)(v134 + 152) = v140;
                v141 = sub_1D4922640();
                *(_QWORD *)&v237 = sub_1D47F0250(v141, v142, (uint64_t *)&v240);
                sub_1D4922A78();
                swift_bridgeObjectRelease();
                v53 = type metadata accessor for VisualUnderstanding.ImageRegion;
                sub_1D4697DE0((uint64_t)v129, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
                v143 = v228;
                _os_log_impl(&dword_1D467C000, v228, (os_log_type_t)v202, "Extract domain signals: %s from region %s", (uint8_t *)v122, 0x16u);
                v144 = v201;
                swift_arrayDestroy();
                MEMORY[0x1D82635B8](v144, -1, -1);
                MEMORY[0x1D82635B8](v122, -1, -1);

                v124 = v216;
                v125 = v230;
              }
              else
              {
                swift_bridgeObjectRelease_n();
                sub_1D4697DE0((uint64_t)v119, (uint64_t (*)(_QWORD))v53);

                v124 = v107;
                v125 = v56;
              }
              ((void (*)(char *, uint64_t))v226)(v124, v125);
              type metadata accessor for SignalsExtractionProcessor();
              *(_QWORD *)&v237 = v206;
              *((_QWORD *)&v237 + 1) = v37;
              v238 = v39;
              v239 = v38;
              v145 = *(_QWORD *)(v229 + 16);
              v146 = *(_QWORD *)(v229 + 24);
              v147 = v207;
              sub_1D469C304((uint64_t)v30, v207, (uint64_t (*)(_QWORD))v53);
              v148 = swift_allocObject();
              v149 = v211;
              *(_QWORD *)(v148 + 16) = v212;
              *(_QWORD *)(v148 + 24) = v149;
              sub_1D469C630(v147, v148 + v205, (uint64_t (*)(_QWORD))v53);
              swift_retain();
              v30 = v236;
              swift_retain();
              v150 = v227;
              sub_1D46AC644((uint64_t)v30, v104, (uint64_t)v210, &v237, v208, v145, v146, 0, (uint64_t)&v240, 1u, 3, 1, v209, (uint64_t)sub_1D47BE710, v148);
              if (v150)
              {
                swift_release();
                sub_1D46DAD5C(v225, v224);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1D4697DE0((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
LABEL_112:
                v181 = (unint64_t)v243;
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                return v181;
              }
              v227 = 0;
              swift_release();
              swift_bridgeObjectRelease();
              sub_1D46AAF28((uint64_t)&v240, (uint64_t)&v237);
              v47 = v235;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v47 = sub_1D48A90C4(0, v47[2] + 1, 1, v47);
              v56 = v230;
              v53 = type metadata accessor for VisualUnderstanding.ImageRegion;
              v54 = (_BYTE *)&unk_1ED98F000;
              v152 = v47[2];
              v151 = v47[3];
              if (v152 >= v151 >> 1)
                v47 = sub_1D48A90C4((_QWORD *)(v151 > 1), v152 + 1, 1, v47);
              v47[2] = v152 + 1;
              sub_1D46B2A10(&v237, (uint64_t)&v47[5 * v152 + 4]);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v240);
              sub_1D4697DE0((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
              goto LABEL_12;
            }
LABEL_64:
            v117 = qword_1ED98F3B0;
            if (qword_1ED98F3D0 != -1)
            {
              swift_once();
              v117 = qword_1ED98F3B0;
            }
            goto LABEL_66;
          }
          v113 = sub_1D4922E38();
          swift_bridgeObjectRelease();
          if ((v113 & 1) != 0)
            goto LABEL_57;
        }
        v114 = (uint64_t *)&off_1ED98F3F0;
        if (qword_1ED98F3A8 != -1)
        {
          swift_once();
          v114 = (uint64_t *)&off_1ED98F3F0;
        }
        goto LABEL_61;
      }
      sub_1D4697DE0((uint64_t)v30, (uint64_t (*)(_QWORD))v53);
      swift_bridgeObjectRelease();
      v47 = v235;
LABEL_12:
      v52 = v231 + 1;
      if (v231 + 1 == v222)
      {
        swift_bridgeObjectRelease();
        goto LABEL_79;
      }
    }
  }
  v56 = v230;
LABEL_79:
  sub_1D46DAD5C(v225, v224);
  v153 = v47[2];
  if (!v153)
  {
    v155 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (!*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
      goto LABEL_105;
LABEL_102:
    v171 = v210[3];
    v172 = v210[4];
    __swift_project_boxed_opaque_existential_1(v210, v171);
    v173 = v227;
    sub_1D483D504(v171, v172, &v240);
    if (v173)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v182 = v241;
      v183 = v242;
      __swift_project_boxed_opaque_existential_1(&v240, v241);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v183 + 8))(v155, v182, v183);
      v227 = 0;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v240);
      v184 = v189;
      swift_beginAccess();
      if (!*v184)
        goto LABEL_108;
      v185 = *v184;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_willThrow();
    }
    goto LABEL_112;
  }
  v154 = v47 + 4;
  v235 = v47;
  swift_bridgeObjectRetain_n();
  v155 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v156 = v154[3];
    v157 = v154[4];
    __swift_project_boxed_opaque_existential_1(v154, v156);
    v158 = (*(uint64_t (**)(uint64_t, uint64_t))(v157 + 16))(v156, v157);
    v159 = *(_QWORD *)(v158 + 16);
    v160 = v155[2];
    v161 = v160 + v159;
    if (__OFADD__(v160, v159))
    {
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      LODWORD(v188) = 0;
      v187[1] = 1092;
      LOBYTE(v187[0]) = 2;
      sub_1D4922C88();
      __break(1u);
      JUMPOUT(0x1D47BB190);
    }
    v162 = v158;
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v161 <= v155[3] >> 1)
    {
      if (!*(_QWORD *)(v162 + 16))
        goto LABEL_81;
    }
    else
    {
      if (v160 <= v161)
        v164 = v160 + v159;
      else
        v164 = v160;
      v155 = sub_1D48A90D8(isUniquelyReferenced_nonNull_native, v164, 1, v155);
      if (!*(_QWORD *)(v162 + 16))
      {
LABEL_81:
        if (v159)
          goto LABEL_115;
        goto LABEL_82;
      }
    }
    v165 = v155[2];
    if ((v155[3] >> 1) - v165 < v159)
      goto LABEL_116;
    v166 = (unint64_t)&v155[5 * v165 + 4];
    if (v162 + 32 < v166 + 40 * v159 && v166 < v162 + 32 + 40 * v159)
      goto LABEL_118;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D960);
    swift_arrayInitWithCopy();
    if (v159)
    {
      v168 = v155[2];
      v169 = __OFADD__(v168, v159);
      v170 = v168 + v159;
      if (v169)
        goto LABEL_117;
      v155[2] = v170;
    }
LABEL_82:
    swift_bridgeObjectRelease();
    v154 += 5;
    --v153;
  }
  while (v153);
  swift_bridgeObjectRelease_n();
  v56 = v230;
  if (v155[2])
    goto LABEL_102;
LABEL_105:
  swift_bridgeObjectRelease();
  v174 = v190;
  sub_1D470C76C(v190);
  sub_1D470C928(v192);
  v175 = *(void (**)(uint64_t, uint64_t))(v233 + 8);
  v175(v174, v56);
  v176 = sub_1D4922358();
  v177 = sub_1D4922910();
  if (os_log_type_enabled(v176, v177))
  {
    v178 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v178 = 0;
    _os_log_impl(&dword_1D467C000, v176, v177, "No requested search domains.", v178, 2u);
    MEMORY[0x1D82635B8](v178, -1, -1);
  }

  v175(v192, v230);
LABEL_108:
  v244[0] = 0x6C46206573726150;
  v244[1] = 0xEA0000000000776FLL;
  v244[2] = "VI: Domain Selection Region Updating";
  v244[3] = 36;
  v245 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  v179 = v209;
  swift_retain();
  sub_1D47C12D0((uint64_t)v244, v179);
  swift_release();
  v180 = v229;
  swift_retain();
  v181 = sub_1D47BE338(v193, v191, v180, (uint64_t *)&v243);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D47C0B30();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v181;
}

void sub_1D47BB1F8(uint64_t a1, uint64_t a2, uint64_t a3, double *a4)
{
  void *v4;
  void *v6;
  id v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  void *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = *(void **)a1;
  if (*(_BYTE *)(a1 + 48) == 1)
  {
    swift_beginAccess();
    v6 = *(void **)(a2 + 16);
    *(_QWORD *)(a2 + 16) = v4;
    v7 = v4;

  }
  else
  {
    v10 = *(_QWORD *)(a1 + 32);
    v9 = *(_QWORD *)(a1 + 40);
    v11 = *(_QWORD *)(a1 + 24);
    v18 = *(void **)a1;
    v19 = *(_OWORD *)(a1 + 8);
    v20 = v11;
    v21 = v10;
    v22 = v9;
    v12 = *a4;
    v13 = a4[1];
    v14 = a4[2];
    v15 = a4[3];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *(_QWORD *)(a3 + 16);
    *(_QWORD *)(a3 + 16) = 0x8000000000000000;
    sub_1D47AB77C((__int128 *)&v18, isUniquelyReferenced_nonNull_native, v12, v13, v14, v15);
    *(_QWORD *)(a3 + 16) = v17;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
}

uint64_t sub_1D47BB314@<X0>(double *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  CGFloat v55;
  CGFloat v56;
  CGFloat v57;
  CGFloat v58;
  uint64_t v59;
  CGFloat MinX;
  uint64_t v61;
  unint64_t v62;
  CGFloat MinY;
  CGFloat Width;
  CGFloat Height;
  uint64_t v66;
  unint64_t v67;
  os_log_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  os_log_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  double *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  CGRect v98;
  CGRect v99;
  CGRect v100;
  CGRect v101;

  v84 = a4;
  v85 = a3;
  v8 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v86 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D4922370();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  v16 = a1[1];
  v17 = a1[2];
  v18 = a1[3];
  v89 = a1;
  swift_beginAccess();
  v19 = *a2;
  v20 = *(_QWORD *)(*a2 + 16);
  v88 = a5;
  v87 = v8;
  if (!v20 || (v21 = sub_1D47CA748(v15, v16, v17, v18), (v22 & 1) == 0))
  {
    swift_endAccess();
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    v29 = 0;
    v30 = 0;
LABEL_11:
    v45 = v84;
    goto LABEL_12;
  }
  v83 = v11;
  v23 = (uint64_t *)(*(_QWORD *)(v19 + 56) + 48 * v21);
  v24 = *v23;
  v25 = v23[1];
  v26 = v23[2];
  v27 = v23[3];
  v28 = (uint64_t)v14;
  v29 = v23[4];
  v30 = v23[5];
  swift_endAccess();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1D470C76C(v28);
  v82 = v10;
  sub_1D469C304((uint64_t)v89, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31 = sub_1D4922358();
  v81 = sub_1D4922910();
  if (!os_log_type_enabled(v31, (os_log_type_t)v81))
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_1D4697DE0((uint64_t)v82, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v28, v83);
    goto LABEL_11;
  }
  v73 = v31;
  v74 = v28;
  v75 = v12;
  v77 = v29;
  v76 = v27;
  v78 = v26;
  v79 = v25;
  v80 = v24;
  v32 = swift_slowAlloc();
  v72 = swift_slowAlloc();
  v91 = v72;
  *(_DWORD *)v32 = 136315394;
  v33 = *(_QWORD *)(v30 + 16);
  v34 = MEMORY[0x1E0DEE9D8];
  v35 = v30;
  if (v33)
  {
    v71 = v32;
    v90 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1D48AB4A4(0, v33, 0);
    v34 = v90;
    v36 = (uint64_t *)(v30 + 48);
    do
    {
      v37 = *(v36 - 1);
      v38 = *v36;
      v92 = *(v36 - 2);
      v93 = v37;
      v94 = v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v39 = sub_1D4922688();
      v41 = v40;
      v90 = v34;
      v43 = *(_QWORD *)(v34 + 16);
      v42 = *(_QWORD *)(v34 + 24);
      if (v43 >= v42 >> 1)
      {
        sub_1D48AB4A4(v42 > 1, v43 + 1, 1);
        v34 = v90;
      }
      *(_QWORD *)(v34 + 16) = v43 + 1;
      v44 = v34 + 16 * v43;
      *(_QWORD *)(v44 + 32) = v39;
      *(_QWORD *)(v44 + 40) = v41;
      v36 += 3;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
    v32 = v71;
  }
  v50 = MEMORY[0x1D8261B9C](v34, MEMORY[0x1E0DEA968]);
  v52 = v51;
  swift_bridgeObjectRelease();
  v92 = sub_1D47F0250(v50, v52, &v91);
  sub_1D4922A78();
  swift_bridgeObjectRelease_n();
  v53 = v77;
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v32 + 12) = 2080;
  v54 = v82;
  v55 = *(double *)v82;
  v56 = *((double *)v82 + 1);
  v57 = *((double *)v82 + 2);
  v58 = *((double *)v82 + 3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
  v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = xmmword_1D4927560;
  v98.origin.x = v55;
  v98.origin.y = v56;
  v98.size.width = v57;
  v98.size.height = v58;
  MinX = CGRectGetMinX(v98);
  v61 = MEMORY[0x1E0DEF040];
  *(_QWORD *)(v59 + 56) = MEMORY[0x1E0DEF040];
  v62 = sub_1D46A492C();
  *(_QWORD *)(v59 + 64) = v62;
  *(CGFloat *)(v59 + 32) = MinX;
  v99.origin.x = v55;
  v99.origin.y = v56;
  v99.size.width = v57;
  v99.size.height = v58;
  MinY = CGRectGetMinY(v99);
  *(_QWORD *)(v59 + 96) = v61;
  *(_QWORD *)(v59 + 104) = v62;
  *(CGFloat *)(v59 + 72) = MinY;
  v100.origin.x = v55;
  v100.origin.y = v56;
  v100.size.width = v57;
  v100.size.height = v58;
  Width = CGRectGetWidth(v100);
  *(_QWORD *)(v59 + 136) = v61;
  *(_QWORD *)(v59 + 144) = v62;
  *(CGFloat *)(v59 + 112) = Width;
  v101.origin.x = v55;
  v101.origin.y = v56;
  v101.size.width = v57;
  v101.size.height = v58;
  Height = CGRectGetHeight(v101);
  *(_QWORD *)(v59 + 176) = v61;
  *(_QWORD *)(v59 + 184) = v62;
  v30 = v35;
  *(CGFloat *)(v59 + 152) = Height;
  v66 = sub_1D4922640();
  v92 = sub_1D47F0250(v66, v67, &v91);
  sub_1D4922A78();
  v29 = v53;
  swift_bridgeObjectRelease();
  sub_1D4697DE0((uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  v68 = v73;
  _os_log_impl(&dword_1D467C000, v73, (os_log_type_t)v81, "Parse extracted classifications %s from %s", (uint8_t *)v32, 0x16u);
  v69 = v72;
  swift_arrayDestroy();
  MEMORY[0x1D82635B8](v69, -1, -1);
  MEMORY[0x1D82635B8](v32, -1, -1);

  (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v83);
  v45 = v84;
  v24 = v80;
  v25 = v79;
  v26 = v78;
  v27 = v76;
LABEL_12:
  v92 = v24;
  v93 = v25;
  v94 = v26;
  v95 = v27;
  v96 = v29;
  v97 = v30;
  v46 = v29;
  v47 = *v45;
  swift_bridgeObjectRetain();
  v48 = v88;
  sub_1D47BCDC0((uint64_t)v89, &v92, v47, v88);
  swift_bridgeObjectRelease();
  sub_1D47BE750(v24, v25, v26, v27, v46);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v86 + 56))(v48, 0, 1, v87);
}

uint64_t sub_1D47BB968(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v19;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E210);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.RichLabelConfig(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (unsigned __int8 *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v1 + 32);
  if (!*(_QWORD *)(v14 + 16))
    return 0;
  v15 = sub_1D47CA6C8(*a1);
  if ((v16 & 1) == 0)
    return 0;
  sub_1D469C304(*(_QWORD *)(v14 + 56) + *(_QWORD *)(v11 + 72) * v15, (uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
  sub_1D47BE594((uint64_t)&v13[*(int *)(v10 + 40)], (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    *((_QWORD *)v9 + 1) = 0;
    *((_QWORD *)v9 + 2) = 0xE000000000000000;
    *((_QWORD *)v9 + 3) = MEMORY[0x1E0DEE9D8];
    *((_DWORD *)v9 + 8) = 0;
    sub_1D4922010();
    sub_1D46992EC((uint64_t)v5, &qword_1ED98E210);
  }
  else
  {
    sub_1D469C630((uint64_t)v5, (uint64_t)v9, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.RichLabelConfig);
  }
  sub_1D4697DE0((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
  v17 = *v9;
  sub_1D4697DE0((uint64_t)v9, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.RichLabelConfig);
  return v17;
}

char *sub_1D47BBB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t *a8)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _OWORD *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _OWORD *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t *v68;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v70;
  char v71;
  unint64_t v72;
  uint64_t v73;
  _BOOL8 v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  char v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  unint64_t v94;
  unint64_t v95;
  char v96;
  uint64_t *v97;
  void *v98;
  void *v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t, uint64_t);
  id v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t *v110;
  void *v111;
  void *v112;
  char *v113;
  uint64_t v114;
  void (*v115)(char *, uint64_t);
  NSObject *v116;
  os_log_type_t v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  char v126;
  uint64_t *v127;
  void *v128;
  void *v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  void (*v133)(char *, uint64_t, uint64_t);
  id v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  uint64_t *v140;
  void *v141;
  void *v142;
  char *v143;
  char *v144;
  uint64_t v145;
  void (*v146)(char *, uint64_t);
  NSObject *v147;
  os_log_type_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  char *result;
  _QWORD v156[2];
  __int128 v157;
  char *v158;
  unint64_t v159;
  char *v160;
  __int128 v161;
  unint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(_QWORD *@<X8>);
  _QWORD *v170;
  uint64_t *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  _OWORD *v175;
  char *v176;
  int v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  _BYTE v192[28];

  v9 = v8;
  v171 = a8;
  v180 = a4;
  v179 = a3;
  v172 = sub_1D4922370();
  v165 = *(_QWORD *)(v172 - 8);
  v15 = MEMORY[0x1E0C80A78](v172);
  v17 = (char *)v156 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v166 = (char *)v156 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)v156 - v21;
  MEMORY[0x1E0C80A78](v20);
  v160 = (char *)v156 - v23;
  v178 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig(0);
  v181 = *(_QWORD *)(v178 - 8);
  MEMORY[0x1E0C80A78](v178);
  v163 = (uint64_t)v156 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E290);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)v156 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)v156 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = a1;
  v31 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 16);
  if (!v31)
    return (char *)MEMORY[0x1E0DEE9D8];
  v176 = v27;
  v158 = v22;
  v164 = v17;
  v173 = a2;
  v177 = a7 & 1;
  v32 = (_OWORD *)swift_bridgeObjectRetain();
  v169 = 0;
  v33 = v31 - 1;
  v174 = (char *)MEMORY[0x1E0DEE9D8];
  v34 = 12;
  v35 = v32[9];
  v190 = v32[8];
  v191 = v35;
  *(_OWORD *)v192 = v32[10];
  *(_OWORD *)&v192[12] = *(_OWORD *)((char *)v32 + 172);
  v36 = v32[5];
  v186 = v32[4];
  v187 = v36;
  v162 = (unint64_t)"neric";
  v159 = 0x80000001D493F830;
  v37 = v32[7];
  v188 = v32[6];
  v189 = v37;
  v39 = v32[3];
  v184 = v32[2];
  *((_QWORD *)&v38 + 1) = *((_QWORD *)&v184 + 1);
  v185 = v39;
  *(_QWORD *)&v38 = 134217984;
  v161 = v38;
  *(_QWORD *)&v38 = 136315394;
  v157 = v38;
  v156[1] = MEMORY[0x1E0DEE9B8] + 8;
  v170 = v9;
  v40 = v32;
  v168 = a6;
  v167 = a5;
  v175 = v32;
  while (1)
  {
    v41 = v184;
    v42 = BYTE12(v191);
    sub_1D469C304(v182, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    if ((v42 & 1) == 0)
    {
      sub_1D4697DE0((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (!v33)
        goto LABEL_119;
      goto LABEL_86;
    }
    v183 = v9[6];
    v43 = v9[4];
    if (*(_QWORD *)(v43 + 16))
    {
      sub_1D46A47CC((uint64_t)&v184);
      swift_bridgeObjectRetain();
      v44 = sub_1D47CA6C8(v41);
      v45 = (uint64_t)v176;
      if ((v46 & 1) != 0)
      {
        v47 = v181;
        sub_1D469C304(*(_QWORD *)(v43 + 56) + *(_QWORD *)(v181 + 72) * v44, (uint64_t)v176, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v45, 0, 1, v178);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v181 + 56))(v176, 1, 1, v178);
      }
    }
    else
    {
      v45 = (uint64_t)v176;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v181 + 56))(v176, 1, 1, v178);
      sub_1D46A47CC((uint64_t)&v184);
      swift_bridgeObjectRetain();
    }
    v48 = sub_1D46F51E0((uint64_t)v30, v179, v180, a5, &v183, a6, v177, v45);
    sub_1D46A48AC((uint64_t)&v184);
    sub_1D46992EC(v45, &qword_1ED98E290);
    swift_bridgeObjectRelease();
    sub_1D4697DE0((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    if ((v48 & 1) == 0)
      goto LABEL_53;
    if (*(_QWORD *)(v43 + 16))
    {
      v49 = sub_1D47CA6C8(v41);
      if ((v50 & 1) != 0)
      {
        v51 = *(_QWORD *)(v43 + 56) + *(_QWORD *)(v181 + 72) * v49;
        v52 = v163;
        sub_1D469C304(v51, v163, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
        v53 = *(unsigned int *)(v52 + 24);
        sub_1D4697DE0(v52, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
        if ((int)v53 >= 1)
          break;
      }
    }
    v64 = v9[5];
    v55 = v173;
    v65 = v172;
    if (v173 < v64)
      goto LABEL_26;
    if (qword_1ED98F398 != -1)
      swift_once();
    if (byte_1ED98F388 != 1)
      goto LABEL_64;
    v79 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v80 = objc_msgSend(v79, sel_bundleIdentifier);

    if (v80)
    {
      v81 = sub_1D492261C();
      v83 = v82;

      if (v81 == 0xD00000000000002BLL && v83 == v159)
      {
        swift_bridgeObjectRelease();
LABEL_56:
        v97 = &qword_1EFEAA908;
        if (qword_1EFEA9C20 != -1)
        {
          swift_once();
          v97 = &qword_1EFEAA908;
        }
        goto LABEL_60;
      }
      v96 = sub_1D4922E38();
      swift_bridgeObjectRelease();
      if ((v96 & 1) != 0)
        goto LABEL_56;
    }
    v97 = (uint64_t *)&off_1ED98F3F0;
    if (qword_1ED98F3A8 != -1)
    {
      swift_once();
      v97 = (uint64_t *)&off_1ED98F3F0;
    }
LABEL_60:
    v98 = *(void **)(*v97 + 32);
    swift_retain();
    v99 = (void *)sub_1D49225F8();
    LODWORD(v98) = objc_msgSend(v98, sel_BOOLForKey_, v99);
    swift_release();

    if ((_DWORD)v98)
    {
      if (qword_1EFEA9C78 != -1)
        swift_once();
      v100 = v65;
      v101 = qword_1EFEAAA30;
      goto LABEL_67;
    }
LABEL_64:
    if (qword_1ED98F3D0 != -1)
      swift_once();
    v100 = v65;
    v101 = qword_1ED98F3B0;
LABEL_67:
    v102 = __swift_project_value_buffer(v100, (uint64_t)v101);
    v103 = *(void (**)(char *, uint64_t, uint64_t))(v165 + 16);
    v103(v166, v102, v65);
    if ((byte_1ED98F388 & 1) == 0)
      goto LABEL_79;
    v104 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v105 = objc_msgSend(v104, sel_bundleIdentifier);

    if (v105)
    {
      v106 = sub_1D492261C();
      v108 = v107;

      if (v106 == 0xD00000000000002BLL && v108 == (v162 | 0x8000000000000000))
      {
        swift_bridgeObjectRelease();
LABEL_73:
        v110 = &qword_1EFEAA908;
        if (qword_1EFEA9C20 != -1)
        {
          swift_once();
          v110 = &qword_1EFEAA908;
        }
        goto LABEL_77;
      }
      v109 = sub_1D4922E38();
      swift_bridgeObjectRelease();
      if ((v109 & 1) != 0)
        goto LABEL_73;
    }
    v110 = (uint64_t *)&off_1ED98F3F0;
    if (qword_1ED98F3A8 != -1)
    {
      swift_once();
      v110 = (uint64_t *)&off_1ED98F3F0;
    }
LABEL_77:
    v111 = *(void **)(*v110 + 32);
    swift_retain();
    v112 = (void *)sub_1D49225F8();
    LODWORD(v111) = objc_msgSend(v111, sel_BOOLForKey_, v112);
    swift_release();

    if ((_DWORD)v111)
    {
      v113 = v164;
      v114 = (uint64_t)v166;
      goto LABEL_82;
    }
LABEL_79:
    if (qword_1ED98F3D0 != -1)
      swift_once();
    v114 = __swift_project_value_buffer(v65, (uint64_t)qword_1ED98F3B0);
    v113 = v164;
LABEL_82:
    v103(v113, v114, v65);
    v115 = *(void (**)(char *, uint64_t))(v165 + 8);
    v115(v166, v65);
    v9 = v170;
    swift_retain();
    v116 = sub_1D4922358();
    v117 = sub_1D4922910();
    if (os_log_type_enabled(v116, v117))
    {
      v118 = swift_slowAlloc();
      *(_DWORD *)v118 = v161;
      *(_QWORD *)(v118 + 4) = v64;
      swift_release();
      _os_log_impl(&dword_1D467C000, v116, v117, "Request counts exceeds maxNumOfRegionsWithDomainSignals (%ld)", (uint8_t *)v118, 0xCu);
      MEMORY[0x1D82635B8](v118, -1, -1);

    }
    else
    {

      swift_release();
    }
    v40 = v175;
    v115(v164, v172);
    a6 = v168;
    a5 = v167;
    if (!v33)
    {
LABEL_119:
      swift_bridgeObjectRelease();
      sub_1D46A56B4((uint64_t)v169);
      return v174;
    }
LABEL_86:
    v119 = v40[v34 + 1];
    v184 = v40[v34];
    v185 = v119;
    v120 = v40[v34 + 2];
    v121 = v40[v34 + 3];
    v122 = v40[v34 + 5];
    v188 = v40[v34 + 4];
    v189 = v122;
    v186 = v120;
    v187 = v121;
    v123 = v40[v34 + 6];
    v124 = v40[v34 + 7];
    v125 = v40[v34 + 8];
    *(_OWORD *)&v192[12] = *(_OWORD *)((char *)&v40[v34 + 8] + 12);
    *(_OWORD *)v192 = v125;
    v190 = v123;
    v191 = v124;
    v34 += 10;
    --v33;
  }
  v54 = *v171;
  v55 = v173;
  v56 = v172;
  if (*(_QWORD *)(*v171 + 16))
  {
    v57 = sub_1D47CA6C8(v41);
    if ((v58 & 1) != 0 && *(_QWORD *)(*(_QWORD *)(v54 + 56) + 8 * v57) >= v53)
    {
      if (qword_1ED98F398 != -1)
        swift_once();
      if (byte_1ED98F388 != 1)
        goto LABEL_96;
      v59 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
      v60 = objc_msgSend(v59, sel_bundleIdentifier);

      if (v60)
      {
        v61 = sub_1D492261C();
        v63 = v62;

        if (v61 == 0xD00000000000002BLL && v63 == (v162 | 0x8000000000000000))
        {
          swift_bridgeObjectRelease();
LABEL_88:
          v127 = &qword_1EFEAA908;
          if (qword_1EFEA9C20 != -1)
          {
            swift_once();
            v127 = &qword_1EFEAA908;
          }
LABEL_92:
          v128 = *(void **)(*v127 + 32);
          swift_retain();
          v129 = (void *)sub_1D49225F8();
          LODWORD(v128) = objc_msgSend(v128, sel_BOOLForKey_, v129);
          swift_release();

          v56 = v172;
          if ((_DWORD)v128)
          {
            if (qword_1EFEA9C78 != -1)
              swift_once();
            v130 = v56;
            v131 = qword_1EFEAAA30;
            goto LABEL_99;
          }
LABEL_96:
          if (qword_1ED98F3D0 != -1)
            swift_once();
          v130 = v56;
          v131 = qword_1ED98F3B0;
LABEL_99:
          v132 = __swift_project_value_buffer(v130, (uint64_t)v131);
          v133 = *(void (**)(char *, uint64_t, uint64_t))(v165 + 16);
          v133(v160, v132, v56);
          if ((byte_1ED98F388 & 1) == 0)
            goto LABEL_111;
          v134 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
          v135 = objc_msgSend(v134, sel_bundleIdentifier);

          if (v135)
          {
            v136 = sub_1D492261C();
            v138 = v137;

            if (v136 == 0xD00000000000002BLL && v138 == (v162 | 0x8000000000000000))
            {
              swift_bridgeObjectRelease();
LABEL_105:
              v140 = &qword_1EFEAA908;
              if (qword_1EFEA9C20 != -1)
              {
                swift_once();
                v140 = &qword_1EFEAA908;
              }
LABEL_109:
              v141 = *(void **)(*v140 + 32);
              swift_retain();
              v142 = (void *)sub_1D49225F8();
              LODWORD(v141) = objc_msgSend(v141, sel_BOOLForKey_, v142);
              swift_release();

              v56 = v172;
              if ((_DWORD)v141)
              {
                v143 = v158;
                v144 = v158;
                v145 = (uint64_t)v160;
                goto LABEL_114;
              }
LABEL_111:
              if (qword_1ED98F3D0 != -1)
                swift_once();
              v145 = __swift_project_value_buffer(v56, (uint64_t)qword_1ED98F3B0);
              v143 = v158;
              v144 = v158;
LABEL_114:
              v133(v144, v145, v56);
              v146 = *(void (**)(char *, uint64_t))(v165 + 8);
              v146(v160, v56);
              v147 = sub_1D4922358();
              v148 = sub_1D4922910();
              if (os_log_type_enabled(v147, v148))
              {
                v149 = swift_slowAlloc();
                v156[0] = v146;
                v150 = v143;
                v151 = v149;
                v152 = swift_slowAlloc();
                v183 = v152;
                *(_DWORD *)v151 = v157;
                v153 = sub_1D46F8BC8(v41);
                *(_QWORD *)(v151 + 4) = sub_1D47F0250(v153, v154, &v183);
                swift_bridgeObjectRelease();
                *(_WORD *)(v151 + 12) = 1024;
                *(_DWORD *)(v151 + 14) = v53;
                _os_log_impl(&dword_1D467C000, v147, v148, "Domain %s exceeds maxNumOfDomainModelRuns (%d)", (uint8_t *)v151, 0x12u);
                swift_arrayDestroy();
                MEMORY[0x1D82635B8](v152, -1, -1);
                MEMORY[0x1D82635B8](v151, -1, -1);

                ((void (*)(char *, uint64_t))v156[0])(v150, v172);
              }
              else
              {

                v146(v143, v56);
              }
              v9 = v170;
              a6 = v168;
              a5 = v167;
LABEL_53:
              v40 = v175;
              if (!v33)
                goto LABEL_119;
              goto LABEL_86;
            }
            v139 = sub_1D4922E38();
            swift_bridgeObjectRelease();
            if ((v139 & 1) != 0)
              goto LABEL_105;
          }
          v140 = (uint64_t *)&off_1ED98F3F0;
          if (qword_1ED98F3A8 != -1)
          {
            swift_once();
            v140 = (uint64_t *)&off_1ED98F3F0;
          }
          goto LABEL_109;
        }
        v126 = sub_1D4922E38();
        swift_bridgeObjectRelease();
        if ((v126 & 1) != 0)
          goto LABEL_88;
      }
      v127 = (uint64_t *)&off_1ED98F3F0;
      if (qword_1ED98F3A8 != -1)
      {
        swift_once();
        v127 = (uint64_t *)&off_1ED98F3F0;
      }
      goto LABEL_92;
    }
  }
LABEL_26:
  v66 = __OFADD__(v55, 1);
  v67 = v55 + 1;
  if (!v66)
  {
    v173 = v67;
    sub_1D46A56B4((uint64_t)v169);
    v68 = v171;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v183 = *v68;
    v70 = v183;
    *v68 = 0x8000000000000000;
    v72 = sub_1D47CA6C8(v41);
    v73 = *(_QWORD *)(v70 + 16);
    v74 = (v71 & 1) == 0;
    v75 = v73 + v74;
    if (__OFADD__(v73, v74))
      goto LABEL_122;
    v76 = v71;
    if (*(_QWORD *)(v70 + 24) >= v75)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1D47AEC2C();
        v70 = v183;
      }
    }
    else
    {
      sub_1D47A61FC(v75, isUniquelyReferenced_nonNull_native);
      v70 = v183;
      v77 = sub_1D47CA6C8(v41);
      if ((v76 & 1) != (v78 & 1))
        goto LABEL_125;
      v72 = v77;
    }
    v9 = v170;
    v84 = v171;
    *v171 = v70;
    swift_bridgeObjectRelease();
    v85 = (_QWORD *)*v84;
    if ((v76 & 1) != 0)
    {
      v86 = swift_bridgeObjectRetain();
    }
    else
    {
      v85[(v72 >> 6) + 8] |= 1 << v72;
      *(_BYTE *)(v85[6] + v72) = v41;
      *(_QWORD *)(v85[7] + 8 * v72) = 0;
      v87 = v85[2];
      v88 = v87 + 1;
      v89 = __OFADD__(v87, 1);
      v86 = swift_bridgeObjectRetain();
      if (v89)
        goto LABEL_124;
      *(_QWORD *)(v86 + 16) = v88;
      v9 = v170;
    }
    v90 = *(_QWORD *)(v86 + 56);
    swift_bridgeObjectRelease();
    v91 = *(_QWORD *)(v90 + 8 * v72);
    v66 = __OFADD__(v91, 1);
    v92 = v91 + 1;
    a6 = v168;
    a5 = v167;
    if (v66)
      goto LABEL_123;
    *(_QWORD *)(v90 + 8 * v72) = v92;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v93 = v174;
    else
      v93 = sub_1D48A8628(0, *((_QWORD *)v174 + 2) + 1, 1, v174);
    v95 = *((_QWORD *)v93 + 2);
    v94 = *((_QWORD *)v93 + 3);
    if (v95 >= v94 >> 1)
      v93 = sub_1D48A8628((char *)(v94 > 1), v95 + 1, 1, v93);
    *((_QWORD *)v93 + 2) = v95 + 1;
    v174 = v93;
    v93[v95 + 32] = v41;
    v169 = sub_1D47B1C18;
    goto LABEL_53;
  }
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  result = (char *)sub_1D4922E8C();
  __break(1u);
  return result;
}

uint64_t sub_1D47BCDC0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t result;
  _QWORD v23[10];

  v8 = *v4;
  v9 = *a2;
  v10 = a2[1];
  v11 = a2[2];
  v12 = a2[3];
  v13 = a2[4];
  v14 = a2[5];
  isUniquelyReferenced_nonNull_native = sub_1D469C304(a1, a4, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  if (v13)
  {
    v16 = *(_QWORD **)(a4 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      isUniquelyReferenced_nonNull_native = (uint64_t)sub_1D48A8938(0, v16[2] + 1, 1, v16);
      v16 = (_QWORD *)isUniquelyReferenced_nonNull_native;
    }
    v18 = v16[2];
    v17 = v16[3];
    if (v18 >= v17 >> 1)
    {
      isUniquelyReferenced_nonNull_native = (uint64_t)sub_1D48A8938((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
      v16 = (_QWORD *)isUniquelyReferenced_nonNull_native;
    }
    v16[2] = v18 + 1;
    v19 = &v16[6 * v18];
    v19[4] = v9;
    v19[5] = v10;
    v19[6] = v11;
    v19[7] = v12;
    v19[8] = v13;
    v19[9] = v14;
    *(_QWORD *)(a4 + 104) = v16;
  }
  v20 = *(_QWORD *)(a1 + 40);
  MEMORY[0x1E0C80A78](isUniquelyReferenced_nonNull_native);
  v23[2] = v4;
  v23[3] = a3;
  v23[4] = a1;
  v23[5] = a4;
  v23[6] = v8;
  swift_bridgeObjectRetain();
  v21 = sub_1D489B4F4((void (*)(_QWORD *__return_ptr, __int128 *))sub_1D47BE318, (uint64_t)v23, v20);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a4 + 40) = v21;
  return result;
}

uint64_t sub_1D47BCF38@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  unsigned __int8 v32;
  uint64_t v33;
  int v34;
  int v35;
  _DWORD v37[2];
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  __int128 v63;
  _BYTE v64[31];
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  _BYTE v70[28];
  char v71;
  _BYTE v72[27];
  int v73;
  _QWORD v74[2];
  __int128 v75;
  _OWORD v76[2];
  __int128 v77;
  _OWORD v78[2];
  _OWORD v79[4];
  __int128 v80;
  __int128 v81;
  _OWORD v82[5];
  uint64_t v83;

  v50 = a5;
  v51 = a4;
  v83 = a6;
  v10 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig(0);
  v53 = *(_QWORD *)(v10 - 8);
  v54 = v10;
  MEMORY[0x1E0C80A78](v10);
  v39 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E210);
  v13 = MEMORY[0x1E0C80A78](v12);
  v38 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v41 = (char *)v37 - v15;
  v16 = sub_1D4922370();
  v45 = *(_QWORD *)(v16 - 8);
  v46 = v16;
  v17 = MEMORY[0x1E0C80A78](v16);
  v44 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v43 = (char *)v37 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E290);
  MEMORY[0x1E0C80A78](v20);
  v49 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v23 = MEMORY[0x1E0C80A78](v22);
  v40 = (char *)v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v23);
  v42 = (char *)v37 - v26;
  MEMORY[0x1E0C80A78](v25);
  v27 = a1[7];
  v82[0] = a1[6];
  v82[1] = v27;
  v28 = a1[3];
  v79[2] = a1[2];
  v82[2] = a1[8];
  *(_OWORD *)((char *)&v82[2] + 12) = *(_OWORD *)((char *)a1 + 140);
  v29 = a1[4];
  v30 = a1[5];
  v79[3] = v28;
  v80 = v29;
  v81 = v30;
  v31 = a1[1];
  v79[0] = *a1;
  v79[1] = v31;
  v77 = *(_OWORD *)((char *)v79 + 1);
  v78[0] = *(_OWORD *)((char *)&v79[1] + 1);
  *(_OWORD *)((char *)v78 + 15) = v79[2];
  v57 = v28;
  v58 = v80;
  v60 = *((_QWORD *)&v28 + 1);
  v61 = *((_QWORD *)&v80 + 1);
  v75 = v30;
  v76[0] = v82[0];
  *(_OWORD *)((char *)v76 + 12) = *(_OWORD *)((char *)v82 + 12);
  v56 = BYTE12(v27);
  *(_DWORD *)((char *)v74 + 7) = DWORD1(v82[2]);
  v32 = v79[0];
  v74[0] = *(_QWORD *)((char *)&v82[1] + 13);
  v59 = *((_QWORD *)&v82[2] + 1);
  v33 = *(_QWORD *)&v82[3];
  v34 = DWORD2(v82[3]);
  v62 = v79[0];
  sub_1D46A47CC((uint64_t)v79);
  v55 = a2;
  v35 = sub_1D47BB968(&v62);
  if (*(_QWORD *)(a3 + 16))
  {
    v37[1] = v35;
    v47 = v33;
    v52 = v6;
    swift_bridgeObjectRetain();
    v48 = a3;
    __asm { BR              X9 }
  }
  v69 = v75;
  *(_OWORD *)v70 = v76[0];
  *(_OWORD *)&v70[12] = *(_OWORD *)((char *)v76 + 12);
  v63 = v77;
  v62 = v32;
  *(_OWORD *)v64 = v78[0];
  *(_OWORD *)&v64[15] = *(_OWORD *)((char *)v78 + 15);
  v65 = v57;
  v66 = v60;
  v67 = v58;
  v68 = v61;
  v71 = v56;
  *(_DWORD *)&v72[7] = *(_DWORD *)((char *)v74 + 7);
  *(_QWORD *)v72 = v74[0];
  *(_QWORD *)&v72[11] = v59;
  *(_QWORD *)&v72[19] = v33;
  v73 = v34;
  faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v62);
  return sub_1D46A4760((uint64_t)&v62, v83);
}

uint64_t sub_1D47BE28C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1D47BE2D8()
{
  sub_1D47BE28C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DomainSignalsExtractor()
{
  return objc_opt_self();
}

uint64_t sub_1D47BE318@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1D47BCF38(a1, v2[2], v2[3], v2[5], v2[6], a2);
}

unint64_t sub_1D47BE338(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  double *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD v24[2];
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;

  v31 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D7C0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v11 = *(_QWORD *)(v30 - 8);
  v12 = MEMORY[0x1E0C80A78](v30);
  v29 = (uint64_t)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v28 = (uint64_t)v24 - v14;
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
    return MEMORY[0x1E0DEE9D8];
  v16 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v24[1] = a1;
  v25 = v16;
  v17 = (double *)(a1 + v16);
  v18 = *(_QWORD *)(v11 + 72);
  swift_bridgeObjectRetain();
  v19 = MEMORY[0x1E0DEE9D8];
  v26 = a3;
  v27 = a4;
  do
  {
    sub_1D47BB314(v17, v31, a3, a4, (uint64_t)v10);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v30) == 1)
    {
      sub_1D46992EC((uint64_t)v10, &qword_1ED98D7C0);
    }
    else
    {
      v20 = v28;
      sub_1D469C630((uint64_t)v10, v28, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1D469C630(v20, v29, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_1D48A8614(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
      v22 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v19 + 24);
      if (v22 >= v21 >> 1)
        v19 = sub_1D48A8614(v21 > 1, v22 + 1, 1, v19);
      *(_QWORD *)(v19 + 16) = v22 + 1;
      sub_1D469C630(v29, v19 + v25 + v22 * v18, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      a3 = v26;
      a4 = v27;
    }
    v17 = (double *)((char *)v17 + v18);
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1D47BE594(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D47BE5DC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D47BE600()
{
  uint64_t v0;

  return swift_deallocObject();
}

__n128 sub_1D47BE624@<Q0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __int128 v5;

  v3 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)a2 = *a1;
  result = *(__n128 *)v3;
  v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 24) = v5;
  return result;
}

uint64_t sub_1D47BE640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  swift_release();
  v3 = v0 + ((v2 + 32) & ~v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + 80))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 56);
  v5 = sub_1D4920FD8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocObject();
}

void sub_1D47BE710(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8) + 80);
  sub_1D47BB1F8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (double *)(v1 + ((v3 + 32) & ~v3)));
}

uint64_t sub_1D47BE750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a5)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1D47BE780(uint64_t a1, uint64_t a2, uint64_t *a3, int a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v6 = v5;
  v12 = sub_1D4921008();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a3;
  v6[2] = a1;
  v6[3] = a5;
  v6[4] = a2;
  v6[5] = a4;
  v6[6] = v16;
  swift_retain_n();
  swift_retain();
  sub_1D4920FFC();
  v17 = sub_1D4920FF0();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  type metadata accessor for RichLabelMapper();
  swift_allocObject();
  v6[7] = sub_1D4782CA4(a5, v17, v19);
  type metadata accessor for RichLabelThresholdMapper();
  swift_allocObject();
  swift_retain();
  v20 = sub_1D46A5308();
  swift_release();
  v6[8] = v20;
  type metadata accessor for DomainModelOutputMapper();
  v21 = swift_allocObject();
  v22 = sub_1D48BEE58(62, 0, 1852797802, 0xE400000000000000);
  v24 = v23;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v22;
  *(_QWORD *)(v25 + 24) = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E4C8);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 24) = 0;
  *(_BYTE *)(v26 + 32) = -1;
  *(_QWORD *)(v26 + 56) = 0;
  *(_QWORD *)(v26 + 64) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB70);
  v27 = swift_allocObject();
  *(_DWORD *)(v27 + 16) = 0;
  *(_QWORD *)(v26 + 80) = v27;
  *(_QWORD *)(v26 + 40) = sub_1D47BE9DC;
  *(_QWORD *)(v26 + 48) = v25;
  swift_retain();
  swift_retain();
  sub_1D46A56B4(0);
  *(_QWORD *)(v26 + 72) = 4;
  swift_release();
  v28 = sub_1D4835CD8();
  swift_release();
  *(_QWORD *)(v21 + 16) = v28;
  v6[9] = v21;
  return v6;
}

uint64_t sub_1D47BE9B8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D47BE9DC@<X0>(unint64_t *a1@<X8>)
{
  return sub_1D4825D04(a1);
}

uint64_t getEnumTagSinglePayload for DomainSignalsExtractor.ExtractedDomainRegionInfo(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xE7 && a1[40])
    return (*(_DWORD *)a1 + 231);
  v3 = *a1;
  v4 = v3 >= 0x1A;
  v5 = v3 - 26;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DomainSignalsExtractor.ExtractedDomainRegionInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xE6)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 231;
    if (a3 >= 0xE7)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0xE7)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 25;
  }
  return result;
}

ValueMetadata *type metadata accessor for DomainSignalsExtractor.ExtractedDomainRegionInfo()
{
  return &type metadata for DomainSignalsExtractor.ExtractedDomainRegionInfo;
}

uint64_t sub_1D47BEA94(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;

  v2 = v1;
  if (a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    if (!v4)
      return v5;
    v24 = MEMORY[0x1E0DEE9D8];
    result = sub_1D48AC14C(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0)
      break;
    v23 = v2;
    v7 = 0;
    v2 = a1 & 0xC000000000000001;
    v5 = v24;
    while (v4 != v7)
    {
      if (v2)
        v8 = (id)MEMORY[0x1D8261F20](v7, a1);
      else
        v8 = *(id *)(a1 + 8 * v7 + 32);
      v9 = v8;
      v10 = objc_msgSend(v8, sel_label, v23);
      v11 = sub_1D492261C();
      v13 = v12;

      objc_msgSend(v9, sel_confidence);
      v15 = v14;
      objc_msgSend(v9, sel_normalizedBoundingBox);
      v27.origin.x = 0.0;
      v27.origin.y = 0.0;
      v27.size.width = 1.0;
      v27.size.height = 1.0;
      v26 = CGRectIntersection(v25, v27);
      x = v26.origin.x;
      y = v26.origin.y;
      width = v26.size.width;
      height = v26.size.height;

      v21 = *(_QWORD *)(v24 + 16);
      v20 = *(_QWORD *)(v24 + 24);
      if (v21 >= v20 >> 1)
        sub_1D48AC14C(v20 > 1, v21 + 1, 1);
      ++v7;
      *(_QWORD *)(v24 + 16) = v21 + 1;
      v22 = v24 + 56 * v21;
      *(_QWORD *)(v22 + 32) = v11;
      *(_QWORD *)(v22 + 40) = v13;
      *(_DWORD *)(v22 + 48) = v15;
      *(CGFloat *)(v22 + 56) = x;
      *(CGFloat *)(v22 + 64) = y;
      *(CGFloat *)(v22 + 72) = width;
      *(CGFloat *)(v22 + 80) = height;
      if (v4 == v7)
        return v5;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v4 = sub_1D4922C4C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1D47BEC7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for AnyVIImageContent();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v1;
  a1[3] = v3;
  a1[4] = (uint64_t)&off_1E9801C78;
  *a1 = v4;
  return swift_unknownObjectRetain();
}

void sub_1D47BECD0(_QWORD *a1@<X8>)
{
  void *v1;
  void *v2;
  id v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  id v23;
  void *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  id v43;
  void *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  id v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  CGFloat v57;
  CGFloat v58;
  CGFloat v59;
  CGFloat v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  id v64;
  void *v65;
  id v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  id v71;
  void *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  int v78;
  CGFloat v79;
  CGFloat v80;
  CGFloat v81;
  CGFloat v82;
  unint64_t v83;
  unint64_t v84;
  _QWORD *v85;
  id v86;
  void *v87;
  id v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  unint64_t v93;
  id v94;
  void *v95;
  id v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  int v103;
  CGFloat v104;
  CGFloat v105;
  CGFloat v106;
  CGFloat v107;
  unint64_t v108;
  unint64_t v109;
  _QWORD *v110;
  id v111;
  void *v112;
  id v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  id v118;
  void *v119;
  uint64_t v120;
  void *v122;
  unint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  CGRect v127;
  CGRect v128;
  CGRect v129;
  CGRect v130;
  CGRect v131;
  CGRect v132;
  CGRect v133;
  CGRect v134;
  CGRect v135;
  CGRect v136;
  CGRect v137;
  CGRect v138;
  CGRect v139;
  CGRect v140;
  CGRect v141;

  v2 = v1;
  v3 = objc_msgSend(v1, sel_faceAnnotations);
  v122 = v1;
  if (!v3)
  {
    v126 = 0;
    goto LABEL_19;
  }
  v4 = v3;
  sub_1D46F2DB4(0, &qword_1ED98D268);
  v5 = sub_1D4922820();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1D4922C4C();
    if (v6)
      goto LABEL_4;
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_4:
      if (v6 < 1)
      {
        __break(1u);
        goto LABEL_100;
      }
      v7 = 0;
      v126 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        if ((v5 & 0xC000000000000001) != 0)
          v8 = (id)MEMORY[0x1D8261F20](v7, v5);
        else
          v8 = *(id *)(v5 + 8 * v7 + 32);
        v9 = v8;
        v10 = objc_msgSend(v8, sel_label);
        v11 = sub_1D492261C();
        v13 = v12;

        objc_msgSend(v9, sel_confidence);
        v15 = v14;
        objc_msgSend(v9, sel_normalizedBoundingBox);
        v137.origin.x = 0.0;
        v137.origin.y = 0.0;
        v137.size.width = 1.0;
        v137.size.height = 1.0;
        v128 = CGRectIntersection(v127, v137);
        x = v128.origin.x;
        y = v128.origin.y;
        width = v128.size.width;
        height = v128.size.height;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v126 = sub_1D48A9600(0, v126[2] + 1, 1, v126);
        v21 = v126[2];
        v20 = v126[3];
        if (v21 >= v20 >> 1)
          v126 = sub_1D48A9600((_QWORD *)(v20 > 1), v21 + 1, 1, v126);
        ++v7;
        v126[2] = v21 + 1;
        v22 = &v126[7 * v21];
        v22[4] = v11;
        v22[5] = v13;
        *((_DWORD *)v22 + 12) = v15;
        *((CGFloat *)v22 + 7) = x;
        *((CGFloat *)v22 + 8) = y;
        *((CGFloat *)v22 + 9) = width;
        *((CGFloat *)v22 + 10) = height;
      }
      while (v6 != v7);
      goto LABEL_18;
    }
  }
  v126 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_18:
  swift_bridgeObjectRelease_n();
  v2 = v122;
LABEL_19:
  v23 = objc_msgSend(v2, sel_humanAnnotations);
  if (!v23)
  {
    v125 = 0;
    goto LABEL_37;
  }
  v24 = v23;
  sub_1D46F2DB4(0, &qword_1ED98D268);
  v25 = sub_1D4922820();

  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    v26 = sub_1D4922C4C();
    if (v26)
    {
LABEL_22:
      if (v26 >= 1)
      {
        v27 = 0;
        v125 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        do
        {
          if ((v25 & 0xC000000000000001) != 0)
            v28 = (id)MEMORY[0x1D8261F20](v27, v25);
          else
            v28 = *(id *)(v25 + 8 * v27 + 32);
          v29 = v28;
          v30 = objc_msgSend(v28, sel_label);
          v31 = sub_1D492261C();
          v33 = v32;

          objc_msgSend(v29, sel_confidence);
          v35 = v34;
          objc_msgSend(v29, sel_normalizedBoundingBox);
          v138.origin.x = 0.0;
          v138.origin.y = 0.0;
          v138.size.width = 1.0;
          v138.size.height = 1.0;
          v130 = CGRectIntersection(v129, v138);
          v36 = v130.origin.x;
          v37 = v130.origin.y;
          v38 = v130.size.width;
          v39 = v130.size.height;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v125 = sub_1D48A9600(0, v125[2] + 1, 1, v125);
          v41 = v125[2];
          v40 = v125[3];
          if (v41 >= v40 >> 1)
            v125 = sub_1D48A9600((_QWORD *)(v40 > 1), v41 + 1, 1, v125);
          ++v27;
          v125[2] = v41 + 1;
          v42 = &v125[7 * v41];
          v42[4] = v31;
          v42[5] = v33;
          *((_DWORD *)v42 + 12) = v35;
          *((CGFloat *)v42 + 7) = v36;
          *((CGFloat *)v42 + 8) = v37;
          *((CGFloat *)v42 + 9) = v38;
          *((CGFloat *)v42 + 10) = v39;
        }
        while (v26 != v27);
        goto LABEL_36;
      }
LABEL_100:
      __break(1u);
      goto LABEL_101;
    }
  }
  else
  {
    v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v26)
      goto LABEL_22;
  }
  v125 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_36:
  swift_bridgeObjectRelease_n();
  v2 = v122;
LABEL_37:
  v43 = objc_msgSend(v2, sel_nsfwAnnotations);
  if (!v43)
  {
    v48 = 0;
    goto LABEL_55;
  }
  v44 = v43;
  sub_1D46F2DB4(0, &qword_1ED98D268);
  v45 = sub_1D4922820();

  if (v45 >> 62)
  {
    swift_bridgeObjectRetain();
    v46 = sub_1D4922C4C();
    if (v46)
    {
LABEL_40:
      if (v46 >= 1)
      {
        v47 = 0;
        v48 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        do
        {
          if ((v45 & 0xC000000000000001) != 0)
            v49 = (id)MEMORY[0x1D8261F20](v47, v45);
          else
            v49 = *(id *)(v45 + 8 * v47 + 32);
          v50 = v49;
          v51 = objc_msgSend(v49, sel_label);
          v52 = sub_1D492261C();
          v54 = v53;

          objc_msgSend(v50, sel_confidence);
          v56 = v55;
          objc_msgSend(v50, sel_normalizedBoundingBox);
          v139.origin.x = 0.0;
          v139.origin.y = 0.0;
          v139.size.width = 1.0;
          v139.size.height = 1.0;
          v132 = CGRectIntersection(v131, v139);
          v57 = v132.origin.x;
          v58 = v132.origin.y;
          v59 = v132.size.width;
          v60 = v132.size.height;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v48 = sub_1D48A9600(0, v48[2] + 1, 1, v48);
          v62 = v48[2];
          v61 = v48[3];
          if (v62 >= v61 >> 1)
            v48 = sub_1D48A9600((_QWORD *)(v61 > 1), v62 + 1, 1, v48);
          ++v47;
          v48[2] = v62 + 1;
          v63 = &v48[7 * v62];
          v63[4] = v52;
          v63[5] = v54;
          *((_DWORD *)v63 + 12) = v56;
          *((CGFloat *)v63 + 7) = v57;
          *((CGFloat *)v63 + 8) = v58;
          *((CGFloat *)v63 + 9) = v59;
          *((CGFloat *)v63 + 10) = v60;
        }
        while (v46 != v47);
        goto LABEL_54;
      }
LABEL_101:
      __break(1u);
      goto LABEL_102;
    }
  }
  else
  {
    v46 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v46)
      goto LABEL_40;
  }
  v48 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_54:
  swift_bridgeObjectRelease_n();
  v2 = v122;
LABEL_55:
  v64 = objc_msgSend(v2, sel_textBlockAnnotation);
  if (!v64)
  {
    v70 = 0;
    goto LABEL_73;
  }
  v65 = v64;
  v66 = objc_msgSend(v64, sel_textAnnotations);

  sub_1D46F2DB4(0, (unint64_t *)&qword_1ED98AEA8);
  v67 = sub_1D4922820();

  if (v67 >> 62)
  {
    swift_bridgeObjectRetain();
    v68 = sub_1D4922C4C();
    if (v68)
    {
LABEL_58:
      if (v68 >= 1)
      {
        v69 = 0;
        v70 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        do
        {
          if ((v67 & 0xC000000000000001) != 0)
            v71 = (id)MEMORY[0x1D8261F20](v69, v67);
          else
            v71 = *(id *)(v67 + 8 * v69 + 32);
          v72 = v71;
          v73 = objc_msgSend(v71, sel_text);
          v74 = sub_1D492261C();
          v76 = v75;

          objc_msgSend(v72, sel_confidence);
          v78 = v77;
          objc_msgSend(v72, sel_normalizedBoundingBox);
          v140.origin.x = 0.0;
          v140.origin.y = 0.0;
          v140.size.width = 1.0;
          v140.size.height = 1.0;
          v134 = CGRectIntersection(v133, v140);
          v79 = v134.origin.x;
          v80 = v134.origin.y;
          v81 = v134.size.width;
          v82 = v134.size.height;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v70 = sub_1D48A9E64(0, v70[2] + 1, 1, v70);
          v84 = v70[2];
          v83 = v70[3];
          if (v84 >= v83 >> 1)
            v70 = sub_1D48A9E64((_QWORD *)(v83 > 1), v84 + 1, 1, v70);
          ++v69;
          v70[2] = v84 + 1;
          v85 = &v70[7 * v84];
          v85[4] = v74;
          v85[5] = v76;
          *((_DWORD *)v85 + 12) = v78;
          *((CGFloat *)v85 + 7) = v79;
          *((CGFloat *)v85 + 8) = v80;
          *((CGFloat *)v85 + 9) = v81;
          *((CGFloat *)v85 + 10) = v82;
        }
        while (v68 != v69);
        goto LABEL_72;
      }
LABEL_102:
      __break(1u);
      goto LABEL_103;
    }
  }
  else
  {
    v68 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v68)
      goto LABEL_58;
  }
  v70 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_72:
  swift_bridgeObjectRelease_n();
  v2 = v122;
LABEL_73:
  v86 = objc_msgSend(v2, sel_barcodeAnnotation);
  if (!v86)
  {
    v92 = 0;
    goto LABEL_91;
  }
  v87 = v86;
  v88 = objc_msgSend(v86, sel_annotationItems);

  sub_1D46F2DB4(0, &qword_1EFEAB860);
  v89 = sub_1D4922820();

  if (v89 >> 62)
  {
    swift_bridgeObjectRetain();
    v90 = sub_1D4922C4C();
    if (v90)
    {
LABEL_76:
      if (v90 >= 1)
      {
        v91 = 0;
        v123 = v89 & 0xC000000000000001;
        v92 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v124 = v90;
        v93 = v89;
        do
        {
          if (v123)
            v94 = (id)MEMORY[0x1D8261F20](v91, v89);
          else
            v94 = *(id *)(v89 + 8 * v91 + 32);
          v95 = v94;
          v96 = objc_msgSend(v94, sel_symbology);
          sub_1D492261C();

          v97 = sub_1D49225F8();
          swift_bridgeObjectRelease();
          v98 = objc_msgSend(v95, sel_payloadStringValue);
          v99 = sub_1D492261C();
          v101 = v100;

          objc_msgSend(v95, sel_confidence);
          v103 = v102;
          objc_msgSend(v95, sel_normalizedBoundingBox);
          v141.origin.x = 0.0;
          v141.origin.y = 0.0;
          v141.size.width = 1.0;
          v141.size.height = 1.0;
          v136 = CGRectIntersection(v135, v141);
          v104 = v136.origin.x;
          v105 = v136.origin.y;
          v106 = v136.size.width;
          v107 = v136.size.height;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v92 = sub_1D48A9D58(0, v92[2] + 1, 1, v92);
          v109 = v92[2];
          v108 = v92[3];
          if (v109 >= v108 >> 1)
            v92 = sub_1D48A9D58((_QWORD *)(v108 > 1), v109 + 1, 1, v92);
          ++v91;
          v92[2] = v109 + 1;
          v110 = &v92[8 * v109];
          v110[4] = v97;
          v110[5] = v99;
          v110[6] = v101;
          *((_DWORD *)v110 + 14) = v103;
          *((CGFloat *)v110 + 8) = v104;
          *((CGFloat *)v110 + 9) = v105;
          *((CGFloat *)v110 + 10) = v106;
          *((CGFloat *)v110 + 11) = v107;
          v89 = v93;
        }
        while (v124 != v91);
        goto LABEL_90;
      }
LABEL_103:
      __break(1u);
      goto LABEL_104;
    }
  }
  else
  {
    v90 = *(_QWORD *)((v89 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v90)
      goto LABEL_76;
  }
  v92 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_90:
  swift_bridgeObjectRelease_n();
  v2 = v122;
LABEL_91:
  v111 = objc_msgSend(v2, sel_scenenetAnnotation);
  if (!v111)
  {
    v115 = 0;
    v117 = 0;
    goto LABEL_95;
  }
  v112 = v111;
  v113 = objc_msgSend(v111, sel_annotations);
  sub_1D46F2DB4(0, &qword_1ED98D268);
  v114 = sub_1D4922820();

  v115 = sub_1D47BEA94(v114);
  swift_bridgeObjectRelease();
  v116 = (unint64_t)objc_msgSend(v112, sel_revision);
  if ((v116 & 0x8000000000000000) != 0)
  {
LABEL_104:
    sub_1D4922C28();
    __break(1u);
    return;
  }
  v117 = v116;

LABEL_95:
  v118 = objc_msgSend(v2, sel_reducePersonOverTriggerAnnotation);
  if (v118)
  {
    v119 = v118;
    v120 = sub_1D47BFB74();

  }
  else
  {
    v120 = 0;
  }
  *a1 = v126;
  a1[1] = v125;
  a1[2] = v48;
  a1[3] = v70;
  a1[4] = v92;
  a1[5] = v115;
  a1[6] = v117;
  a1[7] = v120;
}

uint64_t sub_1D47BF8B4@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD *v7;
  uint64_t i;
  _QWORD *v9;
  int v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  int v31;
  __int16 v32;
  _BYTE v33[7];
  _BYTE v34[7];

  v3 = objc_msgSend(v1, sel_domainInfo);
  sub_1D46F2DB4(0, (unint64_t *)&unk_1ED98D270);
  v4 = sub_1D4922820();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1D4922C4C();
    v5 = result;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
  }
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v5)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
    objc_msgSend(v30, sel_regionOfInterest);
    v21 = v20;
    v23 = v22;
    v25 = v24;
    v27 = v26;
    v28 = type metadata accessor for VisualUnderstanding.ImageRegion();
    result = sub_1D4920FCC();
    *(_QWORD *)a1 = v21;
    *(_QWORD *)(a1 + 8) = v23;
    *(_QWORD *)(a1 + 16) = v25;
    *(_QWORD *)(a1 + 24) = v27;
    v29 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(a1 + 32) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(a1 + 40) = v7;
    *(_QWORD *)(a1 + 48) = v29;
    *(_QWORD *)(a1 + 56) = v29;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_BYTE *)(a1 + 96) = 0;
    *(_QWORD *)(a1 + 104) = v29;
    *(_BYTE *)(a1 + *(int *)(v28 + 60)) = 0;
    return result;
  }
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v11 = (id)MEMORY[0x1D8261F20](i, v4);
      else
        v11 = *(id *)(v4 + 8 * i + 32);
      v12 = v11;
      v13 = objc_msgSend(v11, sel_domainKey);
      v14 = sub_1D492261C();
      v16 = v15;

      sub_1D48550D8(v14, v16, v34);
      swift_bridgeObjectRelease();
      v17 = v34[0];
      if (v34[0] != 26)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_1D48A84F8(0, v7[2] + 1, 1, v7);
        v19 = v7[2];
        v18 = v7[3];
        if (v19 >= v18 >> 1)
          v7 = sub_1D48A84F8((_QWORD *)(v18 > 1), v19 + 1, 1, v7);
        v7[2] = v19 + 1;
        v9 = &v7[20 * v19];
        *((_BYTE *)v9 + 32) = v17;
        v10 = *(_DWORD *)&v34[3];
        *(_DWORD *)((char *)v9 + 33) = *(_DWORD *)v34;
        *((_DWORD *)v9 + 9) = v10;
        *(_OWORD *)(v9 + 5) = 0u;
        *(_OWORD *)(v9 + 7) = 0u;
        *((_BYTE *)v9 + 72) = 0;
        *((_DWORD *)v9 + 19) = *(_DWORD *)&v33[3];
        *(_DWORD *)((char *)v9 + 73) = *(_DWORD *)v33;
        *((_OWORD *)v9 + 5) = 0u;
        *((_OWORD *)v9 + 6) = 0u;
        *((_OWORD *)v9 + 7) = 0u;
        *((_OWORD *)v9 + 8) = 0u;
        *((_OWORD *)v9 + 9) = 0u;
        *((_WORD *)v9 + 80) = 0;
        *((_WORD *)v9 + 83) = v32;
        *(_DWORD *)((char *)v9 + 162) = v31;
        v9[21] = 0;
        v9[22] = 0;
        *((_DWORD *)v9 + 46) = 0;
      }
    }
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D47BFB74()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;

  v1 = objc_msgSend(v0, sel_regions);
  sub_1D46F2DB4(0, &qword_1ED98AF38);
  v2 = sub_1D4922820();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_15:
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_16:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v6;
  }
  swift_bridgeObjectRetain();
  result = sub_1D4922C4C();
  v3 = result;
  if (!result)
    goto LABEL_15;
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1D8261F20](v5, v2);
      else
        v7 = *(id *)(v2 + 8 * v5 + 32);
      v8 = v7;
      v9 = objc_msgSend(v7, sel_label);
      v10 = sub_1D492261C();
      v12 = v11;

      objc_msgSend(v8, sel_confidence);
      v14 = v13;
      v15 = objc_msgSend(v8, sel_faceCount);
      objc_msgSend(v8, sel_boundingBox);
      v17 = v16;
      v19 = v18;
      v21 = v20;
      v23 = v22;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_1D48A9C30(0, v6[2] + 1, 1, v6);
      v25 = v6[2];
      v24 = v6[3];
      if (v25 >= v24 >> 1)
        v6 = sub_1D48A9C30((_QWORD *)(v24 > 1), v25 + 1, 1, v6);
      ++v5;
      v6[2] = v25 + 1;
      v26 = &v6[7 * v25];
      v26[4] = v10;
      v26[5] = v12;
      *((_DWORD *)v26 + 12) = v14;
      *((_DWORD *)v26 + 13) = v15;
      v26[7] = v17;
      v26[8] = v19;
      v26[9] = v21;
      v26[10] = v23;
    }
    while (v3 != v5);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D47BFDA4@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  id v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  v2 = v1;
  v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(v1, sel_imageRegions);
  sub_1D46F2DB4(0, &qword_1ED98D238);
  v9 = sub_1D4922820();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1D4922C4C();
    swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x1E0DEE9D8];
    goto LABEL_14;
  }
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
    goto LABEL_13;
LABEL_3:
  *(_QWORD *)&v31 = MEMORY[0x1E0DEE9D8];
  result = sub_1D48AB550(0, v10 & ~(v10 >> 63), 0);
  if (v10 < 0)
  {
    __break(1u);
    return result;
  }
  v29 = v2;
  v30 = a1;
  v12 = 0;
  v13 = v31;
  do
  {
    if ((v9 & 0xC000000000000001) != 0)
      v14 = (id)MEMORY[0x1D8261F20](v12, v9);
    else
      v14 = *(id *)(v9 + 8 * v12 + 32);
    v15 = v14;
    sub_1D47BF8B4((uint64_t)v7);

    *(_QWORD *)&v31 = v13;
    v17 = *(_QWORD *)(v13 + 16);
    v16 = *(_QWORD *)(v13 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_1D48AB550(v16 > 1, v17 + 1, 1);
      v13 = v31;
    }
    ++v12;
    *(_QWORD *)(v13 + 16) = v17 + 1;
    sub_1D46A8594((uint64_t)v7, v13+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v17);
  }
  while (v10 != v12);
  swift_bridgeObjectRelease();
  v2 = v29;
  a1 = v30;
LABEL_14:
  v18 = objc_msgSend(v2, sel_annotation, v29, v30);
  if (v18)
  {
    v19 = v18;
    sub_1D47BECD0(&v31);

    v20 = v31;
    v21 = v32;
    v22 = v33;
    v23 = v34;
  }
  else
  {
    v20 = xmmword_1D49324E0;
    v21 = 0uLL;
    v22 = 0uLL;
    v23 = 0uLL;
  }
  v31 = v20;
  v32 = v21;
  v33 = v22;
  v34 = v23;
  v24 = objc_msgSend(v2, sel_payload);
  if (v24)
  {
    v25 = v24;
    v26 = sub_1D4920F6C();
    v28 = v27;

  }
  else
  {
    v26 = 0;
    v28 = 0xF000000000000000;
  }
  return sub_1D482A3A0(v13, (uint64_t *)&v31, v26, v28, a1);
}

void sub_1D47C0040(uint64_t a1@<X8>)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(__int128 *__return_ptr, __int128 *);
  _BYTE v8[48];
  __int128 v9[2];
  __int128 v10;
  uint64_t v11;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 56) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_1D479CED8(v1 + 80, (uint64_t)&v10);
  if (!v11)
  {
    sub_1D47C0AF0((uint64_t)&v10);
    sub_1D46AAF28(v1 + 16, (uint64_t)&v10);
    swift_beginAccess();
    v4 = *(_QWORD *)(v1 + 64);
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain_n();
      v6 = v4 + 40;
      do
      {
        v7 = *(void (**)(__int128 *__return_ptr, __int128 *))(v6 - 8);
        swift_retain();
        v7(v9, &v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
        sub_1D46B2A10(v9, (uint64_t)&v10);
        swift_release();
        v6 += 16;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease_n();
    }
    sub_1D46AAF28((uint64_t)&v10, (uint64_t)v9);
    sub_1D46D2A1C((uint64_t)v9, (uint64_t)v8);
    swift_beginAccess();
    sub_1D47C0AA8((uint64_t)v8, v1 + 80);
    swift_endAccess();
  }
  sub_1D46B2A10(&v10, a1);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1D47C01E8()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 56) + 16);
  os_unfair_lock_lock(v1);
  v2 = *(void **)(v0 + 72);
  if (v2)
  {
    v3 = v2;
    swift_willThrow();
    os_unfair_lock_unlock(v1);
  }
  else
  {
    os_unfair_lock_unlock(v1);
    sub_1D47C0040((uint64_t)v7);
    v4 = v8;
    v5 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    v0 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  return v0;
}

void sub_1D47C029C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  _QWORD *v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _OWORD v12[2];
  uint64_t v13;

  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 56) + 16);
  os_unfair_lock_lock(v5);
  v13 = 0;
  memset(v12, 0, sizeof(v12));
  swift_beginAccess();
  sub_1D47C0AA8((uint64_t)v12, v2 + 80);
  swift_endAccess();
  v6 = (_QWORD *)(v2 + 64);
  swift_beginAccess();
  v7 = *(_QWORD **)(v2 + 64);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v2 + 64) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_1D48AA0CC(0, v7[2] + 1, 1, v7);
    *v6 = v7;
  }
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    v7 = sub_1D48AA0CC((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
    *v6 = v7;
  }
  v7[2] = v10 + 1;
  v11 = &v7[2 * v10];
  v11[4] = a1;
  v11[5] = a2;
  swift_endAccess();
  os_unfair_lock_unlock(v5);
}

void sub_1D47C03CC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t);
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  id v30;
  int v31;
  __CVBuffer *v32;
  __CVBuffer *v33;
  _DWORD *v34;
  void (*v35)(char *, uint64_t);
  _QWORD *v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  _WORD v41[8];
  const char *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;

  v4 = sub_1D4922370();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v34 - v9;
  sub_1D470C76C((uint64_t)&v34 - v9);
  sub_1D470C928((uint64_t)v8);
  v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v10, v4);
  sub_1D46AAF28((uint64_t)a1, (uint64_t)v38);
  v12 = sub_1D4922358();
  v13 = sub_1D4922910();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v35 = v11;
    v15 = v14;
    v36 = a1;
    v37 = a2;
    *(_DWORD *)v14 = 67109120;
    v34 = v14 + 4;
    v16 = v4;
    v17 = v39;
    v18 = v40;
    __swift_project_boxed_opaque_existential_1(v38, v39);
    v19 = v17;
    v4 = v16;
    a1 = v36;
    v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v19, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    LODWORD(v38[0]) = v20;
    a2 = v37;
    sub_1D4922A78();
    _os_log_impl(&dword_1D467C000, v12, v13, "ImageContentLazy original.orientation: %u", v15, 8u);
    v21 = v15;
    v11 = v35;
    MEMORY[0x1D82635B8](v21, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  }

  v11(v8, v4);
  strcpy((char *)v41, "ImageHandling");
  v41[7] = -4864;
  v42 = "Lazy input rotation";
  v43 = 19;
  v44 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  sub_1D47C12D0((uint64_t)v41, 0);
  v22 = a1[3];
  v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  v24 = v45;
  v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(v22, v23);
  if (v24)
  {
    swift_release();
  }
  else
  {
    v26 = (void *)v25;
    v27 = a1[3];
    v28 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v27);
    v29 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8);
    v30 = v26;
    v31 = v29(v27, v28);
    v32 = sub_1D471B28C(v31);

    v33 = v32;
    sub_1D47C0B30();
    *(_QWORD *)(a2 + 24) = &type metadata for PixelImage;
    *(_QWORD *)(a2 + 32) = &off_1E97FF320;
    swift_release();

    *(_QWORD *)a2 = v33;
    *(_DWORD *)(a2 + 8) = 1;
  }
}

void sub_1D47C06E8(_QWORD *a1@<X0>, double a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  double v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  _WORD v25[8];
  const char *v26;
  uint64_t v27;
  char v28;

  strcpy((char *)v25, "ImageHandling");
  v25[7] = -4864;
  v26 = "Lazy input resize";
  v27 = 17;
  v28 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  sub_1D47C12D0((uint64_t)v25, 0);
  if ((a3 & 1) != 0)
    goto LABEL_8;
  v9 = a2;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = (*(double (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
  v16 = v15 >= v12 ? v12 : v15;
  if (v16 <= v9)
  {
LABEL_8:
    sub_1D46AAF28((uint64_t)a1, a4);
  }
  else
  {
    v17 = a1[3];
    v18 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v17);
    v19 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18);
    if (!v4)
    {
      v20 = v19;
      v21 = (void *)sub_1D470E2DC(v9);

      v22 = v21;
      sub_1D47C0B30();
      v23 = a1[3];
      v24 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v23);
      LODWORD(v20) = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
      *(_QWORD *)(a4 + 24) = &type metadata for PixelImage;
      *(_QWORD *)(a4 + 32) = &off_1E97FF320;
      swift_release();

      *(_QWORD *)a4 = v22;
      *(_DWORD *)(a4 + 8) = (_DWORD)v20;
      return;
    }
  }
  swift_release();
}

uint64_t sub_1D47C08EC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();

  sub_1D47C0AF0(v0 + 80);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ImageContentLazy()
{
  return objc_opt_self();
}

uint64_t sub_1D47C0950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;

  sub_1D47C0040((uint64_t)v4);
  v0 = v5;
  v1 = v6;
  __swift_project_boxed_opaque_existential_1(v4, v5);
  v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2;
}

double sub_1D47C09B8()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;

  sub_1D47C0040((uint64_t)v4);
  v0 = v5;
  v1 = v6;
  __swift_project_boxed_opaque_existential_1(v4, v5);
  v2 = (*(double (**)(uint64_t, uint64_t))(v1 + 16))(v0, v1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2;
}

uint64_t sub_1D47C0A30()
{
  return sub_1D47C01E8();
}

uint64_t sub_1D47C0A50@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;

  v5 = *v2;
  sub_1D47C029C((uint64_t)sub_1D47C03CC, 0);
  a2[3] = type metadata accessor for ImageContentLazy();
  a2[4] = a1;
  *a2 = v5;
  return swift_retain();
}

uint64_t sub_1D47C0AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D47C0AF0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D920);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D47C0B30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  double v15;
  _QWORD *v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v25;
  unint64_t v26;
  double *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  NSObject *v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44[3];
  uint64_t v45;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D0B0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D492234C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D4922370();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v0 + OBJC_IVAR____TtC18VisualIntelligence19DurationMeasurement_timestamp;
  sub_1D4920F90();
  v15 = v14 * -1000.0;
  v16 = &unk_1ED98D000;
  if (v14 * -1000.0 <= 0.0)
  {
    sub_1D470C76C((uint64_t)v12);
    swift_retain_n();
    v28 = sub_1D4922358();
    v29 = sub_1D492291C();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v43 = v6;
      v31 = v30;
      v40 = swift_slowAlloc();
      v44[0] = v40;
      *(_DWORD *)v31 = 134218242;
      v45 = *(_QWORD *)&v15;
      v41 = (_QWORD *)v5;
      sub_1D4922A78();
      *(_WORD *)(v31 + 12) = 2080;
      v39 = (v31 + 14);
      v32 = sub_1D4922B98();
      v42 = v8;
      v45 = sub_1D47F0250(v32, v33, v44);
      v5 = (uint64_t)v41;
      sub_1D4922A78();
      swift_release_n();
      v8 = v42;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D467C000, v28, v29, "Invalid duration value %f of %s", (uint8_t *)v31, 0x16u);
      v39 = v28;
      v34 = v40;
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v34, -1, -1);
      v35 = v31;
      v6 = v43;
      MEMORY[0x1D82635B8](v35, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_14;
  }
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_14;
  v18 = Strong;
  v19 = sub_1D4922B98();
  v21 = v20;
  sub_1D4920F9C();
  v23 = v22 * 1000.0;
  if ((~COERCE__INT64(v22 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v23 <= -1.0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v23 >= 1.84467441e19)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v43 = v6;
  v41 = (_QWORD *)(v18 + 16);
  swift_beginAccess();
  v16 = *(_QWORD **)(v18 + 16);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v18 + 16) = v16;
  v42 = v8;
  v13 = v19;
  v6 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_20:
    v16 = sub_1D48A83D8(0, v16[2] + 1, 1, v16);
    *v41 = v16;
  }
  v26 = v16[2];
  v25 = v16[3];
  if (v26 >= v25 >> 1)
  {
    v16 = sub_1D48A83D8((_QWORD *)(v25 > 1), v26 + 1, 1, v16);
    *v41 = v16;
  }
  v16[2] = v26 + 1;
  v27 = (double *)&v16[4 * v26];
  *((_QWORD *)v27 + 4) = v13;
  *((_QWORD *)v27 + 5) = v21;
  v27[6] = v15;
  *((_QWORD *)v27 + 7) = (unint64_t)v23;
  swift_endAccess();
  swift_release();
  swift_bridgeObjectRelease();
  v5 = v6;
  v8 = v42;
  v6 = v43;
LABEL_14:
  v36 = *(_QWORD *)(v1 + 16);
  sub_1D49229F4();
  sub_1D47C15F0(v36 + OBJC_IVAR____TtC18VisualIntelligence13SignpostEvent_signpostID, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_1D47B10E0((uint64_t)v4);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  sub_1D4922334();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1D47C1000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC18VisualIntelligence19DurationMeasurement_timestamp;
  v2 = sub_1D4920FB4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1D47C107C()
{
  return type metadata accessor for DurationMeasurement();
}

uint64_t type metadata accessor for DurationMeasurement()
{
  uint64_t result;

  result = qword_1ED98CD28;
  if (!qword_1ED98CD28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D47C10C0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D4920FB4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t initializeWithCopy for MeasurementDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MeasurementDescription(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for MeasurementDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MeasurementDescription(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MeasurementDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MeasurementDescription()
{
  return &type metadata for MeasurementDescription;
}

uint64_t sub_1D47C12D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  os_unfair_lock_s *v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;

  v36 = a2;
  v4 = sub_1D4920FB4();
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D0B0);
  MEMORY[0x1E0C80A78](v6);
  v31 = (uint64_t)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1D492234C();
  v8 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v29 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_weakInit();
  v11 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v32 = v2;
  v12 = v2 + OBJC_IVAR____TtC18VisualIntelligence19DurationMeasurement_measurementDescription;
  v13 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v12 = *(_OWORD *)a1;
  *(_OWORD *)(v12 + 16) = v13;
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(a1 + 32);
  type metadata accessor for SignpostEvent();
  v14 = swift_allocObject();
  v15 = qword_1ED98D988;
  swift_bridgeObjectRetain_n();
  if (v15 != -1)
    swift_once();
  v16 = (uint64_t *)(qword_1ED98D978 + 16);
  v17 = (os_unfair_lock_s *)(qword_1ED98D978 + 24);
  swift_retain();
  os_unfair_lock_lock(v17);
  sub_1D47A2628(v16, v11, v10, &v37);
  os_unfair_lock_unlock(v17);
  v18 = v37;
  swift_release();
  sub_1D46CCAB0(a1);
  *(_QWORD *)(v14 + OBJC_IVAR____TtC18VisualIntelligence13SignpostEvent_osLog) = v18;
  v19 = v14 + OBJC_IVAR____TtC18VisualIntelligence13SignpostEvent_signpostID;
  v20 = v18;
  sub_1D4922340();
  v21 = v30;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v19, 0, 1, v30);
  v22 = v32;
  *(_QWORD *)(v32 + 16) = v14;
  swift_retain();
  sub_1D4922A00();
  v23 = v31;
  sub_1D47C15F0(v14 + OBJC_IVAR____TtC18VisualIntelligence13SignpostEvent_signpostID, v31);
  v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v23, 1, v21);
  v25 = v23;
  if (v24 == 1)
  {
    sub_1D47B10E0(v23);
  }
  else
  {
    v26 = v29;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v29, v25, v21);
    sub_1D4922334();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v26, v21);
  }
  sub_1D46CCAB0(a1);
  swift_release();
  v27 = v33;
  sub_1D4920FA8();
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v22 + OBJC_IVAR____TtC18VisualIntelligence19DurationMeasurement_timestamp, v27, v35);
  swift_weakAssign();
  return v22;
}

uint64_t sub_1D47C15F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D0B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D47C1638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD v20[2];
  uint64_t v21[2];

  v21[1] = *MEMORY[0x1E0C80C00];
  v1 = sub_1D4922370();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_latestTaxonomyIdentifier);
  sub_1D492261C();

  v21[0] = 0;
  v6 = objc_allocWithZone(MEMORY[0x1E0D75250]);
  v7 = (void *)sub_1D49225F8();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithIdentifier_error_, v7, v21);

  v9 = (void *)v21[0];
  *(_QWORD *)(v0 + 16) = v8;
  if (v9)
  {
    v10 = v9;
    swift_release();
    sub_1D470C76C((uint64_t)v4);
    v11 = v10;
    v12 = sub_1D4922358();
    v13 = sub_1D492291C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v20[0] = v1;
      v16 = v15;
      v21[0] = v15;
      *(_DWORD *)v14 = 136446210;
      v17 = sub_1D4715DCC();
      v20[1] = sub_1D47F0250(v17, v18, v21);
      sub_1D4922A78();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D467C000, v12, v13, "Failed to initialize VISceneTaxonomy: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v16, -1, -1);
      MEMORY[0x1D82635B8](v14, -1, -1);

      (*(void (**)(char *, _QWORD))(v2 + 8))(v4, v20[0]);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }

    return 0;
  }
  return v0;
}

uint64_t sub_1D47C18D0()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VISceneTaxonomy()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for MLModelRole(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MLModelRole(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D47C19F0 + 4 * byte_1D4933345[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D47C1A24 + 4 * asc_1D4933340[v4]))();
}

uint64_t sub_1D47C1A24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D47C1A2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D47C1A34);
  return result;
}

uint64_t sub_1D47C1A40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D47C1A48);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D47C1A4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D47C1A54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MLModelRole()
{
  return &type metadata for MLModelRole;
}

unint64_t sub_1D47C1A74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFEAB868;
  if (!qword_1EFEAB868)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFEAB870);
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EFEAB868);
  }
  return result;
}

uint64_t sub_1D47C1AC0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D47C1B00 + 4 * byte_1D493334A[a1]))(0x65447463656A626FLL, 0xEF6E6F6974636574);
}

unint64_t sub_1D47C1B00()
{
  return 0xD000000000000010;
}

uint64_t sub_1D47C1B1C()
{
  return 0x64656966696E75;
}

uint64_t sub_1D47C1B34()
{
  return 0x6F7765727574616ELL;
}

uint64_t sub_1D47C1B54()
{
  return 0x6C657261707061;
}

uint64_t sub_1D47C1B6C()
{
  return 1685024614;
}

uint64_t sub_1D47C1B7C()
{
  return 0x626D79536E676973;
}

void sub_1D47C1B98(char *a1)
{
  sub_1D489B230(*a1);
}

uint64_t sub_1D47C1BA4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D47C1C6C();
  *a1 = result;
  return result;
}

uint64_t sub_1D47C1BD0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1D47C1AC0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1D47C1BF8()
{
  char *v0;

  sub_1D48BE36C(0, *v0);
}

void sub_1D47C1C04(uint64_t a1)
{
  char *v1;

  sub_1D48BE1A8(a1, *v1);
}

void sub_1D47C1C0C(uint64_t a1)
{
  char *v1;

  sub_1D48BE36C(a1, *v1);
}

void sub_1D47C1C14(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E97FB788;
}

unint64_t sub_1D47C1C28()
{
  unint64_t result;

  result = qword_1ED98CC00;
  if (!qword_1ED98CC00)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4933434, &type metadata for MLModelRole);
    atomic_store(result, (unint64_t *)&qword_1ED98CC00);
  }
  return result;
}

uint64_t sub_1D47C1C6C()
{
  unint64_t v0;

  v0 = sub_1D4922CA0();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

__n128 __swift_memcpy36_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for RefinedRegion(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 36))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RefinedRegion(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 36) = v3;
  return result;
}

ValueMetadata *type metadata accessor for RefinedRegion()
{
  return &type metadata for RefinedRegion;
}

uint64_t sub_1D47C1D2C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t _s5ErrorOwxx(uint64_t a1)
{
  return sub_1D47C1D54(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1D47C1D54(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1D47C1D2C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s5ErrorOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1D47C1D2C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1D47C1D54(v6, v7, v8);
  return a1;
}

uint64_t _s5ErrorOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1D47C1D54(v4, v5, v6);
  return a1;
}

uint64_t _s5ErrorOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s5ErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1D47C1ED8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1D47C1EF0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *_s5ErrorOMa()
{
  return &_s5ErrorON;
}

unint64_t sub_1D47C1F1C(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v3;
  unint64_t v5;

  if (a3)
  {
    if (a3 != 1)
      __asm { BR              X9 }
    sub_1D4922B80();
    swift_bridgeObjectRelease();
    v3 = 0xD000000000000022;
  }
  else
  {
    sub_1D4922B80();
    swift_bridgeObjectRelease();
    v3 = 0xD000000000000017;
  }
  v5 = v3;
  sub_1D492270C();
  return v5;
}

void sub_1D47C2004()
{
  JUMPOUT(0x1D47C1FC8);
}

void sub_1D47C2024()
{
  JUMPOUT(0x1D47C1FC8);
}

void sub_1D47C2048()
{
  JUMPOUT(0x1D47C1FC8);
}

unint64_t sub_1D47C2068()
{
  uint64_t v0;

  return sub_1D47C1F1C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_1D47C2074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _QWORD v5[2];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  strcpy((char *)v5, "NetworkError.");
  sub_1D47C1F1C(v1, v2, v3);
  sub_1D492270C();
  swift_bridgeObjectRelease();
  return v5[0];
}

uint64_t sub_1D47C20DC()
{
  uint64_t v0;

  sub_1D47C2160(v0 + OBJC_IVAR____TtC18VisualIntelligence23RegionGroupingProcessor_config);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D47C211C()
{
  return type metadata accessor for RegionGroupingProcessor();
}

uint64_t type metadata accessor for RegionGroupingProcessor()
{
  uint64_t result;

  result = qword_1ED98DC78;
  if (!qword_1ED98DC78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D47C2160(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D47C219C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  void *v18;
  uint8_t *v19;
  uint8_t *v20;
  void (*v21)(char *, uint64_t);
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v26;
  uint64_t inited;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  id v44;
  _BYTE *v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char v52;
  double v53;
  double v54;
  double v55;
  double v56;
  float v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  id v66;
  double v67;
  id v68;
  void *v69;
  id v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  id v75;
  void (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  CGFloat v91;
  CGFloat v92;
  CGFloat v93;
  CGFloat v94;
  float v95;
  uint64_t v96;
  CGRect v97;
  int v98;
  char v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98CE10);
  MEMORY[0x1E0C80A78](v5);
  v86 = (uint64_t)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
  v84 = *(_QWORD *)(v85 - 8);
  MEMORY[0x1E0C80A78](v85);
  v82 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D4922370();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v80 = (uint64_t)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v81 = (uint64_t)&v77 - v13;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v77 - v14;
  v87 = v1;
  v83 = v1 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_refineRegionConfig;
  v88 = *(unsigned int *)(v1 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_refineRegionConfig);
  sub_1D470C76C((uint64_t)&v77 - v14);
  v16 = sub_1D4922358();
  v17 = sub_1D4922910();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = a1;
    v19 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v19 = 67109120;
    LODWORD(v97.origin.x) = v88;
    sub_1D4922A78();
    _os_log_impl(&dword_1D467C000, v16, v17, "RefinedRegion version: %u", v19, 8u);
    v20 = v19;
    a1 = v18;
    v3 = v2;
    MEMORY[0x1D82635B8](v20, -1, -1);
  }

  v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21(v15, v8);
  objc_msgSend(a1, sel_regionOfInterest);
  v104.origin.x = 0.0;
  v104.origin.y = 0.0;
  v104.size.width = 1.0;
  v104.size.height = 1.0;
  v101 = CGRectIntersection(v100, v104);
  x = v101.origin.x;
  y = v101.origin.y;
  width = v101.size.width;
  height = v101.size.height;
  v26 = sub_1D46F2DB4(0, qword_1ED98AF88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB878);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D49273C0;
  *(_QWORD *)(inited + 32) = sub_1D492261C();
  *(_QWORD *)(inited + 40) = v28;
  objc_msgSend(a1, sel_imageType);
  v29 = sub_1D49228F8();
  *(_QWORD *)(inited + 72) = sub_1D46F2DB4(0, (unint64_t *)&qword_1ED98D298);
  *(_QWORD *)(inited + 48) = v29;
  sub_1D47C339C(inited);
  v90 = sub_1D47C2B20();
  v89 = v3;
  if (!v3)
  {
    v77 = (void (*)(uint64_t, uint64_t))v21;
    v30 = v87;
    v31 = *(_QWORD *)(v87 + 88);
    swift_retain();
    v32 = objc_msgSend(a1, sel_image);
    swift_getObjectType();
    sub_1D47BEC7C((uint64_t *)&v97);
    swift_unknownObjectRelease();
    v91 = x;
    v92 = y;
    v93 = width;
    v94 = height;
    v33 = *(_QWORD *)(*(_QWORD *)(v31 + 16) + 24);
    swift_retain();
    v79 = a1;
    v34 = sub_1D48456DC((uint64_t)&v97, &v91, v33, (uint64_t)objc_msgSend(a1, sel_preferredMetalDevice), 0);
    v78 = v35;
    v37 = v36;
    v39 = v38;
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v97);
    v91 = *(double *)(v30 + 24);
    v40 = type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig();
    v41 = v86;
    sub_1D4698E38(v83 + *(int *)(v40 + 28), v86);
    v42 = v85;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v41, 1, v85) == 1)
    {
      v43 = v82;
      *v82 = 0;
      *((_DWORD *)v43 + 4) = 0;
      *(_QWORD *)(v43 + 4) = 0;
      v43[12] = 0;
      swift_bridgeObjectRetain();
      v44 = v90;
      sub_1D4922010();
      v45 = &v43[*(int *)(v42 + 40)];
      v46 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v45, 1, 1, v46);
      sub_1D47C2C10(v41);
    }
    else
    {
      v43 = v82;
      sub_1D4698E80(v41, (uint64_t)v82);
      swift_bridgeObjectRetain();
      v47 = v90;
    }
    v48 = v79;
    v49 = v78;
    type metadata accessor for TriggeringModelProcessor();
    v50 = v39;
    v51 = v90;
    sub_1D48461E8(v37, v50, v34, (uint64_t *)&v91, v90, (uint64_t)v43, &v97.origin.x);

    sub_1D4697DE0((uint64_t)v43, type metadata accessor for Argos_Protos_Queryflow_RefineConfig);
    swift_bridgeObjectRelease();
    if ((v99 & 1) != 0)
    {
      v52 = sub_1D47C2C50(v34, v90);
      sub_1D46DAD5C(v49, v37);
      swift_bridgeObjectRelease();
      if ((v52 & 1) == 0)
      {
        v71 = v80;
        sub_1D470C76C(v80);
        v72 = sub_1D4922358();
        v73 = sub_1D4922910();
        if (os_log_type_enabled(v72, v73))
        {
          v74 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v74 = 0;
          _os_log_impl(&dword_1D467C000, v72, v73, "No detected refined region.", v74, 2u);
          MEMORY[0x1D82635B8](v74, -1, -1);
        }

        v77(v71, v8);
        v75 = objc_allocWithZone((Class)VIRefineRegionResult);
        sub_1D46F2DB4(0, &qword_1EFEAB880);
        v69 = (void *)sub_1D4922814();
        v70 = objc_msgSend(v75, sel_initWithRefinedRegions_version_, v69, v88);
        goto LABEL_17;
      }
      objc_msgSend(v48, sel_regionOfInterest);
      v105.origin.x = 0.0;
      v105.origin.y = 0.0;
      v105.size.width = 1.0;
      v105.size.height = 1.0;
      v103 = CGRectIntersection(v102, v105);
      v53 = v103.origin.x;
      v54 = v103.origin.y;
      v55 = v103.size.width;
      v56 = v103.size.height;
      v97 = v103;
      *(float *)&v98 = 1.0;
      v57 = 1.0;
      v99 = 0;
    }
    else
    {
      v57 = *(float *)&v98;
      v55 = v97.size.width;
      v56 = v97.size.height;
      v53 = v97.origin.x;
      v54 = v97.origin.y;
      sub_1D46DAD5C(v49, v37);
      swift_bridgeObjectRelease();
    }
    v58 = v81;
    sub_1D470C76C(v81);
    v59 = sub_1D4922358();
    v60 = sub_1D4922910();
    if (os_log_type_enabled(v59, v60))
    {
      v61 = (uint8_t *)swift_slowAlloc();
      v62 = swift_slowAlloc();
      v96 = v62;
      *(_DWORD *)v61 = 136315138;
      v91 = v53;
      v92 = v54;
      v93 = v55;
      v94 = v56;
      v95 = v57;
      v63 = sub_1D4922688();
      v91 = COERCE_DOUBLE(sub_1D47F0250(v63, v64, &v96));
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D467C000, v59, v60, "Refined region: %s", v61, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v62, -1, -1);
      MEMORY[0x1D82635B8](v61, -1, -1);
    }

    v77(v58, v8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98ECE8);
    v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = xmmword_1D4929910;
    v66 = objc_allocWithZone((Class)VIRefinedRegion);
    *(float *)&v67 = v57;
    *(_QWORD *)(v65 + 32) = objc_msgSend(v66, sel_initWithRegionOfInterest_confidence_, v53, v54, v55, v56, v67);
    v91 = *(double *)&v65;
    sub_1D4922838();
    v68 = objc_allocWithZone((Class)VIRefineRegionResult);
    sub_1D46F2DB4(0, &qword_1EFEAB880);
    v69 = (void *)sub_1D4922814();
    swift_bridgeObjectRelease();
    v70 = objc_msgSend(v68, sel_initWithRefinedRegions_version_, v69, v88);
LABEL_17:
    v26 = (uint64_t)v70;

  }
  return v26;
}

id sub_1D47C2B20()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = (void *)sub_1D4922538();
  swift_bridgeObjectRelease();
  v5[0] = 0;
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_contextWithDictionary_error_, v0, v5);

  if (v1)
  {
    v2 = v5[0];
  }
  else
  {
    v3 = v5[0];
    sub_1D4920E64();

    swift_willThrow();
  }
  return v1;
}

uint64_t sub_1D47C2C10(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98CE10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D47C2C50(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  float v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  float v66;
  uint64_t v67[6];

  v5 = sub_1D4922370();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v45 - v10;
  v12 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v54 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a2, sel_imageType) != (id)1)
  {
    sub_1D470C76C((uint64_t)v9);
    v41 = sub_1D4922358();
    v42 = sub_1D4922910();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_1D467C000, v41, v42, "Do not fallback for non-screenshot images", v43, 2u);
      MEMORY[0x1D82635B8](v43, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    return 0;
  }
  v51 = *(uint8_t **)(a1 + 16);
  if (!v51)
    return 0;
  v49 = v11;
  v46 = v6;
  v47 = v5;
  v50 = v2;
  v56 = v2 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_refineRegionConfig;
  v53 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  v52 = *(_QWORD *)(v13 + 72);
  v48 = a1;
  swift_bridgeObjectRetain();
  v15 = 0;
  while (1)
  {
    v55 = v15;
    v16 = v53 + v52 * (_QWORD)v15;
    v17 = v54;
    sub_1D46A8550(v16, v54);
    v18 = *(_QWORD *)(v17 + 48);
    swift_bridgeObjectRetain();
    sub_1D4697DE0(v17, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
      break;
LABEL_4:
    v15 = v55 + 1;
    swift_bridgeObjectRelease();
    if (v15 == v51)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  v20 = 0;
  v21 = *(_QWORD *)(v50 + 24);
  while (1)
  {
    v22 = *(_QWORD *)(v18 + v20 + 32);
    v23 = *(_QWORD *)(v18 + v20 + 40);
    v24 = *(_QWORD *)(v18 + v20 + 48);
    v25 = *(_QWORD *)(v18 + v20 + 56);
    v26 = *(_QWORD *)(v18 + v20 + 64);
    v28 = *(_QWORD *)(v18 + v20 + 72);
    v27 = *(_QWORD *)(v18 + v20 + 80);
    v29 = *(_QWORD *)(v18 + v20 + 88);
    v30 = *(_QWORD *)(v18 + v20 + 96);
    v31 = *(float *)(v18 + v20 + 104);
    v57 = v28;
    v58 = v27;
    v59 = v29;
    v60 = v30;
    v67[0] = 0;
    v67[1] = 0xE000000000000000;
    v67[2] = 0x34393538303251;
    v67[3] = 0xE700000000000000;
    v67[4] = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((sub_1D4706170(&v57, v67) & 1) == 0 && *(float *)(v56 + 4) < v31)
      break;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 += 80;
    if (!--v19)
      goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v32 = (uint64_t)v49;
  sub_1D470C76C((uint64_t)v49);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33 = sub_1D4922358();
  v34 = sub_1D4922910();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v56 = v36;
    *(_DWORD *)v35 = 136315138;
    v67[0] = v36;
    v55 = v35 + 4;
    v57 = v22;
    v58 = v23;
    v59 = v24;
    v60 = v25;
    v61 = v26;
    v62 = v28;
    v63 = v27;
    v64 = v29;
    v65 = v30;
    v66 = v31;
    v37 = sub_1D47FA548();
    v57 = sub_1D47F0250(v37, v38, v67);
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D467C000, v33, v34, "Satisfied detector result %s", v35, 0xCu);
    v39 = 1;
    v40 = v56;
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v40, -1, -1);
    MEMORY[0x1D82635B8](v35, -1, -1);

    (*(void (**)(char *, uint64_t))(v46 + 8))(v49, v47);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v32, v47);
    return 1;
  }
  return v39;
}

void sub_1D47C317C(uint64_t a1)
{
  sub_1D47C3194(a1, &qword_1ED98F370);
}

void sub_1D47C3188(uint64_t a1)
{
  sub_1D47C3194(a1, &qword_1ED98F378);
}

void sub_1D47C3194(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (*(_QWORD *)(a1 + 16)
    && (__swift_instantiateConcreteTypeFromMangledName(a2),
        v3 = (_QWORD *)sub_1D4922C7C(),
        (v4 = *(_QWORD *)(a1 + 16)) != 0))
  {
    swift_retain();
    v5 = (_QWORD *)(a1 + 40);
    while (1)
    {
      v6 = *((_BYTE *)v5 - 8);
      v7 = *v5;
      swift_bridgeObjectRetain();
      sub_1D47CA5D8(v6);
      if ((v9 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
      *(_BYTE *)(v3[6] + v8) = v6;
      *(_QWORD *)(v3[7] + 8 * v8) = v7;
      v10 = v3[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v3[2] = v12;
      v5 += 2;
      if (!--v4)
      {
        swift_release();
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

void sub_1D47C3290(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (*(_QWORD *)(a1 + 16)
    && (__swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB8C8),
        v2 = (_QWORD *)sub_1D4922C7C(),
        (v3 = *(_QWORD *)(a1 + 16)) != 0))
  {
    swift_retain();
    v4 = (_QWORD *)(a1 + 48);
    while (1)
    {
      v5 = *((_BYTE *)v4 - 16);
      v7 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1D47CA5D8(v5);
      if ((v9 & 1) != 0)
        break;
      *(_QWORD *)((char *)v2 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
      *(_BYTE *)(v2[6] + v8) = v5;
      v10 = (_QWORD *)(v2[7] + 16 * v8);
      *v10 = v7;
      v10[1] = v6;
      v11 = v2[2];
      v12 = __OFADD__(v11, 1);
      v13 = v11 + 1;
      if (v12)
        goto LABEL_10;
      v4 += 3;
      v2[2] = v13;
      if (!--v3)
      {
        swift_release();
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1D47C339C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98F400);
  v2 = sub_1D4922C7C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D469C5EC(v6, (uint64_t)&v15, &qword_1EFEAB908);
    v7 = v15;
    v8 = v16;
    result = sub_1D47CA4DC(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1D46FADFC(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C34D0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  _BYTE v13[8];
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98F3F8);
  v2 = sub_1D4922C7C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D469C5EC(v6, (uint64_t)v13, &qword_1ED98F3E8);
    v7 = v13[0];
    result = sub_1D47CABBC(v13[0], (void (*)(uint64_t))sub_1D46F9644, sub_1D47CAF00);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v7;
    result = (unint64_t)sub_1D46FADFC(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C361C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2F8);
  v2 = (_QWORD *)sub_1D4922C7C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_1D47CA4DC(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C3734(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2F0);
  v2 = (_QWORD *)sub_1D4922C7C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1D47CA4DC(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C3854(uint64_t a1)
{
  return sub_1D47C5B28(a1, &qword_1EFEAB930, &qword_1EFEAB938);
}

unint64_t sub_1D47C3868(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  unint64_t result;
  char v19;
  unint64_t v20;
  CGFloat *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD v27[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB8E0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (double *)((char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB7A8);
  v6 = sub_1D4922C7C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v27[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D469C5EC(v12, (uint64_t)v5, &qword_1EFEAB8E0);
    v14 = *v5;
    v15 = v5[1];
    v16 = v5[2];
    v17 = v5[3];
    result = sub_1D47CA748(*v5, v15, v16, v17);
    if ((v19 & 1) != 0)
      break;
    v20 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v21 = (CGFloat *)(v7[6] + 32 * result);
    *v21 = v14;
    v21[1] = v15;
    v21[2] = v16;
    v21[3] = v17;
    v22 = v7[7];
    v23 = type metadata accessor for VisualUnderstanding.ImageRegion();
    result = sub_1D469C630(v9, v22 + *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72) * v20, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v24 = v7[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_11;
    v7[2] = v26;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C3A2C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EBC0);
  v2 = (_QWORD *)sub_1D4922C7C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_1D47CA4DC(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C3B44(uint64_t a1)
{
  return sub_1D47C4070(a1, &qword_1ED98D6D0, &qword_1EFEAB8B0, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels);
}

unint64_t sub_1D47C3B60(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EBB8);
  v2 = (_QWORD *)sub_1D4922C7C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_DWORD *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1D47CA4DC(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_DWORD *)(v2[7] + 4 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 6;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C3C70(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EBB0);
  v2 = (_QWORD *)sub_1D4922C7C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1D47CA4DC(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C3D88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CD08);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2E8);
  v6 = sub_1D4922C7C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D469C5EC(v12, (uint64_t)v5, &qword_1ED98CD08);
    v14 = *v5;
    result = sub_1D47CABBC(*v5, (void (*)(uint64_t))sub_1D469AFE8, sub_1D47CB26C);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v7[6] + result) = v14;
    v18 = v7[7];
    v19 = sub_1D4920F18();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v9, v19);
    v20 = v7[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C3F34(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB8C0);
  v2 = (_QWORD *)sub_1D4922C7C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 56);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 3);
    v6 = *((_QWORD *)v4 - 2);
    v7 = *((_QWORD *)v4 - 1);
    v8 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1D47CA4DC(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = v2[7] + 16 * result;
    *(_QWORD *)v12 = v7;
    *(_BYTE *)(v12 + 8) = v8;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v2[2] = v15;
    v4 += 32;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C4054(uint64_t a1)
{
  return sub_1D47C4070(a1, &qword_1ED98EA50, &qword_1EFEAB8A0, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
}

unint64_t sub_1D47C4070(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t result;
  char v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t *v31;

  v31 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (_QWORD *)((char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v12 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = sub_1D4922C7C();
  v12 = (_QWORD *)v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  v14 = (uint64_t)v10 + *(int *)(v7 + 48);
  v29[1] = a1;
  v30 = v14;
  v15 = v11 + 64;
  v16 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v17 = *(_QWORD *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_1D469C5EC(v16, (uint64_t)v10, v31);
    v18 = *v10;
    v19 = v10[1];
    result = sub_1D47CA4DC(*v10, v19);
    if ((v21 & 1) != 0)
      break;
    v22 = result;
    *(_QWORD *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v23 = (uint64_t *)(v12[6] + 16 * result);
    *v23 = v18;
    v23[1] = v19;
    v24 = v12[7];
    v25 = a4(0);
    result = sub_1D469C630(v30, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v22, a4);
    v26 = v12[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_11;
    v12[2] = v28;
    v16 += v17;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C4208(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  double *v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  unint64_t result;
  char v10;
  CGFloat *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  __int128 v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB7C0);
  v2 = (_QWORD *)sub_1D4922C7C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (double *)(a1 + 64);
  while (1)
  {
    v5 = *(v4 - 4);
    v6 = *(v4 - 3);
    v7 = *(v4 - 2);
    v8 = *(v4 - 1);
    v15 = *(_OWORD *)v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1D47CA748(v5, v6, v7, v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (CGFloat *)(v2[6] + 32 * result);
    *v11 = v5;
    v11[1] = v6;
    v11[2] = v7;
    v11[3] = v8;
    *(_OWORD *)(v2[7] + 16 * result) = v15;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 6;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C4344(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAB50);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB740);
  v6 = sub_1D4922C7C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D469C5EC(v12, (uint64_t)v5, &qword_1EFEAAB50);
    result = sub_1D47CA540((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1D4921008();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = (_QWORD *)(v7[7] + 16 * v16);
    v20 = *((_QWORD *)v9 + 1);
    *v19 = *(_QWORD *)v9;
    v19[1] = v20;
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C44E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAB60);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB8D0);
  v6 = sub_1D4922C7C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D469C5EC(v12, (uint64_t)v5, &qword_1EFEAAB60);
    result = sub_1D47CA540((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1D4921008();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C4674(uint64_t a1)
{
  return sub_1D47C4070(a1, &qword_1EFEAB8E8, &qword_1EFEAB748, type metadata accessor for LandmarkSignals);
}

unint64_t sub_1D47C4690(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D308);
  v2 = (_QWORD *)sub_1D4922C7C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1D47CA4DC(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C47A8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB758);
  v2 = (_QWORD *)sub_1D4922C7C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1D47CA4DC(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C48B8(uint64_t a1)
{
  return sub_1D47C4070(a1, &qword_1ED98EA48, &qword_1EFEAB898, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
}

unint64_t sub_1D47C48D4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98AED8);
  v2 = (_QWORD *)sub_1D4922C7C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1D47CA4DC(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_BYTE *)(v2[7] + result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C49E4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB8A8);
  v2 = (_QWORD *)sub_1D4922C7C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_DWORD *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1D47CA4DC(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_DWORD *)(v2[7] + 4 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 6;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C4AF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CC08);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAE8);
  v6 = sub_1D4922C7C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D469C5EC(v12, (uint64_t)v5, &qword_1ED98CC08);
    v14 = *v5;
    result = sub_1D47CA850(*v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v7[6] + result) = v14;
    v18 = v7[7];
    v19 = sub_1D4920F18();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v9, v19);
    v20 = v7[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C4C8C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2D8);
  v2 = (_QWORD *)sub_1D4922C7C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 24);
    v7 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v8 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1D47CA850(v5);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    v11 = v2[7] + 24 * result;
    *(_QWORD *)v11 = v7;
    *(_QWORD *)(v11 + 8) = v6;
    *(_BYTE *)(v11 + 16) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4 += 32;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C4DB4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CB10);
  v2 = sub_1D4922C7C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D469C5EC(v6, (uint64_t)v15, &qword_1ED98D2A8);
    result = sub_1D47CA918((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1D46FADFC(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C4EF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D820);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB78);
  v6 = sub_1D4922C7C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D469C5EC(v12, (uint64_t)v5, &qword_1ED98D820);
    v14 = *v5;
    result = sub_1D47CABBC(*v5, (void (*)(uint64_t))sub_1D46F8BC8, sub_1D47CB604);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v7[6] + result) = v14;
    v18 = v7[7];
    v19 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig(0);
    result = sub_1D469C630(v9, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
    v20 = v7[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C509C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  char v14;
  CGFloat *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  __int128 v20;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EBA8);
  v2 = (_QWORD *)sub_1D4922C7C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = a1 + 48;
  while (1)
  {
    v5 = *(double *)(v4 - 16);
    v6 = *(double *)(v4 - 8);
    v7 = *(double *)v4;
    v8 = *(double *)(v4 + 8);
    v9 = *(_QWORD *)(v4 + 16);
    v10 = *(_QWORD *)(v4 + 24);
    v11 = *(_QWORD *)(v4 + 32);
    v12 = *(_QWORD *)(v4 + 40);
    v20 = *(_OWORD *)(v4 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1D47CA748(v5, v6, v7, v8);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v15 = (CGFloat *)(v2[6] + 32 * result);
    *v15 = v5;
    v15[1] = v6;
    v15[2] = v7;
    v15[3] = v8;
    v16 = v2[7] + 48 * result;
    *(_QWORD *)v16 = v9;
    *(_QWORD *)(v16 + 8) = v10;
    *(_QWORD *)(v16 + 16) = v11;
    *(_QWORD *)(v16 + 24) = v12;
    *(_OWORD *)(v16 + 32) = v20;
    v17 = v2[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
      goto LABEL_11;
    v2[2] = v19;
    v4 += 80;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C5208(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB80);
  v2 = (_QWORD *)sub_1D4922C7C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_QWORD *)(a1 + 40);
  while (1)
  {
    v5 = *((_BYTE *)v4 - 8);
    v6 = *v4;
    result = sub_1D47CABBC(v5, (void (*)(uint64_t))sub_1D46F8BC8, sub_1D47CB604);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    *(_QWORD *)(v2[7] + 8 * result) = v6;
    v9 = v2[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      goto LABEL_11;
    v4 += 2;
    v2[2] = v11;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C5320(uint64_t a1)
{
  return sub_1D47C5C58(a1, &qword_1ED98EBA0);
}

unint64_t sub_1D47C532C(uint64_t a1)
{
  return sub_1D47C4070(a1, &qword_1ED98D148, &qword_1EFEAB8B8, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
}

unint64_t sub_1D47C5348(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  __int128 *v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  __int128 v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2D0);
  v2 = (_QWORD *)sub_1D4922C7C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (__int128 *)(a1 + 40);
  while (1)
  {
    v5 = *((unsigned __int8 *)v4 - 8);
    v11 = *v4;
    swift_unknownObjectRetain();
    result = sub_1D47CA850(v5);
    if ((v7 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    *(_OWORD *)(v2[7] + 16 * result) = v11;
    v8 = v2[2];
    v9 = __OFADD__(v8, 1);
    v10 = v8 + 1;
    if (v9)
      goto LABEL_11;
    v2[2] = v10;
    v4 = (__int128 *)((char *)v4 + 24);
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C5458(uint64_t a1)
{
  return sub_1D47C5470(a1, &qword_1EFEAB7A0);
}

unint64_t sub_1D47C5464(uint64_t a1)
{
  return sub_1D47C5470(a1, &qword_1EFEAB790);
}

unint64_t sub_1D47C5470(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D6F0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v9 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = sub_1D4922C7C();
  v9 = (_QWORD *)v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v9;
  }
  v11 = *(int *)(v4 + 48);
  v12 = v8 + 64;
  v13 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v24[1] = a1;
  v14 = a1 + v13;
  v15 = *(_QWORD *)(v5 + 72);
  swift_retain();
  while (1)
  {
    sub_1D469C5EC(v14, (uint64_t)v7, &qword_1ED98D6F0);
    result = sub_1D47CA9F4((uint64_t)v7);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = v9[6];
    v20 = sub_1D4920FD8();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v18, v7, v20);
    *(_OWORD *)(v9[7] + 16 * v18) = *(_OWORD *)&v7[v11];
    v21 = v9[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v9[2] = v23;
    v14 += v15;
    if (!--v10)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C5600(uint64_t a1)
{
  return sub_1D47C5470(a1, &qword_1EFEAB798);
}

unint64_t sub_1D47C560C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CB30);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB768);
  v6 = sub_1D4922C7C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D469C5EC(v12, (uint64_t)v5, &qword_1ED98CB30);
    result = sub_1D47CA9F4((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1D4920FD8();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C57A0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2C0);
  v2 = (_QWORD *)sub_1D4922C7C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *((unsigned __int8 *)v4 - 8);
    v6 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1D47CABBC(v5, (void (*)(uint64_t))sub_1D46F8BC8, sub_1D47CB604);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    *(_QWORD *)(v2[7] + 8 * result) = v6;
    v9 = v2[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      goto LABEL_11;
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C58C0(uint64_t a1)
{
  return sub_1D47C5470(a1, &qword_1EFEAB760);
}

unint64_t sub_1D47C58CC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2B8);
  v2 = (_QWORD *)sub_1D4922C7C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 72);
  while (1)
  {
    v5 = *(v4 - 40);
    v6 = *((_QWORD *)v4 - 4);
    v7 = *((_QWORD *)v4 - 3);
    v8 = *((_QWORD *)v4 - 2);
    v9 = *((_QWORD *)v4 - 1);
    v10 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1D47CABBC(v5, (void (*)(uint64_t))sub_1D46F8BC8, sub_1D47CB604);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    v13 = v2[7] + 40 * result;
    *(_QWORD *)v13 = v6;
    *(_QWORD *)(v13 + 8) = v7;
    *(_QWORD *)(v13 + 16) = v8;
    *(_QWORD *)(v13 + 24) = v9;
    *(_BYTE *)(v13 + 32) = v10;
    v14 = v2[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v2[2] = v16;
    v4 += 48;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C5A14(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB90);
  v2 = (_QWORD *)sub_1D4922C7C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *((unsigned __int8 *)v4 - 8);
    v6 = *v4;
    swift_retain();
    result = sub_1D47CA850(v5);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    *(_QWORD *)(v2[7] + 8 * result) = v6;
    v9 = v2[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      goto LABEL_11;
    v4 += 2;
    v2[2] = v11;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C5B14(uint64_t a1)
{
  return sub_1D47C5B28(a1, &qword_1EFEAB910, &qword_1EFEAB918);
}

unint64_t sub_1D47C5B28(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_1D4922C7C();
  v6 = (_QWORD *)v5;
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v6;
  }
  v8 = v5 + 64;
  v9 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D469C5EC(v9, (uint64_t)&v16, a3);
    v10 = v16;
    result = sub_1D47CAB1C(v16);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)(v8 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v6[6] + 8 * result) = v10;
    result = (unint64_t)sub_1D46FADFC(&v17, (_OWORD *)(v6[7] + 32 * result));
    v13 = v6[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6[2] = v15;
    v9 += 40;
    if (!--v7)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C5C4C(uint64_t a1)
{
  return sub_1D47C5C58(a1, &qword_1ED98EB98);
}

unint64_t sub_1D47C5C58(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  unsigned __int8 v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_1D4922C7C();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (_QWORD *)(a1 + 40);
  while (1)
  {
    v6 = *((_BYTE *)v5 - 8);
    v7 = *v5;
    swift_retain();
    result = sub_1D47CA948(v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v6;
    *(_QWORD *)(v3[7] + 8 * result) = v7;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v5 += 2;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C5D54(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98F360);
  v2 = (_QWORD *)sub_1D4922C7C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *((unsigned __int8 *)v4 - 16);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1D47CABBC(v5, (void (*)(uint64_t))sub_1D48BE504, (uint64_t (*)(uint64_t, uint64_t))sub_1D47CC6D8);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    v10 = (_QWORD *)(v2[7] + 16 * result);
    *v10 = v6;
    v10[1] = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D47C5E88(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98F368);
  v2 = (_QWORD *)sub_1D4922C7C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_QWORD *)(a1 + 40);
  while (1)
  {
    v5 = *((_BYTE *)v4 - 8);
    v6 = *v4;
    result = sub_1D47CABBC(v5, (void (*)(uint64_t))sub_1D48BE504, (uint64_t (*)(uint64_t, uint64_t))sub_1D47CC6D8);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    *(_QWORD *)(v2[7] + 8 * result) = v6;
    v9 = v2[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      goto LABEL_11;
    v4 += 2;
    v2[2] = v11;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1D47C5FA0()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 56) + 16);
}

uint64_t S2Loop.numVertices.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

uint64_t sub_1D47C5FB8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(v2 + 56);
  v4 = *(_QWORD *)(v3 + 16);
  if ((uint64_t)v4 <= result)
    v5 = *(_QWORD *)(v3 + 16);
  else
    v5 = 0;
  v6 = result - v5;
  if (v6 >= v4)
  {
    __break(1u);
  }
  else
  {
    v7 = v3 + 24 * v6;
    v8 = *(_QWORD *)(v7 + 48);
    *(_OWORD *)a2 = *(_OWORD *)(v7 + 32);
    *(_QWORD *)(a2 + 16) = v8;
  }
  return result;
}

VisualIntelligence::S2Point __swiftcall S2Loop.vertex(_:)(Swift::Int a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  double v7;
  __int128 v8;
  VisualIntelligence::S2Point result;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v3 <= a1)
    v4 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  else
    v4 = 0;
  v5 = a1 - v4;
  if (v5 >= v3)
  {
    __break(1u);
  }
  else
  {
    v6 = *(_QWORD *)v2 + 24 * v5;
    v7 = *(double *)(v6 + 48);
    v8 = *(_OWORD *)(v6 + 32);
    *(_OWORD *)v1 = v8;
    *(double *)(v1 + 16) = v7;
  }
  result.y = *(double *)&v8;
  result.x = v7;
  return result;
}

uint64_t sub_1D47C6030@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 56);
    v5 = *(_QWORD *)(v4 + 16);
    if (v3 >= (uint64_t)v5)
      v6 = *(_QWORD *)(v4 + 16);
    else
      v6 = 0;
    v7 = v3 - v6;
    if (v7 < v5)
    {
      v8 = v4 + 24 * v7;
      v9 = *(_QWORD *)(v8 + 48);
      *(_OWORD *)a2 = *(_OWORD *)(v8 + 32);
      *(_QWORD *)(a2 + 16) = v9;
      return result;
    }
  }
  __break(1u);
  return result;
}

void sub_1D47C6078()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1D47C60A4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1D47C60DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

double static S2Loop.maxIntersectionError.getter()
{
  return 1.0e-15;
}

uint64_t S2Loop.vertices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t S2Loop.vertices.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

void (*S2Loop.vertices.modify())(faiss::NormalizationTransform *__hidden this)
{
  return faiss::NormalizationTransform::~NormalizationTransform;
}

uint64_t S2Loop.depth.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t S2Loop.depth.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = result;
  return result;
}

void (*S2Loop.depth.modify())(faiss::NormalizationTransform *__hidden this)
{
  return faiss::NormalizationTransform::~NormalizationTransform;
}

void S2Loop.init(vertices:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  __int128 v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;

  v4 = MEMORY[0x1E0DEE9D8];
  v5 = sub_1D47D11EC(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = 0;
  if (qword_1EFEA9DA8 != -1)
    swift_once();
  v6 = xmmword_1EFEAAF00;
  *(_OWORD *)(a2 + 32) = xmmword_1D492B580;
  *(_OWORD *)(a2 + 48) = v6;
  *(_BYTE *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)a2 = a1;
  type metadata accessor for S2Loop.S2LoopEdgeIndex();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 64) = 0;
  *(_QWORD *)(v7 + 72) = v5;
  *(_QWORD *)(v7 + 80) = 0;
  *(_OWORD *)(v7 + 88) = xmmword_1D492B580;
  *(_OWORD *)(v7 + 104) = v6;
  *(_BYTE *)(v7 + 120) = 0;
  *(_QWORD *)(v7 + 128) = 0;
  *(_QWORD *)(v7 + 16) = v4;
  *(_QWORD *)(v7 + 24) = v4;
  *(_QWORD *)(v7 + 32) = 30;
  *(_BYTE *)(v7 + 40) = 0;
  *(_QWORD *)(v7 + 48) = 0;
  *(_QWORD *)(v7 + 56) = a1;
  *(_QWORD *)(a2 + 8) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D47C62AC();
  sub_1D47C64A8(v8, v9, v10);
  sub_1D47C66F8();
  sub_1D47C67D4();
}

void sub_1D47C62AC()
{
  double *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  double *v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  long double v13;
  long double v14;
  Swift::Double *v15;
  double v16;
  long double v18;
  Swift::Double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BOOL4 v26;
  uint64_t v27;
  __int128 v28;
  double v29;
  uint64_t v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  Swift::Double x;
  VisualIntelligence::S2Point v45;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v2 > 1)
    v3 = 1;
  else
    v3 = 1 - v2;
  if (v3 >= (uint64_t)v2)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v4 = v0;
  v5 = v0[4];
  v6 = v0[5];
  v7 = *((_QWORD *)v0 + 6);
  v8 = *((_QWORD *)v0 + 7);
  v10 = *((_QWORD *)v0 + 1);
  v9 = v0[2];
  v27 = *((_QWORD *)v4 + 3);
  v11 = *((_QWORD *)v4 + 9);
  v12 = v1 + 32 + 24 * v3;
  v13 = *(double *)v12;
  v14 = *(double *)(v12 + 8);
  v15 = (Swift::Double *)(v12 + 16);
  v16 = atan2(*(long double *)(v12 + 16), sqrt(v13 * v13 + v14 * v14));
  if (v5 > v16 || v16 > v6)
    goto LABEL_19;
  v18 = atan2(v14, v13);
  *(_QWORD *)&v28 = v7;
  *((_QWORD *)&v28 + 1) = v8;
  if (!S1Interval.contains(point:)(v18))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  *((_BYTE *)v4 + 64) = 0;
  v19 = *v15;
  v43 = *(_OWORD *)v12;
  x = v19;
  S2Point.ortho.getter((double *)&v28);
  v43 = v28;
  x = v29;
  v20 = *(_QWORD *)(v1 + 16);
  if (!v20)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v21 = *(_QWORD *)(v1 + 48);
  v41 = *(_OWORD *)(v1 + 32);
  v42 = v21;
  v22 = 2;
  if (v2 <= 2)
    v22 = 2 - v2;
  if (v22 >= v20)
    goto LABEL_22;
  v23 = v1 + 32 + 24 * v22;
  v24 = *(_QWORD *)(v23 + 16);
  v39 = *(_OWORD *)v23;
  v40 = v24;
  if (v3 >= v20)
  {
LABEL_23:
    __break(1u);
    return;
  }
  v25 = *(_QWORD *)v15;
  v37 = *(_OWORD *)v12;
  v38 = v25;
  v26 = _s18VisualIntelligence2S2V10orderedCCW1a1b1c1oSbAA0C5PointV_A3JtFZ_0((double *)&v43, (double *)&v41, (double *)&v39, (double *)&v37);
  *(_QWORD *)&v28 = v1;
  *((_QWORD *)&v28 + 1) = v10;
  v29 = v9;
  v30 = v27;
  v31 = v5;
  v32 = v6;
  v33 = v7;
  v34 = v8;
  v35 = 0;
  v36 = v11;
  v45.x = *v15;
  v43 = *(_OWORD *)v12;
  *(_QWORD *)&v45.y = v43;
  x = v45.x;
  if (v26 != S2Loop.contains(point:)(v45))
    *((_BYTE *)v4 + 64) = 1;
}

BOOL sub_1D47C64A8(double a1, double a2, double a3)
{
  double *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  BOOL v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  double v15;
  double v16;
  double v17;
  __int128 v18;
  unint64_t v19;
  _BOOL8 result;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  unint64_t v24;
  double v25;
  __int128 v26;

  if (qword_1EFEA9DA0 != -1)
LABEL_21:
    swift_once();
  v4 = 0;
  v5 = 0;
  v26 = xmmword_1EFEAAEF0;
  v6 = *(_QWORD *)v3;
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v8 = v7 == 0;
  v9 = 1;
  do
  {
    if (v4 >= *(_QWORD *)(v6 + 16))
    {
      __break(1u);
      goto LABEL_21;
    }
    v10 = (uint64_t *)(v6 + 32 + 24 * v4);
    v11 = v10[2];
    v12 = *v10;
    RectBounder.add(point:)(*(VisualIntelligence::S2Point *)(&a3 - 2));
    if (v8)
      goto LABEL_10;
    ++v5;
    if (v9 >= v7)
      v14 = v7;
    else
      v14 = 0;
    v4 = v5 - v14;
    v8 = v7 == v9++;
  }
  while ((uint64_t)(~v14 + v9) >= 0);
  __break(1u);
LABEL_10:
  v15 = 1.0;
  v17 = *((double *)&v26 + 1);
  v16 = *(double *)&v26;
  if (qword_1EFEA9DA8 != -1)
    swift_once();
  v18 = xmmword_1EFEAAF00;
  v19 = 0xBFF921FB54442D18;
  result = S2Loop.contains(point:)(*(VisualIntelligence::S2Point *)(&a3 - 2));
  v22 = result;
  if (result)
  {
    v16 = *(double *)&v18;
    v17 = *((double *)&v18 + 1);
  }
  v23 = 0x401921FB54442D18;
  if (v17 - v16 == 6.28318531)
  {
    v24 = 0xBFF921FB54442D18;
    result = S2Loop.contains(point:)(*(VisualIntelligence::S2Point *)(&v21 - 2));
    if (result)
      v15 = -1.57079633;
  }
  v25 = 1.57079633;
  if (!v22)
    v25 = 0.0;
  v3[4] = v15;
  v3[5] = v25;
  v3[6] = v16;
  v3[7] = v17;
  return result;
}

void sub_1D47C66F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  double v11;
  double *v12;
  double v13;
  double v14;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2 == 1)
  {
    v0[3] = 0;
    return;
  }
  if (!v2)
    goto LABEL_25;
  v3 = 0;
  v4 = v1 + 32;
  v5 = 1;
  while (1)
  {
    v7 = v5 >= v2 ? *(_QWORD *)(*v0 + 16) : 0;
    if (v5 - v7 >= (unint64_t)v2)
      break;
    if (v3 >= v2)
      v8 = *(_QWORD *)(*v0 + 16);
    else
      v8 = 0;
    v9 = v3 - v8;
    if (v3 - v8 >= (unint64_t)v2)
      goto LABEL_24;
    v10 = (double *)(v1 - 24 * v7);
    v11 = v10[7];
    v12 = (double *)(v4 + 24 * v9);
    v6 = v5;
    if (v11 >= *v12)
    {
      if (*v12 >= v11)
      {
        v13 = v10[8];
        v14 = v12[1];
        v6 = v5;
        if (v13 < v14)
          goto LABEL_5;
        if (v14 >= v13)
        {
          if (v10[9] >= v12[2])
            v6 = v3;
          else
            v6 = v5;
          goto LABEL_5;
        }
      }
      v6 = v3;
    }
LABEL_5:
    ++v5;
    v1 += 24;
    v3 = v6;
    if (v2 == v5)
    {
      v0[3] = v6;
      return;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
}

void sub_1D47C67D4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  double *v7;
  double v8;
  double v9;
  double v10;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  _QWORD *v21;
  double *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = *(_QWORD *)(*v0 + 16);
  if (v1 == 1)
    return;
  if (!v1)
    goto LABEL_27;
  v2 = v0;
  v3 = 0;
  v4 = 1;
  while (v1 != v4)
  {
    v5 = *(_QWORD *)(*v2 + 16);
    if (v4 >= v5)
      v6 = *(_QWORD *)(*v2 + 16);
    else
      v6 = 0;
    if (v4 - v6 >= v5)
      goto LABEL_24;
    v7 = (double *)(*v2 - 24 * v6 + v3);
    v8 = v7[7];
    v9 = v7[8];
    v10 = v7[9];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = (_QWORD *)v2[2];
    v2[2] = 0x8000000000000000;
    v14 = sub_1D47CAA8C(v8, v9, v10);
    v15 = v12[2];
    v16 = (v13 & 1) == 0;
    v17 = v15 + v16;
    if (__OFADD__(v15, v16))
      goto LABEL_25;
    v18 = v13;
    if (v12[3] >= v17)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v21 = v12;
        if ((v13 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1D47B0044();
        v21 = v12;
        if ((v18 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1D47A85D4(v17, isUniquelyReferenced_nonNull_native);
      v19 = sub_1D47CAA8C(v8, v9, v10);
      if ((v18 & 1) != (v20 & 1))
        goto LABEL_28;
      v14 = v19;
      v21 = v12;
      if ((v18 & 1) != 0)
      {
LABEL_4:
        *(_QWORD *)(v21[7] + 8 * v14) = v4;
        goto LABEL_5;
      }
    }
    v21[(v14 >> 6) + 8] |= 1 << v14;
    v22 = (double *)(v21[6] + 24 * v14);
    *v22 = v8;
    v22[1] = v9;
    v22[2] = v10;
    *(_QWORD *)(v21[7] + 8 * v14) = v4;
    v23 = v21[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_26;
    v21[2] = v25;
LABEL_5:
    ++v4;
    v2[2] = v21;
    swift_bridgeObjectRelease();
    v3 += 24;
    if (v1 == v4)
      return;
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  sub_1D4922E8C();
  __break(1u);
}

double S2Loop.init(cell:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  _OWORD v14[2];
  __int128 v15[2];
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  char v26;
  uint64_t v27;

  v3 = *((_BYTE *)a1 + 8);
  v4 = *((_BYTE *)a1 + 9);
  v5 = *((_BYTE *)a1 + 10);
  v6 = a1[2];
  v16 = *a1;
  v17 = v3;
  v18 = v4;
  v19 = v5;
  v20 = v6;
  *(_QWORD *)&v21 = v16;
  BYTE8(v21) = v3;
  BYTE9(v21) = v4;
  BYTE10(v21) = v5;
  v22 = v6;
  S2Cell.rectBound.getter(v15);
  v14[0] = v15[0];
  v14[1] = v15[1];
  S2Loop.init(cell:bound:)((double *)v14, (uint64_t)&v21);
  result = *(double *)&v21;
  v8 = v22;
  v9 = v23;
  v10 = v26;
  v11 = v27;
  v12 = v24;
  v13 = v25;
  *(_OWORD *)a2 = v21;
  *(_QWORD *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 24) = v9;
  *(_OWORD *)(a2 + 32) = v12;
  *(_OWORD *)(a2 + 48) = v13;
  *(_BYTE *)(a2 + 64) = v10;
  *(_QWORD *)(a2 + 72) = v11;
  return result;
}

double S2Loop.init(cell:bound:)@<D0>(double *a1@<X1>, uint64_t a2@<X8>)
{
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v3 = *a1;
  v4 = *((_QWORD *)a1 + 1);
  v5 = *((_QWORD *)a1 + 2);
  v6 = *((_QWORD *)a1 + 3);
  v7 = MEMORY[0x1E0DEE9D8];
  v8 = sub_1D47D11EC(MEMORY[0x1E0DEE9D8]);
  if (qword_1EFEA9DA8 != -1)
    swift_once();
  *(double *)&v13 = v3;
  *((_QWORD *)&v13 + 1) = v4;
  *(_QWORD *)&v14 = v5;
  *((_QWORD *)&v14 + 1) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB888);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1D4927560;
  S2Cell.getVertex(_:)(0);
  S2Cell.getVertex(_:)(1);
  S2Cell.getVertex(_:)(2);
  S2Cell.getVertex(_:)(3);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v12 = v9;
  type metadata accessor for S2Loop.S2LoopEdgeIndex();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 64) = 0;
  *(_QWORD *)(v10 + 72) = v8;
  *(_QWORD *)(v10 + 80) = 0;
  *(double *)(v10 + 88) = v3;
  *(_QWORD *)(v10 + 96) = v4;
  *(_QWORD *)(v10 + 104) = v5;
  *(_QWORD *)(v10 + 112) = v6;
  *(_BYTE *)(v10 + 120) = 0;
  *(_QWORD *)(v10 + 128) = 0;
  *(_QWORD *)(v10 + 16) = v7;
  *(_QWORD *)(v10 + 24) = v7;
  *(_QWORD *)(v10 + 32) = 30;
  *(_BYTE *)(v10 + 40) = 0;
  *(_QWORD *)(v10 + 48) = 0;
  *(_QWORD *)(v10 + 56) = v9;
  *((_QWORD *)&v12 + 1) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D47C62AC();
  sub_1D47C66F8();
  sub_1D47C67D4();
  *(_OWORD *)a2 = v12;
  *(_QWORD *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 24) = 0;
  result = v3;
  *(_OWORD *)(a2 + 32) = v13;
  *(_OWORD *)(a2 + 48) = v14;
  *(_BYTE *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0;
  return result;
}

uint64_t S2Loop.isHole.getter()
{
  uint64_t v0;

  return *(_DWORD *)(v0 + 72) & 1;
}

uint64_t S2Loop.sign.getter()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 72) & 1) != 0)
    return -1;
  else
    return 1;
}

BOOL S2Loop.isNormalized.getter()
{
  double v1[4];

  sub_1D47C7130(0, (uint64_t)v1);
  return v1[0] <= 6.28318531;
}

double S2Loop.area.getter()
{
  double v1[4];

  sub_1D47C7130(0, (uint64_t)v1);
  return v1[0];
}

Swift::Void __swiftcall S2Loop.normalize()()
{
  double v0[4];

  sub_1D47C7130(0, (uint64_t)v0);
  if (v0[0] > 6.28318531)
    S2Loop.invert()();
}

Swift::Void __swiftcall S2Loop.invert()()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v6 = *(_QWORD **)v0;
  v7 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  v8 = v7 - 2;
  if (v7 < 2)
    v8 = v7 - 1;
  if (!v7)
  {
    __break(1u);
LABEL_34:
    v6 = sub_1D47DFB3C(v6);
    goto LABEL_8;
  }
  v1 = v8 >> 1;
  v2 = v7 - (v8 >> 1);
  if (v7 <= (unint64_t)(v8 >> 1))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v3 = v7 + ~v1;
  if (!__CFADD__(v7, ~v1))
    goto LABEL_22;
  v9 = (uint64_t)&v6[3 * v1 + 4];
  v4 = *(_QWORD *)(v9 + 16);
  v10 = (uint64_t)&v6[3 * v3 + 4];
  v38 = *(_OWORD *)v9;
  v40 = *(_OWORD *)v10;
  v5 = *(_QWORD *)(v10 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_34;
LABEL_8:
  v13 = v6[2];
  if (v1 >= v13)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v14 = (uint64_t)&v6[3 * v1 + 4];
  *(_OWORD *)v14 = v40;
  *(_QWORD *)(v14 + 16) = v5;
  if (v3 >= v13)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v15 = (uint64_t)&v6[3 * v3 + 4];
  v16 = *(double *)&v38;
  *(_OWORD *)v15 = v38;
  *(_QWORD *)(v15 + 16) = v4;
  if ((unint64_t)v7 >= 4)
  {
    v17 = 24 * v7 - 24 * v1 + 32;
    v18 = 24 * v1 + 24;
    while ((uint64_t)v1-- >= 1)
    {
      v20 = v6[2];
      if (v1 >= v20)
        goto LABEL_21;
      if (v2 >= v20)
        goto LABEL_22;
      v21 = *(_QWORD *)((char *)v6 + v18);
      v39 = *(_OWORD *)((char *)v6 + v18 - 16);
      v41 = *(_OWORD *)((char *)v6 + v17);
      v22 = *(_QWORD *)((char *)v6 + v17 + 16);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_1D47DFB3C(v6);
      v23 = v6[2];
      if (v1 >= v23)
        goto LABEL_23;
      v24 = (_QWORD *)((char *)v6 + v18);
      *((_OWORD *)v24 - 1) = v41;
      *v24 = v22;
      if (v2 >= v23)
        goto LABEL_24;
      v25 = (char *)v6 + v17;
      v16 = *(double *)&v39;
      *(_OWORD *)v25 = v39;
      *((_QWORD *)v25 + 2) = v21;
      v17 += 24;
      ++v2;
      v18 -= 24;
      if (!v1)
        goto LABEL_25;
    }
    __break(1u);
    goto LABEL_31;
  }
LABEL_25:
  *(_QWORD *)v0 = v6;
  v26 = MEMORY[0x1E0DEE9D8];
  v27 = sub_1D47D11EC(MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = v27;
  v28 = *(_QWORD *)(v0 + 8);
  v29 = *(_QWORD *)(v0 + 24);
  v31 = *(double *)(v0 + 32);
  v30 = *(double *)(v0 + 40);
  v32 = *(_QWORD *)(v0 + 48);
  v33 = *(_QWORD *)(v0 + 56);
  v34 = *(_BYTE *)(v0 + 64);
  v35 = *(_QWORD *)(v0 + 72);
  type metadata accessor for S2Loop.S2LoopEdgeIndex();
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 64) = v28;
  *(_QWORD *)(v36 + 72) = v27;
  *(_QWORD *)(v36 + 80) = v29;
  *(double *)(v36 + 88) = v31;
  *(double *)(v36 + 96) = v30;
  *(_QWORD *)(v36 + 104) = v32;
  *(_QWORD *)(v36 + 112) = v33;
  *(_BYTE *)(v36 + 120) = v34;
  *(_QWORD *)(v36 + 128) = v35;
  *(_QWORD *)(v36 + 16) = v26;
  *(_QWORD *)(v36 + 24) = v26;
  *(_QWORD *)(v36 + 32) = 30;
  *(_BYTE *)(v36 + 40) = 0;
  *(_QWORD *)(v36 + 48) = 0;
  *(_QWORD *)(v36 + 56) = v6;
  *(_QWORD *)(v0 + 8) = v36;
  *(_BYTE *)(v0 + 64) = v34 ^ 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = -1.57079633;
  if (v31 <= -1.57079633 || (v16 = 1.57079633, v30 >= 1.57079633))
  {
LABEL_31:
    sub_1D47C64A8(v16, v11, v12);
    goto LABEL_32;
  }
  if (qword_1EFEA9DA8 != -1)
    swift_once();
  v37 = xmmword_1EFEAAF00;
  *(_OWORD *)(v0 + 32) = xmmword_1D492B580;
  *(_OWORD *)(v0 + 48) = v37;
LABEL_32:
  sub_1D47C66F8();
  sub_1D47C67D4();
}

void S2Loop.inverted.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  __int128 v8;

  v3 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = *(_BYTE *)(v1 + 64);
  v7 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  v8 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v7;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  S2Loop.invert()();
}

void sub_1D47C7130(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  uint64_t v17;
  double v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  double *v24;
  double v25;
  double v26;
  double v27;
  double *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  float64x2_t v35;
  double v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  double v40;
  double v42;
  double v44;
  float64x2_t v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  double v54;
  double v55;
  double v56;
  double v57;
  float64x2_t v58;
  double v59;

  v3 = *v2;
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 <= 2)
  {
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return;
  }
  v6 = *(double *)(v3 + 32);
  v7 = *(double *)(v3 + 40);
  v8 = *(double *)(v3 + 48);
  v9 = fabs(v7);
  v10 = fabs(v6);
  v11 = fabs(v8);
  v12 = 2 * (v11 >= v10);
  v13 = 2;
  if (v11 < v9)
    v13 = 1;
  if (v9 >= v10)
    v12 = v13;
  if (v12 == 2)
    v14 = 0;
  else
    v14 = v12 + 1;
  if (v14 == 1)
  {
    v15 = v7 + 2.71828183e-10;
  }
  else if (v14)
  {
    v15 = v8 + 2.71828183e-10;
  }
  else
  {
    v6 = v6 + 2.71828183e-10;
    v15 = v6;
  }
  if (v14 == 1)
    v7 = v15;
  if (v14 == 2)
    v8 = v15;
  v16 = sqrt(v8 * v8 + v6 * v6 + v7 * v7);
  if (v16 != 0.0)
    v16 = 1.0 / v16;
  v47 = v7 * v16;
  v48 = v6 * v16;
  v46 = v8 * v16;
  v17 = v3 + 40;
  v45 = 0u;
  v18 = 0.0;
  v19 = 1;
  v44 = 0.0;
  do
  {
    if (v19 - 1 >= v4)
      v20 = v4;
    else
      v20 = 0;
    v21 = v19 - 1 - v20;
    if (v21 < 0)
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      return;
    }
    v22 = *(_QWORD *)(v3 + 16);
    if (v21 >= v22)
      goto LABEL_47;
    if (v19 >= v4)
      v23 = v4;
    else
      v23 = 0;
    if (v19 - v23 >= v22)
      goto LABEL_48;
    v24 = (double *)(v17 - 24 * v20);
    v26 = *(v24 - 1);
    v25 = *v24;
    v27 = v24[1];
    v28 = (double *)(v17 - 24 * v23);
    v29 = v28[3];
    v49 = v28[2];
    v50 = v18;
    v30 = v28[4];
    v58.f64[0] = v48;
    v58.f64[1] = v47;
    v59 = v46;
    v55 = v26;
    v56 = v25;
    v57 = v27;
    *(double *)&v53 = v49;
    *((double *)&v53 + 1) = v29;
    v54 = v30;
    sub_1D47B766C((uint64_t *)&v58, (uint64_t *)&v55, (double *)&v53, v49, v8, v7);
    v32 = v31;
    v33 = (v47 * v27 - v46 * v25) * v49 + (v46 * v26 - v48 * v27) * v29 + (v48 * v25 - v47 * v26) * v30;
    if (v33 <= 1.6e-15)
    {
      if (v33 >= -1.6e-15)
      {
        v58.f64[0] = v48;
        v58.f64[1] = v47;
        v59 = v46;
        v55 = v26;
        v56 = v25;
        v57 = v27;
        *(double *)&v53 = v49;
        *((double *)&v53 + 1) = v29;
        v54 = v30;
        v36 = v32;
        v37 = sub_1D47B6F88(v58.f64, &v55, (double *)&v53);
        v32 = v36;
        v34 = v37;
        if ((a1 & 1) == 0)
        {
LABEL_36:
          v35 = 0uLL;
          v8 = 0.0;
          goto LABEL_39;
        }
      }
      else
      {
        v34 = -1;
        if ((a1 & 1) == 0)
          goto LABEL_36;
      }
    }
    else
    {
      v34 = 1;
      if ((a1 & 1) == 0)
        goto LABEL_36;
    }
    v55 = v48;
    v56 = v47;
    v57 = v46;
    v38 = v24[1];
    v53 = *(_OWORD *)(v24 - 1);
    v54 = v38;
    v39 = *((_QWORD *)v28 + 4);
    v51 = *((_OWORD *)v28 + 1);
    v52 = v39;
    v40 = v32;
    static S2.trueCentroid(a:b:c:)(&v55, (double *)&v53, (double *)&v51, v58.f64);
    v32 = v40;
    v35 = vaddq_f64(v45, v58);
    v8 = v44 + v59;
    v44 = v44 + v59;
    v45 = v35;
LABEL_39:
    v7 = v32 * (double)v34;
    v18 = v50 + v7;
    if (v4 == v19)
      goto LABEL_43;
    v17 += 24;
  }
  while (!__OFADD__(v19++, 1));
  __break(1u);
LABEL_43:
  v42 = v18 + 12.5663706;
  if (v18 >= 0.0)
    v42 = v18;
  *(double *)a2 = v42;
  *(float64x2_t *)(a2 + 8) = v35;
  *(double *)(a2 + 24) = v8;
}

void S2Loop.areaAndCentroid.getter(uint64_t a1@<X8>)
{
  sub_1D47C7130(1, a1);
}

double S2Loop.centroid.getter@<D0>(uint64_t a1@<X8>)
{
  double result;
  _BYTE v3[8];
  __int128 v4;
  double v5;

  sub_1D47C7130(1, (uint64_t)v3);
  result = v5;
  *(_OWORD *)a1 = v4;
  *(double *)(a1 + 16) = result;
  return result;
}

BOOL S2Loop.contains(other:)(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  double v4;
  uint64_t v5;
  double v6;
  double v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  uint64_t v17;
  double v18;
  char v19;
  uint64_t v20;
  _BOOL8 result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  BOOL v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  double v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  double v44;
  uint64_t v45;
  double v46;
  char v47;
  uint64_t v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  double v54;
  uint64_t v55;
  double v56;
  char v57;
  uint64_t v58;

  v4 = *(double *)a1;
  v5 = *(_QWORD *)(a1 + 16);
  v38 = *(_QWORD *)(a1 + 24);
  v39 = *(double *)(a1 + 8);
  v6 = *(double *)(a1 + 32);
  v7 = *(double *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(double *)(a1 + 56);
  v37 = *(_BYTE *)(a1 + 64);
  v10 = *(_QWORD *)(a1 + 72);
  v11 = *(double *)v3;
  v12 = *(double *)(v3 + 8);
  v14 = *(_QWORD *)(v3 + 16);
  v13 = *(_QWORD *)(v3 + 24);
  v15 = *(double *)(v3 + 32);
  v16 = *(double *)(v3 + 40);
  v17 = *(_QWORD *)(v3 + 48);
  v18 = *(double *)(v3 + 56);
  v19 = *(_BYTE *)(v3 + 64);
  v20 = *(_QWORD *)(v3 + 72);
  if (v7 >= v6)
  {
    result = 0;
    if (v15 > v6 || v7 > v16)
      return result;
  }
  v49 = *(double *)(v3 + 48);
  v50 = v18;
  *(_QWORD *)&v40 = v8;
  *((double *)&v40 + 1) = v9;
  result = S1Interval.contains(interval:)((VisualIntelligence::S1Interval)__PAIR128__(*(unint64_t *)&a3, *(unint64_t *)&a2));
  if (!result)
    return 0;
  v49 = v11;
  v50 = v12;
  v51 = v14;
  v52 = v13;
  v53 = v15;
  v54 = v16;
  v55 = v17;
  v56 = v18;
  v57 = v19;
  v58 = v20;
  if (!*(_QWORD *)(*(_QWORD *)&v4 + 16))
  {
    __break(1u);
    goto LABEL_39;
  }
  v23 = *(_QWORD *)(*(_QWORD *)&v4 + 48);
  v40 = *(_OWORD *)(*(_QWORD *)&v4 + 32);
  v24 = v40;
  v41 = v23;
  result = S2Loop.contains(point:)(*(VisualIntelligence::S2Point *)(&v22 - 2));
  if (result)
    goto LABEL_7;
  if (!*(_QWORD *)(*(_QWORD *)&v4 + 16))
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (!*(_QWORD *)(v14 + 16))
    return 0;
  v35 = sub_1D47CAA8C(*(double *)(*(_QWORD *)&v4 + 32), *(double *)(*(_QWORD *)&v4 + 40), *(double *)(*(_QWORD *)&v4 + 48));
  if ((v36 & 1) == 0 || (*(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v35) & 0x8000000000000000) != 0)
    return 0;
LABEL_7:
  v49 = v11;
  v50 = v12;
  v51 = v14;
  v52 = v13;
  v53 = v15;
  v54 = v16;
  v55 = v17;
  v56 = v18;
  v57 = v19;
  v58 = v20;
  *(double *)&v40 = v4;
  *((double *)&v40 + 1) = v39;
  v41 = v5;
  v42 = v38;
  v43 = v6;
  v44 = v7;
  v45 = v8;
  v46 = v9;
  v47 = v37;
  v48 = v10;
  if (sub_1D47C822C((uint64_t)&v40, (uint64_t)&type metadata for WedgeContains, (uint64_t)&protocol witness table for WedgeContains) < 1)return 0;
  if (v6 >= v15)
    v25 = v15;
  else
    v25 = v6;
  if (v16 > v7)
    v26 = v16;
  else
    v26 = v7;
  if (v7 < v6)
  {
    v25 = v15;
    v26 = v16;
  }
  v27 = v16 < v15;
  if (v16 >= v15)
    v28 = v25;
  else
    v28 = v6;
  *(_QWORD *)&v40 = v17;
  *((double *)&v40 + 1) = v18;
  if (v27)
    v29 = v7;
  else
    v29 = v26;
  S1Interval.union(with:)((VisualIntelligence::S1Interval)__PAIR128__(*(unint64_t *)&v26, *(unint64_t *)&v25));
  result = 1;
  if (v28 == -1.57079633 && v29 == 1.57079633 && v50 - v49 == 6.28318531)
  {
    v49 = v4;
    v50 = v39;
    v51 = v5;
    v52 = v38;
    v53 = v6;
    v54 = v7;
    v55 = v8;
    v56 = v9;
    v57 = v37;
    v58 = v10;
    if (*(_QWORD *)(*(_QWORD *)&v11 + 16))
    {
      v31 = *(_QWORD *)(*(_QWORD *)&v11 + 48);
      v40 = *(_OWORD *)(*(_QWORD *)&v11 + 32);
      v32 = v40;
      v41 = v31;
      result = S2Loop.contains(point:)(*(VisualIntelligence::S2Point *)(&v30 - 2));
      if (!result)
        return 1;
      if (*(_QWORD *)(*(_QWORD *)&v11 + 16))
      {
        if (*(_QWORD *)(v5 + 16))
        {
          v33 = sub_1D47CAA8C(*(double *)(*(_QWORD *)&v11 + 32), *(double *)(*(_QWORD *)&v11 + 40), *(double *)(*(_QWORD *)&v11 + 48));
          if ((v34 & 1) != 0 && (*(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v33) & 0x8000000000000000) == 0)
            return 1;
        }
        return 0;
      }
LABEL_41:
      __break(1u);
      return result;
    }
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  return result;
}

__n128 S2Loop.rectBound.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(v1 + 32);
  v3 = *(_OWORD *)(v1 + 48);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

Swift::Bool __swiftcall S2Loop.contains(point:)(VisualIntelligence::S2Point point)
{
  double *v1;
  double *v2;
  long double v3;
  long double v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  char v9;
  double v10;
  long double v12;
  uint64_t v13;
  unint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  double *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  int v39;
  int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  BOOL v50;
  double v51;
  double v52;
  double v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  double *v64;
  double v65;
  double v66;
  double v67;
  double v68;
  int64_t v69;
  unint64_t v70;
  uint64_t v71;
  double *v72;
  double v73;
  double v74;
  double v75;
  double v76;
  uint64_t v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  int v86;
  int v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  double v96;
  BOOL v97;
  double v98;
  double v99;
  double v100;
  double v102;
  uint64_t v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  double v115;
  long double v116;
  double v117[3];
  __int128 v118;
  long double v119;
  __int128 v120;
  double v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  double v125;
  double v126;
  double v127;
  __int128 v128;
  long double v129;
  __int128 v130;
  long double v131;
  VisualIntelligence::S2Point v132;
  VisualIntelligence::S2Point v133;

  v4 = *v1;
  v3 = v1[1];
  v6 = *v2;
  v5 = *((_QWORD *)v2 + 1);
  v7 = v2[4];
  v8 = v2[5];
  v9 = *((_BYTE *)v2 + 64);
  v116 = v1[2];
  v10 = atan2(v116, sqrt(v4 * v4 + v3 * v3));
  if (v7 <= v10 && v10 <= v8)
  {
    v12 = atan2(v3, v4);
    v120 = *((_OWORD *)v2 + 3);
    LOBYTE(v13) = S1Interval.contains(point:)(v12);
    if ((v13 & 1) != 0)
    {
      v14 = *(_QWORD *)(*(_QWORD *)&v6 + 16);
      if (!v14)
        goto LABEL_132;
      v15 = v3;
      v16 = *(_QWORD *)&v6 + 32;
      v17 = *(_QWORD *)&v6 + 32 + 24 * v14;
      v19 = *(double *)(v17 - 24);
      v18 = *(double *)(v17 - 16);
      v20 = *(double *)(v17 - 8);
      v21 = v116 - v15 * 0.0;
      v120 = xmmword_1D4927DA0;
      v121 = 0.0;
      *(long double *)&v130 = v4;
      *((double *)&v130 + 1) = v15;
      v131 = v116;
      *(double *)&v128 = v19;
      *((double *)&v128 + 1) = v18;
      v22 = v20;
      v129 = v20;
      v125 = v21;
      v126 = v4 * 0.0 - v116 * 0.0;
      v114 = v15 * 0.0 - v4;
      v115 = v126;
      v127 = v114;
      v13 = _s18VisualIntelligence2S2V9robustCCW1a1b1c7aCrossBSiAA0C5PointV_A3JtFZ_0(&v120, &v130, (double *)&v128, &v125);
      v23 = -v13;
      if (__OFSUB__(0, v13))
      {
LABEL_133:
        __break(1u);
      }
      else
      {
        v108 = v15;
        v109 = v4;
        v107 = v116 - v15 * 0.0;
        if (v14 <= 0x7CF)
        {
          v24 = (double *)(*(_QWORD *)&v6 + 48);
          v25 = v22;
          while (1)
          {
            v26 = *(v24 - 2);
            v27 = *(v24 - 1);
            v28 = *v24;
            v29 = v21 * v26 + v115 * v27 + v114 * *v24;
            if (v29 <= 1.6e-15)
            {
              if (v29 >= -1.6e-15)
              {
                v120 = xmmword_1D4927DA0;
                v121 = 0.0;
                *(long double *)&v130 = v4;
                *((double *)&v130 + 1) = v15;
                v131 = v116;
                *(double *)&v128 = v26;
                *((double *)&v128 + 1) = v27;
                v129 = v28;
                v110 = v19;
                v31 = v18;
                v32 = v4;
                v33 = v21;
                v34 = v15;
                v35 = v25;
                v36 = v27;
                v37 = v28;
                v38 = v26;
                v13 = sub_1D47B6F88((double *)&v120, (double *)&v130, (double *)&v128);
                v26 = v38;
                v28 = v37;
                v27 = v36;
                v25 = v35;
                v15 = v34;
                v21 = v33;
                v4 = v32;
                v18 = v31;
                v19 = v110;
                v30 = v13;
              }
              else
              {
                v30 = -1;
              }
            }
            else
            {
              v30 = 1;
            }
            if (__OFSUB__(0, v23))
            {
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
              goto LABEL_122;
            }
            if (v30 == -v23 && v30)
              break;
            if ((v30 & v23) != 0)
            {
              v41 = v15;
              v42 = v18 * v28 - v25 * v27;
              v43 = v4;
              v44 = v25 * v26 - v19 * v28;
              v45 = v19 * v27 - v18 * v26;
              v46 = v116 * v45 + v43 * v42 + v41 * v44;
              if (v46 <= 1.6e-15)
              {
                if (v46 >= -1.6e-15)
                {
                  *(double *)&v120 = v19;
                  *((double *)&v120 + 1) = v18;
                  v121 = v25;
                  *(double *)&v130 = v26;
                  *((double *)&v130 + 1) = v27;
                  v131 = v28;
                  *(double *)&v128 = v109;
                  *((double *)&v128 + 1) = v108;
                  v129 = v116;
                  v111 = v25;
                  v104 = v27;
                  v47 = v28;
                  v48 = v26;
                  v13 = sub_1D47B6F88((double *)&v120, (double *)&v130, (double *)&v128);
                  v26 = v48;
                  v28 = v47;
                  v27 = v104;
                  v25 = v111;
                }
                else
                {
                  v13 = -1;
                }
              }
              else
              {
                v13 = 1;
              }
              if (__OFSUB__(0, v13))
                goto LABEL_129;
              if (-v13 == v23)
              {
                v49 = v45 * 0.0 + v44 + v42 * 0.0;
                if (v49 <= 1.6e-15)
                {
                  if (v49 >= -1.6e-15)
                  {
                    *(double *)&v120 = v19;
                    *((double *)&v120 + 1) = v18;
                    v121 = v25;
                    *(double *)&v130 = v26;
                    *((double *)&v130 + 1) = v27;
                    v131 = v28;
                    v128 = xmmword_1D4927DA0;
                    v129 = 0.0;
                    v51 = v25;
                    v52 = v26;
                    v13 = sub_1D47B6F88((double *)&v120, (double *)&v130, (double *)&v128);
                    v26 = v52;
                    v25 = v51;
                    v50 = v13 == v23;
                  }
                  else
                  {
                    v50 = v23 == -1;
                  }
                }
                else
                {
                  v50 = v23 == 1;
                }
                v15 = v108;
                v4 = v109;
                v21 = v107;
                if (!v50)
                  break;
                v40 = 0;
                v39 = 1;
                v23 = -v30;
                if (__OFSUB__(0, v30))
                  goto LABEL_119;
              }
              else
              {
                v39 = 0;
                v40 = 1;
                v15 = v108;
                v4 = v109;
                v21 = v107;
                v23 = -v30;
                if (__OFSUB__(0, v30))
                  goto LABEL_119;
              }
            }
            else
            {
              v40 = 0;
              v39 = 0;
              v23 = -v30;
              if (__OFSUB__(0, v30))
                goto LABEL_119;
            }
LABEL_45:
            if ((v40 | v39) == 1)
            {
              LOBYTE(v13) = v40 ^ 1;
            }
            else
            {
              v120 = xmmword_1D4927DA0;
              v121 = 0.0;
              *(long double *)&v130 = v4;
              *((double *)&v130 + 1) = v15;
              v131 = v116;
              *(double *)&v128 = v19;
              *((double *)&v128 + 1) = v18;
              v129 = v25;
              v125 = v26;
              v126 = v27;
              v127 = v28;
              v53 = v26;
              LOBYTE(v13) = _s18VisualIntelligence10S2EdgeUtilV14vertexCrossing1a1b1c1dSbAA0C5PointV_A3JtFZ_0((double *)&v120, (double *)&v130, (double *)&v128, &v125);
              v26 = v53;
            }
            v9 ^= v13;
            v24 += 3;
            v19 = v26;
            v18 = v27;
            v25 = v28;
            if (!--v14)
              goto LABEL_48;
          }
          v39 = 0;
          v40 = 1;
          v23 = -v30;
          if (__OFSUB__(0, v30))
            goto LABEL_119;
          goto LABEL_45;
        }
        if (!v5)
          goto LABEL_135;
        LOBYTE(v13) = swift_beginAccess();
        if ((*(_BYTE *)(v5 + 40) & 1) != 0 || *(_QWORD *)(*(_QWORD *)(v5 + 56) + 16) <= 0x64uLL)
        {
LABEL_55:
          *(_QWORD *)&v120 = v5;
          BYTE8(v120) = 0;
          v121 = 0.0;
          v122 = 0;
          v123 = MEMORY[0x1E0DEE9D8];
          v124 = 0;
          v128 = xmmword_1D4927DA0;
          v129 = 0.0;
          v125 = v4;
          v126 = v15;
          v127 = v116;
          swift_retain();
          S2EdgeIndex.DataEdgeIterator.getCandidates(a:b:)(v132, v133);
          v57 = BYTE8(v120);
          v58 = *(_QWORD *)&v121;
          v59 = v124;
          v105 = v122;
          v106 = v123;
          v103 = v123 + 32;
          v60 = -2;
          v61 = v22;
          while (1)
          {
            if ((v57 & 1) != 0)
            {
              if (v58 >= v105)
                goto LABEL_117;
              v62 = v58 + 1;
            }
            else
            {
              v63 = *(_QWORD *)(v106 + 16);
              if (v59 >= v63)
              {
LABEL_117:
                swift_bridgeObjectRelease();
                swift_release();
                goto LABEL_48;
              }
              if (v59 + 1 >= v63)
              {
                ++v59;
                v62 = v58;
              }
              else
              {
                if (v59 < -1)
                  goto LABEL_131;
                v62 = *(_QWORD *)(v103 + 8 * ++v59);
              }
            }
            if (__OFSUB__(v58, 1))
              goto LABEL_120;
            if (v60 != v58 - 1)
            {
              if (v58 < 0)
                goto LABEL_126;
              if ((unint64_t)v58 >= *(_QWORD *)(*(_QWORD *)&v6 + 16))
                goto LABEL_127;
              v64 = (double *)(v16 + 24 * v58);
              v19 = *v64;
              v18 = v64[1];
              v61 = v64[2];
              v65 = v21 * *v64 + v115 * v18 + v114 * v61;
              if (v65 <= 1.6e-15)
              {
                if (v65 >= -1.6e-15)
                {
                  v128 = xmmword_1D4927DA0;
                  v129 = 0.0;
                  v125 = v4;
                  v126 = v15;
                  v127 = v116;
                  *(double *)&v118 = v19;
                  *((double *)&v118 + 1) = v18;
                  v119 = v61;
                  v66 = v21;
                  v67 = v15;
                  v68 = v61;
                  v13 = sub_1D47B6F88((double *)&v128, &v125, (double *)&v118);
                  v61 = v68;
                  v15 = v67;
                  v21 = v66;
                }
                else
                {
                  v13 = -1;
                }
              }
              else
              {
                v13 = 1;
              }
              v23 = -v13;
              if (__OFSUB__(0, v13))
                goto LABEL_128;
            }
            v69 = v58 + 1;
            if (__OFADD__(v58, 1))
              goto LABEL_121;
            if (v69 >= (uint64_t)v14)
              v70 = v14;
            else
              v70 = 0;
            v71 = v69 - v70;
            if (v71 < 0)
            {
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
              goto LABEL_133;
            }
            if ((unint64_t)v71 >= *(_QWORD *)(*(_QWORD *)&v6 + 16))
              goto LABEL_123;
            v72 = (double *)(v16 + 24 * v71);
            v73 = *v72;
            v74 = v72[1];
            v75 = v72[2];
            v76 = v21 * *v72 + v115 * v74 + v114 * v75;
            if (v76 <= 1.6e-15)
            {
              if (v76 >= -1.6e-15)
              {
                v128 = xmmword_1D4927DA0;
                v129 = 0.0;
                v125 = v4;
                v126 = v15;
                v127 = v116;
                *(double *)&v118 = v73;
                *((double *)&v118 + 1) = v74;
                v119 = v75;
                v112 = v19;
                v78 = v18;
                v79 = v4;
                v80 = v21;
                v81 = v15;
                v82 = v61;
                v83 = v75;
                v84 = v74;
                v85 = v73;
                v13 = sub_1D47B6F88((double *)&v128, &v125, (double *)&v118);
                v73 = v85;
                v74 = v84;
                v75 = v83;
                v61 = v82;
                v15 = v81;
                v21 = v80;
                v4 = v79;
                v18 = v78;
                v19 = v112;
                v77 = v13;
              }
              else
              {
                v77 = -1;
              }
            }
            else
            {
              v77 = 1;
            }
            if (__OFSUB__(0, v23))
              goto LABEL_124;
            if (v77 == -v23 && v77)
              break;
            if ((v77 & v23) != 0)
            {
              v88 = v15;
              v89 = v18 * v75 - v61 * v74;
              v90 = v4;
              v91 = v61 * v73 - v19 * v75;
              v92 = v19 * v74 - v18 * v73;
              v93 = v116 * v92 + v90 * v89 + v88 * v91;
              if (v93 <= 1.6e-15)
              {
                if (v93 >= -1.6e-15)
                {
                  *(double *)&v128 = v19;
                  *((double *)&v128 + 1) = v18;
                  v129 = v61;
                  v125 = v73;
                  v126 = v74;
                  v127 = v75;
                  *(double *)&v118 = v109;
                  *((double *)&v118 + 1) = v108;
                  v119 = v116;
                  v113 = v61;
                  v102 = v75;
                  v94 = v74;
                  v95 = v73;
                  v13 = sub_1D47B6F88((double *)&v128, &v125, (double *)&v118);
                  v73 = v95;
                  v74 = v94;
                  v75 = v102;
                  v61 = v113;
                }
                else
                {
                  v13 = -1;
                }
              }
              else
              {
                v13 = 1;
              }
              if (__OFSUB__(0, v13))
                goto LABEL_130;
              if (-v13 == v23)
              {
                v96 = v92 * 0.0 + v91 + v89 * 0.0;
                if (v96 <= 1.6e-15)
                {
                  if (v96 >= -1.6e-15)
                  {
                    *(double *)&v128 = v19;
                    *((double *)&v128 + 1) = v18;
                    v129 = v61;
                    v125 = v73;
                    v126 = v74;
                    v127 = v75;
                    v118 = xmmword_1D4927DA0;
                    v119 = 0.0;
                    v98 = v61;
                    v99 = v73;
                    v13 = sub_1D47B6F88((double *)&v128, &v125, (double *)&v118);
                    v73 = v99;
                    v61 = v98;
                    v97 = v13 == v23;
                  }
                  else
                  {
                    v97 = v23 == -1;
                  }
                }
                else
                {
                  v97 = v23 == 1;
                }
                v15 = v108;
                v4 = v109;
                v21 = v107;
                if (!v97)
                  break;
                v87 = 0;
                v86 = 1;
                v23 = -v77;
                if (__OFSUB__(0, v77))
                  goto LABEL_125;
              }
              else
              {
                v86 = 0;
                v87 = 1;
                v15 = v108;
                v4 = v109;
                v21 = v107;
                v23 = -v77;
                if (__OFSUB__(0, v77))
                  goto LABEL_125;
              }
            }
            else
            {
              v87 = 0;
              v86 = 0;
              v23 = -v77;
              if (__OFSUB__(0, v77))
                goto LABEL_125;
            }
LABEL_115:
            if ((v87 | v86) == 1)
            {
              LOBYTE(v13) = v87 ^ 1;
            }
            else
            {
              v128 = xmmword_1D4927DA0;
              v129 = 0.0;
              v125 = v4;
              v126 = v15;
              v127 = v116;
              *(double *)&v118 = v19;
              *((double *)&v118 + 1) = v18;
              v119 = v61;
              v117[0] = v73;
              v117[1] = v74;
              v117[2] = v75;
              v100 = v73;
              LOBYTE(v13) = _s18VisualIntelligence10S2EdgeUtilV14vertexCrossing1a1b1c1dSbAA0C5PointV_A3JtFZ_0((double *)&v128, &v125, (double *)&v118, v117);
              v73 = v100;
            }
            v9 ^= v13;
            v60 = v58;
            v58 = v62;
            v61 = v75;
            v18 = v74;
            v19 = v73;
          }
          v86 = 0;
          v87 = 1;
          v23 = -v77;
          if (__OFSUB__(0, v77))
            goto LABEL_125;
          goto LABEL_115;
        }
        v54 = *(_QWORD *)(v5 + 48);
        v55 = __OFADD__(v54, v14);
        v56 = v54 + v14;
        if (!v55)
        {
          if (v56 >= 31)
            sub_1D48504BC();
          goto LABEL_55;
        }
      }
      __break(1u);
LABEL_135:
      __break(1u);
      return v13;
    }
  }
  v9 = 0;
LABEL_48:
  LOBYTE(v13) = v9 & 1;
  return v13;
}

uint64_t sub_1D47C822C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  double *v16;
  double v17;
  double v18;
  double *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  double *v46;
  double v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double *v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  double *v58;
  double v59;
  uint64_t v60;
  int v61;
  char v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  unint64_t v68;
  double v69;
  double v70;
  double v71;
  BOOL v72;
  BOOL v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  double *v81;
  double v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  __int128 *v90;
  unint64_t v91;
  double *v92;
  double *v93;
  unint64_t v94;
  uint64_t v95;
  double v96;
  double *v97;
  double *v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  double *v102;
  double v103;
  double v104;
  uint64_t v105;
  double v106;
  double v107;
  double v108;
  uint64_t v109;
  double v110;
  double v111;
  double v112;
  char v113;
  __int128 v114;
  uint64_t v115;
  __int128 v116;
  double v117;
  __int128 v118;
  double v119;
  __int128 v120;
  double v121;
  __int128 v122;
  double v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;

  v4 = v3[1];
  if (!v4)
    goto LABEL_134;
  v5 = *(_QWORD *)result;
  v109 = *v3;
  v6 = *(_QWORD *)(*(_QWORD *)result + 16);
  result = swift_beginAccess();
  if ((*(_BYTE *)(v4 + 40) & 1) == 0 && *(_QWORD *)(*(_QWORD *)(v4 + 56) + 16) > 0x64uLL)
  {
    v7 = *(_QWORD *)(v4 + 48);
    v8 = __OFADD__(v7, v6);
    v9 = v7 + v6;
    if (v8)
      goto LABEL_133;
    if (v9 >= 31)
      sub_1D48504BC();
  }
  v124 = v4;
  v125 = 0;
  v126 = 0;
  v127 = 0;
  v128 = MEMORY[0x1E0DEE9D8];
  v129 = 0;
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  v10 = *(_QWORD *)(v109 + 16);
  v11 = v5 + 32;
  result = swift_retain();
  v12 = 0;
  v87 = 1;
  v99 = v5;
  v88 = v5 + 32;
  v89 = v6;
LABEL_10:
  v13 = *(_QWORD *)(v5 + 16);
  if (v12 >= v13)
  {
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
    goto LABEL_126;
  }
  v14 = v12 + 1;
  if (v12 + 1 >= v6)
    v15 = v6;
  else
    v15 = 0;
  v101 = v14 - v15;
  if (v14 - v15 >= v13)
    goto LABEL_125;
  if (!*(_QWORD *)(v109 + 16))
  {
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
    goto LABEL_130;
  }
  v94 = v12 + 1;
  v16 = (double *)(v11 + 24 * v12);
  v17 = v16[1];
  v18 = v16[2];
  v19 = (double *)(v11 + 24 * v101);
  v20 = *v19;
  v21 = v19[1];
  v98 = v19 + 1;
  v22 = v19[2];
  v24 = *(double *)(v109 + 32);
  v23 = *(double *)(v109 + 40);
  v25 = *(double *)(v109 + 48);
  v26 = v17 * v22 - v18 * v21;
  v107 = v17;
  v108 = *v16;
  *(double *)&v122 = v108;
  *((double *)&v122 + 1) = v17;
  v106 = v18;
  v123 = v18;
  v111 = v21;
  v112 = v20;
  *(double *)&v120 = v20;
  *((double *)&v120 + 1) = v21;
  v110 = v22;
  v121 = v22;
  *(double *)&v118 = v24;
  *((double *)&v118 + 1) = v23;
  v119 = v25;
  *(double *)&v116 = v26;
  *((double *)&v116 + 1) = v18 * v20 - v108 * v22;
  v103 = v108 * v21 - v17 * v20;
  v104 = *((double *)&v116 + 1);
  v117 = v103;
  result = _s18VisualIntelligence2S2V9robustCCW1a1b1c7aCrossBSiAA0C5PointV_A3JtFZ_0(&v122, &v120, (double *)&v118, (double *)&v116);
  v31 = -result;
  if (__OFSUB__(0, result))
    goto LABEL_127;
  v92 = v16 + 2;
  v32 = v16[2];
  v122 = *(_OWORD *)v16;
  v123 = v32;
  v102 = v19 + 2;
  v33 = v19[2];
  v97 = (double *)(v11 + 24 * v101);
  v120 = *(_OWORD *)v19;
  v34 = v120;
  v121 = v33;
  S2EdgeIndex.DataEdgeIterator.getCandidates(a:b:)(*(VisualIntelligence::S2Point *)(&v27 - 2), *(VisualIntelligence::S2Point *)&v28);
  v113 = v125;
  v35 = v126;
  v100 = v127;
  v37 = v128;
  v36 = v129;
  v95 = v128 + 32;
  if (v12 + 2 >= v6)
    v38 = v6;
  else
    v38 = 0;
  v91 = v12 + 2 - v38;
  v90 = (__int128 *)(v11 + 24 * v91);
  swift_retain();
  v105 = v37;
  result = swift_bridgeObjectRetain();
  v39 = -2;
  v93 = v16;
  v96 = v26;
  while (2)
  {
    v40 = v39;
    v41 = v24;
    v42 = v23;
    v43 = v25;
    v44 = v109;
    v45 = v109 + 32;
    v46 = v102;
    v48 = v103;
    v47 = v104;
    while (1)
    {
      v39 = v35;
      if ((v113 & 1) != 0)
      {
        if (v35 >= v100)
          goto LABEL_9;
        ++v35;
      }
      else
      {
        v49 = *(_QWORD *)(v105 + 16);
        if (v36 >= v49)
        {
LABEL_9:
          swift_bridgeObjectRelease();
          result = swift_release();
          ++v12;
          v11 = v88;
          v6 = v89;
          v5 = v99;
          if (v94 != v89)
            goto LABEL_10;
          swift_bridgeObjectRelease();
          swift_release();
          return v87;
        }
        if (v36 + 1 >= v49)
        {
          ++v36;
        }
        else
        {
          if (v36 < -1)
            goto LABEL_123;
          v35 = *(_QWORD *)(v95 + 8 * ++v36);
        }
      }
      if (__OFSUB__(v39, 1))
      {
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
        goto LABEL_124;
      }
      if (v40 != v39 - 1)
      {
        if (v39 >= v10)
          v50 = v10;
        else
          v50 = 0;
        v51 = v39 - v50;
        if (v51 < 0)
          goto LABEL_118;
        if ((unint64_t)v51 >= *(_QWORD *)(v44 + 16))
          goto LABEL_119;
        v52 = (double *)(v45 + 24 * v51);
        v41 = *v52;
        v42 = v52[1];
        v43 = v52[2];
        v53 = v26 * *v52 + v47 * v42 + v48 * v43;
        if (v53 <= 1.6e-15)
        {
          if (v53 >= -1.6e-15)
          {
            *(double *)&v122 = v108;
            *((double *)&v122 + 1) = v107;
            v123 = v106;
            *(double *)&v120 = v112;
            *((double *)&v120 + 1) = v111;
            v121 = v110;
            *(double *)&v118 = v41;
            *((double *)&v118 + 1) = v42;
            v119 = v43;
            result = sub_1D47B6F88((double *)&v122, (double *)&v120, (double *)&v118);
            v48 = v103;
            v47 = v104;
            v46 = v102;
            v45 = v109 + 32;
            v44 = v109;
          }
          else
          {
            result = -1;
          }
        }
        else
        {
          result = 1;
        }
        v31 = -result;
        if (__OFSUB__(0, result))
          goto LABEL_120;
      }
      v54 = v39 + 1;
      if (__OFADD__(v39, 1))
        goto LABEL_113;
      if (v54 >= v10)
        v55 = v10;
      else
        v55 = 0;
      v56 = v54 - v55;
      if (v56 < 0)
        goto LABEL_114;
      v57 = *(_QWORD *)(v44 + 16);
      if (v56 >= v57)
        goto LABEL_115;
      v58 = (double *)(v45 + 24 * v56);
      v24 = *v58;
      v23 = v58[1];
      v25 = v58[2];
      v59 = v26 * *v58 + v47 * v23 + v48 * v25;
      if (v59 <= 1.6e-15)
      {
        if (v59 >= -1.6e-15)
        {
          *(double *)&v122 = v108;
          *((double *)&v122 + 1) = v107;
          v123 = v106;
          *(double *)&v120 = v112;
          *((double *)&v120 + 1) = v111;
          v121 = v110;
          *(double *)&v118 = v24;
          *((double *)&v118 + 1) = v23;
          v119 = v25;
          result = sub_1D47B6F88((double *)&v122, (double *)&v120, (double *)&v118);
          v48 = v103;
          v47 = v104;
          v46 = v102;
          v45 = v109 + 32;
          v44 = v109;
          v60 = result;
        }
        else
        {
          v60 = -1;
        }
      }
      else
      {
        v60 = 1;
      }
      if (__OFSUB__(0, v31))
        goto LABEL_116;
      if (v60 != -v31 || !v60)
      {
        if ((v60 & v31) == 0)
        {
          v62 = 0;
          v61 = 0;
          v31 = -v60;
          if (__OFSUB__(0, v60))
            goto LABEL_117;
          goto LABEL_82;
        }
        v63 = v42 * v25 - v43 * v23;
        v64 = v43 * v24 - v41 * v25;
        v65 = v41 * v23 - v42 * v24;
        v66 = v110 * v65 + v112 * v63 + v111 * v64;
        if (v66 <= 1.6e-15)
        {
          if (v66 >= -1.6e-15)
          {
            *(double *)&v122 = v41;
            *((double *)&v122 + 1) = v42;
            v123 = v43;
            *(double *)&v120 = v24;
            *((double *)&v120 + 1) = v23;
            v121 = v25;
            *(double *)&v118 = v112;
            *((double *)&v118 + 1) = v111;
            v119 = v110;
            result = sub_1D47B6F88((double *)&v122, (double *)&v120, (double *)&v118);
            v63 = v42 * v25 - v43 * v23;
            v48 = v103;
            v47 = v104;
            v46 = v102;
            v45 = v109 + 32;
            v44 = v109;
          }
          else
          {
            result = -1;
          }
        }
        else
        {
          result = 1;
        }
        if (__OFSUB__(0, result))
          goto LABEL_122;
        if (-result != v31)
        {
          v61 = 0;
          v62 = 1;
          v26 = v96;
          v31 = -v60;
          if (__OFSUB__(0, v60))
            goto LABEL_117;
          goto LABEL_82;
        }
        v67 = v106 * v65 + v108 * v63 + v107 * v64;
        if (v67 <= 1.6e-15)
        {
          if (v67 >= -1.6e-15)
          {
            *(double *)&v122 = v41;
            *((double *)&v122 + 1) = v42;
            v123 = v43;
            *(double *)&v120 = v24;
            *((double *)&v120 + 1) = v23;
            v121 = v25;
            *(double *)&v118 = v108;
            *((double *)&v118 + 1) = v107;
            v119 = v106;
            result = sub_1D47B6F88((double *)&v122, (double *)&v120, (double *)&v118);
            v48 = v103;
            v47 = v104;
            v46 = v102;
            v45 = v109 + 32;
            v44 = v109;
            v26 = v96;
            if (result == v31)
            {
LABEL_81:
              v62 = 0;
              v61 = 1;
              v31 = -v60;
              if (__OFSUB__(0, v60))
                goto LABEL_117;
              goto LABEL_82;
            }
          }
          else
          {
            v26 = v96;
            if (v31 == -1)
              goto LABEL_81;
          }
        }
        else
        {
          v26 = v96;
          if (v31 == 1)
            goto LABEL_81;
        }
      }
      v61 = 0;
      v62 = 1;
      v31 = -v60;
      if (__OFSUB__(0, v60))
        goto LABEL_117;
LABEL_82:
      v40 = v39;
      v41 = v24;
      v42 = v23;
      v43 = v25;
      if ((v62 & 1) == 0)
      {
        if (v61)
        {
          swift_bridgeObjectRelease_n();
          swift_release_n();
          return -1;
        }
        v68 = *(_QWORD *)(v99 + 16);
        if (v101 >= v68)
          goto LABEL_121;
        v69 = v58[2];
        v70 = v58[1];
        v71 = *v58;
        v72 = *v58 == *v97 && v70 == *v98;
        v73 = v72 && v69 == *v46;
        v40 = v39;
        v41 = v24;
        v42 = v23;
        v43 = v25;
        if (v73)
          break;
      }
    }
    if (v39 >= v10)
      v74 = v10;
    else
      v74 = 0;
    v75 = v39 - v74;
    if (v75 >= v57)
      goto LABEL_128;
    v76 = v45 + 24 * v75;
    v77 = *(double *)(v76 + 16);
    v122 = *(_OWORD *)v76;
    v123 = v77;
    *(double *)&v120 = v71;
    *((double *)&v120 + 1) = v70;
    v121 = v69;
    v78 = v39 + 2;
    if (__OFADD__(v39, 2))
      goto LABEL_129;
    if (v78 >= v10)
      v79 = v10;
    else
      v79 = 0;
    v80 = v78 - v79;
    if (v80 < v57)
    {
      v81 = (double *)(v45 + 24 * v80);
      v82 = v81[2];
      v118 = *(_OWORD *)v81;
      v119 = v82;
      if (v12 >= v68)
        goto LABEL_131;
      v83 = *v92;
      v116 = *(_OWORD *)v93;
      v117 = v83;
      if (v91 >= v68)
        goto LABEL_132;
      v84 = *((_QWORD *)v90 + 2);
      v114 = *v90;
      v115 = v84;
      result = (*(uint64_t (**)(__int128 *, __int128 *, __int128 *, __int128 *, __int128 *))(a3 + 8))(&v122, &v120, &v118, &v116, &v114);
      v85 = v87;
      if (result < v87)
        v85 = result;
      v87 = v85;
      if (v85 < 0)
      {
        swift_bridgeObjectRelease_n();
        swift_release_n();
        return v87;
      }
      continue;
    }
    break;
  }
LABEL_130:
  __break(1u);
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
  return result;
}

BOOL S2Loop.intersects(with:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  char v21;
  uint64_t v22;
  _BOOL8 result;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v30;
  char v31;
  double v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  double v45;
  __int128 v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  char v53;
  uint64_t v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  char v63;
  uint64_t v64;

  v7 = *(double *)a1;
  v6 = *(double *)(a1 + 8);
  v9 = *(double *)(a1 + 16);
  v8 = *(double *)(a1 + 24);
  v11 = *(double *)(a1 + 32);
  v10 = *(double *)(a1 + 40);
  v13 = *(double *)(a1 + 48);
  v12 = *(double *)(a1 + 56);
  v43 = *(_BYTE *)(a1 + 64);
  v14 = *(double *)(v5 + 8);
  v44 = *(_QWORD *)(a1 + 72);
  v45 = *(double *)v5;
  v15 = *(double *)(v5 + 16);
  v16 = *(double *)(v5 + 24);
  v18 = *(double *)(v5 + 32);
  v17 = *(double *)(v5 + 40);
  v20 = *(double *)(v5 + 48);
  v19 = *(double *)(v5 + 56);
  v21 = *(_BYTE *)(v5 + 64);
  v22 = *(_QWORD *)(v5 + 72);
  v55 = v18;
  v56 = v17;
  v57 = v20;
  v58 = v19;
  *(double *)&v46 = v11;
  *((double *)&v46 + 1) = v10;
  v47 = v13;
  v48 = v12;
  result = S2LatLngRect.intersects(with:)(*(VisualIntelligence::S2LatLngRect *)&a2);
  if (!result)
    goto LABEL_33;
  v25 = v12 - v13;
  if (v12 - v13 >= 0.0)
  {
    v26 = v45;
    goto LABEL_11;
  }
  v25 = v25 + 6.28318531;
  v26 = v45;
  if (v25 > 0.0)
  {
LABEL_11:
    v30 = v19 - v20;
    if (v19 - v20 < 0.0 && (v24 = 0x401921FB54442D18, v30 = v30 + 6.28318531, v30 <= 0.0))
    {
      if (v25 <= -1.0)
        goto LABEL_16;
    }
    else if (v30 >= v25)
    {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  v27 = v19 - v20;
  if (v19 - v20 >= 0.0)
  {
    if (v27 >= -1.0)
      goto LABEL_16;
LABEL_14:
    v55 = v7;
    v56 = v6;
    v57 = v9;
    v58 = v8;
    v59 = v11;
    v60 = v10;
    v61 = v13;
    v62 = v12;
    v63 = v43;
    v64 = v44;
    *(double *)&v46 = v26;
    *((double *)&v46 + 1) = v14;
    v47 = v15;
    v48 = v16;
    v49 = v18;
    v50 = v17;
    v51 = v20;
    v52 = v19;
    v53 = v21;
    v54 = v22;
    v31 = S2Loop.intersects(with:)(&v46);
    return v31 & 1;
  }
  v28 = v27 + 6.28318531;
  if (v28 > 0.0 && v28 < -1.0)
    goto LABEL_14;
LABEL_16:
  v55 = v26;
  v56 = v14;
  v57 = v15;
  v58 = v16;
  v59 = v18;
  v60 = v17;
  v61 = v20;
  v62 = v19;
  v63 = v21;
  v64 = v22;
  if (!*(_QWORD *)(*(_QWORD *)&v7 + 16))
  {
    __break(1u);
    goto LABEL_39;
  }
  v32 = *(double *)(*(_QWORD *)&v7 + 48);
  v46 = *(_OWORD *)(*(_QWORD *)&v7 + 32);
  v33 = v46;
  v47 = v32;
  result = S2Loop.contains(point:)(*(VisualIntelligence::S2Point *)(&v24 - 2));
  if (!result)
    goto LABEL_22;
  if (!*(_QWORD *)(*(_QWORD *)&v7 + 16))
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (!*(_QWORD *)(*(_QWORD *)&v15 + 16))
    goto LABEL_34;
  v34 = sub_1D47CAA8C(*(double *)(*(_QWORD *)&v7 + 32), *(double *)(*(_QWORD *)&v7 + 40), *(double *)(*(_QWORD *)&v7 + 48));
  if ((v35 & 1) == 0 || (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v15 + 56) + 8 * v34) & 0x8000000000000000) != 0)
    goto LABEL_34;
LABEL_22:
  v55 = v45;
  v56 = v14;
  v57 = v15;
  v58 = v16;
  v59 = v18;
  v60 = v17;
  v61 = v20;
  v62 = v19;
  v63 = v21;
  v64 = v22;
  *(double *)&v46 = v7;
  *((double *)&v46 + 1) = v6;
  v47 = v9;
  v48 = v8;
  v49 = v11;
  v50 = v10;
  v51 = v13;
  v52 = v12;
  v53 = v43;
  v54 = v44;
  if (sub_1D47C822C((uint64_t)&v46, (uint64_t)&type metadata for WedgeIntersects, (uint64_t)&protocol witness table for WedgeIntersects) < 0)goto LABEL_34;
  if (v17 >= v18 && (v11 > v18 || v17 > v10))
    goto LABEL_33;
  v55 = v13;
  v56 = v12;
  *(double *)&v46 = v20;
  *((double *)&v46 + 1) = v19;
  result = S1Interval.contains(interval:)((VisualIntelligence::S1Interval)__PAIR128__(v37, v36));
  if (!result)
    goto LABEL_33;
  v55 = v7;
  v56 = v6;
  v57 = v9;
  v58 = v8;
  v59 = v11;
  v60 = v10;
  v61 = v13;
  v62 = v12;
  v63 = v43;
  v64 = v44;
  if (!*(_QWORD *)(*(_QWORD *)&v45 + 16))
    goto LABEL_40;
  v39 = *(double *)(*(_QWORD *)&v45 + 48);
  v46 = *(_OWORD *)(*(_QWORD *)&v45 + 32);
  v40 = v46;
  v47 = v39;
  result = S2Loop.contains(point:)(*(VisualIntelligence::S2Point *)(&v38 - 2));
  if (!result)
  {
LABEL_33:
    v31 = 0;
    return v31 & 1;
  }
  if (*(_QWORD *)(*(_QWORD *)&v45 + 16))
  {
    if (*(_QWORD *)(*(_QWORD *)&v9 + 16))
    {
      v41 = sub_1D47CAA8C(*(double *)(*(_QWORD *)&v45 + 32), *(double *)(*(_QWORD *)&v45 + 40), *(double *)(*(_QWORD *)&v45 + 48));
      if ((v42 & 1) != 0 && (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v9 + 56) + 8 * v41) & 0x8000000000000000) == 0)
        goto LABEL_33;
    }
LABEL_34:
    v31 = 1;
    return v31 & 1;
  }
LABEL_41:
  __break(1u);
  return result;
}

unint64_t S2Loop.containsNested(other:)(double *a1)
{
  double *v1;
  double v2;
  double v3;
  double v4;
  __int128 v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t result;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  __int128 *v32;
  uint64_t v33;
  BOOL v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  __int128 *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;

  v2 = *a1;
  v3 = a1[4];
  v4 = a1[5];
  v5 = *((_OWORD *)a1 + 3);
  v6 = *v1;
  v7 = *((_QWORD *)v1 + 1);
  v8 = *((_QWORD *)v1 + 2);
  v9 = *((_QWORD *)v1 + 3);
  v10 = v1[4];
  v11 = v1[5];
  v12 = *((_QWORD *)v1 + 6);
  v13 = *((_QWORD *)v1 + 7);
  v14 = *((_BYTE *)v1 + 64);
  v15 = *((_QWORD *)v1 + 9);
  if (v4 >= v3 && (v10 > v3 || v4 > v11))
    return 0;
  *(double *)&v58 = v1[6];
  *((_QWORD *)&v58 + 1) = v13;
  v56 = v5;
  result = S1Interval.contains(interval:)((VisualIntelligence::S1Interval)__PAIR128__(*(unint64_t *)&v3, v5));
  if ((result & 1) == 0)
    return 0;
  v19 = *(_QWORD *)(*(_QWORD *)&v2 + 16);
  if (v19 > 1)
    v20 = 1;
  else
    v20 = 1 - v19;
  if (v20 >= (uint64_t)v19)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v49 = *(_QWORD *)(*(_QWORD *)&v2 + 16);
  v21 = *(_QWORD *)&v2 + 32;
  if (!*(_QWORD *)(v8 + 16)
    || (result = sub_1D47CAA8C(*(double *)(v21 + 24 * v20), *(double *)(v21 + 24 * v20 + 8), *(double *)(v21 + 24 * v20 + 16)), (v22 & 1) == 0)|| (v23 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * result), (v23 & 0x8000000000000000) != 0))
  {
    *(double *)&v58 = v6;
    *((_QWORD *)&v58 + 1) = v7;
    v59 = v8;
    v60 = v9;
    v61 = v10;
    v62 = v11;
    v63 = v12;
    v64 = v13;
    v65 = v14;
    v66 = v15;
    if (v20 < *(_QWORD *)(*(_QWORD *)&v2 + 16))
    {
      v46 = (uint64_t *)(v21 + 24 * v20);
      v48 = *v46;
      v47 = v46[2];
      return S2Loop.contains(point:)(*(VisualIntelligence::S2Point *)(&v18 - 2));
    }
    goto LABEL_36;
  }
  v24 = *(_QWORD *)(*(_QWORD *)&v6 + 16);
  v25 = -1;
  if (v23 > v24)
    v25 = ~v24;
  v26 = v25 + v23;
  if (v25 + v23 >= v24)
    goto LABEL_37;
  v27 = *(_QWORD *)&v6 + 32;
  v28 = *(_QWORD *)&v6 + 32 + 24 * v26;
  v29 = *(_QWORD *)(v28 + 16);
  v58 = *(_OWORD *)v28;
  v59 = v29;
  if (v23 >= v24)
    v30 = v24;
  else
    v30 = 0;
  v31 = v23 - v30;
  if (v31 >= v24)
    goto LABEL_38;
  v32 = (__int128 *)(v27 + 24 * v31);
  v33 = *((_QWORD *)v32 + 2);
  v56 = *v32;
  v57 = v33;
  v34 = __OFADD__(v23, 1);
  v35 = v23 + 1;
  if (v34)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v35 >= v24)
    v36 = v24;
  else
    v36 = 0;
  v37 = v35 - v36;
  if (v37 >= v24)
    goto LABEL_40;
  v38 = (__int128 *)(v27 + 24 * v37);
  v39 = *((_QWORD *)v38 + 2);
  v54 = *v38;
  v55 = v39;
  v40 = *(_QWORD *)(*(_QWORD *)&v2 + 16);
  if (!v40)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v41 = *(_QWORD *)(*(_QWORD *)&v2 + 48);
  v52 = *(_OWORD *)(*(_QWORD *)&v2 + 32);
  v53 = v41;
  v42 = 2;
  if (v49 <= 2)
    v42 = 2 - v49;
  if (v42 < v40)
  {
    v43 = v21 + 24 * v42;
    v44 = *(_QWORD *)(v43 + 16);
    v50 = *(_OWORD *)v43;
    v51 = v44;
    return _s18VisualIntelligence13WedgeContainsV4test2a03ab12a22b02b2SiAA7S2PointV_A4KtFZ_0((uint64_t *)&v58, (uint64_t *)&v56, (uint64_t *)&v54, (uint64_t *)&v52, &v50) > 0;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t S2Loop.containsOrCrosses(other:)(double *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  char v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  char v51;
  uint64_t v52;

  v6 = *a1;
  v7 = *((_QWORD *)a1 + 1);
  v8 = *((_QWORD *)a1 + 2);
  v33 = *((_QWORD *)a1 + 3);
  v10 = a1[4];
  v9 = a1[5];
  v11 = *((_QWORD *)a1 + 6);
  v12 = *((_QWORD *)a1 + 7);
  v32 = *((_BYTE *)a1 + 64);
  v31 = *((_QWORD *)a1 + 9);
  v13 = *(double *)v5;
  v14 = *(double *)(v5 + 8);
  v16 = *(double *)(v5 + 16);
  v15 = *(double *)(v5 + 24);
  v17 = *(double *)(v5 + 32);
  v18 = *(double *)(v5 + 40);
  v19 = *(double *)(v5 + 48);
  v20 = *(double *)(v5 + 56);
  v21 = *(_BYTE *)(v5 + 64);
  v22 = *(_QWORD *)(v5 + 72);
  v43 = v17;
  v44 = v18;
  v45 = v19;
  v46 = v20;
  *(double *)&v34 = v10;
  *((double *)&v34 + 1) = v9;
  v35 = v11;
  v36 = v12;
  if (!S2LatLngRect.intersects(with:)(*(VisualIntelligence::S2LatLngRect *)&a2))
    return 0;
  v43 = v13;
  v44 = v14;
  v45 = v16;
  v46 = v15;
  v47 = v17;
  v48 = v18;
  v49 = v19;
  v50 = v20;
  v51 = v21;
  v52 = v22;
  *(double *)&v34 = v6;
  *((_QWORD *)&v34 + 1) = v7;
  v35 = v8;
  v36 = v33;
  v37 = v10;
  v38 = v9;
  v39 = v11;
  v40 = v12;
  v41 = v32;
  v42 = v31;
  result = sub_1D47C822C((uint64_t)&v34, (uint64_t)&type metadata for WedgeContainsOrCrosses, (uint64_t)&protocol witness table for WedgeContainsOrCrosses);
  if (result >= 1)
  {
    if (v9 < v10 || (result = 0, v17 <= v10) && v9 <= v18)
    {
      v43 = v19;
      v44 = v20;
      *(_QWORD *)&v34 = v11;
      *((_QWORD *)&v34 + 1) = v12;
      result = S1Interval.contains(interval:)((VisualIntelligence::S1Interval)__PAIR128__(v25, v24));
      if ((result & 1) != 0)
      {
        v43 = v13;
        v44 = v14;
        v45 = v16;
        v46 = v15;
        v47 = v17;
        v48 = v18;
        v49 = v19;
        v50 = v20;
        v51 = v21;
        v52 = v22;
        if (*(_QWORD *)(*(_QWORD *)&v6 + 16))
        {
          v27 = *(_QWORD *)(*(_QWORD *)&v6 + 48);
          v34 = *(_OWORD *)(*(_QWORD *)&v6 + 32);
          v28 = v34;
          v35 = v27;
          result = S2Loop.contains(point:)(*(VisualIntelligence::S2Point *)(&v26 - 2));
          if ((result & 1) != 0)
            return 1;
          if (*(_QWORD *)(*(_QWORD *)&v6 + 16))
          {
            if (*(_QWORD *)(*(_QWORD *)&v16 + 16))
            {
              v29 = sub_1D47CAA8C(*(double *)(*(_QWORD *)&v6 + 32), *(double *)(*(_QWORD *)&v6 + 40), *(double *)(*(_QWORD *)&v6 + 48));
              if ((v30 & 1) != 0
                && (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v16 + 56) + 8 * v29) & 0x8000000000000000) == 0)
              {
                return 1;
              }
            }
            return 0;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        return result;
      }
      return 0;
    }
  }
  return result;
}

VisualIntelligence::S1Angle __swiftcall S2Loop.getDistance(to:)(VisualIntelligence::S2Point to)
{
  double *v1;
  double *v2;
  uint64_t *v3;
  double *v4;
  double v5;
  double v6;
  VisualIntelligence::S1Angle result;
  uint64_t v8;
  double v9;
  unint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  double *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42[3];
  double v43[3];
  double v44[3];
  double v45[3];
  double v46;

  v4 = v2;
  v5 = *v1;
  v6 = v1[1];
  *(VisualIntelligence::S1Angle *)&result.radians = (VisualIntelligence::S1Angle)v1[2];
  v8 = *v3;
  v9 = sqrt(v5 * v5 + v6 * v6 + result.radians * result.radians);
  if (v9 != 0.0)
    v9 = 1.0 / v9;
  v10 = *(_QWORD *)(v8 + 16);
  if (!v10)
  {
    v14 = 3.14159265;
LABEL_27:
    *v4 = v14;
    return result;
  }
  v11 = 0;
  v12 = v5 * v9;
  v13 = v6 * v9;
  v14 = 3.14159265;
  v15 = (double *)v8;
  v16 = result.radians * v9;
  while (1)
  {
    v27 = ++v11 >= v10 ? v10 : 0;
    if (v11 - v27 < 0)
      break;
    if ((unint64_t)(v11 - v27) >= *(_QWORD *)(v8 + 16))
      goto LABEL_29;
    v28 = v15[4];
    v29 = v15[5];
    v30 = v15[6];
    v31 = &v15[-3 * v27];
    v32 = v31[7];
    v33 = v31[8];
    v34 = v31[9];
    v45[0] = v12;
    v45[1] = v13;
    v45[2] = v16;
    v44[0] = v28;
    v44[1] = v29;
    v44[2] = v30;
    v43[0] = v32;
    v43[1] = v33;
    v43[2] = v34;
    v35 = v28 + v32;
    v36 = v29 + v33;
    v37 = v32 - v28;
    v38 = v33 - v29;
    v24 = (v29 + v33) * (v34 - v30) - (v33 - v29) * (v30 + v34);
    v25 = v37 * (v30 + v34) - v35 * (v34 - v30);
    v26 = v35 * v38 - v37 * v36;
    if (v24 == 0.0 && v25 == 0.0 && v26 == 0.0)
    {
      v39 = fabs(v28);
      v40 = fabs(v29);
      v41 = fabs(v30);
      if (v40 >= v39)
      {
        if (v41 >= v40)
          goto LABEL_5;
        v17 = 0.0;
        v18 = 1.0;
      }
      else
      {
        if (v41 < v39)
        {
          v19 = 1.0;
          v18 = 0.0;
          v17 = 0.0;
          goto LABEL_7;
        }
LABEL_5:
        v17 = 1.0;
        v18 = 0.0;
      }
      v19 = 0.0;
LABEL_7:
      v20 = v29 * v19 - v30 * v17;
      v21 = v30 * v18 - v28 * v19;
      v22 = v28 * v17 - v29 * v18;
      v23 = sqrt(v22 * v22 + v20 * v20 + v21 * v21);
      if (v23 != 0.0)
        v23 = 1.0 / v23;
      v24 = v20 * v23;
      v25 = v21 * v23;
      v26 = v22 * v23;
    }
    v42[0] = v24;
    v42[1] = v25;
    v42[2] = v26;
    static S2EdgeUtil.getDistance(x:a:b:aCrossB:)(v45, v44, v43, v42, &v46);
    result.radians = v46;
    if (v46 < v14)
      v14 = v46;
    v15 += 3;
    if (v10 == v11)
      goto LABEL_27;
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void S2Loop.isValid.getter()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  float64x2_t *v5;
  uint64_t v6;
  float64x2_t v7;
  unint64_t v8;
  double *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  double *v17;
  double *v18;
  double v19;
  double v20;
  double v21;
  double *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v48;
  int64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  double v54;
  double v55;
  double *v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  BOOL v67;
  char v68;
  double *v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  char v79;
  uint64_t v80;
  double v81;
  double v82;
  double v83;
  uint64_t v84;
  double v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  double v89;
  double v90;
  double v91;
  double v92;
  __int128 v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  double v104;
  double v105;
  double v106;
  double *v107;
  double *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  double *v113;
  double *v114;
  double *v115;
  double *v116;
  unint64_t v117;
  unint64_t i;
  __int128 v119;
  double v120;
  double v121;
  double v122;
  double v123;
  double v124;
  double v125;
  double v126;
  double v127;
  double v128;
  double v129;
  uint64_t v130;
  double v131;
  double v132;
  double v133;
  __int128 v134;
  double v135;
  uint64_t v136;
  unsigned __int8 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2 < 3)
    return;
  v3 = v0[1];
  v4 = v1 + 32;
  v5 = (float64x2_t *)(v1 + 40);
  v6 = *(_QWORD *)(*v0 + 16);
  do
  {
    if (!v6)
    {
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
      goto LABEL_107;
    }
    v7 = vmulq_f64(*v5, *v5);
    if (fabs(v5[-1].f64[1] * v5[-1].f64[1] + v7.f64[0] + v7.f64[1] + -1.0) > 1.0e-15)
      return;
    v5 = (float64x2_t *)((char *)v5 + 24);
    --v6;
  }
  while (v6);
  v8 = 0;
  v142 = MEMORY[0x1E0DEE9E8];
  v9 = (double *)(v1 + 48);
  for (i = v2; i != v8; v2 = i)
  {
    if (v2 == v8)
      goto LABEL_100;
    if (v8 >= *(_QWORD *)(v1 + 16))
      goto LABEL_101;
    if ((sub_1D47CD330((double *)&v119, *(v9 - 2), *(v9 - 1), *v9) & 1) == 0)
    {
LABEL_90:
      swift_bridgeObjectRelease();
      return;
    }
    ++v8;
    v9 += 3;
  }
  if (!v3)
    goto LABEL_110;
  swift_beginAccess();
  if ((*(_BYTE *)(v3 + 40) & 1) == 0 && *(_QWORD *)(*(_QWORD *)(v3 + 56) + 16) > 0x64uLL)
  {
    v10 = *(_QWORD *)(v3 + 48);
    v11 = __OFADD__(v10, i);
    v12 = v10 + i;
    if (!v11)
    {
      if (v12 >= 31)
        sub_1D48504BC();
      goto LABEL_17;
    }
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
    return;
  }
LABEL_17:
  v136 = v3;
  v137 = 0;
  v138 = 0;
  v139 = 0;
  v140 = MEMORY[0x1E0DEE9D8];
  v141 = 0;
  swift_retain();
  v13 = 0;
  v109 = v1 + 32;
  v110 = v1;
  v14 = i;
  while (2)
  {
    if (v13 == v14)
      goto LABEL_102;
    v102 = v13 + 1;
    if (v13 + 1 == v14)
      v15 = 0;
    else
      v15 = v13 + 1;
    v16 = *(_QWORD *)(v1 + 16);
    if (v13 >= v16)
      goto LABEL_103;
    if (v15 >= v16)
      goto LABEL_104;
    v17 = (double *)(v4 + 24 * v13);
    v18 = v17;
    v19 = v17[1];
    v20 = *v17;
    v116 = v17;
    v21 = v17[2];
    v115 = v17 + 2;
    v22 = (double *)(v4 + 24 * v15);
    v23 = *v22;
    v24 = v22[1];
    v107 = v22 + 1;
    v108 = v18 + 1;
    v114 = v22;
    v25 = v22[2];
    v113 = v22 + 2;
    v26 = *(double *)(v1 + 32);
    v27 = *(double *)(v1 + 40);
    v28 = *(double *)(v1 + 48);
    v29 = v19 * v25 - v21 * v24;
    v92 = v21;
    *(double *)&v93 = v20;
    v89 = v25;
    v90 = v24;
    v30 = v21 * *v22 - v20 * v25;
    *((double *)&v93 + 1) = v19;
    v91 = *v22;
    v31 = v20 * v24 - v19 * *v22;
    v98 = v30;
    v99 = v29;
    v97 = v31;
    v32 = v26 * v29 + v30 * v27 + v31 * v28;
    v117 = v15;
    if (v32 <= 1.6e-15)
    {
      if (v32 < -1.6e-15)
      {
        v33 = 1;
        goto LABEL_30;
      }
      v119 = v93;
      v120 = v92;
      *(double *)&v134 = v91;
      *((double *)&v134 + 1) = v24;
      v135 = v25;
      v131 = v26;
      v132 = v27;
      v133 = v28;
      v34 = sub_1D47B6F88((double *)&v119, (double *)&v134, &v131);
      v33 = -v34;
      if (!__OFSUB__(0, v34))
        goto LABEL_30;
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
      goto LABEL_109;
    }
    v33 = -1;
LABEL_30:
    v35 = *v115;
    v119 = *(_OWORD *)v116;
    v120 = v35;
    v36 = *v113;
    v134 = *(_OWORD *)v114;
    v37 = v134;
    v135 = v36;
    S2EdgeIndex.DataEdgeIterator.getCandidates(a:b:)(*(VisualIntelligence::S2Point *)(&v31 - 2), *(VisualIntelligence::S2Point *)&v20);
    v38 = v137;
    v39 = v138;
    v40 = v141;
    v111 = v139;
    v112 = v140;
    v103 = v140 + 32;
    v41 = -2;
    v42 = v117;
    v14 = i;
    while (2)
    {
      v100 = v41;
      v101 = v33;
      v94 = v28;
      v95 = v27;
      v96 = v26;
LABEL_33:
      v43 = v39;
      if ((v38 & 1) != 0)
      {
        if (v39 >= v111)
          break;
        ++v39;
        goto LABEL_41;
      }
      v44 = *(_QWORD *)(v112 + 16);
      if (v40 < v44)
      {
        if (v40 + 1 >= v44)
        {
          ++v40;
        }
        else
        {
          if (v40 < -1)
            goto LABEL_98;
          v39 = *(_QWORD *)(v103 + 8 * ++v40);
        }
LABEL_41:
        v45 = v43 + 1;
        if (__OFADD__(v43, 1))
        {
          __break(1u);
LABEL_94:
          __break(1u);
LABEL_95:
          __break(1u);
LABEL_96:
          __break(1u);
LABEL_97:
          __break(1u);
LABEL_98:
          __break(1u);
          goto LABEL_99;
        }
        v41 = v45 % v14;
        if (v13 != v45 % v14 && v42 != v43 && v13 != v43)
        {
          v48 = *(_QWORD *)(v110 + 16);
          if (v13 >= v48)
            goto LABEL_94;
          if (v42 >= v48)
            goto LABEL_95;
          if (v43 >= v14)
            v49 = v14;
          else
            v49 = 0;
          v50 = v43 - v49;
          if (v50 >= v48)
            goto LABEL_96;
          v51 = v40;
          v52 = v38;
          v53 = *v114;
          v54 = *v107;
          v55 = *v113;
          v56 = (double *)(v109 + 24 * v50);
          v58 = *v56;
          v57 = v56[1];
          v59 = v56[2];
          v60 = *v108 * *v113 - *v115 * *v107;
          v61 = *v115 * *v114 - *v116 * *v113;
          v62 = *v116 * *v107 - *v108 * *v114;
          v63 = *v113 * v57 - *v107 * v59;
          v104 = v59;
          v64 = *v114 * v59 - *v113 * *v56;
          v106 = v57;
          v65 = *v107 * *v56 - *v114 * v57;
          v66 = atan2(sqrt((v60 * v64 - v61 * v63) * (v60 * v64 - v61 * v63)+ (v61 * v65 - v62 * v64) * (v61 * v65 - v62 * v64)+ (v62 * v63 - v60 * v65) * (v62 * v63 - v60 * v65)), v62 * v65 + v60 * v63 + v61 * v64);
          v67 = fabs(v66) <= 1.0e-15;
          v68 = fabs(v66 + -3.14159265) <= 1.0e-15 || v67;
          if (v41 >= v48)
            goto LABEL_97;
          v69 = (double *)(v109 + 24 * v41);
          v70 = v69[1];
          v71 = v69[2];
          v72 = v55 * v70 - v54 * v71;
          v105 = v71;
          v73 = v53 * v71 - v55 * *v69;
          v74 = v54 * *v69;
          v26 = *v69;
          v75 = v53 * v70;
          v76 = v70;
          v77 = v74 - v75;
          v78 = atan2(sqrt((v60 * v73 - v61 * v72) * (v60 * v73 - v61 * v72)+ (v61 * v77 - v62 * v73) * (v61 * v77 - v62 * v73)+ (v62 * v72 - v60 * v77) * (v62 * v72 - v60 * v77)), v62 * v77 + v60 * v72 + v61 * v73);
          if (fabs(v78) <= 1.0e-15)
          {
            v42 = v117;
            v14 = i;
            v38 = v52;
            v40 = v51;
            if ((v68 & 1) == 0)
              goto LABEL_64;
          }
          else
          {
            if (fabs(v78 + -3.14159265) <= 1.0e-15)
              v79 = v68;
            else
              v79 = 0;
            v42 = v117;
            v14 = i;
            v38 = v52;
            v40 = v51;
            if ((v79 & 1) == 0)
            {
LABEL_64:
              v80 = v101;
              v81 = v105;
              if (v100 != v43)
              {
                v82 = v104;
                v83 = v99 * v58 + v98 * v106 + v97 * v104;
                if (v83 <= 1.6e-15)
                {
                  if (v83 >= -1.6e-15)
                  {
                    v119 = v93;
                    v120 = v92;
                    *(double *)&v134 = v91;
                    *((double *)&v134 + 1) = v90;
                    v135 = v89;
                    v131 = v58;
                    v132 = v106;
                    v133 = v104;
                    v84 = sub_1D47B6F88((double *)&v119, (double *)&v134, &v131);
                    v82 = v104;
                    v42 = v117;
                    v14 = i;
                    v40 = v51;
                    v38 = v52;
                  }
                  else
                  {
                    v84 = -1;
                  }
                }
                else
                {
                  v84 = 1;
                }
                v80 = -v84;
                if (__OFSUB__(0, v84))
                  goto LABEL_108;
                v26 = *v69;
                v76 = v69[1];
                v95 = v106;
                v96 = v58;
                v94 = v82;
                v81 = v69[2];
              }
              v85 = v99 * v26 + v98 * v76 + v97 * v81;
              if (v85 <= 1.6e-15)
              {
                if (v85 >= -1.6e-15)
                {
                  v119 = v93;
                  v120 = v92;
                  *(double *)&v134 = v91;
                  *((double *)&v134 + 1) = v90;
                  v135 = v89;
                  v131 = v26;
                  v132 = v76;
                  v133 = v81;
                  v87 = sub_1D47B6F88((double *)&v119, (double *)&v134, &v131);
                  v42 = v117;
                  v14 = i;
                  v40 = v51;
                  v38 = v52;
                  v86 = v87;
                }
                else
                {
                  v86 = -1;
                }
              }
              else
              {
                v86 = 1;
              }
              if (__OFSUB__(0, v80))
                goto LABEL_105;
              if (v86 == -v80 && v86)
              {
                v88 = -1;
                v33 = -v86;
                if (__OFSUB__(0, v86))
                  goto LABEL_106;
              }
              else if ((v86 & v80) != 0)
              {
                v119 = v93;
                v120 = v92;
                v121 = v91;
                v122 = v90;
                v123 = v89;
                v124 = v99;
                v125 = v98;
                v126 = v97;
                v127 = v96;
                v128 = v95;
                v129 = v94;
                v130 = v80;
                *(double *)&v134 = v26;
                *((double *)&v134 + 1) = v76;
                v135 = v81;
                v88 = sub_1D472821C((double *)&v134);
                v42 = v117;
                v14 = i;
                v40 = v51;
                v38 = v52;
                v33 = -v86;
                if (__OFSUB__(0, v86))
                  goto LABEL_106;
              }
              else
              {
                v88 = 0;
                v33 = -v86;
                if (__OFSUB__(0, v86))
                  goto LABEL_106;
              }
              v27 = v76;
              v28 = v81;
              if (v88 >= 1)
              {
                swift_bridgeObjectRelease();
                swift_release();
                goto LABEL_90;
              }
              continue;
            }
          }
        }
        goto LABEL_33;
      }
      break;
    }
    ++v13;
    v4 = v109;
    v1 = v110;
    if (v102 != v14)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
}

void S2Loop.capBound.getter(double *a1@<X8>)
{
  S2LatLngRect.capBound.getter(a1);
}

BOOL S2Loop.contains(cell:)(uint64_t *a1)
{
  double *v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int128 v17;
  __int128 v18;
  BOOL v19;
  __int128 v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v27;
  double v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  char v44;
  uint64_t v45;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *((_BYTE *)a1 + 9);
  v5 = *((_BYTE *)a1 + 10);
  v6 = a1[2];
  v7 = *((_QWORD *)v1 + 2);
  v27 = *((_QWORD *)v1 + 1);
  v28 = *v1;
  v8 = *((_QWORD *)v1 + 3);
  v9 = v1[4];
  v10 = v1[5];
  v11 = *((_QWORD *)v1 + 6);
  v12 = *((_QWORD *)v1 + 7);
  v13 = *((_BYTE *)v1 + 64);
  v14 = *((_QWORD *)v1 + 9);
  *(_QWORD *)&v29 = *a1;
  BYTE8(v29) = v3;
  BYTE9(v29) = v4;
  BYTE10(v29) = v5;
  *(_QWORD *)&v30 = v6;
  S2Cell.rectBound.getter(&v40);
  v17 = v40;
  v18 = v41;
  if (*((double *)&v40 + 1) < *(double *)&v40 || (v19 = 0, v9 <= *(double *)&v40) && *((double *)&v40 + 1) <= v10)
  {
    *(_QWORD *)&v40 = v11;
    *((_QWORD *)&v40 + 1) = v12;
    v29 = v41;
    if (S1Interval.contains(interval:)((VisualIntelligence::S1Interval)__PAIR128__(v16, v15)))
    {
      v35 = v2;
      v36 = v3;
      v37 = v4;
      v38 = v5;
      v39 = v6;
      v29 = v17;
      v30 = v18;
      swift_bridgeObjectRetain();
      S2Loop.init(cell:bound:)((double *)&v29, (uint64_t)&v40);
      v20 = v40;
      v21 = v41;
      v22 = v44;
      v23 = v45;
      v24 = v42;
      v25 = v43;
      *(double *)&v40 = v28;
      *((_QWORD *)&v40 + 1) = v27;
      *(_QWORD *)&v41 = v7;
      *((_QWORD *)&v41 + 1) = v8;
      *(double *)&v42 = v9;
      *((double *)&v42 + 1) = v10;
      *(_QWORD *)&v43 = v11;
      *((_QWORD *)&v43 + 1) = v12;
      v44 = v13;
      v45 = v14;
      v29 = v20;
      v30 = v21;
      v31 = v24;
      v32 = v25;
      v33 = v22;
      v34 = v23;
      v19 = S2Loop.contains(other:)((uint64_t)&v29, *(double *)&v24, *(double *)&v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      return 0;
    }
  }
  return v19;
}

BOOL S2Loop.mayIntersect(cell:)(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  BOOL v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  double v42;
  VisualIntelligence::S2LatLngRect v43;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *((_BYTE *)a1 + 9);
  v5 = *((_BYTE *)a1 + 10);
  v6 = a1[2];
  v7 = v1[1];
  v8 = v1[2];
  v9 = v1[3];
  v10 = v1[4];
  v11 = v1[5];
  v12 = v1[6];
  v13 = v1[7];
  v14 = *((_BYTE *)v1 + 64);
  v22 = v1[9];
  v23 = *v1;
  S2Cell.rectBound.getter(&v38);
  v15 = v38;
  v16 = v39;
  v17 = v40;
  *(_QWORD *)&v38 = v10;
  *((_QWORD *)&v38 + 1) = v11;
  v39 = v12;
  v40 = v13;
  v24 = v15;
  v25 = v16;
  v26 = v17;
  if (S2LatLngRect.intersects(with:)(v43))
  {
    v33 = v2;
    v34 = v3;
    v35 = v4;
    v36 = v5;
    v37 = v6;
    v24 = v15;
    v25 = v16;
    v26 = v17;
    swift_bridgeObjectRetain();
    S2Loop.init(cell:bound:)((double *)&v24, (uint64_t)&v38);
    *(_QWORD *)&v24 = v23;
    *((_QWORD *)&v24 + 1) = v7;
    v25 = v8;
    v26 = v9;
    v27 = v10;
    v28 = v11;
    v29 = v12;
    v30 = v13;
    v31 = v14;
    v32 = v22;
    v20 = S2Loop.intersects(with:)((uint64_t)&v24, v41, v42, v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    return 0;
  }
  return v20;
}

void sub_1D47CA0FC(double *a1@<X8>)
{
  S2LatLngRect.capBound.getter(a1);
}

__n128 sub_1D47CA12C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(v1 + 32);
  v3 = *(_OWORD *)(v1 + 48);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t < infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  double *v14;
  double v15;
  double v16;
  double v17;
  double *v18;
  double v19;
  double v20;
  double v21;
  BOOL v22;

  v2 = *(_QWORD *)(*a1 + 16);
  v3 = *(_QWORD *)(*a2 + 16);
  if (v2 != v3)
    return v2 < v3;
  if (v2)
  {
    v4 = 0;
    v5 = 0;
    v6 = a1[3];
    v7 = a2[3];
    v8 = *a2 + 24 * v7;
    v9 = *a1 + 24 * v6;
    v10 = v7 - 0x7FFFFFFFFFFFFFFFLL;
    v11 = v6 - 0x7FFFFFFFFFFFFFFFLL;
    while (1)
    {
      if (v6 + v5 >= (uint64_t)v2)
        result = v2;
      else
        result = 0;
      if (v6 + v5 - result >= v2)
      {
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        return result;
      }
      if (v7 + v5 >= (uint64_t)v2)
        v13 = v2;
      else
        v13 = 0;
      if (v7 + v5 - v13 >= v2)
        goto LABEL_34;
      v14 = (double *)(v9 - 24 * result + v4);
      v16 = v14[5];
      v15 = v14[6];
      v17 = v14[4];
      v18 = (double *)(v8 - 24 * v13 + v4);
      v20 = v18[4];
      v19 = v18[5];
      v21 = v18[6];
      v22 = v17 == v20 && v16 == v19;
      if (!v22 || v15 != v21)
        break;
      result = v11 + v5;
      if (!(v11 + v5))
        goto LABEL_35;
      result = v10 + v5;
      if (!(v10 + v5))
        goto LABEL_36;
      ++v5;
      v4 += 24;
      if (v2 == v5)
        return 0;
    }
    if (v17 < v20)
      return 1;
    if (v20 >= v17)
    {
      if (v16 < v19)
        return 1;
      if (v19 >= v16)
        return v15 < v21;
    }
  }
  return 0;
}

BOOL sub_1D47CA26C(__int128 *a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  char v26;
  uint64_t v27;

  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *((_BYTE *)a1 + 64);
  v5 = *((_QWORD *)a1 + 9);
  v6 = *a2;
  v7 = *((_QWORD *)a2 + 2);
  v8 = *((_QWORD *)a2 + 3);
  v9 = *((_BYTE *)a2 + 64);
  v10 = *((_QWORD *)a2 + 9);
  v21 = *a1;
  v22 = v2;
  v23 = v3;
  v11 = a1[3];
  v24 = a1[2];
  v25 = v11;
  v26 = v4;
  v27 = v5;
  v14 = v6;
  v15 = v7;
  v16 = v8;
  v12 = a2[3];
  v17 = a2[2];
  v18 = v12;
  v19 = v9;
  v20 = v10;
  return (< infix(_:_:)(&v14, &v21) & 1) == 0;
}

BOOL sub_1D47CA2E8(__int128 *a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  char v26;
  uint64_t v27;

  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *((_BYTE *)a1 + 64);
  v5 = *((_QWORD *)a1 + 9);
  v6 = *a2;
  v7 = *((_QWORD *)a2 + 2);
  v8 = *((_QWORD *)a2 + 3);
  v9 = *((_BYTE *)a2 + 64);
  v10 = *((_QWORD *)a2 + 9);
  v21 = *a1;
  v22 = v2;
  v23 = v3;
  v11 = a1[3];
  v24 = a1[2];
  v25 = v11;
  v26 = v4;
  v27 = v5;
  v14 = v6;
  v15 = v7;
  v16 = v8;
  v12 = a2[3];
  v17 = a2[2];
  v18 = v12;
  v19 = v9;
  v20 = v10;
  return (< infix(_:_:)(&v21, &v14) & 1) == 0;
}

uint64_t sub_1D47CA364(__int128 *a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  char v26;
  uint64_t v27;

  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *((_BYTE *)a1 + 64);
  v5 = *((_QWORD *)a1 + 9);
  v6 = *a2;
  v7 = *((_QWORD *)a2 + 2);
  v8 = *((_QWORD *)a2 + 3);
  v9 = *((_BYTE *)a2 + 64);
  v10 = *((_QWORD *)a2 + 9);
  v21 = *a1;
  v22 = v2;
  v23 = v3;
  v11 = a1[3];
  v24 = a1[2];
  v25 = v11;
  v26 = v4;
  v27 = v5;
  v14 = v6;
  v15 = v7;
  v16 = v8;
  v12 = a2[3];
  v17 = a2[2];
  v18 = v12;
  v19 = v9;
  v20 = v10;
  return < infix(_:_:)(&v14, &v21) & 1;
}

unint64_t == infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  unint64_t v8;
  unint64_t result;
  uint64_t v10;
  unint64_t v11;
  int32x2_t v12;

  v2 = *(_QWORD *)(*a1 + 16);
  if (v2 != *(_QWORD *)(*a2 + 16))
    return 0;
  if (!v2)
    return 1;
  v3 = 0;
  v4 = a1[3];
  v5 = a2[3];
  v6 = *a2 + 24 * v5;
  for (i = *a1 + 24 * v4; ; i += 24)
  {
    v8 = v4 + v3 >= (uint64_t)v2 ? v2 : 0;
    result = v4 + v3 - v8;
    if (result >= v2)
      break;
    if (v5 + v3 >= (uint64_t)v2)
      result = v2;
    else
      result = 0;
    if (v5 + v3 - result >= v2)
      goto LABEL_20;
    v10 = i - 24 * v8;
    v11 = v6 - 24 * result;
    v12 = vmovn_s64(vceqq_f64(*(float64x2_t *)(v10 + 40), *(float64x2_t *)(v11 + 40)));
    result = ((*(double *)(v10 + 32) == *(double *)(v11 + 32)) & v12.i8[0]) & v12.i8[4];
    if ((_DWORD)result != 1)
      return result;
    if (!(v4 - 0x7FFFFFFFFFFFFFFFLL + v3))
      goto LABEL_21;
    if (!(v5 - 0x7FFFFFFFFFFFFFFFLL + v3))
      goto LABEL_22;
    ++v3;
    v6 += 24;
    if (v2 == v3)
      return result;
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

unint64_t sub_1D47CA4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D4922EF8();
  sub_1D49226D0();
  v4 = sub_1D4922F34();
  return sub_1D47CAC3C(a1, a2, v4);
}

unint64_t sub_1D47CA540(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1D4921008();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38];
  sub_1D4696EA4((unint64_t *)&qword_1EFEAA8D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E58]);
  v3 = sub_1D49225A4();
  return sub_1D47CC0C0(a1, v3, v2, &qword_1EFEAB8D8, MEMORY[0x1E0CB0E60]);
}

void sub_1D47CA5D8(char a1)
{
  sub_1D4922EF8();
  __asm { BR              X10 }
}

uint64_t sub_1D47CA634()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D49226D0();
  swift_bridgeObjectRelease();
  v1 = sub_1D4922F34();
  return sub_1D47CAD1C(v0, v1);
}

uint64_t sub_1D47CA6B4(uint64_t a1)
{
  return sub_1D47CABBC(a1, (void (*)(uint64_t))sub_1D469AFE8, sub_1D47CB26C);
}

uint64_t sub_1D47CA6C8(uint64_t a1)
{
  return sub_1D47CABBC(a1, (void (*)(uint64_t))sub_1D46F8BC8, sub_1D47CB604);
}

unint64_t sub_1D47CA6DC(unsigned int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x1D8262250](*(_QWORD *)(v1 + 40), a1, 4);
  return sub_1D47CBC68(a1, v3);
}

unint64_t sub_1D47CA710(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D4922EEC();
  return sub_1D47CC1F0(a1, v2);
}

unint64_t sub_1D47CA748(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v8;
  CGRect v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;

  sub_1D4922EF8();
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.width = a3;
  v10.size.height = a4;
  CGRectGetMinX(v10);
  sub_1D4922F28();
  v11.origin.x = a1;
  v11.origin.y = a2;
  v11.size.width = a3;
  v11.size.height = a4;
  CGRectGetMaxX(v11);
  sub_1D4922F28();
  v12.origin.x = a1;
  v12.origin.y = a2;
  v12.size.width = a3;
  v12.size.height = a4;
  CGRectGetMinY(v12);
  sub_1D4922F28();
  v13.origin.x = a1;
  v13.origin.y = a2;
  v13.size.width = a3;
  v13.size.height = a4;
  CGRectGetMaxY(v13);
  sub_1D4922F28();
  v8 = sub_1D4922F34();
  return sub_1D47CBD04(v8, a1, a2, a3, a4);
}

uint64_t sub_1D47CA850(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D48BE36C(*(_QWORD *)(v1 + 40), a1);
  return sub_1D47CBE10(a1, v3);
}

unint64_t sub_1D47CA880(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1D4921638();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D6ED80];
  sub_1D4696EA4(&qword_1EFEAB788, (uint64_t (*)(uint64_t))MEMORY[0x1E0D6ED80], MEMORY[0x1E0D6ED90]);
  v3 = sub_1D49225A4();
  return sub_1D47CC0C0(a1, v3, v2, &qword_1EFEAB900, MEMORY[0x1E0D6ED98]);
}

unint64_t sub_1D47CA918(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D4922B20();
  return sub_1D47CC28C(a1, v2);
}

unint64_t sub_1D47CA948(unsigned __int8 a1)
{
  uint64_t v2;

  sub_1D4922EF8();
  sub_1D49226D0();
  swift_bridgeObjectRelease();
  v2 = sub_1D4922F34();
  return sub_1D47CC350(a1, v2);
}

unint64_t sub_1D47CA9F4(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1D4920FD8();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  sub_1D4696EA4(&qword_1EFEAB770, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v3 = sub_1D49225A4();
  return sub_1D47CC0C0(a1, v3, v2, &qword_1EFEAB8F8, MEMORY[0x1E0CB09D0]);
}

unint64_t sub_1D47CAA8C(double a1, double a2, double a3)
{
  uint64_t v6;

  sub_1D4922EF8();
  sub_1D4922F28();
  v6 = sub_1D4922F34();
  return sub_1D47CC4E0(v6, a1, a2, a3);
}

unint64_t sub_1D47CAB1C(uint64_t a1)
{
  uint64_t v2;

  sub_1D492261C();
  sub_1D4922EF8();
  sub_1D49226D0();
  v2 = sub_1D4922F34();
  swift_bridgeObjectRelease();
  return sub_1D47CC564(a1, v2);
}

uint64_t sub_1D47CABA8(uint64_t a1)
{
  return sub_1D47CABBC(a1, (void (*)(uint64_t))sub_1D48BE504, (uint64_t (*)(uint64_t, uint64_t))sub_1D47CC6D8);
}

uint64_t sub_1D47CABBC(uint64_t a1, void (*a2)(uint64_t), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5;

  sub_1D4922EF8();
  a2(a1);
  sub_1D49226D0();
  swift_bridgeObjectRelease();
  v5 = sub_1D4922F34();
  return a3(a1, v5);
}

unint64_t sub_1D47CAC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1D4922E38() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1D4922E38() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_1D47CAD1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_1D47CAF00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_1D47CB26C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_1D47CB604(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1D47CBC68(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1D47CBD04(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t i;
  uint64_t v13;
  CGRect v15;
  CGRect v16;

  v6 = v5 + 64;
  v7 = -1 << *(_BYTE *)(v5 + 32);
  i = a1 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v15.origin.x = a2;
    v15.origin.y = a3;
    v15.size.width = a4;
    v15.size.height = a5;
    if (!CGRectEqualToRect(*(CGRect *)(*(_QWORD *)(v5 + 48) + 32 * i), v15))
    {
      v13 = ~v7;
      for (i = (i + 1) & v13; ((*(_QWORD *)(v6 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v13)
      {
        v16.origin.x = a2;
        v16.origin.y = a3;
        v16.size.width = a4;
        v16.size.height = a5;
        if (CGRectEqualToRect(*(CGRect *)(*(_QWORD *)(v5 + 48) + 32 * i), v16))
          break;
      }
    }
  }
  return i;
}

uint64_t sub_1D47CBE10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1D47CC0C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char v17;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  unint64_t *v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  v6 = v5;
  v19 = a1;
  v20 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      sub_1D4696EA4(v21, v20, v22);
      v17 = sub_1D49225E0();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_1D47CC1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1D47CC28C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1D47D15A8(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1D8261E9C](v9, a1);
      sub_1D47D15E4((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1D47CC350(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    while (1)
    {
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
      {
        if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) == 1)
        {
          v7 = 0xE500000000000000;
          v8 = 0x6573726170;
          v9 = a1;
          if (!a1)
            goto LABEL_17;
        }
        else
        {
          v7 = 0xE600000000000000;
          v8 = 0x686372616573;
          v9 = a1;
          if (!a1)
          {
LABEL_17:
            v11 = 0xE700000000000000;
            if (v8 != 0x636972656E6567)
              goto LABEL_19;
            goto LABEL_18;
          }
        }
      }
      else
      {
        v7 = 0xE700000000000000;
        v8 = 0x636972656E6567;
        v9 = a1;
        if (!a1)
          goto LABEL_17;
      }
      if (v9 == 1)
        v10 = 0x6573726170;
      else
        v10 = 0x686372616573;
      if (v9 == 1)
        v11 = 0xE500000000000000;
      else
        v11 = 0xE600000000000000;
      if (v8 != v10)
        goto LABEL_19;
LABEL_18:
      if (v7 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_19:
      v12 = sub_1D4922E38();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        v4 = (v4 + 1) & v6;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_1D47CC4E0(uint64_t a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  double *v8;
  double v9;
  double v10;
  BOOL v11;

  v5 = -1 << *(_BYTE *)(v4 + 32);
  result = a1 & ~v5;
  if (((*(_QWORD *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = ~v5;
    do
    {
      v8 = (double *)(*(_QWORD *)(v4 + 48) + 24 * result);
      v9 = v8[1];
      v10 = v8[2];
      v11 = *v8 == a2;
      if (v9 != a3)
        v11 = 0;
      if (v10 == a4 && v11)
        break;
      result = (result + 1) & v7;
    }
    while (((*(_QWORD *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1D47CC564(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1D492261C();
    v8 = v7;
    if (v6 == sub_1D492261C() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1D4922E38();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1D492261C();
          v15 = v14;
          if (v13 == sub_1D492261C() && v15 == v16)
            break;
          v18 = sub_1D4922E38();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1D47CC6D8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = sub_1D48BE504(*(_BYTE *)(*(_QWORD *)(v2 + 48) + v5));
    v9 = v8;
    if (v7 == sub_1D48BE504(a1) && v9 == v10)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v12 = sub_1D4922E38();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      v13 = ~v4;
      v5 = (v5 + 1) & v13;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v14 = sub_1D48BE504(*(_BYTE *)(*(_QWORD *)(v2 + 48) + v5));
          v16 = v15;
          if (v14 == sub_1D48BE504(a1) && v16 == v17)
            break;
          v19 = sub_1D4922E38();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v19 & 1) == 0)
          {
            v5 = (v5 + 1) & v13;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_1D47CC84C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1D4922EF8();
  swift_bridgeObjectRetain();
  sub_1D49226D0();
  v8 = sub_1D4922F34();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1D4922E38() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1D4922E38() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1D47CE590(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1D47CC9F8(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_1D4922EEC();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_1D47CE728(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1D47CCAF0(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v9;

  v4 = *v2;
  sub_1D4922EF8();
  sub_1D46F8BC8(a2);
  swift_bridgeObjectRetain();
  sub_1D49226D0();
  swift_bridgeObjectRelease();
  v5 = sub_1D4922F34() & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v2;
  *v2 = 0x8000000000000000;
  sub_1D47CE848(a2, v5, isUniquelyReferenced_nonNull_native);
  *v2 = v9;
  swift_bridgeObjectRelease();
  result = 1;
  *a1 = a2;
  return result;
}

uint64_t sub_1D47CD20C(unint64_t *a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  sub_1D4922EF8();
  result = a2 + HIDWORD(a2);
  if (!__CFADD__(a2, HIDWORD(a2)))
  {
    sub_1D4922F04();
    v7 = sub_1D4922F34();
    v8 = -1 << *(_BYTE *)(v5 + 32);
    v9 = v7 & ~v8;
    if (((*(_QWORD *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
    {
      v10 = *(_QWORD *)(v5 + 48);
      if (*(_QWORD *)(v10 + 8 * v9) == a2)
      {
LABEL_7:
        result = 0;
        a2 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v9);
LABEL_9:
        *a1 = a2;
        return result;
      }
      v11 = ~v8;
      while (1)
      {
        v9 = (v9 + 1) & v11;
        if (((*(_QWORD *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * v9) == a2)
          goto LABEL_7;
      }
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_1D47CF030(a2, v9, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D47CD330(double *a1, double a2, double a3, double a4)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  double *v14;
  BOOL v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  double *v19;
  uint64_t v20;

  v9 = *v4;
  sub_1D4922EF8();
  sub_1D4922F28();
  v10 = sub_1D4922F34();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v13 = ~v11;
    while (1)
    {
      v14 = (double *)(*(_QWORD *)(v9 + 48) + 24 * v12);
      v15 = *v14 == a2 && v14[1] == a3;
      if (v15 && v14[2] == a4)
        break;
      v12 = (v12 + 1) & v13;
      if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_11;
    }
    result = 0;
    v19 = (double *)(*(_QWORD *)(*v4 + 48) + 24 * v12);
    a2 = *v19;
    a3 = v19[1];
    a4 = v19[2];
  }
  else
  {
LABEL_11:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = *v4;
    *v4 = 0x8000000000000000;
    sub_1D47CF184(v12, isUniquelyReferenced_nonNull_native, a2, a3, a4);
    *v4 = v20;
    swift_bridgeObjectRelease();
    result = 1;
  }
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  return result;
}

uint64_t sub_1D47CD4A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB28);
  v3 = sub_1D4922B50();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1D4922EF8();
      sub_1D49226D0();
      result = sub_1D4922F34();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1D47CD784()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D578);
  result = sub_1D4922B50();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_1D4922EEC();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1D47CDA04()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2B0);
  v3 = sub_1D4922B50();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
      sub_1D4922EF8();
      sub_1D46F8BC8(v19);
      sub_1D49226D0();
      swift_bridgeObjectRelease();
      result = sub_1D4922F34();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1D47CDCD8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB928);
  result = sub_1D4922B50();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_40;
        if (v15 >= v10)
        {
LABEL_34:
          v26 = 1 << *(_BYTE *)(v2 + 32);
          if (v26 > 63)
            bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
          else
            *v6 = -1 << v26;
          v1 = v0;
          *(_QWORD *)(v2 + 16) = 0;
          break;
        }
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_34;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_34;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
                goto LABEL_34;
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_41;
                  if (v5 >= v10)
                    goto LABEL_34;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_1D4922EF8();
      result = v18 + HIDWORD(v18);
      if (__CFADD__(v18, HIDWORD(v18)))
      {
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      sub_1D4922F04();
      result = sub_1D4922F34();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1D47CDF88()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB920);
  result = sub_1D4922B50();
  v3 = result;
  if (*(_QWORD *)(v1 + 16))
  {
    v4 = 0;
    v29 = (_QWORD *)(v1 + 56);
    v5 = 1 << *(_BYTE *)(v1 + 32);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v1 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = result + 56;
    while (1)
    {
      if (v7)
      {
        v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v13 = v12 | (v4 << 6);
      }
      else
      {
        v14 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v8)
          goto LABEL_33;
        v15 = v29[v14];
        ++v4;
        if (!v15)
        {
          v4 = v14 + 1;
          if (v14 + 1 >= v8)
            goto LABEL_33;
          v15 = v29[v4];
          if (!v15)
          {
            v4 = v14 + 2;
            if (v14 + 2 >= v8)
              goto LABEL_33;
            v15 = v29[v4];
            if (!v15)
            {
              v16 = v14 + 3;
              if (v16 >= v8)
              {
LABEL_33:
                v28 = 1 << *(_BYTE *)(v1 + 32);
                if (v28 > 63)
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v29 = -1 << v28;
                *(_QWORD *)(v1 + 16) = 0;
                break;
              }
              v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  v4 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_39;
                  if (v4 >= v8)
                    goto LABEL_33;
                  v15 = v29[v4];
                  ++v16;
                  if (v15)
                    goto LABEL_23;
                }
              }
              v4 = v16;
            }
          }
        }
LABEL_23:
        v7 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v4 << 6);
      }
      v17 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 24 * v13);
      v18 = *v17;
      v19 = v17[1];
      v20 = v17[2];
      sub_1D4922EF8();
      sub_1D4922F28();
      result = sub_1D4922F34();
      v21 = -1 << *(_BYTE *)(v3 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v9 + 8 * (v22 >> 6))) != 0)
      {
        v10 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v9 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v9 + 8 * v23);
        }
        while (v27 == -1);
        v10 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      v11 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 24 * v10);
      *v11 = v18;
      v11[1] = v19;
      v11[2] = v20;
      ++*(_QWORD *)(v3 + 16);
    }
  }
  result = swift_release();
  *v0 = v3;
  return result;
}

uint64_t sub_1D47CE290()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB18);
  v3 = sub_1D4922B50();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v15 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v16 = v15 | (v12 << 6);
      }
      else
      {
        v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v9)
          goto LABEL_33;
        v18 = v6[v17];
        ++v12;
        if (!v18)
        {
          v12 = v17 + 1;
          if (v17 + 1 >= v9)
            goto LABEL_33;
          v18 = v6[v12];
          if (!v18)
          {
            v12 = v17 + 2;
            if (v17 + 2 >= v9)
              goto LABEL_33;
            v18 = v6[v12];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v30 = 1 << *(_BYTE *)(v2 + 32);
                if (v30 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v30;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v18 = v6[v19];
              if (!v18)
              {
                while (1)
                {
                  v12 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v18 = v6[v12];
                  ++v19;
                  if (v18)
                    goto LABEL_23;
                }
              }
              v12 = v19;
            }
          }
        }
LABEL_23:
        v8 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      v20 = *(_QWORD *)(v2 + 48) + 8 * v16;
      v21 = *(_BYTE *)v20;
      v22 = *(_DWORD *)(v20 + 4);
      sub_1D4922EF8();
      sub_1D46F8BC8(v21);
      sub_1D49226D0();
      swift_bridgeObjectRelease();
      sub_1D4922F1C();
      result = sub_1D4922F34();
      v23 = -1 << *(_BYTE *)(v4 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v10 + 8 * v25);
        }
        while (v29 == -1);
        v13 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = *(_QWORD *)(v4 + 48) + 8 * v13;
      *(_BYTE *)v14 = v21;
      *(_DWORD *)(v14 + 4) = v22;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1D47CE590(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1D47CD4A8();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1D47CF318();
      goto LABEL_22;
    }
    sub_1D47CFCCC();
  }
  v11 = *v4;
  sub_1D4922EF8();
  sub_1D49226D0();
  result = sub_1D4922F34();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1D4922E38(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1D4922E80();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1D4922E38();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1D47CE728(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1D47CD784();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1D47CF4C8();
      goto LABEL_14;
    }
    sub_1D47CFF78();
  }
  v8 = *v3;
  result = sub_1D4922EEC();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_1D4922E80();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_1D47CE848(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  unsigned __int8 v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1D47CDA04();
    }
    else
    {
      if (v7 > v6)
      {
        result = (uint64_t)sub_1D47CF65C();
        goto LABEL_10;
      }
      sub_1D47D01D8();
    }
    v8 = *v3;
    sub_1D4922EF8();
    sub_1D46F8BC8(v5);
    sub_1D49226D0();
    swift_bridgeObjectRelease();
    result = sub_1D4922F34();
    a2 = result & ~(-1 << *(_BYTE *)(v8 + 32));
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v9 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v9 + 48) + a2) = v5;
  v10 = *(_QWORD *)(v9 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x1D47CEF44);
  }
  *(_QWORD *)(v9 + 16) = v12;
  return result;
}

uint64_t sub_1D47CF030(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_15;
  if ((a3 & 1) != 0)
  {
    sub_1D47CDCD8();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1D47CF7EC();
      goto LABEL_15;
    }
    sub_1D47D0478();
  }
  v8 = *v3;
  sub_1D4922EF8();
  result = v5 + HIDWORD(v5);
  if (__CFADD__(v5, HIDWORD(v5)))
    goto LABEL_18;
  sub_1D4922F04();
  result = sub_1D4922F34();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_14:
      result = sub_1D4922E80();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_14;
      }
    }
  }
LABEL_15:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (!v14)
  {
    *(_QWORD *)(v12 + 16) = v15;
    return result;
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1D47CF184(uint64_t result, char a2, double a3, double a4, double a5)
{
  uint64_t *v5;
  unint64_t v6;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double *v15;
  BOOL v16;
  uint64_t v18;
  double *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v6 = result;
  v10 = *(_QWORD *)(*v5 + 16);
  v11 = *(_QWORD *)(*v5 + 24);
  if (v11 > v10 && (a2 & 1) != 0)
    goto LABEL_18;
  if ((a2 & 1) != 0)
  {
    sub_1D47CDF88();
  }
  else
  {
    if (v11 > v10)
    {
      result = (uint64_t)sub_1D47CF980();
      goto LABEL_18;
    }
    sub_1D47D06F8();
  }
  v12 = *v5;
  sub_1D4922EF8();
  sub_1D4922F28();
  result = sub_1D4922F34();
  v13 = -1 << *(_BYTE *)(v12 + 32);
  v6 = result & ~v13;
  if (((*(_QWORD *)(v12 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v14 = ~v13;
    do
    {
      v15 = (double *)(*(_QWORD *)(v12 + 48) + 24 * v6);
      v16 = *v15 == a3 && v15[1] == a4;
      if (v16 && v15[2] == a5)
        goto LABEL_21;
      v6 = (v6 + 1) & v14;
    }
    while (((*(_QWORD *)(v12 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
LABEL_18:
  v18 = *v5;
  *(_QWORD *)(*v5 + 8 * (v6 >> 6) + 56) |= 1 << v6;
  v19 = (double *)(*(_QWORD *)(v18 + 48) + 24 * v6);
  *v19 = a3;
  v19[1] = a4;
  v19[2] = a5;
  v20 = *(_QWORD *)(v18 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (!v21)
  {
    *(_QWORD *)(v18 + 16) = v22;
    return result;
  }
  __break(1u);
LABEL_21:
  result = sub_1D4922E80();
  __break(1u);
  return result;
}

void *sub_1D47CF318()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB28);
  v2 = *v0;
  v3 = sub_1D4922B44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D47CF4C8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D578);
  v2 = *v0;
  v3 = sub_1D4922B44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D47CF65C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2B0);
  v2 = *v0;
  v3 = sub_1D4922B44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D47CF7EC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB928);
  v2 = *v0;
  v3 = sub_1D4922B44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D47CF980()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB920);
  v2 = *v0;
  v3 = sub_1D4922B44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)(v17 + 16);
    v19 = *(_QWORD *)(v4 + 48) + v16;
    *(_OWORD *)v19 = *(_OWORD *)v17;
    *(_QWORD *)(v19 + 16) = v18;
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D47CFB28()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB18);
  v2 = *v0;
  v3 = sub_1D4922B44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_DWORD *)(v17 + 4);
    v19 = *(_QWORD *)(v4 + 48) + v16;
    *(_BYTE *)v19 = *(_BYTE *)v17;
    *(_DWORD *)(v19 + 4) = v18;
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1D47CFCCC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB28);
  v3 = sub_1D4922B50();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1D4922EF8();
    swift_bridgeObjectRetain();
    sub_1D49226D0();
    result = sub_1D4922F34();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D47CFF78()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D578);
  result = sub_1D4922B50();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_1D4922EEC();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D47D01D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D2B0);
  v3 = sub_1D4922B50();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    sub_1D4922EF8();
    sub_1D46F8BC8(v19);
    sub_1D49226D0();
    swift_bridgeObjectRelease();
    result = sub_1D4922F34();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D47D0478()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB928);
  result = sub_1D4922B50();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = v2 + 56;
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_38;
        if (v15 >= v10)
        {
LABEL_34:
          result = swift_release();
          v1 = v0;
          goto LABEL_36;
        }
        v16 = *(_QWORD *)(v6 + 8 * v15);
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_34;
          v16 = *(_QWORD *)(v6 + 8 * v5);
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_34;
            v16 = *(_QWORD *)(v6 + 8 * v5);
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
                goto LABEL_34;
              v16 = *(_QWORD *)(v6 + 8 * v17);
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_34;
                  v16 = *(_QWORD *)(v6 + 8 * v5);
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_1D4922EF8();
      result = v18 + HIDWORD(v18);
      if (__CFADD__(v18, HIDWORD(v18)))
        break;
      sub_1D4922F04();
      result = sub_1D4922F34();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_37;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
  }
  else
  {
    result = swift_release();
LABEL_36:
    *v1 = v4;
  }
  return result;
}

uint64_t sub_1D47D06F8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB920);
  result = sub_1D4922B50();
  v3 = result;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_33:
    result = swift_release();
    *v0 = v3;
    return result;
  }
  v4 = 0;
  v5 = v1 + 56;
  v6 = 1 << *(_BYTE *)(v1 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v1 + 56);
  v28 = (unint64_t)(v6 + 63) >> 6;
  v9 = result + 56;
  while (1)
  {
    if (v8)
    {
      v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v13 = v12 | (v4 << 6);
      goto LABEL_24;
    }
    v14 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v14 >= v28)
      goto LABEL_33;
    v15 = *(_QWORD *)(v5 + 8 * v14);
    ++v4;
    if (!v15)
    {
      v4 = v14 + 1;
      if (v14 + 1 >= v28)
        goto LABEL_33;
      v15 = *(_QWORD *)(v5 + 8 * v4);
      if (!v15)
      {
        v4 = v14 + 2;
        if (v14 + 2 >= v28)
          goto LABEL_33;
        v15 = *(_QWORD *)(v5 + 8 * v4);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v8 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v4 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 24 * v13);
    v18 = *v17;
    v19 = v17[1];
    v20 = v17[2];
    sub_1D4922EF8();
    sub_1D4922F28();
    result = sub_1D4922F34();
    v21 = -1 << *(_BYTE *)(v3 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v9 + 8 * (v22 >> 6))) != 0)
    {
      v10 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v9 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_34;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v23);
      }
      while (v27 == -1);
      v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    v11 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 24 * v10);
    *v11 = v18;
    v11[1] = v19;
    v11[2] = v20;
    ++*(_QWORD *)(v3 + 16);
  }
  v16 = v14 + 3;
  if (v16 >= v28)
    goto LABEL_33;
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
  {
    v4 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v28)
      goto LABEL_33;
    v15 = *(_QWORD *)(v5 + 8 * v4);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1D47D09CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB18);
  v3 = sub_1D4922B50();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v15 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v16 = v15 | (v12 << 6);
      goto LABEL_24;
    }
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v9)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v12;
    if (!v18)
    {
      v12 = v17 + 1;
      if (v17 + 1 >= v9)
        goto LABEL_33;
      v18 = *(_QWORD *)(v6 + 8 * v12);
      if (!v18)
      {
        v12 = v17 + 2;
        if (v17 + 2 >= v9)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (!v18)
          break;
      }
    }
LABEL_23:
    v8 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_24:
    v20 = *(_QWORD *)(v2 + 48) + 8 * v16;
    v21 = *(_BYTE *)v20;
    v22 = *(_DWORD *)(v20 + 4);
    sub_1D4922EF8();
    sub_1D46F8BC8(v21);
    sub_1D49226D0();
    swift_bridgeObjectRelease();
    sub_1D4922F1C();
    result = sub_1D4922F34();
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v10 + 8 * v25);
      }
      while (v29 == -1);
      v13 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    v14 = *(_QWORD *)(v4 + 48) + 8 * v13;
    *(_BYTE *)v14 = v21;
    *(_DWORD *)(v14 + 4) = v22;
    ++*(_QWORD *)(v4 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v12 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v12);
    ++v19;
    if (v18)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_1D47D0C98(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int *i;
  unsigned int v5;
  int v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EBD8);
    v3 = (_QWORD *)sub_1D4922C7C();
    for (i = (int *)(a1 + 36); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *i;
      result = sub_1D47CA6DC(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v9 = 4 * result;
      *(_DWORD *)(v3[6] + v9) = v5;
      *(_DWORD *)(v3[7] + v9) = v6;
      v10 = v3[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v3[2] = v12;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_1D47D0D6C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB7B0);
  v3 = (_QWORD *)sub_1D4922C7C();
  v5 = a1[4];
  v4 = a1[5];
  result = sub_1D47CA710(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_bridgeObjectRetain();
    result = sub_1D47CA710(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1D47D0E68(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EBD0);
  v3 = (_QWORD *)sub_1D4922C7C();
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  result = sub_1D47CA710(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v9 = a1 + 9;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v4;
    v10 = (_QWORD *)(v3[7] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *(v9 - 2);
    v5 = *(v9 - 1);
    v15 = *v9;
    swift_bridgeObjectRetain();
    result = sub_1D47CA710(v4);
    v9 = v14;
    v6 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1D47D0F74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB8F0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB750);
    v7 = (_QWORD *)sub_1D4922C7C();
    v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_1D469C5EC(v9, (uint64_t)v5, &qword_1EFEAB8F0);
      v11 = *v5;
      result = sub_1D47CA710(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v7[6] + 8 * result) = v11;
      v15 = v7[7];
      v16 = type metadata accessor for StorefrontSignals(0);
      result = sub_1D469C630(v8, v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, type metadata accessor for StorefrontSignals);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_1D47D10E0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EBE0);
  v3 = (_QWORD *)sub_1D4922C7C();
  v4 = *(_DWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  result = sub_1D47CA6DC(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v9 = (_QWORD *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    v10 = (_QWORD *)(v3[7] + 16 * result);
    *v10 = v6;
    v10[1] = v5;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *((_DWORD *)v9 - 4);
    v6 = *(v9 - 1);
    v15 = *v9;
    swift_bridgeObjectRetain();
    result = sub_1D47CA6DC(v4);
    v9 = v14;
    v5 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1D47D11EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  double *i;
  double v5;
  double v6;
  double v7;
  double v8;
  unint64_t result;
  char v10;
  double *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB7C8);
    v3 = (_QWORD *)sub_1D4922C7C();
    for (i = (double *)(a1 + 56); ; i += 4)
    {
      v5 = *(i - 3);
      v6 = *(i - 2);
      v7 = *(i - 1);
      v8 = *i;
      result = sub_1D47CAA8C(v5, v6, v7);
      if ((v10 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v11 = (double *)(v3[6] + 24 * result);
      *v11 = v5;
      v11[1] = v6;
      v11[2] = v7;
      *(double *)(v3[7] + 8 * result) = v8;
      v12 = v3[2];
      v13 = __OFADD__(v12, 1);
      v14 = v12 + 1;
      if (v13)
        goto LABEL_10;
      v3[2] = v14;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

uint64_t type metadata accessor for S2Loop.S2LoopEdgeIndex()
{
  return objc_opt_self();
}

unint64_t sub_1D47D130C()
{
  unint64_t result;

  result = qword_1EFEAB890;
  if (!qword_1EFEAB890)
  {
    result = MEMORY[0x1D82634E0](&protocol conformance descriptor for S2Loop, &type metadata for S2Loop);
    atomic_store(result, (unint64_t *)&qword_1EFEAB890);
  }
  return result;
}

uint64_t destroy for S2Loop()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for S2Loop(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for S2Loop(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t assignWithTake for S2Loop(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for S2Loop(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for S2Loop(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for S2Loop()
{
  return &type metadata for S2Loop;
}

uint64_t sub_1D47D15A8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1D47D15E4(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

int64_t sub_1D47D161C(int64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(a2 + 16);
    if ((uint64_t)v2 >= result)
      v3 = result;
    else
      v3 = *(_QWORD *)(a2 + 16);
    if (!result)
      v3 = 0;
    if (v2 >= v3)
      return a2;
  }
  __break(1u);
  return result;
}

_QWORD *S2CellId.init(latlng:)@<X0>(double *a1@<X0>, _QWORD *a2@<X8>)
{
  double v3;
  __double2 v4;
  __double2 v5;
  _QWORD *result;
  double v7[3];
  uint64_t v8;

  v3 = a1[1];
  v4 = __sincos_stret(*a1);
  v5 = __sincos_stret(v3);
  v7[0] = v4.__cosval * v5.__cosval;
  v7[1] = v4.__cosval * v5.__sinval;
  v7[2] = v4.__sinval;
  result = S2CellId.init(point:)(v7, &v8);
  *a2 = v8;
  return result;
}

uint64_t S2CellId.level.getter()
{
  unint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  BOOL v3;
  uint64_t v4;
  int v5;
  uint64_t result;

  v1 = *v0;
  if ((*v0 & 1) != 0)
    return 30;
  v2 = HIDWORD(v1);
  if ((_DWORD)v1)
    LODWORD(v2) = *v0;
  if (__OFSUB__(0, (_DWORD)v2))
  {
    __break(1u);
  }
  else
  {
    v3 = (_DWORD)v1 == 0;
    v4 = 15;
    if (v3)
      v4 = -1;
    v5 = -(int)v2 & v2;
    if ((v5 & 0x5555) != 0)
      v4 += 8;
    if ((v5 & 0x550055) != 0)
      v4 += 4;
    if ((v5 & 0x5050505) != 0)
      v4 += 2;
    if ((v5 & 0x11111111) != 0)
      return v4 + 1;
    else
      return v4;
  }
  return result;
}

uint64_t S2CellId.parent(level:)@<X0>(uint64_t result@<X0>, unint64_t *a2@<X8>)
{
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  if (__OFSUB__(30, result))
  {
    __break(1u);
    goto LABEL_14;
  }
  if (0x400000000000001ELL - result < 0)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  v3 = 2 * (30 - result);
  v4 = v3 - 65;
  v5 = 1 << (v3 & 0x3E);
  if (v3 >= 0x40)
    v5 = 0;
  v6 = 1uLL >> ((-2 * (30 - result)) & 0x3E);
  if (v3 <= 0xFFFFFFFFFFFFFFC0)
    v6 = 0;
  if (((30 - result) & 0x4000000000000000) != 0)
    v7 = v6;
  else
    v7 = v5;
  if (v4 <= 0xFFFFFFFFFFFFFF7ELL)
    v7 = 0;
  *a2 = *v2 & -(uint64_t)v7 | v7;
  return result;
}

uint64_t S2CellId.uid.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t S2CellId.childEnd(level:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *v2;
  if (__OFSUB__(0, *v2))
  {
    __break(1u);
    goto LABEL_17;
  }
  v4 = 30 - result;
  if (__OFSUB__(30, result))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (0x400000000000001ELL - result < 0)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v5 = -*v2 & v3;
  v6 = 2 * v4;
  v7 = 2 * v4 - 65;
  v8 = 1 << (v6 & 0x3E);
  if ((unint64_t)v6 >= 0x40)
    v8 = 0;
  v9 = 1uLL >> (-(char)v6 & 0x3E);
  if ((unint64_t)v6 <= 0xFFFFFFFFFFFFFFC0)
    v9 = 0;
  if (v6 < 0)
    v10 = v9;
  else
    v10 = v8;
  if (v7 <= 0xFFFFFFFFFFFFFF7ELL)
    v10 = 0;
  v11 = __CFADD__(v3, v5);
  v12 = v3 + v5;
  if (v11)
    goto LABEL_19;
  v11 = __CFADD__(v12, v10);
  v13 = v12 + v10;
  if (!v11)
  {
    *a2 = v13;
    return result;
  }
LABEL_20:
  __break(1u);
  return result;
}

void S2CellId.childBegin()(unint64_t *a1@<X8>)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  unint64_t v6;

  v2 = *v1;
  if (__OFSUB__(0, *v1))
  {
    __break(1u);
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v3 = -(uint64_t)*v1 & v2;
  v4 = v2 >= v3;
  v5 = v2 - v3;
  if (!v4)
    goto LABEL_7;
  v4 = __CFADD__(v5, v3 >> 2);
  v6 = v5 + (v3 >> 2);
  if (!v4)
  {
    *a1 = v6;
    return;
  }
LABEL_8:
  __break(1u);
}

void S2CellId.next()(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  if (__OFSUB__(0, *v1))
    __break(1u);
  else
    *a1 = *v1 + 2 * (-*v1 & *v1);
}

unint64_t *S2CellId.contains(other:)(unint64_t *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  unint64_t v6;

  v2 = *v1;
  if (__OFSUB__(0, *v1))
  {
    __break(1u);
    goto LABEL_9;
  }
  v3 = -*v1 & v2;
  v4 = __OFSUB__(v3, 1);
  v5 = v3 - 1;
  if (v4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (__OFSUB__(v2, v5))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*result < v2 - v5)
    return 0;
  v4 = __OFADD__(v2, v5);
  v6 = v2 + v5;
  if (!v4)
    return (unint64_t *)(*result <= v6);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t S2CellId.lowestOnBit.getter()
{
  _QWORD *v0;
  uint64_t result;

  if (!__OFSUB__(0, *v0))
    return -*v0 & *v0;
  __break(1u);
  return result;
}

BOOL S2CellId.isFace.getter()
{
  _QWORD *v0;

  return (*v0 & 0xFFFFFFFFFFFFFFFLL) == 0;
}

void S2CellId.parent.getter(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = *v1;
  if (__OFSUB__(0, *v1))
  {
    __break(1u);
  }
  else if (!__OFSUB__(0, 4 * (-*v1 & v2)))
  {
    *a1 = (-4 * (-*v1 & v2)) & v2 | (4 * (-*v1 & v2));
    return;
  }
  __break(1u);
}

void S2CellId.rangeMin.getter(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  if (__OFSUB__(0, *v1))
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = -*v1 & v2;
  v4 = __OFSUB__(v3, 1);
  v5 = v3 - 1;
  if (v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v4 = __OFSUB__(v2, v5);
  v6 = v2 - v5;
  if (!v4)
  {
    *a1 = v6;
    return;
  }
LABEL_7:
  __break(1u);
}

BOOL <= infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 <= *a2;
}

void S2CellId.rangeMax.getter(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  if (__OFSUB__(0, *v1))
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = -*v1 & v2;
  v4 = __OFSUB__(v3, 1);
  v5 = v3 - 1;
  if (v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v4 = __OFADD__(v2, v5);
  v6 = v2 + v5;
  if (!v4)
  {
    *a1 = v6;
    return;
  }
LABEL_7:
  __break(1u);
}

BOOL >= infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 >= *a2;
}

BOOL < infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 < *a2;
}

BOOL > infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a2 < *a1;
}

double S2CellId.point.getter@<D0>(double *a1@<X8>)
{
  double v2;
  double result;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;

  S2CellId.rawPoint.getter(&v6);
  v2 = sqrt(v6 * v6 + v7 * v7 + v8 * v8);
  if (v2 != 0.0)
    v2 = 1.0 / v2;
  result = v6 * v2;
  v4 = v7 * v2;
  v5 = v8 * v2;
  *a1 = v6 * v2;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

uint64_t static S2CellId.faceBits.getter()
{
  return 3;
}

uint64_t static S2CellId.numFaces.getter()
{
  return 6;
}

uint64_t static S2CellId.maxLevel.getter()
{
  return 30;
}

uint64_t static S2CellId.posBits.getter()
{
  return 61;
}

uint64_t static S2CellId.maxSize.getter()
{
  return 0x40000000;
}

void sub_1D47D1ACC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D4922850();
  *(_QWORD *)(v0 + 16) = 1024;
  bzero((void *)(v0 + 32), 0x2000uLL);
  v1 = sub_1D4922850();
  *(_QWORD *)(v1 + 16) = 1024;
  bzero((void *)(v1 + 32), 0x2000uLL);
  off_1ED98E9D8 = (_UNKNOWN *)v0;
  off_1ED98E9E0 = (_UNKNOWN *)v1;
}

uint64_t sub_1D47D1B44(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  char *v7;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  BOOL v17;
  uint64_t result;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (a1 == (_QWORD *)4)
  {
LABEL_2:
    v13 = a3 + 16 * a2;
    if (!__OFADD__(a3, 16 * a2))
    {
      if (qword_1ED98E9F0 == -1)
        goto LABEL_4;
      goto LABEL_59;
    }
  }
  else
  {
    v13 = (unint64_t)a1;
    while (1)
    {
      v7 = (char *)(v13 + 1);
      if (__OFADD__(v13, 1))
        break;
      if (a6 > 3)
        goto LABEL_41;
      if (qword_1ED98DCE0 != -1)
        swift_once();
      if (qword_1ED98DCC8 != -1)
        swift_once();
      v6 = (uint64_t)off_1ED98DCD0;
      if (*((_QWORD *)off_1ED98DCD0 + 2) <= a6)
        goto LABEL_42;
      v19 = (char *)off_1ED98DCD0 + 32;
      v20 = *((_QWORD *)off_1ED98DCD0 + a6 + 4);
      if (!*(_QWORD *)(v20 + 16))
        goto LABEL_43;
      v21 = (_QWORD *)qword_1ED9A49E8;
      if (!*(_QWORD *)(qword_1ED9A49E8 + 16))
        goto LABEL_44;
      a2 *= 2;
      v22 = *(_QWORD *)(v20 + 32);
      if (__OFADD__(a2, v22 >> 1))
        goto LABEL_45;
      v23 = 2 * a3;
      a5 *= 4;
      sub_1D47D1B44(v13 + 1, a2 + (v22 >> 1), v22 & 1 | v23, a4, a5, *(_QWORD *)(qword_1ED9A49E8 + 32) ^ a6);
      if (*(_QWORD *)(v6 + 16) <= a6)
        goto LABEL_46;
      v24 = *(_QWORD *)&v19[8 * a6];
      if (*(_QWORD *)(v24 + 16) < 2uLL)
        goto LABEL_47;
      if (v21[2] < 2uLL)
        goto LABEL_48;
      v25 = *(_QWORD *)(v24 + 40);
      if (__OFADD__(a2, v25 >> 1))
        goto LABEL_49;
      sub_1D47D1B44(v13 + 1, a2 + (v25 >> 1), v25 & 1 | v23, a4, a5 | 1, v21[5] ^ a6);
      if (*(_QWORD *)(v6 + 16) <= a6)
        goto LABEL_50;
      v26 = *(_QWORD *)&v19[8 * a6];
      if (*(_QWORD *)(v26 + 16) < 3uLL)
        goto LABEL_51;
      if (v21[2] < 3uLL)
        goto LABEL_52;
      v27 = *(_QWORD *)(v26 + 48);
      if (__OFADD__(a2, v27 >> 1))
        goto LABEL_53;
      sub_1D47D1B44(v13 + 1, a2 + (v27 >> 1), v27 & 1 | v23, a4, a5 | 2, v21[6] ^ a6);
      if (*(_QWORD *)(v6 + 16) <= a6)
        goto LABEL_54;
      v28 = *(_QWORD *)&v19[8 * a6];
      if (*(_QWORD *)(v28 + 16) < 4uLL)
        goto LABEL_55;
      if (v21[2] < 4uLL)
        goto LABEL_56;
      v29 = *(_QWORD *)(v28 + 56);
      v17 = __OFADD__(a2, v29 >> 1);
      a2 += v29 >> 1;
      if (v17)
        goto LABEL_57;
      a3 = v29 & 1 | v23;
      a5 |= 3uLL;
      a6 ^= v21[7];
      ++v13;
      if (v7 == (char *)4)
        goto LABEL_2;
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
  }
  __break(1u);
LABEL_59:
  swift_once();
LABEL_4:
  v14 = 4 * v13;
  v15 = 4 * v13 + a4;
  if (__OFADD__(4 * v13, a4))
  {
    __break(1u);
    goto LABEL_61;
  }
  v6 = 4 * a5;
  v7 = (char *)(4 * a5 + a6);
  if (__OFADD__(4 * a5, a6))
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  a2 = (uint64_t)&off_1ED98E9D8;
  swift_beginAccess();
  v13 = (unint64_t)off_1ED98E9D8;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  off_1ED98E9D8 = (_UNKNOWN *)v13;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    if ((v15 & 0x8000000000000000) == 0)
      goto LABEL_8;
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
LABEL_62:
  v13 = (unint64_t)sub_1D47DFA84((_QWORD *)v13);
  off_1ED98E9D8 = (_UNKNOWN *)v13;
  if ((v15 & 0x8000000000000000) != 0)
    goto LABEL_63;
LABEL_8:
  if (v15 >= *(_QWORD *)(v13 + 16))
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  *(_QWORD *)(v13 + 8 * v15 + 32) = v7;
  v17 = __OFADD__(v6, a4);
  a4 += v6;
  if (v17)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  v13 = v14 + a6;
  if (__OFADD__(v14, a6))
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  a2 = (uint64_t)&unk_1ED98E000;
  a6 = (unint64_t)off_1ED98E9E0;
  result = swift_isUniquelyReferenced_nonNull_native();
  off_1ED98E9E0 = (_UNKNOWN *)a6;
  if ((result & 1) != 0)
  {
    if ((a4 & 0x8000000000000000) == 0)
      goto LABEL_13;
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
LABEL_67:
  result = (uint64_t)sub_1D47DFA84((_QWORD *)a6);
  a6 = result;
  *(_QWORD *)(a2 + 2528) = result;
  if ((a4 & 0x8000000000000000) != 0)
    goto LABEL_68;
LABEL_13:
  if (a4 < *(_QWORD *)(a6 + 16))
  {
    *(_QWORD *)(a6 + 8 * a4 + 32) = v13;
    return swift_endAccess();
  }
LABEL_69:
  __break(1u);
  return result;
}

uint64_t S2CellId.id.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t S2CellId.init(id:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static S2CellId.none.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void static S2CellId.sentinel.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x7FFFFFFFFFFFFFFFLL;
}

uint64_t S2CellId.init(face:pos:level:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  if (__OFADD__(a2 | 1, result << 61))
  {
    __break(1u);
    goto LABEL_15;
  }
  if (__OFSUB__(30, a3))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (0x400000000000001ELL - a3 < 0)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  v4 = 2 * (30 - a3);
  v5 = v4 - 65;
  v6 = 1 << (v4 & 0x3E);
  if (v4 >= 0x40)
    v6 = 0;
  v7 = 1uLL >> ((-2 * (30 - a3)) & 0x3E);
  if (v4 <= 0xFFFFFFFFFFFFFFC0)
    v7 = 0;
  if (((30 - a3) & 0x4000000000000000) != 0)
    v8 = v7;
  else
    v8 = v6;
  if (v5 <= 0xFFFFFFFFFFFFFF7ELL)
    v8 = 0;
  *a4 = ((a2 | 1) + (result << 61)) & -(uint64_t)v8 | v8;
  return result;
}

_QWORD *S2CellId.init(point:)@<X0>(double *a1@<X0>, _QWORD *a2@<X8>)
{
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t v15;
  _QWORD *result;
  uint64_t v17[3];
  double v18[2];

  v3 = a1[1];
  v4 = a1[2];
  v5 = fabs(*a1);
  v6 = fabs(v3);
  v7 = fabs(v4);
  if (v6 < v5)
  {
    if (v7 < v5)
    {
      if (*a1 >= 0.0)
        v8 = 0;
      else
        v8 = 3;
      goto LABEL_13;
    }
    goto LABEL_8;
  }
  if (v7 >= v6)
  {
LABEL_8:
    if (v4 >= 0.0)
      v8 = 2;
    else
      v8 = 5;
    goto LABEL_13;
  }
  if (v3 >= 0.0)
    v8 = 1;
  else
    v8 = 4;
LABEL_13:
  v17[0] = *(uint64_t *)a1;
  *(double *)&v17[1] = v3;
  *(double *)&v17[2] = v4;
  static S2Projections.validFaceXyzToUv(face:point:)(v8, (double *)v17, v18);
  v9 = v18[1];
  v10 = 1.0 - sqrt(1.0 - v18[0] * 3.0);
  v11 = sqrt(v18[0] * 3.0 + 1.0) + -1.0;
  if (v18[0] >= 0.0)
    v10 = v11;
  v12 = sub_1D47D45F4(v10);
  v13 = 1.0 - sqrt(1.0 - v9 * 3.0);
  v14 = sqrt(v9 * 3.0 + 1.0) + -1.0;
  if (v9 < 0.0)
    v14 = v13;
  v15 = sub_1D47D45F4(v14);
  result = S2CellId.init(face:i:j:sameFace:)(v8, v12, v15, 1, v17);
  *a2 = v17[0];
  return result;
}

_QWORD *S2CellId.init(face:i:j:sameFace:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  double v40[3];
  double v41[2];

  if ((a4 & 1) == 0)
  {
    if (a3 < 0)
      v21 = -1;
    else
      v21 = a3;
    if (v21 >= 0x40000000)
      v21 = 0x40000000;
    v22 = -1;
    if (a2 >= -1)
      v22 = (2 * a2) | 1;
    if (a3 < 0)
      v23 = -1;
    else
      v23 = a3;
    if (v23 >= 0x40000000)
      v23 = 0x40000000;
    if (a2 >= 0x40000000)
      v24 = v23;
    else
      v24 = v21;
    if (a2 >= 0x40000000)
      v25 = 2147483649;
    else
      v25 = v22;
    v26 = __OFADD__(v25, -1073741824);
    v27 = v25 - 0x40000000;
    if (v26)
    {
LABEL_46:
      __break(1u);
      JUMPOUT(0x1D47D23D8);
    }
    v28 = (double)v27 * 9.31322575e-10;
    v29 = 2 * v24 - 0x3FFFFFFF;
    v30 = (double)v29 * 9.31322575e-10;
    v31 = 1.0;
    switch(a1)
    {
      case 0:
        break;
      case 1:
        v31 = -v28;
        v28 = 1.0;
        break;
      case 2:
        v31 = -v28;
        v28 = -v30;
        v30 = 1.0;
        break;
      case 3:
        v32 = -v30;
        v30 = -v28;
        v31 = -1.0;
        v28 = v32;
        break;
      case 4:
        v31 = (double)v29 * 9.31322575e-10;
        v30 = -v28;
        v28 = -1.0;
        break;
      default:
        v31 = (double)v29 * 9.31322575e-10;
        v30 = -1.0;
        break;
    }
    v33 = fabs(v31);
    v34 = fabs(v28);
    v35 = fabs(v30);
    if (v34 >= v33)
    {
      if (v35 < v34)
      {
        if (v28 >= 0.0)
          v36 = 1;
        else
          v36 = 4;
        goto LABEL_42;
      }
    }
    else if (v35 < v33)
    {
      if (v31 >= 0.0)
        v36 = 0;
      else
        v36 = 3;
LABEL_42:
      v40[0] = v31;
      v40[1] = v28;
      v40[2] = v30;
      static S2Projections.validFaceXyzToUv(face:point:)(v36, v40, v41);
      v37 = v41[1];
      v38 = sub_1D47D45F4(v41[0]);
      v39 = sub_1D47D45F4(v37);
      result = S2CellId.init(face:i:j:sameFace:)(v40, v36, v38, v39, 1);
      v20 = *(_QWORD *)&v40[0];
      goto LABEL_43;
    }
    if (v30 >= 0.0)
      v36 = 2;
    else
      v36 = 5;
    goto LABEL_42;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D590);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D4927B00;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = a1 << 28;
  *(_QWORD *)&v40[0] = inited;
  v10 = sub_1D47D3DA4((uint64_t)v40, a2, a3, 7, a1 & 1);
  v11 = sub_1D47D3DA4((uint64_t)v40, a2, a3, 6, v10);
  v12 = sub_1D47D3DA4((uint64_t)v40, a2, a3, 5, v11);
  v13 = sub_1D47D3DA4((uint64_t)v40, a2, a3, 4, v12);
  v14 = sub_1D47D3DA4((uint64_t)v40, a2, a3, 3, v13);
  v15 = sub_1D47D3DA4((uint64_t)v40, a2, a3, 2, v14);
  v16 = sub_1D47D3DA4((uint64_t)v40, a2, a3, 1, v15);
  sub_1D47D3DA4((uint64_t)v40, a2, a3, 0, v16);
  if (*(_QWORD *)(*(_QWORD *)&v40[0] + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_45;
  }
  v18 = *(_QWORD *)(*(_QWORD *)&v40[0] + 32);
  v17 = *(_QWORD *)(*(_QWORD *)&v40[0] + 40);
  result = (_QWORD *)swift_bridgeObjectRelease();
  if (__OFADD__(v18, v17 << 32))
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v20 = (2 * (v18 + (v17 << 32))) | 1;
LABEL_43:
  *a5 = v20;
  return result;
}

uint64_t S2CellId.rawPoint.getter@<X0>(double *a1@<X8>)
{
  unint64_t *v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  BOOL v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;

  v3 = *v1;
  v16 = 0;
  v17 = 0;
  v4 = sub_1D47D3FEC(&v17, &v16, 7, (v3 >> 61) & 1);
  v5 = sub_1D47D3FEC(&v17, &v16, 6, v4);
  v6 = sub_1D47D3FEC(&v17, &v16, 5, v5);
  v7 = sub_1D47D3FEC(&v17, &v16, 4, v6);
  v8 = sub_1D47D3FEC(&v17, &v16, 3, v7);
  v9 = sub_1D47D3FEC(&v17, &v16, 2, v8);
  v10 = sub_1D47D3FEC(&v17, &v16, 1, v9);
  result = sub_1D47D3FEC(&v17, &v16, 0, v10);
  v12 = 2 * ((v17 ^ (v3 >> 2)) & 1);
  if ((v3 & 1) != 0)
    v12 = 1;
  v13 = v12 + 2 * v17;
  if (__OFADD__(v12, 2 * v17))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (__OFADD__(v13, -1073741824))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v14 = __OFADD__(v12, 2 * v16);
  v15 = v12 + 2 * v16;
  if (v14)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (!__OFADD__(v15, -1073741824))
    return sub_1D47D26B4(v3 >> 61, v13 - 0x40000000, v15 - 0x40000000, a1);
LABEL_11:
  __break(1u);
  return result;
}

Swift::Int __swiftcall S2CellId.toFaceIJOrientation(i:j:orientation:)(Swift::Int *i, Swift::Int *j, Swift::Int_optional *orientation)
{
  unint64_t *v3;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int result;

  v7 = *v3;
  v8 = sub_1D47D3FEC((unint64_t *)i, (unint64_t *)j, 7, (*v3 >> 61) & 1);
  v9 = sub_1D47D3FEC((unint64_t *)i, (unint64_t *)j, 6, v8);
  v10 = sub_1D47D3FEC((unint64_t *)i, (unint64_t *)j, 5, v9);
  v11 = sub_1D47D3FEC((unint64_t *)i, (unint64_t *)j, 4, v10);
  v12 = sub_1D47D3FEC((unint64_t *)i, (unint64_t *)j, 3, v11);
  v13 = sub_1D47D3FEC((unint64_t *)i, (unint64_t *)j, 2, v12);
  v14 = sub_1D47D3FEC((unint64_t *)i, (unint64_t *)j, 1, v13);
  result = sub_1D47D3FEC((unint64_t *)i, (unint64_t *)j, 0, v14);
  if (orientation->is_nil)
    return v7 >> 61;
  if (!__OFSUB__(0, v7))
  {
    orientation->value = result ^ ((v7 & -(uint64_t)v7 & 0x1111111111111110) != 0);
    orientation->is_nil = 0;
    return v7 >> 61;
  }
  __break(1u);
  return result;
}

uint64_t S2CellId.isLeaf.getter()
{
  _DWORD *v0;

  return *v0 & 1;
}

uint64_t sub_1D47D26B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, double *a4@<X8>)
{
  double v4;
  BOOL v5;
  double v6;
  double v7;
  double v8;
  double v9;

  v4 = (double)a2 * 9.31322575e-10;
  v5 = v4 < 0.0;
  v6 = 1.0 - (1.0 - v4) * (1.0 - v4);
  v7 = (v4 + 1.0) * (v4 + 1.0) + -1.0;
  if (v5)
    v7 = v6;
  v8 = (double)a3 * 9.31322575e-10;
  v9 = (v8 + 1.0) * (v8 + 1.0) + -1.0;
  if (v8 < 0.0)
    v9 = 1.0 - (1.0 - v8) * (1.0 - v8);
  return static S2Projections.faceUvToXyz(face:u:v:)(a1, a4, v7 * 0.333333333, v9 * 0.333333333);
}

void S2CellId.latLng.getter(long double *a1@<X8>)
{
  double v2;
  double v3;
  long double v4;
  long double v5;
  double v6[3];

  S2CellId.rawPoint.getter(v6);
  v2 = v6[0];
  v3 = v6[1];
  v4 = atan2(v6[2], sqrt(v2 * v2 + v3 * v3));
  v5 = atan2(v3, v2);
  *a1 = v4;
  a1[1] = v5;
}

BOOL S2CellId.isValid.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BOOL8 result;

  v1 = *v0;
  if ((unint64_t)*v0 >> 62 == 3)
    return 0;
  if (!__OFSUB__(0, v1))
    return (v1 & -v1 & 0x1555555555555555) != 0;
  __break(1u);
  return result;
}

uint64_t S2CellId.face.getter()
{
  _QWORD *v0;

  return *v0 >> 61;
}

uint64_t S2CellId.pos.getter()
{
  _QWORD *v0;

  return *v0 & 0x1FFFFFFFFFFFFFFFLL;
}

unint64_t static S2CellId.lowestOnBit(forLevel:)(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  if (__OFSUB__(30, result))
  {
    __break(1u);
    goto LABEL_14;
  }
  if ((uint64_t)(0x400000000000001ELL - result) < 0)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  v1 = 2 * (30 - result);
  v2 = v1 - 65;
  v3 = 1 << (v1 & 0x3E);
  if (v1 >= 0x40)
    v3 = 0;
  v4 = 1uLL >> ((-2 * (30 - result)) & 0x3E);
  if (v1 <= 0xFFFFFFFFFFFFFFC0)
    v4 = 0;
  if (((30 - result) & 0x4000000000000000) != 0)
    v5 = v4;
  else
    v5 = v3;
  if (v2 >= 0xFFFFFFFFFFFFFF7FLL)
    return v5;
  else
    return 0;
}

Swift::Int __swiftcall S2CellId.childPosition(level:)(Swift::Int level)
{
  uint64_t *v1;
  Swift::Int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = 30 - level;
  if (__OFSUB__(30, level))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (0x400000000000001ELL - level < 0)
  {
LABEL_16:
    __break(1u);
    return level;
  }
  v3 = (2 * v2) | 1;
  v4 = *v1 >> v3;
  if (v3 >= 64)
    v4 = *v1 >> 63;
  v5 = *v1 << -(char)v3;
  if (v3 <= -64)
    LOBYTE(v5) = 0;
  if (v2 < 0)
    LOBYTE(v6) = v5;
  else
    LOBYTE(v6) = v4;
  if (v3 > 64)
    v6 = *v1 >> 63;
  if (v3 < -64)
    LOBYTE(v6) = 0;
  return v6 & 3;
}

_QWORD *S2CellId.intersects(with:)(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v2 = *result;
  if (__OFSUB__(0, *result))
  {
    __break(1u);
    goto LABEL_13;
  }
  v3 = -*result & v2;
  v4 = __OFSUB__(v3, 1);
  v5 = v3 - 1;
  if (v4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (__OFSUB__(v2, v5))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v6 = *v1;
  if (__OFSUB__(0, *v1))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = -*v1 & v6;
  v4 = __OFSUB__(v7, 1);
  v8 = v7 - 1;
  if (v4)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (__OFADD__(v6, v8))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v2 - v5 > (unint64_t)(v6 + v8))
    return 0;
  v4 = __OFADD__(v2, v5);
  v9 = v2 + v5;
  if (v4)
    goto LABEL_18;
  if (!__OFSUB__(v6, v8))
    return (_QWORD *)(v9 >= v6 - v8);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t S2CellId.childBegin(level:)@<X0>(uint64_t result@<X0>, unint64_t *a2@<X8>)
{
  unint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  unint64_t v12;
  unint64_t v13;

  v3 = *v2;
  if (__OFSUB__(0, *v2))
  {
    __break(1u);
    goto LABEL_18;
  }
  v4 = 30 - result;
  if (__OFSUB__(30, result))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (0x400000000000001ELL - result < 0)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v5 = -(uint64_t)*v2 & v3;
  v6 = 2 * v4;
  v7 = 2 * v4 - 65;
  v8 = 1 << (v6 & 0x3E);
  if ((unint64_t)v6 >= 0x40)
    v8 = 0;
  v9 = 1uLL >> (-(char)v6 & 0x3E);
  if ((unint64_t)v6 <= 0xFFFFFFFFFFFFFFC0)
    v9 = 0;
  if (v6 < 0)
    v10 = v9;
  else
    v10 = v8;
  if (v7 <= 0xFFFFFFFFFFFFFF7ELL)
    v10 = 0;
  v11 = v3 >= v5;
  v12 = v3 - v5;
  if (!v11)
    goto LABEL_20;
  v11 = __CFADD__(v12, v10);
  v13 = v12 + v10;
  if (!v11)
  {
    *a2 = v13;
    return result;
  }
LABEL_21:
  __break(1u);
  return result;
}

void S2CellId.childEnd()(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  if (__OFSUB__(0, *v1))
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = -*v1 & v2;
  v4 = __CFADD__(v2, v3);
  v5 = v2 + v3;
  if (v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v4 = __CFADD__(v5, v3 >> 2);
  v6 = v5 + (v3 >> 2);
  if (!v4)
  {
    *a1 = v6;
    return;
  }
LABEL_7:
  __break(1u);
}

void S2CellId.prev()(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  if (__OFSUB__(0, *v1))
    __break(1u);
  else
    *a1 = *v1 - 2 * (-*v1 & *v1);
}

void S2CellId.nextWrap()(unint64_t *a1@<X8>)
{
  _QWORD *v1;
  unint64_t v2;

  if (__OFSUB__(0, *v1))
  {
    __break(1u);
  }
  else
  {
    v2 = *v1 + 2 * (-*v1 & *v1);
    if (v2 >> 62 == 3)
      v2 += 0x4000000000000000;
    *a1 = v2;
  }
}

BOOL static S2CellId.unsignedLongLessThan(lhs:rhs:)(unint64_t a1, unint64_t a2)
{
  return a1 < a2;
}

void S2CellId.prevWrap()(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  if (__OFSUB__(0, *v1))
  {
    __break(1u);
  }
  else
  {
    v2 = *v1 - 2 * (-*v1 & *v1);
    if (v2 >= (uint64_t)0xC000000000000000)
      v2 -= 0x4000000000000000;
    *a1 = v2;
  }
}

uint64_t static S2CellId.begin(level:)@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  return S2CellId.childBegin(level:)(a1, a2);
}

uint64_t static S2CellId.end(level:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return S2CellId.childEnd(level:)(a1, a2);
}

uint64_t S2CellId.NumberFormatException.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

VisualIntelligence::S2CellId::NumberFormatException __swiftcall S2CellId.NumberFormatException.init(_:)(VisualIntelligence::S2CellId::NumberFormatException result)
{
  VisualIntelligence::S2CellId::NumberFormatException *v1;

  *v1 = result;
  return result;
}

uint64_t S2CellId.init(token:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t result;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *i;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  BOOL v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;

  swift_bridgeObjectRetain();
  v7 = sub_1D49226DC();
  if (v7)
  {
    v8 = v7;
    v9 = sub_1D47D44F8(v7, 0);
    swift_bridgeObjectRetain();
    v10 = sub_1D47D4440(&v24, v9 + 4, v8, a1, a2);
    result = swift_bridgeObjectRelease();
    if (v10 != (_QWORD *)v8)
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
    v12 = v9[2];
    if (v12)
    {
LABEL_4:
      if (v12 > 0x10 || a1 == 88 && a2 == 0xE100000000000000 || (result = sub_1D4922E38(), (result & 1) != 0))
      {
        swift_bridgeObjectRelease();
        result = swift_release();
        *a3 = 0;
        return result;
      }
      v23 = a3;
      v26 = v3;
      v15 = 0;
      v16 = 0;
      for (i = v9 + 5; ; i += 2)
      {
        if (v16 >= v12)
        {
          v19 = 0;
        }
        else
        {
          if (v16 >= v9[2])
            goto LABEL_35;
          v18 = sub_1D49226A0();
          v19 = strtoul((const char *)(v18 + 32), 0, 16);
          result = swift_release();
          if (v19 < 0)
            goto LABEL_36;
          if (qword_1EFEA9F28 != -1)
            result = swift_once();
          if (*((_QWORD *)off_1EFEAB940 + 2) < 0xBuLL)
            goto LABEL_37;
          v20 = *((_QWORD *)off_1EFEAB940 + 14);
          if (v15 >= v20)
          {
            if (v20 < v15)
              goto LABEL_32;
            if (qword_1EFEA9F30 != -1)
              result = swift_once();
            if (*((_QWORD *)off_1EFEAB948 + 2) < 0xBuLL)
              goto LABEL_39;
            if (*((_QWORD *)off_1EFEAB948 + 14) < v19)
            {
LABEL_32:
              swift_release();
              v24 = 0xD00000000000001DLL;
              v25 = 0x80000001D4944D80;
              sub_1D492270C();
              swift_bridgeObjectRelease();
              v22 = v24;
              v14 = v25;
              sub_1D47D4678();
              swift_allocError();
              *v13 = v22;
              goto LABEL_10;
            }
          }
        }
        if (v15 >> 60)
          break;
        v21 = __CFADD__(v19, 16 * v15);
        v15 = v19 + 16 * v15;
        if (v21)
          goto LABEL_34;
        if (++v16 == 16)
        {
          swift_release();
          result = swift_bridgeObjectRelease();
          *v23 = v15;
          return result;
        }
      }
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (v12)
      goto LABEL_4;
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_1D47D4678();
  swift_allocError();
  *v13 = 0xD000000000000022;
  v14 = 0x80000001D4944D50;
LABEL_10:
  v13[1] = v14;
  return swift_willThrow();
}

uint64_t S2CellId.token.getter()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  char v23;
  uint64_t v24;
  unint64_t v25;

  if (!*v0)
    return 88;
  sub_1D477D7DC();
  sub_1D4922790();
  v1 = sub_1D492267C();
  v3 = v2;
  swift_bridgeObjectRelease();
  v25 = v3;
  swift_bridgeObjectRetain();
  v4 = sub_1D49226DC();
  result = swift_bridgeObjectRelease();
  v6 = 16 - v4;
  if (!__OFSUB__(16, v4))
  {
    if (v6 >= 1)
    {
      v7 = v6 & ~(v6 >> 63);
      do
      {
        sub_1D4922718();
        --v7;
      }
      while (v7);
    }
    swift_bridgeObjectRetain();
    v8 = sub_1D49226DC();
    swift_bridgeObjectRelease();
    v9 = HIBYTE(v25) & 0xF;
    if ((v25 & 0x2000000000000000) == 0)
      v9 = v1 & 0xFFFFFFFFFFFFLL;
    if (!v9)
      goto LABEL_15;
    swift_bridgeObjectRetain();
    v10 = sub_1D49226E8();
    if (sub_1D492279C() == 48 && v11 == 0xE100000000000000)
    {
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v13 = sub_1D4922E38();
      result = swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
LABEL_14:
        swift_bridgeObjectRelease();
LABEL_15:
        v14 = sub_1D47D456C(v8);
        v16 = v15;
        v18 = v17;
        v20 = v19;
        swift_bridgeObjectRelease();
        v21 = MEMORY[0x1D8261A1C](v14, v16, v18, v20);
        swift_bridgeObjectRelease();
        return v21;
      }
    }
    v22 = __OFSUB__(v8--, 1);
    if (!v22)
    {
      while (v10 >= 0x4000)
      {
        v10 = sub_1D49226E8();
        if (sub_1D492279C() == 48 && v24 == 0xE100000000000000)
        {
          result = swift_bridgeObjectRelease();
          v22 = __OFSUB__(v8--, 1);
          if (v22)
            goto LABEL_28;
        }
        else
        {
          v23 = sub_1D4922E38();
          result = swift_bridgeObjectRelease();
          if ((v23 & 1) == 0)
            goto LABEL_14;
          v22 = __OFSUB__(v8--, 1);
          if (v22)
            goto LABEL_28;
        }
      }
      goto LABEL_14;
    }
LABEL_28:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1D47D3120()
{
  off_1EFEAB940 = &unk_1E97FDF00;
}

void sub_1D47D3134()
{
  off_1EFEAB948 = &unk_1E97FE048;
}

uint64_t S2CellId.getEdgeNeighbors()()
{
  unint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *v0;
  v2 = S2CellId.level.getter();
  v18 = 0;
  v19 = 0;
  v3 = 1 << (30 - v2);
  v4 = sub_1D47D3FEC((unint64_t *)&v19, (unint64_t *)&v18, 7, (v1 >> 61) & 1);
  v5 = sub_1D47D3FEC((unint64_t *)&v19, (unint64_t *)&v18, 6, v4);
  v6 = sub_1D47D3FEC((unint64_t *)&v19, (unint64_t *)&v18, 5, v5);
  v7 = sub_1D47D3FEC((unint64_t *)&v19, (unint64_t *)&v18, 4, v6);
  v8 = sub_1D47D3FEC((unint64_t *)&v19, (unint64_t *)&v18, 3, v7);
  v9 = sub_1D47D3FEC((unint64_t *)&v19, (unint64_t *)&v18, 2, v8);
  v10 = sub_1D47D3FEC((unint64_t *)&v19, (unint64_t *)&v18, 1, v9);
  v17 = v1;
  sub_1D47D3FEC((unint64_t *)&v19, (unint64_t *)&v18, 0, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB958);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1D4927560;
  v12 = v18;
  if (__OFSUB__(v18, v3))
  {
    __break(1u);
    goto LABEL_7;
  }
  v13 = (unint64_t *)result;
  v14 = v1 >> 61;
  v15 = v19;
  v16 = (unint64_t *)(result + 32);
  S2CellId.init(face:i:j:sameFace:)(v14, v19, v18 - v3, v18 - v3 >= 0, (uint64_t *)&v17);
  result = S2CellId.parent(level:)(v2, v16);
  if (__OFADD__(v15, v3))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  S2CellId.init(face:i:j:sameFace:)(v14, v15 + v3, v12, v15 + v3 < 0x40000000, (uint64_t *)&v17);
  result = S2CellId.parent(level:)(v2, v13 + 5);
  if (__OFADD__(v12, v3))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  S2CellId.init(face:i:j:sameFace:)(v14, v15, v12 + v3, v12 + v3 < 0x40000000, (uint64_t *)&v17);
  result = S2CellId.parent(level:)(v2, v13 + 6);
  if (!__OFSUB__(v15, v3))
  {
    S2CellId.init(face:i:j:sameFace:)(v14, v15 - v3, v12, v15 - v3 >= 0, (uint64_t *)&v17);
    S2CellId.parent(level:)(v2, v13 + 7);
    return (uint64_t)v13;
  }
LABEL_9:
  __break(1u);
  return result;
}

_QWORD *S2CellId.getVertexNeighbors(level:)(_QWORD *a1)
{
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  BOOL v20;
  BOOL v21;
  uint64_t v22;
  _BOOL4 v23;
  _BOOL4 v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v36;
  _BOOL4 v37;
  unint64_t v38;
  _BOOL4 v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v10 = *v2;
  v41 = 0;
  v42 = 0;
  v11 = sub_1D47D3FEC((unint64_t *)&v42, (unint64_t *)&v41, 7, (v10 >> 61) & 1);
  v12 = sub_1D47D3FEC((unint64_t *)&v42, (unint64_t *)&v41, 6, v11);
  v13 = sub_1D47D3FEC((unint64_t *)&v42, (unint64_t *)&v41, 5, v12);
  v14 = sub_1D47D3FEC((unint64_t *)&v42, (unint64_t *)&v41, 4, v13);
  v15 = sub_1D47D3FEC((unint64_t *)&v42, (unint64_t *)&v41, 3, v14);
  v16 = sub_1D47D3FEC((unint64_t *)&v42, (unint64_t *)&v41, 2, v15);
  v17 = sub_1D47D3FEC((unint64_t *)&v42, (unint64_t *)&v41, 1, v16);
  v40 = v10;
  v18 = (unint64_t)&v40;
  sub_1D47D3FEC((unint64_t *)&v42, (unint64_t *)&v41, 0, v17);
  v19 = (unint64_t)a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
    goto LABEL_53;
  }
  v20 = __OFSUB__(30, v19);
  v19 = 29 - (_QWORD)a1;
  if (v20)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v21 = v19 > 0x40;
  if (v19 >= 0x40)
    v22 = 0;
  else
    v22 = 1 << v19;
  if (v21)
    v22 = 0;
  v1 = 2 * v22;
  v3 = v42;
  if ((v42 & v22) == 0)
  {
    v8 = -2 * v22;
    if (__OFSUB__(0, v1))
    {
      __break(1u);
    }
    else if (!__OFSUB__(v42, v1))
    {
      v23 = v42 - v1 >= 0;
      goto LABEL_14;
    }
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (__OFADD__(v42, v1))
  {
    __break(1u);
    goto LABEL_62;
  }
  v23 = v42 + v1 < 0x40000000;
  v8 = 2 * v22;
LABEL_14:
  v4 = v41;
  if ((v41 & v22) != 0)
  {
    if (!__OFADD__(v41, v1))
    {
      v24 = v41 + v1 < 0x40000000;
      goto LABEL_20;
    }
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  v22 *= -2;
  if (__OFSUB__(0, v1))
    goto LABEL_71;
  if (__OFSUB__(v41, v1))
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  v24 = v41 - v1 >= 0;
  v1 = -v1;
LABEL_20:
  v19 = 30 - (_QWORD)a1;
  if (__OFSUB__(30, a1))
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (0x400000000000001ELL - (uint64_t)a1 >= 0)
  {
    v7 = 2 * v19;
    v38 = 2 * v19 - 65;
    v39 = v23;
    v37 = v24;
    if (v38 <= 0xFFFFFFFFFFFFFF7ELL)
    {
LABEL_23:
      v25 = 0;
      goto LABEL_27;
    }
    if ((v7 & 0x8000000000000000) == 0)
    {
      if (v7 >= 0x40)
        goto LABEL_23;
      v25 = 1 << (v7 & 0x3E);
LABEL_27:
      v18 = v10 & -(uint64_t)v25 | v25;
      a1 = sub_1D48AA89C(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v6 = a1[2];
      v19 = a1[3];
      v5 = v6 + 1;
      if (v6 < v19 >> 1)
        goto LABEL_28;
      goto LABEL_56;
    }
LABEL_63:
    if (v7 <= 0xFFFFFFFFFFFFFFC0)
      goto LABEL_23;
    v25 = 1uLL >> (-(char)v7 & 0x3E);
    goto LABEL_27;
  }
LABEL_55:
  __break(1u);
LABEL_56:
  a1 = sub_1D48AA89C((_QWORD *)(v19 > 1), v5, 1, a1);
LABEL_28:
  a1[2] = v5;
  v26 = (unint64_t)&a1[v6];
  *(_QWORD *)(v26 + 32) = v18;
  if (!__OFADD__(v3, v8))
  {
    v10 >>= 61;
    v36 = v3 + v8;
    S2CellId.init(face:i:j:sameFace:)(v10, v3 + v8, v4, v39, (uint64_t *)&v40);
    v8 = v38;
    if (v38 < 0xFFFFFFFFFFFFFF7FLL)
    {
LABEL_30:
      v27 = 0;
      goto LABEL_34;
    }
    if ((v7 & 0x8000000000000000) != 0)
    {
      if (v7 <= 0xFFFFFFFFFFFFFFC0)
        goto LABEL_30;
      v27 = 1uLL >> (-(char)v7 & 0x3E);
    }
    else
    {
      if (v7 >= 0x40)
        goto LABEL_30;
      v27 = 1 << (v7 & 0x3E);
    }
LABEL_34:
    v18 = v40 & -(uint64_t)v27 | v27;
    v5 = a1[2];
    v26 = a1[3];
    v6 = v5 + 1;
    if (v5 < v26 >> 1)
      goto LABEL_35;
    goto LABEL_58;
  }
  __break(1u);
LABEL_58:
  a1 = sub_1D48AA89C((_QWORD *)(v26 > 1), v6, 1, a1);
LABEL_35:
  a1[2] = v6;
  v28 = (unint64_t)&a1[v5];
  *(_QWORD *)(v28 + 32) = v18;
  v20 = __OFADD__(v4, v1);
  v29 = v4 + v1;
  if (!v20)
  {
    LODWORD(v5) = v37;
    S2CellId.init(face:i:j:sameFace:)(v10, v3, v29, v37, (uint64_t *)&v40);
    if (v8 < 0xFFFFFFFFFFFFFF7FLL)
    {
LABEL_37:
      v30 = 0;
      goto LABEL_41;
    }
    if ((v7 & 0x8000000000000000) != 0)
    {
      if (v7 <= 0xFFFFFFFFFFFFFFC0)
        goto LABEL_37;
      v30 = 1uLL >> (-(char)v7 & 0x3E);
    }
    else
    {
      if (v7 >= 0x40)
        goto LABEL_37;
      v30 = 1 << (v7 & 0x3E);
    }
LABEL_41:
    v1 = v40 & -(uint64_t)v30 | v30;
    v18 = a1[2];
    v28 = a1[3];
    v3 = v18 + 1;
    if (v18 < v28 >> 1)
      goto LABEL_42;
    goto LABEL_60;
  }
  __break(1u);
LABEL_60:
  a1 = sub_1D48AA89C((_QWORD *)(v28 > 1), v3, 1, a1);
LABEL_42:
  a1[2] = v3;
  a1[v18 + 4] = v1;
  if (((v39 | v5) & 1) == 0)
    return a1;
  S2CellId.init(face:i:j:sameFace:)(v10, v36, v29, v39 & v5, (uint64_t *)&v40);
  v22 = v40;
  if (v8 <= 0xFFFFFFFFFFFFFF7ELL)
    goto LABEL_44;
  if ((v7 & 0x8000000000000000) != 0)
  {
LABEL_73:
    if (v7 > 0xFFFFFFFFFFFFFFC0)
    {
      v31 = 1uLL >> (-(char)v7 & 0x3E);
      goto LABEL_48;
    }
    goto LABEL_44;
  }
  if (v7 < 0x40)
  {
    v31 = 1 << (v7 & 0x3E);
    goto LABEL_48;
  }
LABEL_44:
  v31 = 0;
LABEL_48:
  v32 = v22 & -(uint64_t)v31 | v31;
  v34 = a1[2];
  v33 = a1[3];
  if (v34 >= v33 >> 1)
    a1 = sub_1D48AA89C((_QWORD *)(v33 > 1), v34 + 1, 1, a1);
  a1[2] = v34 + 1;
  a1[v34 + 4] = v32;
  return a1;
}

uint64_t S2CellId.getAllNeighbors(level:)(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  BOOL v22;
  BOOL v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  BOOL v27;
  int64_t v28;
  BOOL v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  BOOL v50;
  uint64_t v51;
  char v52;
  BOOL v53;
  uint64_t v54;
  BOOL v55;
  BOOL v56;
  unint64_t v57;
  BOOL v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;

  v3 = *v1;
  v67 = 0;
  v66 = 0;
  v4 = sub_1D47D3FEC(&v67, &v66, 7, (v3 >> 61) & 1);
  v5 = sub_1D47D3FEC(&v67, &v66, 6, v4);
  v6 = sub_1D47D3FEC(&v67, &v66, 5, v5);
  v7 = sub_1D47D3FEC(&v67, &v66, 4, v6);
  v8 = sub_1D47D3FEC(&v67, &v66, 3, v7);
  v9 = sub_1D47D3FEC(&v67, &v66, 2, v8);
  v10 = sub_1D47D3FEC(&v67, &v66, 1, v9);
  sub_1D47D3FEC(&v67, &v66, 0, v10);
  v65 = v3;
  result = S2CellId.level.getter();
  v12 = 30 - a1;
  if (__OFSUB__(30, a1))
    goto LABEL_78;
  v13 = 1 << v12;
  if (v12 >= 0x40)
    v13 = 0;
  if (v12 <= 0x40)
    v14 = v13;
  else
    v14 = 0;
  v15 = -v14;
  if (__OFSUB__(0, v14))
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  v16 = 1 << (30 - result);
  v17 = -v16;
  v18 = v67 & -v16;
  v63 = v18 - v14;
  if (__OFSUB__(v18, v14))
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  if (0x400000000000001ELL - a1 < 0)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  v62 = v18 + v16;
  if (!__OFADD__(v18, v16))
  {
    v19 = v3 >> 61;
    v20 = v66 & v17;
    v21 = 2 * v12;
    v54 = (v66 & v17) - v14;
    v22 = __OFSUB__(v66 & v17, v14);
    v23 = __OFSUB__(v20, v16);
    v55 = v23;
    v56 = v22;
    v24 = v21 - 65;
    v25 = 1 << (v21 & 0x3E);
    v26 = 1uLL >> (-(char)v21 & 0x3E);
    v64 = v66 & v17;
    v51 = v20 + v16;
    v27 = __OFADD__(v20, v16);
    v53 = v27;
    v57 = v67 & -v16;
    v28 = v18 - v16;
    v29 = __OFSUB__(v18, v16);
    v58 = v28 >= 0;
    v59 = v29;
    if ((unint64_t)v21 >= 0x40)
      v25 = 0;
    if ((unint64_t)v21 <= 0xFFFFFFFFFFFFFFC0)
      v26 = 0;
    if (v21 >= 0)
      v30 = v25;
    else
      v30 = v26;
    if (v24 >= 0xFFFFFFFFFFFFFF7FLL)
      v31 = v30;
    else
      v31 = 0;
    v32 = -(uint64_t)v31;
    v33 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v52 = (uint64_t)(v20 - v16) >= 0;
    v60 = v14;
    v61 = 1 << (30 - result);
    while (1)
    {
      if (v15 < 0)
      {
        v40 = v64 + v15;
        if (__OFADD__(v64, v15))
          goto LABEL_71;
        if ((v40 & 0x8000000000000000) == 0)
          goto LABEL_51;
      }
      else
      {
        if (v15 < v16)
        {
          if (__OFADD__(v57, v15))
            goto LABEL_72;
          if (v56)
            goto LABEL_73;
          if (v55)
            goto LABEL_74;
          S2CellId.init(face:i:j:sameFace:)(v19, v57 + v15, v54, v52, (uint64_t *)&v65);
          v34 = v65;
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1D48AA89C(0, v33[2] + 1, 1, v33);
            v33 = (_QWORD *)result;
          }
          v36 = v33[2];
          v35 = v33[3];
          if (v36 >= v35 >> 1)
          {
            result = (uint64_t)sub_1D48AA89C((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
            v33 = (_QWORD *)result;
          }
          v33[2] = v36 + 1;
          v33[v36 + 4] = v34 & v32 | v31;
          if (v53)
            goto LABEL_75;
          result = (uint64_t)S2CellId.init(face:i:j:sameFace:)(v19, v57 + v15, v51, v51 < 30, (uint64_t *)&v65);
          v37 = v65;
          v39 = v33[2];
          v38 = v33[3];
          if (v39 >= v38 >> 1)
          {
            result = (uint64_t)sub_1D48AA89C((_QWORD *)(v38 > 1), v39 + 1, 1, v33);
            v33 = (_QWORD *)result;
          }
          v33[2] = v39 + 1;
          v33[v39 + 4] = v37 & v32 | v31;
          v40 = v64 + v15;
          if (__OFADD__(v64, v15))
            goto LABEL_76;
LABEL_51:
          if (v59)
            goto LABEL_70;
          v41 = 1;
          v42 = v58;
          goto LABEL_56;
        }
        v40 = v64 + v15;
        if (__OFADD__(v64, v15))
          goto LABEL_77;
        if (v40 <= 29)
          goto LABEL_51;
      }
      v41 = 0;
      v42 = 0;
LABEL_56:
      S2CellId.init(face:i:j:sameFace:)(v19, v63, v40, v42, (uint64_t *)&v65);
      v43 = v65;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_1D48AA89C(0, v33[2] + 1, 1, v33);
      v45 = v33[2];
      v44 = v33[3];
      if (v45 >= v44 >> 1)
        v33 = sub_1D48AA89C((_QWORD *)(v44 > 1), v45 + 1, 1, v33);
      v33[2] = v45 + 1;
      v33[v45 + 4] = v43 & v32 | v31;
      if (v62 < 30)
        v46 = v41;
      else
        v46 = 0;
      result = (uint64_t)S2CellId.init(face:i:j:sameFace:)(v19, v62, v40, v46, (uint64_t *)&v65);
      v47 = v65;
      v49 = v33[2];
      v48 = v33[3];
      if (v49 >= v48 >> 1)
      {
        result = (uint64_t)sub_1D48AA89C((_QWORD *)(v48 > 1), v49 + 1, 1, v33);
        v33 = (_QWORD *)result;
      }
      v16 = v61;
      v33[2] = v49 + 1;
      v33[v49 + 4] = v47 & v32 | v31;
      if (v15 >= v61)
        return (uint64_t)v33;
      v50 = __OFADD__(v15, v60);
      v15 += v60;
      if (v50)
      {
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
        goto LABEL_79;
      }
    }
  }
LABEL_82:
  __break(1u);
  return result;
}

uint64_t sub_1D47D3DA4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _UNKNOWN ***v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;

  if ((unint64_t)(a4 - 0x2000000000000000) >> 62 != 3)
  {
    __break(1u);
    goto LABEL_32;
  }
  v6 = a4;
  v5 = (_UNKNOWN ***)result;
  v8 = 4 * a4;
  if (4 * a4 < -64)
  {
    LOBYTE(v9) = 0;
    goto LABEL_21;
  }
  if ((uint64_t)v8 <= 64)
  {
    v12 = a2 >> (v8 & 0x3C);
    if (v8 >= 0x40)
      v12 = a2 >> 63;
    v13 = a2 << ((-4 * a4) & 0x3C);
    if (v8 <= 0xFFFFFFFFFFFFFFC0)
      LOBYTE(v13) = 0;
    if ((a4 & 0x2000000000000000) != 0)
      LOBYTE(v12) = v13;
    v14 = (unint64_t)(v12 & 0xF) << 6;
    v11 = __OFADD__(a5, v14);
    a5 += v14;
    if (v11)
      goto LABEL_39;
    v15 = a3 >> (v8 & 0x3C);
    if (v8 >= 0x40)
      v15 = a3 >> 63;
    v16 = a3 << ((-4 * a4) & 0x3C);
    if (v8 <= 0xFFFFFFFFFFFFFFC0)
      LOBYTE(v16) = 0;
    if ((a4 & 0x2000000000000000) != 0)
      LOBYTE(v9) = v16;
    else
      LOBYTE(v9) = v15;
LABEL_21:
    v17 = 4 * (v9 & 0xF);
    v7 = a5 + v17;
    if (!__OFADD__(a5, v17))
    {
      if ((byte_1ED98E9D0 & 1) == 0)
      {
        sub_1D47D1B44(0, 0, 0, 0, 0, 0);
        sub_1D47D1B44(0, 0, 0, 1uLL, 0, 1uLL);
        sub_1D47D1B44(0, 0, 0, 2uLL, 0, 2uLL);
        sub_1D47D1B44(0, 0, 0, 3uLL, 0, 3uLL);
        byte_1ED98E9D0 = 1;
      }
      if (qword_1ED98E9F0 == -1)
      {
LABEL_25:
        v18 = &off_1ED98E9D8;
        swift_beginAccess();
        if (v7 < 0)
        {
          __break(1u);
        }
        else if ((unint64_t)v7 < *((_QWORD *)off_1ED98E9D8 + 2))
        {
          v7 = *((_QWORD *)off_1ED98E9D8 + v7 + 4);
          v18 = *v5;
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) != 0)
          {
            if ((v6 & 0x8000000000000000) == 0)
              goto LABEL_29;
            goto LABEL_37;
          }
LABEL_36:
          result = (uint64_t)sub_1D47DFAAC(v18);
          v18 = (_UNKNOWN **)result;
          if ((v6 & 0x8000000000000000) == 0)
          {
LABEL_29:
            if (v6 >> 2 < (uint64_t)v18[2])
            {
              v18[(v6 >> 2) + 4] = (_UNKNOWN *)((unint64_t)v18[(v6 >> 2) + 4] | (v7 >> 2 << (8
                                                                                                  * (v6 & 3u))));
              *v5 = v18;
              return v7 & 3;
            }
            goto LABEL_38;
          }
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        __break(1u);
        goto LABEL_36;
      }
LABEL_33:
      swift_once();
      goto LABEL_25;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v10 = (a2 >> 57) & 0x3C0;
  v11 = __OFADD__(a5, v10);
  a5 += v10;
  if (!v11)
  {
    v9 = a3 >> 63;
    goto LABEL_21;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1D47D3FEC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  unint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  unint64_t v20;

  if (a3 + 0x4000000000000000 < 0)
  {
    __break(1u);
    goto LABEL_38;
  }
  v6 = a3;
  if ((unint64_t)(2 * a3 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    swift_once();
    goto LABEL_19;
  }
  v9 = (8 * a3) | 1;
  v10 = *v5 >> ((8 * a3) & 0x38 | 1);
  if (v9 >= 64)
    v10 = *v5 >> 63;
  v11 = *v5 << -(char)v9;
  if (v9 <= -64)
    v11 = 0;
  if ((a3 & 0x1000000000000000) == 0)
    v11 = v10;
  if (v9 > 64)
    v11 = *v5 >> 63;
  if (v9 < -64)
    v11 = 0;
  v12 = 255;
  if (a3 == 7)
    v12 = 15;
  v13 = v11 & v12;
  v8 = a4 + 4 * v13;
  if (__OFADD__(a4, 4 * v13))
    goto LABEL_39;
  v4 = a2;
  v7 = a1;
  if ((byte_1ED98E9D0 & 1) == 0)
  {
    sub_1D47D1B44(0, 0, 0, 0, 0, 0);
    sub_1D47D1B44(0, 0, 0, 1uLL, 0, 1uLL);
    sub_1D47D1B44(0, 0, 0, 2uLL, 0, 2uLL);
    sub_1D47D1B44(0, 0, 0, 3uLL, 0, 3uLL);
    byte_1ED98E9D0 = 1;
  }
  if (qword_1ED98E9F0 != -1)
    goto LABEL_40;
LABEL_19:
  swift_beginAccess();
  if ((v8 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_42;
  }
  LOBYTE(v14) = (_BYTE)off_1ED98E9E0;
  v15 = *((_QWORD *)off_1ED98E9E0 + 2);
  if (v8 >= v15)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v15 = (unint64_t)(v6 - 0x2000000000000000) >> 62;
  if (v15 != 3)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v14 = *((_QWORD *)off_1ED98E9E0 + v8 + 4);
  v15 = 4 * v6;
  if (4 * v6 <= -65)
  {
LABEL_23:
    v17 = v14 >> 63;
    goto LABEL_29;
  }
  if ((uint64_t)v15 > 64)
    goto LABEL_25;
  v18 = v14 >> 6;
  if ((v15 & 0x8000000000000000) != 0)
  {
    if (v15 <= 0xFFFFFFFFFFFFFFC0)
      goto LABEL_23;
    v17 = v18 >> ((-4 * v6) & 0x3C);
  }
  else
  {
    if (v15 >= 0x40)
    {
LABEL_25:
      v17 = 0;
      goto LABEL_29;
    }
    v17 = v18 << (v15 & 0x3C);
  }
LABEL_29:
  v19 = __OFADD__(*v7, v17);
  v16 = *v7 + v17;
  if (v19)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  *v7 = v16;
  if (v15 - 65 < 0xFFFFFFFFFFFFFF7FLL)
    goto LABEL_31;
  v16 = ((unint64_t)v14 >> 2) & 0xF;
  if ((v15 & 0x8000000000000000) != 0)
    goto LABEL_46;
  if (v15 >= 0x40)
    goto LABEL_31;
  v20 = v16 << (v15 & 0x3C);
  while (1)
  {
    v16 = *v4;
    v19 = __OFADD__(*v4, v20);
    v15 = *v4 + v20;
    if (!v19)
      break;
LABEL_45:
    __break(1u);
LABEL_46:
    if (v15 <= 0xFFFFFFFFFFFFFFC0)
LABEL_31:
      v20 = 0;
    else
      v20 = v16 >> (-(char)v15 & 0x3C);
  }
  *v4 = v15;
  return v14 & 3;
}

uint64_t S2CellId.hash(into:)()
{
  _QWORD *v0;
  uint64_t result;

  result = *v0 + HIDWORD(*v0);
  if (!__CFADD__(*v0, HIDWORD(*v0)))
    return sub_1D4922F04();
  __break(1u);
  return result;
}

BOOL static S2CellId.unsignedLongGreaterThan(lhs:rhs:)(unint64_t a1, unint64_t a2)
{
  return a2 < a1;
}

uint64_t S2CellId.hashValue.getter()
{
  unint64_t *v0;
  unint64_t v1;
  uint64_t result;

  v1 = *v0;
  sub_1D4922EF8();
  result = v1 + HIDWORD(v1);
  if (__CFADD__(v1, HIDWORD(v1)))
  {
    __break(1u);
  }
  else
  {
    sub_1D4922F04();
    return sub_1D4922F34();
  }
  return result;
}

BOOL sub_1D47D4314(_QWORD *a1, _QWORD *a2)
{
  return *a1 < *a2;
}

BOOL sub_1D47D4328(_QWORD *a1, _QWORD *a2)
{
  return *a1 <= *a2;
}

BOOL sub_1D47D433C(_QWORD *a1, _QWORD *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1D47D4350(_QWORD *a1, _QWORD *a2)
{
  return *a2 < *a1;
}

uint64_t sub_1D47D4364()
{
  unint64_t *v0;
  unint64_t v1;
  uint64_t result;

  v1 = *v0;
  sub_1D4922EF8();
  result = v1 + HIDWORD(v1);
  if (__CFADD__(v1, HIDWORD(v1)))
  {
    __break(1u);
  }
  else
  {
    sub_1D4922F04();
    return sub_1D4922F34();
  }
  return result;
}

uint64_t sub_1D47D43B0()
{
  _QWORD *v0;
  uint64_t result;

  result = *v0 + HIDWORD(*v0);
  if (!__CFADD__(*v0, HIDWORD(*v0)))
    return sub_1D4922F04();
  __break(1u);
  return result;
}

uint64_t sub_1D47D43E4()
{
  unint64_t *v0;
  unint64_t v1;
  uint64_t result;

  v1 = *v0;
  sub_1D4922EF8();
  result = v1 + HIDWORD(v1);
  if (__CFADD__(v1, HIDWORD(v1)))
  {
    __break(1u);
  }
  else
  {
    sub_1D4922F04();
    return sub_1D4922F34();
  }
  return result;
}

BOOL == infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_1D47D4440(_QWORD *result, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v5 = result;
  v6 = HIBYTE(a5) & 0xF;
  v12 = a4;
  v13 = a5;
  if ((a5 & 0x2000000000000000) == 0)
    v6 = a4 & 0xFFFFFFFFFFFFLL;
  v14 = v6;
  if (!a2)
  {
    v7 = 0;
LABEL_14:
    *v5 = a4;
    v5[1] = a5;
    v5[2] = 0;
    v5[3] = v6;
    return (_QWORD *)v7;
  }
  v7 = a3;
  if (!a3)
    goto LABEL_14;
  if ((a3 & 0x8000000000000000) == 0)
  {
    v8 = a2;
    v9 = 0;
    while (1)
    {
      v10 = sub_1D4922724();
      if (!v11)
        break;
      ++v9;
      *v8 = v10;
      v8[1] = v11;
      v8 += 2;
      if (v7 == v9)
      {
        a4 = v12;
        a5 = v13;
        goto LABEL_13;
      }
    }
    a4 = v12;
    a5 = v13;
    v7 = v9;
LABEL_13:
    v6 = v14;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1D47D44F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA648);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 17;
  v4[2] = a1;
  v4[3] = 2 * (v6 >> 4);
  return v4;
}

uint64_t sub_1D47D456C(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1D49226F4();
    return sub_1D49227C0();
  }
  return result;
}

uint64_t sub_1D47D45F4(double a1)
{
  double v1;
  uint64_t result;

  v1 = fmin(round(a1 * 536870912.0 + 536870912.0), 1073741820.0);
  if (v1 < 0.0)
    v1 = 0.0;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v1 < 9.22337204e18)
    return (uint64_t)v1;
LABEL_9:
  __break(1u);
  return result;
}

unint64_t sub_1D47D4678()
{
  unint64_t result;

  result = qword_1EFEAB950;
  if (!qword_1EFEAB950)
  {
    result = MEMORY[0x1D82634E0](&protocol conformance descriptor for S2CellId.NumberFormatException, &type metadata for S2CellId.NumberFormatException);
    atomic_store(result, (unint64_t *)&qword_1EFEAB950);
  }
  return result;
}

unint64_t sub_1D47D46C0()
{
  unint64_t result;

  result = qword_1EFEAB960;
  if (!qword_1EFEAB960)
  {
    result = MEMORY[0x1D82634E0](&protocol conformance descriptor for S2CellId, &type metadata for S2CellId);
    atomic_store(result, (unint64_t *)&qword_1EFEAB960);
  }
  return result;
}

ValueMetadata *type metadata accessor for S2CellId()
{
  return &type metadata for S2CellId;
}

ValueMetadata *type metadata accessor for S2CellId.NumberFormatException()
{
  return &type metadata for S2CellId.NumberFormatException;
}

uint64_t sub_1D47D4728(uint64_t a1, __int128 *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  char *v30;
  char *v31;
  uint64_t v32;
  _QWORD v34[2];
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD aBlock[6];
  __int128 v48[2];
  _QWORD v49[4];
  char v50;

  v10 = v9;
  v39 = a8;
  v38 = a6;
  v36 = a1;
  v42 = sub_1D492246C();
  v45 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v41 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_1D4922484();
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v40 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = *a2;
  v18 = *((_QWORD *)a2 + 2);
  v19 = *((_QWORD *)a2 + 3);
  type metadata accessor for MetricsBucket();
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = MEMORY[0x1E0DEE9D8];
  v49[0] = 0x6150202D20453245;
  v49[1] = 0xEB00000000657372;
  v49[2] = "Parse Overall";
  v49[3] = 13;
  v50 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  v21 = sub_1D47C12D0((uint64_t)v49, v20);
  v34[1] = v21;
  swift_release();
  v37 = *(_QWORD *)(v10 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_queue);
  v22 = swift_allocObject();
  swift_weakInit();
  sub_1D46AAF28(v36, (uint64_t)v48);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v22;
  *(_QWORD *)(v23 + 24) = a3;
  *(_QWORD *)(v23 + 32) = v20;
  sub_1D46B2A10(v48, v23 + 40);
  *(_OWORD *)(v23 + 80) = v35;
  *(_QWORD *)(v23 + 96) = v18;
  *(_QWORD *)(v23 + 104) = v19;
  *(_QWORD *)(v23 + 112) = a4;
  *(_QWORD *)(v23 + 120) = a5;
  *(_QWORD *)(v23 + 128) = v21;
  v24 = v38;
  *(_QWORD *)(v23 + 136) = v38;
  *(_QWORD *)(v23 + 144) = a7;
  *(_QWORD *)(v23 + 152) = v39;
  *(_QWORD *)(v23 + 160) = a9;
  aBlock[4] = sub_1D47DD734;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D47E5A84;
  aBlock[3] = &block_descriptor_5;
  v25 = _Block_copy(aBlock);
  v26 = a7;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v27 = a4;
  v28 = a5;
  swift_retain();
  v29 = v24;
  v30 = v40;
  sub_1D4922478();
  v46 = MEMORY[0x1E0DEE9D8];
  sub_1D4696EA4(&qword_1ED98D0C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D1D0);
  sub_1D47DD794();
  v31 = v41;
  v32 = v42;
  sub_1D4922AFC();
  MEMORY[0x1D8261CD4](0, v30, v31, v25);
  _Block_release(v25);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v31, v32);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v30, v44);
  swift_release();
  return swift_release();
}

uint64_t sub_1D47D4AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, void *a8, double a9, double a10, double a11, double a12, void *a13, uint64_t a14, uint64_t a15)
{
  uint64_t result;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37[2];
  _QWORD v38[4];
  char v39;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v36 = result;
    sub_1D46AAF28(a4, (uint64_t)v37);
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = a1;
    sub_1D46B2A10(v37, v28 + 24);
    *(double *)(v28 + 64) = a9;
    *(double *)(v28 + 72) = a10;
    *(double *)(v28 + 80) = a11;
    *(double *)(v28 + 88) = a12;
    *(_QWORD *)(v28 + 96) = a5;
    *(_QWORD *)(v28 + 104) = a6;
    *(_QWORD *)(v28 + 112) = a3;
    *(_QWORD *)(v28 + 120) = a7;
    *(_QWORD *)(v28 + 128) = a8;
    *(_QWORD *)(v28 + 136) = a13;
    *(_QWORD *)(v28 + 144) = a14;
    *(_QWORD *)(v28 + 152) = a15;
    v38[0] = 0x6C46206573726150;
    v38[1] = 0xEA0000000000776FLL;
    v38[2] = "Fetch Available Domains";
    v38[3] = 23;
    v39 = 2;
    type metadata accessor for DurationMeasurement();
    swift_allocObject();
    v29 = a13;
    swift_retain();
    swift_retain_n();
    swift_retain();
    v30 = a5;
    v31 = a6;
    swift_retain();
    v32 = a8;
    v33 = sub_1D47C12D0((uint64_t)v38, a3);
    swift_release();
    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = a2;
    v35 = *(_QWORD *)(v36 + 96);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1D46D8214(v35, v34, a2, v33, (void (*)(uint64_t))sub_1D47DD844, (_QWORD *)v28);
    swift_release();
    swift_release();
    swift_release_n();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1D47D4D20(uint64_t a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void (*a14)(uint64_t), uint64_t a15)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t result;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[4];

  v44 = a12;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98ED00);
  MEMORY[0x1E0C80A78](v42);
  v43 = (uint64_t)&v37 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1D4922370();
  v40 = *(_QWORD *)(v41 - 8);
  v26 = MEMORY[0x1E0C80A78](v41);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v37 - v27;
  v29 = type metadata accessor for ParseResult(0);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v37 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v39 = a15;
    v38 = a14;
    *(double *)v45 = a2;
    *(double *)&v45[1] = a3;
    *(double *)&v45[2] = a4;
    *(double *)&v45[3] = a5;
    sub_1D47D5664(a7, v45, a1, a8, a9, a10, a11, v44, (uint64_t)v31, a13);
    sub_1D470C76C((uint64_t)v28);
    v33 = sub_1D4922358();
    v34 = sub_1D4922910();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_1D467C000, v33, v34, "parse(): successful", v35, 2u);
      MEMORY[0x1D82635B8](v35, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v40 + 8))(v28, v41);
    v36 = v43;
    sub_1D469C304((uint64_t)v31, v43, type metadata accessor for ParseResult);
    swift_storeEnumTagMultiPayload();
    v38(v36);
    swift_release();
    sub_1D46992EC(v36, &qword_1ED98ED00);
    return sub_1D4697DE0((uint64_t)v31, type metadata accessor for ParseResult);
  }
  return result;
}

uint64_t sub_1D47D51BC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;
  void (*v28)(char *, uint64_t);
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  void (*v32)(char *, uint64_t);
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  void (*v36)(char *, uint64_t);
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v49[2];
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t);
  uint64_t v56;
  uint64_t v57[3];

  v54 = a6;
  v55 = a5;
  v52 = a3;
  v53 = a4;
  v8 = sub_1D4922370();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)v49 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)v49 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)v49 - v20;
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)v49 - v23;
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)v49 - v25;
  v27 = (uint64_t *)(a2 + 16);
  if (a1)
  {
    if (a1 == 1)
    {
      sub_1D470C76C((uint64_t)v15);
      sub_1D470C928((uint64_t)v12);
      v28 = *(void (**)(char *, uint64_t))(v9 + 8);
      v28(v15, v8);
      v29 = sub_1D4922358();
      v30 = sub_1D4922910();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v31 = 0;
        _os_log_impl(&dword_1D467C000, v29, v30, "Application does not have any allowed domains", v31, 2u);
        MEMORY[0x1D82635B8](v31, -1, -1);
      }

      v28(v12, v8);
      swift_beginAccess();
      *v27 = MEMORY[0x1E0DEE9E8];
    }
    else
    {
      sub_1D470C76C((uint64_t)v49 - v25);
      sub_1D470C928((uint64_t)v24);
      v36 = *(void (**)(char *, uint64_t))(v9 + 8);
      v36(v26, v8);
      sub_1D46D9440(a1);
      swift_bridgeObjectRetain();
      v37 = sub_1D4922358();
      v38 = sub_1D4922910();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = swift_slowAlloc();
        v51 = v36;
        v40 = (uint8_t *)v39;
        v50 = swift_slowAlloc();
        v57[0] = v50;
        *(_DWORD *)v40 = 136315138;
        v49[1] = v40 + 4;
        sub_1D46C2584();
        swift_bridgeObjectRetain();
        v41 = sub_1D49228E0();
        v43 = v42;
        sub_1D46D76EC(a1);
        v56 = sub_1D47F0250(v41, v43, v57);
        sub_1D4922A78();
        swift_bridgeObjectRelease();
        sub_1D46D76EC(a1);
        sub_1D46D76EC(a1);
        _os_log_impl(&dword_1D467C000, v37, v38, "Application can parse some domains: %s", v40, 0xCu);
        v44 = v50;
        swift_arrayDestroy();
        MEMORY[0x1D82635B8](v44, -1, -1);
        MEMORY[0x1D82635B8](v40, -1, -1);

        v51(v24, v8);
      }
      else
      {
        sub_1D46D76EC(a1);
        sub_1D46D76EC(a1);

        v36(v24, v8);
      }
      v45 = v52;
      swift_bridgeObjectRetain();
      v46 = sub_1D46D5B9C(a1, v45);
      swift_beginAccess();
      *v27 = v46;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D470C76C((uint64_t)v21);
    sub_1D470C928((uint64_t)v18);
    v32 = *(void (**)(char *, uint64_t))(v9 + 8);
    v32(v21, v8);
    v33 = sub_1D4922358();
    v34 = sub_1D4922910();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_1D467C000, v33, v34, "Application can parse any domain", v35, 2u);
      MEMORY[0x1D82635B8](v35, -1, -1);
    }

    v32(v18, v8);
  }
  sub_1D47C0B30();
  swift_beginAccess();
  v47 = swift_bridgeObjectRetain();
  v55(v47);
  return swift_bridgeObjectRelease();
}

void sub_1D47D5664(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, void *a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  id v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  double v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  os_unfair_lock_s *v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  _BYTE *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  double v87;
  uint64_t v88;
  double v89;
  void *v90;
  _BYTE *v91;
  void *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  char *v105;
  NSObject *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD v125[5];
  __int128 v126;
  uint64_t v127;
  void *v128;
  _OWORD v129[2];
  __int128 v130;
  _OWORD v131[2];
  __int128 v132;
  _OWORD v133[2];
  __int128 v134;
  _BYTE v135[24];
  __int128 v136;
  _BYTE v137[24];
  __int128 v138;
  uint64_t v139;

  v112 = a8;
  v97 = a7;
  v98 = a9;
  v107 = a6;
  v100 = a4;
  v14 = sub_1D4922370();
  v102 = *(_QWORD *)(v14 - 8);
  v103 = v14;
  MEMORY[0x1E0C80A78](v14);
  v101 = (uint64_t)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  v108 = *(_QWORD *)(v16 - 8);
  v109 = v16;
  v17 = MEMORY[0x1E0C80A78](v16);
  v110 = (uint64_t)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v99 = (uint64_t)&v93 - v19;
  v20 = sub_1D492204C();
  MEMORY[0x1E0C80A78](v20);
  v105 = (char *)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E920);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v93 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)&v93 - v27;
  MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v93 - v29;
  v31 = *a2;
  v32 = a2[1];
  v33 = a2[2];
  v34 = a2[3];
  v104 = (_QWORD *)a1;
  v106 = a5;
  v35 = v111;
  sub_1D47D5F8C(a1, a3, a5, v112, (uint64_t)&v126);
  if (!v35)
  {
    v94 = a3;
    v95 = v28;
    v93 = v25;
    v111 = 0;
    v36 = v108;
    v37 = v109;
    v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v108 + 56);
    v38(v30, 1, 1, v109);
    v96 = v30;
    if (a10)
    {
      v39 = a10;
      sub_1D4920F6C();
      v121 = 0;
      v119 = 0u;
      v120 = 0u;
      sub_1D4922040();
      sub_1D4696EA4(&qword_1ED98E900, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults, (uint64_t)&unk_1D4931B04);
      v40 = (uint64_t)v95;
      v41 = v111;
      sub_1D49221C0();
      v111 = v41;
      if (v41)
      {
        sub_1D46992EC((uint64_t)v96, &qword_1ED98E920);

        *(_OWORD *)v137 = v126;
        v42 = v128;
        *(_QWORD *)&v137[16] = v127;
        v138 = *(_OWORD *)&v137[8];
        sub_1D46CCAB0((uint64_t)&v138);

        return;
      }
      v43 = (uint64_t)v96;
      sub_1D46992EC((uint64_t)v96, &qword_1ED98E920);
      v38((char *)v40, 0, 1, v37);
      sub_1D46B3464(v40, v43, &qword_1ED98E920);
      v44 = (uint64_t)v93;
      sub_1D469C5EC(v43, (uint64_t)v93, &qword_1ED98E920);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v44, 1, v37) == 1)
      {

        sub_1D46992EC(v44, &qword_1ED98E920);
      }
      else
      {
        v45 = v99;
        sub_1D469C630(v44, v99, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
        if (!sub_1D46BAEB4())
        {
          sub_1D4792DD4();
          swift_allocError();
          *v91 = 2;
          swift_willThrow();
          *(_OWORD *)v135 = v126;
          v92 = v128;
          *(_QWORD *)&v135[16] = v127;
          v136 = *(_OWORD *)&v135[8];
          sub_1D46CCAB0((uint64_t)&v136);

          sub_1D4697DE0(v45, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
          v75 = v43;
LABEL_13:
          sub_1D46992EC(v75, &qword_1ED98E920);
          return;
        }
        sub_1D4697DE0(v45, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);

      }
    }
    v46 = v110;
    v47 = v139;
    v48 = v104;
    sub_1D46AAF28((uint64_t)v104, (uint64_t)&v119);
    v49 = type metadata accessor for ImageContentLazy();
    v50 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB70);
    v51 = swift_allocObject();
    *(_DWORD *)(v51 + 16) = 0;
    v52 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v50 + 56) = v51;
    *(_QWORD *)(v50 + 64) = v52;
    *(_OWORD *)(v50 + 72) = 0u;
    *(_OWORD *)(v50 + 88) = 0u;
    *(_OWORD *)(v50 + 104) = 0u;
    sub_1D46B2A10(&v119, v50 + 16);
    sub_1D47C029C((uint64_t)sub_1D47C03CC, 0);
    v53 = (char *)(v47 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_config);
    v54 = v48[3];
    v55 = v48[4];
    __swift_project_boxed_opaque_existential_1(v48, v54);
    v56 = (*(double (**)(uint64_t, uint64_t))(v55 + 16))(v54, v55);
    v58 = sub_1D48C7F24(v56, v57);
    LOBYTE(v54) = v59;
    v60 = swift_allocObject();
    *(_QWORD *)(v60 + 16) = v58;
    *(_BYTE *)(v60 + 24) = v54 & 1;
    sub_1D47C029C((uint64_t)sub_1D47DCB44, v60);
    swift_release();
    v125[3] = v49;
    v125[4] = &off_1E9801850;
    v125[0] = v50;
    *(_QWORD *)&v113 = v31;
    *((_QWORD *)&v113 + 1) = v32;
    *(_QWORD *)&v114 = v33;
    *((_QWORD *)&v114 + 1) = v34;
    v61 = (char *)v106;
    v62 = v53;
    v63 = v107;
    v64 = sub_1D48967A8(&v119, v46, (uint64_t)v125, (uint64_t *)&v113, v106, v62, (uint64_t)v96, v107);
    v65 = v119;
    v66 = v120;
    v67 = v112;
    v68 = (os_unfair_lock_s *)(*(_QWORD *)(v112 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock) + 16);
    os_unfair_lock_lock(v68);
    LODWORD(v67) = *(unsigned __int8 *)(v67 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled);
    os_unfair_lock_unlock(v68);
    if ((_DWORD)v67 == 1)
    {
      swift_bridgeObjectRelease();
      v69 = v101;
      sub_1D470C76C(v101);
      v70 = sub_1D4922358();
      v71 = sub_1D4922910();
      if (os_log_type_enabled(v70, v71))
      {
        v72 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v72 = 0;
        _os_log_impl(&dword_1D467C000, v70, v71, "parse(): canceled", v72, 2u);
        MEMORY[0x1D82635B8](v72, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v69, v103);
      sub_1D4792DD4();
      swift_allocError();
      *v73 = 0;
      swift_willThrow();
      v129[0] = v126;
      v74 = v128;
      *(_QWORD *)&v129[1] = v127;
      v130 = *(_OWORD *)((char *)v129 + 8);
      sub_1D46CCAB0((uint64_t)&v130);

      sub_1D4697DE0(v110, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v125);
      v75 = (uint64_t)v96;
      goto LABEL_13;
    }
    v113 = v65;
    v114 = v66;
    v76 = v111;
    v77 = sub_1D47D6678(&v119, v64, v48, (uint64_t *)&v113, v94, v100, v61, v63);
    v111 = v76;
    if (v76)
    {
      v133[0] = v126;
      v78 = v128;
      *(_QWORD *)&v133[1] = v127;
      v134 = *(_OWORD *)((char *)v133 + 8);
      sub_1D46CCAB0((uint64_t)&v134);
      swift_bridgeObjectRelease();

      sub_1D4697DE0(v110, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v125);
      sub_1D46992EC((uint64_t)v96, &qword_1ED98E920);
    }
    else
    {
      v79 = v77;
      swift_bridgeObjectRelease();
      v80 = v63;
      v81 = v119;
      v112 = v122;
      v113 = v119;
      v109 = v123;
      v105 = (char *)v124;
      v114 = v120;
      v115 = v121;
      v116 = v122;
      v117 = v123;
      v118 = v124;
      v108 = sub_1D47D6E50(&v119, v125, v79, &v113, v61, v80);
      swift_bridgeObjectRelease();
      sub_1D46B3590(v81);
      v109 = v119;
      v82 = v120;
      v112 = *((_QWORD *)&v119 + 1);
      v83 = *((_QWORD *)&v120 + 1);
      v84 = v123;
      v102 = v122;
      v103 = v121;
      v104 = (_QWORD *)v124;
      v105 = (char *)v123;
      sub_1D47C0B30();
      v85 = v48[3];
      v86 = v48[4];
      __swift_project_boxed_opaque_existential_1(v48, v85);
      v87 = (*(double (**)(uint64_t, uint64_t))(v86 + 16))(v85, v86);
      v113 = v65;
      v114 = v66;
      *(_QWORD *)&v119 = v109;
      *((_QWORD *)&v119 + 1) = v112;
      *(_QWORD *)&v120 = v82;
      *((_QWORD *)&v120 + 1) = v83;
      v121 = v103;
      v122 = v102;
      v123 = v84;
      v124 = (uint64_t)v104;
      v88 = v110;
      sub_1D47D7720((uint64_t *)&v126, v108, (uint64_t *)&v113, (uint64_t *)&v119, (char *)v106, v110, v107, v98, v87, v89);
      v131[0] = v126;
      v90 = v128;
      *(_QWORD *)&v131[1] = v127;
      v132 = *(_OWORD *)((char *)v131 + 8);
      sub_1D46CCAB0((uint64_t)&v132);
      swift_bridgeObjectRelease();

      sub_1D4697DE0(v88, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v125);
      sub_1D46992EC((uint64_t)v96, &qword_1ED98E920);
      sub_1D46B3590(v109);
    }
  }
}

void sub_1D47D5F8C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  os_unfair_lock_s *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  char v22;
  uint64_t v23;
  NSObject *v24;
  int v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  int64_t v29;
  int v30;
  int v31;
  char v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  char v42;
  os_log_type_t v43;
  char *v44;
  uint8_t *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  void *v53;
  void *v54;
  uint64_t v55;
  __int128 v56;
  objc_class *v57;
  id v58;
  id v59;
  id v60;
  id v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  int v68;
  uint8_t *v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  uint64_t v76;
  int v77;
  objc_super v78;
  uint64_t v79[5];
  __int128 v80;
  __int128 v81;
  char v82;
  _BYTE v83[24];
  __int128 v84;
  uint64_t v85;
  uint64_t v86;

  v71 = a3;
  v72 = a1;
  v8 = sub_1D4922370();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v74 = (uint64_t)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v63 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v63 - v15;
  v17 = (os_unfair_lock_s *)(*(_QWORD *)(a4 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock) + 16);
  os_unfair_lock_lock(v17);
  LODWORD(a4) = *(unsigned __int8 *)(a4 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled);
  os_unfair_lock_unlock(v17);
  if ((_DWORD)a4 == 1)
  {
    sub_1D470C76C((uint64_t)v16);
    v18 = sub_1D4922358();
    v19 = sub_1D4922910();
    if (!os_log_type_enabled(v18, v19))
    {
      v22 = 0;
LABEL_22:

      (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
      sub_1D4792DD4();
      swift_allocError();
      *v44 = v22;
      swift_willThrow();
      return;
    }
    v20 = v9;
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_1D467C000, v18, v19, "parse(): canceled", v21, 2u);
    v22 = 0;
LABEL_19:
    MEMORY[0x1D82635B8](v21, -1, -1);
    v9 = v20;
    goto LABEL_22;
  }
  if (!*(_QWORD *)(a2 + 16))
  {
    sub_1D470C76C((uint64_t)v14);
    v18 = sub_1D4922358();
    v43 = sub_1D4922910();
    if (!os_log_type_enabled(v18, v43))
    {
      v22 = 1;
      v16 = v14;
      goto LABEL_22;
    }
    v20 = v9;
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_1D467C000, v18, v43, "parse(): no domain is allowed.", v21, 2u);
    v22 = 1;
    v16 = v14;
    goto LABEL_19;
  }
  v23 = v74;
  sub_1D470C76C(v74);
  swift_bridgeObjectRetain_n();
  v24 = sub_1D4922358();
  v25 = sub_1D4922910();
  if (!os_log_type_enabled(v24, (os_log_type_t)v25))
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v23, v8);
    goto LABEL_24;
  }
  v68 = v25;
  v70 = v9;
  v26 = swift_slowAlloc();
  v67 = swift_slowAlloc();
  v79[0] = v67;
  *(_DWORD *)v26 = 134218242;
  v85 = *(_QWORD *)(a2 + 16);
  v66 = &v86;
  sub_1D4922A78();
  v69 = (uint8_t *)v26;
  *(_WORD *)(v26 + 12) = 2080;
  v27 = *(_QWORD *)(a2 + 16);
  v28 = MEMORY[0x1E0DEE9D8];
  if (!v27)
  {
LABEL_23:
    v45 = v69;
    v46 = MEMORY[0x1D8261B9C](v28, MEMORY[0x1E0DEA968]);
    v48 = v47;
    swift_bridgeObjectRelease();
    v85 = sub_1D47F0250(v46, v48, v79);
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D467C000, v24, (os_log_type_t)v68, "Parse allowed domain count %ld, domains: %s", v45, 0x16u);
    v49 = v67;
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v49, -1, -1);
    MEMORY[0x1D82635B8](v45, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v74, v8);
LABEL_24:
    v50 = v73;
    sub_1D472E3A8(v72);
    if (!v50)
    {
      v51 = v71;
      v52 = v71;
      sub_1D46F3188(v51, (uint64_t)&v80);

      *(_OWORD *)v83 = v80;
      v53 = (void *)*((_QWORD *)&v81 + 1);
      *(_QWORD *)&v83[16] = v81;
      v84 = *(_OWORD *)&v83[8];
      v54 = (void *)objc_opt_self();
      v79[3] = (uint64_t)&type metadata for ParseStartEvent;
      v79[4] = (uint64_t)&off_1E9801360;
      v55 = swift_allocObject();
      v79[0] = v55;
      v56 = v81;
      *(_OWORD *)(v55 + 16) = v80;
      *(_OWORD *)(v55 + 32) = v56;
      *(_BYTE *)(v55 + 48) = v82;
      v57 = (objc_class *)type metadata accessor for AnyVIAEvent();
      v58 = objc_allocWithZone(v57);
      sub_1D46AAF28((uint64_t)v79, (uint64_t)v58 + OBJC_IVAR____TtC18VisualIntelligence11AnyVIAEvent_event);
      sub_1D46CCA88((uint64_t)&v84);
      v59 = v53;
      sub_1D46CCA88((uint64_t)&v84);
      v78.receiver = v58;
      v78.super_class = v57;
      v60 = v59;
      v61 = objc_msgSendSuper2(&v78, sel_init);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
      objc_msgSend(v54, sel_logEvent_, v61);

      sub_1D46CCAB0((uint64_t)&v84);
      v62 = v81;
      *(_OWORD *)a5 = v80;
      *(_OWORD *)(a5 + 16) = v62;
      *(_BYTE *)(a5 + 32) = v82;
    }
    return;
  }
  v64 = v8;
  v65 = a5;
  v85 = MEMORY[0x1E0DEE9D8];
  sub_1D48AB4A4(0, v27, 0);
  v28 = v85;
  v29 = sub_1D46D755C(a2);
  v31 = v30;
  v33 = v32 & 1;
  v76 = a2 + 56;
  v75 = v24;
  while ((v29 & 0x8000000000000000) == 0 && v29 < 1 << *(_BYTE *)(a2 + 32))
  {
    if (((*(_QWORD *)(v76 + (((unint64_t)v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      goto LABEL_28;
    if (*(_DWORD *)(a2 + 36) != v31)
      goto LABEL_29;
    v77 = v33;
    v34 = sub_1D46F8BC8(*(_BYTE *)(*(_QWORD *)(a2 + 48) + v29));
    v36 = v35;
    v85 = v28;
    v38 = *(_QWORD *)(v28 + 16);
    v37 = *(_QWORD *)(v28 + 24);
    if (v38 >= v37 >> 1)
    {
      sub_1D48AB4A4(v37 > 1, v38 + 1, 1);
      v28 = v85;
    }
    *(_QWORD *)(v28 + 16) = v38 + 1;
    v39 = v28 + 16 * v38;
    *(_QWORD *)(v39 + 32) = v34;
    *(_QWORD *)(v39 + 40) = v36;
    v40 = sub_1D46D75FC(v29, v31, v77 & 1, a2);
    v29 = v40;
    v31 = v41;
    v33 = v42 & 1;
    --v27;
    v24 = v75;
    if (!v27)
    {
      sub_1D46D76E0(v40, v41, v33);
      a5 = v65;
      v8 = v64;
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
}

uint64_t sub_1D47D6678(_QWORD *a1, uint64_t a2, _QWORD *a3, uint64_t *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int128 v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  unint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint8_t *v53;
  void *v54;
  id v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t result;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  _QWORD *v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  _QWORD v96[4];
  char v97;
  uint64_t v98;

  v82 = a6;
  v86 = a3;
  v71 = a1;
  v69 = sub_1D4922370();
  v68 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v72 = (uint64_t)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CE38);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for Argos_Protos_Queryflow_SafetyConfig(0);
  v81 = *(_QWORD *)(v87 - 8);
  MEMORY[0x1E0C80A78](v87);
  v19 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a4;
  v21 = a4[1];
  v22 = a4[2];
  v23 = a4[3];
  v70 = a5;
  v85 = a7;
  v24 = sub_1D4799B6C(a2, a5, a7, a8);
  *(_QWORD *)&v92 = v20;
  *((_QWORD *)&v92 + 1) = v21;
  *(_QWORD *)&v93 = v22;
  *((_QWORD *)&v93 + 1) = v23;
  v83 = a8;
  v25 = sub_1D46A57D8(v24, &v92, a8);
  swift_bridgeObjectRelease();
  v98 = v8;
  if (v82)
  {
    sub_1D47BECD0(&v92);
    v26 = v92;
    v27 = v93;
    v28 = v94;
    v29 = v95;
  }
  else
  {
    v26 = xmmword_1D49324E0;
    v27 = 0uLL;
    v28 = 0uLL;
    v29 = 0uLL;
  }
  v88 = v26;
  v89 = v27;
  v90 = v28;
  v91 = v29;
  v30 = v98 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_config;
  v31 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20);
  v82 = v30;
  v32 = *(_QWORD *)(v30 + v31)
      + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__safetyConfig;
  swift_beginAccess();
  sub_1D469C5EC(v32, (uint64_t)v17, &qword_1ED98CE38);
  v33 = v87;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v17, 1, v87) == 1)
  {
    *(_WORD *)v19 = 0;
    v34 = MEMORY[0x1E0DEE9D8];
    *((_QWORD *)v19 + 1) = sub_1D47C3B60(MEMORY[0x1E0DEE9D8]);
    *((_QWORD *)v19 + 2) = sub_1D47C3F34(v34);
    *((_QWORD *)v19 + 3) = v34;
    *((_QWORD *)v19 + 4) = v34;
    *((_QWORD *)v19 + 5) = v34;
    sub_1D4922010();
    v35 = &v19[*(int *)(v33 + 48)];
    v36 = type metadata accessor for Argos_Protos_Queryflow_SafetyConfig.CornerGlyphConfig(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 1, 1, v36);
    sub_1D46992EC((uint64_t)v17, &qword_1ED98CE38);
  }
  else
  {
    sub_1D469C630((uint64_t)v17, (uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig);
  }
  sub_1D471495C(v25, (uint64_t *)&v88, (uint64_t)v19, &v92);
  sub_1D4697DE0((uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig);
  sub_1D46B3590(v88);
  v37 = v92;
  v75 = v25;
  v73 = *((_QWORD *)&v93 + 1);
  v38 = v93;
  v39 = *((_QWORD *)&v94 + 1);
  v87 = v94;
  v40 = v95;
  v74 = *(_QWORD *)(v98 + 40);
  *(_QWORD *)&v88 = v20;
  *((_QWORD *)&v88 + 1) = v21;
  *(_QWORD *)&v89 = v22;
  *((_QWORD *)&v89 + 1) = v23;
  v41 = v86[3];
  v42 = v86[4];
  __swift_project_boxed_opaque_existential_1(v86, v41);
  v43 = (*(double (**)(uint64_t, uint64_t))(v42 + 16))(v41, v42);
  v81 = v37;
  v92 = v37;
  v80 = *((_QWORD *)&v37 + 1);
  v79 = v38;
  *(_QWORD *)&v93 = v38;
  v44 = v73;
  *((_QWORD *)&v93 + 1) = v73;
  *(_QWORD *)&v94 = v87;
  v78 = v39;
  *((_QWORD *)&v94 + 1) = v39;
  v95 = v40;
  v76 = v40 >> 64;
  v77 = v40;
  v45 = v82;
  v46 = v83;
  v48 = sub_1D4767E60(v75, (double *)&v88, (uint64_t)&v92, v82, v83, v85, v43, v47);
  swift_bridgeObjectRelease();
  LOBYTE(v92) = *(_BYTE *)(v98 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_mlEngineType);
  if ((sub_1D48C8384((unsigned __int8 *)&v92, v48) & 1) != 0)
  {
    v49 = v72;
    sub_1D470C76C(v72);
    v50 = sub_1D4922358();
    v51 = sub_1D4922910();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v52 = 0;
      _os_log_impl(&dword_1D467C000, v50, v51, "Domain selection is enabled.", v52, 2u);
      v53 = v52;
      v49 = v72;
      MEMORY[0x1D82635B8](v53, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v49, v69);
    *(_QWORD *)&v92 = v20;
    *((_QWORD *)&v92 + 1) = v21;
    *(_QWORD *)&v93 = v22;
    *((_QWORD *)&v93 + 1) = v23;
    v54 = v85;
    v55 = objc_msgSend(v85, sel_preferredMetalDevice);
    v56 = v84;
    if (v54)
    {
      v57 = objc_msgSend(v54, sel_imageType);
      if (v57 == (id)1)
        v58 = 1;
      else
        v58 = 2 * (v57 == (id)2);
    }
    else
    {
      v58 = 0;
    }
    v59 = sub_1D47B9550(v48, (uint64_t *)&v92, v86, (uint64_t)v55, v58, 1, v46);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    if (v56)
    {
      sub_1D46B3590(v81);
      return v48;
    }
    v48 = v59;
  }
  else
  {
    v56 = v84;
  }
  v60 = *(_QWORD *)(v98 + 48);
  v96[0] = 0x6C46206573726150;
  v96[1] = 0xEA0000000000776FLL;
  v96[2] = "VI: Region Grouping";
  v96[3] = 19;
  v97 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  sub_1D47C12D0((uint64_t)v96, v46);
  swift_release();
  type metadata accessor for RegionGroupingProcessor();
  *(_QWORD *)&v92 = v20;
  *((_QWORD *)&v92 + 1) = v21;
  *(_QWORD *)&v93 = v22;
  *((_QWORD *)&v93 + 1) = v23;
  *(_QWORD *)&v92 = sub_1D4888A88(v48, (uint64_t *)&v92, *(_QWORD *)(v60 + OBJC_IVAR____TtC18VisualIntelligence23RegionGroupingProcessor_boxScorer), v60 + OBJC_IVAR____TtC18VisualIntelligence23RegionGroupingProcessor_config);
  swift_bridgeObjectRetain();
  sub_1D46A19EC((_QWORD **)&v92);
  if (!v56)
  {
    swift_bridgeObjectRelease();
    v61 = v92;
    sub_1D47C0B30();
    swift_bridgeObjectRelease();
    swift_release();
    v48 = sub_1D46DCEAC(v61, v70, *(_QWORD *)(v98 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_domainGlyphConfig), v45);
    swift_release();
    v62 = v71;
    v63 = v80;
    *v71 = v81;
    v62[1] = v63;
    v62[2] = v79;
    v62[3] = v44;
    v64 = v78;
    v62[4] = v87;
    v62[5] = v64;
    v65 = v76;
    v62[6] = v77;
    v62[7] = v65;
    return v48;
  }
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1D47D6E50(_OWORD *a1, _QWORD *a2, uint64_t a3, __int128 *a4, void *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  __int128 v32;
  char *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t *v53;
  void *v54;
  void *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  _OWORD *v70;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  _OWORD *v77;
  unint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  _OWORD v91[3];
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;

  v86 = a6;
  v85 = a3;
  v77 = a1;
  v10 = sub_1D4922370();
  v89 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v88 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v90 = (char *)&v72 - v13;
  v82 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v14 = *(_QWORD *)(v82 - 8);
  v15 = MEMORY[0x1E0C80A78](v82);
  v81 = (uint64_t)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v87 = (uint64_t)&v72 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v72 - v19;
  v84 = *a4;
  v83 = a4[1];
  v80 = a4[2];
  v22 = *((_QWORD *)a4 + 6);
  v21 = *((_QWORD *)a4 + 7);
  sub_1D46C43D0((uint64_t)objc_msgSend(a5, sel_preferredMetalDevice));
  swift_unknownObjectRelease();
  v91[0] = v84;
  v91[1] = v83;
  v91[2] = v80;
  v92 = v22;
  v93 = v21;
  v23 = sub_1D46C45D0((uint64_t *)&v94, a2, v85, (uint64_t *)v91, v6 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_config, v86);
  v24 = v23;
  v25 = v94;
  v26 = v95;
  v27 = v96;
  v28 = v97;
  v29 = *(_QWORD *)(v23 + 16);
  if (v29)
  {
    v72 = v97;
    v73 = v96;
    v74 = v95;
    v75 = v94;
    v30 = v23 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v86 = *(_QWORD *)(v14 + 72);
    v76 = v23;
    swift_bridgeObjectRetain();
    v31 = (_BYTE *)&unk_1ED98F000;
    *(_QWORD *)&v83 = "neric";
    v78 = 0x80000001D493F830;
    *(_QWORD *)&v32 = 136315138;
    v80 = v32;
    v79 = MEMORY[0x1E0DEE9B8] + 8;
    while (1)
    {
      sub_1D469C304(v30, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (qword_1ED98F398 != -1)
        swift_once();
      if (v31[904] != 1)
        goto LABEL_21;
      v34 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
      v35 = objc_msgSend(v34, sel_bundleIdentifier);

      if (v35)
      {
        v36 = sub_1D492261C();
        v38 = v37;

        if (v36 == 0xD00000000000002BLL && v38 == v78)
        {
          swift_bridgeObjectRelease();
LABEL_13:
          v40 = &qword_1EFEAA908;
          if (qword_1EFEA9C20 != -1)
          {
            swift_once();
            v40 = &qword_1EFEAA908;
          }
          goto LABEL_17;
        }
        v39 = sub_1D4922E38();
        swift_bridgeObjectRelease();
        if ((v39 & 1) != 0)
          goto LABEL_13;
      }
      v40 = (uint64_t *)&off_1ED98F3F0;
      if (qword_1ED98F3A8 != -1)
      {
        swift_once();
        v40 = (uint64_t *)&off_1ED98F3F0;
      }
LABEL_17:
      v41 = *(void **)(*v40 + 32);
      swift_retain();
      v42 = (void *)sub_1D49225F8();
      LODWORD(v41) = objc_msgSend(v41, sel_BOOLForKey_, v42);
      swift_release();

      if ((_DWORD)v41)
      {
        if (qword_1EFEA9C78 != -1)
          swift_once();
        v43 = v10;
        v44 = qword_1EFEAAA30;
        goto LABEL_24;
      }
LABEL_21:
      if (qword_1ED98F3D0 != -1)
        swift_once();
      v43 = v10;
      v44 = qword_1ED98F3B0;
LABEL_24:
      v45 = __swift_project_value_buffer(v43, (uint64_t)v44);
      v46 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 16);
      v46(v90, v45, v10);
      if ((v31[904] & 1) == 0)
        goto LABEL_36;
      v47 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
      v48 = objc_msgSend(v47, sel_bundleIdentifier);

      if (v48)
      {
        v49 = sub_1D492261C();
        v51 = v50;

        if (v49 == 0xD00000000000002BLL && v51 == ((unint64_t)v83 | 0x8000000000000000))
        {
          swift_bridgeObjectRelease();
LABEL_30:
          v53 = &qword_1EFEAA908;
          if (qword_1EFEA9C20 != -1)
          {
            swift_once();
            v53 = &qword_1EFEAA908;
          }
          goto LABEL_34;
        }
        v52 = sub_1D4922E38();
        swift_bridgeObjectRelease();
        if ((v52 & 1) != 0)
          goto LABEL_30;
      }
      v53 = (uint64_t *)&off_1ED98F3F0;
      if (qword_1ED98F3A8 != -1)
      {
        swift_once();
        v53 = (uint64_t *)&off_1ED98F3F0;
      }
LABEL_34:
      v54 = *(void **)(*v53 + 32);
      swift_retain();
      v55 = (void *)sub_1D49225F8();
      LODWORD(v54) = objc_msgSend(v54, sel_BOOLForKey_, v55);
      swift_release();

      if (!(_DWORD)v54)
      {
LABEL_36:
        if (qword_1ED98F3D0 != -1)
          swift_once();
        v58 = __swift_project_value_buffer(v10, (uint64_t)qword_1ED98F3B0);
        v56 = v88;
        v57 = v88;
        goto LABEL_39;
      }
      v56 = v88;
      v57 = v88;
      v58 = (uint64_t)v90;
LABEL_39:
      v46(v57, v58, v10);
      v59 = *(void (**)(char *, uint64_t))(v89 + 8);
      v59(v90, v10);
      v60 = v87;
      sub_1D469C304((uint64_t)v20, v87, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      v61 = sub_1D4922358();
      v62 = sub_1D4922910();
      if (os_log_type_enabled(v61, v62))
      {
        v63 = swift_slowAlloc();
        v64 = swift_slowAlloc();
        v85 = v30;
        *(_QWORD *)&v84 = v29;
        v65 = v20;
        v66 = v64;
        *(_QWORD *)&v94 = v64;
        *(_DWORD *)v63 = v80;
        sub_1D469C304(v60, v81, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        v67 = sub_1D4922688();
        *(_QWORD *)(v63 + 4) = sub_1D47F0250(v67, v68, (uint64_t *)&v94);
        swift_bridgeObjectRelease();
        sub_1D4697DE0(v60, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        _os_log_impl(&dword_1D467C000, v61, v62, "%s", (uint8_t *)v63, 0xCu);
        swift_arrayDestroy();
        v69 = v66;
        v20 = v65;
        v29 = v84;
        v30 = v85;
        MEMORY[0x1D82635B8](v69, -1, -1);
        MEMORY[0x1D82635B8](v63, -1, -1);

        v33 = v88;
      }
      else
      {

        sub_1D4697DE0(v60, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        v33 = v56;
      }
      v59(v33, v10);
      sub_1D4697DE0((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      v30 += v86;
      --v29;
      v31 = &unk_1ED98F000;
      if (!v29)
      {
        v24 = v76;
        swift_bridgeObjectRelease();
        v25 = v75;
        v26 = v74;
        v27 = v73;
        v28 = v72;
        break;
      }
    }
  }
  v70 = v77;
  *v77 = v25;
  v70[1] = v26;
  v70[2] = v27;
  v70[3] = v28;
  return v24;
}

uint64_t sub_1D47D7720@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  char v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  objc_class *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  __int128 v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  unint64_t *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  char *v130;
  objc_super v131;
  objc_super v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  uint64_t v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  uint64_t v156;
  objc_super v157;
  _BYTE v158[32];
  char v159;
  id v160;
  _OWORD v161[2];

  v119 = a7;
  v107 = a6;
  v130 = a5;
  v125 = a2;
  v111 = a8;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E920);
  MEMORY[0x1E0C80A78](v15);
  v110 = (uint64_t)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98E110);
  MEMORY[0x1E0C80A78](v17);
  v117 = (uint64_t)&v105 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig(0);
  v114 = *(_QWORD *)(v116 - 8);
  MEMORY[0x1E0C80A78](v116);
  v105 = (unint64_t *)((char *)&v105 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  v108 = *(_QWORD *)(v20 - 8);
  v109 = v20;
  MEMORY[0x1E0C80A78](v20);
  v106 = (char *)&v105 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a3;
  v23 = a3[1];
  v24 = a3[2];
  v25 = a3[3];
  v26 = *a4;
  v126 = a4[1];
  v127 = v26;
  v27 = a4[2];
  v123 = a4[3];
  v124 = v27;
  v28 = a4[4];
  v121 = a4[5];
  v122 = v28;
  v120 = a4[6];
  v128 = a4[7];
  v29 = *a1;
  v30 = a1[1];
  v31 = a1[2];
  v32 = (void *)a1[3];
  v33 = *((_BYTE *)a1 + 32);
  v34 = objc_allocWithZone(MEMORY[0x1E0D8C368]);
  swift_bridgeObjectRetain();
  v35 = v32;
  v36 = objc_msgSend(v34, sel_initWithStartSearch_, v35);
  v37 = (void *)objc_opt_self();
  *((_QWORD *)&v146 + 1) = &type metadata for ParseEndEvent;
  *(_QWORD *)&v147 = &off_1E9800340;
  v38 = swift_allocObject();
  *(_QWORD *)&v145 = v38;
  *(_QWORD *)(v38 + 16) = v36;
  *(_QWORD *)(v38 + 24) = v29;
  *(_QWORD *)(v38 + 32) = v30;
  *(_QWORD *)(v38 + 40) = v31;
  *(_QWORD *)(v38 + 48) = v35;
  *(_BYTE *)(v38 + 56) = v33;
  *(_BYTE *)(v38 + 57) = 0;
  v39 = (objc_class *)type metadata accessor for AnyVIAEvent();
  v40 = objc_allocWithZone(v39);
  sub_1D46AAF28((uint64_t)&v145, (uint64_t)v40 + OBJC_IVAR____TtC18VisualIntelligence11AnyVIAEvent_event);
  v157.receiver = v40;
  v157.super_class = v39;
  v41 = v36;
  swift_bridgeObjectRetain_n();
  v42 = v35;
  v43 = v41;
  v44 = v42;
  v45 = objc_msgSendSuper2(&v157, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v145);
  v129 = v37;
  objc_msgSend(v37, sel_logEvent_, v45);
  v112 = v44;

  v118 = v31;
  swift_bridgeObjectRelease();
  v113 = v43;

  v46 = v130;
  v48 = v123;
  v47 = v124;
  v50 = v121;
  v49 = v122;
  v51 = v120;
  sub_1D46B2ED8(v127);
  if (v46)
    v52 = objc_msgSend(v46, sel_queryID);
  else
    v52 = 0;
  v53 = v119;
  if (v119)
  {
    swift_beginAccess();
    v54 = swift_bridgeObjectRetain();
  }
  else
  {
    v54 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)&v145 = v125;
  *((_QWORD *)&v145 + 1) = v127;
  *(_QWORD *)&v146 = v126;
  *((_QWORD *)&v146 + 1) = v47;
  *(_QWORD *)&v147 = v48;
  *((_QWORD *)&v147 + 1) = v49;
  *(_QWORD *)&v148 = v50;
  *((_QWORD *)&v148 + 1) = v51;
  *(_QWORD *)&v149 = v128;
  *((_QWORD *)&v149 + 1) = v22;
  *(_QWORD *)&v150 = v23;
  *((_QWORD *)&v150 + 1) = v24;
  *(_QWORD *)&v151 = v25;
  *((double *)&v151 + 1) = a9;
  *(double *)&v152 = a10;
  BYTE8(v152) = 0;
  *(_QWORD *)&v153 = 0;
  *((_QWORD *)&v153 + 1) = 0xE000000000000000;
  v154 = (unint64_t)v52;
  v155 = 0uLL;
  v156 = v54;
  v141 = v153;
  v142 = (unint64_t)v52;
  v143 = 0uLL;
  v144 = v54;
  v137 = v149;
  v138 = v150;
  v139 = v151;
  v140 = v152;
  v133 = v145;
  v134 = v146;
  v135 = v147;
  v136 = v148;
  swift_bridgeObjectRetain();
  v55 = *(_QWORD *)(VisualUnderstanding.imageRegions.getter() + 16);
  swift_bridgeObjectRelease();
  if (v55)
  {
    v141 = v153;
    v142 = v154;
    v143 = v155;
    v144 = v156;
    v137 = v149;
    v138 = v150;
    v139 = v151;
    v140 = v152;
    v133 = v145;
    v134 = v146;
    v135 = v147;
    v136 = v148;
    v56 = v130;
    v57 = v130;
    sub_1D46B2E18((uint64_t)&v145);
    v58 = v56;
    v53 = v119;
    sub_1D46F3294(v58, &v133, (uint64_t)v158);
    v161[0] = *(_OWORD *)&v158[8];
    sub_1D46B3464((uint64_t)&v158[24], (uint64_t)&v160, &qword_1ED98AF30);
    *((_QWORD *)&v134 + 1) = &type metadata for ParseResultEvent;
    *(_QWORD *)&v135 = &off_1E98019B0;
    v59 = swift_allocObject();
    *(_QWORD *)&v133 = v59;
    v60 = *(_OWORD *)&v158[16];
    *(_OWORD *)(v59 + 16) = *(_OWORD *)v158;
    *(_OWORD *)(v59 + 32) = v60;
    *(_BYTE *)(v59 + 48) = v159;
    v61 = objc_allocWithZone(v39);
    sub_1D46AAF28((uint64_t)&v133, (uint64_t)v61 + OBJC_IVAR____TtC18VisualIntelligence11AnyVIAEvent_event);
    sub_1D46CCA88((uint64_t)v161);
    sub_1D46CCB54(&v160);
    sub_1D46CCA88((uint64_t)v161);
    sub_1D46CCB54(&v160);
    v132.receiver = v61;
    v132.super_class = v39;
    v62 = objc_msgSendSuper2(&v132, sel_init);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
    objc_msgSend(v129, sel_logEvent_, v62);

    sub_1D46CCAB0((uint64_t)v161);
    sub_1D46CCB7C(&v160);
    sub_1D46CCAB0((uint64_t)v161);
    sub_1D46CCB7C(&v160);
  }
  if (v53)
  {
    swift_beginAccess();
    v63 = *(_QWORD *)(v53 + 16);
    swift_bridgeObjectRetain();
    v64 = sub_1D4699904(v130, 0, v63);
    swift_bridgeObjectRelease();
  }
  else
  {
    v64 = MEMORY[0x1E0DEE9D8];
  }
  v119 = v64;
  v65 = *(char **)(v64 + 16);
  if (v65)
  {
    v66 = (_BYTE *)(v119 + 64);
    do
    {
      v130 = v65;
      v67 = *((_QWORD *)v66 - 4);
      v68 = *((_QWORD *)v66 - 3);
      v70 = *((_QWORD *)v66 - 2);
      v69 = (void *)*((_QWORD *)v66 - 1);
      v71 = *v66;
      v66 += 40;
      *((_QWORD *)&v134 + 1) = &type metadata for DurationEvent;
      *(_QWORD *)&v135 = &off_1E97FC050;
      v72 = swift_allocObject();
      *(_QWORD *)&v133 = v72;
      *(_QWORD *)(v72 + 16) = v67;
      *(_QWORD *)(v72 + 24) = v68;
      *(_QWORD *)(v72 + 32) = v70;
      *(_QWORD *)(v72 + 40) = v69;
      *(_BYTE *)(v72 + 48) = v71;
      v73 = objc_allocWithZone(v39);
      sub_1D46AAF28((uint64_t)&v133, (uint64_t)v73 + OBJC_IVAR____TtC18VisualIntelligence11AnyVIAEvent_event);
      v131.receiver = v73;
      v131.super_class = v39;
      swift_bridgeObjectRetain_n();
      v74 = v69;
      v75 = v129;
      v76 = v74;
      v77 = objc_msgSendSuper2(&v131, (SEL)0x1F34D2DC8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
      objc_msgSend(v75, sel_logEvent_, v77);

      swift_bridgeObjectRelease_n();
      v65 = v130 - 1;
    }
    while (v130 != (char *)1);
  }
  swift_bridgeObjectRelease();
  v78 = v115 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_config;
  v79 = *(_QWORD *)(v78 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20))
      + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__parseCachingConfig;
  swift_beginAccess();
  v80 = v117;
  sub_1D469C5EC(v79, v117, (uint64_t *)&unk_1ED98E110);
  v81 = v116;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v80, 1, v116) == 1)
  {
    v82 = MEMORY[0x1E0DEE9D8];
    v83 = sub_1D47C3B60(MEMORY[0x1E0DEE9D8]);
    v84 = v105;
    *v105 = v83;
    v84[1] = sub_1D47C3B60(v82);
    v84[2] = sub_1D47C3B60(v82);
    sub_1D4922010();
    v85 = (char *)v84 + *(int *)(v81 + 32);
    v86 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v85, 1, 1, v86);
    v87 = sub_1D46992EC(v80, (uint64_t *)&unk_1ED98E110);
  }
  else
  {
    v84 = v105;
    v87 = sub_1D469C630(v80, (uint64_t)v105, type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig);
  }
  v88 = v109;
  v89 = (uint64_t)v106;
  v91 = v126;
  v90 = v127;
  MEMORY[0x1E0C80A78](v87);
  v92 = v125;
  *(&v105 - 4) = (unint64_t *)v93;
  *(&v105 - 3) = (unint64_t *)v92;
  *(&v105 - 2) = v84;
  sub_1D4696EA4(&qword_1ED98E900, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults, (uint64_t)&unk_1D4931B04);
  sub_1D49221FC();
  sub_1D4697DE0((uint64_t)v84, type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig);
  *(_QWORD *)&v133 = v90;
  *((_QWORD *)&v133 + 1) = v91;
  *(_QWORD *)&v134 = v124;
  *((_QWORD *)&v134 + 1) = v123;
  *(_QWORD *)&v135 = v122;
  *((_QWORD *)&v135 + 1) = v121;
  *(_QWORD *)&v136 = v120;
  *((_QWORD *)&v136 + 1) = v128;
  v94 = sub_1D46B9B74(&v133, v78);

  swift_bridgeObjectRelease();
  if ((v94 & 1) != 0)
  {
    v95 = v110;
    sub_1D469C630(v89, v110, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
    v96 = 0;
  }
  else
  {
    sub_1D4697DE0(v89, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
    v96 = 1;
    v95 = v110;
  }
  v97 = v111;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v108 + 56))(v95, v96, 1, v88);
  v98 = v154;
  *(_OWORD *)(v97 + 128) = v153;
  *(_OWORD *)(v97 + 144) = v98;
  *(_OWORD *)(v97 + 160) = v155;
  *(_QWORD *)(v97 + 176) = v156;
  v99 = v150;
  *(_OWORD *)(v97 + 64) = v149;
  *(_OWORD *)(v97 + 80) = v99;
  v100 = v152;
  *(_OWORD *)(v97 + 96) = v151;
  *(_OWORD *)(v97 + 112) = v100;
  v101 = v146;
  *(_OWORD *)v97 = v145;
  *(_OWORD *)(v97 + 16) = v101;
  v102 = v148;
  *(_OWORD *)(v97 + 32) = v147;
  *(_OWORD *)(v97 + 48) = v102;
  v103 = type metadata accessor for ParseResult(0);
  return sub_1D46B3464(v95, v97 + *(int *)(v103 + 20), &qword_1ED98E920);
}

uint64_t sub_1D47D8104()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1D4697DE0(v0 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_config, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_modelProviderService);
  swift_release();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_1D47D81D8()
{
  sub_1D47D8104();
  return swift_deallocClassInstance();
}

uint64_t ParseResult.visualUnderstanding.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[2];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v2 = v1[9];
  v3 = v1[7];
  v24 = v1[8];
  v25 = v2;
  v4 = v1[9];
  v26 = v1[10];
  v5 = v1[5];
  v7 = v1[3];
  v20 = v1[4];
  v6 = v20;
  v21 = v5;
  v8 = v1[5];
  v9 = v1[7];
  v22 = v1[6];
  v10 = v22;
  v23 = v9;
  v11 = v1[1];
  v17[0] = *v1;
  v17[1] = v11;
  v12 = v1[3];
  v14 = *v1;
  v13 = v1[1];
  v18 = v1[2];
  v15 = v18;
  v19 = v12;
  *(_OWORD *)(a1 + 128) = v24;
  *(_OWORD *)(a1 + 144) = v4;
  *(_OWORD *)(a1 + 160) = v1[10];
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v8;
  *(_OWORD *)(a1 + 96) = v10;
  *(_OWORD *)(a1 + 112) = v3;
  *(_OWORD *)a1 = v14;
  *(_OWORD *)(a1 + 16) = v13;
  v27 = *((_QWORD *)v1 + 22);
  *(_QWORD *)(a1 + 176) = *((_QWORD *)v1 + 22);
  *(_OWORD *)(a1 + 32) = v15;
  *(_OWORD *)(a1 + 48) = v7;
  return sub_1D46B2E18((uint64_t)v17);
}

uint64_t ParseResult.cachedResults.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = sub_1D4922370();
  MEMORY[0x1E0C80A78](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E920);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ParseResult(0);
  sub_1D469C5EC(v0 + *(int *)(v9 + 20), (uint64_t)v4, &qword_1ED98E920);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1D46992EC((uint64_t)v4, &qword_1ED98E920);
    return 0;
  }
  else
  {
    sub_1D469C630((uint64_t)v4, (uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
    sub_1D4696EA4(&qword_1ED98E900, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults, (uint64_t)&unk_1D4931B04);
    v10 = sub_1D49221CC();
    v12 = v11;
    v13 = sub_1D4920F60();
    sub_1D4696F10(v10, v12);
    sub_1D4697DE0((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
  }
  return v13;
}

uint64_t type metadata accessor for ParseResult(uint64_t a1)
{
  return sub_1D469C2D0(a1, qword_1ED98D848);
}

uint64_t sub_1D47D85C4()
{
  return type metadata accessor for ParseFlow(0);
}

uint64_t type metadata accessor for ParseFlow(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98EF28);
}

uint64_t sub_1D47D85E0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Argos_Protos_Queryflow_ParseConfig(319);
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ParseResult(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int *v27;
  unsigned int (*v28)(char *, uint64_t, int *);
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  char *v72;
  char *v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  uint64_t v77;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v9 = a2 + 1;
    v8 = a2[1];
    swift_bridgeObjectRetain();
    if (v8 == 1)
    {
      v10 = v9[1];
      *(_OWORD *)(a1 + 8) = *v9;
      *(_OWORD *)(a1 + 24) = v10;
      v11 = v9[3];
      *(_OWORD *)(a1 + 40) = v9[2];
      *(_OWORD *)(a1 + 56) = v11;
    }
    else
    {
      v12 = a2[2];
      v13 = a2[3];
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v12;
      v14 = a2[4];
      v15 = a2[5];
      *(_QWORD *)(a1 + 24) = v13;
      *(_QWORD *)(a1 + 32) = v14;
      v17 = a2[6];
      v16 = a2[7];
      *(_QWORD *)(a1 + 40) = v15;
      *(_QWORD *)(a1 + 48) = v17;
      v18 = a2[8];
      *(_QWORD *)(a1 + 56) = v16;
      *(_QWORD *)(a1 + 64) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v19 = a2[19];
    v20 = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(a1 + 88) = v20;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
    *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
    v21 = a2[17];
    *(_QWORD *)(a1 + 128) = a2[16];
    *(_QWORD *)(a1 + 136) = v21;
    *(_QWORD *)(a1 + 144) = a2[18];
    swift_bridgeObjectRetain();
    if (v19)
    {
      v22 = a2[20];
      v23 = a2[21];
      *(_QWORD *)(a1 + 152) = v19;
      *(_QWORD *)(a1 + 160) = v22;
      *(_QWORD *)(a1 + 168) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 19);
      *(_QWORD *)(a1 + 168) = a2[21];
    }
    *(_QWORD *)(a1 + 176) = a2[22];
    v24 = *(int *)(a3 + 20);
    v25 = (char *)(a1 + v24);
    v26 = (char *)a2 + v24;
    v27 = (int *)type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
    v77 = *((_QWORD *)v27 - 1);
    v28 = *(unsigned int (**)(char *, uint64_t, int *))(v77 + 48);
    swift_bridgeObjectRetain();
    if (v28(v26, 1, v27))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E920);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v30 = sub_1D492201C();
      v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
      v31(v25, v26, v30);
      v32 = v27[5];
      v33 = &v25[v32];
      v34 = &v26[v32];
      v35 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
      v36 = *(_QWORD *)(v35 - 8);
      v75 = v31;
      v76 = v25;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E728);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        v38 = *((_QWORD *)v34 + 1);
        *(_QWORD *)v33 = *(_QWORD *)v34;
        *((_QWORD *)v33 + 1) = v38;
        *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
        v39 = *(int *)(v35 + 24);
        v73 = &v33[v39];
        v40 = &v34[v39];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v31(v73, v40, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v41 = v30;
      v42 = v27[6];
      v43 = &v25[v42];
      v44 = &v26[v42];
      v45 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
      v46 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
      {
        v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E6F8);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        v49 = v31;
        v48 = v76;
      }
      else
      {
        v74 = v46;
        v50 = *((_QWORD *)v44 + 1);
        *(_QWORD *)v43 = *(_QWORD *)v44;
        *((_QWORD *)v43 + 1) = v50;
        *((_QWORD *)v43 + 2) = *((_QWORD *)v44 + 2);
        v51 = *(int *)(v45 + 24);
        v52 = &v43[v51];
        v53 = &v44[v51];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v75(v52, v53, v30);
        v54 = *(int *)(v45 + 28);
        v55 = &v43[v54];
        v56 = &v44[v54];
        v57 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
        v58 = *(_QWORD *)(v57 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
        {
          v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E810);
          memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
          v41 = v30;
          v49 = v75;
          v48 = v76;
        }
        else
        {
          v60 = *((_QWORD *)v56 + 1);
          *(_QWORD *)v55 = *(_QWORD *)v56;
          *((_QWORD *)v55 + 1) = v60;
          v61 = *((_QWORD *)v56 + 3);
          *((_QWORD *)v55 + 2) = *((_QWORD *)v56 + 2);
          *((_QWORD *)v55 + 3) = v61;
          v62 = *(int *)(v57 + 24);
          v72 = &v55[v62];
          v63 = &v56[v62];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v75(v72, v63, v30);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
          v41 = v30;
          v48 = v76;
          v49 = v75;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v43, 0, 1, v45);
      }
      v64 = v27[7];
      v65 = &v48[v64];
      v66 = &v26[v64];
      v67 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
      v68 = *(_QWORD *)(v67 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
      {
        v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E798);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        v70 = *((_OWORD *)v66 + 1);
        *(_OWORD *)v65 = *(_OWORD *)v66;
        *((_OWORD *)v65 + 1) = v70;
        v49(&v65[*(int *)(v67 + 32)], &v66[*(int *)(v67 + 32)], v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
      }
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v77 + 56))(v48, 0, 1, v27);
    }
  }
  return a1;
}

uint64_t destroy for ParseResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 152))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = (int *)type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    v7 = sub_1D492201C();
    v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v16(v4, v7);
    v8 = v4 + v5[5];
    v9 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16(v8 + *(int *)(v9 + 24), v7);
    }
    v10 = v4 + v5[6];
    v11 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16(v10 + *(int *)(v11 + 24), v7);
      v12 = v10 + *(int *)(v11 + 28);
      v13 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v16(v12 + *(int *)(v13 + 24), v7);
      }
    }
    v14 = v4 + v5[7];
    v15 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15);
    if (!(_DWORD)result)
      return ((uint64_t (*)(uint64_t, uint64_t))v16)(v14 + *(int *)(v15 + 32), v7);
  }
  return result;
}

uint64_t initializeWithCopy for ParseResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  uint64_t v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = (_OWORD *)(a1 + 8);
  v8 = (_OWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  if (v7 == 1)
  {
    v9 = v8[1];
    *v6 = *v8;
    *(_OWORD *)(a1 + 24) = v9;
    v10 = v8[3];
    *(_OWORD *)(a1 + 40) = v8[2];
    *(_OWORD *)(a1 + 56) = v10;
  }
  else
  {
    v11 = *(_QWORD *)(a2 + 16);
    v12 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v11;
    v13 = *(_QWORD *)(a2 + 32);
    v14 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 24) = v12;
    *(_QWORD *)(a1 + 32) = v13;
    v16 = *(_QWORD *)(a2 + 48);
    v15 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 40) = v14;
    *(_QWORD *)(a1 + 48) = v16;
    v17 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v15;
    *(_QWORD *)(a1 + 64) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v18 = *(_QWORD *)(a2 + 152);
  v19 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v19;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v20 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v20;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  if (v18)
  {
    v21 = *(_QWORD *)(a2 + 160);
    v22 = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 152) = v18;
    *(_QWORD *)(a1 + 160) = v21;
    *(_QWORD *)(a1 + 168) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  }
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  v23 = *(int *)(a3 + 20);
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  v26 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  swift_bridgeObjectRetain();
  if (v28(v25, 1, v26))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E920);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v30 = sub_1D492201C();
    v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
    v31(v24, v25, v30);
    v80 = v26;
    v32 = *(int *)(v26 + 20);
    v33 = &v24[v32];
    v34 = &v25[v32];
    v35 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
    v36 = *(_QWORD *)(v35 - 8);
    v79 = v24;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E728);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      v38 = *((_QWORD *)v34 + 1);
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *((_QWORD *)v33 + 1) = v38;
      *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
      v39 = *(int *)(v35 + 24);
      v77 = v27;
      v40 = &v33[v39];
      v41 = &v34[v39];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v42 = v40;
      v27 = v77;
      v31(v42, v41, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    v43 = v30;
    v44 = *(int *)(v80 + 24);
    v45 = &v24[v44];
    v46 = &v25[v44];
    v47 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
    v48 = *(_QWORD *)(v47 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E6F8);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      v50 = v79;
    }
    else
    {
      v75 = v48;
      v78 = v27;
      v51 = *((_QWORD *)v46 + 1);
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *((_QWORD *)v45 + 1) = v51;
      v52 = v43;
      *((_QWORD *)v45 + 2) = *((_QWORD *)v46 + 2);
      v53 = *(int *)(v47 + 24);
      v54 = &v45[v53];
      v55 = &v46[v53];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v31(v54, v55, v43);
      v56 = *(int *)(v47 + 28);
      v57 = &v45[v56];
      v58 = &v46[v56];
      v59 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
      v60 = *(_QWORD *)(v59 - 8);
      v76 = v52;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
      {
        v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E810);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        v62 = *((_QWORD *)v58 + 1);
        *(_QWORD *)v57 = *(_QWORD *)v58;
        *((_QWORD *)v57 + 1) = v62;
        v63 = *((_QWORD *)v58 + 3);
        *((_QWORD *)v57 + 2) = *((_QWORD *)v58 + 2);
        *((_QWORD *)v57 + 3) = v63;
        v64 = *(int *)(v59 + 24);
        v74 = &v57[v64];
        v65 = &v58[v64];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v31(v74, v65, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      v50 = v79;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v45, 0, 1, v47);
      v43 = v76;
      v27 = v78;
    }
    v66 = *(int *)(v80 + 28);
    v67 = &v50[v66];
    v68 = &v25[v66];
    v69 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
    v70 = *(_QWORD *)(v69 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
    {
      v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E798);
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    }
    else
    {
      v72 = *((_OWORD *)v68 + 1);
      *(_OWORD *)v67 = *(_OWORD *)v68;
      *((_OWORD *)v67 + 1) = v72;
      v31(&v67[*(int *)(v69 + 32)], &v68[*(int *)(v69 + 32)], v43);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v50, 0, 1, v80);
  }
  return a1;
}

uint64_t assignWithCopy for ParseResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  uint64_t v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, int *);
  int v28;
  int v29;
  uint64_t v30;
  int *v31;
  void (*v32)(uint64_t, char *, uint64_t);
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  size_t v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  _QWORD *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(char *, uint64_t, uint64_t);
  int v83;
  int v84;
  uint64_t v85;
  char *v86;
  char *v87;
  void (*v88)(char *, char *, uint64_t);
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  size_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  _QWORD *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t (*v112)(char *, uint64_t, uint64_t);
  int v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  void (*v119)(char *, char *, uint64_t);
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t (*v129)(char *, uint64_t, uint64_t);
  int v130;
  int v131;
  char *v132;
  uint64_t v133;
  char *v134;
  void (*v135)(uint64_t, char *);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int *v141;
  uint64_t v142;
  char *__src;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 8);
  v8 = (__int128 *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) == 1)
  {
    if (v7 == 1)
    {
      v9 = *v8;
      v10 = *(_OWORD *)(a2 + 24);
      v11 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v11;
      *v6 = v9;
      *(_OWORD *)(a1 + 24) = v10;
    }
    else
    {
      *(_QWORD *)(a1 + 8) = v7;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 1)
  {
    sub_1D46D2220(a1 + 8);
    v12 = *(_OWORD *)(a2 + 56);
    v14 = *v8;
    v13 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v12;
    *v6 = v14;
    *(_OWORD *)(a1 + 24) = v13;
  }
  else
  {
    *(_QWORD *)(a1 + 8) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v15 = *(_OWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v15;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = (_OWORD *)(a1 + 152);
  v17 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v19 = (_OWORD *)(a2 + 152);
  v18 = *(_QWORD *)(a2 + 152);
  if (v17)
  {
    if (v18)
    {
      *(_QWORD *)(a1 + 152) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D46E5F84(a1 + 152);
      v20 = *(_QWORD *)(a2 + 168);
      *v16 = *v19;
      *(_QWORD *)(a1 + 168) = v20;
    }
  }
  else if (v18)
  {
    *(_QWORD *)(a1 + 152) = v18;
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *v19;
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *v16 = v21;
  }
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = *(int *)(a3 + 20);
  v23 = a1 + v22;
  v24 = (char *)(a2 + v22);
  v25 = (int *)type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  v26 = *((_QWORD *)v25 - 1);
  v27 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v26 + 48);
  v28 = v27(v23, 1, v25);
  __src = v24;
  v29 = v27((uint64_t)v24, 1, v25);
  if (!v28)
  {
    if (v29)
    {
      sub_1D4697DE0(v23, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
      goto LABEL_21;
    }
    v42 = sub_1D492201C();
    v140 = *(_QWORD *)(v42 - 8);
    v142 = v42;
    v135 = *(void (**)(uint64_t, char *))(v140 + 24);
    v135(v23, v24);
    v43 = v25[5];
    v44 = (char *)(v23 + v43);
    v45 = &v24[v43];
    v46 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
    v47 = *(_QWORD *)(v46 - 8);
    v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
    v49 = v48(v44, 1, v46);
    v50 = v48(v45, 1, v46);
    if (v49)
    {
      if (!v50)
      {
        *(_QWORD *)v44 = *(_QWORD *)v45;
        *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
        *((_QWORD *)v44 + 2) = *((_QWORD *)v45 + 2);
        v51 = *(int *)(v46 + 24);
        v52 = v23;
        v53 = &v44[v51];
        v54 = &v45[v51];
        v55 = *(void (**)(char *, char *, uint64_t))(v140 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v56 = v53;
        v23 = v52;
        v55(v56, v54, v142);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
        goto LABEL_34;
      }
    }
    else
    {
      if (!v50)
      {
        *(_QWORD *)v44 = *(_QWORD *)v45;
        *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((_QWORD *)v44 + 2) = *((_QWORD *)v45 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        ((void (*)(char *, char *, uint64_t))v135)(&v44[*(int *)(v46 + 24)], &v45[*(int *)(v46 + 24)], v142);
LABEL_34:
        v77 = v25[6];
        v78 = (char *)(v23 + v77);
        v79 = &__src[v77];
        v80 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
        v81 = *(_QWORD *)(v80 - 8);
        v82 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v81 + 48);
        v83 = v82(v78, 1, v80);
        v84 = v82(v79, 1, v80);
        if (v83)
        {
          if (!v84)
          {
            v138 = v23;
            *(_QWORD *)v78 = *(_QWORD *)v79;
            *((_QWORD *)v78 + 1) = *((_QWORD *)v79 + 1);
            *((_QWORD *)v78 + 2) = *((_QWORD *)v79 + 2);
            v85 = *(int *)(v80 + 24);
            v86 = &v78[v85];
            v87 = &v79[v85];
            v88 = *(void (**)(char *, char *, uint64_t))(v140 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v88(v86, v87, v142);
            v89 = *(int *)(v80 + 28);
            v90 = &v78[v89];
            v91 = &v79[v89];
            v92 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
            v93 = *(_QWORD *)(v92 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v91, 1, v92))
            {
              v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E810);
              memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
            }
            else
            {
              *(_QWORD *)v90 = *(_QWORD *)v91;
              *((_QWORD *)v90 + 1) = *((_QWORD *)v91 + 1);
              *((_QWORD *)v90 + 2) = *((_QWORD *)v91 + 2);
              *((_QWORD *)v90 + 3) = *((_QWORD *)v91 + 3);
              v122 = *(int *)(v92 + 24);
              v134 = &v90[v122];
              v123 = &v91[v122];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v88(v134, v123, v142);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, v92);
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
            v23 = v138;
            goto LABEL_55;
          }
        }
        else
        {
          if (!v84)
          {
            *(_QWORD *)v78 = *(_QWORD *)v79;
            *((_QWORD *)v78 + 1) = *((_QWORD *)v79 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *((_QWORD *)v78 + 2) = *((_QWORD *)v79 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            ((void (*)(char *, char *, uint64_t))v135)(&v78[*(int *)(v80 + 24)], &v79[*(int *)(v80 + 24)], v142);
            v107 = *(int *)(v80 + 28);
            v108 = &v78[v107];
            v109 = &v79[v107];
            v110 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
            v111 = *(_QWORD *)(v110 - 8);
            v112 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v111 + 48);
            v113 = v112(v108, 1, v110);
            v114 = v112(v109, 1, v110);
            if (v113)
            {
              if (!v114)
              {
                *(_QWORD *)v108 = *(_QWORD *)v109;
                *((_QWORD *)v108 + 1) = *((_QWORD *)v109 + 1);
                *((_QWORD *)v108 + 2) = *((_QWORD *)v109 + 2);
                *((_QWORD *)v108 + 3) = *((_QWORD *)v109 + 3);
                v115 = *(int *)(v110 + 24);
                v116 = v23;
                v117 = &v108[v115];
                v118 = &v109[v115];
                v119 = *(void (**)(char *, char *, uint64_t))(v140 + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v120 = v117;
                v23 = v116;
                v121 = v142;
                v119(v120, v118, v142);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v108, 0, 1, v110);
LABEL_56:
                v124 = v25[7];
                v125 = (char *)(v23 + v124);
                v126 = &__src[v124];
                v127 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
                v128 = *(_QWORD *)(v127 - 8);
                v129 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v128 + 48);
                v130 = v129(v125, 1, v127);
                v131 = v129(v126, 1, v127);
                if (v130)
                {
                  if (!v131)
                  {
                    *(_QWORD *)v125 = *(_QWORD *)v126;
                    *((_QWORD *)v125 + 1) = *((_QWORD *)v126 + 1);
                    *((_QWORD *)v125 + 2) = *((_QWORD *)v126 + 2);
                    *((_QWORD *)v125 + 3) = *((_QWORD *)v126 + 3);
                    (*(void (**)(char *, char *, uint64_t))(v140 + 16))(&v125[*(int *)(v127 + 32)], &v126[*(int *)(v127 + 32)], v121);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v125, 0, 1, v127);
                    return a1;
                  }
                }
                else
                {
                  if (!v131)
                  {
                    *(_QWORD *)v125 = *(_QWORD *)v126;
                    *((_QWORD *)v125 + 1) = *((_QWORD *)v126 + 1);
                    *((_QWORD *)v125 + 2) = *((_QWORD *)v126 + 2);
                    *((_QWORD *)v125 + 3) = *((_QWORD *)v126 + 3);
                    ((void (*)(char *, char *, uint64_t))v135)(&v125[*(int *)(v127 + 32)], &v126[*(int *)(v127 + 32)], v121);
                    return a1;
                  }
                  sub_1D4697DE0((uint64_t)v125, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
                }
                v39 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E798) - 8)
                                + 64);
                v40 = v125;
                v41 = v126;
                goto LABEL_22;
              }
            }
            else
            {
              if (!v114)
              {
                *(_QWORD *)v108 = *(_QWORD *)v109;
                *((_QWORD *)v108 + 1) = *((_QWORD *)v109 + 1);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *((_QWORD *)v108 + 2) = *((_QWORD *)v109 + 2);
                *((_QWORD *)v108 + 3) = *((_QWORD *)v109 + 3);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v121 = v142;
                ((void (*)(char *, char *, uint64_t))v135)(&v108[*(int *)(v110 + 24)], &v109[*(int *)(v110 + 24)], v142);
                goto LABEL_56;
              }
              sub_1D4697DE0((uint64_t)v108, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion);
            }
            v95 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E810) - 8) + 64);
            v96 = v108;
            v97 = v109;
            goto LABEL_41;
          }
          sub_1D4697DE0((uint64_t)v78, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
        }
        v95 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E6F8) - 8) + 64);
        v96 = v78;
        v97 = v79;
LABEL_41:
        memcpy(v96, v97, v95);
LABEL_55:
        v121 = v142;
        goto LABEL_56;
      }
      sub_1D4697DE0((uint64_t)v44, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults);
    }
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E728);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_34;
  }
  if (v29)
  {
LABEL_21:
    v39 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E920) - 8) + 64);
    v40 = (void *)v23;
    v41 = v24;
LABEL_22:
    memcpy(v40, v41, v39);
    return a1;
  }
  v30 = sub_1D492201C();
  v31 = v25;
  v32 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
  v32(v23, v24, v30);
  v141 = v31;
  v33 = v31[5];
  v34 = (_QWORD *)(v23 + v33);
  v35 = &v24[v33];
  v36 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
  v37 = *(_QWORD *)(v36 - 8);
  v139 = v30;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E728);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    *v34 = *(_QWORD *)v35;
    v34[1] = *((_QWORD *)v35 + 1);
    v34[2] = *((_QWORD *)v35 + 2);
    v57 = *(int *)(v36 + 24);
    v136 = v23;
    v58 = (char *)v34 + v57;
    v59 = &v35[v57];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v60 = v58;
    v23 = v136;
    v32((uint64_t)v60, v59, v30);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  v61 = v141[6];
  v62 = (_QWORD *)(v23 + v61);
  v63 = &v24[v61];
  v64 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
  v65 = *(_QWORD *)(v64 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
  {
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E6F8);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    v133 = v65;
    v137 = v23;
    *v62 = *(_QWORD *)v63;
    v62[1] = *((_QWORD *)v63 + 1);
    v62[2] = *((_QWORD *)v63 + 2);
    v67 = *(int *)(v64 + 24);
    v68 = (char *)v62 + v67;
    v69 = &v63[v67];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32((uint64_t)v68, v69, v139);
    v70 = *(int *)(v64 + 28);
    v71 = (_QWORD *)((char *)v62 + v70);
    v72 = &v63[v70];
    v73 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
    v74 = *(_QWORD *)(v73 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
    {
      v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E810);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      *v71 = *(_QWORD *)v72;
      v71[1] = *((_QWORD *)v72 + 1);
      v71[2] = *((_QWORD *)v72 + 2);
      v71[3] = *((_QWORD *)v72 + 3);
      v98 = *(int *)(v73 + 24);
      v132 = (char *)v71 + v98;
      v99 = &v72[v98];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32((uint64_t)v132, v99, v139);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v62, 0, 1, v64);
    v23 = v137;
  }
  v100 = v141[7];
  v101 = (_QWORD *)(v23 + v100);
  v102 = &__src[v100];
  v103 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  v104 = *(_QWORD *)(v103 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48))(v102, 1, v103))
  {
    v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E798);
    memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
  }
  else
  {
    *v101 = *(_QWORD *)v102;
    v101[1] = *((_QWORD *)v102 + 1);
    v101[2] = *((_QWORD *)v102 + 2);
    v101[3] = *((_QWORD *)v102 + 3);
    v32((uint64_t)v101 + *(int *)(v103 + 32), &v102[*(int *)(v103 + 32)], v139);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v101, 0, 1, v103);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v26 + 56))(v23, 0, 1, v141);
  return a1;
}

uint64_t initializeWithTake for ParseResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);

  v4 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v4;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = *(_OWORD *)(a2 + 48);
  v9 = *(int *)(a3 + 20);
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  v12 = (int *)type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  v13 = *((_QWORD *)v12 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E920);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v49 = v13;
    v15 = sub_1D492201C();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
    v16(v10, v11, v15);
    v17 = v12[5];
    v18 = &v10[v17];
    v19 = &v11[v17];
    v20 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
    v21 = *(_QWORD *)(v20 - 8);
    v50 = v16;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E728);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_QWORD *)v18 + 2) = *((_QWORD *)v19 + 2);
      v16(&v18[*(int *)(v20 + 24)], &v19[*(int *)(v20 + 24)], v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v23 = v12[6];
    v24 = &v10[v23];
    v25 = &v11[v23];
    v26 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
    v27 = *(_QWORD *)(v26 - 8);
    v28 = v49;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E6F8);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      v30 = v50;
    }
    else
    {
      *(_OWORD *)v24 = *(_OWORD *)v25;
      *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
      v50(&v24[*(int *)(v26 + 24)], &v25[*(int *)(v26 + 24)], v15);
      v31 = *(int *)(v26 + 28);
      v32 = &v24[v31];
      v33 = &v25[v31];
      v48 = v15;
      v34 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
      v47 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v33, 1, v34))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E810);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        v30 = v50;
      }
      else
      {
        v36 = *((_OWORD *)v33 + 1);
        *(_OWORD *)v32 = *(_OWORD *)v33;
        *((_OWORD *)v32 + 1) = v36;
        v37 = *(int *)(v34 + 24);
        v38 = &v33[v37];
        v30 = v50;
        v50(&v32[v37], v38, v48);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v32, 0, 1, v34);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      v15 = v48;
      v28 = v49;
    }
    v39 = v12[7];
    v40 = &v10[v39];
    v41 = &v11[v39];
    v42 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E798);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      v45 = *((_OWORD *)v41 + 1);
      *(_OWORD *)v40 = *(_OWORD *)v41;
      *((_OWORD *)v40 + 1) = v45;
      v30(&v40[*(int *)(v42 + 32)], &v41[*(int *)(v42 + 32)], v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v28 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

uint64_t assignWithTake for ParseResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, int *);
  int v20;
  int v21;
  uint64_t v22;
  char *v23;
  void (*v24)(uint64_t, char *, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  size_t v32;
  void *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  int v42;
  int v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t, uint64_t);
  int v65;
  int v66;
  void (*v67)(uint64_t, char *, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  size_t v72;
  void *v73;
  char *v74;
  __int128 v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  _OWORD *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(uint64_t, uint64_t, uint64_t);
  int v94;
  int v95;
  __int128 v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t (*v104)(char *, uint64_t, uint64_t);
  int v105;
  int v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  _OWORD *v113;
  void (*__dst)(uint64_t, char *);
  _OWORD *__dsta;
  uint64_t v116;
  void (*v117)(uint64_t, char *, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) == 1)
    goto LABEL_4;
  if (v6 == 1)
  {
    sub_1D46D2220(a1 + 8);
LABEL_4:
    v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v7;
    v8 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v8;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v10 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 152);
  v12 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  if (v12)
  {
    if (v11)
    {
      *(_QWORD *)(a1 + 152) = v11;
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = v13;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D46E5F84(a1 + 152);
  }
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
LABEL_11:
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  v14 = *(int *)(a3 + 20);
  v15 = a1 + v14;
  v16 = (char *)(a2 + v14);
  v17 = (int *)type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  v18 = *((_QWORD *)v17 - 1);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19((uint64_t)v16, 1, v17);
  if (!v20)
  {
    if (v21)
    {
      sub_1D4697DE0(v15, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
      goto LABEL_17;
    }
    v35 = sub_1D492201C();
    v118 = *(_QWORD *)(v35 - 8);
    v120 = v35;
    __dst = *(void (**)(uint64_t, char *))(v118 + 40);
    __dst(v15, v16);
    v36 = v17[5];
    v37 = (char *)(v15 + v36);
    v38 = &v16[v36];
    v39 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
    v40 = *(_QWORD *)(v39 - 8);
    v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
    v42 = v41(v37, 1, v39);
    v43 = v41(v38, 1, v39);
    if (v42)
    {
      if (!v43)
      {
        *(_OWORD *)v37 = *(_OWORD *)v38;
        *((_QWORD *)v37 + 2) = *((_QWORD *)v38 + 2);
        (*(void (**)(char *, char *, uint64_t))(v118 + 32))(&v37[*(int *)(v39 + 24)], &v38[*(int *)(v39 + 24)], v120);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
        goto LABEL_30;
      }
    }
    else
    {
      if (!v43)
      {
        v86 = *((_QWORD *)v38 + 1);
        *(_QWORD *)v37 = *(_QWORD *)v38;
        *((_QWORD *)v37 + 1) = v86;
        swift_bridgeObjectRelease();
        *((_QWORD *)v37 + 2) = *((_QWORD *)v38 + 2);
        swift_bridgeObjectRelease();
        ((void (*)(char *, char *, uint64_t))__dst)(&v37[*(int *)(v39 + 24)], &v38[*(int *)(v39 + 24)], v120);
LABEL_30:
        v59 = v17[6];
        v60 = v15 + v59;
        v61 = &v16[v59];
        v62 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
        v63 = *(_QWORD *)(v62 - 8);
        v64 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
        v65 = v64(v60, 1, v62);
        v66 = v64((uint64_t)v61, 1, v62);
        if (v65)
        {
          if (!v66)
          {
            *(_OWORD *)v60 = *(_OWORD *)v61;
            *(_QWORD *)(v60 + 16) = *((_QWORD *)v61 + 2);
            v67 = *(void (**)(uint64_t, char *, uint64_t))(v118 + 32);
            v67(v60 + *(int *)(v62 + 24), &v61[*(int *)(v62 + 24)], v120);
            v68 = *(int *)(v62 + 28);
            v113 = (_OWORD *)(v60 + v68);
            v69 = &v61[v68];
            v70 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
            v111 = *(_QWORD *)(v70 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48))(v69, 1, v70))
            {
              v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E810);
              memcpy(v113, v69, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
            }
            else
            {
              v98 = *((_OWORD *)v69 + 1);
              *v113 = *(_OWORD *)v69;
              v113[1] = v98;
              v67((uint64_t)v113 + *(int *)(v70 + 24), &v69[*(int *)(v70 + 24)], v120);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v113, 0, 1, v70);
            }
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
            goto LABEL_51;
          }
        }
        else
        {
          if (!v66)
          {
            v87 = *((_QWORD *)v61 + 1);
            *(_QWORD *)v60 = *(_QWORD *)v61;
            *(_QWORD *)(v60 + 8) = v87;
            swift_bridgeObjectRelease();
            *(_QWORD *)(v60 + 16) = *((_QWORD *)v61 + 2);
            swift_bridgeObjectRelease();
            ((void (*)(uint64_t, char *, uint64_t))__dst)(v60 + *(int *)(v62 + 24), &v61[*(int *)(v62 + 24)], v120);
            v88 = *(int *)(v62 + 28);
            v89 = v60 + v88;
            v90 = &v61[v88];
            v91 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
            v92 = *(_QWORD *)(v91 - 8);
            v93 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 48);
            v94 = v93(v89, 1, v91);
            v95 = v93((uint64_t)v90, 1, v91);
            if (v94)
            {
              if (!v95)
              {
                v96 = *((_OWORD *)v90 + 1);
                *(_OWORD *)v89 = *(_OWORD *)v90;
                *(_OWORD *)(v89 + 16) = v96;
                v97 = v120;
                (*(void (**)(uint64_t, char *, uint64_t))(v118 + 32))(v89 + *(int *)(v91 + 24), &v90[*(int *)(v91 + 24)], v120);
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v92 + 56))(v89, 0, 1, v91);
LABEL_52:
                v99 = v17[7];
                v100 = (char *)(v15 + v99);
                v101 = &v16[v99];
                v102 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
                v103 = *(_QWORD *)(v102 - 8);
                v104 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v103 + 48);
                v105 = v104(v100, 1, v102);
                v106 = v104(v101, 1, v102);
                if (v105)
                {
                  if (!v106)
                  {
                    v107 = *((_OWORD *)v101 + 1);
                    *(_OWORD *)v100 = *(_OWORD *)v101;
                    *((_OWORD *)v100 + 1) = v107;
                    (*(void (**)(char *, char *, uint64_t))(v118 + 32))(&v100[*(int *)(v102 + 32)], &v101[*(int *)(v102 + 32)], v97);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
                    return a1;
                  }
                }
                else
                {
                  if (!v106)
                  {
                    v108 = *((_OWORD *)v101 + 1);
                    *(_OWORD *)v100 = *(_OWORD *)v101;
                    *((_OWORD *)v100 + 1) = v108;
                    ((void (*)(char *, char *, uint64_t))__dst)(&v100[*(int *)(v102 + 32)], &v101[*(int *)(v102 + 32)], v97);
                    return a1;
                  }
                  sub_1D4697DE0((uint64_t)v100, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
                }
                v32 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E798) - 8)
                                + 64);
                v33 = v100;
                v34 = v101;
                goto LABEL_18;
              }
            }
            else
            {
              if (!v95)
              {
                v109 = *((_QWORD *)v90 + 1);
                *(_QWORD *)v89 = *(_QWORD *)v90;
                *(_QWORD *)(v89 + 8) = v109;
                swift_bridgeObjectRelease();
                v110 = *((_QWORD *)v90 + 3);
                *(_QWORD *)(v89 + 16) = *((_QWORD *)v90 + 2);
                *(_QWORD *)(v89 + 24) = v110;
                swift_bridgeObjectRelease();
                v97 = v120;
                ((void (*)(uint64_t, char *, uint64_t))__dst)(v89 + *(int *)(v91 + 24), &v90[*(int *)(v91 + 24)], v120);
                goto LABEL_52;
              }
              sub_1D4697DE0(v89, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion);
            }
            v72 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E810) - 8) + 64);
            v73 = (void *)v89;
            v74 = v90;
            goto LABEL_37;
          }
          sub_1D4697DE0(v60, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
        }
        v72 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E6F8) - 8) + 64);
        v73 = (void *)v60;
        v74 = v61;
LABEL_37:
        memcpy(v73, v74, v72);
LABEL_51:
        v97 = v120;
        goto LABEL_52;
      }
      sub_1D4697DE0((uint64_t)v37, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults);
    }
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E728);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_30;
  }
  if (v21)
  {
LABEL_17:
    v32 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E920) - 8) + 64);
    v33 = (void *)v15;
    v34 = v16;
LABEL_18:
    memcpy(v33, v34, v32);
    return a1;
  }
  v22 = sub_1D492201C();
  v23 = v16;
  v24 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
  v24(v15, v23, v22);
  v25 = v17[5];
  v116 = v15;
  v26 = (_QWORD *)(v15 + v25);
  v27 = v23;
  v28 = &v23[v25];
  v29 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
  v30 = *(_QWORD *)(v29 - 8);
  v117 = v24;
  v119 = v22;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E728);
    memcpy(v26, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v26 = *(_OWORD *)v28;
    v26[2] = *((_QWORD *)v28 + 2);
    v24((uint64_t)v26 + *(int *)(v29 + 24), &v28[*(int *)(v29 + 24)], v22);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
  }
  v44 = v27;
  v45 = v116;
  v46 = v17[6];
  v47 = (_QWORD *)(v116 + v46);
  v48 = &v44[v46];
  v49 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E6F8);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    v53 = (void (*)(char *, char *, uint64_t))v117;
    v52 = v119;
  }
  else
  {
    *(_OWORD *)v47 = *(_OWORD *)v48;
    v47[2] = *((_QWORD *)v48 + 2);
    v117((uint64_t)v47 + *(int *)(v49 + 24), &v48[*(int *)(v49 + 24)], v119);
    v54 = *(int *)(v49 + 28);
    __dsta = (_OWORD *)((char *)v47 + v54);
    v55 = &v48[v54];
    v56 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
    v112 = *(void **)(v56 - 8);
    if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v112 + 6))(v55, 1, v56))
    {
      v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E810);
      memcpy(__dsta, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      v53 = (void (*)(char *, char *, uint64_t))v117;
      v52 = v119;
    }
    else
    {
      v75 = *((_OWORD *)v55 + 1);
      *__dsta = *(_OWORD *)v55;
      __dsta[1] = v75;
      v76 = *(int *)(v56 + 24);
      v77 = &v55[v76];
      v53 = (void (*)(char *, char *, uint64_t))v117;
      v117((uint64_t)__dsta + v76, v77, v119);
      v45 = v116;
      (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))v112 + 7))(__dsta, 0, 1, v56);
      v52 = v119;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  v78 = v17[7];
  v79 = (_OWORD *)(v45 + v78);
  v80 = &v44[v78];
  v81 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  v82 = *(_QWORD *)(v81 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81))
  {
    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E798);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
  }
  else
  {
    v84 = *((_OWORD *)v80 + 1);
    *v79 = *(_OWORD *)v80;
    v79[1] = v84;
    v53((char *)v79 + *(int *)(v81 + 32), &v80[*(int *)(v81 + 32)], v52);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v18 + 56))(v45, 0, 1, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParseResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D47DAC40(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E920);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ParseResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D47DACCC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E920);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_1D47DAD44()
{
  unint64_t v0;

  sub_1D47DADB8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1D47DADB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED98E928)
  {
    type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(255);
    v0 = sub_1D4922A60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED98E928);
  }
}

unint64_t sub_1D47DAE0C(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_1D49226F4();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return sub_1D49227C0();
  }
  __break(1u);
  return result;
}

uint64_t sub_1D47DAEA8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  id v28;

  v3 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D492204C();
  MEMORY[0x1E0C80A78](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E920);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v23 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v23 - v15;
  v24 = v4;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v17((char *)&v23 - v15, 1, 1, v3);
  if (!a1)
  {
    v11 = v16;
    goto LABEL_9;
  }
  v23 = v6;
  v28 = a1;
  sub_1D4920F6C();
  v27 = 0;
  v25 = 0u;
  v26 = 0u;
  sub_1D4922040();
  sub_1D4696EA4(&qword_1ED98E900, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults, (uint64_t)&unk_1D4931B04);
  sub_1D49221C0();
  sub_1D46992EC((uint64_t)v16, &qword_1ED98E920);
  if (!v1)
  {
    v18 = v28;
    v17(v14, 0, 1, v3);
    sub_1D46B3464((uint64_t)v14, (uint64_t)v16, &qword_1ED98E920);
    sub_1D469C5EC((uint64_t)v16, (uint64_t)v11, &qword_1ED98E920);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v11, 1, v3) == 1)
    {
      sub_1D46992EC((uint64_t)v16, &qword_1ED98E920);

    }
    else
    {
      v19 = (uint64_t)v23;
      sub_1D469C630((uint64_t)v11, (uint64_t)v23, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
      if (!sub_1D46BAEB4())
      {
        sub_1D4792DD4();
        swift_allocError();
        *v22 = 2;
        swift_willThrow();

        sub_1D4697DE0(v19, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
        v20 = (uint64_t)v16;
        goto LABEL_10;
      }

      sub_1D4697DE0(v19, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
      v11 = v16;
    }
LABEL_9:
    v20 = (uint64_t)v11;
LABEL_10:
    sub_1D46992EC(v20, &qword_1ED98E920);
    return 1;
  }

  return 1;
}

uint64_t sub_1D47DB1B4(__int128 *a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  void (*v24)(void);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t i;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  char v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  __int16 v59;
  unsigned __int8 *v60;
  char v61;
  unint64_t v62;
  int v63;
  char v65;
  char v66;
  unsigned __int8 *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  unint64_t v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  int *v84;
  _QWORD *v85;
  _QWORD *v86;
  _OWORD *v87;
  char *v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  void (*v117)(_QWORD);
  unsigned __int8 *v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  uint64_t v122;
  _OWORD v123[8];
  _OWORD v124[2];
  _BYTE v125[216];
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  _BYTE v152[48];
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  float v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  _OWORD v170[2];
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  uint64_t v182;
  _BYTE v183[176];

  v7 = type metadata accessor for RegionSearchResult.ResultItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  v107 = v7;
  v108 = v8;
  MEMORY[0x1E0C80A78](v7);
  v109 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for ObjectKnowledge();
  v106 = *(_QWORD *)(v110 - 8);
  MEMORY[0x1E0C80A78](v110);
  v111 = (char *)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D7C0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = a1[9];
  v179 = a1[8];
  v180 = v19;
  v181 = a1[10];
  v182 = *((_QWORD *)a1 + 22);
  v20 = a1[5];
  v175 = a1[4];
  v176 = v20;
  v21 = a1[7];
  v177 = a1[6];
  v178 = v21;
  v22 = a1[1];
  v171 = *a1;
  v172 = v22;
  v23 = a1[3];
  v173 = a1[2];
  v174 = v23;
  v24 = *(void (**)(void))(v12 + 56);
  v122 = (uint64_t)&v105 - v25;
  v26 = v11;
  v24();
  sub_1D46C6BD0((uint64_t)v183);
  *(_QWORD *)&v120 = *(_QWORD *)(v171 + 16);
  if ((_QWORD)v120)
  {
    v112 = v171;
    v113 = v18;
    v115 = v14;
    v116 = a4;
    v117 = a3;
    *(_QWORD *)&v119 = v171
                     + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    swift_bridgeObjectRetain();
    sub_1D46B3464((uint64_t)v183, (uint64_t)&v139, &qword_1ED98D5D0);
    v27 = 0;
    v114 = v12;
    v118 = *(unsigned __int8 **)(v12 + 72);
    v28 = v122;
    while (1)
    {
      v29 = v119 + (_QWORD)v118 * v27;
      v30 = *(_QWORD *)(v29 + 40);
      v31 = *(_QWORD *)(v30 + 16);
      if (v31)
      {
        *(_QWORD *)&v121 = v27;
        swift_bridgeObjectRetain();
        sub_1D46B3464((uint64_t)&v139, (uint64_t)&v126, &qword_1ED98D5D0);
        v32 = v31 - 1;
        for (i = 32; ; i += 160)
        {
          v34 = *(_OWORD *)(v30 + i);
          v163 = *(_OWORD *)(v30 + i + 16);
          v162 = v34;
          v35 = *(_OWORD *)(v30 + i + 32);
          v36 = *(_OWORD *)(v30 + i + 48);
          v37 = *(_OWORD *)(v30 + i + 64);
          v167 = *(_OWORD *)(v30 + i + 80);
          v166 = v37;
          v165 = v36;
          v164 = v35;
          v38 = *(_OWORD *)(v30 + i + 96);
          v39 = *(_OWORD *)(v30 + i + 112);
          v40 = *(_OWORD *)(v30 + i + 128);
          *(_OWORD *)((char *)v170 + 12) = *(_OWORD *)(v30 + i + 140);
          v170[0] = v40;
          v169 = v39;
          v168 = v38;
          if (*(_QWORD *)&v170[1])
          {
            sub_1D46A47CC((uint64_t)&v162);
            sub_1D46992EC(v28, &qword_1ED98D7C0);
            sub_1D469C304(v29, v28, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v24)(v28, 0, 1, v26);
            sub_1D46C6AE4((uint64_t)&v126, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6B50);
            v123[6] = v168;
            v123[7] = v169;
            v124[0] = v170[0];
            *(_OWORD *)((char *)v124 + 12) = *(_OWORD *)((char *)v170 + 12);
            v123[2] = v164;
            v123[3] = v165;
            v123[4] = v166;
            v123[5] = v167;
            v123[0] = v162;
            v123[1] = v163;
            faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v123);
            v41 = v123;
          }
          else
          {
            v41 = &v126;
          }
          sub_1D46B3464((uint64_t)v41, (uint64_t)v152, &qword_1ED98D5D0);
          if (!v32)
            break;
          sub_1D46B3464((uint64_t)v152, (uint64_t)&v126, &qword_1ED98D5D0);
          --v32;
        }
        swift_bridgeObjectRelease();
        sub_1D46B3464((uint64_t)v152, (uint64_t)v125, &qword_1ED98D5D0);
        v27 = v121;
      }
      else
      {
        sub_1D46B3464((uint64_t)&v139, (uint64_t)v125, &qword_1ED98D5D0);
      }
      if (++v27 == (_QWORD)v120)
        break;
      sub_1D46B3464((uint64_t)v125, (uint64_t)&v139, &qword_1ED98D5D0);
    }
    swift_bridgeObjectRelease();
    sub_1D46B3464((uint64_t)v125, (uint64_t)&v162, &qword_1ED98D5D0);
    a4 = v116;
    a3 = v117;
    v12 = v114;
    v14 = v115;
    v18 = v113;
  }
  else
  {
    sub_1D46B3464((uint64_t)v183, (uint64_t)&v162, &qword_1ED98D5D0);
  }
  sub_1D469C5EC(v122, (uint64_t)v18, &qword_1ED98D7C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v18, 1, v26) != 1)
  {
    sub_1D469C630((uint64_t)v18, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1D46B3464((uint64_t)&v162, (uint64_t)v152, &qword_1ED98D5D0);
    if (sub_1D46A47A8((uint64_t)v152) == 1 || (v42 = v154) == 0 || (v43 = v160) == 0)
    {
      sub_1D4697DE0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      goto LABEL_26;
    }
    v115 = v14;
    v116 = a4;
    v117 = a3;
    *(_QWORD *)&v120 = v153;
    v44 = v159;
    v45 = v110;
    v46 = v111;
    v47 = &v111[*(int *)(v110 + 24)];
    v48 = sub_1D4920F18();
    v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56);
    v49(v47, 1, 1, v48);
    v49(&v46[*(int *)(v45 + 40)], 1, 1, v48);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1D46C6AE4((uint64_t)&v162, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6A64);
    v50 = sub_1D4922778();
    *(_QWORD *)&v119 = v44;
    if ((v50 & 1) != 0)
    {
      swift_bridgeObjectRetain();
      v51 = sub_1D47DAE0C(1uLL, v44, v43);
      v53 = v52;
      v55 = v54;
      v57 = v56;
      swift_bridgeObjectRelease();
      if ((v51 ^ v53) >= 0x4000)
      {
        v58 = sub_1D46BEAF8(v51, v53, v55, v57, 10);
        if ((v59 & 0x100) != 0)
        {
          v60 = sub_1D46BCF2C(v51, v53, v55, v57, 10);
          v66 = v65;
          v62 = v43;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v63 = v66 & 1;
        }
        else
        {
          v60 = (unsigned __int8 *)v58;
          v61 = v59;
          v62 = v43;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v63 = v61 & 1;
        }
        if (v63)
          v67 = 0;
        else
          v67 = v60;
        v118 = v67;
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v118 = 0;
    v62 = v43;
LABEL_34:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAB48);
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAB50);
    v69 = *(unsigned __int8 *)(*(_QWORD *)(v68 - 8) + 80);
    v70 = (v69 + 32) & ~v69;
    v71 = swift_allocObject();
    v121 = xmmword_1D49273C0;
    *(_OWORD *)(v71 + 16) = xmmword_1D49273C0;
    v72 = (_QWORD *)(v71 + v70 + *(int *)(v68 + 48));
    sub_1D4920FFC();
    v73 = v120;
    *v72 = v120;
    v72[1] = v42;
    swift_bridgeObjectRetain();
    v74 = sub_1D47C4344(v71);
    v75 = v161;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAB58);
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAB60);
    v77 = *(unsigned __int8 *)(*(_QWORD *)(v76 - 8) + 80);
    v78 = (v77 + 32) & ~v77;
    v79 = swift_allocObject();
    *(_OWORD *)(v79 + 16) = v121;
    v80 = v79 + v78;
    v81 = *(int *)(v76 + 48);
    sub_1D4920FFC();
    *(_QWORD *)(v80 + v81) = MEMORY[0x1E0DEE9E8];
    v82 = sub_1D47C44E0(v79);
    v83 = v111;
    *(_QWORD *)v111 = v119;
    v83[1] = v62;
    v83[2] = v73;
    v83[3] = v42;
    v84 = (int *)v110;
    *(_DWORD *)((char *)v83 + *(int *)(v110 + 28)) = 0;
    v85 = (_QWORD *)((char *)v83 + v84[8]);
    *v85 = 0;
    v85[1] = 0xE000000000000000;
    v86 = (_QWORD *)((char *)v83 + v84[9]);
    *v86 = 0;
    v86[1] = 0xE000000000000000;
    *(_QWORD *)((char *)v83 + v84[11]) = MEMORY[0x1E0DEE9D8];
    v87 = (_OWORD *)((char *)v83 + v84[12]);
    v87[2] = 0u;
    v87[3] = 0u;
    *v87 = 0u;
    v87[1] = 0u;
    v88 = (char *)v83 + v84[13];
    *(_QWORD *)v88 = 123711979;
    v88[8] = 0;
    v89 = v84[14];
    v119 = xmmword_1D492FFE0;
    *(_OWORD *)((char *)v83 + v89) = xmmword_1D492FFE0;
    *(_QWORD *)((char *)v83 + v84[15]) = v118;
    *(_WORD *)((char *)v83 + v84[16]) = 1;
    v90 = (_QWORD *)((char *)v83 + v84[17]);
    *v90 = v73;
    v90[1] = v42;
    *(_QWORD *)((char *)v83 + v84[18]) = v74;
    *(double *)((char *)v83 + v84[19]) = v75;
    *((_BYTE *)v83 + v84[20]) = 0;
    v91 = (_QWORD *)((char *)v83 + v84[21]);
    *v91 = 0;
    v91[1] = 0xE000000000000000;
    v92 = (_QWORD *)((char *)v83 + v84[22]);
    *v92 = 0;
    v92[1] = 0xE000000000000000;
    *(_QWORD *)((char *)v83 + v84[23]) = v82;
    *(_QWORD *)((char *)v83 + v84[24]) = 0;
    *(_QWORD *)((char *)v83 + v84[25]) = 0;
    *(_DWORD *)((char *)v83 + v84[26]) = 0;
    LOBYTE(v81) = v152[0];
    v93 = v155;
    v94 = v156;
    v95 = v157;
    v96 = v158;
    sub_1D46A484C(v155, v156);
    sub_1D46C6AE4((uint64_t)&v162, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6B50);
    v97 = (uint64_t)v109;
    v98 = (uint64_t)&v109[*(int *)(v107 + 24)];
    sub_1D469C304((uint64_t)v83, v98, (uint64_t (*)(_QWORD))type metadata accessor for ObjectKnowledge);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v106 + 56))(v98, 0, 1, v84);
    *(_BYTE *)v97 = v81;
    *(_QWORD *)(v97 + 8) = v93;
    *(_QWORD *)(v97 + 16) = v94;
    *(_QWORD *)(v97 + 24) = v95;
    *(_QWORD *)(v97 + 32) = v96;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB968);
    v99 = swift_allocObject();
    *(_OWORD *)(v99 + 16) = v121;
    v100 = (uint64_t)v115;
    v120 = *(_OWORD *)v115;
    v101 = *((_QWORD *)v115 + 2);
    v102 = *((_QWORD *)v115 + 3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB970);
    v103 = (*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
    v104 = swift_allocObject();
    *(_OWORD *)(v104 + 16) = v121;
    sub_1D469C304(v97, v104 + v103, type metadata accessor for RegionSearchResult.ResultItem);
    *(_OWORD *)(v99 + 32) = v120;
    *(_QWORD *)(v99 + 48) = v101;
    *(_QWORD *)(v99 + 56) = v102;
    *(_QWORD *)(v99 + 64) = v104;
    *(_QWORD *)(v99 + 72) = MEMORY[0x1E0DEE9D8];
    v134 = v179;
    v135 = v180;
    v136 = v181;
    v130 = v175;
    v131 = v176;
    v132 = v177;
    v133 = v178;
    v126 = v171;
    v127 = v172;
    v128 = v173;
    v129 = v174;
    *(_QWORD *)&v137 = v182;
    *((_QWORD *)&v137 + 1) = v99;
    v145 = v177;
    v146 = v178;
    v147 = v179;
    v148 = v180;
    v141 = v173;
    v142 = v174;
    v143 = v175;
    v144 = v176;
    v140 = v172;
    v138 = v119;
    v139 = v171;
    v149 = v181;
    v150 = v137;
    v151 = v119;
    sub_1D47DD69C((uint64_t)&v139);
    sub_1D46B3464((uint64_t)&v139, (uint64_t)v125, &qword_1EFEAB978);
    sub_1D46B2E18((uint64_t)&v171);
    v117(v125);
    sub_1D47DC9CC(&v126);
    sub_1D4697DE0(v97, type metadata accessor for RegionSearchResult.ResultItem);
    sub_1D4697DE0((uint64_t)v83, (uint64_t (*)(_QWORD))type metadata accessor for ObjectKnowledge);
    sub_1D4697DE0(v100, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    goto LABEL_27;
  }
  sub_1D46992EC((uint64_t)v18, &qword_1ED98D7C0);
LABEL_26:
  v134 = v179;
  v135 = v180;
  v136 = v181;
  v130 = v175;
  v131 = v176;
  v132 = v177;
  v133 = v178;
  v126 = v171;
  v127 = v172;
  v128 = v173;
  v129 = v174;
  *(_QWORD *)&v137 = v182;
  *((_QWORD *)&v137 + 1) = MEMORY[0x1E0DEE9D8];
  v145 = v177;
  v146 = v178;
  v147 = v179;
  v148 = v180;
  v141 = v173;
  v142 = v174;
  v143 = v175;
  v144 = v176;
  v140 = v172;
  v138 = xmmword_1D492FFE0;
  v139 = v171;
  v149 = v181;
  v150 = v137;
  v151 = xmmword_1D492FFE0;
  sub_1D47DD69C((uint64_t)&v139);
  sub_1D46B3464((uint64_t)&v139, (uint64_t)v125, &qword_1EFEAB978);
  sub_1D46B2E18((uint64_t)&v171);
  a3(v125);
  sub_1D47DC9CC(&v126);
LABEL_27:
  sub_1D46C6AE4((uint64_t)&v162, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6B50);
  return sub_1D46992EC(v122, &qword_1ED98D7C0);
}

void sub_1D47DBD1C(__int128 *a1, uint64_t a2, const void *a3)
{
  _QWORD *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t i;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  char v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  __int16 v59;
  unsigned __int8 *v60;
  char v61;
  int v62;
  id v63;
  unsigned __int8 *v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  unint64_t v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  int *v80;
  _QWORD *v81;
  _QWORD *v82;
  _QWORD *v83;
  _OWORD *v84;
  char *v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  _QWORD *v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  _QWORD *v110;
  const void *v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  uint64_t v116;
  _OWORD v117[8];
  _OWORD v118[3];
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  _BYTE v145[160];
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  _OWORD v154[2];
  uint64_t v155;
  _BYTE v156[160];
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  uint64_t v168;
  _BYTE v169[176];

  v4 = a1;
  v5 = a1[9];
  v165 = a1[8];
  v166 = v5;
  v167 = a1[10];
  v168 = *((_QWORD *)a1 + 22);
  v6 = a1[5];
  v161 = a1[4];
  v162 = v6;
  v7 = a1[7];
  v163 = a1[6];
  v164 = v7;
  v8 = a1[1];
  v157 = *a1;
  v158 = v8;
  v9 = a1[3];
  v159 = a1[2];
  v160 = v9;
  v10 = type metadata accessor for RegionSearchResult.ResultItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  v102 = v10;
  v103 = v11;
  MEMORY[0x1E0C80A78](v10);
  v104 = (char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for ObjectKnowledge();
  v101 = *(_QWORD *)(v105 - 8);
  MEMORY[0x1E0C80A78](v105);
  v106 = (char *)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D7C0);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v101 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v22 = *(void (**)(void))(v15 + 56);
  v116 = (uint64_t)&v101 - v23;
  v24 = v14;
  v22();
  sub_1D46C6BD0((uint64_t)v169);
  v155 = *v4;
  *(_QWORD *)&v114 = *(_QWORD *)(v155 + 16);
  if ((_QWORD)v114)
  {
    v107 = v21;
    v109 = v17;
    v110 = v4;
    *(_QWORD *)&v113 = v155
                     + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    _Block_copy(a3);
    v111 = a3;
    _Block_copy(a3);
    sub_1D46B34A8((uint64_t)&v155);
    sub_1D46B3464((uint64_t)v169, (uint64_t)&v132, &qword_1ED98D5D0);
    v25 = 0;
    v108 = v15;
    v112 = *(_QWORD *)(v15 + 72);
    while (1)
    {
      v26 = v113 + v112 * v25;
      v27 = *(_QWORD *)(v26 + 40);
      v28 = *(_QWORD *)(v27 + 16);
      if (v28)
      {
        *(_QWORD *)&v115 = v25;
        swift_bridgeObjectRetain();
        sub_1D46B3464((uint64_t)&v132, (uint64_t)v156, &qword_1ED98D5D0);
        v29 = v28 - 1;
        for (i = 32; ; i += 160)
        {
          v31 = *(_OWORD *)(v27 + i + 16);
          v146 = *(_OWORD *)(v27 + i);
          v147 = v31;
          v32 = *(_OWORD *)(v27 + i + 32);
          v33 = *(_OWORD *)(v27 + i + 48);
          v34 = *(_OWORD *)(v27 + i + 80);
          v150 = *(_OWORD *)(v27 + i + 64);
          v151 = v34;
          v148 = v32;
          v149 = v33;
          v35 = *(_OWORD *)(v27 + i + 96);
          v36 = *(_OWORD *)(v27 + i + 112);
          v37 = *(_OWORD *)(v27 + i + 128);
          *(_OWORD *)((char *)v154 + 12) = *(_OWORD *)(v27 + i + 140);
          v154[0] = v37;
          v152 = v35;
          v153 = v36;
          if (*(_QWORD *)&v154[1])
          {
            v38 = v116;
            sub_1D46992EC(v116, &qword_1ED98D7C0);
            sub_1D469C304(v26, v38, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v22)(v38, 0, 1, v24);
            v117[6] = v152;
            v117[7] = v153;
            v118[0] = v154[0];
            *(_OWORD *)((char *)v118 + 12) = *(_OWORD *)((char *)v154 + 12);
            v117[2] = v148;
            v117[3] = v149;
            v117[4] = v150;
            v117[5] = v151;
            v117[0] = v146;
            v117[1] = v147;
            faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v117);
            sub_1D46A47CC((uint64_t)&v146);
            sub_1D46C6AE4((uint64_t)v156, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6B50);
            v39 = v117;
          }
          else
          {
            v39 = v156;
          }
          sub_1D46B3464((uint64_t)v39, (uint64_t)v145, &qword_1ED98D5D0);
          if (!v29)
            break;
          sub_1D46B3464((uint64_t)v145, (uint64_t)v156, &qword_1ED98D5D0);
          --v29;
        }
        swift_bridgeObjectRelease();
        sub_1D46B3464((uint64_t)v145, (uint64_t)&v119, &qword_1ED98D5D0);
        v25 = v115;
      }
      else
      {
        sub_1D46B3464((uint64_t)&v132, (uint64_t)&v119, &qword_1ED98D5D0);
      }
      if (++v25 == (_QWORD)v114)
        break;
      sub_1D46B3464((uint64_t)&v119, (uint64_t)&v132, &qword_1ED98D5D0);
    }
    sub_1D47DC8C4((uint64_t)&v155);
    sub_1D46B3464((uint64_t)&v119, (uint64_t)v156, &qword_1ED98D5D0);
    v4 = v110;
    a3 = v111;
    v15 = v108;
    v17 = v109;
    v21 = v107;
  }
  else
  {
    _Block_copy(a3);
    _Block_copy(a3);
    sub_1D46B3464((uint64_t)v169, (uint64_t)v156, &qword_1ED98D5D0);
  }
  sub_1D469C5EC(v116, (uint64_t)v21, &qword_1ED98D7C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v21, 1, v24) != 1)
  {
    sub_1D469C630((uint64_t)v21, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1D46B3464((uint64_t)v156, (uint64_t)&v146, &qword_1ED98D5D0);
    if (sub_1D46A47A8((uint64_t)&v146) == 1
      || (v40 = *((_QWORD *)&v149 + 1)) == 0
      || (v41 = *(_QWORD *)&v154[1]) == 0)
    {
      sub_1D4697DE0((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      goto LABEL_26;
    }
    v109 = v17;
    v110 = v4;
    v111 = a3;
    v42 = v149;
    v43 = *((_QWORD *)&v154[0] + 1);
    v45 = v105;
    v44 = v106;
    v46 = &v106[*(int *)(v105 + 24)];
    v47 = sub_1D4920F18();
    v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56);
    v48(v46, 1, 1, v47);
    v48(&v44[*(int *)(v45 + 40)], 1, 1, v47);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1D46C6AE4((uint64_t)v156, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6A64);
    v49 = sub_1D4922778();
    *(_QWORD *)&v114 = v43;
    if ((v49 & 1) != 0)
    {
      swift_bridgeObjectRetain();
      v50 = sub_1D47DAE0C(1uLL, v43, v41);
      v52 = v51;
      v54 = v53;
      v56 = v55;
      v57 = v41;
      swift_bridgeObjectRelease();
      if ((v50 ^ v52) >= 0x4000)
      {
        v58 = sub_1D46BEAF8(v50, v52, v54, v56, 10);
        if ((v59 & 0x100) != 0)
        {
          v60 = sub_1D46BCF2C(v50, v52, v54, v56, 10);
          v66 = v65;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v62 = v66 & 1;
        }
        else
        {
          v60 = (unsigned __int8 *)v58;
          v61 = v59;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v62 = v61 & 1;
          v41 = v57;
        }
        if (v62)
          v64 = 0;
        else
          v64 = v60;
        goto LABEL_33;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v64 = 0;
LABEL_33:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAB48);
    v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAB50);
    v68 = *(unsigned __int8 *)(*(_QWORD *)(v67 - 8) + 80);
    v69 = (v68 + 32) & ~v68;
    v70 = swift_allocObject();
    v115 = xmmword_1D49273C0;
    *(_OWORD *)(v70 + 16) = xmmword_1D49273C0;
    v71 = (_QWORD *)(v70 + v69 + *(int *)(v67 + 48));
    sub_1D4920FFC();
    *v71 = v42;
    v71[1] = v40;
    swift_bridgeObjectRetain();
    v72 = sub_1D47C4344(v70);
    v73 = *((float *)&v154[1] + 2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAB58);
    v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAB60);
    v75 = *(unsigned __int8 *)(*(_QWORD *)(v74 - 8) + 80);
    v76 = (v75 + 32) & ~v75;
    v77 = swift_allocObject();
    *(_OWORD *)(v77 + 16) = v115;
    v78 = *(int *)(v74 + 48);
    sub_1D4920FFC();
    *(_QWORD *)(v77 + v76 + v78) = MEMORY[0x1E0DEE9E8];
    v79 = sub_1D47C44E0(v77);
    v80 = (int *)v105;
    v81 = v106;
    *(_QWORD *)v106 = v114;
    v81[1] = v41;
    v81[2] = v42;
    v81[3] = v40;
    *(_DWORD *)((char *)v81 + v80[7]) = 0;
    v82 = (_QWORD *)((char *)v81 + v80[8]);
    *v82 = 0;
    v82[1] = 0xE000000000000000;
    v83 = (_QWORD *)((char *)v81 + v80[9]);
    *v83 = 0;
    v83[1] = 0xE000000000000000;
    *(_QWORD *)((char *)v81 + v80[11]) = MEMORY[0x1E0DEE9D8];
    v84 = (_OWORD *)((char *)v81 + v80[12]);
    v84[2] = 0u;
    v84[3] = 0u;
    *v84 = 0u;
    v84[1] = 0u;
    v85 = (char *)v81 + v80[13];
    *(_QWORD *)v85 = 123711979;
    v85[8] = 0;
    v86 = v80[14];
    v114 = xmmword_1D492FFE0;
    *(_OWORD *)((char *)v81 + v86) = xmmword_1D492FFE0;
    *(_QWORD *)((char *)v81 + v80[15]) = v64;
    *(_WORD *)((char *)v81 + v80[16]) = 1;
    v87 = (_QWORD *)((char *)v81 + v80[17]);
    *v87 = v42;
    v87[1] = v40;
    *(_QWORD *)((char *)v81 + v80[18]) = v72;
    *(double *)((char *)v81 + v80[19]) = v73;
    *((_BYTE *)v81 + v80[20]) = 0;
    v88 = (_QWORD *)((char *)v81 + v80[21]);
    *v88 = 0;
    v88[1] = 0xE000000000000000;
    v89 = (_QWORD *)((char *)v81 + v80[22]);
    *v89 = 0;
    v89[1] = 0xE000000000000000;
    *(_QWORD *)((char *)v81 + v80[23]) = v79;
    *(_QWORD *)((char *)v81 + v80[24]) = 0;
    *(_QWORD *)((char *)v81 + v80[25]) = 0;
    *(_DWORD *)((char *)v81 + v80[26]) = 0;
    LOBYTE(v76) = v146;
    v90 = v151;
    v91 = v152;
    sub_1D46A484C(v151, *((uint64_t *)&v151 + 1));
    sub_1D46C6AE4((uint64_t)v156, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6B50);
    v92 = (uint64_t)v104;
    v93 = (uint64_t)&v104[*(int *)(v102 + 24)];
    sub_1D469C304((uint64_t)v81, v93, (uint64_t (*)(_QWORD))type metadata accessor for ObjectKnowledge);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v101 + 56))(v93, 0, 1, v80);
    *(_BYTE *)v92 = v76;
    *(_OWORD *)(v92 + 8) = v90;
    *(_OWORD *)(v92 + 24) = v91;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB968);
    v94 = swift_allocObject();
    *(_OWORD *)(v94 + 16) = v115;
    v95 = (uint64_t)v109;
    v113 = *(_OWORD *)v109;
    v96 = *((_QWORD *)v109 + 2);
    v97 = *((_QWORD *)v109 + 3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB970);
    v98 = (*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
    v99 = swift_allocObject();
    *(_OWORD *)(v99 + 16) = v115;
    sub_1D469C304(v92, v99 + v98, type metadata accessor for RegionSearchResult.ResultItem);
    *(_OWORD *)(v94 + 32) = v113;
    *(_QWORD *)(v94 + 48) = v96;
    *(_QWORD *)(v94 + 56) = v97;
    *(_QWORD *)(v94 + 64) = v99;
    *(_QWORD *)(v94 + 72) = MEMORY[0x1E0DEE9D8];
    v140 = v165;
    v141 = v166;
    v142 = v167;
    v136 = v161;
    v137 = v162;
    v138 = v163;
    v139 = v164;
    v132 = v157;
    v133 = v158;
    v134 = v159;
    v135 = v160;
    *(_QWORD *)&v143 = v168;
    *((_QWORD *)&v143 + 1) = v94;
    v144 = v114;
    v129 = v167;
    v130 = v143;
    v131 = v114;
    v125 = v163;
    v126 = v164;
    v127 = v165;
    v128 = v166;
    v121 = v159;
    v122 = v160;
    v123 = v161;
    v124 = v162;
    v119 = v157;
    v120 = v158;
    a3 = v111;
    _Block_copy(v111);
    sub_1D46B2E18((uint64_t)v110);
    sub_1D47DC8EC(&v132);
    v100 = sub_1D46F8348();
    (*((void (**)(const void *, id, _QWORD))a3 + 2))(a3, v100, 0);

    sub_1D47DC9CC(&v132);
    _Block_release(a3);
    sub_1D47DC9CC(&v132);
    sub_1D4697DE0(v92, type metadata accessor for RegionSearchResult.ResultItem);
    sub_1D4697DE0((uint64_t)v81, (uint64_t (*)(_QWORD))type metadata accessor for ObjectKnowledge);
    sub_1D4697DE0(v95, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    goto LABEL_27;
  }
  sub_1D46992EC((uint64_t)v21, &qword_1ED98D7C0);
LABEL_26:
  v140 = v165;
  v141 = v166;
  v142 = v167;
  v136 = v161;
  v137 = v162;
  v138 = v163;
  v139 = v164;
  v132 = v157;
  v133 = v158;
  v134 = v159;
  v135 = v160;
  *(_QWORD *)&v143 = v168;
  *((_QWORD *)&v143 + 1) = MEMORY[0x1E0DEE9D8];
  v144 = xmmword_1D492FFE0;
  v129 = v167;
  v130 = v143;
  v131 = xmmword_1D492FFE0;
  v125 = v163;
  v126 = v164;
  v127 = v165;
  v128 = v166;
  v121 = v159;
  v122 = v160;
  v123 = v161;
  v124 = v162;
  v119 = v157;
  v120 = v158;
  _Block_copy(a3);
  sub_1D46B2E18((uint64_t)v4);
  sub_1D47DC8EC(&v132);
  v63 = sub_1D46F8348();
  (*((void (**)(const void *, id, _QWORD))a3 + 2))(a3, v63, 0);

  sub_1D47DC9CC(&v132);
  _Block_release(a3);
  sub_1D47DC9CC(&v132);
LABEL_27:
  sub_1D46C6AE4((uint64_t)v156, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6B50);
  sub_1D46992EC(v116, &qword_1ED98D7C0);
  _Block_release(a3);
  _Block_release(a3);
}

uint64_t sub_1D47DC8C4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1D47DC8EC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v2 = a1[1];
  v4 = a1[19];
  v5 = a1[25];
  v6 = a1[24];
  swift_bridgeObjectRetain();
  sub_1D46B2ED8(v2);
  swift_bridgeObjectRetain();
  sub_1D46B2F58(v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D46E5180(v6, v5);
  return a1;
}

_QWORD *sub_1D47DC9CC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v2 = a1[1];
  v4 = a1[19];
  v5 = a1[25];
  v6 = a1[24];
  swift_bridgeObjectRelease();
  sub_1D46B3590(v2);
  swift_bridgeObjectRelease();
  sub_1D46B2C64(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D46AA1F0(v6, v5);
  return a1;
}

uint64_t sub_1D47DCAAC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D47DCAE8(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D46BAA48(a1, v1[2], v1[3], v1[4]);
}

uint64_t objectdestroy_2Tm_0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1D47DCB34()
{
  return swift_deallocObject();
}

void sub_1D47DCB44(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1D47C06E8(a1, *(double *)(v2 + 16), *(_BYTE *)(v2 + 24), a2);
}

uint64_t sub_1D47DCB60(__int128 *a1, uint64_t a2, void (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  _QWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(void);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t i;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _BYTE *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  char v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  __int16 v59;
  unsigned __int8 *v60;
  char v61;
  int v62;
  id v63;
  unsigned __int8 *v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  unint64_t v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  int *v83;
  _QWORD *v84;
  _QWORD *v85;
  _OWORD *v86;
  char *v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  _QWORD *v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  _QWORD *v113;
  uint64_t v114;
  void (*v115)(_QWORD, _QWORD);
  uint64_t v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  _OWORD v121[8];
  _OWORD v122[3];
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  _BYTE v149[160];
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  _OWORD v158[2];
  uint64_t v159;
  _BYTE v160[160];
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  uint64_t v172;
  _BYTE v173[176];

  v6 = a1;
  v7 = a1[9];
  v169 = a1[8];
  v170 = v7;
  v171 = a1[10];
  v172 = *((_QWORD *)a1 + 22);
  v8 = a1[5];
  v165 = a1[4];
  v166 = v8;
  v9 = a1[7];
  v167 = a1[6];
  v168 = v9;
  v10 = a1[1];
  v161 = *a1;
  v162 = v10;
  v11 = a1[3];
  v163 = a1[2];
  v164 = v11;
  v12 = type metadata accessor for RegionSearchResult.ResultItem(0);
  v13 = *(_QWORD *)(v12 - 8);
  v105 = v12;
  v106 = v13;
  MEMORY[0x1E0C80A78](v12);
  v107 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for ObjectKnowledge();
  v104 = *(_QWORD *)(v108 - 8);
  MEMORY[0x1E0C80A78](v108);
  v109 = (char *)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D7C0);
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v103 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v24 = *(void (**)(void))(v17 + 56);
  v120 = (uint64_t)&v103 - v25;
  v24();
  sub_1D46C6BD0((uint64_t)v173);
  v159 = *v6;
  *(_QWORD *)&v118 = *(_QWORD *)(v159 + 16);
  if ((_QWORD)v118)
  {
    v110 = v23;
    v112 = v19;
    v113 = v6;
    v114 = a4;
    v115 = a3;
    *(_QWORD *)&v117 = v159
                     + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    swift_bridgeObjectRetain();
    sub_1D46B3464((uint64_t)v173, (uint64_t)&v136, &qword_1ED98D5D0);
    v111 = v17;
    v116 = *(_QWORD *)(v17 + 72);
    v26 = 0;
    v27 = v120;
    while (1)
    {
      v28 = v117 + v116 * v26;
      v29 = *(_QWORD *)(v28 + 40);
      v30 = *(_QWORD *)(v29 + 16);
      if (v30)
      {
        *(_QWORD *)&v119 = v26;
        swift_bridgeObjectRetain();
        sub_1D46B3464((uint64_t)&v136, (uint64_t)v160, &qword_1ED98D5D0);
        v31 = v30 - 1;
        for (i = 32; ; i += 160)
        {
          v33 = *(_OWORD *)(v29 + i + 16);
          v150 = *(_OWORD *)(v29 + i);
          v151 = v33;
          v34 = *(_OWORD *)(v29 + i + 32);
          v35 = *(_OWORD *)(v29 + i + 48);
          v36 = *(_OWORD *)(v29 + i + 80);
          v154 = *(_OWORD *)(v29 + i + 64);
          v155 = v36;
          v152 = v34;
          v153 = v35;
          v37 = *(_OWORD *)(v29 + i + 96);
          v38 = *(_OWORD *)(v29 + i + 112);
          v39 = *(_OWORD *)(v29 + i + 128);
          *(_OWORD *)((char *)v158 + 12) = *(_OWORD *)(v29 + i + 140);
          v158[0] = v39;
          v157 = v38;
          v156 = v37;
          if (*(_QWORD *)&v158[1])
          {
            sub_1D46992EC(v27, &qword_1ED98D7C0);
            sub_1D469C304(v28, v27, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v24)(v27, 0, 1, v16);
            v121[6] = v156;
            v121[7] = v157;
            v122[0] = v158[0];
            *(_OWORD *)((char *)v122 + 12) = *(_OWORD *)((char *)v158 + 12);
            v121[2] = v152;
            v121[3] = v153;
            v121[4] = v154;
            v121[5] = v155;
            v121[0] = v150;
            v121[1] = v151;
            faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v121);
            sub_1D46A47CC((uint64_t)&v150);
            sub_1D46C6AE4((uint64_t)v160, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6B50);
            v40 = v121;
          }
          else
          {
            v40 = v160;
          }
          sub_1D46B3464((uint64_t)v40, (uint64_t)v149, &qword_1ED98D5D0);
          if (!v31)
            break;
          sub_1D46B3464((uint64_t)v149, (uint64_t)v160, &qword_1ED98D5D0);
          --v31;
        }
        swift_bridgeObjectRelease();
        sub_1D46B3464((uint64_t)v149, (uint64_t)&v123, &qword_1ED98D5D0);
        v26 = v119;
      }
      else
      {
        sub_1D46B3464((uint64_t)&v136, (uint64_t)&v123, &qword_1ED98D5D0);
      }
      if (++v26 == (_QWORD)v118)
        break;
      sub_1D46B3464((uint64_t)&v123, (uint64_t)&v136, &qword_1ED98D5D0);
    }
    sub_1D47DC8C4((uint64_t)&v159);
    sub_1D46B3464((uint64_t)&v123, (uint64_t)v160, &qword_1ED98D5D0);
    a4 = v114;
    a3 = v115;
    v19 = v112;
    v6 = v113;
    v23 = v110;
    v17 = v111;
  }
  else
  {
    sub_1D46B3464((uint64_t)v173, (uint64_t)v160, &qword_1ED98D5D0);
  }
  sub_1D469C5EC(v120, (uint64_t)v23, &qword_1ED98D7C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v23, 1, v16) != 1)
  {
    sub_1D469C630((uint64_t)v23, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1D46B3464((uint64_t)v160, (uint64_t)&v150, &qword_1ED98D5D0);
    if (sub_1D46A47A8((uint64_t)&v150) == 1
      || (v41 = *((_QWORD *)&v153 + 1)) == 0
      || (v42 = *(_QWORD *)&v158[1]) == 0)
    {
      sub_1D4697DE0((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      goto LABEL_26;
    }
    v112 = v19;
    v113 = v6;
    v114 = a4;
    v115 = a3;
    v43 = v153;
    v44 = *((_QWORD *)&v158[0] + 1);
    v46 = v108;
    v45 = v109;
    v47 = &v109[*(int *)(v108 + 24)];
    v48 = sub_1D4920F18();
    v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56);
    v49(v47, 1, 1, v48);
    v49(&v45[*(int *)(v46 + 40)], 1, 1, v48);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1D46C6AE4((uint64_t)v160, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6A64);
    v50 = sub_1D4922778();
    *(_QWORD *)&v118 = v44;
    if ((v50 & 1) != 0)
    {
      swift_bridgeObjectRetain();
      v51 = sub_1D47DAE0C(1uLL, v44, v42);
      v53 = v52;
      v55 = v54;
      v57 = v56;
      swift_bridgeObjectRelease();
      if ((v51 ^ v53) >= 0x4000)
      {
        v58 = sub_1D46BEAF8(v51, v53, v55, v57, 10);
        if ((v59 & 0x100) != 0)
        {
          v60 = sub_1D46BCF2C(v51, v53, v55, v57, 10);
          v67 = v66;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v62 = v67 & 1;
        }
        else
        {
          v60 = (unsigned __int8 *)v58;
          v61 = v59;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v62 = v61 & 1;
        }
        if (v62)
          v65 = 0;
        else
          v65 = v60;
        goto LABEL_33;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v65 = 0;
LABEL_33:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAB48);
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAB50);
    v69 = *(unsigned __int8 *)(*(_QWORD *)(v68 - 8) + 80);
    v70 = (v69 + 32) & ~v69;
    v71 = swift_allocObject();
    v119 = xmmword_1D49273C0;
    *(_OWORD *)(v71 + 16) = xmmword_1D49273C0;
    v72 = (_QWORD *)(v71 + v70 + *(int *)(v68 + 48));
    sub_1D4920FFC();
    *v72 = v43;
    v72[1] = v41;
    swift_bridgeObjectRetain();
    v73 = sub_1D47C4344(v71);
    v74 = *((float *)&v158[1] + 2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAB58);
    v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAB60);
    v76 = *(unsigned __int8 *)(*(_QWORD *)(v75 - 8) + 80);
    v77 = (v76 + 32) & ~v76;
    v78 = swift_allocObject();
    *(_OWORD *)(v78 + 16) = v119;
    v79 = *(int *)(v75 + 48);
    sub_1D4920FFC();
    *(_QWORD *)(v78 + v77 + v79) = MEMORY[0x1E0DEE9E8];
    v80 = sub_1D47C44E0(v78);
    v81 = v43;
    v82 = v109;
    *(_QWORD *)v109 = v118;
    v82[1] = v42;
    v82[2] = v81;
    v82[3] = v41;
    v83 = (int *)v108;
    *(_DWORD *)((char *)v82 + *(int *)(v108 + 28)) = 0;
    v84 = (_QWORD *)((char *)v82 + v83[8]);
    *v84 = 0;
    v84[1] = 0xE000000000000000;
    v85 = (_QWORD *)((char *)v82 + v83[9]);
    *v85 = 0;
    v85[1] = 0xE000000000000000;
    *(_QWORD *)((char *)v82 + v83[11]) = MEMORY[0x1E0DEE9D8];
    v86 = (_OWORD *)((char *)v82 + v83[12]);
    v86[2] = 0u;
    v86[3] = 0u;
    *v86 = 0u;
    v86[1] = 0u;
    v87 = (char *)v82 + v83[13];
    *(_QWORD *)v87 = 123711979;
    v87[8] = 0;
    v88 = v83[14];
    v118 = xmmword_1D492FFE0;
    *(_OWORD *)((char *)v82 + v88) = xmmword_1D492FFE0;
    *(_QWORD *)((char *)v82 + v83[15]) = v65;
    *(_WORD *)((char *)v82 + v83[16]) = 1;
    v89 = (_QWORD *)((char *)v82 + v83[17]);
    *v89 = v81;
    v89[1] = v41;
    *(_QWORD *)((char *)v82 + v83[18]) = v73;
    *(double *)((char *)v82 + v83[19]) = v74;
    *((_BYTE *)v82 + v83[20]) = 0;
    v90 = (_QWORD *)((char *)v82 + v83[21]);
    *v90 = 0;
    v90[1] = 0xE000000000000000;
    v91 = (_QWORD *)((char *)v82 + v83[22]);
    *v91 = 0;
    v91[1] = 0xE000000000000000;
    *(_QWORD *)((char *)v82 + v83[23]) = v80;
    *(_QWORD *)((char *)v82 + v83[24]) = 0;
    *(_QWORD *)((char *)v82 + v83[25]) = 0;
    *(_DWORD *)((char *)v82 + v83[26]) = 0;
    LOBYTE(v77) = v150;
    v92 = v155;
    v93 = v156;
    sub_1D46A484C(v155, *((uint64_t *)&v155 + 1));
    sub_1D46C6AE4((uint64_t)v160, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6B50);
    v94 = (uint64_t)v107;
    v95 = (uint64_t)&v107[*(int *)(v105 + 24)];
    sub_1D469C304((uint64_t)v82, v95, (uint64_t (*)(_QWORD))type metadata accessor for ObjectKnowledge);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v104 + 56))(v95, 0, 1, v83);
    *(_BYTE *)v94 = v77;
    *(_OWORD *)(v94 + 8) = v92;
    *(_OWORD *)(v94 + 24) = v93;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB968);
    v96 = swift_allocObject();
    *(_OWORD *)(v96 + 16) = v119;
    v97 = (uint64_t)v112;
    v117 = *(_OWORD *)v112;
    v98 = *((_QWORD *)v112 + 2);
    v99 = *((_QWORD *)v112 + 3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB970);
    v100 = (*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80);
    v101 = swift_allocObject();
    *(_OWORD *)(v101 + 16) = v119;
    sub_1D469C304(v94, v101 + v100, type metadata accessor for RegionSearchResult.ResultItem);
    *(_OWORD *)(v96 + 32) = v117;
    *(_QWORD *)(v96 + 48) = v98;
    *(_QWORD *)(v96 + 56) = v99;
    *(_QWORD *)(v96 + 64) = v101;
    *(_QWORD *)(v96 + 72) = MEMORY[0x1E0DEE9D8];
    v144 = v169;
    v145 = v170;
    v146 = v171;
    v140 = v165;
    v141 = v166;
    v142 = v167;
    v143 = v168;
    v136 = v161;
    v137 = v162;
    v138 = v163;
    v139 = v164;
    *(_QWORD *)&v147 = v172;
    *((_QWORD *)&v147 + 1) = v96;
    v148 = v118;
    v133 = v171;
    v134 = v147;
    v135 = v118;
    v129 = v167;
    v130 = v168;
    v131 = v169;
    v132 = v170;
    v125 = v163;
    v126 = v164;
    v127 = v165;
    v128 = v166;
    v123 = v161;
    v124 = v162;
    sub_1D46B2E18((uint64_t)v113);
    sub_1D47DC8EC(&v136);
    v102 = sub_1D46F8348();
    v115(v102, 0);

    sub_1D47DC9CC(&v136);
    sub_1D47DC9CC(&v136);
    sub_1D4697DE0(v94, type metadata accessor for RegionSearchResult.ResultItem);
    sub_1D4697DE0((uint64_t)v82, (uint64_t (*)(_QWORD))type metadata accessor for ObjectKnowledge);
    sub_1D4697DE0(v97, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    goto LABEL_27;
  }
  sub_1D46992EC((uint64_t)v23, &qword_1ED98D7C0);
LABEL_26:
  v144 = v169;
  v145 = v170;
  v146 = v171;
  v140 = v165;
  v141 = v166;
  v142 = v167;
  v143 = v168;
  v136 = v161;
  v137 = v162;
  v138 = v163;
  v139 = v164;
  *(_QWORD *)&v147 = v172;
  *((_QWORD *)&v147 + 1) = MEMORY[0x1E0DEE9D8];
  v148 = xmmword_1D492FFE0;
  v133 = v171;
  v134 = v147;
  v135 = xmmword_1D492FFE0;
  v129 = v167;
  v130 = v168;
  v131 = v169;
  v132 = v170;
  v125 = v163;
  v126 = v164;
  v127 = v165;
  v128 = v166;
  v123 = v161;
  v124 = v162;
  sub_1D46B2E18((uint64_t)v6);
  sub_1D47DC8EC(&v136);
  v63 = sub_1D46F8348();
  a3(v63, 0);

  sub_1D47DC9CC(&v136);
  sub_1D47DC9CC(&v136);
LABEL_27:
  sub_1D46C6AE4((uint64_t)v160, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6B50);
  return sub_1D46992EC(v120, &qword_1ED98D7C0);
}

uint64_t sub_1D47DD69C(uint64_t result)
{
  *(_BYTE *)(result + 208) = 0;
  return result;
}

uint64_t sub_1D47DD6A4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D47DD6C8()
{
  id *v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 5));

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D47DD734()
{
  uint64_t v0;

  return sub_1D47D4AFC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v0 + 40, *(void **)(v0 + 112), *(void **)(v0 + 120), *(_QWORD *)(v0 + 128), *(void **)(v0 + 136), *(double *)(v0 + 80), *(double *)(v0 + 88), *(double *)(v0 + 96), *(double *)(v0 + 104), *(void **)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

unint64_t sub_1D47DD794()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED98D1E0;
  if (!qword_1ED98D1E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED98D1D0);
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED98D1E0);
  }
  return result;
}

uint64_t sub_1D47DD7E0()
{
  id *v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 3));

  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D47DD844(uint64_t a1)
{
  uint64_t v1;

  return sub_1D47D4D20(a1, *(double *)(v1 + 64), *(double *)(v1 + 72), *(double *)(v1 + 80), *(double *)(v1 + 88), *(_QWORD *)(v1 + 16), v1 + 24, *(_QWORD *)(v1 + 96), *(char **)(v1 + 104), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128), *(void **)(v1 + 136), *(void (**)(uint64_t))(v1 + 144), *(_QWORD *)(v1 + 152));
}

uint64_t sub_1D47DD88C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

double S2Cell.center.getter@<D0>(double *a1@<X8>)
{
  double v2;
  double result;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;

  S2CellId.rawPoint.getter(&v6);
  v2 = sqrt(v6 * v6 + v7 * v7 + v8 * v8);
  if (v2 != 0.0)
    v2 = 1.0 / v2;
  result = v6 * v2;
  v4 = v7 * v2;
  v5 = v8 * v2;
  *a1 = v6 * v2;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

Swift::Bool __swiftcall S2Cell.contains(point:)(VisualIntelligence::S2Point point)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  Swift::Bool result;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;
  uint64_t v13;
  double v14;
  double v15;
  char v16;

  v3 = *((_QWORD *)v1 + 2);
  v4 = *(unsigned __int8 *)(v2 + 8);
  v5 = *(_QWORD **)(v2 + 16);
  v12 = *v1;
  v13 = v3;
  result = static S2Projections.faceXyzToUv(face:point:)(v4, (double *)&v12, (uint64_t)&v14);
  if ((v16 & 1) != 0)
    return 0;
  v7 = v5[2];
  if (!v7)
  {
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5[4];
  v9 = *(_QWORD *)(v8 + 16);
  if (!v9)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(double *)(v8 + 32) > v14)
    return 0;
  if (v9 < 2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v14 <= *(double *)(v8 + 40))
  {
    if (v7 >= 2)
    {
      v10 = v5[5];
      v11 = *(_QWORD *)(v10 + 16);
      if (v11)
      {
        if (*(double *)(v10 + 32) > v15)
          return 0;
        if (v11 >= 2)
          return v15 <= *(double *)(v10 + 40);
LABEL_19:
        __break(1u);
        return result;
      }
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  return 0;
}

void S2Cell.rectBound.getter(__int128 *a1@<X8>)
{
  uint64_t *v1;
  double v2;
  double v3;
  __int128 *v4;
  int v5;
  int v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  double v15;
  double v16;
  _BOOL4 v17;
  __int128 v18;
  _BOOL4 v19;
  unint64_t v20;
  double v21;
  unint64_t v22;
  unint64_t v23;
  double v24;
  double v25;
  double v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  __int128 *v32;
  double v33;
  __int128 v34;
  __int128 v35;
  double v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  __int128 *v41;
  __int128 v42;

  v4 = a1;
  v5 = *((unsigned __int8 *)v1 + 8);
  v6 = *((char *)v1 + 9);
  if (v6 < 1)
  {
    switch(*((_BYTE *)v1 + 8))
    {
      case 0:
        v18 = xmmword_1D49338F0;
        *a1 = xmmword_1D49338F0;
        goto LABEL_42;
      case 1:
        v34 = xmmword_1D49338F0;
        v35 = xmmword_1D4933930;
        goto LABEL_49;
      case 2:
        if (qword_1EFEA9F38 != -1)
          swift_once();
        *(_QWORD *)v4 = qword_1EFEAB980;
        *(__int128 *)((char *)v4 + 8) = xmmword_1D4933920;
        *((_QWORD *)v4 + 3) = 0x400921FB54442D18;
        return;
      case 3:
        v34 = xmmword_1D49338F0;
        v35 = xmmword_1D4933910;
        goto LABEL_49;
      case 4:
        v34 = xmmword_1D49338F0;
        v35 = xmmword_1D4933900;
LABEL_49:
        *a1 = v34;
        a1[1] = v35;
        break;
      default:
        if (qword_1EFEA9F38 == -1)
          goto LABEL_41;
        goto LABEL_74;
    }
    return;
  }
  v7 = (_QWORD *)v1[2];
  v8 = v7[2];
  if (!v8)
  {
    __break(1u);
    goto LABEL_64;
  }
  v9 = v7[4];
  v10 = *(_QWORD *)(v9 + 16);
  if (!v10)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (v10 == 1)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  if (v8 < 2)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  v11 = v7[5];
  v12 = *(_QWORD *)(v11 + 16);
  if (!v12)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (v12 == 1)
  {
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  v13 = *v1;
  v14 = *((_BYTE *)v1 + 10);
  v15 = *(double *)(v9 + 32) + *(double *)(v9 + 40);
  v16 = *(double *)(v11 + 32) + *(double *)(v11 + 40);
  v40 = v7[4];
  v41 = v4;
  if (*((_BYTE *)v1 + 8))
  {
    switch(*((_BYTE *)v1 + 8))
    {
      case 1:
        goto LABEL_13;
      case 3:
      case 4:
        v17 = v15 > 0.0;
        break;
      default:
        v17 = v15 < 0.0;
        break;
    }
    v19 = v16 < 0.0;
  }
  else
  {
LABEL_13:
    v17 = v15 < 0.0;
    v19 = v16 > 0.0;
  }
  v4 = (__int128 *)v17;
  v20 = v19;
  v21 = sub_1D47DF7D4(v17, v19);
  *(_QWORD *)&v42 = v13;
  BYTE8(v42) = v5;
  BYTE9(v42) = v6;
  BYTE10(v42) = v14;
  v22 = !v17;
  v23 = v20 ^ 1;
  v24 = sub_1D47DF7D4(v22, v20 ^ 1);
  if (v21 > v24)
    v25 = v24;
  else
    v25 = v21;
  if (v21 > v24)
    v24 = v21;
  if (v24 < v25)
  {
    v26 = v24;
  }
  else
  {
    v25 = v25 + -4.4408921e-16;
    v26 = v24 + 4.4408921e-16;
  }
  if (v25 > -1.57079633)
    v2 = v25;
  else
    v2 = -1.57079633;
  if (v26 <= 1.57079633)
    v3 = v26;
  else
    v3 = 1.57079633;
  if (v2 == -1.57079633 || v3 == 1.57079633)
  {
    if (qword_1EFEA9DA8 == -1)
    {
LABEL_38:
      *(double *)v41 = v2;
      *((double *)v41 + 1) = v3;
      v41[1] = xmmword_1EFEAAF00;
      return;
    }
LABEL_71:
    swift_once();
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v40 + 16);
  if (v27 <= v17)
    goto LABEL_69;
  v28 = *(_QWORD *)(v11 + 16);
  if (v23 >= v28)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  v29 = v11 + 32;
  v30 = *(double *)(v40 + 32 + 8 * v17);
  if (v5)
  {
    v31 = *(double *)(v29 + 8 * v23);
    v32 = v41;
    switch(v5)
    {
      case 1:
        v31 = -v30;
        v30 = 1.0;
        break;
      case 2:
        v36 = -v30;
        v30 = -v31;
        v31 = v36;
        break;
      case 3:
        v30 = -v31;
        v31 = -1.0;
        break;
      case 4:
        v30 = -1.0;
        break;
      default:
        break;
    }
  }
  else
  {
    v31 = 1.0;
    v32 = v41;
  }
  if (v27 <= v22)
  {
    __break(1u);
  }
  else if (v28 > v20)
  {
    v37 = *(double *)(v40 + 32 + 8 * v22);
    if (v5)
    {
      v38 = *(double *)(v29 + 8 * v20);
      switch(v5)
      {
        case 1:
          v38 = -v37;
          v37 = 1.0;
          break;
        case 2:
          v39 = -v37;
          v37 = -v38;
          v38 = v39;
          break;
        case 3:
          v37 = -v38;
          v38 = -1.0;
          break;
        case 4:
          v37 = -1.0;
          break;
        default:
          break;
      }
    }
    else
    {
      v38 = 1.0;
    }
    atan2(v30, v31);
    atan2(v37, v38);
    S1Interval.expanded(radius:)(4.4408921e-16);
    *(double *)v32 = v2;
    *((double *)v32 + 1) = v3;
    v32[1] = v42;
    return;
  }
  __break(1u);
LABEL_74:
  swift_once();
LABEL_41:
  v33 = -*(double *)&qword_1EFEAB980;
  *(_QWORD *)v4 = 0xBFF921FB54442D18;
  *((double *)v4 + 1) = v33;
  v18 = xmmword_1D492EE20;
LABEL_42:
  v4[1] = v18;
}

VisualIntelligence::S2Point __swiftcall S2Cell.getVertex(_:)(Swift::Int a1)
{
  double *v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  Swift::Int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  Swift::Int v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  VisualIntelligence::S2Point result;

  v3 = *(_QWORD **)(v2 + 16);
  v4 = v3[2];
  if (!v4)
  {
    __break(1u);
    goto LABEL_17;
  }
  v5 = a1 >> 1;
  v6 = (a1 >> 1) ^ a1 & 1;
  if ((v6 & 0x8000000000000000) != 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v7 = v3[4];
  if (v6 >= *(_QWORD *)(v7 + 16))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v4 < 2)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (a1 < 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v8 = v3[5];
  if (v5 >= *(_QWORD *)(v8 + 16))
  {
LABEL_21:
    __break(1u);
    JUMPOUT(0x1D47DE058);
  }
  v9 = *(double *)(v7 + 8 * v6 + 32);
  v10 = v8 + 8 * v5;
  v11 = *(double *)(v10 + 32);
  v12 = 1.0;
  switch(*(_BYTE *)(v2 + 8))
  {
    case 0:
      break;
    case 1:
      v12 = -v9;
      v9 = 1.0;
      break;
    case 2:
      v12 = -v9;
      v9 = -v11;
      v11 = 1.0;
      break;
    case 3:
      v13 = -v11;
      v11 = -v9;
      v12 = -1.0;
      v9 = v13;
      break;
    case 4:
      v12 = *(double *)(v10 + 32);
      v11 = -v9;
      v9 = -1.0;
      break;
    default:
      v12 = *(double *)(v10 + 32);
      v11 = -1.0;
      break;
  }
  v14 = sqrt(v12 * v12 + v9 * v9 + v11 * v11);
  if (v14 != 0.0)
    v14 = 1.0 / v14;
  v15 = v12 * v14;
  v16 = v9 * v14;
  v17 = v11 * v14;
  *v1 = v15;
  v1[1] = v16;
  v1[2] = v17;
  result.z = v15;
  result.y = v17;
  result.x = v16;
  return result;
}

double static S2Cell.averageArea(level:)(uint64_t a1)
{
  return scalb(0.523598776, 1.0 - (double)a1 + 1.0 - (double)a1);
}

uint64_t S2Cell.init(cellId:)@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  double v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  double v26;
  BOOL v27;
  double v28;
  double v29;
  double *v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  double v33;
  double v34;
  double v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  double v39;
  double v40;
  double v41;
  uint64_t result;
  double v43;
  double v44;
  double v45;
  char v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;

  v10 = *a1;
  v48 = 0;
  v49 = 0;
  v11 = sub_1D47D3FEC(&v49, &v48, 7, (v10 >> 61) & 1);
  v12 = sub_1D47D3FEC(&v49, &v48, 6, v11);
  v13 = sub_1D47D3FEC(&v49, &v48, 5, v12);
  v14 = sub_1D47D3FEC(&v49, &v48, 4, v13);
  v15 = sub_1D47D3FEC(&v49, &v48, 3, v14);
  v16 = sub_1D47D3FEC(&v49, &v48, 2, v15);
  v17 = sub_1D47D3FEC(&v49, &v48, 1, v16);
  v47 = v10;
  v18 = (uint64_t *)&v47;
  v19 = sub_1D47D3FEC(&v49, &v48, 0, v17);
  if (__OFSUB__(0, v10))
  {
    __break(1u);
    goto LABEL_37;
  }
  v7 = v19 ^ ((v10 & -(uint64_t)v10 & 0x1111111111111110) != 0);
  if ((v7 & 0x8000000000000000) == 0 && v7 < 0x100)
  {
    v47 = v10;
    v18 = (uint64_t *)&v47;
    v20 = S2CellId.level.getter();
    if (v20 >= -128)
    {
      LOBYTE(v18) = v20;
      if (v20 <= 127)
      {
        v21 = v20 << 56;
        if ((unint64_t)((v20 << 56) - 0x5E00000000000001) < 0x7FFFFFFFFFFFFFFFLL)
          goto LABEL_7;
        if (v20 >= 31)
          goto LABEL_53;
        if (v20 <= -34)
          goto LABEL_7;
        v22 = 1 << (30 - v20);
        while (1)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB988);
          v23 = swift_allocObject();
          *(_OWORD *)(v23 + 16) = xmmword_1D4927B00;
          v3 = (double *)qword_1E97FDD50;
          *(_QWORD *)(v23 + 40) = qword_1E97FDD50;
          v5 = -(uint64_t)v22;
          if (__OFSUB__(0, v22))
            break;
          if ((uint64_t)(v22 + 0x4000000000000000) < 0)
            goto LABEL_40;
          v24 = v49 & v5;
          if ((uint64_t)((v49 & v5) + 0x4000000000000000) < 0)
            goto LABEL_41;
          v25 = 2 * v24 - 0x40000000;
          if (__OFADD__(-1073741824, 2 * v24))
            goto LABEL_42;
          v6 = 2 * v22;
          v4 = v25 + 2 * v22;
          if (__OFADD__(v25, 2 * v22))
            goto LABEL_43;
          v46 = v7;
          v7 = v48;
          v26 = (double)v25 * 9.31322575e-10;
          v27 = v26 < 0.0;
          v28 = 1.0 - (1.0 - v26) * (1.0 - v26);
          v29 = (v26 + 1.0) * (v26 + 1.0) + -1.0;
          if (v27)
            v8 = v28;
          else
            v8 = v29;
          v2 = v23;
          v30 = (double *)qword_1E97FDD80;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v2 + 32) = qword_1E97FDD80;
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v32 = 2;
            goto LABEL_21;
          }
LABEL_44:
          v30 = (double *)sub_1D47DFAD4(qword_1E97FDD80);
          v32 = *((_QWORD *)v30 + 2);
          if (!v32)
          {
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            result = (uint64_t)sub_1D47DFAD4(qword_1E97FDD50);
            v3 = (double *)result;
            goto LABEL_31;
          }
LABEL_21:
          v30[4] = v8 * 0.333333333;
          v33 = (double)v4 * 9.31322575e-10;
          v27 = v33 < 0.0;
          v34 = 1.0 - (1.0 - v33) * (1.0 - v33);
          v35 = (v33 + 1.0) * (v33 + 1.0) + -1.0;
          if (v27)
            v35 = v34;
          if (v32 < 2)
            goto LABEL_46;
          v30[5] = v35 * 0.333333333;
          *(_QWORD *)(v2 + 32) = v30;
          v36 = v7 & v5;
          if ((uint64_t)((v7 & v5) + 0x4000000000000000) < 0)
            goto LABEL_47;
          v37 = __OFADD__(-1073741824, 2 * v36);
          v38 = 2 * v36 - 0x40000000;
          if (v37)
            goto LABEL_48;
          v30 = (double *)(v38 + v6);
          if (__OFADD__(v38, v6))
            goto LABEL_49;
          v39 = (double)v38 * 9.31322575e-10;
          v27 = v39 < 0.0;
          v40 = 1.0 - (1.0 - v39) * (1.0 - v39);
          v41 = (v39 + 1.0) * (v39 + 1.0) + -1.0;
          if (v27)
            v8 = v40;
          else
            v8 = v41;
          result = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v2 + 40) = v3;
          if ((result & 1) == 0)
            goto LABEL_50;
LABEL_31:
          v21 = *((_QWORD *)v3 + 2);
          if (v21)
          {
            v3[4] = v8 * 0.333333333;
            v43 = (double)(uint64_t)v30 * 9.31322575e-10;
            v27 = v43 < 0.0;
            v44 = 1.0 - (1.0 - v43) * (1.0 - v43);
            v45 = (v43 + 1.0) * (v43 + 1.0) + -1.0;
            if (v27)
              v45 = v44;
            if (v21 >= 2)
            {
              v3[5] = v45 * 0.333333333;
              *(_QWORD *)(v2 + 40) = v3;
              *(_QWORD *)a2 = v10;
              *(_BYTE *)(a2 + 8) = v10 >> 61;
              *(_BYTE *)(a2 + 9) = (_BYTE)v18;
              *(_BYTE *)(a2 + 10) = v46;
              *(_QWORD *)(a2 + 16) = v2;
              return result;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
LABEL_53:
          if (v21 >> 57 >= 0x2F)
LABEL_7:
            v22 = 0;
          else
            v22 = 1uLL >> (v18 + 34);
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  result = sub_1D4922C28();
  __break(1u);
  return result;
}

double S2Cell.approxArea.getter()
{
  uint64_t v0;
  int v1;
  double v3;
  char v4;
  char v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  BOOL v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;

  v1 = *(char *)(v0 + 9);
  if (v1 <= 1)
    return scalb(0.523598776, 1.0 - (double)v1 + 1.0 - (double)v1);
  v3 = *(double *)(v0 + 16);
  v4 = *(_BYTE *)(v0 + 10);
  v5 = *(_BYTE *)(v0 + 8);
  v6 = *(double *)v0;
  v16 = *(double *)v0;
  LOBYTE(v17) = v5;
  BYTE1(v17) = *(_BYTE *)(v0 + 9);
  BYTE2(v17) = v4;
  S2Cell.getVertex(_:)(2);
  S2Cell.getVertex(_:)(0);
  v7 = v19 - v17;
  LOBYTE(v17) = v5;
  BYTE1(v17) = v1;
  BYTE2(v17) = v4;
  S2Cell.getVertex(_:)(3);
  S2Cell.getVertex(_:)(1);
  v8 = v7 * (v20 - v3) - (v20 - v3) * (v19 - v17);
  v9 = (v18 - v16) * (v19 - v17) - v7 * (v18 - v6);
  v10 = sqrt(v9 * v9+ v8 * v8+ ((v20 - v3) * (v18 - v6) - (v18 - v16) * (v20 - v3)) * ((v20 - v3) * (v18 - v6) - (v18 - v16) * (v20 - v3)))* 0.5;
  v11 = v10 * 0.318309886;
  v12 = 1.0 - v10 * 0.318309886;
  v13 = v10 + v10;
  v14 = v11 <= 1.0;
  v15 = 0.0;
  if (v14)
    v15 = v12;
  return v13 / (sqrt(v15) + 1.0);
}

double S2Cell.exactArea.getter()
{
  __int128 v0;
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  VisualIntelligence::S2Point v18;

  S2Cell.getVertex(_:)(0);
  v0 = v16;
  v1 = v17;
  S2Cell.getVertex(_:)(1);
  S2Cell.getVertex(_:)(2);
  v2 = v16;
  v3 = v17;
  v18 = S2Cell.getVertex(_:)(3);
  v11 = v16;
  v4 = v17;
  v14 = v16;
  v15 = v17;
  v12 = v16;
  v13 = v17;
  sub_1D47B766C((uint64_t *)&v16, (uint64_t *)&v14, (double *)&v12, *(double *)&v16, v18.y, v18.z);
  v6 = v5;
  v16 = v0;
  v17 = v1;
  v14 = v2;
  v15 = v3;
  v12 = v11;
  v13 = v4;
  sub_1D47B766C((uint64_t *)&v16, (uint64_t *)&v14, (double *)&v12, *(double *)&v11, v7, v8);
  return v6 + v9;
}

void S2Cell.capBound.getter(double *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;

  v2 = *(_QWORD **)(v1 + 16);
  v3 = v2[2];
  if (!v3)
  {
    __break(1u);
    goto LABEL_32;
  }
  v5 = v2[4];
  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v6 == 1)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v3 < 2)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v7 = v2[5];
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v8 == 1)
  {
LABEL_36:
    __break(1u);
    JUMPOUT(0x1D47DEC10);
  }
  v9 = (*(double *)(v5 + 32) + *(double *)(v5 + 40)) * 0.5;
  v10 = (*(double *)(v7 + 32) + *(double *)(v7 + 40)) * 0.5;
  v11 = 1.0;
  switch(*(_BYTE *)(v1 + 8))
  {
    case 0:
      break;
    case 1:
      v11 = -v9;
      v9 = 1.0;
      break;
    case 2:
      v11 = -v9;
      v9 = -v10;
      v10 = 1.0;
      break;
    case 3:
      v12 = -v10;
      v10 = -v9;
      v11 = -1.0;
      v9 = v12;
      break;
    case 4:
      v11 = (*(double *)(v7 + 32) + *(double *)(v7 + 40)) * 0.5;
      v10 = -v9;
      v9 = -1.0;
      break;
    default:
      v11 = (*(double *)(v7 + 32) + *(double *)(v7 + 40)) * 0.5;
      v10 = -1.0;
      break;
  }
  v13 = sqrt(v11 * v11 + v9 * v9 + v10 * v10);
  if (v13 != 0.0)
    v13 = 1.0 / v13;
  v14 = v11 * v13;
  v15 = v9 * v13;
  v16 = v10 * v13;
  S2Cell.getVertex(_:)(0);
  v17 = (v14 - v22) * (v14 - v22) + (v15 - v23) * (v15 - v23);
  v18 = 0.0;
  if ((v17 + (v16 - v24) * (v16 - v24)) * 2.22044605e-16 < 0.0)
    v19 = 0.0;
  else
    v19 = (v17 + (v16 - v24) * (v16 - v24)) * 2.22044605e-16;
  S2Cell.getVertex(_:)(1);
  v20 = v16 - v24;
  if (v19 > ((v14 - v22) * (v14 - v22) + (v15 - v23) * (v15 - v23) + v20 * v20) * 2.22044605e-16)
    v21 = v19;
  else
    v21 = ((v14 - v22) * (v14 - v22) + (v15 - v23) * (v15 - v23) + v20 * v20) * 2.22044605e-16;
  S2Cell.getVertex(_:)(2);
  if (v21 >= 0.0)
  {
    if (v21 <= ((v14 - v22) * (v14 - v22) + (v15 - v23) * (v15 - v23) + (v16 - v24) * (v16 - v24)) * 2.22044605e-16)
      v21 = ((v14 - v22) * (v14 - v22) + (v15 - v23) * (v15 - v23) + (v16 - v24) * (v16 - v24)) * 2.22044605e-16;
  }
  else
  {
    v14 = v22;
    v15 = v23;
    v16 = v24;
    v21 = 0.0;
  }
  S2Cell.getVertex(_:)(3);
  if (v21 >= 0.0)
  {
    if (v21 > ((v14 - v22) * (v14 - v22) + (v15 - v23) * (v15 - v23) + (v16 - v24) * (v16 - v24)) * 2.22044605e-16)
      v18 = v21;
    else
      v18 = ((v14 - v22) * (v14 - v22) + (v15 - v23) * (v15 - v23) + (v16 - v24) * (v16 - v24)) * 2.22044605e-16;
  }
  else
  {
    v14 = v22;
    v15 = v23;
    v16 = v24;
  }
  *a1 = v14;
  a1[1] = v15;
  a1[2] = v16;
  a1[3] = v18;
}

void S2Cell.cellId.getter(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t S2Cell.face.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t S2Cell.level.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t S2Cell.orientation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 10);
}

uint64_t S2Cell.uv.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t S2Cell.init(face:pos:level:)@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  __int16 v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  char v12;
  uint64_t v13;

  S2CellId.init(face:pos:level:)(a1, a2, a3, &v9);
  result = S2Cell.init(cellId:)((unint64_t *)&v9, (uint64_t)&v10);
  v6 = v11;
  v7 = v12;
  v8 = v13;
  *(_QWORD *)a4 = v10;
  *(_WORD *)(a4 + 8) = v6;
  *(_BYTE *)(a4 + 10) = v7;
  *(_QWORD *)(a4 + 16) = v8;
  return result;
}

uint64_t S2Cell.init(point:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  __int16 v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;

  v3 = *((_QWORD *)a1 + 2);
  v9 = *a1;
  v10 = v3;
  S2CellId.init(point:)((double *)&v9, &v8);
  result = S2Cell.init(cellId:)(&v8, (uint64_t)&v9);
  v5 = WORD4(v9);
  v6 = BYTE10(v9);
  v7 = v10;
  *(_QWORD *)a2 = v9;
  *(_WORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 10) = v6;
  *(_QWORD *)(a2 + 16) = v7;
  return result;
}

uint64_t S2Cell.init(latlng:)@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  double v3;
  __double2 v4;
  __double2 v5;
  uint64_t result;
  __int16 v7;
  char v8;
  double v9;
  unint64_t v10;
  double v11;
  double v12;
  double sinval;

  v3 = a1[1];
  v4 = __sincos_stret(*a1);
  v5 = __sincos_stret(v3);
  v11 = v4.__cosval * v5.__cosval;
  v12 = v4.__cosval * v5.__sinval;
  sinval = v4.__sinval;
  S2CellId.init(point:)(&v11, &v10);
  result = S2Cell.init(cellId:)(&v10, (uint64_t)&v11);
  v7 = LOWORD(v12);
  v8 = BYTE2(v12);
  v9 = sinval;
  *(double *)a2 = v11;
  *(_WORD *)(a2 + 8) = v7;
  *(_BYTE *)(a2 + 10) = v8;
  *(double *)(a2 + 16) = v9;
  return result;
}

BOOL S2Cell.isLeaf.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 9) == 30;
}

VisualIntelligence::S2Point __swiftcall S2Cell.getRawVertex(_:)(Swift::Int a1)
{
  double *v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  Swift::Int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  VisualIntelligence::S2Point result;

  v3 = *(_QWORD **)(v2 + 16);
  v4 = v3[2];
  if (!v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  v5 = a1 >> 1;
  v6 = (a1 >> 1) ^ a1 & 1;
  if ((v6 & 0x8000000000000000) != 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v7 = v3[4];
  if (v6 >= *(_QWORD *)(v7 + 16))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v4 < 2)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (a1 < 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v8 = v3[5];
  if (v5 >= *(_QWORD *)(v8 + 16))
  {
LABEL_13:
    __break(1u);
    goto _$s18VisualIntelligence6S2CellV12getRawVertexyAA0C5PointVSiF;
  }
  static S2Projections.faceUvToXyz(face:u:v:)(*(unsigned __int8 *)(v2 + 8), v1, *(double *)(v7 + 8 * v6 + 32), *(double *)(v8 + 8 * v5 + 32));
_$s18VisualIntelligence6S2CellV12getRawVertexyAA0C5PointVSiF:
  result.z = v11;
  result.y = v10;
  result.x = v9;
  return result;
}

VisualIntelligence::S2Point __swiftcall S2Cell.getEdge(_:)(Swift::Int a1)
{
  double *v1;
  double *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  VisualIntelligence::S2Point result;

  v2 = v1;
  S2Cell.getRawEdge(_:)(a1);
  v3 = sqrt(v7 * v7 + v8 * v8 + v9 * v9);
  if (v3 != 0.0)
    v3 = 1.0 / v3;
  v4 = v7 * v3;
  v5 = v8 * v3;
  v6 = v9 * v3;
  *v2 = v7 * v3;
  v2[1] = v8 * v3;
  v2[2] = v9 * v3;
  result.z = v6;
  result.y = v5;
  result.x = v4;
  return result;
}

VisualIntelligence::S2Point __swiftcall S2Cell.getRawEdge(_:)(Swift::Int a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  VisualIntelligence::S2Point result;

  v4 = *(unsigned __int8 *)(v2 + 8);
  v5 = *(_QWORD **)(v2 + 16);
  if (a1 == 2)
  {
    if (v5[2] < 2uLL)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v10 = v5[5];
    if (*(_QWORD *)(v10 + 16) < 2uLL)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v11 = *(double *)(v10 + 40);
    v12 = 0.0;
    v13 = -1.0;
    v14 = v11;
    switch(*(_BYTE *)(v2 + 8))
    {
      case 0:
LABEL_19:
        v14 = -v11;
        v12 = 1.0;
        v13 = 0.0;
        break;
      case 1:
LABEL_20:
        v13 = -v11;
        v12 = 1.0;
        goto LABEL_21;
      case 2:
LABEL_17:
        v12 = -v11;
LABEL_21:
        v14 = 0.0;
        break;
      case 3:
        break;
      case 4:
LABEL_16:
        v14 = 1.0;
        v13 = v11;
        break;
      default:
LABEL_18:
        v13 = 0.0;
        v14 = 1.0;
        v12 = v11;
        break;
    }
LABEL_22:
    v9 = -v14;
    v7 = -v13;
    v8 = -v12;
    *v1 = v9;
    v1[1] = v7;
    v1[2] = v8;
    goto LABEL_32;
  }
  if (a1 == 1)
  {
    if (v5[2])
    {
      v15 = v5[4];
      if (*(_QWORD *)(v15 + 16) >= 2uLL)
      {
        static S2Projections.getUNorm(face:u:)(v4, v1, *(double *)(v15 + 40));
        goto LABEL_32;
      }
      goto LABEL_28;
    }
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (a1)
  {
    if (!v5[2])
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v16 = v5[4];
    if (!*(_QWORD *)(v16 + 16))
    {
LABEL_30:
      __break(1u);
      JUMPOUT(0x1D47DF030);
    }
    v11 = *(double *)(v16 + 32);
    v13 = -1.0;
    v12 = 0.0;
    v14 = v11;
    switch(*(_BYTE *)(v2 + 8))
    {
      case 0:
        goto LABEL_22;
      case 1:
        goto LABEL_16;
      case 2:
        goto LABEL_18;
      case 3:
        goto LABEL_19;
      case 4:
        goto LABEL_20;
      default:
        goto LABEL_17;
    }
    goto LABEL_22;
  }
  if (v5[2] < 2uLL)
  {
    __break(1u);
    goto LABEL_24;
  }
  v6 = v5[5];
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  static S2Projections.getVNorm(face:v:)(v4, v1, *(double *)(v6 + 32));
LABEL_32:
  result.z = v9;
  result.y = v8;
  result.x = v7;
  return result;
}

uint64_t S2Cell.subdivide()()
{
  unint64_t *v0;
  unint64_t v1;
  char v2;
  unint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD *v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t result;
  int v33;
  char v34;
  double v35[2];

  v1 = *v0;
  if ((*v0 & 1) != 0)
    return MEMORY[0x1E0DEE9D8];
  v2 = *((_BYTE *)v0 + 9);
  v3 = *((unsigned __int8 *)v0 + 10);
  v4 = (_QWORD *)v0[2];
  v34 = *((_BYTE *)v0 + 8);
  S2Cell.centerUV.getter(v35);
  if (__OFSUB__(0, v1))
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  v5 = -(uint64_t)v1 & v1;
  v6 = v1 - v5;
  if (v1 < v5)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  v7 = v6 + (v5 >> 2);
  if (__CFADD__(v6, v5 >> 2))
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (v3 <= 3)
  {
    v33 = v2 + 1;
    if (v33 != (char)(v2 + 1))
      goto LABEL_64;
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v9 = 4;
    v10 = v35[0];
    v11 = v35[1];
    while (1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB988);
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1D4927B00;
      *(_QWORD *)(v12 + 32) = &unk_1E97FDDE0;
      *(_QWORD *)(v12 + 40) = &unk_1E97FDDB0;
      if (qword_1ED98DCE0 != -1)
        swift_once();
      if (*((_QWORD *)off_1ED98DCD0 + 2) <= v3)
        break;
      v13 = *((_QWORD *)off_1ED98DCD0 + v3 + 4);
      if ((unint64_t)(v9 - 4) >= *(_QWORD *)(v13 + 16))
        goto LABEL_46;
      if (v4[2] < 2uLL)
        goto LABEL_47;
      if (!*(_QWORD *)(v12 + 16))
        goto LABEL_48;
      v14 = *(_QWORD *)(v13 + 8 * v9);
      v15 = *(_QWORD **)(v12 + 32);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v12 + 32) = v15;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v15 = sub_1D47DFAD4(v15);
      v17 = (v14 >> 1) & 1;
      v18 = (v14 & 2) == 0;
      if ((unint64_t)v18 >= v15[2])
        goto LABEL_49;
      *(double *)&v15[v18 + 4] = v10;
      *(_QWORD *)(v12 + 32) = v15;
      v19 = v4[4];
      if (v17 >= *(_QWORD *)(v19 + 16))
        goto LABEL_50;
      if (!*(_QWORD *)(v12 + 16))
        goto LABEL_51;
      v20 = *(_QWORD *)(v19 + 8 * v17 + 32);
      v21 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v12 + 32) = v15;
      if ((v21 & 1) == 0)
        v15 = sub_1D47DFAD4(v15);
      if (v17 >= v15[2])
        goto LABEL_52;
      v15[v17 + 4] = v20;
      *(_QWORD *)(v12 + 32) = v15;
      if (*(_QWORD *)(v12 + 16) < 2uLL)
        goto LABEL_53;
      v22 = *(_QWORD **)(v12 + 40);
      v23 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v12 + 40) = v22;
      if ((v23 & 1) == 0)
        v22 = sub_1D47DFAD4(v22);
      v24 = v14 & 1;
      if ((v24 ^ 1) >= v22[2])
        goto LABEL_54;
      *(double *)&v22[(v24 ^ 1) + 4] = v11;
      *(_QWORD *)(v12 + 40) = v22;
      v25 = v4[5];
      if (v24 >= *(_QWORD *)(v25 + 16))
        goto LABEL_55;
      if (*(_QWORD *)(v12 + 16) < 2uLL)
        goto LABEL_56;
      v26 = *(_QWORD *)(v25 + 8 * v24 + 32);
      v27 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v12 + 40) = v22;
      if ((v27 & 1) == 0)
        v22 = sub_1D47DFAD4(v22);
      if (v24 >= v22[2])
        goto LABEL_57;
      v22[v24 + 4] = v26;
      *(_QWORD *)(v12 + 40) = v22;
      if (qword_1ED98DCC8 != -1)
        swift_once();
      if ((unint64_t)(v9 - 4) >= *(_QWORD *)(qword_1ED9A49E8 + 16))
        goto LABEL_58;
      v28 = *(_QWORD *)(qword_1ED9A49E8 + 8 * v9);
      if ((v28 & 0x8000000000000000) != 0 || v28 >= 0x100)
        goto LABEL_65;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1D48AA9F0(0, v8[2] + 1, 1, v8);
      v30 = v8[2];
      v29 = v8[3];
      if (v30 >= v29 >> 1)
        v8 = sub_1D48AA9F0((_QWORD *)(v29 > 1), v30 + 1, 1, v8);
      v8[2] = v30 + 1;
      v31 = &v8[3 * v30];
      v31[4] = v7;
      *((_BYTE *)v31 + 40) = v34;
      *((_BYTE *)v31 + 41) = v33;
      *((_BYTE *)v31 + 42) = v3 ^ v28;
      v31[6] = v12;
      if (__OFSUB__(0, v7))
        goto LABEL_59;
      v7 += 2 * (-(uint64_t)v7 & v7);
      if (++v9 == 8)
        return (uint64_t)v8;
    }
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  result = sub_1D4922C28();
  __break(1u);
  return result;
}

double S2Cell.centerUV.getter@<D0>(double *a1@<X8>)
{
  unint64_t *v1;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  double v18;
  BOOL v19;
  double v20;
  double v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  double result;
  unint64_t v29;
  unint64_t v30;

  v3 = *v1;
  v4 = *((unsigned __int8 *)v1 + 9);
  v29 = 0;
  v30 = 0;
  v5 = sub_1D47D3FEC(&v30, &v29, 7, (v3 >> 61) & 1);
  v6 = sub_1D47D3FEC(&v30, &v29, 6, v5);
  v7 = sub_1D47D3FEC(&v30, &v29, 5, v6);
  v8 = sub_1D47D3FEC(&v30, &v29, 4, v7);
  v9 = sub_1D47D3FEC(&v30, &v29, 3, v8);
  v10 = sub_1D47D3FEC(&v30, &v29, 2, v9);
  v11 = sub_1D47D3FEC(&v30, &v29, 1, v10);
  sub_1D47D3FEC(&v30, &v29, 0, v11);
  v12 = 0;
  if (v4 - 95 >= 0x7F)
  {
    if ((char)v4 >= 31)
      goto LABEL_24;
    if ((char)v4 <= -34)
      goto LABEL_26;
    v12 = 1 << (30 - v4);
  }
  while (1)
  {
    v13 = -(uint64_t)v12;
    if (__OFSUB__(0, v12))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    v14 = v30 & v13;
    if ((uint64_t)((v30 & v13) + 0x4000000000000000) < 0)
      goto LABEL_18;
    v15 = __OFADD__(v12, 2 * v14);
    v16 = v12 + 2 * v14;
    if (v15)
      goto LABEL_19;
    v15 = __OFADD__(v16, -1073741824);
    v17 = v16 - 0x40000000;
    if (v15)
      goto LABEL_20;
    v18 = (double)v17 * 9.31322575e-10;
    v19 = v18 < 0.0;
    v20 = 1.0 - (1.0 - v18) * (1.0 - v18);
    v21 = (v18 + 1.0) * (v18 + 1.0) + -1.0;
    if (v19)
      v21 = v20;
    v22 = v29 & v13;
    if ((uint64_t)(v22 + 0x4000000000000000) < 0)
      goto LABEL_21;
    v15 = __OFADD__(v12, 2 * v22);
    v23 = v12 + 2 * v22;
    if (v15)
      goto LABEL_22;
    v15 = __OFADD__(v23, -1073741824);
    v24 = v23 - 0x40000000;
    if (!v15)
      break;
LABEL_23:
    __break(1u);
LABEL_24:
    if (v4 >= 0x5E)
LABEL_26:
      v12 = 0;
    else
      v12 = 1uLL >> (v4 + 34);
  }
  v25 = (double)v24 * 9.31322575e-10;
  v19 = v25 < 0.0;
  v26 = 1.0 - (1.0 - v25) * (1.0 - v25);
  v27 = (v25 + 1.0) * (v25 + 1.0) + -1.0;
  if (v19)
    v27 = v26;
  result = v21 * 0.333333333;
  *a1 = result;
  a1[1] = v27 * 0.333333333;
  return result;
}

uint64_t S2Cell.rawCenter.getter@<X0>(double *a1@<X8>)
{
  return S2CellId.rawPoint.getter(a1);
}

double S2Cell.averageArea.getter()
{
  uint64_t v0;
  double v1;

  v1 = 1.0 - (double)*(char *)(v0 + 9);
  return scalb(0.523598776, v1 + v1);
}

void sub_1D47DF7B8()
{
  qword_1EFEAB980 = 0x3FE3B2028082E8CFLL;
}

double sub_1D47DF7D4(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;

  v3 = *(_QWORD **)(v2 + 16);
  v4 = v3[2];
  if (!v4)
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v5 = v3[4];
  if (*(_QWORD *)(v5 + 16) <= a1)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v4 < 2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v6 = v3[5];
  if (*(_QWORD *)(v6 + 16) <= a2)
  {
LABEL_19:
    __break(1u);
    JUMPOUT(0x1D47DF8BCLL);
  }
  v7 = *(double *)(v5 + 8 * a1 + 32);
  v8 = v6 + 8 * a2;
  v9 = *(double *)(v8 + 32);
  v10 = 1.0;
  switch(*(_BYTE *)(v2 + 8))
  {
    case 0:
      return atan2(v9, sqrt(v10 * v10 + v7 * v7));
    case 1:
      v10 = -v7;
      v7 = 1.0;
      break;
    case 2:
      v10 = -v7;
      v7 = -v9;
      v9 = 1.0;
      break;
    case 3:
      v11 = -v9;
      v9 = -v7;
      v10 = -1.0;
      v7 = v11;
      break;
    case 4:
      v10 = *(double *)(v8 + 32);
      v9 = -v7;
      v7 = -1.0;
      break;
    default:
      v10 = *(double *)(v8 + 32);
      v9 = -1.0;
      break;
  }
  return atan2(v9, sqrt(v10 * v10 + v7 * v7));
}

unint64_t *S2Cell.contains(cell:)(unint64_t *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  unint64_t v6;

  v2 = *v1;
  if (__OFSUB__(0, *v1))
  {
    __break(1u);
    goto LABEL_9;
  }
  v3 = -*v1 & v2;
  v4 = __OFSUB__(v3, 1);
  v5 = v3 - 1;
  if (v4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (__OFSUB__(v2, v5))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*result < v2 - v5)
    return 0;
  v4 = __OFADD__(v2, v5);
  v6 = v2 + v5;
  if (!v4)
    return (unint64_t *)(*result <= v6);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t S2Cell.mayIntersect(cell:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD v4[2];

  v2 = *v1;
  v4[0] = *a1;
  v4[1] = v2;
  return (unint64_t)S2CellId.intersects(with:)(v4) & 1;
}

unint64_t sub_1D47DF970(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD v4[2];

  v2 = *v1;
  v4[0] = *a1;
  v4[1] = v2;
  return (unint64_t)S2CellId.intersects(with:)(v4) & 1;
}

BOOL sub_1D47DF9AC(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8)
      && *(unsigned __int8 *)(a1 + 9) == *(unsigned __int8 *)(a2 + 9)
      && *(unsigned __int8 *)(a1 + 10) == *(unsigned __int8 *)(a2 + 10)
      && *(_QWORD *)a1 == *(_QWORD *)a2;
}

BOOL == infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8)
      && *(unsigned __int8 *)(a1 + 9) == *(unsigned __int8 *)(a2 + 9)
      && *(unsigned __int8 *)(a1 + 10) == *(unsigned __int8 *)(a2 + 10)
      && *(_QWORD *)a1 == *(_QWORD *)a2;
}

_QWORD *sub_1D47DFA34(_QWORD *a1)
{
  return sub_1D48A84E4(0, a1[2], 0, a1);
}

_QWORD *sub_1D47DFA48(_QWORD *a1)
{
  return sub_1D48A84F8(0, a1[2], 0, a1);
}

uint64_t sub_1D47DFA5C(unint64_t a1)
{
  return sub_1D48A8614(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_1D47DFA70(_QWORD *a1)
{
  return sub_1D48A8720(0, a1[2], 0, a1);
}

_QWORD *sub_1D47DFA84(_QWORD *a1)
{
  return sub_1D48A8D8C(0, a1[2], 0, a1);
}

uint64_t sub_1D47DFA98(unint64_t a1)
{
  return sub_1D48A94B0(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_1D47DFAAC(_QWORD *a1)
{
  return sub_1D48A9614(0, a1[2], 0, a1);
}

char *sub_1D47DFAC0(uint64_t a1)
{
  return sub_1D48A882C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

_QWORD *sub_1D47DFAD4(_QWORD *a1)
{
  return sub_1D48A99BC(0, a1[2], 0, a1);
}

_QWORD *sub_1D47DFAE8(_QWORD *a1)
{
  return sub_1D48A9AC8(0, a1[2], 0, a1);
}

_QWORD *sub_1D47DFAFC(_QWORD *a1)
{
  return sub_1D48A9C08(0, a1[2], 0, a1);
}

_QWORD *sub_1D47DFB14(_QWORD *a1)
{
  return sub_1D48AA89C(0, a1[2], 0, a1);
}

_QWORD *sub_1D47DFB28(_QWORD *a1)
{
  return sub_1D48AA9A8(0, a1[2], 0, a1);
}

_QWORD *sub_1D47DFB3C(_QWORD *a1)
{
  return sub_1D48AA40C(0, a1[2], 0, a1);
}

_QWORD *sub_1D47DFB50(_QWORD *a1)
{
  return sub_1D48AAC34(0, a1[2], 0, a1);
}

void sub_1D47DFB64(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1D4922C4C();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1D8261F2CLL);
}

uint64_t sub_1D47DFBD0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_WORD *)(a1 + 9) = *(_WORD *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for S2Cell(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for S2Cell(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_WORD *)(a1 + 9) = *(_WORD *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for S2Cell()
{
  return &type metadata for S2Cell;
}

uint64_t sub_1D47DFCC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D46C2AA4(a1, v1 + OBJC_IVAR____TtC18VisualIntelligence25UnifiedModelPostProcessor_modelInfo);
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for MLModelInfo(0) + 36));
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_1D47CA6B4(9), (v9 & 1) != 0))
  {
    v10 = v8;
    v11 = *(_QWORD *)(v7 + 56);
    v12 = sub_1D4920F18();
    v13 = *(_QWORD *)(v12 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v6, v11 + *(_QWORD *)(v13 + 72) * v10, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
  }
  else
  {
    v14 = sub_1D4920F18();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
  }
  type metadata accessor for FileMapper();
  swift_allocObject();
  v15 = sub_1D47E2F48((uint64_t)v6);
  sub_1D46C35F0(a1);
  *(_QWORD *)(v2 + 16) = v15;
  return v2;
}

uint64_t sub_1D47DFE10@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int64_t v38;
  __int128 v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  BOOL v45;
  unint64_t v46;
  int64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int64_t v53;
  int64_t v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  int64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  void *v69;
  void *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  void (*v74)(uint64_t *, uint64_t, uint64_t);
  uint64_t *v75;
  void *v76;
  void *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  void (*v81)(uint64_t *, uint64_t);
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t **v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t *v97;
  void *v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t, uint64_t);
  id v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t *v111;
  void *v112;
  void *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t);
  unint64_t v119;
  NSObject *v120;
  os_log_type_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  id v135;
  void *v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  unint64_t v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  _QWORD *v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v159;
  unint64_t v160;
  _QWORD *v161;
  _QWORD *v162;
  _QWORD *v163;
  _QWORD *v164;
  uint64_t v165;
  NSObject *v166;
  os_log_type_t v167;
  _BOOL4 v168;
  uint64_t v169;
  uint8_t *v170;
  uint64_t v171;
  _QWORD *v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  const char *v179;
  unint64_t v180;
  unint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t v185;
  uint64_t *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t *v191;
  uint64_t v192;
  __int128 v193;
  _QWORD *v194;
  uint64_t *v195;
  uint64_t v196;
  int64_t v197;
  void (*v198)(char *, uint64_t);
  char *v199;
  uint64_t v200;
  _QWORD *v201;
  uint64_t v202;
  unint64_t v203;
  int64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t *v207;
  uint64_t *v208;
  uint64_t *v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;

  v201 = a4;
  v189 = type metadata accessor for MLModelInfo(0);
  v7 = MEMORY[0x1E0C80A78](v189);
  v186 = (uint64_t *)((char *)&v179 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v195 = (uint64_t *)((char *)&v179 - v9);
  v10 = sub_1D4922370();
  v11 = *(_QWORD *)(v10 - 8);
  v205 = v10;
  v206 = v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v208 = (uint64_t *)((char *)&v179 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v179 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v179 - v18;
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v179 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v179 - v23;
  v25 = *a3;
  v26 = a3[1];
  v27 = a3[2];
  v28 = a3[3];
  v29 = a1[3];
  v30 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v29);
  v31 = v210;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
  if (v31)
    return result;
  v190 = v24;
  v187 = v22;
  v209 = (uint64_t *)v19;
  v199 = v16;
  v192 = 0;
  v202 = result;
  v33 = *(_QWORD *)(result + 24);
  if (*(_QWORD *)(v33 + 16) < 2uLL)
  {
    v165 = (uint64_t)v208;
    sub_1D470C76C((uint64_t)v208);
    v166 = sub_1D4922358();
    v167 = sub_1D492291C();
    v168 = os_log_type_enabled(v166, v167);
    v169 = v205;
    if (v168)
    {
      v170 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v170 = 0;
      _os_log_impl(&dword_1D467C000, v166, v167, "Unified model expected at least 1 outputs", v170, 2u);
      MEMORY[0x1D82635B8](v170, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v165, v169);
    sub_1D46AAFD4();
    swift_allocError();
    *(_QWORD *)v171 = 0xD00000000000001BLL;
    *(_QWORD *)(v171 + 8) = 0x80000001D4945020;
    *(_BYTE *)(v171 + 16) = 4;
    swift_willThrow();
    return swift_release();
  }
  v34 = *(_QWORD *)(v33 + 64);
  v196 = v33 + 64;
  v35 = 1 << *(_BYTE *)(v33 + 32);
  if (v35 < 64)
    v36 = ~(-1 << v35);
  else
    v36 = -1;
  v37 = v36 & v34;
  v185 = v188 + OBJC_IVAR____TtC18VisualIntelligence25UnifiedModelPostProcessor_modelInfo;
  v197 = (unint64_t)(v35 + 63) >> 6;
  v210 = a2 + 64;
  v191 = &v214;
  swift_bridgeObjectRetain();
  v38 = 0;
  v184 = (unint64_t)"neric";
  v181 = 0x80000001D493F830;
  *(_QWORD *)&v39 = 136315138;
  v193 = v39;
  v183 = MEMORY[0x1E0DEE9B8] + 8;
  v179 = "Expecting at least 1 output";
  v180 = 0x80000001D4945040;
  v182 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v194 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  result = v202;
  v40 = v205;
  v200 = v33;
  while (1)
  {
    v41 = v201;
LABEL_10:
    if (v37)
    {
      v42 = __clz(__rbit64(v37));
      v43 = (v37 - 1) & v37;
      v44 = v42 | (v38 << 6);
    }
    else
    {
      v45 = __OFADD__(v38++, 1);
      if (v45)
        goto LABEL_200;
      if (v38 >= v197)
        goto LABEL_189;
      v46 = *(_QWORD *)(v196 + 8 * v38);
      if (!v46)
      {
        v47 = v38 + 1;
        if (v38 + 1 >= v197)
          goto LABEL_189;
        v46 = *(_QWORD *)(v196 + 8 * v47);
        if (!v46)
        {
          v47 = v38 + 2;
          if (v38 + 2 >= v197)
            goto LABEL_189;
          v46 = *(_QWORD *)(v196 + 8 * v47);
          if (!v46)
          {
            v47 = v38 + 3;
            if (v38 + 3 >= v197)
              goto LABEL_189;
            v46 = *(_QWORD *)(v196 + 8 * v47);
            if (!v46)
            {
              v47 = v38 + 4;
              if (v38 + 4 >= v197)
                goto LABEL_189;
              v46 = *(_QWORD *)(v196 + 8 * v47);
              if (!v46)
              {
                v47 = v38 + 5;
                if (v38 + 5 >= v197)
                  goto LABEL_189;
                v46 = *(_QWORD *)(v196 + 8 * v47);
                if (!v46)
                {
                  while (1)
                  {
                    v38 = v47 + 1;
                    if (__OFADD__(v47, 1))
                    {
                      __break(1u);
                      return result;
                    }
                    if (v38 >= v197)
                      break;
                    v46 = *(_QWORD *)(v196 + 8 * v38);
                    ++v47;
                    if (v46)
                      goto LABEL_26;
                  }
LABEL_189:
                  swift_release();
                  result = swift_release();
                  *v41 = v25;
                  v41[1] = v26;
                  v41[2] = v27;
                  v41[3] = v28;
                  v172 = v182;
                  v41[4] = v194;
                  v41[5] = v172;
                  return result;
                }
              }
            }
          }
        }
        v38 = v47;
      }
LABEL_26:
      v43 = (v46 - 1) & v46;
      v44 = __clz(__rbit64(v46)) + (v38 << 6);
    }
    v203 = v43;
    v204 = v38;
    v48 = (uint64_t *)(*(_QWORD *)(v33 + 48) + 16 * v44);
    v49 = v48[1];
    v207 = (uint64_t *)*v48;
    v208 = (uint64_t *)v49;
    if (a2)
      break;
    swift_bridgeObjectRetain();
LABEL_114:
    if (qword_1ED98F398 != -1)
      swift_once();
    if (byte_1ED98F388 != 1)
      goto LABEL_130;
    v91 = objc_msgSend((id)objc_opt_self(), sel_mainBundle, v179);
    v92 = objc_msgSend(v91, sel_bundleIdentifier);

    if (v92)
    {
      v93 = sub_1D492261C();
      v95 = v94;

      if (v93 == 0xD00000000000002BLL && v95 == v181)
      {
        swift_bridgeObjectRelease();
LABEL_122:
        v97 = &qword_1EFEAA908;
        if (qword_1EFEA9C20 != -1)
        {
          swift_once();
          v97 = &qword_1EFEAA908;
        }
        goto LABEL_126;
      }
      v96 = sub_1D4922E38();
      swift_bridgeObjectRelease();
      if ((v96 & 1) != 0)
        goto LABEL_122;
    }
    v97 = (uint64_t *)&off_1ED98F3F0;
    if (qword_1ED98F3A8 != -1)
    {
      swift_once();
      v97 = (uint64_t *)&off_1ED98F3F0;
    }
LABEL_126:
    v98 = *(void **)(*v97 + 32);
    swift_retain();
    v99 = (void *)sub_1D49225F8();
    LODWORD(v98) = objc_msgSend(v98, sel_BOOLForKey_, v99);
    swift_release();

    if ((_DWORD)v98)
    {
      v100 = v206;
      if (qword_1EFEA9C78 != -1)
        swift_once();
      v101 = v40;
      v102 = qword_1EFEAAA30;
      goto LABEL_133;
    }
LABEL_130:
    v100 = v206;
    if (qword_1ED98F3D0 != -1)
      swift_once();
    v101 = v40;
    v102 = qword_1ED98F3B0;
LABEL_133:
    v103 = __swift_project_value_buffer(v101, (uint64_t)v102);
    v104 = *(void (**)(char *, uint64_t, uint64_t))(v100 + 16);
    v104(v190, v103, v40);
    if ((byte_1ED98F388 & 1) == 0)
      goto LABEL_145;
    v105 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v106 = objc_msgSend(v105, sel_bundleIdentifier);

    if (v106)
    {
      v107 = sub_1D492261C();
      v109 = v108;

      if (v107 == 0xD00000000000002BLL && v109 == (v184 | 0x8000000000000000))
      {
        swift_bridgeObjectRelease();
LABEL_139:
        v111 = &qword_1EFEAA908;
        if (qword_1EFEA9C20 != -1)
        {
          swift_once();
          v111 = &qword_1EFEAA908;
        }
        goto LABEL_143;
      }
      v110 = sub_1D4922E38();
      swift_bridgeObjectRelease();
      if ((v110 & 1) != 0)
        goto LABEL_139;
    }
    v111 = (uint64_t *)&off_1ED98F3F0;
    if (qword_1ED98F3A8 != -1)
    {
      swift_once();
      v111 = (uint64_t *)&off_1ED98F3F0;
    }
LABEL_143:
    v112 = *(void **)(*v111 + 32);
    swift_retain();
    v113 = (void *)sub_1D49225F8();
    LODWORD(v112) = objc_msgSend(v112, sel_BOOLForKey_, v113);
    swift_release();

    v100 = v206;
    if (!(_DWORD)v112)
    {
LABEL_145:
      if (qword_1ED98F3D0 != -1)
        swift_once();
      v117 = __swift_project_value_buffer(v40, (uint64_t)qword_1ED98F3B0);
      v114 = v187;
      v104(v187, v117, v40);
      v116 = v40;
      v115 = v190;
      goto LABEL_148;
    }
    v114 = v187;
    v115 = v190;
    v104(v187, (uint64_t)v190, v40);
    v116 = v40;
LABEL_148:
    v118 = *(void (**)(char *, uint64_t))(v100 + 8);
    v118(v115, v116);
    v119 = (unint64_t)v208;
    swift_bridgeObjectRetain_n();
    v120 = sub_1D4922358();
    v121 = sub_1D4922910();
    if (os_log_type_enabled(v120, v121))
    {
      v122 = swift_slowAlloc();
      v198 = v118;
      v123 = v122;
      v124 = swift_slowAlloc();
      v211 = v124;
      *(_DWORD *)v123 = v193;
      swift_bridgeObjectRetain();
      v125 = (uint64_t)v207;
      *(_QWORD *)(v123 + 4) = sub_1D47F0250((uint64_t)v207, v119, &v211);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D467C000, v120, v121, "Process result key %s", (uint8_t *)v123, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v124, -1, -1);
      MEMORY[0x1D82635B8](v123, -1, -1);

      v198(v114, v116);
      v126 = v192;
      v127 = (uint64_t)v195;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v118(v114, v116);
      v126 = v192;
      v127 = (uint64_t)v195;
      v125 = (uint64_t)v207;
    }
    v128 = v189;
    if (v125 == 0x6E69646465626D65 && v208 == (uint64_t *)0xE900000000000067 || (sub_1D4922E38() & 1) != 0)
    {
      sub_1D46C2AA4(v185, v127);
      if (a2 && *(_QWORD *)(a2 + 16))
      {
        v129 = (uint64_t)v208;
        swift_bridgeObjectRetain();
        sub_1D47CA4DC((uint64_t)v207, v129);
        if ((v130 & 1) != 0)
          swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      v131 = *(_QWORD *)(v202 + 24);
      if (!*(_QWORD *)(v131 + 16))
        goto LABEL_192;
      v132 = (uint64_t)v208;
      swift_bridgeObjectRetain();
      v133 = sub_1D47CA4DC((uint64_t)v207, v132);
      if ((v134 & 1) == 0)
        goto LABEL_191;
      v135 = *(id *)(*(_QWORD *)(v131 + 56) + 8 * v133);
      swift_bridgeObjectRelease();
      v136 = (void *)sub_1D48C3F10(v135);
      v192 = v126;
      if (v126)
      {
        swift_bridgeObjectRelease();
        swift_release();

        goto LABEL_194;
      }
      v137 = v136;
      v138 = sub_1D48C4144(v136);
      v139 = *(int *)(v128 + 24);
      a3 = v195;
      v140 = (uint64_t *)((char *)v195 + v139);
      v141 = v140[1];
      v211 = *v140;
      v212 = v141;
      swift_bridgeObjectRetain();
      sub_1D492270C();

      v142 = v211;
      v143 = v212;
      sub_1D46C35F0((uint64_t)a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v194 = sub_1D48A9218(0, v194[2] + 1, 1, v194);
      v38 = v204;
      v40 = v205;
      v145 = v194[2];
      v144 = v194[3];
      result = v202;
      v37 = v203;
      if (v145 >= v144 >> 1)
      {
        v163 = sub_1D48A9218((_QWORD *)(v144 > 1), v145 + 1, 1, v194);
        v37 = v203;
        v38 = v204;
        v194 = v163;
        result = v202;
      }
      v146 = v194;
      v194[2] = v145 + 1;
      v147 = &v146[3 * v145];
      v147[4] = v138;
      v147[5] = v142;
      v147[6] = v143;
      v33 = v200;
    }
    else
    {
      if ((v207 != (uint64_t *)0xD000000000000010 || v208 != (uint64_t *)v180)
        && (sub_1D4922E38() & 1) == 0
        && (v207 != (uint64_t *)0x7373616C63 || v208 != (uint64_t *)0xE500000000000000)
        && (sub_1D4922E38() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v211 = 0;
        v212 = 0xE000000000000000;
        sub_1D4922B80();
        swift_bridgeObjectRelease();
        v211 = 0x7463657078656E75;
        v212 = 0xEF2079656B206465;
        sub_1D492270C();
        swift_bridgeObjectRelease();
        v176 = v211;
        v177 = v212;
        sub_1D46AAFD4();
        swift_allocError();
        *(_QWORD *)v178 = v176;
        *(_QWORD *)(v178 + 8) = v177;
        *(_BYTE *)(v178 + 16) = 4;
        swift_willThrow();
        swift_release();
        return swift_release();
      }
      sub_1D46C2AA4(v185, (uint64_t)v186);
      v148 = v188;
      if (a2 && *(_QWORD *)(a2 + 16))
      {
        v149 = (uint64_t)v208;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1D47CA4DC((uint64_t)v207, v149);
        if ((v150 & 1) != 0)
          swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v148 = v188;
      }
      else
      {
        swift_retain();
        v149 = (uint64_t)v208;
      }
      a3 = v186;
      v151 = v192;
      v152 = sub_1D46E0E70(v202, (uint64_t)v207, v149, (uint64_t)v186, 2, 0, (uint64_t (*)(uint64_t, id, uint64_t))sub_1D47E17BC, v148);
      if (v151)
        goto LABEL_201;
      v155 = v152;
      v156 = v153;
      v157 = v154;
      sub_1D46C35F0((uint64_t)a3);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v192 = 0;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v182 = sub_1D48A933C(0, v182[2] + 1, 1, v182);
      v37 = v203;
      v38 = v204;
      v160 = v182[2];
      v159 = v182[3];
      result = v202;
      if (v160 >= v159 >> 1)
      {
        v164 = sub_1D48A933C((_QWORD *)(v159 > 1), v160 + 1, 1, v182);
        v37 = v203;
        v38 = v204;
        v182 = v164;
        result = v202;
      }
      v161 = v182;
      v182[2] = v160 + 1;
      v162 = &v161[3 * v160];
      v162[4] = v155;
      v162[5] = v156;
      v162[6] = v157;
      v33 = v200;
      v40 = v205;
    }
  }
  v50 = 1 << *(_BYTE *)(a2 + 32);
  if (v50 < 64)
    v51 = ~(-1 << v50);
  else
    v51 = -1;
  v52 = v51 & *(_QWORD *)(a2 + 64);
  v53 = (unint64_t)(v50 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v54 = 0;
  v55 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v52)
  {
LABEL_32:
    v56 = __clz(__rbit64(v52));
    v52 &= v52 - 1;
    v57 = v56 | (v54 << 6);
    goto LABEL_48;
  }
  while (2)
  {
    v45 = __OFADD__(v54++, 1);
    if (v45)
    {
      __break(1u);
LABEL_191:
      swift_bridgeObjectRelease();
LABEL_192:
      v211 = 0;
      v212 = 0xE000000000000000;
      sub_1D4922B80();
      swift_bridgeObjectRelease();
      v211 = 0xD000000000000016;
      v212 = 0x80000001D4945060;
      sub_1D492270C();
      v173 = v211;
      v174 = v212;
      sub_1D46AAFD4();
      swift_allocError();
      *(_QWORD *)v175 = v173;
      *(_QWORD *)(v175 + 8) = v174;
      *(_BYTE *)(v175 + 16) = 4;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
LABEL_194:
      swift_bridgeObjectRelease();
      sub_1D46C35F0((uint64_t)v195);
      goto LABEL_195;
    }
    if (v54 >= v53)
    {
      v40 = v205;
      a3 = v209;
LABEL_60:
      swift_release();
      swift_bridgeObjectRelease();
      v66 = v55[2];
      if (v66)
      {
        if ((uint64_t *)v55[4] == v207 && (uint64_t *)v55[5] == v208 || (sub_1D4922E38() & 1) != 0)
        {
LABEL_112:
          swift_bridgeObjectRelease();
          goto LABEL_114;
        }
        if (v66 != 1)
        {
          if ((uint64_t *)v55[6] == v207 && (uint64_t *)v55[7] == v208 || (sub_1D4922E38() & 1) != 0)
            goto LABEL_112;
          if (v66 != 2)
          {
            v87 = (uint64_t **)(v55 + 9);
            v88 = 2;
            while (1)
            {
              v89 = v88 + 1;
              if (__OFADD__(v88, 1))
                break;
              v90 = *(v87 - 1) == v207 && *v87 == v208;
              if (v90 || (sub_1D4922E38() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                v40 = v205;
                goto LABEL_114;
              }
              v87 += 2;
              ++v88;
              if (v89 == v66)
              {
                swift_bridgeObjectRelease();
                v40 = v205;
                goto LABEL_70;
              }
            }
            __break(1u);
            goto LABEL_199;
          }
        }
      }
      swift_bridgeObjectRelease();
LABEL_70:
      v67 = v206;
      if (qword_1ED98F398 != -1)
        swift_once();
      if (byte_1ED98F388 != 1)
        goto LABEL_82;
      if ((sub_1D473117C() & 1) != 0)
      {
        v68 = &qword_1EFEAA908;
        if (qword_1EFEA9C20 != -1)
        {
          swift_once();
          v68 = &qword_1EFEAA908;
        }
      }
      else
      {
        v68 = (uint64_t *)&off_1ED98F3F0;
        if (qword_1ED98F3A8 != -1)
        {
          swift_once();
          v68 = (uint64_t *)&off_1ED98F3F0;
        }
      }
      v69 = *(void **)(*v68 + 32);
      swift_retain();
      v70 = (void *)sub_1D49225F8();
      LODWORD(v69) = objc_msgSend(v69, sel_BOOLForKey_, v70);
      swift_release();

      v67 = v206;
      if ((_DWORD)v69)
      {
        if (qword_1EFEA9C78 != -1)
          swift_once();
        v71 = v40;
        v72 = qword_1EFEAAA30;
      }
      else
      {
LABEL_82:
        if (qword_1ED98F3D0 != -1)
          swift_once();
        v71 = v40;
        v72 = qword_1ED98F3B0;
      }
      v73 = __swift_project_value_buffer(v71, (uint64_t)v72);
      v74 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v67 + 16);
      v74(a3, v73, v40);
      if ((byte_1ED98F388 & 1) == 0)
        goto LABEL_93;
      if ((sub_1D473117C() & 1) != 0)
      {
        v75 = &qword_1EFEAA908;
        if (qword_1EFEA9C20 != -1)
        {
          swift_once();
          v75 = &qword_1EFEAA908;
        }
      }
      else
      {
        v75 = (uint64_t *)&off_1ED98F3F0;
        if (qword_1ED98F3A8 != -1)
        {
          swift_once();
          v75 = (uint64_t *)&off_1ED98F3F0;
        }
      }
      v76 = *(void **)(*v75 + 32);
      swift_retain();
      v77 = (void *)sub_1D49225F8();
      LODWORD(v76) = objc_msgSend(v76, sel_BOOLForKey_, v77);
      swift_release();

      v67 = v206;
      if ((_DWORD)v76)
      {
        v78 = v199;
        v79 = v199;
        v80 = (uint64_t)a3;
      }
      else
      {
LABEL_93:
        if (qword_1ED98F3D0 != -1)
          swift_once();
        v80 = __swift_project_value_buffer(v40, (uint64_t)qword_1ED98F3B0);
        v78 = v199;
        v79 = v199;
      }
      v74((uint64_t *)v79, v80, v40);
      v81 = *(void (**)(uint64_t *, uint64_t))(v67 + 8);
      v81(v209, v40);
      a3 = v208;
      swift_bridgeObjectRetain();
      v82 = sub_1D4922358();
      v83 = sub_1D4922910();
      if (os_log_type_enabled(v82, v83))
      {
        v84 = (uint8_t *)swift_slowAlloc();
        v85 = swift_slowAlloc();
        v198 = (void (*)(char *, uint64_t))v81;
        v86 = v85;
        v211 = v85;
        *(_DWORD *)v84 = v193;
        swift_bridgeObjectRetain();
        v213 = sub_1D47F0250((uint64_t)v207, (unint64_t)a3, &v211);
        v40 = v205;
        sub_1D4922A78();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1D467C000, v82, v83, "Skip result key %s", v84, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D82635B8](v86, -1, -1);
        MEMORY[0x1D82635B8](v84, -1, -1);

        v198(v78, v40);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        v81((uint64_t *)v78, v40);
      }
      v41 = v201;
      result = v202;
      v33 = v200;
      v37 = v203;
      v38 = v204;
      goto LABEL_10;
    }
    a3 = v209;
    v58 = *(_QWORD *)(v210 + 8 * v54);
    if (v58)
    {
LABEL_47:
      v52 = (v58 - 1) & v58;
      v57 = __clz(__rbit64(v58)) + (v54 << 6);
LABEL_48:
      v60 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v57);
      v62 = *v60;
      v61 = v60[1];
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v55 = sub_1D48A8FB8(0, v55[2] + 1, 1, v55);
      v64 = v55[2];
      v63 = v55[3];
      if (v64 >= v63 >> 1)
        v55 = sub_1D48A8FB8((_QWORD *)(v63 > 1), v64 + 1, 1, v55);
      v55[2] = v64 + 1;
      v65 = &v55[2 * v64];
      v65[4] = v62;
      v65[5] = v61;
      if (v52)
        goto LABEL_32;
      continue;
    }
    break;
  }
  v59 = v54 + 1;
  if (v54 + 1 >= v53)
    goto LABEL_59;
  v58 = *(_QWORD *)(v210 + 8 * v59);
  if (v58)
    goto LABEL_46;
  v59 = v54 + 2;
  if (v54 + 2 >= v53)
    goto LABEL_59;
  v58 = *(_QWORD *)(v210 + 8 * v59);
  if (v58)
    goto LABEL_46;
  v59 = v54 + 3;
  if (v54 + 3 >= v53)
    goto LABEL_59;
  v58 = *(_QWORD *)(v210 + 8 * v59);
  if (v58)
    goto LABEL_46;
  v59 = v54 + 4;
  if (v54 + 4 >= v53)
    goto LABEL_59;
  v58 = *(_QWORD *)(v210 + 8 * v59);
  if (v58)
  {
LABEL_46:
    v54 = v59;
    goto LABEL_47;
  }
  v59 = v54 + 5;
  if (v54 + 5 >= v53)
  {
LABEL_59:
    v40 = v205;
    goto LABEL_60;
  }
  v58 = *(_QWORD *)(v210 + 8 * v59);
  if (v58)
    goto LABEL_46;
  while (1)
  {
    v54 = v59 + 1;
    if (__OFADD__(v59, 1))
      break;
    if (v54 >= v53)
      goto LABEL_59;
    v58 = *(_QWORD *)(v210 + 8 * v54);
    ++v59;
    if (v58)
      goto LABEL_47;
  }
LABEL_199:
  __break(1u);
LABEL_200:
  __break(1u);
LABEL_201:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1D46C35F0((uint64_t)a3);
  swift_release();
LABEL_195:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

unint64_t sub_1D47E1684(unint64_t result, uint64_t a2, uint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a3 + 16) > result)
  {
    return (unint64_t)sub_1D47E30B8(*(_QWORD *)(a3 + 8 * result + 32));
  }
  __break(1u);
  return result;
}

uint64_t sub_1D47E16C4()
{
  uint64_t v0;

  swift_release();
  sub_1D46C35F0(v0 + OBJC_IVAR____TtC18VisualIntelligence25UnifiedModelPostProcessor_modelInfo);
  return swift_deallocClassInstance();
}

uint64_t sub_1D47E16FC()
{
  return type metadata accessor for UnifiedModelPostProcessor();
}

uint64_t type metadata accessor for UnifiedModelPostProcessor()
{
  uint64_t result;

  result = qword_1ED98F128;
  if (!qword_1ED98F128)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D47E1740()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MLModelInfo(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_1D47E17BC(unint64_t result, uint64_t a2, uint64_t a3)
{
  return sub_1D47E1684(result, a2, a3);
}

uint64_t sub_1D47E17C4(char a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _BYTE *v5;
  void *v6;
  char v8;

  sub_1D46B2D44();
  if (!swift_dynamicCastMetatype())
    return sub_1D4922688();
  v8 = a1;
  sub_1D472E690();
  v2 = sub_1D4922E20();
  if (v2)
  {
    v3 = (void *)v2;
  }
  else
  {
    v3 = (void *)swift_allocError();
    *v5 = v8;
  }
  v6 = (void *)sub_1D4920E58();

  v4 = sub_1D4715DCC();
  return v4;
}

uint64_t sub_1D47E18AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD v25[4];
  __int128 v26[2];

  v1 = sub_1D4921E84();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)v25 - v7;
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)v25 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)v25 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v25 - v15;
  sub_1D46B2D44();
  v17 = swift_dynamicCastMetatype();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v18(v16, v0, v1);
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v16, v1);
LABEL_5:
    v18(v11, v0, v1);
    sub_1D47E1D64();
    v19 = sub_1D4922E20();
    if (v19)
    {
      v20 = (void *)v19;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v1);
    }
    else
    {
      v20 = (void *)swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v21, v11, v1);
    }
    v22 = (void *)sub_1D4920E58();

    v23 = sub_1D4715DCC();
    return v23;
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v14, v16, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAA80);
  if ((swift_dynamicCast() & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    goto LABEL_5;
  }
  v18(v8, v0, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAA90);
  if (swift_dynamicCast())
  {
    sub_1D46B2A10(v26, (uint64_t)v25);
    __swift_project_boxed_opaque_existential_1(v25, v25[3]);
    v23 = sub_1D4922E14();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  else
  {
    v18(v5, v0, v1);
    v23 = sub_1D4922688();
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v8, v1);
  return v23;
}

uint64_t type metadata accessor for AvailabilityChecker()
{
  return objc_opt_self();
}

uint64_t sub_1D47E1B8C()
{
  return sub_1D47E1BA0();
}

uint64_t sub_1D47E1BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _BYTE *v11;
  _QWORD v12[2];
  uint64_t v13;

  v0 = sub_1D4922370();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = VIIsSettingsEnabledForLookup();
  if ((result & 1) == 0)
  {
    sub_1D470C76C((uint64_t)v3);
    v5 = sub_1D4922358();
    v6 = sub_1D492291C();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v13 = v8;
      *(_DWORD *)v7 = 136446210;
      v12[0] = v7 + 4;
      v9 = sub_1D47E17C4(0);
      v12[1] = sub_1D47F0250(v9, v10, &v13);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D467C000, v5, v6, "%{public}s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v8, -1, -1);
      MEMORY[0x1D82635B8](v7, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_1D472E690();
    swift_allocError();
    *v11 = 0;
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_1D47E1D64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFEAB618;
  if (!qword_1EFEAB618)
  {
    v1 = sub_1D4921E84();
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0D70870], v1);
    atomic_store(result, (unint64_t *)&qword_1EFEAB618);
  }
  return result;
}

uint64_t type metadata accessor for VIVNImageScaler()
{
  return objc_opt_self();
}

_QWORD *sub_1D47E1DCC(__CVBuffer *a1, uint64_t a2, CGFloat *a3, uint64_t a4, double a5, double a6)
{
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  id v20;
  void *v21;
  CGFloat v22;
  double MinX;
  CGPoint v24;
  CGSize v25;
  BOOL v26;
  CGFloat v27;
  double MinY;
  double MaxX;
  double MaxY;
  void *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  _QWORD *v35;
  uint8_t *v36;
  uint8_t *v37;
  size_t Width;
  size_t Height;
  double x;
  double v41;
  double y;
  double v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v57;
  unsigned int v58;
  double v59;
  double v60;
  CGFloat v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;

  v64 = *MEMORY[0x1E0C80C00];
  v12 = (_QWORD *)sub_1D4922370();
  v13 = *(v12 - 1);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a3;
  v17 = a3[1];
  v18 = a3[2];
  v19 = a3[3];
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CEDF60]), sel_initWithCVPixelBuffer_orientation_options_, a1, 1, 0);
  if (!v20)
  {
    sub_1D46AAFD4();
    swift_allocError();
    *(_QWORD *)v53 = 0xD000000000000029;
    *(_QWORD *)(v53 + 8) = 0x80000001D49450E0;
    *(_BYTE *)(v53 + 16) = 5;
    swift_willThrow();
    return v12;
  }
  v21 = v20;
  v59 = a6;
  v60 = a5;
  v22 = v16;
  v65.origin.x = v16;
  v61 = v17;
  v65.origin.y = v17;
  v65.size.width = v18;
  v65.size.height = v19;
  MinX = CGRectGetMinX(v65);
  if (qword_1ED98D9D0 != -1)
    swift_once();
  v24 = *(CGPoint *)ymmword_1ED9A49B0;
  v25 = *(CGSize *)&ymmword_1ED9A49B0[16];
  v26 = MinX < CGRectGetMinX(*(CGRect *)ymmword_1ED9A49B0);
  v27 = v22;
  if (v26)
    goto LABEL_9;
  v66.origin.x = v22;
  v66.origin.y = v61;
  v66.size.width = v18;
  v66.size.height = v19;
  MinY = CGRectGetMinY(v66);
  v67.origin = v24;
  v67.size = v25;
  v26 = MinY < CGRectGetMinY(v67);
  v27 = v22;
  if (v26)
    goto LABEL_9;
  v68.origin.x = v22;
  v68.origin.y = v61;
  v68.size.width = v18;
  v68.size.height = v19;
  MaxX = CGRectGetMaxX(v68);
  v69.origin = v24;
  v69.size = v25;
  v26 = CGRectGetMaxX(v69) < MaxX;
  v27 = v22;
  if (v26)
    goto LABEL_9;
  v70.origin.x = v22;
  v70.origin.y = v61;
  v70.size.width = v18;
  v70.size.height = v19;
  MaxY = CGRectGetMaxY(v70);
  v71.origin = v24;
  v71.size = v25;
  v26 = CGRectGetMaxY(v71) < MaxY;
  v27 = v22;
  if (v26)
  {
LABEL_9:
    v58 = a2;
    v31 = v21;
    v32 = a4;
    sub_1D470C76C((uint64_t)v15);
    v33 = sub_1D4922358();
    v34 = sub_1D492291C();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = v12;
      v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v36 = 0;
      _os_log_impl(&dword_1D467C000, v33, v34, "WARNING: VIVNImageScaler invoked with normalizedBoundingBox outside (0,0),(1,1) coordinate range, probably a bug! Clipped 0-1 RoI will be used instead", v36, 2u);
      v37 = v36;
      v12 = v35;
      MEMORY[0x1D82635B8](v37, -1, -1);
    }

    (*(void (**)(char *, _QWORD *))(v13 + 8))(v15, v12);
    a4 = v32;
    v21 = v31;
    a2 = v58;
  }
  Width = CVPixelBufferGetWidth(a1);
  Height = CVPixelBufferGetHeight(a1);
  v72.origin.x = v27;
  v72.origin.y = v61;
  v72.size.width = v18;
  v72.size.height = v19;
  v73 = VNImageRectForNormalizedRect(v72, Width, Height);
  v74 = CGRectIntegral(v73);
  x = v74.origin.x;
  v41 = v74.size.width;
  if (v60 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v60 >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  y = v74.origin.y;
  if ((*(_QWORD *)&v60 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v59 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_28;
  }
  if (v59 <= -9.22337204e18)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
  if (v59 >= 9.22337204e18)
    goto LABEL_30;
  v43 = v74.size.height;
  v44 = (uint64_t)v60;
  v45 = (uint64_t)v59;
  sub_1D47C4DB4(MEMORY[0x1E0DEE9D8]);
  v46 = (void *)sub_1D4922538();
  swift_bridgeObjectRelease();
  v62 = 0;
  v12 = objc_msgSend(v21, sel_cropAndScaleBufferWithWidth_height_cropRect_format_imageCropAndScaleOption_options_error_calculatedNormalizedOriginOffset_calculatedScaleX_calculatedScaleY_, v44, v45, a2, a4, v46, &v62, x, y, v41, v43, 0, 0, 0);

  v47 = (void *)v62;
  if (v12)
  {
    if (v62)
    {
      v62 = 0;
      v63 = 0xE000000000000000;
      v48 = v47;
      sub_1D4922B80();
      swift_bridgeObjectRelease();
      v62 = 0xD000000000000027;
      v63 = 0x80000001D4945140;
      v49 = objc_msgSend(v48, sel_localizedDescription);
      sub_1D492261C();

      sub_1D492270C();
      swift_bridgeObjectRelease();
      v50 = v62;
      v51 = v63;
      sub_1D46AAFD4();
      swift_allocError();
      *(_QWORD *)v52 = v50;
      *(_QWORD *)(v52 + 8) = v51;
      *(_BYTE *)(v52 + 16) = 6;
      swift_willThrow();

    }
  }
  else
  {
    sub_1D46AAFD4();
    swift_allocError();
    *(_QWORD *)v54 = 0xD000000000000026;
    *(_QWORD *)(v54 + 8) = 0x80000001D4945110;
    *(_BYTE *)(v54 + 16) = 6;
    v55 = v47;
    swift_willThrow();

  }
  return v12;
}

uint64_t static S2PolygonBuilder.defaultMaxCells.getter()
{
  return 8;
}

ValueMetadata *type metadata accessor for S2PolygonBuilder()
{
  return &type metadata for S2PolygonBuilder;
}

id sub_1D47E23C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  char v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  unint64_t v34;
  char v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  void *v55;
  _QWORD v57[3];
  id v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  _BYTE v64[32];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)v57 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v57 - v10;
  v61 = sub_1D4920F18();
  v12 = *(_QWORD *)(v61 - 8);
  v13 = MEMORY[0x1E0C80A78](v61);
  v62 = (char *)v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v60 = (char *)v57 - v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v57 - v17;
  if (*(_QWORD *)(a1 + 16)
    && (v19 = sub_1D47CA4DC(7368801, 0xE300000000000000), (v20 & 1) != 0)
    && (sub_1D4696FAC(*(_QWORD *)(a1 + 56) + 32 * v19, (uint64_t)v64),
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D118),
        (swift_dynamicCast() & 1) != 0))
  {
    v21 = v63;
    v22 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    v23 = *(_QWORD *)(v21 + 16);
    v24 = v22;
    if (v23
      && (v25 = sub_1D47CA4DC(1701667182, 0xE400000000000000), (v26 & 1) != 0)
      && (sub_1D4696FAC(*(_QWORD *)(v21 + 56) + 32 * v25, (uint64_t)v64), (swift_dynamicCast() & 1) != 0))
    {
      v27 = (void *)sub_1D49225F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v27 = 0;
    }
    objc_msgSend(v24, sel_setName_, v27);

    if (*(_QWORD *)(v21 + 16)
      && (v34 = sub_1D47CA4DC(0x695F656C646E7562, 0xE900000000000064), (v35 & 1) != 0)
      && (sub_1D4696FAC(*(_QWORD *)(v21 + 56) + 32 * v34, (uint64_t)v64), (swift_dynamicCast() & 1) != 0))
    {
      v36 = (void *)sub_1D49225F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v36 = 0;
    }
    objc_msgSend(v24, sel_setBundleIdentifier_, v36);

    v37 = *(_QWORD *)(v21 + 16);
    v59 = v2;
    if (v37
      && (v38 = sub_1D47CA4DC(0x6C6562616CLL, 0xE500000000000000), (v39 & 1) != 0)
      && (sub_1D4696FAC(*(_QWORD *)(v21 + 56) + 32 * v38, (uint64_t)v64), (swift_dynamicCast() & 1) != 0))
    {
      v40 = (void *)sub_1D49225F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v40 = 0;
    }
    v58 = v24;
    objc_msgSend(v24, sel_setLabel_, v40);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFEAB998);
    v41 = *(_QWORD *)(v3 + 72);
    v42 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1D4927210;
    v57[2] = v43;
    v44 = v43 + v42;
    sub_1D47E2C68(0x74756F68636E7570, 0xEC0000006972755FLL, v21, (char *)(v43 + v42));
    sub_1D47E2C68(7107189, 0xE300000000000000, a1, (char *)(v44 + v41));
    swift_bridgeObjectRelease();
    sub_1D47E2C68(0x5F6C6C6174736E69, 0xEB000000006C7275, v21, (char *)(v44 + 2 * v41));
    swift_bridgeObjectRelease();
    v45 = MEMORY[0x1E0DEE9D8];
    v46 = 3;
    v57[1] = v44;
    v47 = v44;
    v48 = v61;
    do
    {
      sub_1D4761448(v47, (uint64_t)v9);
      sub_1D4711CF8((uint64_t)v9, (uint64_t)v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v48) == 1)
      {
        sub_1D47E2F08((uint64_t)v6);
      }
      else
      {
        v49 = v9;
        v50 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v51 = v60;
        v50(v60, v6, v48);
        v50(v62, v51, v48);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v45 = sub_1D48AA530(0, *(_QWORD *)(v45 + 16) + 1, 1, v45);
        v53 = *(_QWORD *)(v45 + 16);
        v52 = *(_QWORD *)(v45 + 24);
        if (v53 >= v52 >> 1)
          v45 = sub_1D48AA530(v52 > 1, v53 + 1, 1, v45);
        *(_QWORD *)(v45 + 16) = v53 + 1;
        v54 = v45
            + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
            + *(_QWORD *)(v12 + 72) * v53;
        v48 = v61;
        v50((char *)v54, v62, v61);
        v9 = v49;
      }
      v47 += v41;
      --v46;
    }
    while (v46);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v55 = (void *)sub_1D4922814();
    swift_bridgeObjectRelease();
    v29 = v58;
    objc_msgSend(v58, sel_setUrls_, v55);

  }
  else
  {
    sub_1D47E2C68(7107189, 0xE300000000000000, a1, v11);
    swift_bridgeObjectRelease();
    v28 = v61;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v61) == 1)
    {
      sub_1D47E2F08((uint64_t)v11);
      return 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v11, v28);
      v30 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB990);
      v31 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1D49273C0;
      (*(void (**)(unint64_t, char *, uint64_t))(v12 + 16))(v32 + v31, v18, v28);
      v29 = v30;
      v33 = (void *)sub_1D4922814();
      swift_bridgeObjectRelease();
      objc_msgSend(v29, sel_setUrls_, v33);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v28);
    }
  }
  return v29;
}

void sub_1D47E2A98(void *a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  unint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;

  v3 = objc_msgSend(v1, sel_inlineCard);
  if (!v3)
  {
LABEL_14:
    __break(1u);
    return;
  }
  v4 = v3;
  v5 = objc_msgSend(v3, sel_cardSections);

  if (v5)
  {
    sub_1D46F2DB4(0, &qword_1EFEAAAE0);
    v6 = sub_1D4922820();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v11 = sub_1D4922C4C();
      swift_bridgeObjectRelease();
      if (v11)
        goto LABEL_5;
    }
    else if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_5:
      if ((v6 & 0xC000000000000001) != 0)
      {
        v7 = (id)MEMORY[0x1D8261F20](0, v6);
        goto LABEL_8;
      }
      if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v7 = *(id *)(v6 + 32);
LABEL_8:
        v8 = v7;
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98ECE8);
        v9 = swift_allocObject();
        *(_OWORD *)(v9 + 16) = xmmword_1D4929910;
        *(_QWORD *)(v9 + 32) = a1;
        sub_1D4922838();
        sub_1D46F2DB4(0, &qword_1EFEAAAE8);
        v10 = a1;
        v12 = (id)sub_1D4922814();
        swift_bridgeObjectRelease();
        objc_msgSend(v8, sel_setPunchoutOptions_, v12);

        return;
      }
      __break(1u);
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D47E2C68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  char v21;
  int v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t, uint64_t);
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  char *v26;
  unint64_t v27;
  char v28;
  int v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  _BYTE v36[32];

  v35 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v34 - v11;
  v13 = sub_1D4920F18();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v34 - v18;
  if (*(_QWORD *)(a3 + 16) && (v20 = sub_1D47CA4DC(a1, a2), (v21 & 1) != 0))
  {
    sub_1D4696FAC(*(_QWORD *)(a3 + 56) + 32 * v20, (uint64_t)v36);
    v22 = swift_dynamicCast();
    v23 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v23(v12, v22 ^ 1u, 1, v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
    {
      v24 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      v24(v19, v12, v13);
      v25 = v35;
      v24(v35, v19, v13);
      v26 = v25;
LABEL_14:
      v31 = 0;
      return v23(v26, v31, 1, v13);
    }
  }
  else
  {
    v23 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v23(v12, 1, 1, v13);
  }
  sub_1D47E2F08((uint64_t)v12);
  if (*(_QWORD *)(a3 + 16)
    && (v27 = sub_1D47CA4DC(a1, a2), (v28 & 1) != 0)
    && (sub_1D4696FAC(*(_QWORD *)(a3 + 56) + 32 * v27, (uint64_t)v36), (swift_dynamicCast() & 1) != 0))
  {
    sub_1D4920F00();
    swift_bridgeObjectRelease();
    v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13);
    v30 = v35;
    if (v29 != 1)
    {
      v32 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      v32(v17, v10, v13);
      v32(v30, v17, v13);
      v26 = v30;
      goto LABEL_14;
    }
    sub_1D47E2F08((uint64_t)v10);
  }
  else
  {
    v30 = v35;
  }
  v26 = v30;
  v31 = 1;
  return v23(v26, v31, 1, v13);
}

uint64_t sub_1D47E2F08(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_1D47E2F48(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = *v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  sub_1D4761448(a1, (uint64_t)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  sub_1D4711CF8((uint64_t)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  *(_QWORD *)(v9 + ((v7 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E4E0);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 24) = 0;
  *(_BYTE *)(v10 + 32) = -1;
  *(_QWORD *)(v10 + 56) = 0;
  *(_QWORD *)(v10 + 64) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB70);
  v11 = swift_allocObject();
  *(_DWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v10 + 80) = v11;
  *(_QWORD *)(v10 + 40) = sub_1D47E3558;
  *(_QWORD *)(v10 + 48) = v9;
  swift_retain();
  swift_retain();
  sub_1D46A56B4(0);
  *(_QWORD *)(v10 + 72) = 4;
  swift_release();
  v12 = sub_1D4835CD8();
  swift_release();
  sub_1D46992EC(a1, &qword_1ED98CAF0);
  v2[2] = v12;
  return v2;
}

_QWORD *sub_1D47E30B8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;

  v2 = sub_1D48C4E2C()[2];
  swift_bridgeObjectRelease();
  v3 = 0;
  if ((a1 & 0x8000000000000000) != 0 || v2 <= (uint64_t)a1)
    return (_QWORD *)v3;
  result = sub_1D48C4E2C();
  if (result[2] > a1)
  {
    v3 = result[2 * a1 + 4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return (_QWORD *)v3;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FileMapper()
{
  return objc_opt_self();
}

unint64_t sub_1D47E31A0(uint64_t a1)
{
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  _OWORD v5[2];

  sub_1D47E3234(a1, &v3);
  if (v4)
  {
    sub_1D46FADFC(&v3, v5);
    sub_1D46FADFC(v5, &v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D0E0);
    if ((swift_dynamicCast() & 1) != 0)
      return v2;
  }
  else
  {
    sub_1D46992EC((uint64_t)&v3, &qword_1EFEABDD0);
  }
  return sub_1D47C3734(MEMORY[0x1E0DEE9D8]);
}

_OWORD *sub_1D47E3234@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _OWORD *result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v26[2];
  __int128 v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D4920F18();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4761448(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    result = (_OWORD *)sub_1D46992EC((uint64_t)v6, &qword_1ED98CAF0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v12 = sub_1D4920F24();
    v14 = v13;
    sub_1D484D52C(v12, v13);
    v16 = v15;
    v18 = v17;
    sub_1D4696F10(v12, v14);
    v19 = (void *)objc_opt_self();
    v20 = (void *)sub_1D4920F60();
    v26[0] = 0;
    v21 = objc_msgSend(v19, sel_JSONObjectWithData_options_error_, v20, 0, v26);

    v22 = v26[0];
    if (v21)
    {
      sub_1D4922AE4();
      sub_1D4696F10(v16, v18);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return sub_1D46FADFC(&v27, a2);
    }
    v23 = v22;
    v24 = (void *)sub_1D4920E64();

    swift_willThrow();
    sub_1D4696F10(v16, v18);

    result = (_OWORD *)(*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  *a2 = 0u;
  a2[1] = 0u;
  return result;
}

uint64_t type metadata accessor for JsonFileMapper()
{
  return objc_opt_self();
}

uint64_t sub_1D47E34B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0) - 8) + 80);
  v2 = (v1 + 16) & ~v1;
  v3 = sub_1D4920F18();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

_QWORD *sub_1D47E3558@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *result;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0) - 8) + 80);
  result = sub_1D47E36D4(v1 + ((v3 + 16) & ~v3));
  *a1 = result;
  return result;
}

_QWORD *sub_1D47E35A4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;

  v2 = sub_1D48A8FB8(0, *(_QWORD *)(a1 + 16), 0, MEMORY[0x1E0DEE9D8]);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    sub_1D47E39A4();
    v4 = 0;
    while (1)
    {
      v5 = sub_1D4922AD8();
      if (!*(_QWORD *)(a1 + 16))
        break;
      v7 = sub_1D47CA4DC(v5, v6);
      if ((v8 & 1) == 0)
        break;
      v9 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v7);
      v11 = *v9;
      v10 = v9[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v13 = v2[2];
      v12 = v2[3];
      if (v13 >= v12 >> 1)
        v2 = sub_1D48A8FB8((_QWORD *)(v12 > 1), v13 + 1, 1, v2);
      ++v4;
      v2[2] = v13 + 1;
      v14 = &v2[2 * v13];
      v14[4] = v11;
      v14[5] = v10;
      if (v3 == v4)
        return v2;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v2;
}

_QWORD *sub_1D47E36D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  id v25[2];
  _OWORD v26[2];
  _OWORD v27[2];
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D4920F18();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4761448(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1D46992EC((uint64_t)v4, &qword_1ED98CAF0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v9 = sub_1D4920F24();
    v11 = v10;
    sub_1D484D52C(v9, v10);
    v15 = v14;
    v17 = v16;
    sub_1D4696F10(v9, v11);
    v18 = (void *)objc_opt_self();
    v19 = (void *)sub_1D4920F60();
    v25[0] = 0;
    v20 = objc_msgSend(v18, sel_JSONObjectWithData_options_error_, v19, 0, v25);

    v21 = v25[0];
    if (v20)
    {
      sub_1D4922AE4();
      swift_unknownObjectRelease();
      sub_1D46FADFC(v26, v27);
      sub_1D4696FAC((uint64_t)v27, (uint64_t)v26);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D0E0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v12 = sub_1D47E35A4((uint64_t)v25[0]);
        sub_1D4696F10(v15, v17);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        return v12;
      }
      sub_1D4696F10(v15, v17);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    }
    else
    {
      v22 = v21;
      v23 = (void *)sub_1D4920E64();

      swift_willThrow();
      sub_1D4696F10(v15, v17);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

unint64_t sub_1D47E39A4()
{
  unint64_t result;

  result = qword_1ED98D0D8;
  if (!qword_1ED98D0D8)
  {
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0DEB460], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1ED98D0D8);
  }
  return result;
}

uint64_t sub_1D47E39E8(uint64_t a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v18;

  v5 = v4;
  v10 = sub_1D4922370();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 1 || a4 <= 0.0)
  {
    *(_QWORD *)(v5 + 24) = 30;
    *(_QWORD *)(v5 + 16) = sub_1D47E3F18(30, 0.5, 0.5, 0.5);
    sub_1D470C76C((uint64_t)v13);
    v14 = sub_1D4922358();
    v15 = sub_1D4922910();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1D467C000, v14, v15, "Invalid Box Scorer Config. Create Box Scorer using default config.", v16, 2u);
      MEMORY[0x1D82635B8](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    *(_QWORD *)(v5 + 24) = a1;
    *(_QWORD *)(v5 + 16) = sub_1D47E3F18(a1, a4, a2, a3);
  }
  return v5;
}

uint64_t sub_1D47E3B50(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  unint64_t v24;
  double v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v9 = sub_1D4922370();
  v10 = *(_QWORD *)(v9 - 8);
  result = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*(_QWORD *)&a1 & 0x7FF0000000000000) != 0
    && (~*(_QWORD *)&a2 & 0x7FF0000000000000) != 0
    && (~*(_QWORD *)&a3 & 0x7FF0000000000000) != 0
    && (~*(_QWORD *)&a4 & 0x7FF0000000000000) != 0)
  {
    v17 = *(_QWORD *)(v4 + 24);
    v18 = (double)v17;
    v19 = (double)v17 * a1;
    if ((~*(_QWORD *)&v19 & 0x7FF0000000000000) != 0)
    {
      if (v19 > -9.22337204e18)
      {
        if (v19 < 9.22337204e18)
        {
          if (((uint64_t)v19 & ~((uint64_t)v19 >> 63)) >= v17)
            v20 = *(_QWORD *)(v4 + 24);
          else
            v20 = (uint64_t)v19 & ~((uint64_t)v19 >> 63);
          v21 = v18 * a2;
          if ((~COERCE__INT64(v18 * a2) & 0x7FF0000000000000) != 0)
          {
            if (v21 > -9.22337204e18)
            {
              if (v21 < 9.22337204e18)
              {
                v22 = (uint64_t)v21 & ~((uint64_t)v21 >> 63);
                if (v22 >= v17)
                  v22 = *(_QWORD *)(v4 + 24);
                v23 = (a1 + a3) * v18;
                if ((~*(_QWORD *)&v23 & 0x7FF0000000000000) != 0)
                {
                  if (v23 > -9.22337204e18)
                  {
                    if (v23 < 9.22337204e18)
                    {
                      if (((uint64_t)v23 & ~((uint64_t)v23 >> 63)) >= v17)
                        v24 = *(_QWORD *)(v4 + 24);
                      else
                        v24 = (uint64_t)v23 & ~((uint64_t)v23 >> 63);
                      v25 = (a2 + a4) * v18;
                      if ((~*(_QWORD *)&v25 & 0x7FF0000000000000) != 0)
                      {
                        if (v25 > -9.22337204e18)
                        {
                          if (v25 < 9.22337204e18)
                          {
                            if (((uint64_t)v25 & ~((uint64_t)v25 >> 63)) >= v17)
                              v26 = *(_QWORD *)(v4 + 24);
                            else
                              v26 = (uint64_t)v25 & ~((uint64_t)v25 >> 63);
                            if ((v24 & 0x8000000000000000) == 0)
                            {
                              v27 = *(_QWORD *)(v4 + 16);
                              v28 = *(_QWORD *)(v27 + 16);
                              if (v24 < v28)
                              {
                                if ((v26 & 0x8000000000000000) == 0)
                                {
                                  v29 = v27 + 32;
                                  v30 = *(_QWORD *)(*(_QWORD *)(v29 + 8 * v24) + 16);
                                  if (v26 < v30)
                                  {
                                    v31 = __OFSUB__(v20, 1);
                                    v32 = v20 - 1;
                                    if (!v31)
                                    {
                                      if (v32 >= 1)
                                      {
                                        if (v32 >= v28)
                                        {
LABEL_65:
                                          __break(1u);
                                          goto LABEL_66;
                                        }
                                        if (v26 >= *(_QWORD *)(*(_QWORD *)(v29 + 8 * v32) + 16))
                                        {
LABEL_66:
                                          __break(1u);
                                          goto LABEL_67;
                                        }
                                      }
                                      v31 = __OFSUB__(v22, 1);
                                      v33 = v22 - 1;
                                      if (!v31)
                                      {
                                        if (v33 < 1)
                                          return result;
                                        if (v33 < v30)
                                        {
                                          if (v32 < 1)
                                            return result;
                                          if (v32 < v28)
                                          {
                                            if ((unint64_t)v33 < *(_QWORD *)(*(_QWORD *)(v29 + 8 * v32) + 16))
                                              return result;
LABEL_69:
                                            __break(1u);
                                            return result;
                                          }
LABEL_68:
                                          __break(1u);
                                          goto LABEL_69;
                                        }
LABEL_67:
                                        __break(1u);
                                        goto LABEL_68;
                                      }
LABEL_64:
                                      __break(1u);
                                      goto LABEL_65;
                                    }
LABEL_63:
                                    __break(1u);
                                    goto LABEL_64;
                                  }
LABEL_62:
                                  __break(1u);
                                  goto LABEL_63;
                                }
LABEL_61:
                                __break(1u);
                                goto LABEL_62;
                              }
LABEL_60:
                              __break(1u);
                              goto LABEL_61;
                            }
LABEL_59:
                            __break(1u);
                            goto LABEL_60;
                          }
LABEL_58:
                          __break(1u);
                          goto LABEL_59;
                        }
LABEL_57:
                        __break(1u);
                        goto LABEL_58;
                      }
LABEL_56:
                      __break(1u);
                      goto LABEL_57;
                    }
LABEL_55:
                    __break(1u);
                    goto LABEL_56;
                  }
LABEL_54:
                  __break(1u);
                  goto LABEL_55;
                }
LABEL_53:
                __break(1u);
                goto LABEL_54;
              }
LABEL_52:
              __break(1u);
              goto LABEL_53;
            }
LABEL_51:
            __break(1u);
            goto LABEL_52;
          }
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_49;
  }
  sub_1D470C76C((uint64_t)v13);
  v14 = sub_1D4922358();
  v15 = sub_1D492291C();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1D467C000, v14, v15, "Invalid box input", v16, 2u);
    MEMORY[0x1D82635B8](v16, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1D47E3ED4()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BoxScorer()
{
  return objc_opt_self();
}

uint64_t sub_1D47E3F18(uint64_t result, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  double v12;
  double v14;
  unint64_t v15;
  unint64_t v16;
  double v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  double v23;
  _QWORD *v24;
  double v25;
  unint64_t v26;
  uint64_t v27;
  double v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v4 = result + 1;
  if (__OFADD__(result, 1))
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v7 = result;
  v9 = sub_1D48C3750(result + 1, 0.0);
  result = sub_1D48C3858(v9, v4);
  if (v7 < 0)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  v10 = (_QWORD *)result;
  v11 = 0;
  v12 = (double)v7;
  while (2)
  {
    v14 = exp(((double)(uint64_t)v11 / v12 - a3) / a2 * (((double)(uint64_t)v11 / v12 - a3) / a2 * -0.5));
    v15 = 0;
    v16 = v11 - 1;
    do
    {
      v17 = exp(((double)(uint64_t)v15 / v12 - a4) / a2 * (((double)(uint64_t)v15 / v12 - a4) / a2 * -0.5));
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1D47DFB28(v10);
        v10 = (_QWORD *)result;
      }
      if (v11 >= v10[2])
      {
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
        goto LABEL_76;
      }
      v18 = v10 + 4;
      v19 = (_QWORD *)v10[v11 + 4];
      result = swift_isUniquelyReferenced_nonNull_native();
      v10[v11 + 4] = v19;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1D47DFAD4(v19);
        v19 = (_QWORD *)result;
        v18[v11] = result;
      }
      if (v15 >= v19[2])
        goto LABEL_59;
      v19[v15 + 4] = 0;
      if (v11)
      {
        v20 = v10[2];
        if (v16 >= v20)
          goto LABEL_62;
        v21 = v18[v16];
        if (v15 >= *(_QWORD *)(v21 + 16))
          goto LABEL_63;
        if (v11 >= v20)
          goto LABEL_64;
        v22 = (_QWORD *)v18[v11];
        v23 = *(double *)(v21 + 8 * v15 + 32);
        result = swift_isUniquelyReferenced_nonNull_native();
        v18[v11] = v22;
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1D47DFAD4(v22);
          v22 = (_QWORD *)result;
          v18[v11] = result;
        }
        if (v15 >= v22[2])
          goto LABEL_66;
        *(double *)&v22[v15 + 4] = v23 + *(double *)&v22[v15 + 4];
      }
      if (v15)
      {
        if (v11 >= v10[2])
          goto LABEL_65;
        v24 = (_QWORD *)v18[v11];
        if (v15 - 1 >= v24[2])
          goto LABEL_67;
        v25 = *(double *)&v24[v15 + 3];
        result = swift_isUniquelyReferenced_nonNull_native();
        v18[v11] = v24;
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1D47DFAD4(v24);
          v24 = (_QWORD *)result;
          v18[v11] = result;
        }
        if (v15 >= v24[2])
          goto LABEL_68;
        *(double *)&v24[v15 + 4] = v25 + *(double *)&v24[v15 + 4];
        if (v11)
        {
          v26 = v10[2];
          if (v16 >= v26)
            goto LABEL_69;
          v27 = v18[v16];
          if (v15 - 1 >= *(_QWORD *)(v27 + 16))
            goto LABEL_70;
          if (v11 >= v26)
            goto LABEL_71;
          v28 = *(double *)(v27 + 8 * v15 + 24);
          v29 = (_QWORD *)v18[v11];
          result = swift_isUniquelyReferenced_nonNull_native();
          v18[v11] = v29;
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1D47DFAD4(v29);
            v29 = (_QWORD *)result;
            v18[v11] = result;
          }
          if (v15 >= v29[2])
            goto LABEL_72;
          *(double *)&v29[v15 + 4] = *(double *)&v29[v15 + 4] - v28;
        }
      }
      if (v11 >= v10[2])
        goto LABEL_60;
      v30 = (_QWORD *)v18[v11];
      result = swift_isUniquelyReferenced_nonNull_native();
      v18[v11] = v30;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1D47DFAD4(v30);
        v30 = (_QWORD *)result;
        v18[v11] = result;
      }
      if (v15 >= v30[2])
        goto LABEL_61;
      *(double *)&v30[v15 + 4] = v14 * v17 + *(double *)&v30[v15 + 4];
      ++v15;
    }
    while (v7 + 1 != v15);
    if (v11++ != v7)
      continue;
    break;
  }
  if (v10[2] > v7)
  {
    v31 = v18[v7];
    if (*(_QWORD *)(v31 + 16) <= v7)
      goto LABEL_79;
    v32 = 0;
    v33 = *(double *)(v31 + 8 * v7 + 32);
    while (1)
    {
      v34 = v18[v32];
      result = swift_isUniquelyReferenced_nonNull_native();
      v18[v32] = v34;
      if ((result & 1) != 0)
      {
        if (!*(_QWORD *)(v34 + 16))
          goto LABEL_56;
      }
      else
      {
        result = (uint64_t)sub_1D47DFAD4((_QWORD *)v34);
        v34 = result;
        v18[v32] = result;
        if (!*(_QWORD *)(result + 16))
        {
LABEL_56:
          __break(1u);
          return (uint64_t)v10;
        }
      }
      *(double *)(v34 + 32) = *(double *)(v34 + 32) / v33;
      if (v7)
        break;
LABEL_52:
      if (v32 == v7)
        return (uint64_t)v10;
      if (++v32 >= v10[2])
        goto LABEL_75;
    }
    v35 = 0;
    while (v32 < v10[2])
    {
      v36 = (_QWORD *)v18[v32];
      result = swift_isUniquelyReferenced_nonNull_native();
      v18[v32] = v36;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1D47DFAD4(v36);
        v36 = (_QWORD *)result;
        v18[v32] = result;
      }
      v37 = v35 + 1;
      if ((unint64_t)(v35 + 1) >= v36[2])
        goto LABEL_74;
      *(double *)&v36[v35 + 5] = *(double *)&v36[v35 + 5] / v33;
      ++v35;
      if (v7 == v37)
        goto LABEL_52;
    }
    goto LABEL_73;
  }
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
  return result;
}

uint64_t sub_1D47E4388(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  _QWORD aBlock[7];

  v5 = v4;
  v43 = a3;
  v45 = a2;
  v37 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EAE8);
  MEMORY[0x1E0C80A78](v9);
  v44 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EA00);
  v12 = *(_QWORD *)(v11 - 8);
  v47 = v11;
  v48 = v12;
  MEMORY[0x1E0C80A78](v11);
  v46 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D492246C();
  v40 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1D4922484();
  v38 = *(_QWORD *)(v17 - 8);
  v39 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1D4921DF4();
  v21 = *(_QWORD *)(v20 - 8);
  v41 = v20;
  v22 = *(_QWORD *)(v21 + 64);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0DEE9D8];
  *(_WORD *)(v5 + 32) = 2;
  *(_QWORD *)(v5 + 40) = v24;
  *(_QWORD *)(v5 + 48) = 0;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = 0;
  *(double *)(v5 + 56) = a4;
  v25 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, a3, v20);
  v26 = *(unsigned __int8 *)(v21 + 80);
  v42 = v21;
  v27 = (v26 + 24) & ~v26;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v28 + v27, v23, v20);
  aBlock[4] = sub_1D47E5ED0;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D47E5A84;
  aBlock[3] = &block_descriptor_13;
  v29 = _Block_copy(aBlock);
  v30 = v37;
  swift_retain();
  sub_1D4922478();
  v49 = (id)MEMORY[0x1E0DEE9D8];
  sub_1D4696EA4(&qword_1ED98D0C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D1D0);
  sub_1D46BF03C((unint64_t *)&qword_1ED98D1E0, (uint64_t *)&unk_1ED98D1D0, MEMORY[0x1E0DEAF38]);
  sub_1D4922AFC();
  MEMORY[0x1D8261CD4](0, v19, v16, v29);
  _Block_release(v29);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v14);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v39);
  swift_release();
  swift_release();
  v49 = v30;
  aBlock[0] = v45;
  v31 = sub_1D4922940();
  v32 = (uint64_t)v44;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v44, 1, 1, v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EA18);
  sub_1D46F2DB4(0, (unint64_t *)&qword_1ED98F350);
  sub_1D46BF03C((unint64_t *)&unk_1ED98EA08, &qword_1ED98EA18, MEMORY[0x1E0C95D90]);
  sub_1D47E5F00();
  v33 = v46;
  sub_1D49223D0();
  sub_1D47E5F58(v32);
  swift_allocObject();
  swift_weakInit();
  sub_1D46BF03C(&qword_1ED98E9F8, &qword_1ED98EA00, MEMORY[0x1E0C95CB8]);
  v34 = v47;
  v35 = sub_1D49223DC();

  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v43, v41);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v33, v34);
  *(_QWORD *)(v5 + 24) = v35;
  swift_release();
  return v5;
}

uint64_t sub_1D47E4838(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D47E53AC(a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D47E4894(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D47E4CF0(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D47E48F0(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  int v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  int v41;

  v3 = v2;
  v39 = a1;
  v40 = a2;
  v4 = (_QWORD *)sub_1D4922370();
  v5 = *(v4 - 1);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v38 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v38 - v12;
  v14 = sub_1D49224A8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = *(void **)(v3 + 16);
  *v17 = v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF740], v14);
  v19 = v18;
  LOBYTE(v18) = sub_1D49224C0();
  (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    v4 = sub_1D48A9FAC(0, v4[2] + 1, 1, v4);
    *(_QWORD *)v5 = v4;
    goto LABEL_16;
  }
  v20 = *(unsigned __int8 *)(v3 + 32);
  if (v20 != 2)
  {
    v25 = v20 & 1;
    sub_1D470C76C((uint64_t)v13);
    v26 = sub_1D4922358();
    v27 = sub_1D4922910();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v28 = 67109120;
      v41 = v25;
      sub_1D4922A78();
      _os_log_impl(&dword_1D467C000, v26, v27, "Valid state %{BOOL}d", v28, 8u);
      MEMORY[0x1D82635B8](v28, -1, -1);
    }

    (*(void (**)(char *, _QWORD *))(v5 + 8))(v13, v4);
    v24 = v25;
    return v39(v24);
  }
  if ((*(_BYTE *)(v3 + 33) & 1) != 0)
  {
    sub_1D470C76C((uint64_t)v8);
    v21 = sub_1D4922358();
    v22 = sub_1D4922910();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_1D467C000, v21, v22, "Publisher timed out. Default false.", v23, 2u);
      MEMORY[0x1D82635B8](v23, -1, -1);
    }

    (*(void (**)(char *, _QWORD *))(v5 + 8))(v8, v4);
    v24 = 0;
    return v39(v24);
  }
  if (!*(_QWORD *)(v3 + 48))
    sub_1D47E5530();
  sub_1D470C76C((uint64_t)v11);
  v30 = sub_1D4922358();
  v31 = sub_1D4922910();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v32 = 0;
    _os_log_impl(&dword_1D467C000, v30, v31, "Pending values", v32, 2u);
    MEMORY[0x1D82635B8](v32, -1, -1);
  }

  (*(void (**)(char *, _QWORD *))(v5 + 8))(v11, v4);
  v8 = (char *)swift_allocObject();
  v33 = v40;
  *((_QWORD *)v8 + 2) = v39;
  *((_QWORD *)v8 + 3) = v33;
  v5 = v3 + 40;
  swift_beginAccess();
  v4 = *(_QWORD **)(v3 + 40);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v3 + 40) = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_20;
LABEL_16:
  v36 = v4[2];
  v35 = v4[3];
  if (v36 >= v35 >> 1)
  {
    v4 = sub_1D48A9FAC((_QWORD *)(v35 > 1), v36 + 1, 1, v4);
    *(_QWORD *)v5 = v4;
  }
  v4[2] = v36 + 1;
  v37 = &v4[2 * v36];
  v37[4] = sub_1D47E5E38;
  v37[5] = v8;
  return swift_endAccess();
}

uint64_t sub_1D47E4CF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  char v17;
  uint64_t result;
  void (*v19)(char *, uint64_t, uint64_t);
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int v27;
  _QWORD v28[2];
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = sub_1D4921DF4();
  v34 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v29 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v28 - v6;
  v8 = sub_1D4922370();
  v32 = *(_QWORD *)(v8 - 8);
  v33 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D49224A8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (_QWORD *)((char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(v1 + 16);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DEF740], v11);
  v16 = v15;
  v17 = sub_1D49224C0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v17 & 1) != 0)
  {
    v31 = v1;
    sub_1D470C76C((uint64_t)v10);
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
    v30 = a1;
    v19(v7, a1, v3);
    v20 = sub_1D4922358();
    v21 = sub_1D4922910();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v36 = v23;
      *(_DWORD *)v22 = 136315138;
      v28[1] = v22 + 4;
      v19(v29, (uint64_t)v7, v3);
      v24 = sub_1D4922688();
      v35 = sub_1D47F0250(v24, v25, &v36);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v3);
      _os_log_impl(&dword_1D467C000, v20, v21, "Received values %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v23, -1, -1);
      MEMORY[0x1D82635B8](v22, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v3);
    }

    (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v33);
    v26 = v31;
    result = sub_1D47E53AC(v30);
    v27 = *(unsigned __int8 *)(v26 + 32);
    if (v27 != 2)
      return sub_1D47E5174(v27 & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D47E4FE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t result;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;

  v1 = v0;
  v2 = sub_1D4922370();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D49224A8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v1 + 16);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v11 = v10;
  LOBYTE(v10) = sub_1D49224C0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    sub_1D470C76C((uint64_t)v5);
    v13 = sub_1D4922358();
    v14 = sub_1D4922910();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1D467C000, v13, v14, "Enable state timed out", v15, 2u);
      MEMORY[0x1D82635B8](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(_BYTE *)(v1 + 33) = 1;
    sub_1D47E5174(*(_BYTE *)(v1 + 32) & 1);
    return sub_1D47E5B68();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D47E5174(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t result;
  uint64_t *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  void (*v23)(uint64_t *);
  uint64_t v24;

  v3 = sub_1D4922370();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D49224A8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(v1 + 16);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v12 = v11;
  LOBYTE(v11) = sub_1D49224C0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) != 0)
  {
    v14 = (uint64_t *)(v1 + 40);
    swift_beginAccess();
    v15 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 16);
    sub_1D470C76C((uint64_t)v6);
    v16 = sub_1D4922358();
    v17 = sub_1D4922910();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v18 = 134217984;
      v24 = v15;
      sub_1D4922A78();
      _os_log_impl(&dword_1D467C000, v16, v17, "Releasing %ld completion(s)", v18, 0xCu);
      MEMORY[0x1D82635B8](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v19 = *v14;
    v20 = *(_QWORD *)(*v14 + 16);
    if (v20)
    {
      v21 = a1 & 1;
      swift_bridgeObjectRetain();
      v22 = v19 + 40;
      do
      {
        v23 = *(void (**)(uint64_t *))(v22 - 8);
        LOBYTE(v24) = v21;
        swift_retain();
        v23(&v24);
        swift_release();
        v22 += 16;
        --v20;
      }
      while (v20);
      swift_bridgeObjectRelease();
    }
    *v14 = MEMORY[0x1E0DEE9D8];
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D47E53AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t result;
  uint64_t v14;

  v3 = sub_1D4921DF4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D49224A8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(v1 + 16);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v12 = v11;
  LOBYTE(v11) = sub_1D49224C0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    result = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
    if ((_DWORD)result == *MEMORY[0x1E0D70758])
    {
      *(_BYTE *)(v1 + 32) = 0;
      sub_1D47E5B68();
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    if ((_DWORD)result != *MEMORY[0x1E0D70748])
    {
      if ((_DWORD)result != *MEMORY[0x1E0D70750])
        return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      *(_BYTE *)(v1 + 32) = 1;
      return sub_1D47E5B68();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D47E5530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  id v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, _QWORD, uint64_t);
  char *v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  void *v36;
  char *v37;
  char *v38;
  uint64_t ObjectType;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD aBlock[7];

  v1 = sub_1D492246C();
  v44 = *(_QWORD *)(v1 - 8);
  v45 = v1;
  MEMORY[0x1E0C80A78](v1);
  v43 = (char *)&ObjectType - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D4922484();
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  MEMORY[0x1E0C80A78](v3);
  v40 = (char *)&ObjectType - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D4922460();
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v50 = (char *)&ObjectType - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v49 = (char *)&ObjectType - v8;
  v48 = sub_1D492249C();
  v46 = *(_QWORD *)(v48 - 8);
  v9 = MEMORY[0x1E0C80A78](v48);
  v11 = (char *)&ObjectType - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v47 = (char *)&ObjectType - v12;
  v13 = sub_1D492297C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&ObjectType - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1D49224A8();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (uint64_t *)((char *)&ObjectType - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v53 = v0;
  v21 = *(void **)(v0 + 16);
  *v20 = v21;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E0DEF740], v17);
  v22 = v21;
  LOBYTE(v21) = sub_1D49224C0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v18 + 8))(v20, v17);
  if ((v21 & 1) != 0)
  {
    sub_1D46F2DB4(0, (unint64_t *)&qword_1ED98D258);
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1D4696EA4(&qword_1ED98AF80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF938], MEMORY[0x1E0DEF948]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CA68);
    sub_1D46BF03C(&qword_1ED98CA70, &qword_1ED98CA68, MEMORY[0x1E0DEAF38]);
    sub_1D4922AFC();
    v24 = sub_1D4922988();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v25 = v53;
    *(_QWORD *)(v53 + 48) = v24;
    result = swift_unknownObjectRelease();
    if (*(_QWORD *)(v25 + 48))
    {
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1D4922490();
      v26 = v47;
      MEMORY[0x1D8261824](v11, *(double *)(v25 + 56));
      v27 = *(void (**)(char *, uint64_t))(v46 + 8);
      v28 = v48;
      v27(v11, v48);
      v30 = v51;
      v29 = v52;
      v31 = *(void (**)(char *, _QWORD, uint64_t))(v51 + 104);
      v32 = v49;
      v31(v49, *MEMORY[0x1E0DEF498], v52);
      v33 = v50;
      *(_QWORD *)v50 = 0;
      v31(v33, *MEMORY[0x1E0DEF480], v29);
      MEMORY[0x1D8261D7C](v26, v32, v33, ObjectType);
      swift_unknownObjectRelease();
      v34 = *(void (**)(char *, uint64_t))(v30 + 8);
      v34(v33, v29);
      v34(v32, v29);
      result = ((uint64_t (*)(char *, uint64_t))v27)(v26, v28);
      if (*(_QWORD *)(v25 + 48))
      {
        swift_getObjectType();
        v35 = swift_allocObject();
        swift_weakInit();
        aBlock[4] = sub_1D47E5E30;
        aBlock[5] = v35;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1D47E5A84;
        aBlock[3] = &block_descriptor_3;
        v36 = _Block_copy(aBlock);
        swift_unknownObjectRetain();
        swift_retain();
        v37 = v40;
        sub_1D4922478();
        v38 = v43;
        sub_1D47E5AB4();
        sub_1D49229D0();
        _Block_release(v36);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v38, v45);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v37, v42);
        swift_release();
        result = swift_release();
        if (*(_QWORD *)(v25 + 48))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          sub_1D49229E8();
          return swift_unknownObjectRelease();
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D47E5A30()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D47E4FE0();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D47E5A84(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1D47E5AB4()
{
  sub_1D492246C();
  sub_1D4696EA4(&qword_1ED98D0C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D1D0);
  sub_1D46BF03C((unint64_t *)&qword_1ED98D1E0, (uint64_t *)&unk_1ED98D1D0, MEMORY[0x1E0DEAF38]);
  return sub_1D4922AFC();
}

uint64_t sub_1D47E5B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t result;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v1 = v0;
  v18 = sub_1D492246C();
  v2 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D4922484();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D49224A8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(v1 + 16);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF740], v9);
  v14 = v13;
  LOBYTE(v13) = sub_1D49224C0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) != 0)
  {
    if (*(_QWORD *)(v1 + 48))
    {
      swift_getObjectType();
      aBlock[4] = faiss::NormalizationTransform::~NormalizationTransform;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1D47E5A84;
      aBlock[3] = &block_descriptor_6;
      v16 = _Block_copy(aBlock);
      swift_unknownObjectRetain();
      sub_1D4922478();
      sub_1D47E5AB4();
      sub_1D49229D0();
      _Block_release(v16);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v18);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if (*(_QWORD *)(v1 + 48))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_1D49229DC();
        swift_unknownObjectRelease();
      }
      *(_QWORD *)(v1 + 48) = 0;
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D47E5D98()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PegasusProxyEnableListener()
{
  return objc_opt_self();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_1D47E5E0C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D47E5E30()
{
  return sub_1D47E5A30();
}

uint64_t sub_1D47E5E38(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_1D47E5E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1D4921DF4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1D47E5ED0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D4921DF4() - 8) + 80);
  return sub_1D47E4838(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

unint64_t sub_1D47E5F00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED98EAF0;
  if (!qword_1ED98EAF0)
  {
    v1 = sub_1D46F2DB4(255, (unint64_t *)&qword_1ED98F350);
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0DEF7F8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED98EAF0);
  }
  return result;
}

uint64_t sub_1D47E5F58(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EAE8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D47E5F98(uint64_t a1)
{
  return sub_1D47E4894(a1);
}

uint64_t sub_1D47E5FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), _QWORD *a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  int v28;
  _QWORD *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;

  v60 = a2;
  v61 = a1;
  v12 = sub_1D4922370();
  v54 = *(_QWORD *)(v12 - 8);
  v55 = v12;
  v13 = MEMORY[0x1E0C80A78](v12);
  v52 = (uint64_t)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v51 = (uint64_t)&v51 - v16;
  MEMORY[0x1E0C80A78](v15);
  v57 = (uint64_t)&v51 - v17;
  v18 = sub_1D49224A8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (uint64_t *)((char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = a3;
  v22[3] = a4;
  v22[4] = a5;
  v22[5] = a6;
  v53 = a6;
  v22[6] = a7;
  v23 = (_QWORD *)swift_allocObject();
  v24 = v60;
  v23[2] = v60;
  v23[3] = sub_1D47E6B30;
  v58 = v23;
  v23[4] = v22;
  v25 = *(void **)(v61 + 16);
  *v21 = v25;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v19 + 104))(v21, *MEMORY[0x1E0DEF740], v18);
  v56 = a3;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v59 = a7;
  swift_retain_n();
  swift_retain();
  swift_retain();
  v26 = v25;
  LOBYTE(v25) = sub_1D49224C0();
  (*(void (**)(_QWORD *, uint64_t))(v19 + 8))(v21, v18);
  if ((v25 & 1) == 0)
  {
    __break(1u);
LABEL_21:
    v21 = sub_1D48A9FAC(0, v21[2] + 1, 1, v21);
    *a7 = v21;
    goto LABEL_16;
  }
  v27 = v61;
  v28 = *(unsigned __int8 *)(v61 + 32);
  if (v28 != 2)
  {
    v36 = v28 & 1;
    sub_1D470C76C(v57);
    v37 = sub_1D4922358();
    v38 = sub_1D4922910();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v39 = 67109120;
      v62 = v36;
      sub_1D4922A78();
      _os_log_impl(&dword_1D467C000, v37, v38, "Valid state %{BOOL}d", v39, 8u);
      MEMORY[0x1D82635B8](v39, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v57, v55);
    v40 = v56;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v41 = (uint64_t)v59;
    swift_retain();
    sub_1D46D7828(v36, v24, v40, a4, a5, v53, v41);
    swift_release();
    goto LABEL_10;
  }
  v29 = v58;
  if ((*(_BYTE *)(v61 + 33) & 1) != 0)
  {
    v30 = v51;
    sub_1D470C76C(v51);
    v31 = sub_1D4922358();
    v32 = sub_1D4922910();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_1D467C000, v31, v32, "Publisher timed out. Default false.", v33, 2u);
      MEMORY[0x1D82635B8](v33, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v30, v55);
    v34 = v56;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v35 = (uint64_t)v59;
    swift_retain();
    sub_1D46D7828(0, v24, v34, a4, a5, v53, v35);
    swift_release();
LABEL_10:
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    goto LABEL_19;
  }
  if (!*(_QWORD *)(v61 + 48))
    sub_1D47E5530();
  v42 = v52;
  sub_1D470C76C(v52);
  v43 = sub_1D4922358();
  v44 = sub_1D4922910();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v45 = 0;
    _os_log_impl(&dword_1D467C000, v43, v44, "Pending values", v45, 2u);
    MEMORY[0x1D82635B8](v45, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v42, v55);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_1D47E6B70;
  *(_QWORD *)(v18 + 24) = v29;
  a7 = (_QWORD *)(v27 + 40);
  swift_beginAccess();
  v21 = *(_QWORD **)(v27 + 40);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v27 + 40) = v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_21;
LABEL_16:
  v48 = v21[2];
  v47 = v21[3];
  if (v48 >= v47 >> 1)
  {
    v21 = sub_1D48A9FAC((_QWORD *)(v47 > 1), v48 + 1, 1, v21);
    *a7 = v21;
  }
  v21[2] = v48 + 1;
  v49 = &v21[2 * v48];
  v49[4] = sub_1D47E6B74;
  v49[5] = v18;
  swift_endAccess();
  swift_release();
  swift_release();
LABEL_19:
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1D47E6570(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  void *v23;
  uint64_t v24;
  id v25;
  int v26;
  _QWORD *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  int v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(_QWORD);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  int v54;

  v10 = sub_1D4922370();
  v50 = *(_QWORD *)(v10 - 8);
  v51 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v48 = (uint64_t)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v47 = (uint64_t)&v47 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v47 - v15;
  v17 = sub_1D49224A8();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (uint64_t *)((char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = a3;
  v21[3] = a4;
  v49 = a4;
  v21[4] = a5;
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = a2;
  v22[3] = sub_1D47E6AB4;
  v53 = v22;
  v22[4] = v21;
  v23 = *(void **)(a1 + 16);
  *v20 = v23;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E0DEF740], v17);
  v52 = a3;
  v24 = (uint64_t)a5;
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  v25 = v23;
  LOBYTE(v23) = sub_1D49224C0();
  (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v20, v17);
  if ((v23 & 1) == 0)
  {
    __break(1u);
LABEL_21:
    a5 = sub_1D48A9FAC(0, a5[2] + 1, 1, a5);
    *v20 = a5;
    goto LABEL_16;
  }
  v26 = *(unsigned __int8 *)(a1 + 32);
  if (v26 != 2)
  {
    v33 = v26 & 1;
    sub_1D470C76C((uint64_t)v16);
    v34 = sub_1D4922358();
    v35 = sub_1D4922910();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v36 = 67109120;
      v54 = v33;
      sub_1D4922A78();
      _os_log_impl(&dword_1D467C000, v34, v35, "Valid state %{BOOL}d", v36, 8u);
      MEMORY[0x1D82635B8](v36, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v50 + 8))(v16, v51);
    v37 = v52;
    swift_retain();
    swift_retain();
    sub_1D46D8688(v33, a2, v37, v49, v24);
    swift_release();
    goto LABEL_10;
  }
  v27 = v53;
  if ((*(_BYTE *)(a1 + 33) & 1) != 0)
  {
    v28 = v47;
    sub_1D470C76C(v47);
    v29 = sub_1D4922358();
    v30 = sub_1D4922910();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_1D467C000, v29, v30, "Publisher timed out. Default false.", v31, 2u);
      MEMORY[0x1D82635B8](v31, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v28, v51);
    v32 = v52;
    swift_retain();
    swift_retain();
    sub_1D46D8688(0, a2, v32, v49, v24);
    swift_release();
LABEL_10:
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_19;
  }
  if (!*(_QWORD *)(a1 + 48))
    sub_1D47E5530();
  v38 = v48;
  sub_1D470C76C(v48);
  v39 = sub_1D4922358();
  v40 = sub_1D4922910();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v41 = 0;
    _os_log_impl(&dword_1D467C000, v39, v40, "Pending values", v41, 2u);
    MEMORY[0x1D82635B8](v41, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v38, v51);
  v16 = (char *)swift_allocObject();
  *((_QWORD *)v16 + 2) = sub_1D47E6AC4;
  *((_QWORD *)v16 + 3) = v27;
  v20 = (_QWORD *)(a1 + 40);
  swift_beginAccess();
  a5 = *(_QWORD **)(a1 + 40);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a1 + 40) = a5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_21;
LABEL_16:
  v44 = a5[2];
  v43 = a5[3];
  if (v44 >= v43 >> 1)
  {
    a5 = sub_1D48A9FAC((_QWORD *)(v43 > 1), v44 + 1, 1, a5);
    *v20 = a5;
  }
  a5[2] = v44 + 1;
  v45 = &a5[2 * v44];
  v45[4] = sub_1D47E6B74;
  v45[5] = v16;
  swift_endAccess();
  swift_release();
  swift_release();
LABEL_19:
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1D47E6AB4(unint64_t a1)
{
  uint64_t v1;

  return sub_1D4858E64(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD))(v1 + 24), *(_QWORD *)(v1 + 32));
}

unint64_t sub_1D47E6AC4(char a1)
{
  uint64_t v1;

  return sub_1D46D3028(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1D47E6AD0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D47E6AF4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D47E6B30(unint64_t a1)
{
  uint64_t v1;

  return sub_1D47D51BC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(uint64_t))(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t objectdestroy_16Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D47E6B90(uint64_t a1, unint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  __int128 v56;
  int v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  int v62;
  void (*v63)(char *, uint64_t);
  NSObject *v64;
  os_log_type_t v65;
  _BOOL4 v66;
  uint8_t *v67;
  uint64_t v68;
  void (*v69)(unint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t result;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  void *v88;
  void *v89;
  id v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  id v96;
  void *v97;
  void (*v98)(_QWORD, _QWORD, _QWORD);
  NSObject *v99;
  os_log_type_t v100;
  uint8_t *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  void (*v107)(_QWORD, _QWORD, _QWORD);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  NSObject *v116;
  os_log_type_t v117;
  uint8_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  NSObject *v124;
  os_log_type_t v125;
  uint8_t *v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char v136;
  unint64_t v137;
  uint64_t v138;
  int v139;
  os_log_type_t v140;
  uint8_t *v141;
  uint64_t v142;
  uint64_t v143;
  os_log_type_t v144;
  uint8_t *v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  char v149;
  __int128 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  char *v156;
  unint64_t v157;
  int64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t *v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t *v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  int v171;
  uint64_t *v172;
  void *v173;
  void *v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t *v180;
  void *v181;
  void *v182;
  char *v183;
  uint64_t v184;
  unint64_t v185;
  NSObject *v186;
  os_log_type_t v187;
  BOOL v188;
  uint64_t v189;
  uint64_t v190;
  int v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  void (*v197)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v198;
  uint64_t v199;
  void (*v200)(char *, uint64_t, uint64_t);
  uint64_t v201;
  char isUniquelyReferenced_nonNull_native;
  char *v203;
  uint64_t *v204;
  void *v205;
  void *v206;
  uint64_t *v207;
  uint64_t v208;
  uint64_t *v209;
  void *v210;
  void *v211;
  char *v212;
  uint64_t v213;
  char *v214;
  uint64_t (*v215)(char *, uint64_t);
  NSObject *v216;
  os_log_type_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  uint64_t v222;
  char v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  unint64_t v227;
  uint64_t v228;
  unint64_t v229;
  uint64_t v230;
  NSObject *v231;
  os_log_type_t v232;
  uint8_t *v233;
  uint64_t v234;
  unint64_t v235;
  char v236;
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  char v240;
  uint64_t v241;
  unint64_t v242;
  uint64_t v243;
  unint64_t v244;
  char v245;
  uint64_t v246;
  unint64_t v247;
  unint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  int *v252;
  uint64_t *v253;
  uint64_t *v254;
  uint64_t v255;
  unint64_t v256;
  unint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t *v262;
  _QWORD *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  void (*v268)(char *, uint64_t);
  uint64_t v269;
  uint64_t v270;
  __int128 v271;
  __int128 v272;
  char *v273;
  unint64_t *v274;
  uint64_t v275;
  uint64_t v276;
  int64_t v277;
  int v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  void (*v287)(unint64_t, uint64_t);
  unint64_t v288;
  unint64_t v289;
  char *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  _QWORD *v296;
  char *v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  uint64_t v301;
  char *v302;
  char *v303;
  char *v304;
  char *v305;
  char *v306;
  char *v307;
  uint64_t v308;
  __int128 *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  _OWORD *v313;
  uint64_t v314;
  unsigned int v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  unint64_t v319;
  uint64_t v320;
  uint64_t v321;
  unint64_t v322;
  uint64_t v323;
  unint64_t v324;
  __int128 v325;
  __int128 v326;
  uint64_t v327;

  v321 = a4;
  v315 = a3;
  v327 = *MEMORY[0x1E0C80C00];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DFC8);
  v293 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v295 = (uint64_t)&v271 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v294 = v8;
  MEMORY[0x1E0C80A78](v7);
  v297 = (char *)&v271 - v9;
  v298 = type metadata accessor for MLModelInfo(0);
  v10 = MEMORY[0x1E0C80A78](v298);
  v296 = (_QWORD *)((char *)&v271 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v299 = (uint64_t)&v271 - v12;
  v292 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  v13 = MEMORY[0x1E0C80A78](v292);
  v300 = (char *)&v271 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v291 = (uint64_t)&v271 - v16;
  MEMORY[0x1E0C80A78](v15);
  v303 = (char *)&v271 - v17;
  v18 = sub_1D4920F18();
  v314 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x1E0C80A78](v18);
  v304 = (char *)&v271 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19);
  v290 = (char *)&v271 - v22;
  MEMORY[0x1E0C80A78](v21);
  v316 = (char *)&v271 - v23;
  v24 = sub_1D4922370();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x1E0C80A78](v24);
  v306 = (char *)&v271 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x1E0C80A78](v26);
  v302 = (char *)&v271 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v305 = (char *)&v271 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v307 = (char *)&v271 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v288 = (unint64_t)&v271 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v301 = (uint64_t)&v271 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v308 = (uint64_t)&v271 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v309 = (__int128 *)((char *)&v271 - v41);
  v42 = MEMORY[0x1E0C80A78](v40);
  v311 = (uint64_t)&v271 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v313 = (__int128 *)((char *)&v271 - v45);
  v46 = MEMORY[0x1E0C80A78](v44);
  v319 = (unint64_t)&v271 - v47;
  v48 = MEMORY[0x1E0C80A78](v46);
  v50 = (char *)&v271 - v49;
  v51 = MEMORY[0x1E0C80A78](v48);
  v53 = (char *)&v271 - v52;
  MEMORY[0x1E0C80A78](v51);
  v55 = (char *)&v271 - v54;
  v310 = a1;
  *(_QWORD *)&v325 = a1;
  *((_QWORD *)&v325 + 1) = a2;
  swift_bridgeObjectRetain();
  sub_1D492270C();
  v56 = v325;
  swift_bridgeObjectRetain();
  v318 = v56;
  v57 = sub_1D48C32B8();
  if (v57 == 63)
  {
    v317 = v24;
    swift_bridgeObjectRelease();
    sub_1D470C76C((uint64_t)v55);
    swift_bridgeObjectRetain();
    v58 = sub_1D4922358();
    v59 = sub_1D492291C();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      v61 = swift_slowAlloc();
      *(_QWORD *)&v325 = v61;
      *(_DWORD *)v60 = 136315138;
      swift_bridgeObjectRetain();
      v323 = sub_1D47F0250(v318, *((unint64_t *)&v56 + 1), (uint64_t *)&v325);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D467C000, v58, v59, "TrialModelProvider failed: model info factor name %s not a supported Trial Factor Name", v60, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v61, -1, -1);
      MEMORY[0x1D82635B8](v60, -1, -1);

      swift_release();
    }
    else
    {

      swift_release();
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v55, v317);
    goto LABEL_8;
  }
  v62 = v57;
  v289 = a2;
  sub_1D470C76C((uint64_t)v53);
  sub_1D470C928((uint64_t)v50);
  v286 = v25;
  v63 = *(void (**)(char *, uint64_t))(v25 + 8);
  v63(v53, v24);
  swift_bridgeObjectRetain_n();
  v64 = sub_1D4922358();
  v65 = sub_1D4922910();
  v66 = os_log_type_enabled(v64, v65);
  v312 = v18;
  v287 = (void (*)(unint64_t, uint64_t))v63;
  if (v66)
  {
    v67 = (uint8_t *)swift_slowAlloc();
    v68 = swift_slowAlloc();
    *(_QWORD *)&v325 = v68;
    *(_DWORD *)v67 = 136315138;
    swift_bridgeObjectRetain();
    v323 = sub_1D47F0250(v318, *((unint64_t *)&v56 + 1), (uint64_t *)&v325);
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D467C000, v64, v65, "TrialModelProvider: init with info factor %s", v67, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v68, -1, -1);
    MEMORY[0x1D82635B8](v67, -1, -1);

    v69 = v287;
    v287((unint64_t)v50, v24);
    v70 = v24;
    v71 = v319;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v63(v50, v24);
    v70 = v24;
    v71 = v319;
    v69 = (void (*)(unint64_t, uint64_t))v63;
  }
  v72 = sub_1D48BEE58(v62, v315, 0x7473696C70, 0xE500000000000000);
  v74 = v73;
  sub_1D470C76C(v71);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v75 = sub_1D4922358();
  v76 = sub_1D4922910();
  if (os_log_type_enabled(v75, v76))
  {
    v77 = swift_slowAlloc();
    v78 = swift_slowAlloc();
    v317 = v70;
    v79 = v78;
    *(_QWORD *)&v325 = v78;
    *(_DWORD *)v77 = 136315394;
    swift_bridgeObjectRetain();
    v323 = sub_1D47F0250(v318, *((unint64_t *)&v56 + 1), (uint64_t *)&v325);
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v77 + 12) = 2080;
    swift_bridgeObjectRetain();
    v323 = sub_1D47F0250(v72, v74, (uint64_t *)&v325);
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D467C000, (os_log_t)v56, v76, "TrialModelProvider: init with info factor %s, info path %s", (uint8_t *)v77, 0x16u);
    swift_arrayDestroy();
    v80 = v79;
    v70 = v317;
    MEMORY[0x1D82635B8](v80, -1, -1);
    MEMORY[0x1D82635B8](v77, -1, -1);

    v69(v319, v70);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v69(v71, v70);
  }
  v81 = v316;
  v82 = v289;
  sub_1D4920EA0();
  swift_bridgeObjectRelease();
  v85 = sub_1D4920F24();
  v87 = v86;
  v88 = (void *)objc_opt_self();
  v89 = (void *)sub_1D4920F60();
  *(_QWORD *)&v325 = 0;
  v90 = objc_msgSend(v88, sel_propertyListWithData_options_format_error_, v89, 1, 0, &v325);

  if (!v90)
  {
    v96 = (id)v325;
    swift_bridgeObjectRelease();
    v97 = (void *)sub_1D4920E64();

    swift_willThrow();
LABEL_22:
    v98 = (void (*)(_QWORD, _QWORD, _QWORD))v313;
    sub_1D470C76C((uint64_t)v313);
    sub_1D46A5708(v85, v87);
    sub_1D46A5708(v85, v87);
    v99 = sub_1D4922358();
    v100 = sub_1D492291C();
    if (os_log_type_enabled(v99, v100))
    {
      v317 = v70;
      v101 = (uint8_t *)swift_slowAlloc();
      v102 = swift_slowAlloc();
      *(_QWORD *)&v325 = v102;
      *(_DWORD *)v101 = 136315138;
      sub_1D46A5708(v85, v87);
      v103 = v87;
      v104 = sub_1D4920F30();
      v106 = v105;
      sub_1D4696F10(v85, v103);
      v323 = sub_1D47F0250(v104, v106, (uint64_t *)&v325);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      sub_1D4696F10(v85, v103);
      sub_1D4696F10(v85, v103);
      _os_log_impl(&dword_1D467C000, v99, v100, "TrialModelProvider failed to load info plist %s", v101, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v102, -1, -1);
      MEMORY[0x1D82635B8](v101, -1, -1);

      swift_release();
      sub_1D4696F10(v85, v103);
      v107 = (void (*)(_QWORD, _QWORD, _QWORD))v313;
LABEL_24:
      v287((unint64_t)v107, v317);
      (*(void (**)(char *, uint64_t))(v314 + 8))(v316, v312);
LABEL_8:
      type metadata accessor for TrialModelProvider();
      swift_deallocPartialClassInstance();
      return 0;
    }

    swift_release();
    sub_1D4696F10(v85, v87);
    sub_1D4696F10(v85, v87);
    sub_1D4696F10(v85, v87);
    v108 = (uint64_t)v98;
    goto LABEL_38;
  }
  v91 = (id)v325;
  sub_1D4922AE4();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D118);
  v92 = MEMORY[0x1E0DEE9B8];
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  v93 = v323;
  if (*(_QWORD *)(v323 + 16) && (v94 = sub_1D47CA4DC(0x4C45444F4D5F4956, 0xE800000000000000), (v95 & 1) != 0))
  {
    sub_1D4696FAC(*(_QWORD *)(v93 + 56) + 32 * v94, (uint64_t)&v325);
  }
  else
  {
    v325 = 0u;
    v326 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v326 + 1))
  {
    sub_1D46992EC((uint64_t)&v325, &qword_1EFEABDD0);
    goto LABEL_34;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_34:
    v115 = v311;
    sub_1D470C76C(v311);
    swift_bridgeObjectRetain();
    v116 = sub_1D4922358();
    v117 = sub_1D492291C();
    if (os_log_type_enabled(v116, v117))
    {
      v319 = v87;
      v317 = v70;
      v118 = (uint8_t *)swift_slowAlloc();
      v119 = v115;
      v120 = swift_slowAlloc();
      *(_QWORD *)&v325 = v120;
      *(_DWORD *)v118 = 136315138;
      swift_bridgeObjectRetain();
      v323 = sub_1D47F0250(v310, v82, (uint64_t *)&v325);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D467C000, v116, v117, "TrialModelProvider missing VI_MODEL dict for model name %s", v118, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v120, -1, -1);
      MEMORY[0x1D82635B8](v118, -1, -1);

      swift_release();
      sub_1D4696F10(v85, v319);
      v108 = v119;
      v121 = v317;
LABEL_39:
      v287(v108, v121);
      (*(void (**)(char *, uint64_t))(v314 + 8))(v81, v312);
      goto LABEL_8;
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_37;
  }
  v109 = v323;
  v110 = *(_QWORD *)(v323 + 16);
  v318 = v323;
  if (v110
    && (v111 = sub_1D47CA4DC(0x6361466C65646F6DLL, 0xEF656D614E726F74), (v112 & 1) != 0)
    && (sub_1D4696FAC(*(_QWORD *)(v109 + 56) + 32 * v111, (uint64_t)&v325), swift_dynamicCast()))
  {
    v114 = v323;
    v113 = v324;
  }
  else
  {
    v114 = 0;
    v113 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v122 = sub_1D48C32B8();
  if (v122 == 63)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v123 = (uint64_t)v309;
    sub_1D470C76C((uint64_t)v309);
    swift_bridgeObjectRetain();
    v124 = sub_1D4922358();
    v125 = sub_1D492291C();
    if (os_log_type_enabled(v124, v125))
    {
      v126 = (uint8_t *)swift_slowAlloc();
      v127 = swift_slowAlloc();
      v317 = v70;
      v128 = v127;
      *(_QWORD *)&v325 = v127;
      *(_DWORD *)v126 = 136315138;
      swift_bridgeObjectRetain();
      v323 = sub_1D47F0250(v114, v113, (uint64_t *)&v325);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D467C000, v124, v125, "TrialModelProvider failed: model factor name %s not a supported Trial Factor Name", v126, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v128, -1, -1);
      MEMORY[0x1D82635B8](v126, -1, -1);

      swift_release();
      sub_1D4696F10(v85, v87);
      v107 = (void (*)(_QWORD, _QWORD, _QWORD))v309;
      goto LABEL_24;
    }
LABEL_52:
    swift_bridgeObjectRelease_n();

    swift_release();
    sub_1D4696F10(v85, v87);
    v108 = v123;
    goto LABEL_38;
  }
  v129 = v122;
  swift_bridgeObjectRelease();
  v130 = sub_1D48BEE58(v129, v315, 0, 0xE000000000000000);
  v132 = v131;
  v133 = v318;
  if (!*(_QWORD *)(v318 + 16)
    || (v134 = v130, v135 = sub_1D47CA4DC(1701605234, 0xE400000000000000), (v136 & 1) == 0)
    || (sub_1D4696FAC(*(_QWORD *)(v133 + 56) + 32 * v135, (uint64_t)&v325), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v115 = v308;
    sub_1D470C76C(v308);
    v116 = sub_1D4922358();
    v144 = sub_1D492291C();
    if (os_log_type_enabled(v116, v144))
    {
      v145 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v145 = 0;
      _os_log_impl(&dword_1D467C000, v116, v144, "TrialModelProvider: found model without role", v145, 2u);
      MEMORY[0x1D82635B8](v145, -1, -1);
    }
LABEL_37:

    swift_release();
    sub_1D4696F10(v85, v87);
    v108 = v115;
LABEL_38:
    v121 = v70;
    goto LABEL_39;
  }
  v282 = v134;
  v285 = v132;
  v138 = v323;
  v137 = v324;
  swift_bridgeObjectRetain();
  v139 = sub_1D47C1C6C();
  if (v139 == 7)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v123 = v301;
    sub_1D470C76C(v301);
    swift_bridgeObjectRetain();
    v124 = sub_1D4922358();
    v140 = sub_1D492291C();
    if (os_log_type_enabled(v124, v140))
    {
      v141 = (uint8_t *)swift_slowAlloc();
      v142 = swift_slowAlloc();
      v317 = v70;
      v143 = v142;
      *(_QWORD *)&v325 = v142;
      v281 = v85;
      v319 = v87;
      *(_DWORD *)v141 = 136315138;
      swift_bridgeObjectRetain();
      v323 = sub_1D47F0250(v138, v137, (uint64_t *)&v325);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D467C000, v124, v140, "TrialModelProvider: found model with unknown role %s", v141, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v143, -1, -1);
      MEMORY[0x1D82635B8](v141, -1, -1);

      swift_release();
      sub_1D4696F10(v281, v319);
      v108 = v301;
      v121 = v317;
      goto LABEL_39;
    }
    goto LABEL_52;
  }
  v278 = v139;
  swift_bridgeObjectRelease();
  v322 = sub_1D47C3D88(MEMORY[0x1E0DEE9D8]);
  v146 = v318;
  v147 = *(_QWORD *)(v318 + 16);
  v319 = v87;
  v281 = v85;
  if (!v147
    || (v148 = sub_1D47CA4DC(0x737465737361, 0xE600000000000000), (v149 & 1) == 0)
    || (sub_1D4696FAC(*(_QWORD *)(v146 + 56) + 32 * v148, (uint64_t)&v325),
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D0E0),
        v275 = v92 + 8,
        result = swift_dynamicCast(),
        (result & 1) == 0))
  {
LABEL_146:
    if (*(_QWORD *)(v146 + 16)
      && (v235 = sub_1D47CA4DC(0x61656869746C756DLL, 0xE900000000000064), (v236 & 1) != 0)
      && (sub_1D4696FAC(*(_QWORD *)(v146 + 56) + 32 * v235, (uint64_t)&v325),
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D0F0),
          (swift_dynamicCast() & 1) != 0))
    {
      v237 = v323;
      *(_QWORD *)&v325 = sub_1D47C3C70(MEMORY[0x1E0DEE9D8]);
      MEMORY[0x1E0C80A78](v325);
      *((_QWORD *)&v271 - 2) = &v325;
      sub_1D47E95C4(v237, (void (*)(uint64_t, uint64_t, uint64_t))sub_1D47E9960);
      swift_bridgeObjectRelease();
      v146 = v318;
      v238 = v325;
    }
    else
    {
      v238 = 0;
    }
    sub_1D4920EA0();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v146 + 16)
      && (v239 = sub_1D47CA4DC(7238261, 0xE300000000000000), (v240 & 1) != 0)
      && (sub_1D4696FAC(*(_QWORD *)(v146 + 56) + 32 * v239, (uint64_t)&v325), swift_dynamicCast()))
    {
      v241 = v323;
      v242 = v324;
    }
    else
    {
      v241 = 0;
      v242 = 0xE000000000000000;
    }
    v243 = v318;
    if (*(_QWORD *)(v318 + 16) && (v244 = sub_1D47CA4DC(0x44496C65646F6DLL, 0xE700000000000000), (v245 & 1) != 0))
    {
      sub_1D4696FAC(*(_QWORD *)(v243 + 56) + 32 * v244, (uint64_t)&v325);
    }
    else
    {
      v325 = 0u;
      v326 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v326 + 1))
    {
      if (swift_dynamicCast())
      {
        v246 = v323;
        v247 = v324;
LABEL_165:
        swift_beginAccess();
        v248 = v322;
        v249 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
        v250 = (uint64_t)v297;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v249 - 8) + 56))(v297, 1, 1, v249);
        v251 = (uint64_t)v296;
        *v296 = v310;
        *(_QWORD *)(v251 + 8) = v82;
        v252 = (int *)v298;
        (*(void (**)(uint64_t, char *, uint64_t))(v314 + 16))(v251 + *(int *)(v298 + 20), v304, v312);
        v253 = (uint64_t *)(v251 + v252[6]);
        *v253 = v241;
        v253[1] = v242;
        v254 = (uint64_t *)(v251 + v252[7]);
        *v254 = v246;
        v254[1] = v247;
        *(_BYTE *)(v251 + v252[8]) = v278;
        *(_QWORD *)(v251 + v252[9]) = v248;
        *(_QWORD *)(v251 + v252[10]) = v238;
        v255 = v295;
        sub_1D47E975C(v250, v295);
        v256 = (*(unsigned __int8 *)(v293 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v293 + 80);
        v257 = (v294 + v256 + 7) & 0xFFFFFFFFFFFFFFF8;
        v258 = swift_allocObject();
        sub_1D47E9874(v255, v258 + v256);
        *(_QWORD *)(v258 + v257) = v248;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E4B8);
        v259 = swift_allocObject();
        v260 = v259 + *(_QWORD *)(*(_QWORD *)v259 + 152);
        v261 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98ED18);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v261 - 8) + 56))(v260, 1, 1, v261);
        v262 = (uint64_t *)(v259 + *(_QWORD *)(*(_QWORD *)v259 + 160));
        *v262 = 0;
        v262[1] = 0;
        v263 = (_QWORD *)(v259 + *(_QWORD *)(*(_QWORD *)v259 + 168));
        *v263 = 0;
        v263[1] = 0;
        v264 = *(_QWORD *)(*(_QWORD *)v259 + 184);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB70);
        v265 = swift_allocObject();
        *(_DWORD *)(v265 + 16) = 0;
        *(_QWORD *)(v259 + v264) = v265;
        v266 = *v262;
        *v262 = (uint64_t)sub_1D47E98BC;
        v262[1] = v258;
        swift_bridgeObjectRetain_n();
        swift_retain();
        swift_retain();
        sub_1D46A56B4(v266);
        *(_QWORD *)(v259 + *(_QWORD *)(*(_QWORD *)v259 + 176)) = 2;
        swift_release();
        v267 = sub_1D4835CD8();
        swift_release();
        sub_1D46992EC(v250, &qword_1ED98DFC8);
        v268 = *(void (**)(char *, uint64_t))(v314 + 8);
        v269 = v312;
        v268(v304, v312);
        *(_QWORD *)(v251 + v252[11]) = v267;
        v270 = v299;
        sub_1D47E991C(v251, v299);
        swift_release();
        sub_1D4696F10(v281, v319);
        v268(v81, v269);
        v83 = v320;
        sub_1D47E991C(v270, v320 + OBJC_IVAR____TtC18VisualIntelligence18TrialModelProvider_info);
        swift_bridgeObjectRelease();
        return v83;
      }
    }
    else
    {
      sub_1D46992EC((uint64_t)&v325, &qword_1EFEABDD0);
    }
    v246 = 0;
    v247 = 0xE000000000000000;
    goto LABEL_165;
  }
  v151 = 0;
  v152 = *(_QWORD *)(v323 + 64);
  v276 = v323 + 64;
  v279 = v323;
  v153 = 1 << *(_BYTE *)(v323 + 32);
  v154 = -1;
  if (v153 < 64)
    v154 = ~(-1 << v153);
  v155 = v154 & v152;
  v277 = (unint64_t)(v153 + 63) >> 6;
  v274 = &v324;
  v273 = (char *)&v325 + 8;
  *(_QWORD *)&v150 = 136315650;
  v272 = v150;
  *(_QWORD *)&v150 = 136315906;
  v271 = v150;
  v317 = v70;
  while (1)
  {
    v156 = v305;
    if (v155)
    {
      v284 = (v155 - 1) & v155;
      v301 = v151;
      v157 = __clz(__rbit64(v155)) | (v151 << 6);
    }
    else
    {
      v158 = v151 + 1;
      if (__OFADD__(v151, 1))
        goto LABEL_170;
      if (v158 >= v277)
      {
LABEL_145:
        swift_release();
        v81 = v316;
        v82 = v289;
        v146 = v318;
        goto LABEL_146;
      }
      v159 = *(_QWORD *)(v276 + 8 * v158);
      v160 = v151 + 1;
      if (!v159)
      {
        v160 = v151 + 2;
        if (v151 + 2 >= v277)
          goto LABEL_145;
        v159 = *(_QWORD *)(v276 + 8 * v160);
        if (!v159)
        {
          v160 = v151 + 3;
          if (v151 + 3 >= v277)
            goto LABEL_145;
          v159 = *(_QWORD *)(v276 + 8 * v160);
          if (!v159)
          {
            v161 = v151 + 4;
            if (v151 + 4 >= v277)
              goto LABEL_145;
            v159 = *(_QWORD *)(v276 + 8 * v161);
            if (!v159)
            {
              v156 = v305;
              while (1)
              {
                v160 = v161 + 1;
                if (__OFADD__(v161, 1))
                  goto LABEL_171;
                if (v160 >= v277)
                  goto LABEL_145;
                v159 = *(_QWORD *)(v276 + 8 * v160);
                ++v161;
                if (v159)
                  goto LABEL_78;
              }
            }
            v160 = v151 + 4;
            v156 = v305;
          }
        }
      }
LABEL_78:
      v284 = (v159 - 1) & v159;
      v301 = v160;
      v157 = __clz(__rbit64(v159)) + (v160 << 6);
    }
    v162 = 16 * v157;
    v163 = (uint64_t *)(*(_QWORD *)(v279 + 48) + v162);
    v165 = *v163;
    v164 = v163[1];
    v166 = (uint64_t *)(*(_QWORD *)(v279 + 56) + v162);
    v168 = *v166;
    v167 = v166[1];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    LODWORD(v308) = sub_1D469C5A4();
    if (v308 == 11)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D4696F10(v281, v319);
LABEL_168:
      swift_release();
      (*(void (**)(char *, uint64_t))(v314 + 8))(v316, v312);
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    *(_QWORD *)&v325 = v168;
    *((_QWORD *)&v325 + 1) = v167;
    v323 = 46;
    v324 = 0xE100000000000000;
    sub_1D4696FE8();
    result = sub_1D4922A90();
    if (!*(_QWORD *)(result + 16))
      break;
    v170 = *(_QWORD *)(result + 32);
    v169 = *(_QWORD *)(result + 40);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
    v171 = sub_1D48C32B8();
    if (v171 == 63)
    {
      v230 = v70;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D470C76C(v288);
      swift_bridgeObjectRetain();
      v231 = sub_1D4922358();
      v232 = sub_1D492291C();
      if (os_log_type_enabled(v231, v232))
      {
        v233 = (uint8_t *)swift_slowAlloc();
        v234 = swift_slowAlloc();
        *(_QWORD *)&v325 = v234;
        *(_DWORD *)v233 = 136315138;
        swift_bridgeObjectRetain();
        v323 = sub_1D47F0250(v170, v169, (uint64_t *)&v325);
        sub_1D4922A78();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1D467C000, v231, v232, "TrialModelProvider failed: asset factor name %s not a supported Trial Factor Name", v233, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D82635B8](v234, -1, -1);
        MEMORY[0x1D82635B8](v233, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      swift_release();
      sub_1D4696F10(v281, v319);
      v287(v288, v230);
      goto LABEL_168;
    }
    LODWORD(v309) = v171;
    swift_bridgeObjectRelease();
    if (qword_1ED98F398 != -1)
      swift_once();
    if (byte_1ED98F388 != 1)
      goto LABEL_94;
    if ((sub_1D473117C() & 1) != 0)
    {
      v172 = &qword_1EFEAA908;
      if (qword_1EFEA9C20 != -1)
      {
        swift_once();
        v172 = &qword_1EFEAA908;
      }
    }
    else
    {
      v172 = (uint64_t *)&off_1ED98F3F0;
      if (qword_1ED98F3A8 != -1)
      {
        swift_once();
        v172 = (uint64_t *)&off_1ED98F3F0;
      }
    }
    v173 = *(void **)(*v172 + 32);
    swift_retain();
    v174 = (void *)sub_1D49225F8();
    LODWORD(v173) = objc_msgSend(v173, sel_BOOLForKey_, v174);
    swift_release();

    if ((_DWORD)v173)
    {
      if (qword_1EFEA9C78 != -1)
        swift_once();
      v175 = v70;
      v176 = qword_1EFEAAA30;
    }
    else
    {
LABEL_94:
      if (qword_1ED98F3D0 != -1)
        swift_once();
      v175 = v70;
      v176 = qword_1ED98F3B0;
    }
    v177 = __swift_project_value_buffer(v175, (uint64_t)v176);
    v313 = *(_OWORD **)(v286 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v313)(v307, v177, v70);
    v311 = v167;
    v178 = v156;
    v179 = v306;
    v283 = v168;
    if ((byte_1ED98F388 & 1) == 0)
      goto LABEL_105;
    if ((sub_1D473117C() & 1) != 0)
    {
      v180 = &qword_1EFEAA908;
      if (qword_1EFEA9C20 != -1)
      {
        swift_once();
        v180 = &qword_1EFEAA908;
      }
    }
    else
    {
      v180 = (uint64_t *)&off_1ED98F3F0;
      if (qword_1ED98F3A8 != -1)
      {
        swift_once();
        v180 = (uint64_t *)&off_1ED98F3F0;
      }
    }
    v181 = *(void **)(*v180 + 32);
    swift_retain();
    v182 = (void *)sub_1D49225F8();
    LODWORD(v181) = objc_msgSend(v181, sel_BOOLForKey_, v182);
    swift_release();

    if ((_DWORD)v181)
    {
      v183 = v178;
      v184 = (uint64_t)v307;
    }
    else
    {
LABEL_105:
      if (qword_1ED98F3D0 != -1)
        swift_once();
      v184 = __swift_project_value_buffer(v70, (uint64_t)qword_1ED98F3B0);
      v183 = v178;
    }
    ((void (*)(char *, uint64_t, uint64_t))v313)(v183, v184, v70);
    v287((unint64_t)v307, v70);
    swift_bridgeObjectRetain_n();
    v185 = v311;
    swift_bridgeObjectRetain_n();
    v186 = sub_1D4922358();
    v187 = sub_1D4922910();
    v188 = os_log_type_enabled(v186, v187);
    v280 = v165;
    if (v188)
    {
      v189 = swift_slowAlloc();
      v190 = swift_slowAlloc();
      *(_QWORD *)&v325 = v190;
      *(_DWORD *)v189 = v272;
      swift_bridgeObjectRetain();
      v323 = sub_1D47F0250(v165, v164, (uint64_t *)&v325);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v189 + 12) = 2080;
      swift_bridgeObjectRetain();
      v323 = sub_1D47F0250(v283, v185, (uint64_t *)&v325);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v189 + 22) = 2080;
      v191 = (int)v309;
      v192 = sub_1D48BE504(v309);
      v323 = sub_1D47F0250(v192, v193, (uint64_t *)&v325);
      v179 = v306;
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D467C000, v186, v187, "TrialModelProvider: retrieving path for model related asset %s %s %s", (uint8_t *)v189, 0x20u);
      swift_arrayDestroy();
      v194 = v190;
      v70 = v317;
      MEMORY[0x1D82635B8](v194, -1, -1);
      MEMORY[0x1D82635B8](v189, -1, -1);

      v287((unint64_t)v305, v70);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v287((unint64_t)v178, v70);
      v191 = (int)v309;
    }
    sub_1D48BEE58(v191, v315, 1852797802, 0xE400000000000000);
    v195 = (uint64_t)v303;
    sub_1D4920EA0();
    swift_bridgeObjectRelease();
    v196 = v314;
    v197 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v314 + 56);
    v198 = v312;
    v197(v195, 0, 1, v312);
    swift_beginAccess();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v196 + 48))(v195, 1, v198) == 1)
    {
      sub_1D46992EC(v195, &qword_1ED98CAF0);
      v199 = v291;
      sub_1D47B44C0(v308, v291);
      sub_1D46992EC(v199, &qword_1ED98CAF0);
    }
    else
    {
      v200 = *(void (**)(char *, uint64_t, uint64_t))(v196 + 32);
      v201 = (uint64_t)v290;
      v200(v290, v195, v198);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v323 = v322;
      v322 = 0x8000000000000000;
      sub_1D47AB1EC(v201, v308, isUniquelyReferenced_nonNull_native);
      v322 = v323;
      swift_bridgeObjectRelease();
    }
    v203 = v302;
    swift_endAccess();
    if (byte_1ED98F388 != 1)
      goto LABEL_123;
    if ((sub_1D473117C() & 1) != 0)
    {
      v204 = &qword_1EFEAA908;
      if (qword_1EFEA9C20 != -1)
      {
        swift_once();
        v204 = &qword_1EFEAA908;
      }
    }
    else
    {
      v204 = (uint64_t *)&off_1ED98F3F0;
      if (qword_1ED98F3A8 != -1)
      {
        swift_once();
        v204 = (uint64_t *)&off_1ED98F3F0;
      }
    }
    v205 = *(void **)(*v204 + 32);
    swift_retain();
    v206 = (void *)sub_1D49225F8();
    LODWORD(v205) = objc_msgSend(v205, sel_BOOLForKey_, v206);
    swift_release();

    if ((_DWORD)v205)
    {
      v207 = qword_1EFEAAA30;
      if (qword_1EFEA9C78 != -1)
      {
        swift_once();
        v207 = qword_1EFEAAA30;
      }
    }
    else
    {
LABEL_123:
      v207 = qword_1ED98F3B0;
      if (qword_1ED98F3D0 != -1)
      {
        swift_once();
        v207 = qword_1ED98F3B0;
      }
    }
    v208 = __swift_project_value_buffer(v70, (uint64_t)v207);
    ((void (*)(char *, uint64_t, uint64_t))v313)(v203, v208, v70);
    if ((byte_1ED98F388 & 1) == 0)
      goto LABEL_133;
    if ((sub_1D473117C() & 1) != 0)
    {
      v209 = &qword_1EFEAA908;
      if (qword_1EFEA9C20 != -1)
      {
        swift_once();
        v209 = &qword_1EFEAA908;
      }
    }
    else
    {
      v209 = (uint64_t *)&off_1ED98F3F0;
      if (qword_1ED98F3A8 != -1)
      {
        swift_once();
        v209 = (uint64_t *)&off_1ED98F3F0;
      }
    }
    v210 = *(void **)(*v209 + 32);
    swift_retain();
    v211 = (void *)sub_1D49225F8();
    LODWORD(v210) = objc_msgSend(v210, sel_BOOLForKey_, v211);
    swift_release();

    if ((_DWORD)v210)
    {
      v212 = v179;
      v213 = (uint64_t)v203;
    }
    else
    {
LABEL_133:
      if (qword_1ED98F3D0 != -1)
        swift_once();
      v213 = __swift_project_value_buffer(v70, (uint64_t)qword_1ED98F3B0);
      v212 = v179;
    }
    ((void (*)(char *, uint64_t, uint64_t))v313)(v212, v213, v70);
    v214 = v203;
    v215 = (uint64_t (*)(char *, uint64_t))v287;
    v287((unint64_t)v214, v70);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v216 = sub_1D4922358();
    v217 = sub_1D4922910();
    if (os_log_type_enabled(v216, v217))
    {
      v218 = v70;
      v219 = swift_slowAlloc();
      v220 = swift_slowAlloc();
      v323 = v220;
      *(_DWORD *)v219 = v271;
      swift_beginAccess();
      v221 = v322;
      if (*(_QWORD *)(v322 + 16) && (v222 = sub_1D47CA6B4(v308), (v223 & 1) != 0))
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v314 + 16))(v300, *(_QWORD *)(v221 + 56) + *(_QWORD *)(v314 + 72) * v222, v312);
        v224 = 0;
      }
      else
      {
        v224 = 1;
      }
      v197((uint64_t)v300, v224, 1, v312);
      swift_endAccess();
      v225 = sub_1D4922670();
      *(_QWORD *)&v325 = sub_1D47F0250(v225, v226, &v323);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      *(_WORD *)(v219 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v325 = sub_1D47F0250(v280, v164, &v323);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v219 + 22) = 2080;
      v227 = v311;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v325 = sub_1D47F0250(v283, v227, &v323);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v219 + 32) = 2080;
      v228 = sub_1D48BE504(v309);
      *(_QWORD *)&v325 = sub_1D47F0250(v228, v229, &v323);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D467C000, v216, v217, "TrialModelProvider: stored url '%s' for model related asset %s %s %s", (uint8_t *)v219, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v220, -1, -1);
      MEMORY[0x1D82635B8](v219, -1, -1);

      v70 = v218;
      result = ((uint64_t (*)(char *, uint64_t))v287)(v306, v218);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      result = v215(v179, v70);
    }
    v151 = v301;
    v155 = v284;
  }
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
  return result;
}

uint64_t sub_1D47E953C()
{
  uint64_t v0;

  sub_1D46C35F0(v0 + OBJC_IVAR____TtC18VisualIntelligence18TrialModelProvider_info);
  return swift_deallocClassInstance();
}

uint64_t sub_1D47E956C()
{
  return type metadata accessor for TrialModelProvider();
}

uint64_t type metadata accessor for TrialModelProvider()
{
  uint64_t result;

  result = qword_1ED98EE18;
  if (!qword_1ED98EE18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D47E95B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D46C2AA4(v1 + OBJC_IVAR____TtC18VisualIntelligence18TrialModelProvider_info, a1);
}

uint64_t sub_1D47E95C4(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v8)
      return swift_release();
    v18 = *(_QWORD *)(v4 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v8)
        return swift_release();
      v18 = *(_QWORD *)(v4 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v8)
          return swift_release();
        v18 = *(_QWORD *)(v4 + 8 * v10);
        if (!v18)
        {
          v10 = v17 + 3;
          if (v17 + 3 >= v8)
            return swift_release();
          v18 = *(_QWORD *)(v4 + 8 * v10);
          if (!v18)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v18 - 1) & v18;
    v12 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_5:
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v14 = *v13;
    v15 = v13[1];
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v14, v15, v16);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v19 = v17 + 4;
  if (v19 >= v8)
    return swift_release();
  v18 = *(_QWORD *)(v4 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v8)
      return swift_release();
    v18 = *(_QWORD *)(v4 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1D47E975C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DFC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D47E97A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DFC8) - 8);
  v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  v3 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = v2 + *(int *)(v3 + 24);
    v5 = sub_1D492201C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D47E9874(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DFC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D47E98BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DFC8) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1D469B2FC(v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)), a1);
}

uint64_t sub_1D47E991C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MLModelInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D47E9960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1D4893460(a1, a2, a3, *(uint64_t **)(v3 + 16));
}

double sub_1D47E9968@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  char v27;
  char v28;
  double result;
  unint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  int v40;
  double v41[4];

  v3 = sub_1D4922370();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v30 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D4920F18();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for MLModelInfo(0) + 36));
  if (*(_QWORD *)(v15 + 16) && (v16 = sub_1D47CA6B4(2), (v17 & 1) != 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, *(_QWORD *)(v15 + 56) + *(_QWORD *)(v12 + 72) * v16, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
      v31 = sub_1D4920F24();
      v22 = v21;
      sub_1D4920D38();
      swift_allocObject();
      sub_1D4920D2C();
      sub_1D47F3978();
      v30 = v22;
      sub_1D4920D20();
      sub_1D4696F10(v31, v30);
      swift_release();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      v23 = v33;
      v24 = v35;
      v25 = v36;
      v26 = v37;
      v27 = v38;
      v28 = v40;
      *(_OWORD *)a1 = v32;
      *(_QWORD *)(a1 + 16) = v23;
      *(_OWORD *)(a1 + 24) = v34;
      *(_QWORD *)(a1 + 40) = v24;
      *(_DWORD *)(a1 + 48) = v25;
      *(_QWORD *)(a1 + 56) = v26;
      *(_BYTE *)(a1 + 64) = v27 & 1;
      *(_OWORD *)(a1 + 72) = v39;
      *(_BYTE *)(a1 + 88) = v28 & 1;
      result = v41[0];
      *(_OWORD *)(a1 + 96) = *(_OWORD *)v41;
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  sub_1D46992EC((uint64_t)v10, &qword_1ED98CAF0);
  sub_1D470C76C((uint64_t)v7);
  v18 = sub_1D4922358();
  v19 = sub_1D492291C();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_1D467C000, v18, v19, "missing metadata", v20, 2u);
    MEMORY[0x1D82635B8](v20, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  result = 0.0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

double sub_1D47E9D58()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB30);
  v0 = swift_allocObject();
  *(_DWORD *)(v0 + 40) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 16) = xmmword_1D492ADC0;
  *(_QWORD *)(v0 + 32) = 0;
  off_1ED98D7A0 = (_UNKNOWN *)v0;
  return result;
}

unint64_t static VisualIntelligenceService.VIErrorDomain.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static VisualIntelligenceService.VIErrorUserFeedbackDomain.getter()
{
  return 0xD000000000000028;
}

unint64_t static VisualIntelligenceService.feedbackTestContainerId.getter()
{
  return 0xD00000000000002DLL;
}

unint64_t static VisualIntelligenceService.feedbackProductionContainerId.getter()
{
  return 0xD000000000000029;
}

uint64_t VisualIntelligenceService.Options.customizedEndpoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D469C5EC(v1, a1, &qword_1ED98CAF0);
}

uint64_t VisualIntelligenceService.Options.customizedEndpoint.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1D474A5D0(a1, v1, &qword_1ED98CAF0);
}

void (*VisualIntelligenceService.Options.customizedEndpoint.modify())(faiss::NormalizationTransform *__hidden this)
{
  return faiss::NormalizationTransform::~NormalizationTransform;
}

uint64_t VisualIntelligenceService.Options.networkTimeoutInterval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for VisualIntelligenceService.Options(0);
  return sub_1D469C5EC(v1 + *(int *)(v3 + 20), a1, (uint64_t *)&unk_1ED98D550);
}

uint64_t type metadata accessor for VisualIntelligenceService.Options(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98CBE8);
}

uint64_t VisualIntelligenceService.Options.networkTimeoutInterval.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for VisualIntelligenceService.Options(0);
  return sub_1D474A5D0(a1, v1 + *(int *)(v3 + 20), (uint64_t *)&unk_1ED98D550);
}

void (*VisualIntelligenceService.Options.networkTimeoutInterval.modify())(faiss::NormalizationTransform *__hidden this)
{
  type metadata accessor for VisualIntelligenceService.Options(0);
  return faiss::NormalizationTransform::~NormalizationTransform;
}

uint64_t VisualIntelligenceService.Options.debugParameters.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for VisualIntelligenceService.Options(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VisualIntelligenceService.Options.debugParameters.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for VisualIntelligenceService.Options(0) + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

void (*VisualIntelligenceService.Options.debugParameters.modify())(faiss::NormalizationTransform *__hidden this)
{
  type metadata accessor for VisualIntelligenceService.Options(0);
  return faiss::NormalizationTransform::~NormalizationTransform;
}

uint64_t VisualIntelligenceService.Options.mlEngineType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for VisualIntelligenceService.Options(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t VisualIntelligenceService.Options.mlEngineType.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for VisualIntelligenceService.Options(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = v2;
  return result;
}

void (*VisualIntelligenceService.Options.mlEngineType.modify())(faiss::NormalizationTransform *__hidden this)
{
  type metadata accessor for VisualIntelligenceService.Options(0);
  return faiss::NormalizationTransform::~NormalizationTransform;
}

uint64_t VisualIntelligenceService.Options.init(customizedEndpoint:networkTimeoutInterval:debugParameters:mlEngineType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  int v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v40 = a3;
  v41 = a4;
  v10 = sub_1D4922370();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a5;
  v15 = sub_1D4920F18();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a6, 1, 1, v15);
  v16 = (int *)type metadata accessor for VisualIntelligenceService.Options(0);
  v17 = a6 + v16[5];
  v18 = sub_1D4922460();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = (_QWORD *)(a6 + v16[6]);
  *v19 = 0;
  v19[1] = 0;
  sub_1D47F020C(a1, a6, &qword_1ED98CAF0);
  sub_1D47F020C(a2, v17, (uint64_t *)&unk_1ED98D550);
  swift_bridgeObjectRelease();
  v20 = v41;
  *v19 = v40;
  v19[1] = v20;
  if (v14 == 3)
    v21 = 2;
  else
    v21 = v14;
  *(_BYTE *)(a6 + v16[7]) = v21;
  sub_1D470C76C((uint64_t)v13);
  v22 = sub_1D4922358();
  v23 = sub_1D4922910();
  if (os_log_type_enabled(v22, v23))
  {
    v39 = v13;
    v40 = a1;
    v24 = v11;
    v41 = v10;
    v25 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    v43 = v26;
    *(_DWORD *)v25 = 136315394;
    v27 = 0xE600000000000000;
    v28 = 0xE800000000000000;
    v29 = 0x6F73736572707365;
    if (v14 != 1)
    {
      v29 = 13669;
      v28 = 0xE200000000000000;
    }
    if (v14)
      v27 = v28;
    else
      v29 = 0x6E6F69736976;
    if (v14 == 3)
      v30 = 7104878;
    else
      v30 = v29;
    if (v14 == 3)
      v31 = 0xE300000000000000;
    else
      v31 = v27;
    v42 = sub_1D47F0250(v30, v31, &v43);
    sub_1D4922A78();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    v32 = 0xE800000000000000;
    v33 = 0x6F73736572707365;
    if (v21 != 1)
    {
      v33 = 13669;
      v32 = 0xE200000000000000;
    }
    if (v21)
      v34 = v33;
    else
      v34 = 0x6E6F69736976;
    if (v21)
      v35 = v32;
    else
      v35 = 0xE600000000000000;
    v36 = v39;
    v42 = sub_1D47F0250(v34, v35, &v43);
    sub_1D4922A78();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D467C000, v22, v23, "mlEngineType = %s -> %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v26, -1, -1);
    MEMORY[0x1D82635B8](v25, -1, -1);

    sub_1D46992EC(a2, (uint64_t *)&unk_1ED98D550);
    sub_1D46992EC(v40, &qword_1ED98CAF0);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v36, v41);
  }
  else
  {

    sub_1D46992EC(a2, (uint64_t *)&unk_1ED98D550);
    sub_1D46992EC(a1, &qword_1ED98CAF0);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

void sub_1D47EA3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  os_unfair_lock_s *v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  os_unfair_lock_s *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  os_unfair_lock_s *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  void (*v85)(int64_t);
  uint64_t v86;
  uint64_t *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  _QWORD *v136;
  uint64_t v137;
  void *v138;
  _QWORD *v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  id v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  void (*v154)(char *, uint64_t);
  uint64_t *v155;
  _QWORD *v156;
  void (*v157)(int64_t);
  char *v158;
  id v159;
  uint64_t *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  _QWORD *v172;
  _QWORD v173[5];
  uint64_t v174[3];
  uint64_t v175;
  _UNKNOWN **v176;
  __int128 v177;
  uint64_t v178;
  uint64_t v179;
  _UNKNOWN **v180;

  v6 = v5;
  v168 = a5;
  v162 = a4;
  v167 = a1;
  v9 = sub_1D4921DF4();
  MEMORY[0x1E0C80A78](v9);
  v163 = (char *)&v151 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig();
  MEMORY[0x1E0C80A78](v11);
  v165 = (char *)&v151 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0);
  MEMORY[0x1E0C80A78](v13);
  v170 = (uint64_t)&v151 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  MEMORY[0x1E0C80A78](v15);
  v164 = (uint64_t)&v151 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig(0);
  v18 = MEMORY[0x1E0C80A78](v17);
  v161 = (uint64_t)&v151 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v171 = (uint64_t *)((char *)&v151 - v20);
  v159 = (id)sub_1D4922934();
  MEMORY[0x1E0C80A78](v159);
  v160 = (uint64_t *)((char *)&v151 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = sub_1D4922484();
  MEMORY[0x1E0C80A78](v22);
  v158 = (char *)&v151 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = (_QWORD *)sub_1D492294C();
  v155 = (uint64_t *)*(v156 - 1);
  MEMORY[0x1E0C80A78](v156);
  v157 = (void (*)(int64_t))((char *)&v151 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = sub_1D4922370();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v151 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v31 = (char *)&v151 - v30;
  if (qword_1ED98D460 != -1)
    swift_once();
  v32 = off_1ED98D7A0;
  v33 = (os_unfair_lock_s *)((char *)off_1ED98D7A0 + 40);
  os_unfair_lock_lock((os_unfair_lock_t)off_1ED98D7A0 + 10);
  v34 = v32[4];
  v35 = __OFADD__(v34, 1);
  v36 = v34 + 1;
  if (v35)
  {
    __break(1u);
    goto LABEL_12;
  }
  v32[4] = v36;
  v37 = v32[2];
  v35 = __OFADD__(v37, 1);
  v38 = v37 + 1;
  if (v35)
  {
LABEL_12:
    __break(1u);
    return;
  }
  v166 = a3;
  v32[2] = v38;
  if (v32[3] < v38)
    v32[3] = v38;
  v169 = a2;
  os_unfair_lock_unlock(v33);
  sub_1D470C76C((uint64_t)v31);
  v39 = v29;
  sub_1D470C928((uint64_t)v29);
  v40 = *(void (**)(char *, uint64_t))(v26 + 8);
  v40(v31, v25);
  v41 = sub_1D4922358();
  v42 = sub_1D4922910();
  if (os_log_type_enabled(v41, v42))
  {
    v154 = v40;
    v43 = (uint8_t *)swift_slowAlloc();
    v44 = swift_slowAlloc();
    v174[0] = v44;
    v153 = v39;
    *(_DWORD *)v43 = 136315138;
    v45 = off_1ED98D7A0;
    v152 = v25;
    v46 = v6;
    v47 = (os_unfair_lock_s *)((char *)off_1ED98D7A0 + 40);
    os_unfair_lock_lock((os_unfair_lock_t)off_1ED98D7A0 + 10);
    v48 = v45[4];
    v177 = *((_OWORD *)v45 + 1);
    v178 = v48;
    v49 = sub_1D4922688();
    v51 = v50;
    v52 = v47;
    v6 = v46;
    os_unfair_lock_unlock(v52);
    *(_QWORD *)&v177 = sub_1D47F0250(v49, v51, v174);
    sub_1D4922A78();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D467C000, v41, v42, "VisualIntelligenceService.init(): %s", v43, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v44, -1, -1);
    MEMORY[0x1D82635B8](v43, -1, -1);

    v154(v153, v152);
  }
  else
  {

    v40(v29, v25);
  }
  sub_1D4793D88();
  ((void (*)(void (*)(int64_t), _QWORD, _QWORD *))v155[13])(v157, *MEMORY[0x1E0DEF8D8], v156);
  sub_1D4922478();
  *(_QWORD *)&v177 = MEMORY[0x1E0DEE9D8];
  sub_1D4696EA4(&qword_1ED98F348, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98F330);
  sub_1D479D804((unint64_t *)&qword_1ED98F338, &qword_1ED98F330);
  sub_1D4922AFC();
  v53 = (void *)sub_1D4922970();
  v6[2] = v53;
  v159 = v53;
  v54 = v168;
  swift_retain();
  sub_1D48BEE58(7, 0, 1852797802, 0xE400000000000000);
  sub_1D4695360(v55, 0, &v177);
  swift_release();
  v6[3] = v177;
  v56 = sub_1D48BEE58(10, 0, 0x7478746270, 0xE500000000000000);
  sub_1D481F220(v56, v57, v171);
  swift_bridgeObjectRelease();
  v58 = sub_1D48BEE58(9, 0, 0x7478746270, 0xE500000000000000);
  v59 = v164;
  sub_1D470BCEC(v58, v60, v164);
  swift_bridgeObjectRelease();
  sub_1D469C630(v59, (uint64_t)v6 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchConfig, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  v61 = sub_1D48BEE58(8, 0, 0x7478746270, 0xE500000000000000);
  v62 = v170;
  sub_1D4828088(v61, v63, v170);
  swift_bridgeObjectRelease();
  v160 = (_QWORD *)((char *)v6 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_parseConfig);
  sub_1D469C630(v62, (uint64_t)v6 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_parseConfig, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  v64 = sub_1D48BEE58(11, 0, 0x7478746270, 0xE500000000000000);
  v65 = v165;
  sub_1D46DDEFC(v64, v66, v165);
  swift_bridgeObjectRelease();
  sub_1D469C630((uint64_t)v65, (uint64_t)v6 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_refineRegionConfig, (uint64_t (*)(_QWORD))type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig);
  v67 = type metadata accessor for VisualIntelligenceModelProviderService();
  swift_allocObject();
  v68 = swift_retain();
  v69 = sub_1D474FE98(v68);
  v6[8] = v67;
  v6[9] = &off_1E97FF310;
  v70 = v6;
  v172 = v6;
  v6[5] = v69;
  v71 = v6 + 5;
  v72 = (char *)*(int *)(type metadata accessor for VisualIntelligenceService.Options(0) + 28);
  v73 = v169;
  LODWORD(v154) = v72[v169];
  v158 = v72;
  v156 = v71;
  sub_1D46AAF28((uint64_t)v71, (uint64_t)&v177);
  v74 = v70[3];
  v75 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v177, v179);
  v155 = &v151;
  MEMORY[0x1E0C80A78](v75);
  v77 = (uint64_t *)((char *)&v151 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v78 + 16))(v77);
  v79 = *v77;
  v175 = v67;
  v176 = &off_1E97FF310;
  v174[0] = v79;
  type metadata accessor for ObjectDetector();
  v80 = (uint64_t *)swift_allocObject();
  v81 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v174, v67);
  v164 = *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64);
  MEMORY[0x1E0C80A78](v81);
  v165 = (char *)((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = (uint64_t *)((char *)&v151 - v165);
  v85 = *(void (**)(int64_t))(v84 + 16);
  v85((char *)&v151 - v165);
  v157 = v85;
  v86 = *v83;
  swift_retain();
  swift_bridgeObjectRetain();
  v87 = sub_1D47F0DA4((char)v154, v86, v54, v74, v80);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v174);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v177);
  v88 = v172;
  v172[4] = v87;
  LOBYTE(v72) = v72[v73];
  sub_1D46AAF28((uint64_t)v71, (uint64_t)&v177);
  v89 = v161;
  sub_1D469C304((uint64_t)v171, v161, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig);
  v90 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v177, v179);
  v155 = &v151;
  MEMORY[0x1E0C80A78](v90);
  v92 = (uint64_t *)((char *)&v151 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v93 + 16))(v92);
  v94 = *v92;
  v175 = v67;
  v176 = &off_1E97FF310;
  v174[0] = v94;
  type metadata accessor for DomainModelRegistry();
  v95 = swift_allocObject();
  v96 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v174, v67);
  MEMORY[0x1E0C80A78](v96);
  v97 = (uint64_t *)((char *)&v151 - v165);
  v85((char *)&v151 - v165);
  v98 = *v97;
  v173[3] = v67;
  v173[4] = &off_1E97FF310;
  v173[0] = v98;
  __swift_project_boxed_opaque_existential_1(v173, v67);
  *(_QWORD *)(v95 + 16) = sub_1D47EFA90((char)v72);
  sub_1D469C630(v89, v95 + OBJC_IVAR____TtC18VisualIntelligence19DomainModelRegistry_domainModelConfig, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v173);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v174);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v177);
  v88[10] = v95;
  type metadata accessor for MemoryPressureObserver();
  swift_allocObject();
  *(_QWORD *)((char *)v88 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_memoryObserver) = sub_1D48362D8();
  v99 = OBJC_IVAR____TtC18VisualIntelligence14NetworkService_searchClient;
  v100 = v167;
  v101 = v159;
  sub_1D4921E18();
  v102 = sub_1D4921E00();
  swift_release();
  v103 = v100;
  sub_1D4921E18();
  v104 = (uint64_t)v163;
  sub_1D4921E0C();
  swift_release();
  type metadata accessor for PegasusProxyEnableListener();
  swift_allocObject();
  v105 = sub_1D47E4388(v101, v102, v104, 5.0);
  v106 = sub_1D48BEE58(6, 0, 0x7473696C70, 0xE500000000000000);
  v108 = v107;
  v109 = *(_QWORD *)(v103 + v99);
  v110 = sub_1D4921EA8();
  v179 = v110;
  v180 = &off_1E97FE490;
  *(_QWORD *)&v177 = v109;
  type metadata accessor for AvailableDomainManager();
  v111 = (uint64_t *)swift_allocObject();
  v112 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v177, v110);
  MEMORY[0x1E0C80A78](v112);
  v114 = (uint64_t *)((char *)&v151 - ((v113 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v115 + 16))(v114);
  v116 = *v114;
  swift_retain_n();
  v117 = v101;
  v159 = v117;
  v161 = v105;
  swift_retain();
  v163 = (char *)sub_1D47F087C(v106, v108, (uint64_t)v117, v105, v116, v111);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v177);
  swift_release();
  sub_1D46AAF28((uint64_t)v156, (uint64_t)&v177);
  v118 = v172;
  v119 = v172[4];
  LODWORD(v158) = v158[v169];
  sub_1D469C304((uint64_t)v160, v170, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  v120 = v118[3];
  v156 = (_QWORD *)v118[2];
  v121 = (char *)v118[10];
  v122 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v177, v179);
  v160 = &v151;
  MEMORY[0x1E0C80A78](v122);
  v124 = (uint64_t *)((char *)&v151 - ((v123 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v125 + 16))(v124);
  v126 = *v124;
  v175 = v67;
  v176 = &off_1E97FF310;
  v174[0] = v126;
  type metadata accessor for ParseFlow(0);
  v127 = (_QWORD *)swift_allocObject();
  v128 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v174, v67);
  MEMORY[0x1E0C80A78](v128);
  v129 = (uint64_t *)((char *)&v151 - v165);
  v157((char *)&v151 - v165);
  v130 = *v129;
  v131 = v168;
  swift_retain();
  swift_retain();
  v132 = v166;
  swift_retain();
  v133 = (uint64_t)v163;
  swift_retain();
  v134 = v156;
  swift_bridgeObjectRetain();
  swift_retain();
  v135 = sub_1D47F1434(v130, v119, v132, v133, (int)v158, v170, v134, v131, v120, v121, v127);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v174);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v177);
  v136 = v172;
  v172[11] = v135;
  v137 = v136[10];
  v138 = (void *)v136[2];
  type metadata accessor for SearchFlow();
  v139 = (_QWORD *)swift_allocObject();
  type metadata accessor for SignalsExtractor();
  v140 = swift_allocObject();
  *(_QWORD *)(v140 + 16) = v137;
  *(_QWORD *)(v140 + 24) = v131;
  v139[2] = v140;
  type metadata accessor for ServerSearchProcessor();
  v141 = (_QWORD *)swift_allocObject();
  v141[2] = v167;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E4B0);
  v142 = swift_allocObject();
  *(_QWORD *)(v142 + 24) = 0;
  *(_QWORD *)(v142 + 32) = 0;
  *(_BYTE *)(v142 + 40) = -1;
  *(_QWORD *)(v142 + 64) = 0;
  *(_QWORD *)(v142 + 72) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB70);
  v143 = swift_allocObject();
  *(_DWORD *)(v143 + 16) = 0;
  *(_QWORD *)(v142 + 88) = v143;
  *(_QWORD *)(v142 + 48) = sub_1D47F389C;
  *(_QWORD *)(v142 + 56) = v131;
  swift_retain_n();
  swift_retain_n();
  v144 = v138;
  swift_retain();
  swift_retain();
  sub_1D46A56B4(0);
  *(_QWORD *)(v142 + 80) = 0;
  swift_release();
  v145 = sub_1D4835CD8();
  swift_release();
  v141[3] = v145;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D6B0);
  v146 = swift_allocObject();
  *(_QWORD *)(v146 + 24) = 0;
  *(_QWORD *)(v146 + 32) = 0;
  *(_BYTE *)(v146 + 40) = -1;
  *(_QWORD *)(v146 + 64) = 0;
  *(_QWORD *)(v146 + 72) = 0;
  v147 = swift_allocObject();
  *(_DWORD *)(v147 + 16) = 0;
  *(_QWORD *)(v146 + 88) = v147;
  *(_QWORD *)(v146 + 48) = sub_1D487AE6C;
  *(_QWORD *)(v146 + 56) = 0;
  swift_retain();
  sub_1D46A56B4(0);
  *(_QWORD *)(v146 + 80) = 0;
  swift_release();
  v148 = sub_1D4835CD8();
  swift_release();
  swift_release();
  v141[4] = v148;
  swift_release();
  v139[3] = v141;
  type metadata accessor for ServerResultsProcessor();
  v149 = swift_allocObject();
  v150 = v162;
  v139[4] = v149;
  v139[5] = v150;
  v139[6] = v163;
  v139[7] = v144;

  swift_release();
  swift_release();
  sub_1D4697DE0(v169, type metadata accessor for VisualIntelligenceService.Options);
  sub_1D4697DE0((uint64_t)v171, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig);
  *(_QWORD *)((char *)v172 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchFlow) = v139;
}

void VisualIntelligenceService.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  _QWORD *v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  __int128 v30;
  uint64_t v31;

  v1 = v0;
  v2 = sub_1D4922370();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v26 - v7;
  sub_1D4836A10(32);
  if (qword_1ED98D460 != -1)
    swift_once();
  v9 = off_1ED98D7A0;
  v10 = (os_unfair_lock_s *)((char *)off_1ED98D7A0 + 40);
  os_unfair_lock_lock((os_unfair_lock_t)off_1ED98D7A0 + 10);
  v11 = v9[2];
  v12 = __OFSUB__(v11, 1);
  v13 = v11 - 1;
  if (v12)
  {
    __break(1u);
  }
  else
  {
    v9[2] = v13;
    if (v9[3] < v13)
      v9[3] = v13;
    os_unfair_lock_unlock(v10);
    sub_1D470C76C((uint64_t)v8);
    sub_1D470C928((uint64_t)v6);
    v14 = *(void (**)(char *, uint64_t))(v3 + 8);
    v14(v8, v2);
    v15 = sub_1D4922358();
    v16 = sub_1D4922910();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v28 = v14;
      v18 = (uint8_t *)v17;
      v26 = swift_slowAlloc();
      v29 = v26;
      v27 = v2;
      *(_DWORD *)v18 = 136315138;
      v19 = off_1ED98D7A0;
      v20 = (os_unfair_lock_s *)((char *)off_1ED98D7A0 + 40);
      os_unfair_lock_lock((os_unfair_lock_t)off_1ED98D7A0 + 10);
      v21 = v19[4];
      v30 = *((_OWORD *)v19 + 1);
      v31 = v21;
      v22 = sub_1D4922688();
      v24 = v23;
      os_unfair_lock_unlock(v20);
      *(_QWORD *)&v30 = sub_1D47F0250(v22, v24, &v29);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D467C000, v15, v16, "VisualIntelligenceService.deinit(): %s)", v18, 0xCu);
      v25 = v26;
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v25, -1, -1);
      MEMORY[0x1D82635B8](v18, -1, -1);

      v28(v6, v27);
    }
    else
    {

      v14(v6, v2);
    }

    swift_bridgeObjectRelease();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v1 + 40);
    swift_release();
    swift_release();
    sub_1D4697DE0(v1 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_parseConfig, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
    swift_release();
    sub_1D4697DE0(v1 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchConfig, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
    sub_1D4697DE0(v1 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_refineRegionConfig, (uint64_t (*)(_QWORD))type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig);
    swift_release();
  }
}

uint64_t VisualIntelligenceService.__deallocating_deinit()
{
  VisualIntelligenceService.deinit();
  return swift_deallocClassInstance();
}

CGSize_optional __swiftcall VisualIntelligenceService.targetImageSize(for:)(CGSize a1)
{
  char v1;
  double v2;
  double v3;
  CGSize_optional result;

  v1 = sub_1D48C9198(a1.width, a1.height);
  result.value.height = v3;
  result.value.width = v2;
  result.is_nil = v1;
  return result;
}

id VisualIntelligenceService.parse(query:cachedResults:completion:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  _QWORD v33[2];
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  __int128 v41;
  CGFloat width;
  CGFloat height;
  uint64_t v44[5];
  CGRect v45;
  CGRect v46;
  CGRect v47;

  v8 = sub_1D4922370();
  v39 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = a1;
  v11 = objc_msgSend(a1, sel_domainsOfInterest);
  v12 = sub_1D49228D4();

  v13 = sub_1D4854F50(v12);
  swift_bridgeObjectRelease();
  sub_1D470C76C((uint64_t)v10);
  swift_bridgeObjectRetain_n();
  v14 = sub_1D4922358();
  v15 = sub_1D4922910();
  v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    v17 = swift_slowAlloc();
    v37 = a4;
    v18 = v17;
    v36 = swift_slowAlloc();
    v44[0] = v36;
    *(_DWORD *)v18 = 134218242;
    *(_QWORD *)&v41 = *(_QWORD *)(v13 + 16);
    v38 = a3;
    sub_1D4922A78();
    *(_WORD *)(v18 + 12) = 2080;
    v33[1] = v18 + 14;
    sub_1D48559E8(v13);
    v35 = v8;
    v19 = MEMORY[0x1D8261B9C]();
    v34 = v16;
    v20 = a2;
    v21 = v19;
    v23 = v22;
    swift_bridgeObjectRelease();
    v24 = v21;
    a2 = v20;
    *(_QWORD *)&v41 = sub_1D47F0250(v24, v23, v44);
    a3 = v38;
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D467C000, v14, (os_log_type_t)v34, "Parse input domain count %ld, domains: %s", (uint8_t *)v18, 0x16u);
    v25 = v36;
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v25, -1, -1);
    v26 = v18;
    a4 = v37;
    MEMORY[0x1D82635B8](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v35);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v8);
  }
  v27 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CancelSession()), sel_init);
  v28 = v40;
  v29 = objc_msgSend(v40, sel_image);
  swift_getObjectType();
  sub_1D47BEC7C(v44);
  swift_unknownObjectRelease();
  objc_msgSend(v28, sel_normalizedRegionOfInterest);
  v47.origin.x = 0.0;
  v47.origin.y = 0.0;
  v47.size.width = 1.0;
  v47.size.height = 1.0;
  v46 = CGRectIntersection(v45, v47);
  *(CGFloat *)&v41 = v46.origin.x;
  *((_QWORD *)&v41 + 1) = *(_QWORD *)&v46.origin.y;
  width = v46.size.width;
  height = v46.size.height;
  v30 = objc_msgSend(v28, sel_annotation);
  v31 = objc_msgSend(v28, sel_queryContext);
  sub_1D47D4728((uint64_t)v44, &v41, v13, v30, v31, v27, a2, a3, a4);
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  return v27;
}

id VisualIntelligenceService.parseAndSearch(image:regionOfInterest:boundingBoxes:domains:annotation:queryContext:completion:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  char *v42;
  uint64_t v43;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t aBlock[7];

  v52 = a8;
  v50 = a6;
  v53 = a5;
  v55 = a3;
  v56 = a1;
  v51 = sub_1D492246C();
  v54 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D4922484();
  v59 = *(_QWORD *)(v13 - 8);
  v60 = v13;
  MEMORY[0x1E0C80A78](v13);
  v58 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D4922370();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a2;
  v20 = a2[1];
  v21 = a2[2];
  v22 = a2[3];
  sub_1D470C76C((uint64_t)v18);
  swift_bridgeObjectRetain_n();
  v23 = sub_1D4922358();
  v24 = sub_1D4922910();
  v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    v26 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v47 = v27;
    *(_DWORD *)v26 = 134218242;
    v61 = *(_QWORD *)(a4 + 16);
    aBlock[0] = v27;
    v48 = v16;
    sub_1D4922A78();
    *(_WORD *)(v26 + 12) = 2080;
    v45 = v26 + 14;
    sub_1D48559E8(a4);
    v46 = v25;
    v28 = MEMORY[0x1D8261B9C]();
    v49 = v12;
    v30 = v29;
    swift_bridgeObjectRelease();
    v61 = sub_1D47F0250(v28, v30, aBlock);
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    v12 = v49;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D467C000, v23, (os_log_type_t)v46, "Parse and search domain count %ld, domains: %s", (uint8_t *)v26, 0x16u);
    v31 = v47;
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v31, -1, -1);
    MEMORY[0x1D82635B8](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v48 + 8))(v18, v15);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  v32 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CancelSession()), sel_init);
  v33 = v57;
  v49 = *(char **)(v57 + 16);
  v34 = (_QWORD *)swift_allocObject();
  v35 = v56;
  v34[2] = v55;
  v34[3] = v33;
  v34[4] = v35;
  v34[5] = v19;
  v34[6] = v20;
  v34[7] = v21;
  v34[8] = v22;
  v36 = v53;
  v34[9] = a4;
  v34[10] = v36;
  v37 = v50;
  v34[11] = v50;
  v34[12] = v32;
  v34[13] = a7;
  v34[14] = v52;
  aBlock[4] = (uint64_t)sub_1D47F22FC;
  aBlock[5] = (uint64_t)v34;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1D47E5A84;
  aBlock[3] = (uint64_t)&block_descriptor_7;
  v38 = _Block_copy(aBlock);
  v39 = v37;
  v40 = v32;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  v41 = v36;
  v42 = v58;
  sub_1D4922478();
  v61 = MEMORY[0x1E0DEE9D8];
  sub_1D4696EA4(&qword_1ED98D0C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D1D0);
  sub_1D479D804((unint64_t *)&qword_1ED98D1E0, (uint64_t *)&unk_1ED98D1D0);
  v43 = v51;
  sub_1D4922AFC();
  MEMORY[0x1D8261CD4](0, v42, v12, v38);
  _Block_release(v38);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v12, v43);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v42, v60);
  swift_release();
  return v40;
}

uint64_t sub_1D47EC058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, void (*a8)(__int128 *), double a9, double a10, double a11, double a12, uint64_t a13)
{
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t i;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  int v49;
  int v50;
  uint64_t *v51;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  __int128 v63;
  __int128 v64;
  id v65;
  uint64_t v66;
  void (*v67)(__int128 *);
  id v68;
  _QWORD *v69;
  void *v70;
  id v71;
  void (*v72)(__int128 *);
  id v73;
  id v74;
  id v75;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[2];
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  void (*v89)(__int128 *);
  void *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  double v98;
  double v99;
  uint64_t v100[5];
  int v101;
  __int16 v102;

  v89 = a8;
  v91 = a6;
  v90 = (void *)a5;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98ED00);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v81 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for ParseResult(0);
  MEMORY[0x1E0C80A78](v87);
  v88 = (char *)v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v94 = *(_QWORD *)(v26 - 8);
  v95 = v26;
  v27 = MEMORY[0x1E0C80A78](v26);
  v29 = (char *)v81 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v31 = (char *)v81 - v30;
  v92 = a1;
  v32 = *(_QWORD *)(a1 + 16);
  if (!v32)
  {
    swift_getObjectType();
    sub_1D47BEC7C(v100);
    *(double *)&v97 = a9;
    *((double *)&v97 + 1) = a10;
    v98 = a11;
    v99 = a12;
    v69 = (_QWORD *)swift_allocObject();
    v69[2] = a2;
    v69[3] = a3;
    v70 = v90;
    v71 = v91;
    v69[4] = v90;
    v69[5] = v71;
    v72 = v89;
    v69[6] = a7;
    v69[7] = v72;
    v69[8] = a13;
    v73 = v71;
    v74 = a7;
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    v75 = v70;
    sub_1D47D4728((uint64_t)v100, &v97, a4, v70, v71, v74, 0, (uint64_t)sub_1D47F37EC, (uint64_t)v69);
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v100);
  }
  v81[1] = v22;
  v82 = v24;
  v83 = a13;
  v84 = (char *)a7;
  v85 = a3;
  v86 = a2;
  v33 = *(_QWORD *)(a4 + 56);
  v93 = a4 + 56;
  v34 = 1 << *(_BYTE *)(a4 + 32);
  v35 = -1;
  if (v34 < 64)
    v35 = ~(-1 << v34);
  v36 = v35 & v33;
  *(_QWORD *)&v96 = (unint64_t)(v34 + 63) >> 6;
  swift_bridgeObjectRetain();
  v37 = 0;
  v38 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v36)
    goto LABEL_6;
LABEL_5:
  v39 = __clz(__rbit64(v36));
  v36 &= v36 - 1;
  for (i = v39 | (v37 << 6); ; i = __clz(__rbit64(v42)) + (v37 << 6))
  {
    v44 = a4;
    v45 = *(_BYTE *)(*(_QWORD *)(a4 + 48) + i);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v38 = sub_1D48A84F8(0, v38[2] + 1, 1, v38);
    v47 = v38[2];
    v46 = v38[3];
    if (v47 >= v46 >> 1)
      v38 = sub_1D48A84F8((_QWORD *)(v46 > 1), v47 + 1, 1, v38);
    v38[2] = v47 + 1;
    v48 = &v38[20 * v47];
    *((_BYTE *)v48 + 32) = v45;
    v49 = *(_DWORD *)((char *)v100 + 3);
    *(_DWORD *)((char *)v48 + 33) = v100[0];
    *((_DWORD *)v48 + 9) = v49;
    *(_OWORD *)(v48 + 5) = 0u;
    *(_OWORD *)(v48 + 7) = 0u;
    *((_BYTE *)v48 + 72) = 0;
    v50 = *(_DWORD *)((char *)&v97 + 3);
    *(_DWORD *)((char *)v48 + 73) = v97;
    *((_DWORD *)v48 + 19) = v50;
    *((_OWORD *)v48 + 5) = 0u;
    *((_OWORD *)v48 + 6) = 0u;
    *((_OWORD *)v48 + 7) = 0u;
    *((_OWORD *)v48 + 8) = 0u;
    *((_DWORD *)v48 + 36) = 1065353216;
    *((_BYTE *)v48 + 156) = 0;
    *(_QWORD *)((char *)v48 + 148) = 0;
    *((_BYTE *)v48 + 157) = 1;
    *(_DWORD *)((char *)v48 + 158) = 0;
    LOWORD(v50) = v102;
    *(_DWORD *)((char *)v48 + 162) = v101;
    *((_WORD *)v48 + 83) = v50;
    v48[21] = 0;
    v48[22] = 0;
    *((_DWORD *)v48 + 46) = 0;
    a4 = v44;
    if (v36)
      goto LABEL_5;
LABEL_6:
    v41 = v37 + 1;
    if (__OFADD__(v37, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v41 >= (uint64_t)v96)
      break;
    v42 = *(_QWORD *)(v93 + 8 * v41);
    ++v37;
    if (v42)
      goto LABEL_19;
    v37 = v41 + 1;
    if (v41 + 1 >= (uint64_t)v96)
      break;
    v42 = *(_QWORD *)(v93 + 8 * v37);
    if (v42)
      goto LABEL_19;
    v37 = v41 + 2;
    if (v41 + 2 >= (uint64_t)v96)
      break;
    v42 = *(_QWORD *)(v93 + 8 * v37);
    if (v42)
      goto LABEL_19;
    v43 = v41 + 3;
    if (v43 >= (uint64_t)v96)
      break;
    v42 = *(_QWORD *)(v93 + 8 * v43);
    if (!v42)
    {
      while (1)
      {
        v37 = v43 + 1;
        if (__OFADD__(v43, 1))
          break;
        if (v37 >= (uint64_t)v96)
          goto LABEL_26;
        v42 = *(_QWORD *)(v93 + 8 * v37);
        ++v43;
        if (v42)
          goto LABEL_19;
      }
LABEL_39:
      __break(1u);
LABEL_40:
      swift_once();
      goto LABEL_33;
    }
    v37 = v43;
LABEL_19:
    v36 = (v42 - 1) & v42;
  }
LABEL_26:
  swift_release();
  v51 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
  __asm { FMOV            V8.2S, #1.0 }
  v36 = MEMORY[0x1E0DEE9D8];
  do
  {
    v96 = *(_OWORD *)(v51 - 3);
    v57 = *(v51 - 1);
    v58 = *v51;
    v59 = v95;
    swift_bridgeObjectRetain();
    sub_1D4920FCC();
    *(_OWORD *)v31 = v96;
    *((_QWORD *)v31 + 2) = v57;
    *((_QWORD *)v31 + 3) = v58;
    v60 = MEMORY[0x1E0DEE9D8];
    *((_QWORD *)v31 + 4) = MEMORY[0x1E0DEE9D8];
    *((_QWORD *)v31 + 5) = v38;
    *((_QWORD *)v31 + 6) = v60;
    *((_QWORD *)v31 + 7) = v60;
    *((_QWORD *)v31 + 8) = _D8;
    *((_QWORD *)v31 + 10) = 0;
    *((_QWORD *)v31 + 11) = 0;
    *((_QWORD *)v31 + 9) = 0;
    v31[96] = 0;
    *((_QWORD *)v31 + 13) = v60;
    v31[*(int *)(v59 + 60)] = 0;
    sub_1D469C304((uint64_t)v31, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v36 = sub_1D48A8614(0, *(_QWORD *)(v36 + 16) + 1, 1, v36);
    v62 = *(_QWORD *)(v36 + 16);
    v61 = *(_QWORD *)(v36 + 24);
    if (v62 >= v61 >> 1)
      v36 = sub_1D48A8614(v61 > 1, v62 + 1, 1, v36);
    *(_QWORD *)(v36 + 16) = v62 + 1;
    sub_1D469C630((uint64_t)v29, v36+ ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80))+ *(_QWORD *)(v94 + 72) * v62, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1D4697DE0((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v51 += 4;
    --v32;
  }
  while (v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1ED98CC88 != -1)
    goto LABEL_40;
LABEL_33:
  v63 = xmmword_1ED98CC60;
  v64 = xmmword_1ED98CC70;
  v65 = v91;
  v66 = v83;
  v67 = v89;
  if (v91)
    v68 = objc_msgSend(v91, sel_queryID);
  else
    v68 = 0;
  LOBYTE(v97) = 1;
  v77 = (uint64_t)v88;
  v78 = &v88[*(int *)(v87 + 20)];
  v79 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v78, 1, 1, v79);
  *(_QWORD *)v77 = v36;
  *(_QWORD *)(v77 + 8) = 1;
  *(_OWORD *)(v77 + 16) = 0u;
  *(_OWORD *)(v77 + 32) = 0u;
  *(_OWORD *)(v77 + 48) = 0u;
  *(_QWORD *)(v77 + 64) = 0;
  *(_OWORD *)(v77 + 72) = v63;
  *(_OWORD *)(v77 + 88) = v64;
  *(_QWORD *)(v77 + 104) = 0;
  *(_QWORD *)(v77 + 112) = 0;
  *(_BYTE *)(v77 + 120) = v97;
  *(_DWORD *)(v77 + 121) = v100[0];
  *(_DWORD *)(v77 + 124) = *(_DWORD *)((char *)v100 + 3);
  *(_QWORD *)(v77 + 128) = 0;
  *(_QWORD *)(v77 + 136) = 0xE000000000000000;
  *(_QWORD *)(v77 + 144) = v68;
  *(_QWORD *)(v77 + 152) = 0;
  *(_QWORD *)(v77 + 160) = 0;
  *(_QWORD *)(v77 + 168) = 0;
  *(_QWORD *)(v77 + 176) = MEMORY[0x1E0DEE9D8];
  v80 = (uint64_t)v82;
  sub_1D469C304(v77, (uint64_t)v82, type metadata accessor for ParseResult);
  swift_storeEnumTagMultiPayload();
  sub_1D47EC7BC(v85, (uint64_t)v90, v65, v84, v80, v67, v66);
  sub_1D46992EC(v80, &qword_1ED98ED00);
  return sub_1D4697DE0(v77, type metadata accessor for ParseResult);
}

void sub_1D47EC7BC(uint64_t a1, uint64_t a2, void *a3, char *a4, uint64_t a5, void (*a6)(__int128 *), uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  id v25;
  os_unfair_lock_s *v26;
  int v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  void *v31;
  _BYTE *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  void *v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(__int128 *);
  char v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void (*v74)(__int128 *);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  __int128 v107[11];
  uint64_t v108;
  uint64_t v109[3];
  uint64_t v110;
  uint64_t v111;
  _OWORD v112[11];
  uint64_t v113;
  _OWORD v114[5];

  v75 = a1;
  v82 = a3;
  v80 = a2;
  v11 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v81 = (uint64_t)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v77 = (char *)&v71 - v14;
  v15 = sub_1D4922370();
  v78 = *(_QWORD *)(v15 - 8);
  v79 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ParseResult(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98ED00);
  MEMORY[0x1E0C80A78](v21);
  v23 = (uint64_t *)((char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D469C5EC(a5, (uint64_t)v23, &qword_1ED98ED00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_QWORD *)&v95 = *v23;
    v24 = (void *)v95;
    sub_1D47F35E8((uint64_t)&v95);
    sub_1D46B3464((uint64_t)&v95, (uint64_t)&v83, &qword_1EFEAB978);
    v25 = v24;
    a6(&v83);

    return;
  }
  v74 = a6;
  sub_1D469C630((uint64_t)v23, (uint64_t)v20, type metadata accessor for ParseResult);
  v26 = (os_unfair_lock_s *)(*(_QWORD *)&a4[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock] + 16);
  os_unfair_lock_lock(v26);
  v27 = a4[OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled];
  os_unfair_lock_unlock(v26);
  if (v27 != 1)
  {
    v33 = *((_OWORD *)v20 + 9);
    v34 = *((_OWORD *)v20 + 7);
    v103 = *((_OWORD *)v20 + 8);
    v104 = v33;
    v35 = *((_OWORD *)v20 + 9);
    v105 = *((_OWORD *)v20 + 10);
    v36 = *((_OWORD *)v20 + 5);
    v37 = *((_OWORD *)v20 + 3);
    v99 = *((_OWORD *)v20 + 4);
    v100 = v36;
    v38 = *((_OWORD *)v20 + 5);
    v39 = *((_OWORD *)v20 + 7);
    v101 = *((_OWORD *)v20 + 6);
    v102 = v39;
    v40 = *((_OWORD *)v20 + 1);
    v95 = *(_OWORD *)v20;
    v96 = v40;
    v41 = *((_OWORD *)v20 + 3);
    v43 = *(_OWORD *)v20;
    v42 = *((_OWORD *)v20 + 1);
    v97 = *((_OWORD *)v20 + 2);
    v98 = v41;
    v91 = v103;
    v92 = v35;
    v93 = *((_OWORD *)v20 + 10);
    v87 = v99;
    v88 = v38;
    v89 = v101;
    v90 = v34;
    v83 = v43;
    v84 = v42;
    v106 = *((_QWORD *)v20 + 22);
    v94 = *((_QWORD *)v20 + 22);
    v85 = v97;
    v86 = v37;
    sub_1D46B2E18((uint64_t)&v95);
    v44 = VisualUnderstanding.imageRegions.getter();
    v72 = a7;
    v73 = a4;
    v45 = v44;
    if (v80)
    {
      sub_1D47BECD0(&v83);
      v46 = v83;
      v47 = v84;
      v48 = v85;
      v49 = v86;
    }
    else
    {
      v46 = xmmword_1D49324E0;
      v47 = 0uLL;
      v48 = 0uLL;
      v49 = 0uLL;
    }
    v51 = v76;
    v50 = (uint64_t)v77;
    v114[0] = v46;
    v114[1] = v47;
    v114[2] = v48;
    v114[3] = v49;
    sub_1D4920D5C();
    swift_allocObject();
    sub_1D4920D50();
    v91 = v103;
    v92 = v104;
    v93 = v105;
    v94 = v106;
    v87 = v99;
    v88 = v100;
    v89 = v101;
    v90 = v102;
    v83 = v95;
    v84 = v96;
    v85 = v97;
    v86 = v98;
    sub_1D46F8B58();
    v52 = sub_1D4920D44();
    v54 = v53;
    swift_release();
    v55 = v82;
    sub_1D46B34D0((uint64_t)&v95);
    sub_1D482A3A0(v45, (uint64_t *)v114, v52, v54, (uint64_t)v112);
    sub_1D469C304(v51 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchConfig, v50, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
    if (v55 && (v56 = objc_msgSend(v55, sel_featureIdentifier)) != 0)
    {
      v57 = v56;
      v58 = sub_1D492261C();
      v60 = v59;

      v61 = sub_1D492261C();
      if (v60)
      {
        v63 = v74;
        if (v61 == v58 && v60 == v62)
        {
          swift_bridgeObjectRelease_n();
LABEL_19:
          *(_BYTE *)(v50 + 8) = 0;
          goto LABEL_20;
        }
        v64 = sub_1D4922E38();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v64 & 1) != 0)
          goto LABEL_19;
LABEL_20:
        v80 = *(_QWORD *)(v51 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchFlow);
        swift_getObjectType();
        sub_1D47BEC7C(v109);
        v107[8] = v112[8];
        v107[9] = v112[9];
        v107[10] = v112[10];
        v108 = v113;
        v107[4] = v112[4];
        v107[5] = v112[5];
        v107[6] = v112[6];
        v107[7] = v112[7];
        v107[0] = v112[0];
        v107[1] = v112[1];
        v107[2] = v112[2];
        v107[3] = v112[3];
        v65 = v81;
        sub_1D469C304(v50, v81, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        v66 = (_QWORD *)swift_allocObject();
        v66[2] = v51;
        v66[3] = v63;
        v66[4] = v72;
        v67 = v110;
        v68 = v111;
        v69 = v50;
        v70 = __swift_project_boxed_opaque_existential_1(v109, v110);
        swift_retain();
        swift_retain();
        sub_1D485A358((uint64_t)v70, v107, v82, v65, v73, (uint64_t)sub_1D47F385C, (uint64_t)v66, v80, v67, v68);
        swift_release();
        sub_1D4697DE0(v65, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v109);
        sub_1D4697DE0(v69, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        sub_1D4697DE0((uint64_t)v20, type metadata accessor for ParseResult);
        sub_1D46B34D0((uint64_t)v112);
        return;
      }
    }
    else
    {
      sub_1D492261C();
    }
    v63 = v74;
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  sub_1D470C76C((uint64_t)v17);
  v28 = sub_1D4922358();
  v29 = sub_1D4922910();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v30 = 0;
    _os_log_impl(&dword_1D467C000, v28, v29, "parseAndSearchCompletion(): canceled", v30, 2u);
    MEMORY[0x1D82635B8](v30, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v78 + 8))(v17, v79);
  sub_1D4792DD4();
  v31 = (void *)swift_allocError();
  *v32 = 0;
  *(_QWORD *)&v95 = v31;
  sub_1D47F35E8((uint64_t)&v95);
  sub_1D46B3464((uint64_t)&v95, (uint64_t)&v83, &qword_1EFEAB978);
  v74(&v83);

  sub_1D4697DE0((uint64_t)v20, type metadata accessor for ParseResult);
}

id VisualIntelligenceService.parseAndEncryptedSearch(image:regionOfInterest:domains:annotation:queryContext:completion:)(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  os_log_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  char *v49;
  _QWORD v51[2];
  int v52;
  os_log_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t aBlock[7];

  v61 = a1;
  v58 = a5;
  v59 = a7;
  v11 = sub_1D492246C();
  v60 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D4922484();
  v64 = *(_QWORD *)(v14 - 8);
  v65 = v14;
  MEMORY[0x1E0C80A78](v14);
  v63 = (char *)v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D4922370();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a2;
  v21 = a2[1];
  v22 = a2[2];
  v23 = a2[3];
  sub_1D470C76C((uint64_t)v19);
  swift_bridgeObjectRetain_n();
  v24 = sub_1D4922358();
  v25 = sub_1D4922910();
  v26 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    v27 = swift_slowAlloc();
    v57 = v13;
    v28 = v27;
    v29 = swift_slowAlloc();
    v55 = v29;
    *(_DWORD *)v28 = 134218242;
    v66 = *(_QWORD *)(a3 + 16);
    aBlock[0] = v29;
    v56 = v16;
    sub_1D4922A78();
    *(_WORD *)(v28 + 12) = 2080;
    v51[1] = v28 + 14;
    sub_1D48559E8(a3);
    v53 = v24;
    v30 = MEMORY[0x1D8261B9C]();
    v54 = v17;
    v31 = v30;
    v52 = v26;
    v32 = a3;
    v34 = v33;
    swift_bridgeObjectRelease();
    v66 = sub_1D47F0250(v31, v34, aBlock);
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    a3 = v32;
    swift_bridgeObjectRelease();
    v35 = v53;
    _os_log_impl(&dword_1D467C000, v53, (os_log_type_t)v52, "Parse and search domain count %ld, domains: %s", (uint8_t *)v28, 0x16u);
    v36 = v55;
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v36, -1, -1);
    v37 = v28;
    v13 = v57;
    MEMORY[0x1D82635B8](v37, -1, -1);

    (*(void (**)(char *, uint64_t))(v54 + 8))(v19, v56);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  v38 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CancelSession()), sel_init);
  v39 = v62;
  v57 = *(char **)(v62 + 16);
  v40 = (_QWORD *)swift_allocObject();
  v41 = v61;
  v40[2] = v39;
  v40[3] = v41;
  v40[4] = v20;
  v40[5] = v21;
  v40[6] = v22;
  v40[7] = v23;
  v40[8] = a3;
  v40[9] = a4;
  v42 = a4;
  v44 = v58;
  v43 = v59;
  v40[10] = v58;
  v40[11] = v38;
  v40[12] = a6;
  v40[13] = v43;
  aBlock[4] = (uint64_t)sub_1D47F23A4;
  aBlock[5] = (uint64_t)v40;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1D47E5A84;
  aBlock[3] = (uint64_t)&block_descriptor_6;
  v45 = _Block_copy(aBlock);
  v46 = v44;
  v47 = v38;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  v48 = v42;
  v49 = v63;
  sub_1D4922478();
  v66 = MEMORY[0x1E0DEE9D8];
  sub_1D4696EA4(&qword_1ED98D0C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D1D0);
  sub_1D479D804((unint64_t *)&qword_1ED98D1E0, (uint64_t *)&unk_1ED98D1D0);
  sub_1D4922AFC();
  MEMORY[0x1D8261CD4](0, v49, v13, v45);
  _Block_release(v45);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v13, v11);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v49, v65);
  swift_release();
  return v47;
}

uint64_t sub_1D47ED338(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12)
{
  _QWORD *v24;
  id v25;
  id v26;
  id v27;
  __int128 v29;
  double v30;
  double v31;
  uint64_t v32[5];

  swift_getObjectType();
  sub_1D47BEC7C(v32);
  *(double *)&v29 = a9;
  *((double *)&v29 + 1) = a10;
  v30 = a11;
  v31 = a12;
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = a1;
  v24[3] = a2;
  v24[4] = a4;
  v24[5] = a5;
  v24[6] = a6;
  v24[7] = a7;
  v24[8] = a8;
  v25 = a5;
  v26 = a6;
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  v27 = a4;
  sub_1D47D4728((uint64_t)v32, &v29, a3, a4, a5, v26, 0, (uint64_t)sub_1D47F35DC, (uint64_t)v24);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
}

void sub_1D47ED464(uint64_t a1, uint64_t a2, void *a3, char *a4, uint64_t a5, void (*a6)(uint64_t *), uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  id v26;
  void (*v27)(uint64_t *);
  os_unfair_lock_s *v28;
  int v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  void *v34;
  _BYTE *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  _BYTE *v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(uint64_t *);
  uint64_t v128[3];
  uint64_t v129;
  uint64_t v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  uint64_t v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  uint64_t v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  uint64_t v166;
  _OWORD v167[4];
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  uint64_t v179;

  v126 = a7;
  v127 = a6;
  v122 = a2;
  v123 = a3;
  v119 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D7C0);
  MEMORY[0x1E0C80A78](v9);
  v121 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v120 = (uint64_t)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v124 = (uint64_t)&v117 - v14;
  v15 = sub_1D4922370();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for ParseResult(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98ED00);
  MEMORY[0x1E0C80A78](v22);
  v24 = (uint64_t *)((char *)&v117 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D469C5EC(a5, (uint64_t)v24, &qword_1ED98ED00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_QWORD *)&v131 = *v24;
    v25 = (void *)v131;
    sub_1D47F35E8((uint64_t)&v131);
    sub_1D46B3464((uint64_t)&v131, (uint64_t)v128, &qword_1EFEAB978);
    v26 = v25;
    v127(v128);

    return;
  }
  v27 = v127;
  sub_1D469C630((uint64_t)v24, (uint64_t)v21, type metadata accessor for ParseResult);
  v28 = (os_unfair_lock_s *)(*(_QWORD *)&a4[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock] + 16);
  os_unfair_lock_lock(v28);
  v29 = a4[OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled];
  os_unfair_lock_unlock(v28);
  v30 = (uint64_t)v21;
  if (v29 == 1)
  {
    sub_1D470C76C((uint64_t)v18);
    v31 = sub_1D4922358();
    v32 = sub_1D4922910();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_1D467C000, v31, v32, "parseAndSearchCompletion(): canceled", v33, 2u);
      MEMORY[0x1D82635B8](v33, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    sub_1D4792DD4();
    v34 = (void *)swift_allocError();
    *v35 = 0;
    *(_QWORD *)&v131 = v34;
    sub_1D47F35E8((uint64_t)&v131);
    sub_1D46B3464((uint64_t)&v131, (uint64_t)v128, &qword_1EFEAB978);
    v27(v128);

    goto LABEL_7;
  }
  v118 = a4;
  v36 = *((_OWORD *)v21 + 9);
  v37 = *((_OWORD *)v21 + 7);
  v176 = *((_OWORD *)v21 + 8);
  v177 = v36;
  v38 = *((_OWORD *)v21 + 9);
  v178 = *((_OWORD *)v21 + 10);
  v39 = *((_OWORD *)v21 + 5);
  v40 = *((_OWORD *)v21 + 3);
  v172 = *((_OWORD *)v21 + 4);
  v173 = v39;
  v41 = *((_OWORD *)v21 + 5);
  v42 = *((_OWORD *)v21 + 7);
  v174 = *((_OWORD *)v21 + 6);
  v175 = v42;
  v43 = *((_OWORD *)v21 + 1);
  v168 = *(_OWORD *)v21;
  v169 = v43;
  v44 = *((_OWORD *)v21 + 3);
  v46 = *(_OWORD *)v21;
  v45 = *((_OWORD *)v21 + 1);
  v170 = *((_OWORD *)v21 + 2);
  v171 = v44;
  v139 = v176;
  v140 = v38;
  v141 = *((_OWORD *)v21 + 10);
  v135 = v172;
  v136 = v41;
  v137 = v174;
  v138 = v37;
  v131 = v46;
  v132 = v45;
  v179 = *((_QWORD *)v21 + 22);
  v142 = *((_QWORD *)v21 + 22);
  v133 = v170;
  v134 = v40;
  sub_1D46B2E18((uint64_t)&v168);
  v47 = VisualUnderstanding.imageRegions.getter();
  if (v122)
  {
    sub_1D47BECD0(&v131);
    v48 = v131;
    v49 = v132;
    v50 = v133;
    v51 = v134;
  }
  else
  {
    v48 = xmmword_1D49324E0;
    v49 = 0uLL;
    v50 = 0uLL;
    v51 = 0uLL;
  }
  v52 = (uint64_t)v121;
  v167[0] = v48;
  v167[1] = v49;
  v167[2] = v50;
  v167[3] = v51;
  sub_1D4920D5C();
  swift_allocObject();
  sub_1D4920D50();
  v163 = v176;
  v164 = v177;
  v165 = v178;
  v166 = v179;
  v159 = v172;
  v160 = v173;
  v161 = v174;
  v162 = v175;
  v155 = v168;
  v156 = v169;
  v157 = v170;
  v158 = v171;
  sub_1D46F8B58();
  v53 = sub_1D4920D44();
  v55 = v54;
  swift_release();
  sub_1D46B34D0((uint64_t)&v168);
  sub_1D482A3A0(v47, (uint64_t *)v167, v53, v55, (uint64_t)&v143);
  v56 = v124;
  sub_1D469C304(v125 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchConfig, v124, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  v57 = v123;
  if (!v123 || (v58 = objc_msgSend(v123, sel_featureIdentifier)) == 0)
  {
    sub_1D492261C();
    goto LABEL_18;
  }
  v59 = v58;
  v60 = sub_1D492261C();
  v62 = v61;

  v63 = sub_1D492261C();
  if (!v62)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (v63 == v60 && v62 == v64)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v90 = sub_1D4922E38();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v90 & 1) == 0)
      goto LABEL_19;
  }
  *(_BYTE *)(v56 + 8) = 0;
LABEL_19:
  v139 = v151;
  v140 = v152;
  v141 = v153;
  v142 = v154;
  v135 = v147;
  v136 = v148;
  v137 = v149;
  v138 = v150;
  v131 = v143;
  v132 = v144;
  v133 = v145;
  v134 = v146;
  v65 = VisualUnderstanding.imageRegions.getter();
  v66 = *(_QWORD *)(v65 + 16);
  v67 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v68 = *(_QWORD *)(v67 - 8);
  if (v66)
  {
    sub_1D469C304(v65 + ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80)), v52, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v69 = 0;
  }
  else
  {
    v69 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56))(v52, v69, 1, v67);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v52, 1, v67) == 1)
  {
    sub_1D46992EC(v52, &qword_1ED98D7C0);
LABEL_30:
    sub_1D492261C();
    v72 = 0;
    goto LABEL_31;
  }
  v70 = VisualUnderstanding.ImageRegion.domainInfo.getter();
  sub_1D4697DE0(v52, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  if (!*(_QWORD *)(v70 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  v71 = *(_BYTE *)(v70 + 32);
  swift_bridgeObjectRelease();
  LOBYTE(v131) = v71;
  v72 = VisualDomain.mappedDomainKey.getter();
  v74 = v73;
  v75 = sub_1D492261C();
  if (!v74)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    sub_1D492261C();
    swift_bridgeObjectRelease();
    v74 = 0;
    v77 = 1;
    goto LABEL_32;
  }
  if (v72 == v75 && v74 == v76)
  {
    swift_bridgeObjectRelease();
LABEL_62:
    swift_bridgeObjectRelease();
    v125 = *(_QWORD *)(v125 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchFlow);
    swift_getObjectType();
    sub_1D47BEC7C(v128);
    v139 = v151;
    v140 = v152;
    v141 = v153;
    v142 = v154;
    v135 = v147;
    v136 = v148;
    v137 = v149;
    v138 = v150;
    v131 = v143;
    v132 = v144;
    v133 = v145;
    v134 = v146;
    v93 = v120;
    sub_1D469C304(v56, v120, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
    v94 = swift_allocObject();
    v95 = v126;
    *(_QWORD *)(v94 + 16) = v127;
    *(_QWORD *)(v94 + 24) = v95;
    v97 = v129;
    v96 = v130;
    v98 = v57;
    v99 = __swift_project_boxed_opaque_existential_1(v128, v129);
    swift_retain();
    sub_1D485A7E4((uint64_t)v99, &v131, v98, v93, v118, (uint64_t)sub_1D47F39F0, v94, v125, v97, v96);
    goto LABEL_63;
  }
  v92 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  if ((v92 & 1) != 0)
    goto LABEL_62;
  if (v72 == sub_1D492261C() && v74 == v102)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v104 = sub_1D4922E38();
    swift_bridgeObjectRelease();
    if ((v104 & 1) == 0)
    {
      v77 = 0;
LABEL_32:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFEAB9D0);
      v78 = swift_allocObject();
      *(_OWORD *)(v78 + 16) = xmmword_1D492BAD0;
      *(_QWORD *)(v78 + 32) = sub_1D492261C();
      *(_QWORD *)(v78 + 40) = v79;
      *(_QWORD *)(v78 + 48) = sub_1D492261C();
      *(_QWORD *)(v78 + 56) = v80;
      *(_QWORD *)(v78 + 64) = sub_1D492261C();
      *(_QWORD *)(v78 + 72) = v81;
      *(_QWORD *)(v78 + 80) = sub_1D492261C();
      *(_QWORD *)(v78 + 88) = v82;
      *(_QWORD *)(v78 + 96) = sub_1D492261C();
      *(_QWORD *)(v78 + 104) = v83;
      *(_QWORD *)(v78 + 112) = sub_1D492261C();
      *(_QWORD *)(v78 + 120) = v84;
      *(_QWORD *)(v78 + 128) = sub_1D492261C();
      *(_QWORD *)(v78 + 136) = v85;
      *(_QWORD *)(v78 + 144) = sub_1D492261C();
      *(_QWORD *)(v78 + 152) = v86;
      v87 = *(_QWORD *)(v78 + 40);
      if (v87)
      {
        if ((v77 & 1) == 0 && (*(_QWORD *)(v78 + 32) == v72 && v87 == v74 || (sub_1D4922E38() & 1) != 0))
          goto LABEL_97;
      }
      else if ((v77 & 1) != 0)
      {
        goto LABEL_99;
      }
      v88 = *(_QWORD *)(v78 + 56);
      if (v88)
      {
        if ((v77 & 1) == 0 && (*(_QWORD *)(v78 + 48) == v72 && v88 == v74 || (sub_1D4922E38() & 1) != 0))
          goto LABEL_97;
      }
      else if ((v77 & 1) != 0)
      {
        goto LABEL_99;
      }
      v89 = *(_QWORD *)(v78 + 72);
      if (v89)
      {
        if ((v77 & 1) == 0 && (*(_QWORD *)(v78 + 64) == v72 && v89 == v74 || (sub_1D4922E38() & 1) != 0))
          goto LABEL_97;
      }
      else if ((v77 & 1) != 0)
      {
        goto LABEL_99;
      }
      v91 = *(_QWORD *)(v78 + 88);
      if (v91)
      {
        if ((v77 & 1) == 0 && (*(_QWORD *)(v78 + 80) == v72 && v91 == v74 || (sub_1D4922E38() & 1) != 0))
          goto LABEL_97;
      }
      else if ((v77 & 1) != 0)
      {
        goto LABEL_99;
      }
      v101 = *(_QWORD *)(v78 + 104);
      if (v101)
      {
        if ((v77 & 1) == 0 && (*(_QWORD *)(v78 + 96) == v72 && v101 == v74 || (sub_1D4922E38() & 1) != 0))
          goto LABEL_97;
      }
      else if ((v77 & 1) != 0)
      {
        goto LABEL_99;
      }
      v103 = *(_QWORD *)(v78 + 120);
      if (v103)
      {
        if ((v77 & 1) == 0 && (*(_QWORD *)(v78 + 112) == v72 && v103 == v74 || (sub_1D4922E38() & 1) != 0))
          goto LABEL_97;
      }
      else if ((v77 & 1) != 0)
      {
        goto LABEL_99;
      }
      v111 = *(_QWORD *)(v78 + 136);
      if (v111)
      {
        if ((v77 & 1) == 0 && (*(_QWORD *)(v78 + 128) == v72 && v111 == v74 || (sub_1D4922E38() & 1) != 0))
          goto LABEL_97;
      }
      else if ((v77 & 1) != 0)
      {
        goto LABEL_99;
      }
      v112 = *(_QWORD *)(v78 + 152);
      if (v112)
      {
        if ((v77 & 1) == 0 && (*(_QWORD *)(v78 + 144) == v72 && v112 == v74 || (sub_1D4922E38() & 1) != 0))
        {
LABEL_97:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_100:
          swift_getObjectType();
          sub_1D47BEC7C(v128);
          v139 = v151;
          v140 = v152;
          v141 = v153;
          v142 = v154;
          v135 = v147;
          v136 = v148;
          v137 = v149;
          v138 = v150;
          v131 = v143;
          v132 = v144;
          v133 = v145;
          v134 = v146;
          v113 = v120;
          sub_1D469C304(v56, v120, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
          v114 = swift_allocObject();
          *(_QWORD *)(v114 + 16) = v127;
          *(_QWORD *)(v114 + 24) = v126;
          swift_retain();
          sub_1D47DB1B4(&v131, v113, (void (*)(_QWORD))sub_1D47F35F4, v114);
          swift_release();
          v100 = v113;
          goto LABEL_101;
        }
LABEL_103:
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D140);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        swift_bridgeObjectRelease();
        sub_1D46B34D0((uint64_t)&v143);
        sub_1D4792DD4();
        v115 = (void *)swift_allocError();
        *v116 = 3;
        *(_QWORD *)&v131 = v115;
        sub_1D47F35E8((uint64_t)&v131);
        sub_1D46B3464((uint64_t)&v131, (uint64_t)v128, &qword_1EFEAB978);
        v127(v128);

        sub_1D4697DE0(v56, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
LABEL_7:
        sub_1D4697DE0(v30, type metadata accessor for ParseResult);
        return;
      }
      if ((v77 & 1) == 0)
        goto LABEL_103;
LABEL_99:
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D140);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      goto LABEL_100;
    }
  }
  swift_bridgeObjectRelease();
  v125 = *(_QWORD *)(v125 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchFlow);
  swift_getObjectType();
  sub_1D47BEC7C(v128);
  v139 = v151;
  v140 = v152;
  v141 = v153;
  v142 = v154;
  v135 = v147;
  v136 = v148;
  v137 = v149;
  v138 = v150;
  v131 = v143;
  v132 = v144;
  v133 = v145;
  v134 = v146;
  v93 = v120;
  sub_1D469C304(v56, v120, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  v105 = swift_allocObject();
  v106 = v126;
  *(_QWORD *)(v105 + 16) = v127;
  *(_QWORD *)(v105 + 24) = v106;
  v108 = v129;
  v107 = v130;
  v109 = v57;
  v110 = __swift_project_boxed_opaque_existential_1(v128, v129);
  swift_retain();
  sub_1D485A828((uint64_t)v110, &v131, v109, v93, v118, (uint64_t)sub_1D47F35FC, v105, v125, v108, v107);
LABEL_63:
  swift_release();
  v100 = v93;
LABEL_101:
  sub_1D4697DE0(v100, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v128);
  sub_1D4697DE0(v56, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  sub_1D4697DE0(v30, type metadata accessor for ParseResult);
  sub_1D46B34D0((uint64_t)&v143);
}

uint64_t sub_1D47EE2B8(uint64_t a1, void (*a2)(_BYTE *))
{
  id *v3;
  id v4;
  _QWORD *v5;
  _BYTE v7[216];
  _BYTE v8[216];
  _BYTE v9[216];
  _BYTE v10[216];

  sub_1D46B3464(a1, (uint64_t)v9, &qword_1EFEAB978);
  sub_1D46B3464((uint64_t)v9, (uint64_t)v10, &qword_1EFEAB978);
  if (sub_1D47F3614((uint64_t)v10) == 1)
  {
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v10);
    sub_1D46B3464((uint64_t)v9, (uint64_t)v7, &qword_1EFEAB978);
    sub_1D46B3464((uint64_t)v9, (uint64_t)v8, &qword_1EFEAB978);
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v8);
    v4 = *v3;
  }
  else
  {
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v10);
    sub_1D46B3464((uint64_t)v9, (uint64_t)v7, &qword_1EFEAB978);
    sub_1D46B3464((uint64_t)v9, (uint64_t)v8, &qword_1EFEAB978);
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v8);
    sub_1D47DC8EC(v5);
  }
  a2(v7);
  return sub_1D47F361C((uint64_t)v9);
}

id VisualIntelligenceService.submitUserFeedback(image:request:report:reportIdentifier:environment:container:completion:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, void (*a12)(_QWORD), uint64_t a13)
{
  uint64_t *v13;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint8_t *v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t aBlock;
  uint64_t v82;
  uint64_t (*v83)(uint64_t);
  void *v84;
  void (*v85)();
  uint64_t v86;

  v67 = a8;
  v68 = *v13;
  v21 = sub_1D492246C();
  v74 = *(_QWORD *)(v21 - 8);
  v75 = v21;
  MEMORY[0x1E0C80A78](v21);
  v73 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1D4922484();
  v71 = *(_QWORD *)(v23 - 8);
  v72 = v23;
  MEMORY[0x1E0C80A78](v23);
  v70 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1D4922370();
  v79 = *(_QWORD *)(v25 - 8);
  v26 = MEMORY[0x1E0C80A78](v25);
  v65 = (char *)&v62 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v62 - v28;
  sub_1D470C76C((uint64_t)&v62 - v28);
  swift_bridgeObjectRetain();
  sub_1D46E5180(a2, a3);
  sub_1D46E5180(a4, a5);
  swift_bridgeObjectRetain();
  sub_1D46E5180(a2, a3);
  sub_1D46E5180(a4, a5);
  v30 = sub_1D4922358();
  v31 = sub_1D4922910();
  LODWORD(v76) = v31;
  v32 = os_log_type_enabled(v30, v31);
  v77 = v25;
  v78 = a7;
  v69 = a6;
  if (v32)
  {
    v33 = swift_slowAlloc();
    v34 = swift_slowAlloc();
    v63 = v34;
    *(_DWORD *)v33 = 136315650;
    v80 = v34;
    aBlock = a6;
    v82 = a7;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D140);
    v64 = a1;
    v35 = sub_1D4922670();
    aBlock = sub_1D47F0250(v35, v36, &v80);
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    aBlock = a2;
    v82 = a3;
    sub_1D46E5180(a2, a3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA760);
    v37 = sub_1D4922670();
    aBlock = sub_1D47F0250(v37, v38, &v80);
    sub_1D4922A78();
    swift_bridgeObjectRelease();
    sub_1D46AA1F0(a2, a3);
    sub_1D46AA1F0(a2, a3);
    *(_WORD *)(v33 + 22) = 2080;
    aBlock = a4;
    v82 = a5;
    sub_1D46E5180(a4, a5);
    v39 = sub_1D4922670();
    aBlock = sub_1D47F0250(v39, v40, &v80);
    a1 = v64;
    sub_1D4922A78();
    swift_bridgeObjectRelease();
    sub_1D46AA1F0(a4, a5);
    sub_1D46AA1F0(a4, a5);
    _os_log_impl(&dword_1D467C000, v30, (os_log_type_t)v76, "submitUserFeedback(): reportIdentifier=%s request=%s report=%s", (uint8_t *)v33, 0x20u);
    v41 = v63;
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v41, -1, -1);
    MEMORY[0x1D82635B8](v33, -1, -1);

    v42 = *(void (**)(char *, uint64_t))(v79 + 8);
    v42(v29, v77);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1D46AA1F0(a2, a3);
    sub_1D46AA1F0(a2, a3);
    sub_1D46AA1F0(a4, a5);
    sub_1D46AA1F0(a4, a5);

    v42 = *(void (**)(char *, uint64_t))(v79 + 8);
    v42(v29, v25);
  }
  v43 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CancelSession()), sel_init);
  if (a3 >> 60 == 15)
  {
    v44 = sub_1D47F2618(0xD000000000000025, 0x80000001D4945370, (uint64_t)v43, a12);
    swift_unknownObjectRetain();
LABEL_13:

    return (id)v44;
  }
  if (!v78)
  {
    sub_1D46E5180(a2, a3);
    v44 = sub_1D47F2618(0xD00000000000002ELL, 0x80000001D49453A0, (uint64_t)v43, a12);
    swift_unknownObjectRetain();
    sub_1D46AA1F0(a2, a3);
    goto LABEL_13;
  }
  v45 = a11;
  v76 = a10;
  LODWORD(v63) = a9;
  swift_bridgeObjectRetain();
  sub_1D46E5180(a2, a3);
  if (a5 >> 60 == 15)
  {
    v62 = a11;
    v79 = a5;
    v46 = a4;
    sub_1D470C76C((uint64_t)v65);
    v47 = sub_1D4922358();
    v48 = sub_1D4922910();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc();
      v64 = a1;
      v50 = v49;
      *(_WORD *)v49 = 0;
      _os_log_impl(&dword_1D467C000, v47, v48, "submitUserFeedback(): warning: report data was empty", v49, 2u);
      v51 = v50;
      a1 = v64;
      MEMORY[0x1D82635B8](v51, -1, -1);
    }

    v42(v65, v77);
    a4 = v46;
    a5 = v79;
    v45 = v62;
  }
  v79 = *(_QWORD *)(v66 + 16);
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = v43;
  *(_QWORD *)(v52 + 24) = a12;
  v53 = v67;
  *(_QWORD *)(v52 + 32) = a13;
  *(_QWORD *)(v52 + 40) = v53;
  *(_BYTE *)(v52 + 48) = v63 & 1;
  *(_QWORD *)(v52 + 56) = v76;
  *(_QWORD *)(v52 + 64) = v45;
  *(_QWORD *)(v52 + 72) = a2;
  *(_QWORD *)(v52 + 80) = a3;
  *(_QWORD *)(v52 + 88) = a1;
  *(_QWORD *)(v52 + 96) = a4;
  v54 = v69;
  *(_QWORD *)(v52 + 104) = a5;
  *(_QWORD *)(v52 + 112) = v54;
  v55 = v68;
  *(_QWORD *)(v52 + 120) = v78;
  *(_QWORD *)(v52 + 128) = v55;
  v85 = sub_1D47F28B4;
  v86 = v52;
  aBlock = MEMORY[0x1E0C809B0];
  v82 = 1107296256;
  v83 = sub_1D47E5A84;
  v84 = &block_descriptor_12;
  v56 = _Block_copy(&aBlock);
  sub_1D46E5180(a2, a3);
  sub_1D46E5180(a4, a5);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v57 = v43;
  swift_retain();
  v58 = v70;
  sub_1D4922478();
  v80 = MEMORY[0x1E0DEE9D8];
  sub_1D4696EA4(&qword_1ED98D0C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D1D0);
  sub_1D479D804((unint64_t *)&qword_1ED98D1E0, (uint64_t *)&unk_1ED98D1D0);
  v59 = v73;
  v60 = v75;
  sub_1D4922AFC();
  MEMORY[0x1D8261CD4](0, v58, v59, v56);
  _Block_release(v56);
  sub_1D46AA1F0(a2, a3);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v59, v60);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v58, v72);
  swift_release();
  return v57;
}

void sub_1D47EEB30(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, int a5, void *a6, uint64_t a7, uint64_t a8, unint64_t a9, void *a10, uint64_t a11, unint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  os_unfair_lock_s *v24;
  int v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  void *v29;
  _BYTE *v30;
  uint64_t inited;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  NSObject *v59;
  os_log_type_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  id v66;
  uint64_t *v67;
  void *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  id v74;
  id v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v79;
  _QWORD *v80;
  id v81;
  uint64_t v82;
  uint8_t *v83;
  id v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  int v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  unint64_t v99;
  void *v100;
  void *v101;
  char *v102;
  void *v103;
  void *v104;
  double v105;
  char *v106;
  uint64_t v107;
  _QWORD v108[2];
  uint64_t v109;
  uint64_t *v110;
  char *v111;
  uint64_t v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  char *v118;
  void (*v119)(void);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  __int128 v124;
  uint64_t (*v125)(void *);
  uint64_t v126;

  v109 = a8;
  v114 = a7;
  v116 = a4;
  v117 = a6;
  LODWORD(v115) = a5;
  v119 = a2;
  v14 = sub_1D492204C();
  MEMORY[0x1E0C80A78](v14);
  v108[1] = (char *)v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108[0] = type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals();
  MEMORY[0x1E0C80A78](v108[0]);
  v110 = (_QWORD *)((char *)v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_1D4922370();
  v120 = *(_QWORD *)(v17 - 8);
  v121 = v17;
  v18 = MEMORY[0x1E0C80A78](v17);
  v118 = (char *)v108 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v111 = (char *)v108 - v21;
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)v108 - v22;
  v24 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock) + 16);
  os_unfair_lock_lock(v24);
  v25 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled);
  os_unfair_lock_unlock(v24);
  if (v25 == 1)
  {
    sub_1D470C76C((uint64_t)v23);
    v26 = sub_1D4922358();
    v27 = sub_1D4922910();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1D467C000, v26, v27, "submitUserFeedback(): canceled", v28, 2u);
      MEMORY[0x1D82635B8](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v120 + 8))(v23, v121);
    sub_1D4792DD4();
    v29 = (void *)swift_allocError();
    *v30 = 0;
    v119();

  }
  v112 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB9A8);
  inited = swift_initStackObject();
  v113 = xmmword_1D4927210;
  *(_OWORD *)(inited + 16) = xmmword_1D4927210;
  if ((sub_1D473117C() & 1) == 0)
  {
    if (qword_1ED98F3A8 == -1)
      goto LABEL_9;
    goto LABEL_55;
  }
  if (qword_1EFEA9C20 != -1)
LABEL_55:
    swift_once();
LABEL_9:
  swift_retain();
  sub_1D46F995C();
  v33 = v32;
  v35 = v34;
  swift_release();
  *(_QWORD *)(inited + 32) = v33;
  v36 = v115 & 1;
  if ((v115 & 1) != 0)
    v37 = 2;
  else
    v37 = 1;
  v38 = 64;
  if ((v115 & 1) != 0)
    v38 = 96;
  *(_BYTE *)(inited + 40) = v35 & 1;
  *(_QWORD *)(inited + 48) = 0x6C616E7265746E69;
  *(_QWORD *)(inited + 56) = 0xE800000000000000;
  *(_QWORD *)(inited + 64) = v116;
  *(_BYTE *)(inited + 72) = v36;
  *(_QWORD *)(inited + 80) = 0x746E656D75677261;
  *(_QWORD *)(inited + 88) = 0xE800000000000000;
  *(_QWORD *)(inited + 96) = 1;
  *(_BYTE *)(inited + 104) = 0;
  *(_QWORD *)(inited + 112) = 0x746C7561666564;
  *(_QWORD *)(inited + 120) = 0xE700000000000000;
  v39 = (uint64_t *)(inited + v38);
  if ((v35 & 1) != 0)
    v40 = v37;
  else
    v40 = 0;
  if ((v35 & 1) == 0)
    v39 = (uint64_t *)(inited + 32);
  v41 = *(_QWORD *)(inited + 32 + 32 * v40 + 24);
  v116 = *v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB9B0);
  v42 = swift_initStackObject();
  *(_OWORD *)(v42 + 16) = v113;
  if ((sub_1D473117C() & 1) != 0)
  {
    if (qword_1EFEA9C20 != -1)
      swift_once();
    v43 = &qword_1EFEAA908;
  }
  else
  {
    if (qword_1ED98F3A8 != -1)
      swift_once();
    v43 = (uint64_t *)&off_1ED98F3F0;
  }
  v44 = *(void **)(*v43 + 32);
  swift_retain();
  v45 = (void *)sub_1D49225F8();
  v46 = objc_msgSend(v44, sel_stringForKey_, v45);

  if (v46)
  {
    v47 = sub_1D492261C();
    v49 = v48;
    swift_release();

  }
  else
  {
    swift_release();
    v47 = 0;
    v49 = 0;
  }
  *(_QWORD *)(v42 + 96) = 0xD000000000000029;
  v50 = (uint64_t *)(v42 + 96);
  *(_QWORD *)(v42 + 32) = v47;
  *(_QWORD *)(v42 + 40) = v49;
  *(_QWORD *)(v42 + 64) = v117;
  *(_QWORD *)(v42 + 48) = 0x6C616E7265746E69;
  *(_QWORD *)(v42 + 56) = 0xE800000000000000;
  v51 = v114;
  *(_QWORD *)(v42 + 72) = v114;
  *(_QWORD *)(v42 + 80) = 0x746E656D75677261;
  *(_QWORD *)(v42 + 88) = 0xE800000000000000;
  *(_QWORD *)(v42 + 104) = 0x80000001D4945340;
  *(_QWORD *)(v42 + 112) = 0x746C7561666564;
  *(_QWORD *)(v42 + 120) = 0xE700000000000000;
  if (v49)
  {
    v52 = 0;
    v50 = (uint64_t *)(v42 + 32);
  }
  else
  {
    v52 = 1;
    if (v51)
      v50 = (uint64_t *)(v42 + 64);
    else
      v52 = 2;
    if (v51)
      v49 = v51;
    else
      v49 = 0x80000001D4945340;
  }
  v53 = v42 + 32 + 32 * v52;
  v54 = *(_QWORD *)(v53 + 16);
  v55 = *(_QWORD *)(v53 + 24);
  v56 = *v50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!v41)
  {
    sub_1D47F3538(v56, v49, v54, v55);
    sub_1D47F3568();
    v68 = (void *)swift_allocError();
    v69 = 0x69766E65206C696ELL;
    v70 = 0xEF746E656D6E6F72;
LABEL_44:
    *v67 = v69;
    v67[1] = v70;
    swift_willThrow();
    v73 = (uint64_t)v118;
    sub_1D470C76C((uint64_t)v118);
    v74 = v68;
    v75 = v68;
    v76 = sub_1D4922358();
    v77 = sub_1D492291C();
    if (os_log_type_enabled(v76, v77))
    {
      v79 = (uint8_t *)swift_slowAlloc();
      v80 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v79 = 138412290;
      v81 = v68;
      v82 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)&v123 = v82;
      sub_1D4922A78();
      *v80 = v82;

      _os_log_impl(&dword_1D467C000, v76, v77, "submitUserFeedback(): %@", v79, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFEAB9C0);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v80, -1, -1);
      v83 = v79;
      v73 = (uint64_t)v118;
      MEMORY[0x1D82635B8](v83, -1, -1);
    }
    else
    {

    }
    (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v73, v121);
    v84 = v68;
    ((void (*)(void *))v119)(v68);

    return;
  }
  swift_bridgeObjectRelease();
  if (!v55 || (swift_bridgeObjectRelease(), !v49))
  {
    sub_1D47F3568();
    v68 = (void *)swift_allocError();
    v69 = 0x746E6F63206C696ELL;
    v70 = 0xED000072656E6961;
    goto LABEL_44;
  }
  v57 = a9;
  v58 = v111;
  sub_1D470C76C((uint64_t)v111);
  swift_bridgeObjectRetain_n();
  v59 = sub_1D4922358();
  v60 = sub_1D4922910();
  if (os_log_type_enabled(v59, v60))
  {
    v61 = swift_slowAlloc();
    v117 = (id)swift_slowAlloc();
    *(_QWORD *)&v123 = v117;
    *(_DWORD *)v61 = 136315394;
    v115 = v61 + 4;
    v62 = (id)CKContainerEnvironmentString();
    v63 = sub_1D492261C();
    v65 = v64;

    v122 = sub_1D47F0250(v63, v65, (uint64_t *)&v123);
    sub_1D4922A78();
    swift_bridgeObjectRelease();
    *(_WORD *)(v61 + 12) = 2080;
    swift_bridgeObjectRetain();
    v122 = sub_1D47F0250(v56, v49, (uint64_t *)&v123);
    v57 = a9;
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D467C000, v59, v60, "submitUserFeedback(): environment=%s, container=%s", (uint8_t *)v61, 0x16u);
    v66 = v117;
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v66, -1, -1);
    MEMORY[0x1D82635B8](v61, -1, -1);

    (*(void (**)(char *, uint64_t))(v120 + 8))(v111, v121);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v120 + 8))(v58, v121);
  }
  v125 = 0;
  v123 = 0u;
  v124 = 0u;
  sub_1D46A5708(v109, v57);
  sub_1D4922040();
  sub_1D4696EA4(&qword_1EFEAA708, (uint64_t (*)(uint64_t))type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals, (uint64_t)&unk_1D4928C4C);
  sub_1D49221C0();
  sub_1D481A730(a10, 1);
  v72 = (void *)v71;
  v85 = sub_1D481A9C0(v71);
  v87 = v86;

  v121 = sub_1D49225F8();
  swift_bridgeObjectRelease();
  v88 = *v110;
  v89 = v110[1];
  sub_1D46A5708(*v110, v89);
  v120 = sub_1D4920F60();
  sub_1D4696F10(v88, v89);
  if (a12 >> 60 == 15)
    v118 = 0;
  else
    v118 = (char *)sub_1D4920F60();
  v117 = (id)objc_opt_self();
  v90 = (uint64_t)v110;
  v91 = v110[2];
  v92 = v110[3];
  sub_1D46A5708(v91, v92);
  v115 = sub_1D4920F60();
  sub_1D4696F10(v91, v92);
  swift_bridgeObjectRetain();
  v114 = sub_1D49225F8();
  swift_bridgeObjectRelease();
  v93 = *(_DWORD *)(v90 + 32);
  v94 = (char *)sub_1D4920F60();
  v111 = v94;
  v95 = sub_1D49225F8();
  *(_QWORD *)&v113 = v95;
  v96 = swift_allocObject();
  v97 = v112;
  *(_QWORD *)(v96 + 16) = v119;
  *(_QWORD *)(v96 + 24) = v97;
  v125 = sub_1D47F35D0;
  v126 = v96;
  *(_QWORD *)&v123 = MEMORY[0x1E0C809B0];
  *((_QWORD *)&v123 + 1) = 1107296256;
  *(_QWORD *)&v124 = sub_1D47EFA3C;
  *((_QWORD *)&v124 + 1) = &block_descriptor_18;
  v98 = _Block_copy(&v123);
  v99 = v87;
  swift_retain();
  swift_release();
  v107 = v95;
  v106 = v94;
  v101 = (void *)v120;
  v100 = (void *)v121;
  v102 = v118;
  v103 = (void *)v114;
  v104 = (void *)v115;
  LODWORD(v105) = v93;
  objc_msgSend(v117, sel_uploadUserFeedbackToEnvironment_container_request_sfReport_intermediateResults_deviceInfo_nsfwConfidence_imageData_reportIdentifier_completionHandler_, v116, v121, v120, v118, v115, v114, v105, v106, v107, v98);
  sub_1D4696F10(v85, v99);
  _Block_release(v98);

  sub_1D4697DE0(v90, (uint64_t (*)(_QWORD))type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals);
}

uint64_t sub_1D47EF79C(void *a1, uint64_t (*a2)(void *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  os_log_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _QWORD v24[2];
  os_log_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *);
  uint64_t v28;

  v27 = a2;
  v3 = sub_1D4922370();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v24 - v8;
  if (a1)
  {
    v10 = a1;
    sub_1D470C76C((uint64_t)v7);
    v11 = a1;
    v12 = a1;
    v13 = sub_1D4922358();
    v14 = sub_1D4922910();
    if (os_log_type_enabled(v13, v14))
    {
      v25 = v13;
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      v26 = v4;
      *(_DWORD *)v15 = 138412290;
      v24[1] = v15 + 4;
      v17 = a1;
      v18 = _swift_stdlib_bridgeErrorToNSError();
      v28 = v18;
      v4 = v26;
      sub_1D4922A78();
      *v16 = v18;

      v19 = v25;
      _os_log_impl(&dword_1D467C000, v25, v14, "submitUserFeedback(): %@", v15, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFEAB9C0);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v16, -1, -1);
      MEMORY[0x1D82635B8](v15, -1, -1);

    }
    else
    {

    }
    v9 = v7;
  }
  else
  {
    sub_1D470C76C((uint64_t)v24 - v8);
    v20 = sub_1D4922358();
    v21 = sub_1D4922910();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1D467C000, v20, v21, "submitUserFeedback(): successful", v22, 2u);
      MEMORY[0x1D82635B8](v22, -1, -1);
    }

  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  return v27(a1);
}

void sub_1D47EFA3C(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t sub_1D47EFA90(char a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EC20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D4928FE0;
  *(_BYTE *)(inited + 32) = 3;
  *(_QWORD *)(inited + 40) = sub_1D47EFC84(a1, 3, (void (*)(_QWORD))type metadata accessor for NatureworldModelFactory, (uint64_t (*)(char *, _BYTE *, uint64_t))sub_1D4827F5C, "Failed to resolve provider for natureworld");
  *(_BYTE *)(inited + 48) = 2;
  *(_QWORD *)(inited + 56) = sub_1D47EFC84(a1, 2, (void (*)(_QWORD))type metadata accessor for UnifiedModelFactory, (uint64_t (*)(char *, _BYTE *, uint64_t))sub_1D47B942C, "Failed to resolve provider for unified");
  *(_BYTE *)(inited + 64) = 4;
  *(_QWORD *)(inited + 72) = sub_1D47EFC84(a1, 4, (void (*)(_QWORD))type metadata accessor for ApparelModelFactory, (uint64_t (*)(char *, _BYTE *, uint64_t))sub_1D4890A44, "Failed to resolve provider for natureworld");
  *(_BYTE *)(inited + 80) = 5;
  if (sub_1D4751360(5))
  {
    v7 = v6;
    HIBYTE(v14) = a1;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);
    type metadata accessor for FoodModelFactory();
    v9 = swift_allocObject();
    v10 = sub_1D4825BD8((char *)&v14 + 7, (uint64_t)v4, v9);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    v10 = 0;
  }
  *(_QWORD *)(inited + 88) = v10;
  *(_BYTE *)(inited + 96) = 6;
  *(_QWORD *)(inited + 104) = sub_1D47EFC84(a1, 6, (void (*)(_QWORD))type metadata accessor for SignSymbolModelFactory, (uint64_t (*)(char *, _BYTE *, uint64_t))sub_1D4857710, "Failed to resolve provider for signSymbol");
  v11 = sub_1D47C5A14(inited);
  v12 = sub_1D47EFE3C(v11);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1D47EFC84(char a1, uint64_t a2, void (*a3)(_QWORD), uint64_t (*a4)(char *, _BYTE *, uint64_t), const char *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _BYTE v26[15];
  char v27;

  v10 = sub_1D4922370();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = &v26[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (sub_1D4751360(a2))
  {
    v18 = v17;
    v27 = a1;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(ObjectType, v18);
    a3(0);
    v20 = swift_allocObject();
    v21 = a4(&v27, v16, v20);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_1D470C76C((uint64_t)v13);
    v22 = sub_1D4922358();
    v23 = sub_1D492291C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1D467C000, v22, v23, a5, v24, 2u);
      MEMORY[0x1D82635B8](v24, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
    return 0;
  }
  return v21;
}

uint64_t sub_1D47EFE3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v2 = MEMORY[0x1E0DEE9E0];
  v3 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(63 - v4) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  if (!v6)
    goto LABEL_8;
LABEL_5:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v10 = v9 | (v8 << 6);
  while (1)
  {
    if (*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v10))
    {
      v15 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + v10);
      v16 = *(_QWORD *)(v2 + 16);
      if (*(_QWORD *)(v2 + 24) <= v16)
      {
        v17 = v16 + 1;
        swift_retain_n();
        sub_1D47A8AEC(v17, 1);
      }
      else
      {
        swift_retain_n();
      }
      sub_1D4922EF8();
      __asm { BR              X8 }
    }
    if (v6)
      goto LABEL_5;
LABEL_8:
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      JUMPOUT(0x1D47F01E8);
    }
    if (v11 >= v7)
      goto LABEL_28;
    v12 = *(_QWORD *)(v3 + 8 * v11);
    v13 = v8 + 1;
    if (!v12)
    {
      v13 = v8 + 2;
      if (v8 + 2 >= v7)
        goto LABEL_28;
      v12 = *(_QWORD *)(v3 + 8 * v13);
      if (!v12)
      {
        v13 = v8 + 3;
        if (v8 + 3 >= v7)
          goto LABEL_28;
        v12 = *(_QWORD *)(v3 + 8 * v13);
        if (!v12)
        {
          v13 = v8 + 4;
          if (v8 + 4 >= v7)
            goto LABEL_28;
          v12 = *(_QWORD *)(v3 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v8 = v13;
  }
  v14 = v8 + 5;
  if (v8 + 5 >= v7)
    goto LABEL_28;
  v12 = *(_QWORD *)(v3 + 8 * v14);
  if (v12)
  {
    v13 = v8 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      JUMPOUT(0x1D47F01F0);
    }
    if (v13 >= v7)
      break;
    v12 = *(_QWORD *)(v3 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_23;
  }
LABEL_28:
  sub_1D46BE038();
  return v2;
}

uint64_t sub_1D47F020C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D47F0250(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1D47F0320(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1D4696FAC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1D4696FAC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1D47F0320(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1D4922A84();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1D47F04D8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1D4922BC8();
  if (!v8)
  {
    sub_1D4922C28();
    __break(1u);
LABEL_17:
    result = sub_1D4922C88();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1D47F04D8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1D47F056C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1D47F06E0(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1D47F06E0(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1D47F056C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1D46BC1D4(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1D4922B8C();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1D4922C28();
      __break(1u);
LABEL_10:
      v2 = sub_1D4922730();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1D4922C88();
    __break(1u);
LABEL_14:
    result = sub_1D4922C28();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1D47F06E0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98ECD0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1D4922C88();
  __break(1u);
  return result;
}

uint64_t sub_1D47F082C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1D4922688();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D47F087C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  _UNKNOWN **v61;

  v55 = a4;
  v9 = sub_1D4922370();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v56 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D4920F18();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_1D4921EA8();
  v61 = &off_1E97FE490;
  *(_QWORD *)&v59 = a5;
  sub_1D4920EA0();
  swift_bridgeObjectRelease();
  v16 = sub_1D4920F24();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1D4920E4C();
  swift_allocObject();
  sub_1D4920E40();
  sub_1D47F38B4();
  sub_1D4920E34();
  v29 = v58;
  if (*(_QWORD *)(v58 + 16) && (v30 = sub_1D47CA4DC(5459817, 0xE300000000000000), (v31 & 1) != 0))
  {
    v32 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v30);
    swift_bridgeObjectRetain();
  }
  else
  {
    v32 = MEMORY[0x1E0DEE9D8];
  }
  swift_release();
  result = swift_bridgeObjectRelease();
  v58 = MEMORY[0x1E0DEE9E8];
  v33 = *(_QWORD *)(v32 + 16);
  if (v33)
  {
    v48 = v16;
    v49 = v18;
    v50 = v10;
    v51 = a3;
    v54 = v9;
    v34 = 0;
    v35 = 0;
    v36 = -v33;
    v37 = v32 + 40;
    v53 = 0x80000001D49454F0;
LABEL_12:
    v52 = v34;
    v38 = v37;
    v39 = (uint64_t *)(v37 + 16 * v35++);
    while ((unint64_t)(v35 - 1) < *(_QWORD *)(v32 + 16))
    {
      v42 = *(v39 - 1);
      v41 = *v39;
      swift_bridgeObjectRetain_n();
      v43 = sub_1D46F9314();
      if (v43 == 26)
      {
        if (v42 == 0xD000000000000010 && v41 == v53)
        {
          result = swift_bridgeObjectRelease();
LABEL_22:
          v34 = 1;
          v37 = v38;
          if (v36 + v35)
            goto LABEL_12;
          sub_1D4696F10(v48, v49);
          swift_bridgeObjectRelease();
          v10 = v50;
          a3 = v51;
          v9 = v54;
          v45 = (uint64_t)v56;
LABEL_25:
          swift_bridgeObjectRelease();
          a6[2] = 0;
          goto LABEL_2;
        }
        v44 = sub_1D4922E38();
        result = swift_bridgeObjectRelease();
        if ((v44 & 1) != 0)
          goto LABEL_22;
      }
      else
      {
        v40 = v43;
        swift_bridgeObjectRelease();
        result = sub_1D47CCAF0(&v57, v40);
      }
      ++v35;
      v39 += 2;
      if (v36 + v35 == 1)
      {
        sub_1D4696F10(v48, v49);
        swift_bridgeObjectRelease();
        v46 = v58;
        v10 = v50;
        a3 = v51;
        v9 = v54;
        v45 = (uint64_t)v56;
        if ((v52 & 1) == 0)
          goto LABEL_27;
        goto LABEL_25;
      }
    }
    __break(1u);
  }
  else
  {
    sub_1D4696F10(v16, v18);
    swift_bridgeObjectRelease();
    v46 = MEMORY[0x1E0DEE9E8];
    v45 = (uint64_t)v56;
LABEL_27:
    if (*(_QWORD *)(v46 + 16))
    {
      a6[2] = v46;
    }
    else
    {
      swift_bridgeObjectRelease();
      a6[2] = 1;
    }
LABEL_2:
    sub_1D470C76C(v45);
    swift_retain_n();
    v19 = sub_1D4922358();
    v20 = sub_1D4922910();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v54 = v9;
      v23 = a3;
      v24 = v22;
      v58 = v22;
      *(_DWORD *)v21 = 136315138;
      v25 = sub_1D46D2DC8(a6[2]);
      v57 = sub_1D47F0250(v25, v26, &v58);
      sub_1D4922A78();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D467C000, v19, v20, "Domains from Trial: %s", v21, 0xCu);
      swift_arrayDestroy();
      v27 = v24;
      a3 = v23;
      MEMORY[0x1D82635B8](v27, -1, -1);
      MEMORY[0x1D82635B8](v21, -1, -1);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v56, v54);
    }
    else
    {

      swift_release_n();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v45, v9);
    }
    a6[3] = v55;
    a6[4] = a3;
    sub_1D46B2A10(&v59, (uint64_t)(a6 + 5));
    return (uint64_t)a6;
  }
  return result;
}

uint64_t *sub_1D47F0DA4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  void (*v17)(uint64_t, uint64_t);
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  __int128 v41[7];
  _QWORD v42[6];

  v39 = *a5;
  v40 = a3;
  v9 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for VisualIntelligenceModelProviderService();
  v42[3] = v12;
  v42[4] = &off_1E97FF310;
  v42[0] = a2;
  *((_BYTE *)a5 + 16) = a1;
  a5[18] = a4;
  __swift_project_boxed_opaque_existential_1(v42, v12);
  swift_bridgeObjectRetain();
  v13 = sub_1D4751360(0);
  v15 = v14;
  if (v13)
  {
    ObjectType = swift_getObjectType();
    v17 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    swift_unknownObjectRetain();
    v17(ObjectType, v15);
    swift_unknownObjectRelease();
    sub_1D47E9968((uint64_t)v41);
    sub_1D4697DE0((uint64_t)v11, type metadata accessor for MLModelInfo);
    v18 = v41[0];
    v19 = v41[1];
    v20 = v41[2];
    v21 = v41[3];
    v22 = v41[4];
    v23 = v41[5];
    v24 = v41[6];
  }
  else
  {
    v18 = 0uLL;
    v19 = 0uLL;
    v20 = 0uLL;
    v21 = 0uLL;
    v22 = 0uLL;
    v23 = 0uLL;
    v24 = 0uLL;
  }
  *(_OWORD *)(a5 + 3) = v18;
  *(_OWORD *)(a5 + 5) = v19;
  *(_OWORD *)(a5 + 7) = v20;
  *(_OWORD *)(a5 + 9) = v21;
  *(_OWORD *)(a5 + 11) = v22;
  *(_OWORD *)(a5 + 13) = v23;
  *(_OWORD *)(a5 + 15) = v24;
  if (v13)
  {
    v25 = swift_getObjectType();
    v26 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    swift_unknownObjectRetain();
    v26(v25, v15);
    swift_unknownObjectRelease();
    v27 = &v11[*(int *)(v9 + 24)];
    v29 = *(_QWORD *)v27;
    v28 = *((_QWORD *)v27 + 1);
    swift_bridgeObjectRetain();
    sub_1D4697DE0((uint64_t)v11, type metadata accessor for MLModelInfo);
    a5[20] = v29;
    a5[21] = v28;
    LOBYTE(v41[0]) = a1;
    v30 = swift_getObjectType();
    swift_unknownObjectRetain();
    v26(v30, v15);
    v31 = swift_allocObject();
    *(_QWORD *)(v31 + 16) = v13;
    *(_QWORD *)(v31 + 24) = v15;
    type metadata accessor for CachedCoreMLModelProvider();
    swift_allocObject();
    v32 = sub_1D483F304((char *)v41, (uint64_t)v11, 4, 0, (uint64_t)sub_1D47F3970, v31);
    swift_release();
  }
  else
  {
    v32 = 0;
    a5[20] = 0;
    a5[21] = 0;
  }
  a5[17] = (uint64_t)v32;
  sub_1D46AAF28((uint64_t)v42, (uint64_t)v41);
  v33 = (_QWORD *)swift_allocObject();
  v33[2] = a4;
  sub_1D46B2A10(v41, (uint64_t)(v33 + 3));
  v34 = v39;
  v33[8] = v40;
  v33[9] = v34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E498);
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 24) = 0;
  *(_BYTE *)(v35 + 32) = -1;
  *(_QWORD *)(v35 + 56) = 0;
  *(_QWORD *)(v35 + 64) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB70);
  v36 = swift_allocObject();
  *(_DWORD *)(v36 + 16) = 0;
  *(_QWORD *)(v35 + 80) = v36;
  *(_QWORD *)(v35 + 40) = sub_1D47F392C;
  *(_QWORD *)(v35 + 48) = v33;
  swift_retain();
  swift_retain();
  sub_1D46A56B4(0);
  *(_QWORD *)(v35 + 72) = 8;
  swift_release();
  v37 = sub_1D4835CD8();
  swift_unknownObjectRelease();
  swift_release();
  a5[19] = v37;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  return a5;
}

_QWORD *sub_1D47F1104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  uint64_t v34;
  _QWORD v35[5];

  v32 = sub_1D4922370();
  v10 = *(_QWORD *)(v32 - 8);
  v11 = MEMORY[0x1E0C80A78](v32);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v31 - v14;
  v16 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for VisualIntelligenceModelProviderService();
  v35[3] = v19;
  v35[4] = &off_1E97FF310;
  v35[0] = a2;
  a5[3] = a4;
  a5[4] = a3;
  a5[2] = a1;
  __swift_project_boxed_opaque_existential_1(v35, v19);
  swift_retain();
  swift_retain();
  if (sub_1D4751360(1))
  {
    v21 = v20;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(ObjectType, v21);
    type metadata accessor for DomainPredictionNet();
    swift_allocObject();
    v23 = sub_1D46D9A74((uint64_t)v18, 8, 0);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1D470C76C((uint64_t)v15);
    v24 = sub_1D4922358();
    v25 = sub_1D492291C();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_1D467C000, v24, v25, "DomainPredictionModel cannot be not initialized.", v26, 2u);
      MEMORY[0x1D82635B8](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v32);
    v23 = 0;
  }
  a5[5] = v23;
  type metadata accessor for DomainPredictionNet();
  sub_1D46D9E98((uint64_t)v33);
  sub_1D46B3464((uint64_t)v33, (uint64_t)(a5 + 6), (uint64_t *)&unk_1ED98DBD0);
  sub_1D469C5EC((uint64_t)(a5 + 6), (uint64_t)v33, (uint64_t *)&unk_1ED98DBD0);
  if (v34)
  {
    swift_release();
    swift_release();
    sub_1D46992EC((uint64_t)v33, (uint64_t *)&unk_1ED98DBD0);
  }
  else
  {
    sub_1D46992EC((uint64_t)v33, (uint64_t *)&unk_1ED98DBD0);
    sub_1D470C76C((uint64_t)v13);
    v27 = sub_1D4922358();
    v28 = sub_1D492291C();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v29 = 0;
      _os_log_impl(&dword_1D467C000, v27, v28, "domainPredictionNetHandler cannot be not initialized.", v29, 2u);
      MEMORY[0x1D82635B8](v29, -1, -1);
    }
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v32);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return a5;
}

_QWORD *sub_1D47F1434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, char *a10, _QWORD *a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  float v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  float *v55;
  float v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  float v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned int (*v89)(char *, uint64_t, uint64_t);
  float *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  _QWORD v104[5];
  uint64_t v105[5];
  uint64_t v106;
  uint64_t v107;
  _UNKNOWN **v108;

  v103 = a8;
  v102 = a7;
  LODWORD(v101) = a5;
  v100 = a4;
  v99 = type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0);
  MEMORY[0x1E0C80A78](v99);
  v96 = (uint64_t)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DFD0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v93 = (uint64_t)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v92 = (uint64_t)&v89 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v91 = (uint64_t)&v89 - v22;
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v89 - v23;
  v25 = type metadata accessor for Argos_Protos_Queryflow_BoxScorerConfig(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x1E0C80A78](v25);
  v95 = (char *)&v89 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x1E0C80A78](v27);
  v90 = (float *)((char *)&v89 - v30);
  v31 = MEMORY[0x1E0C80A78](v29);
  v33 = (char *)&v89 - v32;
  MEMORY[0x1E0C80A78](v31);
  v35 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)&v89 - v34);
  v107 = type metadata accessor for VisualIntelligenceModelProviderService();
  v108 = &off_1E97FF310;
  v94 = v107;
  v106 = a1;
  sub_1D46AAF28((uint64_t)&v106, (uint64_t)a11 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_modelProviderService);
  v36 = a2;
  *(_QWORD *)((char *)a11 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_objectDetector) = a2;
  sub_1D469C304(a6, (uint64_t)a11 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_config, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  v37 = a3;
  v38 = v100;
  a11[11] = a3;
  a11[12] = v38;
  *(_QWORD *)((char *)a11 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_queue) = v102;
  *(_QWORD *)((char *)a11 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_trialWrapper) = v103;
  *((_BYTE *)a11 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_mlEngineType) = v101;
  v39 = *(int *)(v99 + 20);
  v99 = a6;
  v101 = v39;
  v40 = *(_QWORD *)(a6 + v39)
      + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__boxScorerConfig;
  swift_beginAccess();
  sub_1D469C5EC(v40, (uint64_t)v24, &qword_1ED98DFD0);
  v89 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  v41 = v89(v24, 1, v25);
  v98 = v37;
  v97 = v36;
  if (v41 == 1)
  {
    *v35 = 0;
    v35[1] = 0;
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = v102;
    swift_retain();
    sub_1D4922010();
    sub_1D46992EC((uint64_t)v24, &qword_1ED98DFD0);
  }
  else
  {
    sub_1D469C630((uint64_t)v24, (uint64_t)v35, type metadata accessor for Argos_Protos_Queryflow_BoxScorerConfig);
    swift_retain();
    swift_retain();
    swift_retain();
    v43 = v102;
    swift_retain();
  }
  v44 = *(int *)v35;
  sub_1D4697DE0((uint64_t)v35, type metadata accessor for Argos_Protos_Queryflow_BoxScorerConfig);
  v45 = v99;
  v46 = *(_QWORD *)(v99 + v101)
      + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__boxScorerConfig;
  swift_beginAccess();
  v47 = v46;
  v48 = v91;
  sub_1D469C5EC(v47, v91, &qword_1ED98DFD0);
  v49 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v89;
  if (v89((char *)v48, 1, v25) == 1)
  {
    *(_QWORD *)v33 = 0;
    *((_QWORD *)v33 + 1) = 0;
    sub_1D4922010();
    sub_1D46992EC(v48, &qword_1ED98DFD0);
  }
  else
  {
    sub_1D469C630(v48, (uint64_t)v33, type metadata accessor for Argos_Protos_Queryflow_BoxScorerConfig);
  }
  v50 = (uint64_t)v95;
  v95 = a10;
  v51 = *((float *)v33 + 1);
  sub_1D4697DE0((uint64_t)v33, type metadata accessor for Argos_Protos_Queryflow_BoxScorerConfig);
  v52 = *(_QWORD *)(v45 + v101)
      + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__boxScorerConfig;
  swift_beginAccess();
  v53 = v52;
  v54 = v92;
  sub_1D469C5EC(v53, v92, &qword_1ED98DFD0);
  if (v49(v54, 1, v25) == 1)
  {
    v55 = v90;
    *(_QWORD *)v90 = 0;
    *((_QWORD *)v55 + 1) = 0;
    sub_1D4922010();
    sub_1D46992EC(v54, &qword_1ED98DFD0);
  }
  else
  {
    v55 = v90;
    sub_1D469C630(v54, (uint64_t)v90, type metadata accessor for Argos_Protos_Queryflow_BoxScorerConfig);
  }
  v56 = v55[2];
  sub_1D4697DE0((uint64_t)v55, type metadata accessor for Argos_Protos_Queryflow_BoxScorerConfig);
  v57 = *(_QWORD *)(v45 + v101)
      + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__boxScorerConfig;
  swift_beginAccess();
  v58 = v57;
  v59 = v93;
  sub_1D469C5EC(v58, v93, &qword_1ED98DFD0);
  if (v49(v59, 1, v25) == 1)
  {
    *(_QWORD *)v50 = 0;
    *(_QWORD *)(v50 + 8) = 0;
    sub_1D4922010();
    sub_1D46992EC(v59, &qword_1ED98DFD0);
  }
  else
  {
    sub_1D469C630(v59, v50, type metadata accessor for Argos_Protos_Queryflow_BoxScorerConfig);
  }
  v60 = *(float *)(v50 + 12);
  sub_1D4697DE0(v50, type metadata accessor for Argos_Protos_Queryflow_BoxScorerConfig);
  type metadata accessor for BoxScorer();
  swift_allocObject();
  v61 = sub_1D47E39E8(v44, v51, v56, v60);
  sub_1D46AAF28((uint64_t)&v106, (uint64_t)v105);
  v62 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v105, v105[3]);
  MEMORY[0x1E0C80A78](v62);
  v64 = (uint64_t *)((char *)&v89 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v65 + 16))(v64);
  v66 = *v64;
  v104[4] = &off_1E97FF310;
  v67 = v94;
  v104[3] = v94;
  v104[0] = v66;
  type metadata accessor for TriggeringModelProcessor();
  v68 = (_QWORD *)swift_allocObject();
  v69 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v104, v67);
  MEMORY[0x1E0C80A78](v69);
  v71 = (uint64_t *)((char *)&v89 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v72 + 16))(v71);
  v73 = *v71;
  v74 = v97;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v75 = sub_1D47F1104(v74, v73, a9, v61, v68);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v104);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v105);
  a11[2] = v75;
  v105[0] = a9;
  v76 = v96;
  sub_1D469C304(v45, v96, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  type metadata accessor for DomainAssignmentProcessor();
  swift_allocObject();
  v77 = v103;
  swift_retain();
  swift_bridgeObjectRetain();
  a11[3] = sub_1D4798ABC(v105, v77, v76);
  sub_1D469C304(v45, v76, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  type metadata accessor for RegionMergingProcessor();
  v78 = swift_allocObject();
  *(_QWORD *)(v78 + OBJC_IVAR____TtC18VisualIntelligence22RegionMergingProcessor_boxScorer) = v61;
  sub_1D469C630(v76, v78 + OBJC_IVAR____TtC18VisualIntelligence22RegionMergingProcessor_config, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  a11[4] = v78;
  sub_1D469C304(v45, v76, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  type metadata accessor for RegionGroupingProcessor();
  v79 = swift_allocObject();
  *(_QWORD *)(v79 + OBJC_IVAR____TtC18VisualIntelligence23RegionGroupingProcessor_boxScorer) = v61;
  sub_1D469C630(v76, v79 + OBJC_IVAR____TtC18VisualIntelligence23RegionGroupingProcessor_config, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  a11[6] = v79;
  type metadata accessor for RegionSelectionProcessor();
  v80 = swift_allocObject();
  *(_QWORD *)(v80 + 16) = a9;
  a11[5] = v80;
  type metadata accessor for TriggeringPredictionProcessor();
  a11[7] = swift_allocObject();
  type metadata accessor for AnnotationExtractorProcessor();
  a11[8] = swift_allocObject();
  type metadata accessor for NSFWCheckerProcessor();
  swift_allocObject();
  swift_retain_n();
  swift_bridgeObjectRetain();
  a11[9] = sub_1D46C41FC();
  v105[0] = a9;
  sub_1D469C304(v45, v76, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  type metadata accessor for DomainSelectionProcessor();
  swift_allocObject();
  swift_retain();
  v81 = swift_retain();
  v82 = sub_1D4712024(v81, v77, v105, v76);
  swift_release();
  swift_release();
  a11[10] = v82;
  v83 = sub_1D48BEE58(5, 0, 0x7473696C70, 0xE500000000000000);
  v85 = v84;
  type metadata accessor for VisualDomainGlyphManager();
  swift_initStackObject();
  v86 = sub_1D48B7C18(v83, v85);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  sub_1D4697DE0(v45, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v106);
  v87 = *(_QWORD *)(v86 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  *(_QWORD *)((char *)a11 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_domainGlyphConfig) = v87;
  return a11;
}

uint64_t _s18VisualIntelligence0aB7ServiceC14serviceOptionsA2C0E0V_tcfC_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v36 = a1;
  v39 = type metadata accessor for VisualIntelligenceService.Options(0);
  MEMORY[0x1E0C80A78](v39);
  v40 = (uint64_t)&v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D550);
  MEMORY[0x1E0C80A78](v2);
  v38 = (uint64_t)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  MEMORY[0x1E0C80A78](v4);
  v37 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D473117C();
  type metadata accessor for TrialWrapper();
  swift_allocObject();
  v10 = sub_1D48BEC44((v9 & 1) == 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D3A8);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1D4927B00;
  v12 = type metadata accessor for AvailabilityChecker();
  v13 = swift_allocObject();
  *(_QWORD *)(v11 + 56) = v12;
  *(_QWORD *)(v11 + 64) = &off_1E9802070;
  *(_QWORD *)(v11 + 32) = v13;
  v14 = type metadata accessor for ImageSizeChecker();
  v15 = swift_allocObject();
  *(_QWORD *)(v11 + 96) = v14;
  *(_QWORD *)(v11 + 104) = &off_1E9801880;
  *(_QWORD *)(v11 + 72) = v15;
  v35 = v10;
  v16 = sub_1D48BEE58(13, 0, 0x7478746270, 0xE500000000000000);
  sub_1D46C2B28(v16, v17, (uint64_t)v8);
  swift_bridgeObjectRelease();
  type metadata accessor for EligibilityChecker();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v11;
  sub_1D469C630((uint64_t)v8, v18 + OBJC_IVAR____TtC18VisualIntelligence18EligibilityChecker_config, type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1D49273C0;
  v20 = swift_allocObject();
  *(_QWORD *)(v19 + 56) = v12;
  *(_QWORD *)(v19 + 64) = &off_1E9802070;
  *(_QWORD *)(v19 + 32) = v20;
  v21 = sub_1D48BEE58(13, 0, 0x7478746270, 0xE500000000000000);
  sub_1D46C2B28(v21, v22, (uint64_t)v8);
  swift_bridgeObjectRelease();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v19;
  sub_1D469C630((uint64_t)v8, v23 + OBJC_IVAR____TtC18VisualIntelligence18EligibilityChecker_config, type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig);
  v24 = v36;
  v25 = v37;
  sub_1D469C5EC(v36, v37, &qword_1ED98CAF0);
  v27 = v38;
  v26 = v39;
  sub_1D469C5EC(v24 + *(int *)(v39 + 20), v38, (uint64_t *)&unk_1ED98D550);
  v28 = (uint64_t *)(v24 + *(int *)(v26 + 24));
  v29 = *v28;
  v30 = v28[1];
  type metadata accessor for NetworkService(0);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v31 = sub_1D4789800(v25, v27, v29, v30);
  v32 = v40;
  sub_1D469C304(v24, v40, type metadata accessor for VisualIntelligenceService.Options);
  type metadata accessor for VisualIntelligenceService(0);
  v33 = swift_allocObject();
  sub_1D47EA3C4(v31, v32, v18, v23, v35);
  sub_1D4697DE0(v24, type metadata accessor for VisualIntelligenceService.Options);
  return v33;
}

uint64_t sub_1D47F22A0()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D47F22FC()
{
  uint64_t v0;

  return sub_1D47EC058(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(void **)(v0 + 88), *(void **)(v0 + 96), *(void (**)(__int128 *))(v0 + 104), *(double *)(v0 + 40), *(double *)(v0 + 48), *(double *)(v0 + 56), *(double *)(v0 + 64), *(_QWORD *)(v0 + 112));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_1D47F2350()
{
  id *v0;

  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D47F23A4()
{
  uint64_t v0;

  return sub_1D47ED338(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 64), *(void **)(v0 + 72), *(void **)(v0 + 80), *(void **)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48), *(double *)(v0 + 56));
}

void sub_1D47F23C0(uint64_t a1, void (*a2)(_BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[216];
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _OWORD v34[11];
  __int128 v35;
  __int128 v36;
  _OWORD v37[14];

  v4 = type metadata accessor for VisualSearchResultInternal(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB9E0);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1D469C5EC(a1, (uint64_t)v9, &qword_1EFEAB9E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_QWORD *)&v37[0] = *v9;
    v10 = *(void **)&v37[0];
    sub_1D47F35E8((uint64_t)v37);
    sub_1D46B3464((uint64_t)v37, (uint64_t)v21, &qword_1EFEAB978);
    v11 = v10;
    a2(v21);

  }
  else
  {
    sub_1D469C630((uint64_t)v9, (uint64_t)v6, type metadata accessor for VisualSearchResultInternal);
    v12 = *((_QWORD *)v6 + 23);
    v33 = *((_QWORD *)v6 + 22);
    v13 = *((_OWORD *)v6 + 9);
    v30 = *((_OWORD *)v6 + 8);
    v31 = v13;
    v32 = *((_OWORD *)v6 + 10);
    v14 = *((_OWORD *)v6 + 5);
    v26 = *((_OWORD *)v6 + 4);
    v27 = v14;
    v15 = *((_OWORD *)v6 + 7);
    v28 = *((_OWORD *)v6 + 6);
    v29 = v15;
    v16 = *((_OWORD *)v6 + 1);
    v22 = *(_OWORD *)v6;
    v23 = v16;
    v17 = *((_OWORD *)v6 + 3);
    v24 = *((_OWORD *)v6 + 2);
    v25 = v17;
    sub_1D46B2E18((uint64_t)&v22);
    swift_bridgeObjectRetain();
    v18 = sub_1D46E5194();
    v34[8] = v30;
    v34[9] = v31;
    v34[10] = v32;
    v34[4] = v26;
    v34[5] = v27;
    v34[6] = v28;
    v34[7] = v29;
    v34[0] = v22;
    v34[1] = v23;
    v34[2] = v24;
    v34[3] = v25;
    *(_QWORD *)&v35 = v33;
    *((_QWORD *)&v35 + 1) = v12;
    *(_QWORD *)&v36 = v18;
    *((_QWORD *)&v36 + 1) = v19;
    v37[6] = v28;
    v37[7] = v29;
    v37[8] = v30;
    v37[9] = v31;
    v37[2] = v24;
    v37[3] = v25;
    v37[4] = v26;
    v37[5] = v27;
    v37[0] = v22;
    v37[1] = v23;
    v37[10] = v32;
    v37[11] = v35;
    v37[12] = v36;
    sub_1D47DD69C((uint64_t)v37);
    sub_1D46B3464((uint64_t)v37, (uint64_t)v21, &qword_1EFEAB978);
    a2(v21);
    sub_1D47DC9CC(v34);
    sub_1D4697DE0((uint64_t)v6, type metadata accessor for VisualSearchResultInternal);
  }
}

uint64_t sub_1D47F2618(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  void *v19;
  uint64_t *v20;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v8 = sub_1D4922370();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D470C76C((uint64_t)v11);
  swift_bridgeObjectRetain_n();
  v12 = sub_1D4922358();
  v13 = sub_1D492291C();
  if (os_log_type_enabled(v12, v13))
  {
    v24 = a4;
    v14 = swift_slowAlloc();
    v25 = a3;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc();
    v23 = v9;
    v17 = v16;
    v27 = v16;
    v22 = v8;
    *(_DWORD *)v15 = 136315138;
    swift_bridgeObjectRetain();
    v26 = sub_1D47F0250(a1, a2, &v27);
    a4 = v24;
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D467C000, v12, v13, "submitUserFeedback failed with error: %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v17, -1, -1);
    v18 = v15;
    a3 = v25;
    MEMORY[0x1D82635B8](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v22);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  sub_1D484C994();
  sub_1D47F3568();
  v19 = (void *)swift_allocError();
  *v20 = a1;
  v20[1] = a2;
  swift_bridgeObjectRetain();
  a4(v19);

  return a3;
}

uint64_t sub_1D47F2850()
{
  uint64_t v0;
  unint64_t v1;

  swift_release();
  swift_bridgeObjectRelease();
  sub_1D4696F10(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  swift_unknownObjectRelease();
  v1 = *(_QWORD *)(v0 + 104);
  if (v1 >> 60 != 15)
    sub_1D4696F10(*(_QWORD *)(v0 + 96), v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1D47F28B4()
{
  uint64_t v0;

  sub_1D47EEB30(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(void **)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(void **)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
}

ValueMetadata *type metadata accessor for VisualIntelligenceServiceError()
{
  return &type metadata for VisualIntelligenceServiceError;
}

uint64_t sub_1D47F290C()
{
  return type metadata accessor for VisualIntelligenceService(0);
}

uint64_t type metadata accessor for VisualIntelligenceService(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98EFB8);
}

uint64_t sub_1D47F2928()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for Argos_Protos_Queryflow_ParseConfig(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig();
      if (v3 <= 0x3F)
        return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for VisualIntelligenceService()
{
  return swift_lookUpClassMethod();
}

uint64_t *initializeBufferWithCopyOfBuffer for VisualIntelligenceService.Options(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D4920F18();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_1D4922460();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D550);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v17 = a3[6];
    v18 = a3[7];
    v19 = (uint64_t *)((char *)a1 + v17);
    v20 = (uint64_t *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    *((_BYTE *)a1 + v18) = *((_BYTE *)a2 + v18);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for VisualIntelligenceService.Options(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_1D4920F18();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  v7 = sub_1D4922460();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for VisualIntelligenceService.Options(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = sub_1D4920F18();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1D4922460();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D550);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[6];
  v16 = a3[7];
  v17 = &a1[v15];
  v18 = &a2[v15];
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = v19;
  a1[v16] = a2[v16];
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for VisualIntelligenceService.Options(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;

  v6 = sub_1D4920F18();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_1D4922460();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D550);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_13:
  v21 = a3[6];
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *initializeWithTake for VisualIntelligenceService.Options(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1D4920F18();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1D4922460();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D550);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  a1[v15] = a2[v15];
  return a1;
}

char *assignWithTake for VisualIntelligenceService.Options(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_1D4920F18();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_1D4922460();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D550);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_13:
  v21 = a3[6];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v25 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualIntelligenceService.Options()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D47F3304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D550);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for VisualIntelligenceService.Options()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D47F33D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D550);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

void sub_1D47F3480()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D46EA3B0(319, (unint64_t *)&qword_1ED98CB28, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
  {
    sub_1D46EA3B0(319, &qword_1ED98D560, (void (*)(uint64_t))MEMORY[0x1E0DEF4A8]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1D47F3538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1D47F3568()
{
  unint64_t result;

  result = qword_1EFEAB9B8;
  if (!qword_1EFEAB9B8)
  {
    result = MEMORY[0x1D82634E0](&protocol conformance descriptor for VisualIntelligenceServiceError, &type metadata for VisualIntelligenceServiceError);
    atomic_store(result, (unint64_t *)&qword_1EFEAB9B8);
  }
  return result;
}

uint64_t sub_1D47F35AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D47F35D0(void *a1)
{
  uint64_t v1;

  return sub_1D47EF79C(a1, *(uint64_t (**)(void *))(v1 + 16));
}

uint64_t sub_1D47F35DC(uint64_t a1)
{
  return sub_1D47F37F8(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD))sub_1D47ED464);
}

uint64_t sub_1D47F35E8(uint64_t result)
{
  *(_BYTE *)(result + 208) = 1;
  return result;
}

uint64_t sub_1D47F35F4(uint64_t a1)
{
  uint64_t v1;

  return sub_1D47EE2B8(a1, *(void (**)(_BYTE *))(v1 + 16));
}

void sub_1D47F35FC(uint64_t a1)
{
  uint64_t v1;

  sub_1D47F23C0(a1, *(void (**)(_BYTE *))(v1 + 16));
}

uint64_t sub_1D47F3614(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 208);
}

uint64_t sub_1D47F361C(uint64_t a1)
{
  sub_1D47F368C(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_BYTE *)(a1 + 208));
  return a1;
}

void sub_1D47F368C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unint64_t a26,char a27)
{
  if ((a27 & 1) != 0)
  {

  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1D46B3590(a2);
    swift_bridgeObjectRelease();
    sub_1D46B2C64(a20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D46AA1F0(a25, a26);
  }
}

uint64_t objectdestroy_20Tm()
{
  id *v0;

  swift_release();
  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D47F37EC(uint64_t a1)
{
  return sub_1D47F37F8(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD))sub_1D47EC7BC);
}

uint64_t sub_1D47F37F8(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(v2[3], v2[4], v2[5], v2[6], a1, v2[7], v2[8]);
}

uint64_t sub_1D47F3830()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1D47F385C(uint64_t a1)
{
  uint64_t v1;

  sub_1D47F23C0(a1, *(void (**)(_BYTE *))(v1 + 24));
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1D47F389C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D487ADF4(a1);
}

unint64_t sub_1D47F38B4()
{
  unint64_t result;

  result = qword_1ED98CD58;
  if (!qword_1ED98CD58)
  {
    result = MEMORY[0x1D82634E0](&unk_1D49281B0, &type metadata for WeakAvailabilityConfig);
    atomic_store(result, (unint64_t *)&qword_1ED98CD58);
  }
  return result;
}

uint64_t sub_1D47F38F8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocObject();
}

NSObject *sub_1D47F392C@<X0>(NSObject **a1@<X8>)
{
  uint64_t *v1;

  return sub_1D477FF8C(v1[2], v1 + 3, v1[8], a1);
}

uint64_t sub_1D47F394C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D47F3970(void *a1)
{
  uint64_t v1;

  return sub_1D477FCD8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1D47F3978()
{
  unint64_t result;

  result = qword_1ED98CDB0;
  if (!qword_1ED98CDB0)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4936224, &type metadata for ObjectDetectionModelInfo);
    atomic_store(result, (unint64_t *)&qword_1ED98CDB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for InstanceCounter()
{
  return &type metadata for InstanceCounter;
}

uint64_t sub_1D47F39F4(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v8 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
    v9 = v7 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_1D492201C();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    *(_BYTE *)(v7 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v14 = v7 + v13;
    v15 = (uint64_t)a2 + v13;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
    *(_QWORD *)(v7 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1D47F3AE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
  v3 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D47F3B44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D492201C();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D47F3C08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = v13;
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D47F3CD8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1D47F3D84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D47F3E40()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D47F3E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1D47F3EC8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D47F3ED4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for BoxScoreDomainAssignmentRule()
{
  uint64_t result;

  result = qword_1ED98DCA0;
  if (!qword_1ED98DCA0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D47F3F88()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D47F4010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _BYTE *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _BYTE *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  CGFloat v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  uint64_t v34;
  CGFloat v35;
  uint64_t v36;
  unint64_t v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  CGFloat v53;
  CGFloat v54;
  CGFloat v55;
  CGFloat v56;
  uint64_t v57;
  CGFloat MinX;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  CGFloat MinY;
  CGFloat Width;
  CGFloat Height;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unsigned __int8 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  __int128 v74;
  __int128 v75;
  _QWORD v76[2];
  char *v77;
  double *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _OWORD v83[8];
  _OWORD v84[2];
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  _OWORD v93[2];
  _OWORD v94[8];
  _OWORD v95[2];
  _OWORD v96[3];
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  _OWORD v102[2];
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  _OWORD v111[2];
  _BYTE v112[176];
  CGRect v113;
  CGRect v114;
  CGRect v115;
  CGRect v116;
  CGRect v117;
  CGRect v118;
  CGRect v119;
  CGRect v120;

  v7 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v8 = MEMORY[0x1E0C80A78](v7);
  v78 = (double *)((char *)v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v11 = (double *)((char *)v76 - v10);
  v80 = type metadata accessor for BoxScoreDomainAssignmentRule();
  v12 = MEMORY[0x1E0C80A78](v80);
  v14 = (char *)v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v76 - v15;
  v17 = sub_1D4922370();
  v81 = *(_QWORD *)(v17 - 8);
  v82 = v17;
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)v76 - v21;
  sub_1D46A4760(a1, (uint64_t)v112);
  v23 = *(_QWORD *)v3;
  if (!*(_QWORD *)(*(_QWORD *)v3 + 16))
  {
    v44 = a3;
LABEL_8:
    sub_1D46A4760((uint64_t)v112, v44);
    return sub_1D46C6AE4((uint64_t)v112, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6A64);
  }
  v79 = a3;
  if ((sub_1D47F4980(v23, *(float *)(a2 + 68)) & 1) == 0)
  {
    v44 = v79;
    goto LABEL_8;
  }
  v24 = v3;
  if (v3[8] != 1)
  {
    sub_1D46C6AE4((uint64_t)v112, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6A64);
    sub_1D470C76C((uint64_t)v20);
    sub_1D469C304((uint64_t)v3, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for BoxScoreDomainAssignmentRule);
    v46 = v78;
    sub_1D469C304(a2, (uint64_t)v78, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v47 = sub_1D4922358();
    v48 = sub_1D4922910();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = swift_slowAlloc();
      v50 = swift_slowAlloc();
      *(_QWORD *)&v103 = v50;
      *(_DWORD *)v49 = 136315394;
      v51 = sub_1D46F8BC8(v14[*(int *)(v80 + 20)]);
      v77 = v20;
      *(_QWORD *)&v96[0] = sub_1D47F0250(v51, v52, (uint64_t *)&v103);
      v76[1] = (char *)v96 + 8;
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      sub_1D4697DE0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for BoxScoreDomainAssignmentRule);
      *(_WORD *)(v49 + 12) = 2080;
      v76[0] = v49 + 14;
      v53 = *v46;
      v54 = v46[1];
      v55 = v46[2];
      v56 = v46[3];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
      v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = xmmword_1D4927560;
      v117.origin.x = v53;
      v117.origin.y = v54;
      v117.size.width = v55;
      v117.size.height = v56;
      MinX = CGRectGetMinX(v117);
      v59 = (uint64_t)v46;
      v60 = MEMORY[0x1E0DEF040];
      *(_QWORD *)(v57 + 56) = MEMORY[0x1E0DEF040];
      v61 = sub_1D46A492C();
      *(_QWORD *)(v57 + 64) = v61;
      *(CGFloat *)(v57 + 32) = MinX;
      v118.origin.x = v53;
      v118.origin.y = v54;
      v118.size.width = v55;
      v118.size.height = v56;
      MinY = CGRectGetMinY(v118);
      *(_QWORD *)(v57 + 96) = v60;
      *(_QWORD *)(v57 + 104) = v61;
      *(CGFloat *)(v57 + 72) = MinY;
      v119.origin.x = v53;
      v119.origin.y = v54;
      v119.size.width = v55;
      v119.size.height = v56;
      Width = CGRectGetWidth(v119);
      *(_QWORD *)(v57 + 136) = v60;
      *(_QWORD *)(v57 + 144) = v61;
      *(CGFloat *)(v57 + 112) = Width;
      v120.origin.x = v53;
      v120.origin.y = v54;
      v120.size.width = v55;
      v120.size.height = v56;
      Height = CGRectGetHeight(v120);
      *(_QWORD *)(v57 + 176) = v60;
      *(_QWORD *)(v57 + 184) = v61;
      *(CGFloat *)(v57 + 152) = Height;
      v65 = sub_1D4922640();
      *(_QWORD *)&v96[0] = sub_1D47F0250(v65, v66, (uint64_t *)&v103);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      sub_1D4697DE0(v59, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      _os_log_impl(&dword_1D467C000, v47, v48, "Assign %s to region %s", (uint8_t *)v49, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v50, -1, -1);
      MEMORY[0x1D82635B8](v49, -1, -1);

      (*(void (**)(char *, uint64_t))(v81 + 8))(v77, v82);
    }
    else
    {
      sub_1D4697DE0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for BoxScoreDomainAssignmentRule);
      sub_1D4697DE0((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);

      (*(void (**)(char *, uint64_t))(v81 + 8))(v20, v82);
    }
    LOBYTE(v94[0]) = v24[*(int *)(v80 + 20)];
    v68 = v94[0];
    *(_QWORD *)&v96[0] = *(_QWORD *)&v24[*(int *)(v80 + 28)];
    sub_1D46FB5CC();
    LOBYTE(v96[0]) = v68;
    *(_OWORD *)((char *)v96 + 8) = 0u;
    *(_OWORD *)((char *)&v96[1] + 8) = 0u;
    BYTE8(v96[2]) = 0;
    v97 = 0u;
    v98 = 0u;
    v99 = v103;
    v100 = v104;
    v101 = 0uLL;
    LOWORD(v102[0]) = 0;
    DWORD2(v102[1]) = 0;
    *((_QWORD *)&v102[0] + 1) = 0;
    *(_QWORD *)&v102[1] = 0;
    sub_1D46A4760((uint64_t)v112, (uint64_t)&v103);
    if (sub_1D46A47A8((uint64_t)&v103) != 1)
    {
      v69 = sub_1D46F8BC8(v103);
      v71 = v70;
      if (v69 == sub_1D46F8BC8(v68) && v71 == v72)
      {
        swift_bridgeObjectRelease_n();
LABEL_19:
        v94[6] = v109;
        v94[7] = v110;
        v95[0] = v111[0];
        *(_OWORD *)((char *)v95 + 12) = *(_OWORD *)((char *)v111 + 12);
        v94[2] = v105;
        v94[3] = v106;
        v94[4] = v107;
        v94[5] = v108;
        v94[0] = v103;
        v94[1] = v104;
        v91 = v100;
        v92 = v101;
        v93[0] = v102[0];
        *(_OWORD *)((char *)v93 + 12) = *(_OWORD *)((char *)v102 + 12);
        v87 = v96[2];
        v88 = v97;
        v89 = v98;
        v90 = v99;
        v85 = v96[0];
        v86 = v96[1];
        sub_1D482947C((uint64_t)v94, &v85, (uint64_t)v83);
        sub_1D46C6AE4((uint64_t)v112, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6B50);
        sub_1D46A48AC((uint64_t)v96);
        v91 = v83[6];
        v92 = v83[7];
        v93[0] = v84[0];
        *(_OWORD *)((char *)v93 + 12) = *(_OWORD *)((char *)v84 + 12);
        v87 = v83[2];
        v88 = v83[3];
        v89 = v83[4];
        v90 = v83[5];
        v74 = v83[0];
        v75 = v83[1];
LABEL_22:
        v85 = v74;
        v86 = v75;
        faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v85);
        sub_1D46A4760((uint64_t)&v85, (uint64_t)v94);
        return sub_1D46A4760((uint64_t)v94, v79);
      }
      v73 = sub_1D4922E38();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v73 & 1) != 0)
        goto LABEL_19;
      sub_1D46C6AE4((uint64_t)v112, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6B50);
    }
    v91 = v100;
    v92 = v101;
    v93[0] = v102[0];
    *(_OWORD *)((char *)v93 + 12) = *(_OWORD *)((char *)v102 + 12);
    v87 = v96[2];
    v88 = v97;
    v89 = v98;
    v90 = v99;
    v74 = v96[0];
    v75 = v96[1];
    goto LABEL_22;
  }
  sub_1D470C76C((uint64_t)v22);
  sub_1D469C304((uint64_t)v3, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for BoxScoreDomainAssignmentRule);
  sub_1D469C304(a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  v25 = sub_1D4922358();
  v26 = sub_1D4922910();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = swift_slowAlloc();
    v78 = (double *)swift_slowAlloc();
    *(_QWORD *)&v103 = v78;
    *(_DWORD *)v27 = 136315394;
    v28 = sub_1D46F8BC8(v16[*(int *)(v80 + 20)]);
    *(_QWORD *)&v96[0] = sub_1D47F0250(v28, v29, (uint64_t *)&v103);
    v80 = (uint64_t)v22;
    sub_1D4922A78();
    swift_bridgeObjectRelease();
    sub_1D4697DE0((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for BoxScoreDomainAssignmentRule);
    *(_WORD *)(v27 + 12) = 2080;
    v30 = *v11;
    v31 = v11[1];
    v32 = v11[2];
    v33 = v11[3];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1D4927560;
    v113.origin.x = v30;
    v113.origin.y = v31;
    v113.size.width = v32;
    v113.size.height = v33;
    v35 = CGRectGetMinX(v113);
    v36 = MEMORY[0x1E0DEF040];
    *(_QWORD *)(v34 + 56) = MEMORY[0x1E0DEF040];
    v37 = sub_1D46A492C();
    *(_QWORD *)(v34 + 64) = v37;
    *(CGFloat *)(v34 + 32) = v35;
    v114.origin.x = v30;
    v114.origin.y = v31;
    v114.size.width = v32;
    v114.size.height = v33;
    v38 = CGRectGetMinY(v114);
    *(_QWORD *)(v34 + 96) = v36;
    *(_QWORD *)(v34 + 104) = v37;
    *(CGFloat *)(v34 + 72) = v38;
    v115.origin.x = v30;
    v115.origin.y = v31;
    v115.size.width = v32;
    v115.size.height = v33;
    v39 = CGRectGetWidth(v115);
    *(_QWORD *)(v34 + 136) = v36;
    *(_QWORD *)(v34 + 144) = v37;
    *(CGFloat *)(v34 + 112) = v39;
    v116.origin.x = v30;
    v116.origin.y = v31;
    v116.size.width = v32;
    v116.size.height = v33;
    v40 = CGRectGetHeight(v116);
    *(_QWORD *)(v34 + 176) = v36;
    *(_QWORD *)(v34 + 184) = v37;
    *(CGFloat *)(v34 + 152) = v40;
    v41 = sub_1D4922640();
    *(_QWORD *)&v96[0] = sub_1D47F0250(v41, v42, (uint64_t *)&v103);
    sub_1D4922A78();
    swift_bridgeObjectRelease();
    sub_1D4697DE0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    _os_log_impl(&dword_1D467C000, v25, v26, "Reject %s for region %s", (uint8_t *)v27, 0x16u);
    v43 = (uint64_t)v78;
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v43, -1, -1);
    MEMORY[0x1D82635B8](v27, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v82);
  }
  else
  {
    sub_1D4697DE0((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for BoxScoreDomainAssignmentRule);
    sub_1D4697DE0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);

    (*(void (**)(char *, uint64_t))(v81 + 8))(v22, v82);
  }
  v67 = v79;
  sub_1D46C6BD0((uint64_t)&v103);
  return sub_1D46A4760((uint64_t)&v103, v67);
}

uint64_t sub_1D47F4980(uint64_t a1, float a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  float *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  float *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  __int128 v22;
  float v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  float v29;
  char v30;
  uint64_t *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t *v44;
  void *v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v61[2];
  unint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  float *v69;
  float *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;

  v4 = sub_1D4922370();
  v72 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v74 = (char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v73 = (char *)v61 - v7;
  v66 = type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange(0);
  v8 = MEMORY[0x1E0C80A78](v66);
  v10 = (float *)((char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)v61 - v12;
  MEMORY[0x1E0C80A78](v11);
  v16 = (float *)((char *)v61 - v15);
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
    return 0;
  v18 = a1;
  v19 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v20 = *(_QWORD *)(v14 + 72);
  v61[1] = v18;
  swift_bridgeObjectRetain();
  v21 = (_BYTE *)&unk_1ED98F000;
  v67 = (unint64_t)"neric";
  v62 = 0x80000001D493F830;
  *(_QWORD *)&v22 = 136315138;
  v64 = v22;
  v63 = MEMORY[0x1E0DEE9B8] + 8;
  v68 = v20;
  v69 = v16;
  v70 = v10;
  v71 = v13;
  v65 = v4;
  do
  {
    sub_1D469C304(v19, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
    v23 = *v16;
    if (v16[1] < *v16)
    {
      if (qword_1ED98F398 != -1)
        swift_once();
      if (v21[904] != 1)
        goto LABEL_27;
      v24 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
      v25 = objc_msgSend(v24, sel_bundleIdentifier);

      if (v25)
      {
        v26 = sub_1D492261C();
        v28 = v27;

        if (v26 == 0xD00000000000002BLL && v28 == v62)
        {
          swift_bridgeObjectRelease();
          goto LABEL_19;
        }
        v30 = sub_1D4922E38();
        swift_bridgeObjectRelease();
        if ((v30 & 1) != 0)
        {
LABEL_19:
          v31 = &qword_1EFEAA908;
          if (qword_1EFEA9C20 != -1)
          {
            swift_once();
            v31 = &qword_1EFEAA908;
          }
          goto LABEL_23;
        }
      }
      v31 = (uint64_t *)&off_1ED98F3F0;
      if (qword_1ED98F3A8 != -1)
      {
        swift_once();
        v31 = (uint64_t *)&off_1ED98F3F0;
      }
LABEL_23:
      v32 = *(void **)(*v31 + 32);
      swift_retain();
      v33 = (void *)sub_1D49225F8();
      LODWORD(v32) = objc_msgSend(v32, sel_BOOLForKey_, v33);
      swift_release();

      v16 = v69;
      if ((_DWORD)v32)
      {
        if (qword_1EFEA9C78 != -1)
          swift_once();
        v34 = v4;
        v35 = qword_1EFEAAA30;
        goto LABEL_30;
      }
LABEL_27:
      if (qword_1ED98F3D0 != -1)
        swift_once();
      v34 = v4;
      v35 = qword_1ED98F3B0;
LABEL_30:
      v36 = __swift_project_value_buffer(v34, (uint64_t)v35);
      v37 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 16);
      v37(v73, v36, v4);
      if ((v21[904] & 1) == 0)
        goto LABEL_42;
      v38 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
      v39 = objc_msgSend(v38, sel_bundleIdentifier);

      if (v39)
      {
        v40 = sub_1D492261C();
        v42 = v41;

        if (v40 == 0xD00000000000002BLL && v42 == (v67 | 0x8000000000000000))
        {
          swift_bridgeObjectRelease();
          goto LABEL_36;
        }
        v43 = sub_1D4922E38();
        swift_bridgeObjectRelease();
        if ((v43 & 1) != 0)
        {
LABEL_36:
          v44 = &qword_1EFEAA908;
          if (qword_1EFEA9C20 != -1)
          {
            swift_once();
            v44 = &qword_1EFEAA908;
          }
          goto LABEL_40;
        }
      }
      v44 = (uint64_t *)&off_1ED98F3F0;
      if (qword_1ED98F3A8 != -1)
      {
        swift_once();
        v44 = (uint64_t *)&off_1ED98F3F0;
      }
LABEL_40:
      v45 = *(void **)(*v44 + 32);
      swift_retain();
      v46 = (void *)sub_1D49225F8();
      LODWORD(v45) = objc_msgSend(v45, sel_BOOLForKey_, v46);
      swift_release();

      v16 = v69;
      if ((_DWORD)v45)
      {
        v48 = (uint64_t)v73;
        v47 = v74;
LABEL_45:
        v37(v47, v48, v4);
        v49 = (uint64_t)v71;
        v50 = *(void (**)(char *, uint64_t))(v72 + 8);
        v50(v73, v4);
        sub_1D469C304((uint64_t)v16, v49, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
        v51 = (uint64_t)v16;
        v52 = sub_1D4922358();
        v53 = sub_1D4922910();
        if (os_log_type_enabled(v52, v53))
        {
          v54 = swift_slowAlloc();
          v55 = swift_slowAlloc();
          v75 = v55;
          *(_DWORD *)v54 = v64;
          sub_1D47F514C();
          v56 = sub_1D4922E14();
          *(_QWORD *)(v54 + 4) = sub_1D47F0250(v56, v57, &v75);
          swift_bridgeObjectRelease();
          sub_1D4697DE0((uint64_t)v71, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
          _os_log_impl(&dword_1D467C000, v52, v53, "Invalid threshold %s", (uint8_t *)v54, 0xCu);
          swift_arrayDestroy();
          v58 = v55;
          v4 = v65;
          MEMORY[0x1D82635B8](v58, -1, -1);
          MEMORY[0x1D82635B8](v54, -1, -1);

        }
        else
        {

          sub_1D4697DE0(v49, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
        }
        v50(v74, v4);
        sub_1D4697DE0(v51, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
        v10 = v70;
        v16 = (float *)v51;
        v20 = v68;
        v21 = &unk_1ED98F000;
        goto LABEL_5;
      }
LABEL_42:
      if (qword_1ED98F3D0 != -1)
        swift_once();
      v48 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED98F3B0);
      v47 = v74;
      goto LABEL_45;
    }
    sub_1D47F5108((uint64_t)v16, (uint64_t)v10);
    if (v23 <= a2)
    {
      v29 = v10[1];
      sub_1D4697DE0((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
      if (v29 >= a2)
      {
        v59 = 1;
        goto LABEL_49;
      }
    }
    else
    {
      sub_1D4697DE0((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
    }
LABEL_5:
    v19 += v20;
    --v17;
  }
  while (v17);
  v59 = 0;
LABEL_49:
  swift_bridgeObjectRelease();
  return v59;
}

uint64_t sub_1D47F5108(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D47F514C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED98E5B8;
  if (!qword_1ED98E5B8)
  {
    v1 = type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange(255);
    result = MEMORY[0x1D82634E0](&unk_1D49386EC, v1);
    atomic_store(result, (unint64_t *)&qword_1ED98E5B8);
  }
  return result;
}

uint64_t sub_1D47F5194@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(char *, uint64_t);
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  _QWORD v32[2];
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAD8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D4920F18();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D4922370();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_allocWithZone(MEMORY[0x1E0CB34D0]);
  v15 = (void *)sub_1D4920EB8();
  v16 = objc_msgSend(v14, sel_initWithURL_, v15);

  if (v16)
  {
    sub_1D47F552C(v16, (uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    v17 = type metadata accessor for MLModelBundle();
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v5, 1, v17))
    {
      v28 = v36;
      sub_1D469C630((uint64_t)v5, v36, (uint64_t (*)(_QWORD))type metadata accessor for MLModelBundle);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v28, 0, 1, v17);
    }
    sub_1D46992EC((uint64_t)v5, &qword_1ED98CAD8);
  }
  else
  {
    v35 = v10;
    sub_1D470C76C((uint64_t)v13);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, a1, v6);
    v19 = sub_1D4922358();
    v20 = sub_1D492291C();
    if (os_log_type_enabled(v19, (os_log_type_t)v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v38 = v34;
      v33 = v21;
      *(_DWORD *)v21 = 136315138;
      v32[1] = v21 + 4;
      sub_1D469C674();
      v22 = sub_1D4922E14();
      v37 = sub_1D47F0250(v22, v23, &v38);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      v24 = *(void (**)(char *, uint64_t))(v7 + 8);
      v24(v9, v6);
      v25 = v20;
      v26 = v33;
      _os_log_impl(&dword_1D467C000, v19, v25, "Cannot create bundle with %s", v33, 0xCu);
      v27 = v34;
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v27, -1, -1);
      MEMORY[0x1D82635B8](v26, -1, -1);

      v24(a1, v6);
    }
    else
    {

      v30 = *(void (**)(char *, uint64_t))(v7 + 8);
      v30(v9, v6);
      v30(a1, v6);
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v35);
  }
  v31 = type metadata accessor for MLModelBundle();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v36, 1, 1, v31);
}

uint64_t type metadata accessor for MLModelBundle()
{
  uint64_t result;

  result = qword_1ED98CAC8;
  if (!qword_1ED98CAC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D47F552C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  void *v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  unint64_t v58;
  uint64_t v59;
  char v60;
  unint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  char *v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  BOOL v89;
  uint8_t *v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  BOOL v97;
  uint8_t *v98;
  unint64_t v99;
  unint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  unint64_t v109;
  char v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  char v114;
  void (*v115)(uint64_t, char *, uint64_t);
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int *v122;
  uint64_t *v123;
  char *v124;
  uint64_t *v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(char *, uint64_t);
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  id v162;
  unint64_t v163;
  uint64_t v164;
  unint64_t v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;

  v161 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DFC8);
  v145 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v145 + 64);
  v5 = MEMORY[0x1E0C80A78](v3);
  v146 = (uint64_t)&v141 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v149 = (char *)&v141 - v6;
  v150 = type metadata accessor for MLModelInfo(0);
  v7 = MEMORY[0x1E0C80A78](v150);
  v148 = (uint64_t *)((char *)&v141 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v151 = (uint64_t)&v141 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v141 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D4920F18();
  v14 = *(_QWORD *)(v13 - 8);
  v155 = v13;
  v156 = v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v152 = (char *)&v141 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v141 - v18;
  MEMORY[0x1E0C80A78](v17);
  v154 = (char *)&v141 - v20;
  v21 = sub_1D4922370();
  v157 = *(_QWORD *)(v21 - 8);
  v158 = v21;
  v22 = MEMORY[0x1E0C80A78](v21);
  v144 = (uint64_t)&v141 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v153 = (char *)&v141 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v141 - v27;
  v29 = MEMORY[0x1E0C80A78](v26);
  v31 = (char *)&v141 - v30;
  v32 = MEMORY[0x1E0C80A78](v29);
  v34 = (char *)&v141 - v33;
  v35 = MEMORY[0x1E0C80A78](v32);
  v37 = (char *)&v141 - v36;
  MEMORY[0x1E0C80A78](v35);
  v39 = (char *)&v141 - v38;
  v40 = type metadata accessor for MLModelBundle();
  v159 = *(_QWORD *)(v40 - 8);
  v160 = v40;
  MEMORY[0x1E0C80A78](v40);
  v147 = (char *)&v141 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = a1;
  v42 = objc_msgSend(a1, sel_infoDictionary);
  if (!v42)
  {
    sub_1D470C76C((uint64_t)v39);
    v76 = sub_1D4922358();
    v77 = sub_1D492291C();
    if (os_log_type_enabled(v76, v77))
    {
      v78 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v78 = 0;
      _os_log_impl(&dword_1D467C000, v76, v77, "Cannot access MLModels Meta bundle Info.plist", v78, 2u);
      MEMORY[0x1D82635B8](v78, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v157 + 8))(v39, v158);
    goto LABEL_24;
  }
  v43 = v42;
  v44 = sub_1D4922544();

  if (!*(_QWORD *)(v44 + 16) || (v45 = sub_1D47CA4DC(0x4C45444F4D5F4956, 0xE800000000000000), (v46 & 1) == 0))
  {
    v166 = 0u;
    v167 = 0u;
    swift_bridgeObjectRelease();
    v47 = v162;
    goto LABEL_18;
  }
  sub_1D4696FAC(*(_QWORD *)(v44 + 56) + 32 * v45, (uint64_t)&v166);
  swift_bridgeObjectRelease();
  v47 = v162;
  if (!*((_QWORD *)&v167 + 1))
  {
LABEL_18:
    sub_1D46992EC((uint64_t)&v166, &qword_1EFEABDD0);
    sub_1D470C76C((uint64_t)v37);
    v71 = sub_1D4922358();
    v72 = sub_1D492291C();
    if (os_log_type_enabled(v71, v72))
    {
      v73 = (uint8_t *)swift_slowAlloc();
      v74 = swift_slowAlloc();
      *(_QWORD *)&v168 = v74;
      *(_DWORD *)v73 = 136315138;
      *(_QWORD *)&v166 = sub_1D47F0250(0x4C45444F4D5F4956, 0xE800000000000000, (uint64_t *)&v168);
      sub_1D4922A78();
      _os_log_impl(&dword_1D467C000, v71, v72, "The %s key is missing", v73, 0xCu);
      v75 = 1;
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v74, -1, -1);
      MEMORY[0x1D82635B8](v73, -1, -1);

      (*(void (**)(char *, uint64_t))(v157 + 8))(v37, v158);
LABEL_25:
      v80 = v160;
      v79 = v161;
LABEL_26:
      v81 = v159;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(v79, v75, 1, v80);
    }

    (*(void (**)(char *, uint64_t))(v157 + 8))(v37, v158);
LABEL_24:
    v75 = 1;
    goto LABEL_25;
  }
  sub_1D46FADFC(&v166, &v168);
  sub_1D4696FAC((uint64_t)&v168, (uint64_t)&v166);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D118);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v48 = v164;
    if (*(_QWORD *)(v164 + 16))
    {
      v49 = sub_1D47CA4DC(1701667182, 0xE400000000000000);
      if ((v50 & 1) != 0)
      {
        sub_1D4696FAC(*(_QWORD *)(v48 + 56) + 32 * v49, (uint64_t)&v166);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v142 = v164;
          v143 = v165;
          v51 = (void *)sub_1D49225F8();
          v52 = (void *)sub_1D49225F8();
          v53 = objc_msgSend(v47, sel_URLForResource_withExtension_, v51, v52);

          if (v53)
          {
            sub_1D4920EF4();

            v55 = v155;
            v54 = v156;
            v56 = *(void (**)(char *, char *, uint64_t))(v156 + 32);
            v56(v12, v19, v155);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v12, 0, 1, v55);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v12, 1, v55) != 1)
            {
              v57 = v154;
              v56(v154, v12, v55);
              if (*(_QWORD *)(v48 + 16))
              {
                v58 = sub_1D47CA4DC(1701605234, 0xE400000000000000);
                v59 = (uint64_t)v153;
                if ((v60 & 1) != 0)
                {
                  sub_1D4696FAC(*(_QWORD *)(v48 + 56) + 32 * v58, (uint64_t)&v166);
                  if ((swift_dynamicCast() & 1) != 0)
                  {
                    v62 = v164;
                    v61 = v165;
                    swift_bridgeObjectRetain();
                    v63 = sub_1D47C1C6C();
                    if (v63 == 7)
                    {
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      v64 = v144;
                      sub_1D470C76C(v144);
                      swift_bridgeObjectRetain();
                      v65 = sub_1D4922358();
                      v66 = sub_1D492291C();
                      if (os_log_type_enabled(v65, v66))
                      {
                        v67 = (uint8_t *)swift_slowAlloc();
                        v68 = swift_slowAlloc();
                        *(_QWORD *)&v166 = v68;
                        *(_DWORD *)v67 = 136315138;
                        swift_bridgeObjectRetain();
                        v164 = sub_1D47F0250(v62, v61, (uint64_t *)&v166);
                        sub_1D4922A78();
                        swift_bridgeObjectRelease_n();
                        _os_log_impl(&dword_1D467C000, v65, v66, "Found model with unknown role %s", v67, 0xCu);
                        swift_arrayDestroy();
                        MEMORY[0x1D82635B8](v68, -1, -1);
                        MEMORY[0x1D82635B8](v67, -1, -1);

                        (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v64, v158);
                        v69 = *(void (**)(char *, uint64_t))(v156 + 8);
                        v70 = v154;
                      }
                      else
                      {
                        swift_bridgeObjectRelease_n();

                        (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v64, v158);
                        v69 = *(void (**)(char *, uint64_t))(v54 + 8);
                        v70 = v57;
                      }
                      v94 = v55;
LABEL_39:
                      v69(v70, v94);
                      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v168);
                      goto LABEL_24;
                    }
                    LODWORD(v158) = v63;
                    swift_bridgeObjectRelease();
                    v163 = sub_1D47C3D88(MEMORY[0x1E0DEE9D8]);
                    v99 = v143;
                    if (*(_QWORD *)(v48 + 16))
                    {
                      v100 = sub_1D47CA4DC(0x737465737361, 0xE600000000000000);
                      if ((v101 & 1) != 0)
                      {
                        sub_1D4696FAC(*(_QWORD *)(v48 + 56) + 32 * v100, (uint64_t)&v166);
                        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D0E0);
                        v102 = swift_dynamicCast();
                        if ((v102 & 1) != 0)
                        {
                          v103 = v164;
                          MEMORY[0x1E0C80A78](v102);
                          *(&v141 - 4) = v142;
                          *(&v141 - 3) = v99;
                          *(&v141 - 2) = (uint64_t)v162;
                          *(&v141 - 1) = (uint64_t)&v163;
                          sub_1D47F70FC(v103, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D47F72BC);
                          swift_bridgeObjectRelease();
                        }
                      }
                    }
                    if (*(_QWORD *)(v48 + 16)
                      && (v104 = sub_1D47CA4DC(0x61656869746C756DLL, 0xE900000000000064), (v105 & 1) != 0)
                      && (sub_1D4696FAC(*(_QWORD *)(v48 + 56) + 32 * v104, (uint64_t)&v166),
                          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D0F0),
                          (swift_dynamicCast() & 1) != 0))
                    {
                      v106 = v164;
                      *(_QWORD *)&v166 = sub_1D47C3C70(MEMORY[0x1E0DEE9D8]);
                      MEMORY[0x1E0C80A78](v166);
                      *(&v141 - 2) = (uint64_t)&v166;
                      sub_1D47E95C4(v106, (void (*)(uint64_t, uint64_t, uint64_t))sub_1D47E9960);
                      swift_bridgeObjectRelease();
                      v107 = v166;
                    }
                    else
                    {
                      v107 = 0;
                    }
                    v108 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
                    v108(v152, v57, v55);
                    if (*(_QWORD *)(v48 + 16)
                      && (v109 = sub_1D47CA4DC(7238261, 0xE300000000000000), (v110 & 1) != 0)
                      && (sub_1D4696FAC(*(_QWORD *)(v48 + 56) + 32 * v109, (uint64_t)&v166),
                          swift_dynamicCast()))
                    {
                      v111 = v164;
                      v112 = v165;
                    }
                    else
                    {
                      v111 = 0;
                      v112 = 0xE000000000000000;
                    }
                    if (*(_QWORD *)(v48 + 16)
                      && (v113 = sub_1D47CA4DC(0x44496C65646F6DLL, 0xE700000000000000), (v114 & 1) != 0))
                    {
                      sub_1D4696FAC(*(_QWORD *)(v48 + 56) + 32 * v113, (uint64_t)&v166);
                    }
                    else
                    {
                      v166 = 0u;
                      v167 = 0u;
                    }
                    swift_bridgeObjectRelease();
                    v157 = v111;
                    v153 = (char *)v112;
                    v144 = v107;
                    if (*((_QWORD *)&v167 + 1))
                    {
                      if (swift_dynamicCast())
                      {
                        v115 = (void (*)(uint64_t, char *, uint64_t))v108;
                        v116 = v164;
                        v117 = v165;
LABEL_70:
                        v118 = v163;
                        v119 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
                        v120 = (uint64_t)v149;
                        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 56))(v149, 1, 1, v119);
                        v121 = (uint64_t)v148;
                        *v148 = v142;
                        *(_QWORD *)(v121 + 8) = v99;
                        v122 = (int *)v150;
                        v115(v121 + *(int *)(v150 + 20), v152, v55);
                        v123 = (uint64_t *)(v121 + v122[6]);
                        v124 = v153;
                        *v123 = v157;
                        v123[1] = (uint64_t)v124;
                        v125 = (uint64_t *)(v121 + v122[7]);
                        *v125 = v116;
                        v125[1] = v117;
                        *(_BYTE *)(v121 + v122[8]) = v158;
                        *(_QWORD *)(v121 + v122[9]) = v118;
                        *(_QWORD *)(v121 + v122[10]) = v144;
                        v126 = v146;
                        sub_1D47E975C(v120, v146);
                        v127 = (*(unsigned __int8 *)(v145 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
                        v128 = swift_allocObject();
                        sub_1D47E9874(v126, v128 + v127);
                        *(_QWORD *)(v128 + ((v4 + v127 + 7) & 0xFFFFFFFFFFFFFFF8)) = v118;
                        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E4B8);
                        v129 = swift_allocObject();
                        v130 = v129 + *(_QWORD *)(*(_QWORD *)v129 + 152);
                        v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98ED18);
                        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 56))(v130, 1, 1, v131);
                        v132 = (uint64_t *)(v129 + *(_QWORD *)(*(_QWORD *)v129 + 160));
                        *v132 = 0;
                        v132[1] = 0;
                        v133 = (_QWORD *)(v129 + *(_QWORD *)(*(_QWORD *)v129 + 168));
                        *v133 = 0;
                        v133[1] = 0;
                        v134 = *(_QWORD *)(*(_QWORD *)v129 + 184);
                        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB70);
                        v135 = swift_allocObject();
                        *(_DWORD *)(v135 + 16) = 0;
                        *(_QWORD *)(v129 + v134) = v135;
                        v136 = *v132;
                        *v132 = (uint64_t)sub_1D47E98BC;
                        v132[1] = v128;
                        swift_bridgeObjectRetain_n();
                        swift_retain();
                        swift_retain();
                        sub_1D46A56B4(v136);
                        *(_QWORD *)(v129 + *(_QWORD *)(*(_QWORD *)v129 + 176)) = 2;
                        swift_release();
                        v137 = sub_1D4835CD8();
                        swift_release();
                        sub_1D46992EC(v120, &qword_1ED98DFC8);
                        v138 = *(void (**)(char *, uint64_t))(v156 + 8);
                        v138(v152, v55);
                        *(_QWORD *)(v121 + v122[11]) = v137;
                        v139 = v151;
                        sub_1D469C630(v121, v151, type metadata accessor for MLModelInfo);
                        v138(v154, v55);
                        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v168);
                        v80 = v160;
                        v140 = v147;
                        sub_1D469C630(v139, (uint64_t)&v147[*(int *)(v160 + 20)], type metadata accessor for MLModelInfo);
                        *v140 = v162;
                        swift_bridgeObjectRelease();
                        v79 = v161;
                        sub_1D469C630((uint64_t)v140, v161, (uint64_t (*)(_QWORD))type metadata accessor for MLModelBundle);
                        v75 = 0;
                        goto LABEL_26;
                      }
                    }
                    else
                    {
                      sub_1D46992EC((uint64_t)&v166, &qword_1EFEABDD0);
                    }
                    v115 = (void (*)(uint64_t, char *, uint64_t))v108;
                    v116 = 0;
                    v117 = 0xE000000000000000;
                    goto LABEL_70;
                  }
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v59 = (uint64_t)v153;
              }
              sub_1D470C76C(v59);
              v95 = sub_1D4922358();
              v96 = sub_1D492291C();
              v97 = os_log_type_enabled(v95, v96);
              v81 = v159;
              if (v97)
              {
                v98 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)v98 = 0;
                _os_log_impl(&dword_1D467C000, v95, v96, "Found model without role", v98, 2u);
                MEMORY[0x1D82635B8](v98, -1, -1);
              }

              (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v59, v158);
              (*(void (**)(char *, uint64_t))(v54 + 8))(v57, v55);
LABEL_34:
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v168);
              v75 = 1;
              v80 = v160;
              v79 = v161;
              return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(v79, v75, 1, v80);
            }
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v156 + 56))(v12, 1, 1, v155);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1D46992EC((uint64_t)v12, &qword_1ED98CAF0);
          sub_1D470C76C((uint64_t)v28);
          v91 = sub_1D4922358();
          v92 = sub_1D492291C();
          if (os_log_type_enabled(v91, v92))
          {
            v93 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v93 = 0;
            _os_log_impl(&dword_1D467C000, v91, v92, "Cannot find model in the bundle", v93, 2u);
            MEMORY[0x1D82635B8](v93, -1, -1);
          }

          v94 = v158;
          v69 = *(void (**)(char *, uint64_t))(v157 + 8);
          v70 = v28;
          goto LABEL_39;
        }
      }
    }
    swift_bridgeObjectRelease();
    sub_1D470C76C((uint64_t)v31);
    v87 = sub_1D4922358();
    v88 = sub_1D492291C();
    v89 = os_log_type_enabled(v87, v88);
    v81 = v159;
    if (v89)
    {
      v90 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v90 = 0;
      _os_log_impl(&dword_1D467C000, v87, v88, "Missing file name in description", v90, 2u);
      MEMORY[0x1D82635B8](v90, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v157 + 8))(v31, v158);
    goto LABEL_34;
  }
  sub_1D470C76C((uint64_t)v34);
  v83 = sub_1D4922358();
  v84 = sub_1D492291C();
  if (os_log_type_enabled(v83, v84))
  {
    v85 = (uint8_t *)swift_slowAlloc();
    v86 = swift_slowAlloc();
    *(_QWORD *)&v166 = v86;
    *(_DWORD *)v85 = 136315138;
    v164 = sub_1D47F0250(0x4C45444F4D5F4956, 0xE800000000000000, (uint64_t *)&v166);
    sub_1D4922A78();
    _os_log_impl(&dword_1D467C000, v83, v84, "The %s key has invalid value", v85, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v86, -1, -1);
    MEMORY[0x1D82635B8](v85, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v157 + 8))(v34, v158);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v168);
  v80 = v160;
  v79 = v161;
  v81 = v159;
  v75 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(v79, v75, 1, v80);
}

uint64_t sub_1D47F6760(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  _BYTE *v34;
  unsigned int v35;
  NSObject *v36;
  os_log_type_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  unint64_t v42;
  unsigned int (*v43)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v44;
  unint64_t v45;
  unint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(_BYTE *, uint64_t);
  _BYTE *v52;
  void (*v53)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v54;
  void (*v55)(_BYTE *, uint64_t);
  void *v56;
  void *v57;
  id v58;
  uint64_t v59;
  void (*v60)(uint64_t, _QWORD, uint64_t, uint64_t);
  _BYTE *v61;
  void (*v62)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v63;
  uint64_t v65;
  _BYTE *v66;
  unint64_t v67;
  unint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE v73[4];
  unsigned int v74;
  uint64_t v75;
  _BYTE *v76;
  _BYTE *v77;
  uint64_t v78;
  _BYTE *v79;
  _BYTE *v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  _BYTE *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v78 = a8;
  v82 = a7;
  v83 = a5;
  v85 = a4;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v77 = &v73[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x1E0C80A78](v13);
  v80 = &v73[-v16];
  MEMORY[0x1E0C80A78](v15);
  v18 = &v73[-v17];
  v19 = sub_1D4920F18();
  v20 = *(_QWORD **)(v19 - 8);
  v21 = MEMORY[0x1E0C80A78](v19);
  v76 = &v73[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = &v73[-v24];
  MEMORY[0x1E0C80A78](v23);
  v84 = &v73[-v26];
  v27 = sub_1D4922370();
  v86 = *(_QWORD *)(v27 - 8);
  v87 = v27;
  v28 = MEMORY[0x1E0C80A78](v27);
  v79 = &v73[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v30 = MEMORY[0x1E0C80A78](v28);
  v32 = &v73[-v31];
  MEMORY[0x1E0C80A78](v30);
  v34 = &v73[-v33];
  swift_bridgeObjectRetain();
  v81 = a1;
  v35 = sub_1D469C5A4();
  if (v35 == 11)
  {
    sub_1D470C76C((uint64_t)v34);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v36 = sub_1D4922358();
    v37 = sub_1D492291C();
    v38 = a6;
    if (os_log_type_enabled(v36, v37))
    {
      v39 = swift_slowAlloc();
      v40 = swift_slowAlloc();
      v89 = v40;
      *(_DWORD *)v39 = 136315394;
      swift_bridgeObjectRetain();
      v88 = sub_1D47F0250(v81, a2, &v89);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v39 + 12) = 2080;
      swift_bridgeObjectRetain();
      v88 = sub_1D47F0250(v83, v38, &v89);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D467C000, v36, v37, "Unknown asset role %s for model %s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v40, -1, -1);
      MEMORY[0x1D82635B8](v39, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v51 = *(uint64_t (**)(_BYTE *, uint64_t))(v86 + 8);
    v52 = v34;
    return v51(v52, v87);
  }
  v41 = v35;
  v81 = a6;
  v42 = v85;
  sub_1D4920F00();
  v43 = (unsigned int (*)(_BYTE *, uint64_t, uint64_t))v20[6];
  if (v43(v18, 1, v19) == 1)
  {
    sub_1D46992EC((uint64_t)v18, &qword_1ED98CAF0);
    v44 = v32;
    sub_1D470C76C((uint64_t)v32);
    v45 = v81;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v46 = v42;
    v47 = sub_1D4922358();
    v48 = sub_1D492291C();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = swift_slowAlloc();
      v50 = swift_slowAlloc();
      v89 = v50;
      *(_DWORD *)v49 = 136315394;
      swift_bridgeObjectRetain();
      v88 = sub_1D47F0250(a3, v46, &v89);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v49 + 12) = 2080;
      swift_bridgeObjectRetain();
      v88 = sub_1D47F0250(v83, v45, &v89);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D467C000, v47, v48, "Invalid name %s for model %s", (uint8_t *)v49, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v50, -1, -1);
      MEMORY[0x1D82635B8](v49, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v51 = *(uint64_t (**)(_BYTE *, uint64_t))(v86 + 8);
    v52 = v44;
    return v51(v52, v87);
  }
  v74 = v41;
  v75 = a3;
  v53 = (void (*)(_BYTE *, _BYTE *, uint64_t))v20[4];
  v53(v84, v18, v19);
  sub_1D4920EC4();
  sub_1D4920EAC();
  v54 = v19;
  v55 = (void (*)(_BYTE *, uint64_t))v20[1];
  v55(v25, v54);
  sub_1D4920E7C();
  v56 = (void *)sub_1D49225F8();
  swift_bridgeObjectRelease();
  v57 = (void *)sub_1D49225F8();
  swift_bridgeObjectRelease();
  v58 = objc_msgSend(v82, sel_URLForResource_withExtension_, v56, v57);

  if (v58)
  {
    sub_1D4920EF4();

    v59 = (uint64_t)v80;
    v53(v80, v25, v54);
    v60 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v20[7];
    v60(v59, 0, 1, v54);
    if (v43((_BYTE *)v59, 1, v54) != 1)
    {
      v61 = v76;
      v53(v76, (_BYTE *)v59, v54);
      v62 = (void (*)(_BYTE *, _BYTE *, uint64_t))v20[2];
      v63 = (uint64_t)v77;
      v62(v77, v61, v54);
      v60(v63, 0, 1, v54);
      sub_1D47FC2B0(v63, v74);
      v55(v61, v54);
      return ((uint64_t (*)(_BYTE *, uint64_t))v55)(v84, v54);
    }
  }
  else
  {
    v59 = (uint64_t)v80;
    ((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v20[7])(v80, 1, 1, v54);
  }
  v82 = v55;
  v65 = v54;
  sub_1D46992EC(v59, &qword_1ED98CAF0);
  v66 = v79;
  sub_1D470C76C((uint64_t)v79);
  v67 = v81;
  swift_bridgeObjectRetain_n();
  v68 = v85;
  swift_bridgeObjectRetain_n();
  v69 = sub_1D4922358();
  v70 = sub_1D492291C();
  if (os_log_type_enabled(v69, v70))
  {
    v71 = swift_slowAlloc();
    v72 = swift_slowAlloc();
    v89 = v72;
    *(_DWORD *)v71 = 136315394;
    swift_bridgeObjectRetain();
    v88 = sub_1D47F0250(v75, v68, &v89);
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v71 + 12) = 2080;
    swift_bridgeObjectRetain();
    v88 = sub_1D47F0250(v83, v67, &v89);
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D467C000, v69, v70, "Cannot locate resource %s for model %s", (uint8_t *)v71, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v72, -1, -1);
    MEMORY[0x1D82635B8](v71, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  (*(void (**)(_BYTE *, uint64_t))(v86 + 8))(v66, v87);
  return ((uint64_t (*)(_BYTE *, uint64_t))v82)(v84, v65);
}

uint64_t sub_1D47F702C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DFC8) - 8);
  v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  v3 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = v2 + *(int *)(v3 + 24);
    v5 = sub_1D492201C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D47F70FC(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;

  v22 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v7)
      return swift_release();
    v20 = *(_QWORD *)(v22 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v7)
        return swift_release();
      v20 = *(_QWORD *)(v22 + 8 * v9);
      if (!v20)
      {
        v9 = v19 + 2;
        if (v19 + 2 >= v7)
          return swift_release();
        v20 = *(_QWORD *)(v22 + 8 * v9);
        if (!v20)
        {
          v9 = v19 + 3;
          if (v19 + 3 >= v7)
            return swift_release();
          v20 = *(_QWORD *)(v22 + 8 * v9);
          if (!v20)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v20 - 1) & v20;
    v11 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_5:
    v12 = 16 * v11;
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + v12);
    v14 = *v13;
    v15 = v13[1];
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 56) + v12);
    v17 = *v16;
    v18 = v16[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v14, v15, v17, v18);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v21 = v19 + 4;
  if (v21 >= v7)
    return swift_release();
  v20 = *(_QWORD *)(v22 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v7)
      return swift_release();
    v20 = *(_QWORD *)(v22 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1D47F72BC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;

  return sub_1D47F6760(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(void **)(v4 + 32), *(_QWORD *)(v4 + 40));
}

void **sub_1D47F72C8(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (void **)((char *)a1 + v6);
    v8 = (char *)a2 + v6;
    v9 = *(uint64_t *)((char *)a2 + v6 + 8);
    *v7 = *(void **)((char *)a2 + v6);
    v7[1] = v9;
    v10 = (int *)type metadata accessor for MLModelInfo(0);
    v11 = v10[5];
    v12 = (char *)v7 + v11;
    v13 = &v8[v11];
    v14 = sub_1D4920F18();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    v16 = v4;
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
    v17 = v10[6];
    v18 = (_QWORD *)((char *)v7 + v17);
    v19 = &v8[v17];
    v20 = *((_QWORD *)v19 + 1);
    *v18 = *(_QWORD *)v19;
    v18[1] = v20;
    v21 = v10[7];
    v22 = (_QWORD *)((char *)v7 + v21);
    v23 = &v8[v21];
    v24 = *((_QWORD *)v23 + 1);
    *v22 = *(_QWORD *)v23;
    v22[1] = v24;
    *((_BYTE *)v7 + v10[8]) = v8[v10[8]];
    *(_QWORD *)((char *)v7 + v10[9]) = *(_QWORD *)&v8[v10[9]];
    *(_QWORD *)((char *)v7 + v10[10]) = *(_QWORD *)&v8[v10[10]];
    *(_QWORD *)((char *)v7 + v10[11]) = *(_QWORD *)&v8[v10[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v5;
}

uint64_t sub_1D47F7408(id *a1, uint64_t a2)
{
  char *v4;
  char *v5;
  uint64_t v6;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v5 = &v4[*(int *)(type metadata accessor for MLModelInfo(0) + 20)];
  v6 = sub_1D4920F18();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void **sub_1D47F74B8(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (void **)((char *)a1 + v5);
  v7 = (char *)a2 + v5;
  v8 = *(uint64_t *)((char *)a2 + v5 + 8);
  *v6 = *(void **)((char *)a2 + v5);
  v6[1] = v8;
  v9 = (int *)type metadata accessor for MLModelInfo(0);
  v10 = v9[5];
  v11 = (char *)v6 + v10;
  v12 = &v7[v10];
  v13 = sub_1D4920F18();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v15 = v4;
  swift_bridgeObjectRetain();
  v14(v11, v12, v13);
  v16 = v9[6];
  v17 = (_QWORD *)((char *)v6 + v16);
  v18 = &v7[v16];
  v19 = *((_QWORD *)v18 + 1);
  *v17 = *(_QWORD *)v18;
  v17[1] = v19;
  v20 = v9[7];
  v21 = (_QWORD *)((char *)v6 + v20);
  v22 = &v7[v20];
  v23 = *((_QWORD *)v22 + 1);
  *v21 = *(_QWORD *)v22;
  v21[1] = v23;
  *((_BYTE *)v6 + v9[8]) = v7[v9[8]];
  *(_QWORD *)((char *)v6 + v9[9]) = *(_QWORD *)&v7[v9[9]];
  *(_QWORD *)((char *)v6 + v9[10]) = *(_QWORD *)&v7[v9[10]];
  *(_QWORD *)((char *)v6 + v9[11]) = *(_QWORD *)&v7[v9[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void **sub_1D47F75D8(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (void **)((char *)a1 + v9);
  v11 = (char *)a2 + v9;
  *v10 = *(void **)((char *)a2 + v9);
  v10[1] = *(void **)((char *)a2 + v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = (int *)type metadata accessor for MLModelInfo(0);
  v13 = v12[5];
  v14 = (char *)v10 + v13;
  v15 = &v11[v13];
  v16 = sub_1D4920F18();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v17 = v12[6];
  v18 = (_QWORD *)((char *)v10 + v17);
  v19 = &v11[v17];
  *v18 = *(_QWORD *)v19;
  v18[1] = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = v12[7];
  v21 = (_QWORD *)((char *)v10 + v20);
  v22 = &v11[v20];
  *v21 = *(_QWORD *)v22;
  v21[1] = *((_QWORD *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)v10 + v12[8]) = v11[v12[8]];
  *(_QWORD *)((char *)v10 + v12[9]) = *(_QWORD *)&v11[v12[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v10 + v12[10]) = *(_QWORD *)&v11[v12[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v10 + v12[11]) = *(_QWORD *)&v11[v12[11]];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_1D47F7740(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_OWORD *)((char *)a1 + v4) = *(_OWORD *)((char *)a2 + v4);
  v7 = (int *)type metadata accessor for MLModelInfo(0);
  v8 = v7[5];
  v9 = &v5[v8];
  v10 = &v6[v8];
  v11 = sub_1D4920F18();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_OWORD *)&v5[v7[6]] = *(_OWORD *)&v6[v7[6]];
  *(_OWORD *)&v5[v7[7]] = *(_OWORD *)&v6[v7[7]];
  v5[v7[8]] = v6[v7[8]];
  *(_QWORD *)&v5[v7[9]] = *(_QWORD *)&v6[v7[9]];
  *(_QWORD *)&v5[v7[10]] = *(_QWORD *)&v6[v7[10]];
  *(_QWORD *)&v5[v7[11]] = *(_QWORD *)&v6[v7[11]];
  return a1;
}

void **sub_1D47F780C(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (void **)((char *)a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = *(uint64_t *)((char *)a2 + v7 + 8);
  *v8 = *(void **)((char *)a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v11 = (int *)type metadata accessor for MLModelInfo(0);
  v12 = v11[5];
  v13 = (char *)v8 + v12;
  v14 = &v9[v12];
  v15 = sub_1D4920F18();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = v11[6];
  v17 = (_QWORD *)((char *)v8 + v16);
  v18 = &v9[v16];
  v20 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v18 + 1);
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = v11[7];
  v22 = (_QWORD *)((char *)v8 + v21);
  v23 = &v9[v21];
  v25 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v23 + 1);
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  *((_BYTE *)v8 + v11[8]) = v9[v11[8]];
  *(_QWORD *)((char *)v8 + v11[9]) = *(_QWORD *)&v9[v11[9]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v8 + v11[10]) = *(_QWORD *)&v9[v11[10]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v8 + v11[11]) = *(_QWORD *)&v9[v11[11]];
  swift_release();
  return a1;
}

uint64_t sub_1D47F7928()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D47F7934(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for MLModelInfo(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1D47F79B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D47F79BC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for MLModelInfo(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1D47F7A30()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MLModelInfo(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D47F7AA8(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1D47DFB50(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_1D47F9554(v5);
  *a1 = v2;
  return result;
}

uint64_t static S2RegionCoverer.defaultMaxCells.getter()
{
  return 8;
}

uint64_t sub_1D47F7B1C()
{
  uint64_t v0;
  __int16 v1;
  char v2;
  uint64_t v3;
  __int16 v4;
  char v5;
  uint64_t v6;
  __int16 v7;
  char v8;
  uint64_t v9;
  __int16 v10;
  char v11;
  uint64_t v12;
  __int16 v13;
  char v14;
  uint64_t v15;
  uint64_t result;
  __int16 v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  char v23;
  uint64_t v24;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFEABA00);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1D492BAE0;
  S2CellId.init(face:pos:level:)(0, 0, 0, &v20);
  S2Cell.init(cellId:)((unint64_t *)&v20, (uint64_t)&v21);
  v1 = v22;
  v2 = v23;
  v3 = v24;
  *(_QWORD *)(v0 + 32) = v21;
  *(_WORD *)(v0 + 40) = v1;
  *(_BYTE *)(v0 + 42) = v2;
  *(_QWORD *)(v0 + 48) = v3;
  S2CellId.init(face:pos:level:)(1, 0, 0, &v20);
  S2Cell.init(cellId:)((unint64_t *)&v20, (uint64_t)&v21);
  v4 = v22;
  v5 = v23;
  v6 = v24;
  *(_QWORD *)(v0 + 56) = v21;
  *(_WORD *)(v0 + 64) = v4;
  *(_BYTE *)(v0 + 66) = v5;
  *(_QWORD *)(v0 + 72) = v6;
  S2CellId.init(face:pos:level:)(2, 0, 0, &v20);
  S2Cell.init(cellId:)((unint64_t *)&v20, (uint64_t)&v21);
  v7 = v22;
  v8 = v23;
  v9 = v24;
  *(_QWORD *)(v0 + 80) = v21;
  *(_WORD *)(v0 + 88) = v7;
  *(_BYTE *)(v0 + 90) = v8;
  *(_QWORD *)(v0 + 96) = v9;
  S2CellId.init(face:pos:level:)(3, 0, 0, &v20);
  S2Cell.init(cellId:)((unint64_t *)&v20, (uint64_t)&v21);
  v10 = v22;
  v11 = v23;
  v12 = v24;
  *(_QWORD *)(v0 + 104) = v21;
  *(_WORD *)(v0 + 112) = v10;
  *(_BYTE *)(v0 + 114) = v11;
  *(_QWORD *)(v0 + 120) = v12;
  S2CellId.init(face:pos:level:)(4, 0, 0, &v20);
  S2Cell.init(cellId:)((unint64_t *)&v20, (uint64_t)&v21);
  v13 = v22;
  v14 = v23;
  v15 = v24;
  *(_QWORD *)(v0 + 128) = v21;
  *(_WORD *)(v0 + 136) = v13;
  *(_BYTE *)(v0 + 138) = v14;
  *(_QWORD *)(v0 + 144) = v15;
  S2CellId.init(face:pos:level:)(5, 0, 0, &v20);
  result = S2Cell.init(cellId:)((unint64_t *)&v20, (uint64_t)&v21);
  v17 = v22;
  v18 = v23;
  v19 = v24;
  *(_QWORD *)(v0 + 152) = v21;
  *(_WORD *)(v0 + 160) = v17;
  *(_BYTE *)(v0 + 162) = v18;
  *(_QWORD *)(v0 + 168) = v19;
  off_1EFEAB9E8 = (_UNKNOWN *)v0;
  return result;
}

uint64_t sub_1D47F7CEC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1D47F7CF4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = 30;
  if (result < 30)
    v2 = result;
  *(_QWORD *)(v1 + 16) = v2 & ~(v2 >> 63);
  return result;
}

uint64_t *(*sub_1D47F7D0C(_QWORD *a1))(uint64_t *result)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v1;
  return sub_1D47F7D24;
}

uint64_t *sub_1D47F7D24(uint64_t *result)
{
  uint64_t v1;

  v1 = *result;
  if (*result >= 30)
    v1 = 30;
  *(_QWORD *)(result[1] + 16) = v1 & ~(v1 >> 63);
  return result;
}

uint64_t sub_1D47F7D40()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_1D47F7D48(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = 30;
  if (result < 30)
    v2 = result;
  *(_QWORD *)(v1 + 24) = v2 & ~(v2 >> 63);
  return result;
}

uint64_t *(*sub_1D47F7D60(_QWORD *a1))(uint64_t *result)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
  a1[1] = v1;
  return sub_1D47F7D78;
}

uint64_t *sub_1D47F7D78(uint64_t *result)
{
  uint64_t v1;

  v1 = *result;
  if (*result >= 30)
    v1 = 30;
  *(_QWORD *)(result[1] + 24) = v1 & ~(v1 >> 63);
  return result;
}

uint64_t sub_1D47F7D94()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t sub_1D47F7D9C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = 3;
  if (result < 3)
    v2 = result;
  if (v2 <= 1)
    v2 = 1;
  *(_QWORD *)(v1 + 32) = v2;
  return result;
}

uint64_t *(*sub_1D47F7DB8(_QWORD *a1))(uint64_t *result)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
  a1[1] = v1;
  return sub_1D47F7DD0;
}

uint64_t *sub_1D47F7DD0(uint64_t *result)
{
  uint64_t v1;

  v1 = *result;
  if (*result >= 3)
    v1 = 3;
  if (v1 <= 1)
    v1 = 1;
  *(_QWORD *)(result[1] + 32) = v1;
  return result;
}

uint64_t sub_1D47F7DF0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t sub_1D47F7DF8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

_QWORD *(*sub_1D47F7E00(_QWORD *a1))(_QWORD *result)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 40);
  a1[1] = v1;
  return sub_1D47F7E18;
}

_QWORD *sub_1D47F7E18(_QWORD *result)
{
  *(_QWORD *)(result[1] + 40) = *result;
  return result;
}

BOOL sub_1D47F7E24(_QWORD *a1, _QWORD *a2)
{
  return *a2 < *a1;
}

BOOL sub_1D47F7E38(_QWORD *a1, _QWORD *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1D47F7E4C(_QWORD *a1, _QWORD *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1D47F7E60(_QWORD *a1, _QWORD *a2)
{
  return *a1 < *a2;
}

double S2RegionCoverer.__allocating_init()()
{
  uint64_t v0;
  double result;
  uint64_t v2;

  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1D4933D50;
  *(_OWORD *)(v0 + 32) = xmmword_1D4933D60;
  *(_BYTE *)(v0 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 88) = 0;
  *(_QWORD *)(v0 + 96) = v2;
  *(_QWORD *)(v0 + 104) = v2;
  return result;
}

double S2RegionCoverer.init()()
{
  uint64_t v0;
  double result;
  uint64_t v2;

  *(_OWORD *)(v0 + 16) = xmmword_1D4933D50;
  *(_OWORD *)(v0 + 32) = xmmword_1D4933D60;
  *(_BYTE *)(v0 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 88) = 0;
  *(_QWORD *)(v0 + 96) = v2;
  *(_QWORD *)(v0 + 104) = v2;
  return result;
}

uint64_t sub_1D47F7F04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + 48) = 0;
  sub_1D47F8BE0(a1);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  S2CellUnion.normalize()();
  v2 = S2CellUnion.denormalize(minLevel:levelMod:)(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 32));
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1D47F7F88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + 48) = 1;
  sub_1D47F8BE0(a1);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  S2CellUnion.normalize()();
  v2 = S2CellUnion.denormalize(minLevel:levelMod:)(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 32));
  swift_bridgeObjectRelease();
  return v2;
}

BOOL sub_1D47F8010@<W0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 48) = 0;
  sub_1D47F8BE0(a1);
  swift_beginAccess();
  *a2 = *(_QWORD *)(v2 + 96);
  swift_bridgeObjectRetain();
  return S2CellUnion.normalize()();
}

BOOL sub_1D47F8064@<W0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 48) = 1;
  sub_1D47F8BE0(a1);
  swift_beginAccess();
  *a2 = *(_QWORD *)(v2 + 96);
  swift_bridgeObjectRetain();
  return S2CellUnion.normalize()();
}

uint64_t sub_1D47F80BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;

  v3 = v2;
  v5 = *a1;
  v6 = *((unsigned __int8 *)a1 + 8);
  v7 = *((char *)a1 + 9);
  v8 = *((unsigned __int8 *)a1 + 10);
  v9 = a1[2];
  swift_beginAccess();
  sub_1D47F9464(v2 + 56, (uint64_t)&v36);
  if (!v38)
  {
    result = sub_1D47F8FE8((uint64_t)&v36);
LABEL_7:
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  sub_1D46B2A10(&v36, (uint64_t)v40);
  v10 = v41;
  v11 = v42;
  __swift_project_boxed_opaque_existential_1(v40, v41);
  v30 = v5;
  *(_QWORD *)&v36 = v5;
  v12 = v6;
  BYTE8(v36) = v6;
  BYTE9(v36) = v7;
  v13 = v8;
  BYTE10(v36) = v8;
  v14 = v9;
  v37 = v9;
  result = (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v11 + 32))(&v36, v10, v11);
  if ((result & 1) == 0)
  {
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    goto LABEL_7;
  }
  if (*(_QWORD *)(v2 + 16) > v7)
  {
    v16 = 0;
    v17 = v30;
    v18 = v12;
LABEL_19:
    *(_QWORD *)a2 = v17;
    *(_QWORD *)(a2 + 8) = v18 | ((unint64_t)v7 << 8) | (v13 << 16);
    *(_QWORD *)(a2 + 16) = v14;
    *(_QWORD *)(a2 + 24) = v16 & 1;
    *(_QWORD *)(a2 + 32) = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  }
  v18 = v12;
  if (*(_BYTE *)(v2 + 48) != 1)
  {
    v21 = *(_QWORD *)(v2 + 32);
    v22 = v7 + v21;
    if (!__OFADD__(v7, v21))
    {
      v23 = *(_QWORD *)(v3 + 24);
      sub_1D46AAF28((uint64_t)v40, (uint64_t)&v36);
      v24 = v23 < v22;
      v17 = v30;
      if (v24)
      {
        v16 = 1;
      }
      else
      {
        v28 = v38;
        v29 = v39;
        __swift_project_boxed_opaque_existential_1(&v36, v38);
        v31 = v30;
        v32 = v18;
        v33 = v7;
        v34 = v13;
        v35 = v14;
        v16 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v29 + 24))(&v31, v28, v29);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
      goto LABEL_19;
    }
    __break(1u);
    goto LABEL_24;
  }
  v20 = v41;
  v19 = v42;
  __swift_project_boxed_opaque_existential_1(v40, v41);
  *(_QWORD *)&v36 = v30;
  BYTE8(v36) = v18;
  BYTE9(v36) = v7;
  BYTE10(v36) = v13;
  v37 = v14;
  result = (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v19 + 24))(&v36, v20, v19);
  if ((result & 1) != 0)
  {
    v16 = 1;
    v17 = v30;
    goto LABEL_19;
  }
  v25 = *(_QWORD *)(v2 + 32);
  v26 = __OFADD__(v7, v25);
  v27 = v7 + v25;
  if (v26)
  {
LABEL_24:
    __break(1u);
    return result;
  }
  v17 = v30;
  if (*(_QWORD *)(v2 + 24) >= v27)
  {
    v16 = 0;
    goto LABEL_19;
  }
  *(_QWORD *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
}

uint64_t *sub_1D47F834C(uint64_t *result)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  __int16 v41;
  unsigned __int8 v42;
  uint64_t v43;
  char v44;
  _QWORD *v45;

  v5 = result[2];
  if (!v5)
    return result;
  v7 = *result;
  v6 = (_QWORD *)result[1];
  v8 = result[3];
  v9 = (_QWORD *)result[4];
  v40 = *result;
  v41 = (__int16)v6;
  v42 = BYTE2(v6);
  v43 = v5;
  v44 = v8 & 1;
  v45 = v9;
  if ((v8 & 1) != 0)
  {
    v11 = (_QWORD *)(v1 + 96);
    swift_beginAccess();
    v12 = *(_QWORD **)(v1 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v1 + 96) = v12;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v12 = sub_1D48AA89C(0, v12[2] + 1, 1, v12);
      *v11 = v12;
    }
    v15 = v12[2];
    v14 = v12[3];
    if (v15 >= v14 >> 1)
    {
      v12 = sub_1D48AA89C((_QWORD *)(v14 > 1), v15 + 1, 1, v12);
      *v11 = v12;
    }
    v12[2] = v15 + 1;
    v12[v15 + 4] = v7;
    swift_endAccess();
    return (uint64_t *)sub_1D47F94AC(v7, (uint64_t)v6, v5);
  }
  if (*(_QWORD *)(v1 + 16) <= SBYTE1(v6))
    v10 = *(_QWORD *)(v1 + 32);
  else
    v10 = 1;
  v39 = v10;
  v34 = v7;
  LOWORD(v35) = (_WORD)v6;
  BYTE2(v35) = BYTE2(v6);
  v36 = v5;
  sub_1D47F94DC(v7, (uint64_t)v6, v5);
  swift_bridgeObjectRetain();
  v16 = sub_1D47F8794((uint64_t)&v40, &v34, &v39);
  swift_bridgeObjectRelease();
  v17 = v45;
  v18 = v45[2];
  if (!v18)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  v19 = *(_QWORD *)(v1 + 32);
  v20 = 2 * v19;
  v21 = v19 + 0x4000000000000000;
  if ((*(_BYTE *)(v1 + 48) & 1) != 0)
  {
    if ((v21 & 0x8000000000000000) == 0)
      goto LABEL_25;
    __break(1u);
    goto LABEL_15;
  }
  if (v21 < 0)
  {
    __break(1u);
    goto LABEL_44;
  }
  if ((uint64_t)v20 < -64 || (uint64_t)v20 > 64)
    goto LABEL_19;
  if ((v20 & 0x8000000000000000) != 0)
    goto LABEL_50;
  if (v20 >= 0x40)
    goto LABEL_19;
  if (v16 == 1 << (v20 & 0x3E))
    goto LABEL_24;
  while (1)
  {
LABEL_25:
    v2 = HIBYTE(v41);
    if (v20 - 65 < 0xFFFFFFFFFFFFFF7FLL)
    {
LABEL_26:
      v22 = 0;
      goto LABEL_31;
    }
    v21 = SHIBYTE(v41);
    if ((v20 & 0x8000000000000000) == 0)
    {
      if (v20 > 0x3F)
        goto LABEL_26;
      v20 &= 0x3Eu;
      v23 = (uint64_t)SHIBYTE(v41) << v20;
      v24 = __OFADD__(v23, v18);
      v18 += v23;
      if (!v24)
      {
        v22 = v18 << v20;
        goto LABEL_31;
      }
      goto LABEL_49;
    }
LABEL_44:
    LOBYTE(v30) = 63;
    if (v20 > 0xFFFFFFFFFFFFFFC0)
      v30 = -(int)v20 & 0x3E;
    v31 = v21 >> v30;
    v24 = __OFADD__(v31, v18);
    v18 += v31;
    if (!v24)
      break;
LABEL_49:
    __break(1u);
LABEL_50:
    if (v20 <= 0xFFFFFFFFFFFFFFC0)
    {
LABEL_19:
      if (!v16)
      {
LABEL_24:
        if (*(_QWORD *)(v1 + 16) <= SHIBYTE(v41))
        {
          v34 = v40;
          v35 = v41 | ((unint64_t)HIBYTE(v41) << 8) | ((unint64_t)v42 << 16);
          v36 = v43;
          v37 = 1;
          v38 = v17;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1D47F834C(&v34);
          swift_bridgeObjectRelease_n();
          return (uint64_t *)swift_bridgeObjectRelease_n();
        }
      }
    }
    else if (v16 == 1uLL >> (-(char)v20 & 0x3E))
    {
      goto LABEL_24;
    }
  }
  if (v20 <= 0xFFFFFFFFFFFFFFC0)
    v22 = v18 >> 63;
  else
    v22 = v18 >> (-(char)v20 & 0x3E);
LABEL_31:
  v24 = __OFADD__(v22, v16);
  v25 = v22 + v16;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    v3 = -v25;
    if (!__OFSUB__(0, v25))
    {
      v32 = v40;
      v4 = v41;
      v33 = v42;
      v16 = v43;
      v9 = (_QWORD *)(v1 + 104);
      LOBYTE(v7) = v44;
      swift_beginAccess();
      v6 = *(_QWORD **)(v1 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v1 + 104) = v6;
      if ((v26 & 1) != 0)
        goto LABEL_34;
      goto LABEL_42;
    }
  }
  __break(1u);
LABEL_42:
  v6 = sub_1D48AAC34(0, v6[2] + 1, 1, v6);
  *v9 = v6;
LABEL_34:
  v28 = v6[2];
  v27 = v6[3];
  if (v28 >= v27 >> 1)
  {
    v6 = sub_1D48AAC34((_QWORD *)(v27 > 1), v28 + 1, 1, v6);
    *v9 = v6;
  }
  v6[2] = v28 + 1;
  v29 = &v6[6 * v28];
  v29[4] = v3;
  v29[5] = v32;
  *((_BYTE *)v29 + 48) = v4;
  *((_BYTE *)v29 + 49) = v2;
  *((_BYTE *)v29 + 50) = v33;
  v29[7] = v16;
  *((_BYTE *)v29 + 64) = v7;
  v29[9] = v17;
  swift_endAccess();
  swift_bridgeObjectRelease();
  return (uint64_t *)swift_bridgeObjectRelease();
}

uint64_t sub_1D47F8794(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(__int128 *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;

  v5 = *a2;
  v6 = *((_BYTE *)a2 + 8);
  v7 = *((_BYTE *)a2 + 9);
  v8 = *((_BYTE *)a2 + 10);
  v9 = a2[2];
  swift_beginAccess();
  sub_1D47F9464(v3 + 56, (uint64_t)&v43);
  if (!v45)
  {
    sub_1D47F8FE8((uint64_t)&v43);
    return 0;
  }
  result = sub_1D46B2A10(&v43, (uint64_t)v47);
  if (__OFSUB__(*a3, 1))
    goto LABEL_25;
  v34 = a3;
  --*a3;
  *(_QWORD *)&v43 = v5;
  BYTE8(v43) = v6;
  BYTE9(v43) = v7;
  BYTE10(v43) = v8;
  v44 = v9;
  v11 = S2Cell.subdivide()();
  v12 = *(_QWORD *)(v11 + 16);
  if (!v12)
  {
    v36 = 0;
LABEL_23:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    return v36;
  }
  v36 = 0;
  v13 = (_QWORD *)(v11 + 48);
  v14 = a3;
  while (1)
  {
    v15 = *(v13 - 2);
    v16 = *((_BYTE *)v13 - 8);
    v17 = *((_BYTE *)v13 - 7);
    v18 = *((_BYTE *)v13 - 6);
    v19 = *v13;
    if (*v14 >= 1)
      break;
    v38 = *(v13 - 2);
    v39 = v16;
    v40 = v17;
    v41 = v18;
    v42 = v19;
    swift_bridgeObjectRetain();
    sub_1D47F80BC(&v38, (uint64_t)&v43);
    swift_bridgeObjectRelease();
    v25 = v44;
    if (!v44)
      goto LABEL_7;
    v27 = *((_QWORD *)&v43 + 1);
    v26 = v43;
    v28 = v45;
    v29 = v46;
    v30 = *(_QWORD **)(a1 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v37 = v12;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v30 = sub_1D48AAB14(0, v30[2] + 1, 1, v30);
    v32 = v30[2];
    v31 = v30[3];
    if (v32 >= v31 >> 1)
      v30 = sub_1D48AAB14((_QWORD *)(v31 > 1), v32 + 1, 1, v30);
    v30[2] = v32 + 1;
    v33 = &v30[5 * v32];
    v33[4] = v26;
    *((_WORD *)v33 + 20) = v27;
    *((_BYTE *)v33 + 42) = BYTE2(v27);
    v33[6] = v25;
    *((_BYTE *)v33 + 56) = v28 & 1;
    v33[8] = v29;
    result = sub_1D47F94AC(v26, v27, v25);
    *(_QWORD *)(a1 + 32) = v30;
    if ((v28 & 1) != 0)
    {
      v24 = v36 + 1;
      if (__OFADD__(v36, 1))
        goto LABEL_24;
      goto LABEL_20;
    }
LABEL_6:
    v12 = v37;
LABEL_7:
    v13 += 3;
    if (!--v12)
      goto LABEL_23;
  }
  v37 = v12;
  v20 = v48;
  v21 = v49;
  __swift_project_boxed_opaque_existential_1(v47, v48);
  *(_QWORD *)&v43 = v15;
  BYTE8(v43) = v16;
  BYTE9(v43) = v17;
  BYTE10(v43) = v18;
  v44 = v19;
  v22 = *(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v21 + 32);
  swift_bridgeObjectRetain();
  if ((v22(&v43, v20, v21) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v14 = v34;
    goto LABEL_6;
  }
  *(_QWORD *)&v43 = v15;
  BYTE8(v43) = v16;
  BYTE9(v43) = v17;
  BYTE10(v43) = v18;
  v44 = v19;
  v14 = v34;
  v23 = sub_1D47F8794(a1, &v43, v34);
  result = swift_bridgeObjectRelease();
  v24 = v36 + v23;
  if (!__OFADD__(v36, v23))
  {
LABEL_20:
    v36 = v24;
    goto LABEL_6;
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1D47F8A9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  __int16 v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  swift_beginAccess();
  sub_1D47F9464(v0 + 56, (uint64_t)&v16);
  v1 = v19;
  result = sub_1D47F8FE8((uint64_t)&v16);
  if (v1)
  {
    if (qword_1EFEA9F48 != -1)
      goto LABEL_8;
    while (1)
    {
      v3 = 0;
      v4 = 0;
      while (v4 < *((_QWORD *)off_1EFEAB9E8 + 2))
      {
        ++v4;
        v5 = *(_WORD *)((char *)off_1EFEAB9E8 + v3 + 40);
        v6 = *((_BYTE *)off_1EFEAB9E8 + v3 + 42);
        v7 = *(_QWORD *)((char *)off_1EFEAB9E8 + v3 + 48);
        v11 = *(_QWORD *)((char *)off_1EFEAB9E8 + v3 + 32);
        LOWORD(v12) = v5;
        BYTE2(v12) = v6;
        v13 = v7;
        swift_bridgeObjectRetain();
        sub_1D47F80BC(&v11, (uint64_t)&v16);
        swift_bridgeObjectRelease();
        v8 = v16;
        v9 = v17;
        v10 = v18;
        v11 = v16;
        v12 = v17;
        v13 = v18;
        v14 = v19;
        v15 = v20;
        sub_1D47F834C(&v11);
        result = sub_1D47F94AC(v8, v9, v10);
        v3 += 24;
        if (v3 == 144)
          return result;
      }
      __break(1u);
LABEL_8:
      swift_once();
    }
  }
  return result;
}

uint64_t sub_1D47F8BE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v3 = v1 + 104;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v1 + 104) + 16))
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    result = sub_1D4922C88();
    __break(1u);
    return result;
  }
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v1 + 96) + 16))
    goto LABEL_35;
  sub_1D46AAF28(a1, (uint64_t)&v26);
  swift_beginAccess();
  sub_1D47F950C((uint64_t)&v26, v1 + 56);
  swift_endAccess();
  sub_1D47F8A9C();
  swift_beginAccess();
  sub_1D47F7AA8((_QWORD **)(v1 + 104));
  swift_endAccess();
  if (*(_QWORD *)(*(_QWORD *)(v1 + 104) + 16))
  {
    do
    {
      if (*(_BYTE *)(v1 + 48) == 1 && *(_QWORD *)(*(_QWORD *)(v1 + 96) + 16) >= *(_QWORD *)(v1 + 40))
        break;
      swift_beginAccess();
      v4 = *(_QWORD **)v3;
      v5 = *(_QWORD *)(*(_QWORD *)v3 + 16);
      if (!v5)
      {
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      v6 = v4[5];
      v7 = *((unsigned __int8 *)v4 + 48);
      v8 = *((char *)v4 + 49);
      v9 = *((unsigned __int8 *)v4 + 50);
      v10 = v4[7];
      v11 = v4[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
      if (!(_DWORD)isUniquelyReferenced_nonNull_native || (unint64_t)(v5 - 1) > v4[3] >> 1)
        v4 = sub_1D48AAC34(isUniquelyReferenced_nonNull_native, v5, 1, v4);
      swift_arrayDestroy();
      v13 = v4[2];
      if (!v13)
        goto LABEL_36;
      memmove(v4 + 4, v4 + 10, 48 * v13 - 48);
      v4[2] = v13 - 1;
      *(_QWORD *)(v1 + 104) = v4;
      swift_endAccess();
      v14 = *(_QWORD *)(v11 + 16);
      if (*(_QWORD *)(v1 + 16) > v8)
        goto LABEL_16;
      if (v14 == 1)
      {
LABEL_19:
        swift_bridgeObjectRetain();
        v15 = 0;
        v3 = v1 + 104;
        do
        {
          v16 = *(_QWORD *)(v11 + v15 + 48);
          v17 = *(unsigned __int8 *)(v11 + v15 + 56);
          v18 = *(_QWORD *)(v11 + v15 + 64);
          v19 = *(unsigned __int16 *)(v11 + v15 + 40) | ((unint64_t)*(unsigned __int8 *)(v11 + v15 + 42) << 16);
          *(_QWORD *)&v26 = *(_QWORD *)(v11 + v15 + 32);
          *((_QWORD *)&v26 + 1) = v19;
          *(_QWORD *)&v27 = v16;
          *((_QWORD *)&v27 + 1) = v17;
          v28 = v18;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1D47F834C((uint64_t *)&v26);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v15 += 40;
          --v14;
        }
        while (v14);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        continue;
      }
      if ((*(_BYTE *)(v1 + 48) & 1) != 0)
        v20 = 0;
      else
        v20 = v4[2];
      v21 = *(_QWORD *)(*(_QWORD *)(v1 + 96) + 16);
      v22 = __OFADD__(v21, v20);
      v23 = v21 + v20;
      if (v22)
        goto LABEL_32;
      v22 = __OFADD__(v23, v14);
      v24 = v23 + v14;
      if (v22)
        goto LABEL_33;
      if (*(_QWORD *)(v1 + 40) >= v24)
      {
LABEL_16:
        if (v14)
          goto LABEL_19;
      }
      else if (!*(_BYTE *)(v1 + 48))
      {
        *(_QWORD *)&v26 = v6;
        *((_QWORD *)&v26 + 1) = v7 & 0xFFFFFFFFFFFF00FFLL | ((unint64_t)v8 << 8) | (v9 << 16);
        *(_QWORD *)&v27 = v10;
        *((_QWORD *)&v27 + 1) = 1;
        v28 = v11;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D47F834C((uint64_t *)&v26);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        goto LABEL_6;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      v3 = v1 + 104;
    }
    while (*(_QWORD *)(*(_QWORD *)v3 + 16));
  }
  *(_QWORD *)v3 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v28 = 0;
  v26 = 0u;
  v27 = 0u;
  swift_beginAccess();
  sub_1D47F950C((uint64_t)&v26, v1 + 56);
  return swift_endAccess();
}

uint64_t S2RegionCoverer.deinit()
{
  uint64_t v0;

  sub_1D47F8FE8(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D47F8FE8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB9F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t S2RegionCoverer.__deallocating_deinit()
{
  uint64_t v0;

  sub_1D47F8FE8(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D47F905C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)result + 16);
  return result;
}

uint64_t *sub_1D47F906C(uint64_t *result, uint64_t a2)
{
  uint64_t v2;

  v2 = *result;
  if (*result >= 30)
    v2 = 30;
  *(_QWORD *)(*(_QWORD *)a2 + 16) = v2 & ~(v2 >> 63);
  return result;
}

uint64_t sub_1D47F908C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)result + 24);
  return result;
}

uint64_t *sub_1D47F909C(uint64_t *result, uint64_t a2)
{
  uint64_t v2;

  v2 = *result;
  if (*result >= 30)
    v2 = 30;
  *(_QWORD *)(*(_QWORD *)a2 + 24) = v2 & ~(v2 >> 63);
  return result;
}

uint64_t sub_1D47F90BC@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)result + 32);
  return result;
}

uint64_t *sub_1D47F90CC(uint64_t *result, uint64_t a2)
{
  uint64_t v2;

  v2 = *result;
  if (*result >= 3)
    v2 = 3;
  if (v2 <= 1)
    v2 = 1;
  *(_QWORD *)(*(_QWORD *)a2 + 32) = v2;
  return result;
}

uint64_t sub_1D47F90F0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)result + 40);
  return result;
}

_QWORD *sub_1D47F9100(_QWORD *result, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 40) = *result;
  return result;
}

uint64_t type metadata accessor for S2RegionCoverer()
{
  return objc_opt_self();
}

uint64_t method lookup function for S2RegionCoverer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of S2RegionCoverer.minLevel.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of S2RegionCoverer.minLevel.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of S2RegionCoverer.minLevel.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of S2RegionCoverer.maxLevel.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of S2RegionCoverer.maxLevel.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of S2RegionCoverer.maxLevel.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of S2RegionCoverer.levelMod.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of S2RegionCoverer.levelMod.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of S2RegionCoverer.levelMod.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of S2RegionCoverer.maxCells.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of S2RegionCoverer.maxCells.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of S2RegionCoverer.maxCells.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of S2RegionCoverer.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 432))();
}

uint64_t dispatch thunk of S2RegionCoverer.getCovering(region:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of S2RegionCoverer.getInteriorCovering(region:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of S2RegionCoverer.getCoveringUnion(region:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of S2RegionCoverer.getInteriorCoveringUnion(region:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t destroy for S2RegionCoverer.QueueEntry()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for S2RegionCoverer.QueueEntry(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for S2RegionCoverer.QueueEntry(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for S2RegionCoverer.QueueEntry(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for S2RegionCoverer.QueueEntry(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for S2RegionCoverer.QueueEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for S2RegionCoverer.QueueEntry()
{
  return &type metadata for S2RegionCoverer.QueueEntry;
}

unint64_t sub_1D47F9420()
{
  unint64_t result;

  result = qword_1EFEAB9F8;
  if (!qword_1EFEAB9F8)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4933DE4, &type metadata for S2RegionCoverer.QueueEntry);
    atomic_store(result, (unint64_t *)&qword_1EFEAB9F8);
  }
  return result;
}

uint64_t sub_1D47F9464(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB9F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D47F94AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D47F94DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D47F950C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB9F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D47F9554(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  __int16 v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  __int16 v44;
  char v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t i;
  uint64_t v102;
  uint64_t v103;
  _OWORD *v104;
  uint64_t v105;
  uint64_t v106;
  __int16 v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  __int128 v111;
  char *v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *__dst;
  uint64_t v128;

  v3 = a1[1];
  result = sub_1D4922E08();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v99 = 0;
      v100 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v102 = *(_QWORD *)(v100 + 48 * i);
        v103 = v99;
        do
        {
          v104 = (_OWORD *)(v100 + v103);
          if (*(_QWORD *)(v100 + v103) >= v102)
            break;
          if (!v100)
            goto LABEL_140;
          v105 = v100 + v103;
          v106 = *(_QWORD *)(v100 + v103 + 56);
          v107 = *(_WORD *)(v100 + v103 + 64);
          result = *(unsigned __int8 *)(v100 + v103 + 66);
          v108 = *(_QWORD *)(v100 + v103 + 72);
          v109 = *(_BYTE *)(v100 + v103 + 80);
          v110 = *(_QWORD *)(v100 + v103 + 88);
          v111 = v104[1];
          *(_OWORD *)(v100 + v103 + 48) = *v104;
          *(_OWORD *)(v100 + v103 + 64) = v111;
          *(_OWORD *)(v100 + v103 + 80) = v104[2];
          *(_QWORD *)v105 = v102;
          *(_QWORD *)(v105 + 8) = v106;
          *(_WORD *)(v105 + 16) = v107;
          *(_BYTE *)(v105 + 18) = result;
          *(_QWORD *)(v105 + 24) = v108;
          *(_BYTE *)(v105 + 32) = v109;
          v103 -= 48;
          *(_QWORD *)(v105 + 40) = v110;
        }
        while (v103 != -48);
        v99 += 48;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v6 = result;
  v128 = v1;
  v121 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_102:
      v112 = v12;
      v123 = v9;
      if (v13 >= 2)
      {
        v113 = *v121;
        do
        {
          v114 = v13 - 2;
          if (v13 < 2)
            goto LABEL_131;
          if (!v113)
            goto LABEL_144;
          v115 = v112;
          v116 = *(_QWORD *)&v112[16 * v114 + 32];
          v117 = *(_QWORD *)&v112[16 * v13 + 24];
          sub_1D47F9CD0((char *)(v113 + 48 * v116), (char *)(v113 + 48 * *(_QWORD *)&v112[16 * v13 + 16]), v113 + 48 * v117, __dst);
          if (v128)
            break;
          if (v117 < v116)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v115 = sub_1D46D5B88((uint64_t)v115);
          if (v114 >= *((_QWORD *)v115 + 2))
            goto LABEL_133;
          v118 = &v115[16 * v114 + 32];
          *(_QWORD *)v118 = v116;
          *((_QWORD *)v118 + 1) = v117;
          v119 = *((_QWORD *)v115 + 2);
          if (v13 > v119)
            goto LABEL_134;
          memmove(&v115[16 * v13 + 16], &v115[16 * v13 + 32], 16 * (v119 - v13));
          v112 = v115;
          *((_QWORD *)v115 + 2) = v119 - 1;
          v13 = v119 - 1;
        }
        while (v119 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v123 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v123 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_1D4922850();
    *(_QWORD *)(v8 + 16) = v7;
    v123 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v122 = *a1 + 96;
  v120 = *a1 + 40;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v124 = v6;
  v125 = v3;
  v126 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(_QWORD *)(v11 + 48 * v10);
      v16 = *(_QWORD *)(v11 + 48 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (uint64_t *)(v122 + 48 * v14);
        v18 = v15;
        while (1)
        {
          v20 = *v17;
          v17 += 6;
          v19 = v20;
          if (v16 < v15 == v18 >= v20)
            break;
          ++v10;
          v18 = v19;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14)
          goto LABEL_137;
        if (v14 < v10)
        {
          v21 = 48 * v10;
          v22 = 48 * v14;
          v23 = v10;
          v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11)
                goto LABEL_143;
              v25 = (_OWORD *)(v11 + v22);
              v26 = *(_WORD *)(v11 + v22 + 16);
              v27 = v11 + v21;
              v28 = *(_BYTE *)(v11 + v22 + 18);
              v29 = *(_QWORD *)(v11 + v22 + 24);
              v30 = *(_BYTE *)(v11 + v22 + 32);
              v31 = *(_QWORD *)(v11 + v22 + 40);
              v32 = *(_OWORD *)(v11 + v22);
              v34 = *(_OWORD *)(v11 + v21 - 32);
              v33 = *(_OWORD *)(v11 + v21 - 16);
              *v25 = *(_OWORD *)(v11 + v21 - 48);
              v25[1] = v34;
              v25[2] = v33;
              *(_OWORD *)(v27 - 48) = v32;
              *(_WORD *)(v27 - 32) = v26;
              *(_BYTE *)(v27 - 30) = v28;
              *(_QWORD *)(v27 - 24) = v29;
              *(_BYTE *)(v27 - 16) = v30;
              *(_QWORD *)(v27 - 8) = v31;
            }
            ++v24;
            v21 -= 48;
            v22 += 48;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_135;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v35 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_138;
    if (v35 >= v3)
      v35 = v3;
    if (v35 < v14)
      break;
    if (v10 != v35)
    {
      v36 = v120 + 48 * v10;
      do
      {
        v37 = *(_QWORD *)(v11 + 48 * v10);
        v38 = v14;
        v39 = v36;
        do
        {
          v40 = (_OWORD *)(v39 - 88);
          if (*(_QWORD *)(v39 - 88) >= v37)
            break;
          if (!v11)
            goto LABEL_141;
          v42 = *(_OWORD *)(v39 - 72);
          v41 = *(_OWORD *)(v39 - 56);
          *(_QWORD *)(v39 - 48) = *(_QWORD *)v39;
          v39 -= 48;
          v43 = *(_QWORD *)(v39 + 16);
          v44 = *(_WORD *)(v39 + 24);
          v45 = *(_BYTE *)(v39 + 26);
          v46 = *(_QWORD *)(v39 + 32);
          v47 = *(_BYTE *)(v39 + 40);
          v40[3] = *v40;
          v40[4] = v42;
          v40[5] = v41;
          *(_QWORD *)(v39 - 40) = v37;
          *(_QWORD *)(v39 - 32) = v43;
          *(_WORD *)(v39 - 24) = v44;
          *(_BYTE *)(v39 - 22) = v45;
          *(_QWORD *)(v39 - 16) = v46;
          *(_BYTE *)(v39 - 8) = v47;
          ++v38;
        }
        while (v10 != v38);
        ++v10;
        v36 += 48;
      }
      while (v10 != v35);
      v10 = v35;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1D46D5278(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v49 = *((_QWORD *)v12 + 2);
    v48 = *((_QWORD *)v12 + 3);
    v13 = v49 + 1;
    v11 = v126;
    if (v49 >= v48 >> 1)
    {
      v98 = sub_1D46D5278((char *)(v48 > 1), v49 + 1, 1, v12);
      v11 = v126;
      v12 = v98;
    }
    *((_QWORD *)v12 + 2) = v13;
    v50 = v12 + 32;
    v51 = &v12[16 * v49 + 32];
    *(_QWORD *)v51 = v14;
    *((_QWORD *)v51 + 1) = v10;
    if (v49)
    {
      while (1)
      {
        v52 = v13 - 1;
        if (v13 >= 4)
        {
          v57 = &v50[16 * v13];
          v58 = *((_QWORD *)v57 - 8);
          v59 = *((_QWORD *)v57 - 7);
          v63 = __OFSUB__(v59, v58);
          v60 = v59 - v58;
          if (v63)
            goto LABEL_119;
          v62 = *((_QWORD *)v57 - 6);
          v61 = *((_QWORD *)v57 - 5);
          v63 = __OFSUB__(v61, v62);
          v55 = v61 - v62;
          v56 = v63;
          if (v63)
            goto LABEL_120;
          v64 = v13 - 2;
          v65 = &v50[16 * v13 - 32];
          v67 = *(_QWORD *)v65;
          v66 = *((_QWORD *)v65 + 1);
          v63 = __OFSUB__(v66, v67);
          v68 = v66 - v67;
          if (v63)
            goto LABEL_122;
          v63 = __OFADD__(v55, v68);
          v69 = v55 + v68;
          if (v63)
            goto LABEL_125;
          if (v69 >= v60)
          {
            v87 = &v50[16 * v52];
            v89 = *(_QWORD *)v87;
            v88 = *((_QWORD *)v87 + 1);
            v63 = __OFSUB__(v88, v89);
            v90 = v88 - v89;
            if (v63)
              goto LABEL_129;
            v80 = v55 < v90;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v81 = *((_QWORD *)v12 + 4);
            v82 = *((_QWORD *)v12 + 5);
            v63 = __OFSUB__(v82, v81);
            v74 = v82 - v81;
            v75 = v63;
            goto LABEL_77;
          }
          v54 = *((_QWORD *)v12 + 4);
          v53 = *((_QWORD *)v12 + 5);
          v63 = __OFSUB__(v53, v54);
          v55 = v53 - v54;
          v56 = v63;
        }
        if ((v56 & 1) != 0)
          goto LABEL_121;
        v64 = v13 - 2;
        v70 = &v50[16 * v13 - 32];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v73 = __OFSUB__(v71, v72);
        v74 = v71 - v72;
        v75 = v73;
        if (v73)
          goto LABEL_124;
        v76 = &v50[16 * v52];
        v78 = *(_QWORD *)v76;
        v77 = *((_QWORD *)v76 + 1);
        v63 = __OFSUB__(v77, v78);
        v79 = v77 - v78;
        if (v63)
          goto LABEL_127;
        if (__OFADD__(v74, v79))
          goto LABEL_128;
        if (v74 + v79 >= v55)
        {
          v80 = v55 < v79;
LABEL_83:
          if (v80)
            v52 = v64;
          goto LABEL_85;
        }
LABEL_77:
        if ((v75 & 1) != 0)
          goto LABEL_123;
        v83 = &v50[16 * v52];
        v85 = *(_QWORD *)v83;
        v84 = *((_QWORD *)v83 + 1);
        v63 = __OFSUB__(v84, v85);
        v86 = v84 - v85;
        if (v63)
          goto LABEL_126;
        if (v86 < v74)
          goto LABEL_15;
LABEL_85:
        v91 = v52 - 1;
        if (v52 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11)
          goto LABEL_142;
        v92 = v12;
        v93 = &v50[16 * v91];
        v94 = *(_QWORD *)v93;
        v95 = &v50[16 * v52];
        v96 = *((_QWORD *)v95 + 1);
        sub_1D47F9CD0((char *)(v11 + 48 * *(_QWORD *)v93), (char *)(v11 + 48 * *(_QWORD *)v95), v11 + 48 * v96, __dst);
        if (v128)
          goto LABEL_93;
        if (v96 < v94)
          goto LABEL_116;
        if (v52 > *((_QWORD *)v92 + 2))
          goto LABEL_117;
        *(_QWORD *)v93 = v94;
        *(_QWORD *)&v50[16 * v91 + 8] = v96;
        v97 = *((_QWORD *)v92 + 2);
        if (v52 >= v97)
          goto LABEL_118;
        v12 = v92;
        v13 = v97 - 1;
        memmove(&v50[16 * v52], v95 + 16, 16 * (v97 - 1 - v52));
        *((_QWORD *)v92 + 2) = v97 - 1;
        v11 = v126;
        if (v97 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v124;
    v3 = v125;
    if (v10 >= v125)
    {
      v9 = v123;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_1D4922C28();
  __break(1u);
  return result;
}

uint64_t sub_1D47F9CD0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  __int128 *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t result;
  __int128 *v28;
  __int128 *v29;
  char *v30;

  v4 = (__int128 *)__dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 48;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 48;
  v30 = __src;
  v29 = (__int128 *)__dst;
  if (v9 >= v11)
  {
    if (v10 >= -47)
    {
      if (__dst != a2 || &a2[48 * v11] <= __dst)
        memmove(__dst, a2, 48 * v11);
      v18 = &v4[3 * v11];
      v28 = v18;
      v30 = v6;
      if (v7 < v6 && v10 >= 48)
      {
        v19 = (char *)(a3 - 48);
        v20 = v6;
        while (1)
        {
          v21 = v19 + 48;
          v22 = *((_QWORD *)v20 - 6);
          v20 -= 48;
          if (v22 >= *((_QWORD *)v18 - 6))
          {
            v28 = v18 - 3;
            if (v21 < (char *)v18 || v19 >= (char *)v18 || v21 != (char *)v18)
            {
              v25 = *(v18 - 3);
              v26 = *(v18 - 1);
              *((_OWORD *)v19 + 1) = *(v18 - 2);
              *((_OWORD *)v19 + 2) = v26;
              *(_OWORD *)v19 = v25;
            }
            v20 = v6;
            v18 -= 3;
            if (v6 <= v7)
              goto LABEL_38;
          }
          else
          {
            if (v21 != v6 || v19 >= v6)
            {
              v23 = *(_OWORD *)v20;
              v24 = *((_OWORD *)v20 + 2);
              *((_OWORD *)v19 + 1) = *((_OWORD *)v20 + 1);
              *((_OWORD *)v19 + 2) = v24;
              *(_OWORD *)v19 = v23;
            }
            v30 = v20;
            if (v20 <= v7)
              goto LABEL_38;
          }
          v19 -= 48;
          v6 = v20;
          if (v18 <= v4)
            goto LABEL_38;
        }
      }
      goto LABEL_38;
    }
  }
  else if (v8 >= -47)
  {
    if (__dst != __src || &__src[48 * v9] <= __dst)
      memmove(__dst, __src, 48 * v9);
    v12 = &v4[3 * v9];
    v28 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 48)
    {
      do
      {
        if (*(_QWORD *)v4 >= *(_QWORD *)v6)
        {
          if (v7 != (char *)v4)
          {
            v16 = *v4;
            v17 = v4[2];
            *((_OWORD *)v7 + 1) = v4[1];
            *((_OWORD *)v7 + 2) = v17;
            *(_OWORD *)v7 = v16;
          }
          v4 += 3;
          v29 = v4;
          v13 = v6;
        }
        else
        {
          v13 = v6 + 48;
          if (v7 < v6 || v7 >= v13 || v7 != v6)
          {
            v14 = *(_OWORD *)v6;
            v15 = *((_OWORD *)v6 + 2);
            *((_OWORD *)v7 + 1) = *((_OWORD *)v6 + 1);
            *((_OWORD *)v7 + 2) = v15;
            *(_OWORD *)v7 = v14;
          }
        }
        v7 += 48;
        if (v4 >= v12)
          break;
        v6 = v13;
      }
      while ((unint64_t)v13 < a3);
      v30 = v7;
    }
LABEL_38:
    sub_1D46D5A10((void **)&v30, (const void **)&v29, &v28);
    return 1;
  }
  result = sub_1D4922C88();
  __break(1u);
  return result;
}

uint64_t destroy for S2RegionCoverer.Candidate()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for S2RegionCoverer.Candidate(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_WORD *)(a1 + 9) = *(_WORD *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for S2RegionCoverer.Candidate(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for S2RegionCoverer.Candidate(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_WORD *)(a1 + 9) = *(_WORD *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for S2RegionCoverer.Candidate(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for S2RegionCoverer.Candidate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for S2RegionCoverer.Candidate()
{
  return &type metadata for S2RegionCoverer.Candidate;
}

uint64_t _s14DetectedResultVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s14DetectedResultVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14DetectedResultVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  return a1;
}

__n128 __swift_memcpy76_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 60) = *(_OWORD *)(a2 + 60);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s14DetectedResultVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  return a1;
}

uint64_t _s14DetectedResultVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 76))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s14DetectedResultVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 76) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 76) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s14DetectedResultVMa()
{
  return &_s14DetectedResultVN;
}

uint64_t _s7RequestVwxx(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_unknownObjectRelease();
}

uint64_t _s7RequestVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t _s7RequestVwca(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t _s7RequestVwta(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *_s7RequestVMa()
{
  return &_s7RequestVN;
}

uint64_t sub_1D47FA548()
{
  double *v0;
  double v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  CGFloat MinX;
  uint64_t v12;
  unint64_t v13;
  CGFloat MinY;
  CGFloat Width;
  CGFloat Height;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  CGRect v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v5 = v0[4];
  v6 = *((_DWORD *)v0 + 18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
  v7 = swift_allocObject();
  v8 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v7 + 16) = xmmword_1D4927560;
  v9 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v7 + 56) = v8;
  *(_QWORD *)(v7 + 64) = v9;
  *(double *)(v7 + 32) = v1;
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1D4927560;
  v25.origin.x = v2;
  v25.origin.y = v3;
  v25.size.width = v4;
  v25.size.height = v5;
  MinX = CGRectGetMinX(v25);
  v12 = MEMORY[0x1E0DEF040];
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEF040];
  v13 = sub_1D46A492C();
  *(_QWORD *)(v10 + 64) = v13;
  *(CGFloat *)(v10 + 32) = MinX;
  v26.origin.x = v2;
  v26.origin.y = v3;
  v26.size.width = v4;
  v26.size.height = v5;
  MinY = CGRectGetMinY(v26);
  *(_QWORD *)(v10 + 96) = v12;
  *(_QWORD *)(v10 + 104) = v13;
  *(CGFloat *)(v10 + 72) = MinY;
  v27.origin.x = v2;
  v27.origin.y = v3;
  v27.size.width = v4;
  v27.size.height = v5;
  Width = CGRectGetWidth(v27);
  *(_QWORD *)(v10 + 136) = v12;
  *(_QWORD *)(v10 + 144) = v13;
  *(CGFloat *)(v10 + 112) = Width;
  v28.origin.x = v2;
  v28.origin.y = v3;
  v28.size.width = v4;
  v28.size.height = v5;
  Height = CGRectGetHeight(v28);
  *(_QWORD *)(v10 + 176) = v12;
  *(_QWORD *)(v10 + 184) = v13;
  *(CGFloat *)(v10 + 152) = Height;
  v17 = sub_1D4922640();
  v19 = v18;
  v20 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 96) = MEMORY[0x1E0DEA968];
  v21 = sub_1D46FBE30();
  *(_QWORD *)(v7 + 104) = v21;
  *(_QWORD *)(v7 + 72) = v17;
  *(_QWORD *)(v7 + 80) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D4922B80();
  sub_1D492270C();
  swift_bridgeObjectRetain();
  sub_1D492270C();
  swift_bridgeObjectRelease();
  sub_1D492270C();
  swift_bridgeObjectRetain();
  sub_1D492270C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  *(_QWORD *)(v7 + 136) = v20;
  *(_QWORD *)(v7 + 144) = v21;
  v22 = MEMORY[0x1E0DEB188];
  v23 = MEMORY[0x1E0DEB1E8];
  *(_QWORD *)(v7 + 112) = 0;
  *(_QWORD *)(v7 + 120) = 0xE000000000000000;
  *(_QWORD *)(v7 + 176) = v22;
  *(_QWORD *)(v7 + 184) = v23;
  *(_DWORD *)(v7 + 152) = v6;
  return sub_1D4922640();
}

uint64_t sub_1D47FA7E0(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D360);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[1];
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v12 = v1[5];
  v22 = v1[6];
  v23 = v12;
  v13 = v1[7];
  v20 = v1[8];
  v21 = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D47FAD24();
  sub_1D4922F58();
  LOBYTE(v25) = 0;
  sub_1D4922DB4();
  if (!v2)
  {
    v15 = v20;
    v14 = v21;
    v17 = v22;
    v16 = v23;
    v25 = v8;
    v26 = v9;
    v27 = v10;
    v28 = v11;
    v24 = 1;
    sub_1D47FAD68();
    sub_1D4922DCC();
    v25 = v16;
    v26 = v17;
    v27 = v14;
    v28 = v15;
    v24 = 2;
    sub_1D47FADAC();
    sub_1D4922DCC();
    LOBYTE(v25) = 3;
    sub_1D4922DA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1D47FA9C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABA10);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D47FAD24();
  sub_1D4922F4C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v23) = 0;
  v9 = sub_1D4922D18();
  v22 = 1;
  sub_1D47FADF0();
  sub_1D4922D30();
  v10 = v23;
  v11 = v24;
  v12 = v25;
  v13 = v26;
  v22 = 2;
  sub_1D47FAE34();
  sub_1D4922D30();
  v14 = v26;
  v19 = v25;
  v20 = v23;
  LOBYTE(v23) = 3;
  v21 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D4922D0C();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v12;
  *(_QWORD *)(a2 + 32) = v13;
  v17 = v21;
  *(_QWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v19;
  *(_QWORD *)(a2 + 64) = v14;
  *(_DWORD *)(a2 + 72) = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D47FAC0C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D47FAC3C + 4 * byte_1D4933E60[*v0]))(0x6E6F697469736F70, 0xE800000000000000);
}

uint64_t sub_1D47FAC3C()
{
  return 0x676E69646E756F62;
}

uint64_t sub_1D47FAC5C()
{
  return 0x79676F6C6F746E6FLL;
}

uint64_t sub_1D47FAC70()
{
  return 0x65726F6373;
}

uint64_t sub_1D47FAC84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D47FB02C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D47FACA8()
{
  sub_1D47FAD24();
  return sub_1D4922F64();
}

uint64_t sub_1D47FACD0()
{
  sub_1D47FAD24();
  return sub_1D4922F70();
}

uint64_t sub_1D47FACF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D47FA9C0(a1, a2);
}

uint64_t sub_1D47FAD0C(_QWORD *a1)
{
  return sub_1D47FA7E0(a1);
}

unint64_t sub_1D47FAD24()
{
  unint64_t result;

  result = qword_1ED98CCA8;
  if (!qword_1ED98CCA8)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4933FC8, &_s14DetectedResultV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED98CCA8);
  }
  return result;
}

unint64_t sub_1D47FAD68()
{
  unint64_t result;

  result = qword_1ED98CC90;
  if (!qword_1ED98CC90)
  {
    result = MEMORY[0x1D82634E0](&protocol conformance descriptor for NormalizedRect, &type metadata for NormalizedRect);
    atomic_store(result, (unint64_t *)&qword_1ED98CC90);
  }
  return result;
}

unint64_t sub_1D47FADAC()
{
  unint64_t result;

  result = qword_1ED98CC28;
  if (!qword_1ED98CC28)
  {
    result = MEMORY[0x1D82634E0](&protocol conformance descriptor for OntologyNode, &type metadata for OntologyNode);
    atomic_store(result, (unint64_t *)&qword_1ED98CC28);
  }
  return result;
}

unint64_t sub_1D47FADF0()
{
  unint64_t result;

  result = qword_1EFEABA18;
  if (!qword_1EFEABA18)
  {
    result = MEMORY[0x1D82634E0](&protocol conformance descriptor for NormalizedRect, &type metadata for NormalizedRect);
    atomic_store(result, (unint64_t *)&qword_1EFEABA18);
  }
  return result;
}

unint64_t sub_1D47FAE34()
{
  unint64_t result;

  result = qword_1EFEABA20;
  if (!qword_1EFEABA20)
  {
    result = MEMORY[0x1D82634E0](&protocol conformance descriptor for OntologyNode, &type metadata for OntologyNode);
    atomic_store(result, (unint64_t *)&qword_1EFEABA20);
  }
  return result;
}

ValueMetadata *_s20ClassificationResultVMa()
{
  return &_s20ClassificationResultVN;
}

uint64_t _s14DetectedResultV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D47FAED4 + 4 * byte_1D4933E69[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D47FAF08 + 4 * byte_1D4933E64[v4]))();
}

uint64_t sub_1D47FAF08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D47FAF10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D47FAF18);
  return result;
}

uint64_t sub_1D47FAF24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D47FAF2CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D47FAF30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D47FAF38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14DetectedResultV10CodingKeysOMa()
{
  return &_s14DetectedResultV10CodingKeysON;
}

unint64_t sub_1D47FAF58()
{
  unint64_t result;

  result = qword_1EFEABA30;
  if (!qword_1EFEABA30)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4933FA0, &_s14DetectedResultV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFEABA30);
  }
  return result;
}

unint64_t sub_1D47FAFA0()
{
  unint64_t result;

  result = qword_1ED98CCC8;
  if (!qword_1ED98CCC8)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4933F10, &_s14DetectedResultV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED98CCC8);
  }
  return result;
}

unint64_t sub_1D47FAFE8()
{
  unint64_t result;

  result = qword_1ED98CCB0[0];
  if (!qword_1ED98CCB0[0])
  {
    result = MEMORY[0x1D82634E0](&unk_1D4933F38, &_s14DetectedResultV10CodingKeysON);
    atomic_store(result, qword_1ED98CCB0);
  }
  return result;
}

uint64_t sub_1D47FB02C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D4922E38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E69646E756F62 && a2 == 0xEB00000000786F42 || (sub_1D4922E38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79676F6C6F746E6FLL && a2 == 0xE800000000000000 || (sub_1D4922E38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D4922E38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1D47FB1F4@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v61;
  unint64_t v62;
  _OWORD *v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  CGFloat v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t *v85;
  void *v86;
  void *v87;
  uint64_t *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  os_log_type_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  _QWORD *v100;
  CGFloat v101;
  CGFloat v102;
  CGFloat v103;
  CGFloat v104;
  uint64_t v105;
  CGFloat MinX;
  uint64_t v107;
  unint64_t v108;
  CGFloat MinY;
  CGFloat Width;
  CGFloat Height;
  uint64_t v112;
  unint64_t v113;
  NSObject *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  char v119;
  unint64_t v120;
  unint64_t v121;
  _QWORD *v122;
  CGFloat *v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __int128 v129;
  uint64_t v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  uint64_t result;
  _QWORD v136[3];
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  __int128 v142;
  __int128 v143;
  uint64_t v144;
  int v145;
  double *v146;
  char *v147;
  char *v148;
  NSObject *v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  _OWORD v171[3];
  uint64_t v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  uint64_t v184;
  CGRect v185;
  CGRect v186;
  CGRect v187;
  CGRect v188;

  v150 = sub_1D4922370();
  v6 = *(_QWORD *)(v150 - 8);
  MEMORY[0x1E0C80A78](v150);
  v8 = (char *)v136 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v155 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v136 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (double *)((char *)v136 - v13);
  v15 = a2[9];
  v16 = a2[7];
  v181 = a2[8];
  v182 = v15;
  v17 = a2[9];
  v183 = a2[10];
  v18 = a2[5];
  v19 = a2[3];
  v177 = a2[4];
  v178 = v18;
  v20 = a2[5];
  v21 = a2[7];
  v179 = a2[6];
  v180 = v21;
  v22 = a2[1];
  v173 = *a2;
  v174 = v22;
  v23 = a2[3];
  v25 = *a2;
  v24 = a2[1];
  v175 = a2[2];
  v176 = v23;
  v26 = a2[10];
  v171[1] = v17;
  v171[2] = v26;
  v167 = v177;
  v168 = v20;
  v169 = v179;
  v170 = v16;
  v171[0] = v181;
  v163 = v25;
  v164 = v24;
  v184 = *((_QWORD *)a2 + 22);
  v172 = *((_QWORD *)a2 + 22);
  v165 = v175;
  v166 = v19;
  v27 = sub_1D4829664();
  v157 = *(_QWORD *)(v27 + 16);
  if (!v157)
  {
    swift_bridgeObjectRelease();
    v125 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_52:
    v126 = type metadata accessor for VisualSearchResultInternal(0);
    sub_1D47FBEFC(a1, a3 + *(int *)(v126 + 24));
    v127 = a3 + *(int *)(v126 + 28);
    v128 = sub_1D4921D1C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56))(v127, 1, 1, v128);
    v129 = v182;
    *(_OWORD *)(a3 + 128) = v181;
    *(_OWORD *)(a3 + 144) = v129;
    *(_OWORD *)(a3 + 160) = v183;
    v130 = v184;
    v131 = v178;
    *(_OWORD *)(a3 + 64) = v177;
    *(_OWORD *)(a3 + 80) = v131;
    v132 = v180;
    *(_OWORD *)(a3 + 96) = v179;
    *(_OWORD *)(a3 + 112) = v132;
    v133 = v174;
    *(_OWORD *)a3 = v173;
    *(_OWORD *)(a3 + 16) = v133;
    v134 = v176;
    *(_OWORD *)(a3 + 32) = v175;
    *(_OWORD *)(a3 + 48) = v134;
    *(_QWORD *)(a3 + 176) = v130;
    *(_QWORD *)(a3 + 184) = v125;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB9E0);
    swift_storeEnumTagMultiPayload();
    return sub_1D46B2E18((uint64_t)&v173);
  }
  v152 = v12;
  v153 = v6;
  v148 = v8;
  v144 = a3;
  v28 = type metadata accessor for ServerSearchResult();
  v29 = 0;
  v156 = 0;
  v30 = v155;
  v31 = *(int *)(v28 + 20);
  v160 = v27 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
  v161 = v31;
  v147 = (char *)&v163 + 8;
  v136[1] = "neric";
  v136[0] = 0x80000001D493F830;
  *(_QWORD *)&v32 = 136315394;
  v143 = v32;
  v142 = xmmword_1D4927560;
  v141 = 0x80000001D493FD60;
  v140 = MEMORY[0x1E0DEE9B8] + 8;
  v158 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v154 = a1;
  v33 = v27;
  v151 = v27;
  v34 = v157;
  v146 = v14;
  while (v29 < *(_QWORD *)(v33 + 16))
  {
    sub_1D469C304(v160 + *(_QWORD *)(v30 + 72) * v29, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v35 = *(_QWORD *)(a1 + v161);
    if (*(_QWORD *)(v35 + 16))
    {
      v36 = *v14;
      v37 = v14[1];
      v38 = v14[2];
      v39 = v14[3];
      v40 = sub_1D47CA748(*v14, v37, v38, v39);
      if ((v41 & 1) != 0)
      {
        if (*(_QWORD *)(v35 + 16))
        {
          v42 = *(_QWORD *)(*(_QWORD *)(v35 + 56) + 16 * v40);
          swift_bridgeObjectRetain();
          v43 = sub_1D47CA748(v36, v37, v38, v39);
          if ((v44 & 1) != 0)
          {
            v45 = *(_QWORD *)(*(_QWORD *)(v35 + 56) + 16 * v43 + 8);
            v46 = *((_QWORD *)v14 + 5);
            v47 = *(_QWORD *)(v46 + 16);
            v159 = v45;
            if (v47)
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v48 = v47 - 1;
              v49 = 32;
              v50 = MEMORY[0x1E0DEE9D8];
              v51 = v156;
              v52 = v42;
              while (1)
              {
                v53 = *(_OWORD *)(v46 + v49 + 16);
                v163 = *(_OWORD *)(v46 + v49);
                v164 = v53;
                v54 = *(_OWORD *)(v46 + v49 + 32);
                v55 = *(_OWORD *)(v46 + v49 + 48);
                v56 = *(_OWORD *)(v46 + v49 + 80);
                v167 = *(_OWORD *)(v46 + v49 + 64);
                v168 = v56;
                v165 = v54;
                v166 = v55;
                v57 = *(_OWORD *)(v46 + v49 + 96);
                v58 = *(_OWORD *)(v46 + v49 + 112);
                v59 = *(_OWORD *)(v46 + v49 + 128);
                *(_OWORD *)((char *)v171 + 12) = *(_OWORD *)(v46 + v49 + 140);
                v170 = v58;
                v171[0] = v59;
                v169 = v57;
                if (HIBYTE(v58) == 1)
                {
                  sub_1D46A47CC((uint64_t)&v163);
                  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  v162 = v50;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    sub_1D48AB57C(0, *(_QWORD *)(v50 + 16) + 1, 1);
                    v50 = v162;
                  }
                  v62 = *(_QWORD *)(v50 + 16);
                  v61 = *(_QWORD *)(v50 + 24);
                  if (v62 >= v61 >> 1)
                  {
                    sub_1D48AB57C(v61 > 1, v62 + 1, 1);
                    v50 = v162;
                  }
                  *(_QWORD *)(v50 + 16) = v62 + 1;
                  v63 = (_OWORD *)(v50 + 160 * v62);
                  v64 = v164;
                  v63[2] = v163;
                  v63[3] = v64;
                  v65 = v165;
                  v66 = v166;
                  v67 = v168;
                  v63[6] = v167;
                  v63[7] = v67;
                  v63[4] = v65;
                  v63[5] = v66;
                  v68 = v169;
                  v69 = v170;
                  v70 = v171[0];
                  *(_OWORD *)((char *)v63 + 172) = *(_OWORD *)((char *)v171 + 12);
                  v63[9] = v69;
                  v63[10] = v70;
                  v63[8] = v68;
                  v42 = v52;
                }
                if (!v48)
                  break;
                --v48;
                v49 += 160;
              }
              swift_bridgeObjectRelease();
              a1 = v154;
              v33 = v151;
              v14 = v146;
            }
            else
            {
              swift_bridgeObjectRetain();
              v50 = MEMORY[0x1E0DEE9D8];
              v51 = v156;
            }
            *(_QWORD *)&v163 = v50;
            swift_retain();
            sub_1D482A338((uint64_t *)&v163);
            v34 = v157;
            if (v51)
              goto LABEL_54;
            swift_release();
            if (*(_QWORD *)(v163 + 16))
            {
              v71 = *(_BYTE *)(v163 + 32);
              v72 = swift_release();
              MEMORY[0x1E0C80A78](v72);
              LOBYTE(v136[-2]) = v71;
              v136[-1] = v14;
              v73 = sub_1D46B39B4((void (*)(uint64_t))sub_1D47FBF44, (uint64_t)&v136[-4], v42);
              swift_bridgeObjectRelease();
              v74 = *v14;
              v75 = *((_QWORD *)v14 + 1);
              v76 = *((_QWORD *)v14 + 2);
              v77 = *((_QWORD *)v14 + 3);
              if (qword_1ED98F398 != -1)
                swift_once();
              v78 = v150;
              v156 = 0;
              if (byte_1ED98F388 != 1)
                goto LABEL_40;
              v79 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
              v80 = objc_msgSend(v79, sel_bundleIdentifier);

              if (v80)
              {
                v81 = sub_1D492261C();
                v83 = v82;

                if (v81 == 0xD00000000000002BLL && v83 == v136[0])
                {
                  swift_bridgeObjectRelease();
LABEL_33:
                  v85 = &qword_1EFEAA908;
                  if (qword_1EFEA9C20 != -1)
                  {
                    swift_once();
                    v85 = &qword_1EFEAA908;
                  }
LABEL_37:
                  v86 = *(void **)(*v85 + 32);
                  swift_retain();
                  v87 = (void *)sub_1D49225F8();
                  LODWORD(v86) = objc_msgSend(v86, sel_BOOLForKey_, v87);
                  swift_release();

                  a1 = v154;
                  if ((_DWORD)v86)
                  {
                    v88 = qword_1EFEAAA30;
                    if (qword_1EFEA9C78 != -1)
                    {
                      swift_once();
                      v88 = qword_1EFEAAA30;
                    }
LABEL_42:
                    v89 = __swift_project_value_buffer(v78, (uint64_t)v88);
                    v90 = v148;
                    (*(void (**)(char *, uint64_t, uint64_t))(v153 + 16))(v148, v89, v78);
                    sub_1D469C304((uint64_t)v14, (uint64_t)v152, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
                    swift_bridgeObjectRetain_n();
                    v91 = v78;
                    v92 = v73;
                    v93 = v159;
                    swift_bridgeObjectRetain_n();
                    v94 = sub_1D4922358();
                    v95 = sub_1D4922910();
                    v149 = v94;
                    v145 = v95;
                    if (os_log_type_enabled(v94, v95))
                    {
                      v96 = swift_slowAlloc();
                      v97 = swift_slowAlloc();
                      v137 = v92;
                      v138 = v97;
                      v162 = v97;
                      *(_DWORD *)v96 = v143;
                      *(CGFloat *)&v163 = v74;
                      *((_QWORD *)&v163 + 1) = v75;
                      *(_QWORD *)&v164 = v76;
                      *((_QWORD *)&v164 + 1) = v77;
                      *(_QWORD *)&v165 = v92;
                      *((_QWORD *)&v165 + 1) = v93;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      v98 = sub_1D4922688();
                      *(_QWORD *)&v163 = sub_1D47F0250(v98, v99, &v162);
                      sub_1D4922A78();
                      swift_bridgeObjectRelease_n();
                      swift_bridgeObjectRelease_n();
                      swift_bridgeObjectRelease();
                      *(_WORD *)(v96 + 12) = 2080;
                      v136[2] = v96 + 14;
                      v100 = v152;
                      v101 = *(double *)v152;
                      v102 = *((double *)v152 + 1);
                      v139 = v76;
                      v103 = *((double *)v152 + 2);
                      v104 = *((double *)v152 + 3);
                      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
                      v105 = swift_allocObject();
                      *(_OWORD *)(v105 + 16) = v142;
                      v185.origin.x = v101;
                      v185.origin.y = v102;
                      v185.size.width = v103;
                      v185.size.height = v104;
                      MinX = CGRectGetMinX(v185);
                      v107 = MEMORY[0x1E0DEF040];
                      *(_QWORD *)(v105 + 56) = MEMORY[0x1E0DEF040];
                      v108 = sub_1D46A492C();
                      *(_QWORD *)(v105 + 64) = v108;
                      *(CGFloat *)(v105 + 32) = MinX;
                      v186.origin.x = v101;
                      v186.origin.y = v102;
                      v186.size.width = v103;
                      v186.size.height = v104;
                      MinY = CGRectGetMinY(v186);
                      *(_QWORD *)(v105 + 96) = v107;
                      *(_QWORD *)(v105 + 104) = v108;
                      *(CGFloat *)(v105 + 72) = MinY;
                      v187.origin.x = v101;
                      v187.origin.y = v102;
                      v187.size.width = v103;
                      v187.size.height = v104;
                      Width = CGRectGetWidth(v187);
                      *(_QWORD *)(v105 + 136) = v107;
                      *(_QWORD *)(v105 + 144) = v108;
                      *(CGFloat *)(v105 + 112) = Width;
                      v188.origin.x = v101;
                      v188.origin.y = v102;
                      v188.size.width = v103;
                      v188.size.height = v104;
                      v76 = v139;
                      Height = CGRectGetHeight(v188);
                      *(_QWORD *)(v105 + 176) = v107;
                      *(_QWORD *)(v105 + 184) = v108;
                      *(CGFloat *)(v105 + 152) = Height;
                      v112 = sub_1D4922640();
                      *(_QWORD *)&v163 = sub_1D47F0250(v112, v113, &v162);
                      sub_1D4922A78();
                      swift_bridgeObjectRelease();
                      sub_1D46F3760((uint64_t)v100);
                      v114 = v149;
                      _os_log_impl(&dword_1D467C000, v149, (os_log_type_t)v145, "Add result %s for %s", (uint8_t *)v96, 0x16u);
                      v115 = v138;
                      swift_arrayDestroy();
                      MEMORY[0x1D82635B8](v115, -1, -1);
                      v116 = v96;
                      a1 = v154;
                      MEMORY[0x1D82635B8](v116, -1, -1);

                      (*(void (**)(char *, uint64_t))(v153 + 8))(v90, v150);
                      v30 = v155;
                      v117 = v137;
                    }
                    else
                    {
                      swift_bridgeObjectRelease_n();
                      swift_bridgeObjectRelease_n();
                      sub_1D46F3760((uint64_t)v152);

                      (*(void (**)(char *, uint64_t))(v153 + 8))(v90, v91);
                      v30 = v155;
                      v117 = v92;
                    }
                    v118 = v158;
                    v119 = swift_isUniquelyReferenced_nonNull_native();
                    v34 = v157;
                    if ((v119 & 1) == 0)
                      v118 = sub_1D48AAD58(0, v118[2] + 1, 1, v118);
                    v121 = v118[2];
                    v120 = v118[3];
                    v158 = v118;
                    if (v121 >= v120 >> 1)
                      v158 = sub_1D48AAD58((_QWORD *)(v120 > 1), v121 + 1, 1, v158);
                    v122 = v158;
                    v158[2] = v121 + 1;
                    v123 = (CGFloat *)&v122[6 * v121];
                    v123[4] = v74;
                    *((_QWORD *)v123 + 5) = v75;
                    *((_QWORD *)v123 + 6) = v76;
                    *((_QWORD *)v123 + 7) = v77;
                    v124 = v159;
                    *((_QWORD *)v123 + 8) = v117;
                    *((_QWORD *)v123 + 9) = v124;
                    v33 = v151;
                    goto LABEL_4;
                  }
LABEL_40:
                  v88 = qword_1ED98F3B0;
                  if (qword_1ED98F3D0 != -1)
                  {
                    swift_once();
                    v88 = qword_1ED98F3B0;
                  }
                  goto LABEL_42;
                }
                v84 = sub_1D4922E38();
                swift_bridgeObjectRelease();
                if ((v84 & 1) != 0)
                  goto LABEL_33;
              }
              v85 = (uint64_t *)&off_1ED98F3F0;
              if (qword_1ED98F3A8 != -1)
              {
                swift_once();
                v85 = (uint64_t *)&off_1ED98F3F0;
              }
              goto LABEL_37;
            }
            v156 = 0;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            v30 = v155;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
      }
    }
LABEL_4:
    ++v29;
    sub_1D46F3760((uint64_t)v14);
    if (v29 == v34)
    {
      swift_bridgeObjectRelease();
      a3 = v144;
      v125 = v158;
      goto LABEL_52;
    }
  }
  __break(1u);
LABEL_54:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1D47FBDA0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _OWORD v18[5];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v6 = sub_1D48299EC();
  if (*(_QWORD *)(v6 + 16))
  {
    v7 = *(_OWORD *)(v6 + 144);
    v20 = *(_OWORD *)(v6 + 128);
    v21 = v7;
    v22[0] = *(_OWORD *)(v6 + 160);
    *(_OWORD *)((char *)v22 + 12) = *(_OWORD *)(v6 + 172);
    v8 = *(_OWORD *)(v6 + 80);
    v18[2] = *(_OWORD *)(v6 + 64);
    v18[3] = v8;
    v9 = *(_OWORD *)(v6 + 112);
    v18[4] = *(_OWORD *)(v6 + 96);
    v19 = v9;
    v10 = *(_OWORD *)(v6 + 48);
    v18[0] = *(_OWORD *)(v6 + 32);
    v18[1] = v10;
    sub_1D46A47CC((uint64_t)v18);
    swift_bridgeObjectRelease();
    v12 = *((_QWORD *)&v19 + 1);
    v11 = v19;
    v14 = *((_QWORD *)&v20 + 1);
    v13 = v20;
    sub_1D46A484C(v19, *((uint64_t *)&v19 + 1));
    sub_1D46A48AC((uint64_t)v18);
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
  }
  v15 = a3 + *(int *)(type metadata accessor for RegionSearchResult.ResultItem(0) + 24);
  sub_1D469C304(a1, v15, (uint64_t (*)(_QWORD))type metadata accessor for ObjectKnowledge);
  v16 = type metadata accessor for ObjectKnowledge();
  result = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 0, 1, v16);
  *(_BYTE *)a3 = a2;
  *(_QWORD *)(a3 + 8) = v11;
  *(_QWORD *)(a3 + 16) = v12;
  *(_QWORD *)(a3 + 24) = v13;
  *(_QWORD *)(a3 + 32) = v14;
  return result;
}

uint64_t type metadata accessor for ServerResultsProcessor()
{
  return objc_opt_self();
}

uint64_t sub_1D47FBEFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D47FBF44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1D47FBDA0(a1, *(_BYTE *)(v2 + 16), a2);
}

uint64_t sub_1D47FBF64(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;

  v6 = v5;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D7C0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(a1, 1) == 1)
  {
    sub_1D46992EC(a1, &qword_1ED98D7C0);
    sub_1D47B438C((uint64_t)v14, a2, a3, a4, a5);
    return sub_1D46992EC((uint64_t)v14, &qword_1ED98D7C0);
  }
  else
  {
    sub_1D469C630(a1, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v6;
    *v6 = 0x8000000000000000;
    sub_1D47AA9B0((uint64_t)v17, isUniquelyReferenced_nonNull_native, a2, a3, a4, a5);
    *v6 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D47FC0D8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABA58);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StorefrontSignals(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1D46992EC(a1, &qword_1EFEABA58);
    v13 = sub_1D47D1618(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1D47AE46C();
        v17 = v22;
      }
      sub_1D469C630(*(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, (uint64_t)v8, type metadata accessor for StorefrontSignals);
      sub_1D48C218C(v15, v17);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_1D46992EC((uint64_t)v8, &qword_1EFEABA58);
  }
  else
  {
    sub_1D469C630(a1, (uint64_t)v12, type metadata accessor for StorefrontSignals);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_1D47AAC80((uint64_t)v12, a2, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D47FC2B0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D4920F18();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1D46992EC(a1, &qword_1ED98CAF0);
    sub_1D47B44C0(a2, (uint64_t)v8);
    return sub_1D46992EC((uint64_t)v8, &qword_1ED98CAF0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v3;
    *v3 = 0x8000000000000000;
    sub_1D47AB1EC((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v16;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D47FC404@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA658);
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v10 = *(_QWORD *)(*v1 + 16);
  if (v8 == v10)
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  if (v8 >= v10)
  {
    __break(1u);
  }
  else
  {
    v11 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
    v12 = v9
        + ((*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80))
        + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v8;
    v1[1] = v8 + 1;
    v13 = (uint64_t)&v7[*(int *)(v3 + 48)];
    v14 = v1[2];
    result = sub_1D469C304(v12, v13, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
    if (!__OFADD__(v14, 1))
    {
      v1[2] = v14 + 1;
      v15 = (uint64_t)a1 + *(int *)(v3 + 48);
      *a1 = v14;
      sub_1D469C630(v13, v15, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
      return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D47FC54C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1D46D74BC(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1D48004F8(v5);
  *a1 = v2;
  return result;
}

unint64_t sub_1D47FC5B4@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1D4804FA8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1D47FC5DC()
{
  sub_1D4804F64();
  sub_1D46CEDAC();
  return sub_1D4922ED4();
}

void sub_1D47FC620()
{
  qword_1EFEABA38 = (uint64_t)&unk_1E97FDE30;
}

uint64_t sub_1D47FC634()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char *v28;
  char *v29;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[5];
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v2 = v0;
  v42 = sub_1D4922370();
  v41 = *(_QWORD *)(v42 - 8);
  v3 = MEMORY[0x1E0C80A78](v42);
  v5 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)v38 - v7;
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)v38 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)v38 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)v38 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v38 - v18;
  *(_OWORD *)(v0 + 64) = xmmword_1D4934040;
  type metadata accessor for EncryptedSearchLTR();
  sub_1D48CA5C8(objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E958]), sel_init));
  if (v1)
  {

    sub_1D470C76C((uint64_t)v19);
    v21 = sub_1D4922358();
    v22 = sub_1D492291C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_1D467C000, v21, v22, "Error: Unable to load reranker model: LTR", v23, 2u);
      MEMORY[0x1D82635B8](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v41 + 8))(v19, v42);
    sub_1D4730530();
    swift_allocError();
    *v24 = 0;
    swift_willThrow();
    v25 = v2;
    type metadata accessor for Reranker();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v38[4] = v14;
    v39 = v17;
    v38[2] = v8;
    v38[3] = v11;
    v38[1] = v5;
    *(_QWORD *)(v0 + 16) = v20;
    v26 = v20;
    type metadata accessor for OCRTitleModel();
    v27 = objc_allocWithZone(MEMORY[0x1E0C9E958]);
    v40 = v26;
    swift_retain();
    sub_1D48CA028(objc_msgSend(v27, sel_init));
    v29 = v28;
    *(_QWORD *)(v0 + 24) = v28;
    type metadata accessor for OCRAddressModel();
    v30 = objc_allocWithZone(MEMORY[0x1E0C9E958]);
    v39 = v29;
    swift_retain();
    sub_1D48CB1FC(objc_msgSend(v30, sel_init));
    v25 = v0;
    *(_QWORD *)(v0 + 32) = v31;
    type metadata accessor for StorefrontLabelMapper();
    swift_allocObject();
    swift_retain();
    *(_QWORD *)(v0 + 40) = sub_1D472FCEC();
    type metadata accessor for CategoryClassificationModel();
    v32 = objc_allocWithZone(MEMORY[0x1E0C9E958]);
    swift_retain();
    sub_1D48CB798(objc_msgSend(v32, sel_init));
    *(_QWORD *)(v0 + 48) = v33;
    type metadata accessor for TitleClassificationModel();
    v34 = objc_allocWithZone(MEMORY[0x1E0C9E958]);
    swift_retain();
    sub_1D48CAC68(objc_msgSend(v34, (SEL)&selRef_setMaxInitiallyVisibleResults_));
    v37 = v36;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_QWORD *)(v0 + 56) = v37;
  }
  return v25;
}

void (*sub_1D47FCEEC(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_1D4800E70(v6, a2, a3);
  return sub_1D47FCF58;
}

void sub_1D47FCF58(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

void (*sub_1D47FCF90(_QWORD *a1, uint64_t a2))(_QWORD *a1)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_1D4800F50(v4, a2);
  return sub_1D47FCFDC;
}

void sub_1D47FCFDC(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t sub_1D47FD00C(uint64_t *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double *v22;
  double v23;
  double v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  _BYTE *v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  unint64_t v52;
  uint64_t result;
  _QWORD *v54;
  _QWORD *v55;
  char *v56;
  CGFloat MinX;
  double v58;
  CGFloat Width;
  CGFloat Height;
  uint64_t *v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  uint64_t v82;
  double v83;
  double v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t inited;
  _QWORD *v88;
  uint64_t v89;
  double v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  double v96;
  unint64_t v97;
  unint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  _QWORD *v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  _QWORD *v122;
  double v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  int v134;
  uint64_t (*v135)(uint64_t);
  uint64_t v136;
  _QWORD *v137;
  int v138;
  uint64_t (*v139)(uint64_t);
  uint64_t v140;
  float v141;
  float v142;
  float v143;
  float v144;
  float v145;
  float v146;
  float v147;
  unint64_t v148;
  char v149;
  double v150;
  float v151;
  unint64_t v152;
  char v153;
  double v154;
  float v155;
  uint64_t v156;
  unint64_t v157;
  char v158;
  double v159;
  float v160;
  uint64_t v161;
  unint64_t v162;
  char v163;
  double v164;
  float v165;
  uint64_t v166;
  unint64_t v167;
  char v168;
  double v169;
  float v170;
  uint64_t v171;
  unint64_t v172;
  char v173;
  double v174;
  float v175;
  void *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void (*v180)(_QWORD *);
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _BYTE *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  id v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t *v193;
  uint64_t v194;
  _QWORD *v195;
  uint64_t v196;
  void *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  _QWORD *v202;
  _QWORD *v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  _QWORD *v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  __int128 v211;
  uint64_t v212;
  _QWORD *v213;
  _QWORD *v214;
  double v215;
  double v216;
  _QWORD *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  CGFloat v221;
  double v222;
  CGFloat v223;
  CGFloat v224;
  uint64_t v225;
  _QWORD *v226;
  _QWORD *v227;
  uint64_t v228;
  uint64_t v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  unint64_t v237;
  CGRect v238;
  CGRect v239;
  CGRect v240;
  CGRect v241;

  v217 = a3;
  v193 = a1;
  v4 = sub_1D4922370();
  v199 = *(_QWORD *)(v4 - 8);
  v200 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v198 = (uint64_t)&v185 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v185 - v8;
  MEMORY[0x1E0C80A78](v7);
  v209 = (char *)&v185 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA660);
  v12 = MEMORY[0x1E0C80A78](v11);
  v195 = (uint64_t *)((char *)&v185 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v194 = (uint64_t)&v185 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABA58);
  MEMORY[0x1E0C80A78](v15);
  v204 = (uint64_t)&v185 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
  v210 = *(_QWORD *)(v206 - 8);
  v17 = MEMORY[0x1E0C80A78](v206);
  v196 = (uint64_t)&v185 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v205 = (char *)&v185 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D7C0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (double *)((char *)&v185 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = *(double *)a2;
  v24 = *(double *)(a2 + 8);
  v25 = *(_QWORD **)(a2 + 16);
  v26 = *(_QWORD *)(a2 + 32);
  v215 = *(double *)(a2 + 24);
  v216 = *(double *)&v25;
  v27 = *(_QWORD **)(a2 + 40);
  v213 = *(_QWORD **)(a2 + 48);
  v214 = v27;
  v212 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)&v211 = *(_QWORD *)(a2 + 64);
  v237 = sub_1D47D0F74(MEMORY[0x1E0DEE9D8]);
  if (!*(_QWORD *)(*(_QWORD *)&v23 + 16)
    || (v28 = type metadata accessor for VisualUnderstanding.ImageRegion(),
        v29 = *(_QWORD *)(v28 - 8),
        v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80),
        v31 = *(_QWORD *)(*(_QWORD *)&v23 + v30 + 104),
        !*(_QWORD *)(v31 + 16))
    || (v32 = *(_QWORD *)(v31 + 64), !*(_QWORD *)(v32 + 16)))
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v33 = (char *)v28;
  v190 = *(_QWORD *)(v32 + 32);
  v208 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)&v24 != 1 && v26)
  {
    v34 = v29;
    swift_bridgeObjectRetain();
    v29 = v34;
    v208 = v26;
  }
  if (!v217)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v209;
LABEL_11:
    sub_1D470C76C((uint64_t)v9);
    v41 = sub_1D4922358();
    v42 = sub_1D492291C();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_1D467C000, v41, v42, "Error: Unable to get query embedding", v43, 2u);
      MEMORY[0x1D82635B8](v43, -1, -1);
    }

    v45 = v199;
    v44 = v200;
    (*(void (**)(char *, uint64_t))(v199 + 8))(v9, v200);
    sub_1D4730530();
    v46 = (void *)swift_allocError();
    *v47 = 4;
    swift_willThrow();
LABEL_14:
    v48 = v198;
    sub_1D470C76C(v198);
    v49 = sub_1D4922358();
    v50 = sub_1D492291C();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_1D467C000, v49, v50, "Error: Failed to create storefront signal", v51, 2u);
      MEMORY[0x1D82635B8](v51, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v48, v44);
    v52 = sub_1D47D0F74(MEMORY[0x1E0DEE9D8]);

    return v52;
  }
  v203 = (_QWORD *)v29;
  v209 = v33;
  v35 = *(_OWORD *)(a2 + 104);
  v233 = *(_OWORD *)(a2 + 120);
  v36 = *(_OWORD *)(a2 + 152);
  v234 = *(_OWORD *)(a2 + 136);
  v235 = v36;
  v236 = *(_OWORD *)(a2 + 168);
  v37 = *(_OWORD *)(a2 + 88);
  v230 = *(_OWORD *)(a2 + 72);
  v231 = v37;
  v221 = v23;
  v222 = v24;
  v223 = v216;
  v224 = v215;
  v225 = v26;
  v226 = v214;
  v227 = v213;
  v228 = v212;
  v229 = v211;
  v232 = v35;
  swift_bridgeObjectRetain();
  v38 = v217;
  v39 = VisualUnderstanding.imageRegions.getter();
  if (*(_QWORD *)(v39 + 16))
  {
    sub_1D469C304(v39 + v30, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v40 = 0;
  }
  else
  {
    v40 = 1;
  }
  v54 = v207;
  v55 = v203;
  v56 = v209;
  ((void (*)(double *, uint64_t, uint64_t, char *))v203[7])(v22, v40, 1, v209);
  swift_bridgeObjectRelease();
  if (((unsigned int (*)(double *, uint64_t, char *))v55[6])(v22, 1, v56) == 1)
  {
    sub_1D46992EC((uint64_t)v22, &qword_1ED98D7C0);
    v238.origin.x = 0.0;
    v238.origin.y = 0.0;
    v238.size.width = 1.0;
    v238.size.height = 1.0;
    MinX = CGRectGetMinX(v238);
    v239.origin.x = 0.0;
    v239.origin.y = 0.0;
    v239.size.width = 1.0;
    v239.size.height = 1.0;
    v58 = 1.0 - CGRectGetMaxY(v239);
    v240.origin.x = 0.0;
    v240.origin.y = 0.0;
    v240.size.width = 1.0;
    v240.size.height = 1.0;
    Width = CGRectGetWidth(v240);
    v241.origin.x = 0.0;
    v241.origin.y = 0.0;
    v241.size.width = 1.0;
    v241.size.height = 1.0;
    Height = CGRectGetHeight(v241);
  }
  else
  {
    MinX = *v22;
    v58 = v22[1];
    Width = v22[2];
    Height = v22[3];
    sub_1D4697DE0((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  }
  swift_retain_n();
  v61 = v193;
  v192 = sub_1D46CF848(v193, v38);
  v189 = v38;
  v62 = sub_1D46CFEC0(v61, v38);
  v63 = *v61;
  v64 = *(char **)(*v61 + 16);
  v191 = v62;
  v65 = (uint64_t)v205;
  if (v64)
  {
    v66 = *(_QWORD **)(v208 + 16);
    v212 = v54[5];
    v67 = v63 + ((*(unsigned __int8 *)(v210 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v210 + 80));
    v202 = *(_QWORD **)(v210 + 72);
    v203 = v66;
    v188 = v63;
    swift_bridgeObjectRetain();
    v211 = xmmword_1D49273C0;
    v201 = 0x80000001D49458F0;
    v216 = MEMORY[0x1E0DEE9D8];
    v217 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v214 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v215 = MEMORY[0x1E0DEE9D8];
    v68 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v213 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v209 = v64;
      v210 = v67;
      sub_1D469C304(v67, v65, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
      v70 = *(_QWORD *)(v65 + *(int *)(v206 + 20));
      swift_beginAccess();
      v71 = *(_QWORD *)(v70 + 16);
      v72 = v204;
      sub_1D469C304(v65, v204, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
      v73 = type metadata accessor for StorefrontSignals(0);
      *(_QWORD *)(v72 + *(int *)(v73 + 20)) = 0;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v72, 0, 1, v73);
      sub_1D47FC0D8(v72, v71);
      v74 = (uint64_t *)(v70
                      + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__prefName);
      swift_beginAccess();
      v75 = sub_1D492267C();
      v77 = v76;
      v78 = *(_QWORD *)(v212 + 24);
      if (!*(_QWORD *)(v78 + 16))
        goto LABEL_32;
      v79 = v75;
      swift_bridgeObjectRetain();
      v80 = sub_1D47CA4DC(v79, v77);
      if ((v81 & 1) == 0)
        break;
      v82 = *(_QWORD *)(*(_QWORD *)(v78 + 56) + 8 * v80);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v83 = 1.0;
      if (v82 < 0)
        goto LABEL_33;
LABEL_34:
      v84 = v215;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v84 = COERCE_DOUBLE(sub_1D48A99BC(0, *(_QWORD *)(*(_QWORD *)&v84 + 16) + 1, 1, *(_QWORD **)&v84));
      v86 = *(_QWORD *)(*(_QWORD *)&v84 + 16);
      v85 = *(_QWORD *)(*(_QWORD *)&v84 + 24);
      if (v86 >= v85 >> 1)
        v84 = COERCE_DOUBLE(sub_1D48A99BC((_QWORD *)(v85 > 1), v86 + 1, 1, *(_QWORD **)&v84));
      *(_QWORD *)(*(_QWORD *)&v84 + 16) = v86 + 1;
      v215 = v84;
      *(double *)(*(_QWORD *)&v84 + 8 * v86 + 32) = v83;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D3C0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v211;
      v88 = (_QWORD *)(v70
                     + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__prefCategoryID);
      swift_beginAccess();
      v89 = v88[1];
      *(_QWORD *)(inited + 32) = *v88;
      *(_QWORD *)(inited + 40) = v89;
      swift_bridgeObjectRetain();
      v90 = sub_1D479EE5C(inited, v212);
      swift_setDeallocating();
      swift_arrayDestroy();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v68 = sub_1D48A99BC(0, v68[2] + 1, 1, v68);
      v92 = v68[2];
      v91 = v68[3];
      if (v92 >= v91 >> 1)
        v68 = sub_1D48A99BC((_QWORD *)(v91 > 1), v92 + 1, 1, v68);
      v68[2] = v92 + 1;
      *(double *)&v68[v92 + 4] = v90;
      v93 = sub_1D492267C();
      v95 = v94;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v96 = v216;
      else
        v96 = COERCE_DOUBLE(sub_1D48A8FB8(0, *(_QWORD *)(*(_QWORD *)&v216 + 16) + 1, 1, *(_QWORD **)&v216));
      v98 = *(_QWORD *)(*(_QWORD *)&v96 + 16);
      v97 = *(_QWORD *)(*(_QWORD *)&v96 + 24);
      if (v98 >= v97 >> 1)
        v96 = COERCE_DOUBLE(sub_1D48A8FB8((_QWORD *)(v97 > 1), v98 + 1, 1, *(_QWORD **)&v96));
      *(_QWORD *)(*(_QWORD *)&v96 + 16) = v98 + 1;
      v216 = v96;
      v99 = (_QWORD *)(*(_QWORD *)&v96 + 16 * v98);
      v99[4] = v93;
      v99[5] = v95;
      v100 = swift_allocObject();
      *(_OWORD *)(v100 + 16) = v211;
      v101 = v88[1];
      *(_QWORD *)(v100 + 32) = *v88;
      *(_QWORD *)(v100 + 40) = v101;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v217 = sub_1D48A9C1C(0, v217[2] + 1, 1, v217);
      v54 = v207;
      v103 = v217[2];
      v102 = v217[3];
      if (v103 >= v102 >> 1)
        v217 = sub_1D48A9C1C((_QWORD *)(v102 > 1), v103 + 1, 1, v217);
      v104 = v217;
      v217[2] = v103 + 1;
      v104[v103 + 4] = v100;
      if (v203)
      {
        v106 = *v74;
        v105 = v74[1];
        v221 = MinX;
        v222 = v58;
        v223 = Width;
        v224 = Height;
        swift_bridgeObjectRetain();
        sub_1D479EF10(v106, v105, &v221, v208, 10, 2);
        v108 = v107;
        swift_bridgeObjectRelease();
        if (qword_1EFEA9F10 != -1)
          swift_once();
        v109 = (_QWORD *)qword_1EFEAB730;
        swift_retain();
        swift_bridgeObjectRetain();
        v110 = sub_1D479FC58(0x616D5F656C746974, 0xEF72636F5F686374, v109, v108, 3, (uint64_t)v54);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v214 = sub_1D48A9BF4(0, v214[2] + 1, 1, v214);
        v65 = (uint64_t)v205;
        v69 = v209;
        v112 = v214[2];
        v111 = v214[3];
        if (v112 >= v111 >> 1)
          v214 = sub_1D48A9BF4((_QWORD *)(v111 > 1), v112 + 1, 1, v214);
        v113 = v214;
        v214[2] = v112 + 1;
        v113[v112 + 4] = v110;
        v114 = sub_1D47A0260(v65);
        v221 = MinX;
        v222 = v58;
        v223 = Width;
        v224 = Height;
        sub_1D479EF10(v114, v115, &v221, v208, 10, 2);
        v117 = v116;
        swift_bridgeObjectRelease();
        v118 = (_QWORD *)qword_1EFEAB730;
        swift_retain();
        swift_bridgeObjectRetain();
        v119 = sub_1D47A0D34(0xD000000000000011, v201, v118, v117, 3, (uint64_t)v54);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v213 = sub_1D48A9BF4(0, v213[2] + 1, 1, v213);
        v121 = v213[2];
        v120 = v213[3];
        if (v121 >= v120 >> 1)
          v213 = sub_1D48A9BF4((_QWORD *)(v120 > 1), v121 + 1, 1, v213);
        v122 = v213;
        v213[2] = v121 + 1;
        v122[v121 + 4] = v119;
      }
      else
      {
        v65 = (uint64_t)v205;
        v69 = v209;
      }
      sub_1D4697DE0(v65, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
      v67 = (uint64_t)v202 + v210;
      v64 = (char *)v69 - 1;
      if (!v64)
      {
        swift_bridgeObjectRelease();
        v62 = v191;
        v123 = v216;
        goto LABEL_65;
      }
    }
    swift_bridgeObjectRelease();
LABEL_32:
    swift_bridgeObjectRelease();
LABEL_33:
    v83 = 0.0;
    goto LABEL_34;
  }
  v123 = MEMORY[0x1E0DEE9D8];
  v217 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v214 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v215 = MEMORY[0x1E0DEE9D8];
  v68 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v213 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_65:
  v124 = v54[5];
  v125 = v190;
  sub_1D47A1484(*(uint64_t *)&v123, v190, v124, v54[7], 1);
  v216 = *(double *)&v126;
  swift_bridgeObjectRelease();
  v127 = (_QWORD *)v54[6];
  if (qword_1EFEA9F50 != -1)
LABEL_126:
    swift_once();
  sub_1D47A20CC((uint64_t)v217, v125, v124, (uint64_t)v127, qword_1EFEABA38, 1);
  v129 = v128;
  v131 = v130;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v132 = *v193;
  v219 = 0;
  v220 = 0;
  v218 = v132;
  swift_bridgeObjectRetain();
  v133 = v195;
  sub_1D47FC404(v195);
  v125 = v194;
  sub_1D46D05A0((uint64_t)v133, v194);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA658);
  v134 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 48))(v125, 1, v124);
  *(_QWORD *)&v211 = v68;
  v212 = v129;
  if (v134 == 1)
  {
LABEL_67:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v52 = v237;
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v52;
  }
  v217 = (_QWORD *)(v192 + 32);
  v209 = (char *)(*(_QWORD *)&v216 + 32);
  v210 = v62 + 32;
  v204 = v131 + 32;
  v205 = (char *)(v129 + 32);
  v202 = v68 + 4;
  v203 = (_QWORD *)(*(_QWORD *)&v215 + 32);
  v127 = v214 + 4;
  v68 = v213 + 4;
  v135 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi;
  v201 = 0x80000001D4945910;
  v193 = (uint64_t *)0x80000001D4945930;
  v190 = 0x80000001D4945950;
  v187 = 0x80000001D4945990;
  v188 = 0x80000001D4945970;
  v186 = 0x80000001D49459B0;
  v136 = v196;
  while (1)
  {
    v62 = *(_QWORD *)v125;
    v139 = v135;
    sub_1D469C630(v125 + *(int *)(v124 + 48), v136, v135);
    v140 = sub_1D4922850();
    *(_QWORD *)(v140 + 16) = 53;
    *(_OWORD *)(v140 + 32) = 0u;
    *(_OWORD *)(v140 + 48) = 0u;
    *(_OWORD *)(v140 + 64) = 0u;
    *(_OWORD *)(v140 + 80) = 0u;
    *(_OWORD *)(v140 + 96) = 0u;
    *(_OWORD *)(v140 + 112) = 0u;
    *(_OWORD *)(v140 + 128) = 0u;
    *(_OWORD *)(v140 + 144) = 0u;
    *(_OWORD *)(v140 + 160) = 0u;
    *(_OWORD *)(v140 + 176) = 0u;
    *(_OWORD *)(v140 + 192) = 0u;
    *(_OWORD *)(v140 + 208) = 0u;
    *(_OWORD *)(v140 + 224) = 0u;
    *(_DWORD *)(v140 + 240) = 0;
    if ((v62 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
      goto LABEL_126;
    }
    if (v62 >= *(_QWORD *)(v192 + 16))
      goto LABEL_114;
    v124 = v136;
    v141 = *(double *)&v217[v62];
    *(float *)(v140 + 32) = v141;
    if (v62 >= *(_QWORD *)(v191 + 16))
      goto LABEL_115;
    v125 = v140;
    v142 = *(double *)(v210 + 8 * v62);
    *(float *)(v140 + 36) = v142;
    if (v62 >= *(_QWORD *)(*(_QWORD *)&v216 + 16))
      goto LABEL_116;
    v143 = *(double *)&v209[8 * v62];
    *(float *)(v140 + 40) = v143;
    if (v62 >= *(_QWORD *)(v212 + 16))
      goto LABEL_117;
    v144 = *(double *)&v205[8 * v62];
    *(float *)(v140 + 44) = v144;
    if (v62 >= *(_QWORD *)(v131 + 16))
      goto LABEL_118;
    v145 = *(double *)(v204 + 8 * v62);
    *(float *)(v140 + 48) = v145;
    if (v62 >= *(_QWORD *)(*(_QWORD *)&v215 + 16))
      goto LABEL_119;
    v146 = *(double *)&v203[v62];
    *(float *)(v140 + 52) = v146;
    if (v62 >= *(_QWORD *)(v211 + 16))
      goto LABEL_120;
    v147 = *(double *)&v202[v62];
    *(float *)(v140 + 56) = v147;
    if (!*(_QWORD *)(v208 + 16))
    {
      *(_QWORD *)(v140 + 68) = 0;
      *(_QWORD *)(v140 + 60) = 0;
      *(_QWORD *)(v140 + 76) = 0;
      goto LABEL_105;
    }
    if (v62 >= v214[2])
      goto LABEL_121;
    v124 = v127[v62];
    if (!*(_QWORD *)(v124 + 16))
      goto LABEL_110;
    swift_bridgeObjectRetain();
    v148 = sub_1D47CA4DC(0xD000000000000011, v201);
    if ((v149 & 1) == 0)
      goto LABEL_109;
    v150 = *(double *)(*(_QWORD *)(v124 + 56) + 8 * v148);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v125 + 16) < 8uLL)
      goto LABEL_122;
    v151 = v150;
    *(float *)(v125 + 60) = v151;
    if (v62 >= v214[2])
      goto LABEL_123;
    v124 = v127[v62];
    if (!*(_QWORD *)(v124 + 16))
      goto LABEL_110;
    swift_bridgeObjectRetain();
    v152 = sub_1D47CA4DC(0xD000000000000011, (uint64_t)v193);
    if ((v153 & 1) == 0)
      goto LABEL_109;
    v154 = *(double *)(*(_QWORD *)(v124 + 56) + 8 * v152);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v125 + 16) < 9uLL)
      goto LABEL_124;
    v155 = v154;
    *(float *)(v125 + 64) = v155;
    if (v62 >= v214[2])
      goto LABEL_125;
    v156 = v127[v62];
    if (!*(_QWORD *)(v156 + 16))
      goto LABEL_110;
    swift_bridgeObjectRetain();
    v157 = sub_1D47CA4DC(0xD000000000000011, v190);
    if ((v158 & 1) == 0)
      goto LABEL_109;
    v159 = *(double *)(*(_QWORD *)(v156 + 56) + 8 * v157);
    result = swift_bridgeObjectRelease();
    if (*(_QWORD *)(v125 + 16) < 0xAuLL)
      break;
    v160 = v159;
    *(float *)(v125 + 68) = v160;
    if (v62 >= v213[2])
      goto LABEL_128;
    v161 = v68[v62];
    if (!*(_QWORD *)(v161 + 16))
      goto LABEL_110;
    swift_bridgeObjectRetain();
    v162 = sub_1D47CA4DC(0xD000000000000013, v188);
    if ((v163 & 1) == 0)
      goto LABEL_109;
    v164 = *(double *)(*(_QWORD *)(v161 + 56) + 8 * v162);
    result = swift_bridgeObjectRelease();
    if (*(_QWORD *)(v125 + 16) < 0xBuLL)
      goto LABEL_129;
    v165 = v164;
    *(float *)(v125 + 72) = v165;
    if (v62 >= v213[2])
      goto LABEL_130;
    v166 = v68[v62];
    if (!*(_QWORD *)(v166 + 16))
      goto LABEL_110;
    swift_bridgeObjectRetain();
    v167 = sub_1D47CA4DC(0xD000000000000013, v187);
    if ((v168 & 1) == 0)
      goto LABEL_109;
    v169 = *(double *)(*(_QWORD *)(v166 + 56) + 8 * v167);
    result = swift_bridgeObjectRelease();
    if (*(_QWORD *)(v125 + 16) < 0xCuLL)
      goto LABEL_131;
    v170 = v169;
    *(float *)(v125 + 76) = v170;
    if (v62 >= v213[2])
      goto LABEL_132;
    v171 = v68[v62];
    if (!*(_QWORD *)(v171 + 16))
      goto LABEL_110;
    swift_bridgeObjectRetain();
    v172 = sub_1D47CA4DC(0xD000000000000013, v186);
    if ((v173 & 1) == 0)
    {
LABEL_109:
      swift_bridgeObjectRelease();
LABEL_110:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D4730530();
      v46 = (void *)swift_allocError();
      *v184 = 4;
      swift_willThrow();

      sub_1D4697DE0(v196, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
LABEL_111:
      v45 = v199;
      v44 = v200;
      goto LABEL_14;
    }
    v174 = *(double *)(*(_QWORD *)(v171 + 56) + 8 * v172);
    result = swift_bridgeObjectRelease();
    if (*(_QWORD *)(v125 + 16) < 0xDuLL)
      goto LABEL_133;
    v175 = v174;
    *(float *)(v125 + 80) = v175;
    v124 = v196;
LABEL_105:
    v176 = v197;
    sub_1D4802394(v125, 0, 13);
    v197 = v176;
    if (v176)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D4697DE0(v124, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      v46 = v197;
      goto LABEL_111;
    }
    v178 = v177;
    swift_bridgeObjectRelease();
    v179 = *(_QWORD *)(v124 + *(int *)(v206 + 20));
    swift_beginAccess();
    v180 = sub_1D47FCF90(&v221, *(_QWORD *)(v179 + 16));
    v182 = v181;
    v183 = type metadata accessor for StorefrontSignals(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v183 - 8) + 48))(v182, 1, v183))
    {
      *(_QWORD *)(v182 + *(int *)(v183 + 20)) = v178;
      swift_retain();
      swift_release();
    }
    ((void (*)(CGFloat *, _QWORD))v180)(&v221, 0);
    swift_release();
    v136 = v196;
    sub_1D4697DE0(v196, v139);
    v137 = v195;
    sub_1D47FC404(v195);
    v125 = v194;
    sub_1D46D05A0((uint64_t)v137, v194);
    v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA658);
    v138 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 48))(v125, 1, v124);
    v135 = v139;
    if (v138 == 1)
      goto LABEL_67;
  }
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
  return result;
}

void sub_1D47FE5C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  double v18;
  double v19;
  id v20;
  void *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _BYTE *v25;
  id v27[2];

  v27[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = sub_1D4922370();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E9B0]), sel_init);
  v9 = *(void **)(v7 + 16);
  v27[0] = 0;
  v10 = objc_msgSend(v9, sel_predictionFromFeatures_options_error_, a1, v8, v27);
  v11 = v27[0];
  if (v10)
  {
    v12 = v10;
    type metadata accessor for EncryptedSearchLTROutput();
    *(_QWORD *)(swift_initStackObject() + 16) = v12;
    v13 = v11;

    v14 = (void *)sub_1D49225F8();
    v15 = objc_msgSend(v12, sel_featureValueForName_, v14);

    if (v15)
    {
      v16 = objc_msgSend(v15, sel_multiArrayValue);

      if (v16)
      {
        v17 = objc_msgSend(v16, sel_objectAtIndexedSubscript_, 0);

        objc_msgSend(v17, sel_doubleValue);
        v19 = v18;
        swift_release();

        exp(-v19);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    v20 = v27[0];
    v21 = (void *)sub_1D4920E64();

    swift_willThrow();
    sub_1D470C76C((uint64_t)v6);
    v22 = sub_1D4922358();
    v23 = sub_1D492291C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1D467C000, v22, v23, "Error: LTR inference failed", v24, 2u);
      MEMORY[0x1D82635B8](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1D4730530();
    swift_allocError();
    *v25 = 3;
    swift_willThrow();

  }
}

uint64_t sub_1D47FE898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int64_t v43;
  double v44;
  unint64_t v45;
  unint64_t i;
  unint64_t v48;
  int64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  void *v63;
  double v64;
  double v65;
  _QWORD *v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  uint64_t v70;
  char v71;
  char v72;
  _QWORD *v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t result;
  uint64_t v81;
  _QWORD *v82;
  unint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  id v88;
  id v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  _QWORD *v93;
  id v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(uint64_t, uint64_t, uint64_t, uint64_t);
  char v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  void *v115;
  uint64_t v116;
  __int16 v117;
  unsigned __int8 *v118;
  char v119;
  int v120;
  unsigned __int8 *v121;
  char v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  _QWORD *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  char *v147;
  char *v148;
  int64_t v149;
  void (*v150)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v151;
  uint64_t v152;
  void *v153;
  void *v154;
  _OWORD v155[5];
  uint64_t v156;

  v153 = a3;
  v152 = a2;
  v146 = a4;
  v145 = sub_1D4922370();
  v144 = *(_QWORD *)(v145 - 8);
  MEMORY[0x1E0C80A78](v145);
  v148 = (char *)&v137 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v142 = (uint64_t)&v137 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v137 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABA40);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v137 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v137 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v137 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v137 - v21;
  v23 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(0);
  v24 = MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v137 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v28 = (char **)((char *)&v137 - v27);
  v29 = v154;
  v30 = sub_1D4802678(a1, v152, v153);
  if (v29)
  {
    v31 = v29;
    v32 = (uint64_t)v148;
    v33 = v146;
LABEL_68:
    sub_1D470C76C(v32);
    v88 = v31;
    v89 = v31;
    v90 = sub_1D4922358();
    v91 = sub_1D492291C();
    if (os_log_type_enabled(v90, v91))
    {
      v92 = (uint8_t *)swift_slowAlloc();
      v93 = (_QWORD *)swift_slowAlloc();
      v154 = 0;
      *(_DWORD *)v92 = 138412290;
      v94 = v31;
      v95 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)&v155[0] = v95;
      sub_1D4922A78();
      *v93 = v95;

      _os_log_impl(&dword_1D467C000, v90, v91, "Reranker getTopLandmark failed with error %@", v92, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFEAB9C0);
      swift_arrayDestroy();
      v96 = v93;
      v32 = (uint64_t)v148;
      MEMORY[0x1D82635B8](v96, -1, -1);
      MEMORY[0x1D82635B8](v92, -1, -1);

    }
    else
    {

    }
    (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v32, v145);
    v97 = type metadata accessor for ObjectKnowledge();
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v33, 1, 1, v97);
  }
  v34 = (_QWORD *)v30;
  v137 = v26;
  v151 = v22;
  v143 = v20;
  v139 = v17;
  v138 = v14;
  v140 = v10;
  v154 = 0;
  *v28 = 0;
  v28[1] = 0xE000000000000000;
  v28[2] = 0;
  v28[3] = 0xE000000000000000;
  v28[4] = 0;
  v28[5] = MEMORY[0x1E0DEE9D8];
  sub_1D4922010();
  v35 = *(int *)(v23 + 40);
  v141 = v28;
  v36 = (char *)v28 + v35;
  v37 = type metadata accessor for Com_Apple_Visualintelligence_LocationPoint(0);
  v38 = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 1, 1, v37);
  v39 = v34[8];
  v147 = (char *)(v34 + 8);
  v40 = 1 << *((_BYTE *)v34 + 32);
  v41 = -1;
  if (v40 < 64)
    v41 = ~(-1 << v40);
  v42 = v41 & v39;
  v149 = (unint64_t)(v40 + 63) >> 6;
  swift_bridgeObjectRetain();
  LODWORD(v150) = 0;
  v43 = 0;
  v44 = -INFINITY;
  v153 = v34;
  if (v42)
    goto LABEL_8;
LABEL_9:
  if (__OFADD__(v43++, 1))
  {
    __break(1u);
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  if (v43 >= v149)
    goto LABEL_72;
  v48 = *(_QWORD *)&v147[8 * v43];
  if (!v48)
  {
    v49 = v43 + 1;
    if (v43 + 1 < v149)
    {
      v48 = *(_QWORD *)&v147[8 * v49];
      if (v48)
        goto LABEL_22;
      v49 = v43 + 2;
      if (v43 + 2 >= v149)
        goto LABEL_72;
      v48 = *(_QWORD *)&v147[8 * v49];
      if (v48)
        goto LABEL_22;
      v49 = v43 + 3;
      if (v43 + 3 >= v149)
        goto LABEL_72;
      v48 = *(_QWORD *)&v147[8 * v49];
      if (v48)
        goto LABEL_22;
      v49 = v43 + 4;
      if (v43 + 4 >= v149)
        goto LABEL_72;
      v48 = *(_QWORD *)&v147[8 * v49];
      if (v48)
      {
LABEL_22:
        v43 = v49;
        goto LABEL_23;
      }
      v49 = v43 + 5;
      if (v43 + 5 < v149)
      {
        v48 = *(_QWORD *)&v147[8 * v49];
        if (v48)
          goto LABEL_22;
        while (1)
        {
          v43 = v49 + 1;
          if (__OFADD__(v49, 1))
            goto LABEL_88;
          if (v43 >= v149)
            break;
          v48 = *(_QWORD *)&v147[8 * v43];
          ++v49;
          if (v48)
            goto LABEL_23;
        }
      }
    }
LABEL_72:
    swift_release();
    swift_bridgeObjectRelease();
    v98 = v146;
    v99 = v142;
    v100 = (uint64_t)v140;
    v101 = v141;
    v38 = *v141;
    v34 = (_QWORD *)v141[1];
    if (!*v141 && v34 == (_QWORD *)0xE000000000000000 || (sub_1D4922E38() & 1) != 0)
    {
      sub_1D4697DE0((uint64_t)v101, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
      v102 = type metadata accessor for ObjectKnowledge();
      return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v98, 1, 1, v102);
    }
    v104 = v101[2];
    v103 = (void *)v101[3];
    v105 = sub_1D4920F18();
    v106 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 56);
    v106(v100, 1, 1, v105);
    v106(v99, 1, 1, v105);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v107 = sub_1D4922778();
    v156 = v104;
    if ((v107 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v121 = 0;
LABEL_86:
      memset(v155, 0, 64);
      swift_bridgeObjectRetain();
      v124 = swift_bridgeObjectRetain();
      v125 = sub_1D4803750(v124);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAB58);
      v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAB60);
      v127 = *(unsigned __int8 *)(*(_QWORD *)(v126 - 8) + 80);
      v128 = (uint64_t)v103;
      v129 = (uint64_t)v101;
      v130 = (v127 + 32) & ~v127;
      v131 = swift_allocObject();
      *(_OWORD *)(v131 + 16) = xmmword_1D49273C0;
      v132 = *(int *)(v126 + 48);
      sub_1D4920FFC();
      *(_QWORD *)(v131 + v130 + v132) = MEMORY[0x1E0DEE9E8];
      v133 = sub_1D47C44E0(v131);
      sub_1D4697DE0(v129, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
      v136 = (uint64_t)v121;
      v134 = v146;
      sub_1D4761130(v38, (uint64_t)v34, v156, v128, (uint64_t)v140, 0, 0xE000000000000000, 0, v146, 0.0, v44, 0.0, 0.0, 0xE000000000000000, v142, MEMORY[0x1E0DEE9D8], (uint64_t)v155, 123711979, 0,
        0,
        0xF000000000000000,
        v136,
        2,
        v156,
        v128,
        v125,
        0,
        0,
        0xE000000000000000,
        0,
        0xE000000000000000,
        v133,
        0);
      v135 = type metadata accessor for ObjectKnowledge();
      return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 56))(v134, 0, 1, v135);
    }
    v153 = v103;
    swift_bridgeObjectRetain();
    v108 = sub_1D47DAE0C(1uLL, v38, (unint64_t)v34);
    v110 = v109;
    v112 = v111;
    v114 = v113;
    swift_bridgeObjectRelease();
    if ((v108 ^ v110) >= 0x4000)
    {
      v115 = v154;
      v116 = sub_1D46BEAF8(v108, v110, v112, v114, 10);
      v154 = v115;
      if ((v117 & 0x100) != 0)
      {
        v118 = sub_1D46BCF2C(v108, v110, v112, v114, 10);
        v123 = v122;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v120 = v123 & 1;
      }
      else
      {
        v118 = (unsigned __int8 *)v116;
        v119 = v117;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v120 = v119 & 1;
      }
      v103 = v153;
      if (v120)
        v121 = 0;
      else
        v121 = v118;
      v101 = v141;
      goto LABEL_86;
    }
LABEL_89:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v121 = 0;
    v101 = v141;
    v103 = v153;
    goto LABEL_86;
  }
LABEL_23:
  v42 = (v48 - 1) & v48;
  for (i = __clz(__rbit64(v48)) + (v43 << 6); ; i = v45 | (v43 << 6))
  {
    v50 = (uint64_t *)(v34[6] + 16 * i);
    v51 = *v50;
    v52 = v50[1];
    v53 = v34[2];
    v152 = v51;
    if (v53)
    {
      swift_bridgeObjectRetain_n();
      v54 = sub_1D47CA4DC(v51, v52);
      if ((v55 & 1) != 0)
      {
        v56 = v54;
        v57 = v34[7];
        v58 = type metadata accessor for LandmarkSignals(0);
        v59 = *(_QWORD *)(v58 - 8);
        v60 = (uint64_t)v151;
        sub_1D469C304(v57 + *(_QWORD *)(v59 + 72) * v56, (uint64_t)v151, type metadata accessor for LandmarkSignals);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v60, 0, 1, v58);
      }
      else
      {
        v58 = type metadata accessor for LandmarkSignals(0);
        v60 = (uint64_t)v151;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v151, 1, 1, v58);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v58 = type metadata accessor for LandmarkSignals(0);
      v60 = (uint64_t)v151;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v151, 1, 1, v58);
      swift_bridgeObjectRetain();
    }
    type metadata accessor for LandmarkSignals(0);
    v38 = *(_QWORD *)(v58 - 8);
    v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
    if (v61(v60, 1, v58) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D46992EC(v60, &qword_1EFEABA40);
LABEL_65:
      sub_1D4730530();
      v31 = (void *)swift_allocError();
      *v87 = 4;
      swift_willThrow();
      swift_release();
      sub_1D4697DE0((uint64_t)v141, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
LABEL_67:
      v33 = v146;
      v32 = (uint64_t)v148;
      goto LABEL_68;
    }
    v62 = *(_QWORD *)(v60 + *(int *)(v58 + 20));
    swift_retain();
    sub_1D4697DE0(v60, type metadata accessor for LandmarkSignals);
    if (!v62)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_65;
    }
    v63 = v154;
    sub_1D47FE5C4(v62);
    v154 = v63;
    if (v63)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      sub_1D4697DE0((uint64_t)v141, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
      v31 = v154;
      goto LABEL_67;
    }
    v65 = v64;
    if ((v150 & 1) == 0)
    {
      if (v44 >= v64 || *(double *)(v156 + 64) >= v64)
        goto LABEL_7;
      goto LABEL_47;
    }
    v66 = v153;
    v67 = (uint64_t)v143;
    if (!*((_QWORD *)v153 + 2))
      break;
    swift_bridgeObjectRetain();
    v68 = sub_1D47CA4DC(v152, v52);
    if ((v69 & 1) != 0)
    {
      sub_1D469C304(v66[7] + *(_QWORD *)(v38 + 72) * v68, v67, type metadata accessor for LandmarkSignals);
      v70 = 0;
    }
    else
    {
      v70 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v67, v70, 1, v58);
    swift_bridgeObjectRelease();
    if (v61(v67, 1, v58) == 1)
      goto LABEL_91;
    v71 = *(_BYTE *)(v67 + *(int *)(v58 + 24));
    sub_1D4697DE0(v67, type metadata accessor for LandmarkSignals);
    if (v44 >= v65 || (*(double *)(v156 + 64) < v65 ? (v72 = v71) : (v72 = 0), (v72 & 1) == 0))
    {
LABEL_7:
      swift_release();
      swift_bridgeObjectRelease();
      v34 = v153;
      if (!v42)
        goto LABEL_9;
      goto LABEL_8;
    }
LABEL_47:
    v73 = v153;
    if (!*((_QWORD *)v153 + 2))
      goto LABEL_92;
    swift_bridgeObjectRetain();
    v74 = sub_1D47CA4DC(v152, v52);
    if ((v75 & 1) != 0)
    {
      v76 = (uint64_t)v139;
      sub_1D469C304(v73[7] + *(_QWORD *)(v38 + 72) * v74, (uint64_t)v139, type metadata accessor for LandmarkSignals);
      v77 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56);
      v78 = v76;
      v79 = 0;
    }
    else
    {
      v77 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56);
      v76 = (uint64_t)v139;
      v78 = (uint64_t)v139;
      v79 = 1;
    }
    v150 = v77;
    v77(v78, v79, 1, v58);
    swift_bridgeObjectRelease();
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v61)(v76, 1, v58);
    if ((_DWORD)result == 1)
      goto LABEL_93;
    sub_1D4697DE0((uint64_t)v141, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
    v81 = (uint64_t)v137;
    sub_1D469C304(v76, (uint64_t)v137, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
    sub_1D4697DE0(v76, type metadata accessor for LandmarkSignals);
    sub_1D469C630(v81, (uint64_t)v141, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
    v82 = v153;
    if (*((_QWORD *)v153 + 2) && (v83 = sub_1D47CA4DC(v152, v52), (v84 & 1) != 0))
    {
      v85 = v82[7] + *(_QWORD *)(v38 + 72) * v83;
      v38 = (uint64_t)v138;
      sub_1D469C304(v85, (uint64_t)v138, type metadata accessor for LandmarkSignals);
      v86 = 0;
    }
    else
    {
      v86 = 1;
      v38 = (uint64_t)v138;
    }
    v150(v38, v86, 1, v58);
    swift_bridgeObjectRelease();
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v61)(v38, 1, v58);
    if ((_DWORD)result == 1)
      goto LABEL_94;
    swift_release();
    LODWORD(v150) = *(unsigned __int8 *)(v38 + *(int *)(v58 + 24));
    sub_1D4697DE0(v38, type metadata accessor for LandmarkSignals);
    v44 = v65;
    v34 = v153;
    if (!v42)
      goto LABEL_9;
LABEL_8:
    v45 = __clz(__rbit64(v42));
    v42 &= v42 - 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v143, 1, 1, v58);
LABEL_91:
  __break(1u);
LABEL_92:
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v139, 1, 1, v58);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
  return result;
}

void sub_1D47FF6DC(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  double v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v44;
  int64_t v45;
  uint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  double v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  id v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  _QWORD *v69;
  id v70;
  uint64_t v71;
  uint8_t *v72;
  _QWORD *v73;
  uint64_t v74;
  void (*v75)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int (*v100)(uint64_t, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  double *v106;
  uint64_t v107;
  double *v108;
  uint64_t v109;
  double v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  double *v114;
  _QWORD *v115;
  uint64_t v116;
  double v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  unint64_t v123;
  char *v124;
  uint64_t v125;
  double *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  double *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  int64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  _OWORD v143[4];

  v141 = a3;
  v140 = a2;
  v135 = a4;
  v133 = sub_1D4922370();
  v132 = *(_QWORD *)(v133 - 8);
  MEMORY[0x1E0C80A78](v133);
  v137 = (uint64_t)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA650);
  v8 = MEMORY[0x1E0C80A78](v7);
  v129 = (uint64_t)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v127 = (uint64_t)&v119 - v10;
  v128 = type metadata accessor for Com_Apple_Visualintelligence_LatLng(0);
  v125 = *(_QWORD *)(v128 - 8);
  v11 = MEMORY[0x1E0C80A78](v128);
  v130 = (double *)((char *)&v119 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v11);
  v126 = (double *)((char *)&v119 - v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v131 = (char *)&v119 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v119 - v17;
  v19 = (_QWORD *)type metadata accessor for StorefrontSignals(0);
  v20 = *(v19 - 1);
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v119 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v119 - v24;
  v26 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v119 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = v142;
  v30 = sub_1D47FD00C(a1, v140, v141);
  if (v29)
  {
    v31 = (void *)v29;
LABEL_41:
    v63 = v137;
    sub_1D470C76C(v137);
    v64 = v31;
    v65 = v31;
    v66 = sub_1D4922358();
    v67 = sub_1D492291C();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      v69 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v68 = 138412290;
      v70 = v31;
      v71 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)&v143[0] = v71;
      sub_1D4922A78();
      *v69 = v71;

      _os_log_impl(&dword_1D467C000, v66, v67, "Reranker getTopStorefront failed with error %@", v68, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFEAB9C0);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v69, -1, -1);
      v72 = v68;
      v63 = v137;
      MEMORY[0x1D82635B8](v72, -1, -1);

    }
    else
    {

    }
    v73 = v135;
    (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v63, v133);
    v74 = type metadata accessor for ObjectKnowledge();
    v75 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56);
    v76 = v73;
    goto LABEL_45;
  }
  v32 = v30;
  v139 = v25;
  v121 = v23;
  v140 = v20;
  v141 = v19;
  v142 = v4;
  v33 = 0;
  v122 = v18;
  sub_1D4922010();
  v34 = *(int *)(v26 + 20);
  if (qword_1EFEA9DD8 == -1)
    goto LABEL_4;
  while (1)
  {
    swift_once();
LABEL_4:
    v124 = v28;
    v123 = v34;
    *(_QWORD *)&v28[v34] = qword_1EFEAAF30;
    v35 = *(_QWORD *)(v32 + 64);
    v134 = v32 + 64;
    v36 = 1 << *(_BYTE *)(v32 + 32);
    v37 = -1;
    if (v36 < 64)
      v37 = ~(-1 << v36);
    v34 = v37 & v35;
    v136 = (unint64_t)(v36 + 63) >> 6;
    swift_retain();
    swift_bridgeObjectRetain();
    v38 = 0;
    v39 = -INFINITY;
    v28 = (char *)v33;
    if (v34)
    {
      while (1)
      {
        v40 = __clz(__rbit64(v34));
        v41 = (v34 - 1) & v34;
        v42 = v40 | (v38 << 6);
        if (!*(_QWORD *)(v32 + 16))
          goto LABEL_39;
LABEL_26:
        v46 = *(_QWORD *)(*(_QWORD *)(v32 + 48) + 8 * v42);
        v47 = sub_1D47D1618(v46);
        v48 = v141;
        if ((v49 & 1) == 0)
          goto LABEL_39;
        v50 = *(_QWORD *)(v32 + 56);
        v138 = *(_QWORD *)(v140 + 72);
        v51 = v41;
        v52 = v38;
        v53 = v32;
        v54 = (uint64_t)v139;
        sub_1D469C304(v50 + v138 * v47, (uint64_t)v139, type metadata accessor for StorefrontSignals);
        v55 = *(_QWORD *)(v54 + *((int *)v48 + 5));
        swift_retain();
        v56 = v54;
        v32 = v53;
        v38 = v52;
        v34 = v51;
        sub_1D4697DE0(v56, type metadata accessor for StorefrontSignals);
        if (!v55)
          goto LABEL_39;
        v33 = v142;
        sub_1D47FE5C4(v55);
        if (v28)
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          sub_1D4697DE0((uint64_t)v124, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
          v31 = v28;
          goto LABEL_41;
        }
        v58 = v57;
        if (v39 >= v57 || *(double *)(v142 + 72) >= v57)
        {
          swift_release();
          if (!v51)
            break;
        }
        else
        {
          if (!*(_QWORD *)(v32 + 16))
          {
            __break(1u);
LABEL_58:
            __break(1u);
            goto LABEL_59;
          }
          v120 = 0;
          v59 = sub_1D47D1618(v46);
          if ((v60 & 1) == 0)
            goto LABEL_58;
          v61 = (uint64_t)v121;
          sub_1D469C304(*(_QWORD *)(v32 + 56) + v59 * v138, (uint64_t)v121, type metadata accessor for StorefrontSignals);
          v33 = (uint64_t)v124;
          sub_1D4697DE0((uint64_t)v124, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
          swift_release();
          sub_1D469C304(v61, v33, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
          sub_1D4697DE0(v61, type metadata accessor for StorefrontSignals);
          v39 = v58;
          v28 = v120;
          if (!v34)
            break;
        }
      }
    }
    if (!__OFADD__(v38++, 1))
      break;
    __break(1u);
  }
  if (v38 >= v136)
  {
LABEL_46:
    swift_release();
    swift_bridgeObjectRelease();
    v77 = (uint64_t)v124;
    v78 = *(_QWORD *)&v124[v123];
    swift_beginAccess();
    v79 = *(_QWORD *)(v78 + 16);
    if (v79)
    {
      *(_QWORD *)&v143[0] = v79 % 0xFFFFFFFF;
      sub_1D4922E14();
      *(_QWORD *)&v143[0] = 81;
      *((_QWORD *)&v143[0] + 1) = 0xE100000000000000;
      sub_1D492270C();
      swift_bridgeObjectRelease();
      v142 = *((_QWORD *)&v143[0] + 1);
      v80 = *(_QWORD *)&v143[0];
      v81 = v78
          + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__prefName;
      swift_beginAccess();
      v82 = *(_QWORD **)v81;
      v83 = *(_QWORD *)(v81 + 8);
      v141 = v82;
      v84 = sub_1D4920F18();
      v85 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56);
      v85(v122, 1, 1, v84);
      v85(v131, 1, 1, v84);
      v140 = *(_QWORD *)(v78 + 16);
      swift_beginAccess();
      swift_bridgeObjectRetain_n();
      v86 = swift_bridgeObjectRetain();
      v139 = (char *)sub_1D4803750(v86);
      swift_bridgeObjectRelease();
      v87 = (uint64_t *)(v78
                      + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__prefCategoryID);
      swift_beginAccess();
      v88 = *v87;
      v89 = v87[1];
      v138 = v88;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAB58);
      v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAB60);
      v91 = *(unsigned __int8 *)(*(_QWORD *)(v90 - 8) + 80);
      v92 = (v91 + 32) & ~v91;
      v93 = swift_allocObject();
      *(_OWORD *)(v93 + 16) = xmmword_1D49273C0;
      v94 = *(int *)(v90 + 48);
      swift_bridgeObjectRetain();
      sub_1D4920FFC();
      *(_QWORD *)(v93 + v92 + v94) = MEMORY[0x1E0DEE9E8];
      v95 = sub_1D47C44E0(v93);
      v96 = &unk_1EFEAA000;
      v97 = v78
          + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__location;
      swift_beginAccess();
      v98 = v97;
      v99 = v127;
      sub_1D469C5EC(v98, v127, &qword_1EFEAA650);
      v100 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48);
      v101 = v128;
      if (v100(v99, 1, v128) == 1)
      {
        v102 = v89;
        v103 = v83;
        v104 = v95;
        v105 = v80;
        v106 = v126;
        *v126 = 0.0;
        v106[1] = 0.0;
        sub_1D4922010();
        v107 = v99;
        v108 = v106;
        v80 = v105;
        v95 = v104;
        v83 = v103;
        v89 = v102;
        v96 = (_QWORD *)&unk_1EFEAA000;
        sub_1D46992EC(v107, &qword_1EFEAA650);
      }
      else
      {
        v109 = v99;
        v108 = v126;
        sub_1D469C630(v109, (uint64_t)v126, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
      }
      v110 = v108[1];
      sub_1D4697DE0((uint64_t)v108, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
      v111 = *(_QWORD *)&v124[v123] + v96[487];
      swift_beginAccess();
      v112 = v111;
      v113 = v129;
      sub_1D469C5EC(v112, v129, &qword_1EFEAA650);
      if (v100(v113, 1, v101) == 1)
      {
        v114 = v130;
        *v130 = 0.0;
        v114[1] = 0.0;
        sub_1D4922010();
        sub_1D46992EC(v113, &qword_1EFEAA650);
      }
      else
      {
        v114 = v130;
        sub_1D469C630(v113, (uint64_t)v130, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
      }
      v115 = v135;
      v116 = (uint64_t)v122;
      memset(v143, 0, sizeof(v143));
      sub_1D4697DE0((uint64_t)v124, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
      v117 = *v114;
      sub_1D4697DE0((uint64_t)v114, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
      sub_1D4761130(v80, v142, (uint64_t)v141, v83, v116, 0, 0xE000000000000000, 0, v115, 0.0, v39, v110, v117, 0xE000000000000000, (uint64_t)v131, MEMORY[0x1E0DEE9D8], (uint64_t)v143, 123711979, 0,
        0,
        0xF000000000000000,
        v140,
        3,
        (uint64_t)v141,
        v83,
        (uint64_t)v139,
        1,
        v138,
        v89,
        0,
        0xE000000000000000,
        v95,
        0);
      v118 = type metadata accessor for ObjectKnowledge();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 56))(v115, 0, 1, v118);
      return;
    }
    sub_1D4697DE0(v77, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
    v74 = type metadata accessor for ObjectKnowledge();
    v75 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56);
    v76 = v135;
LABEL_45:
    v75(v76, 1, 1, v74);
    return;
  }
  v44 = *(_QWORD *)(v134 + 8 * v38);
  if (v44)
  {
LABEL_25:
    v41 = (v44 - 1) & v44;
    v42 = __clz(__rbit64(v44)) + (v38 << 6);
    if (*(_QWORD *)(v32 + 16))
      goto LABEL_26;
LABEL_39:
    swift_bridgeObjectRelease();
    sub_1D4730530();
    v31 = (void *)swift_allocError();
    *v62 = 4;
    swift_willThrow();
    swift_release();
    sub_1D4697DE0((uint64_t)v124, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
    goto LABEL_41;
  }
  v45 = v38 + 1;
  if (v38 + 1 >= v136)
    goto LABEL_46;
  v44 = *(_QWORD *)(v134 + 8 * v45);
  if (v44)
    goto LABEL_24;
  v45 = v38 + 2;
  if (v38 + 2 >= v136)
    goto LABEL_46;
  v44 = *(_QWORD *)(v134 + 8 * v45);
  if (v44)
    goto LABEL_24;
  v45 = v38 + 3;
  if (v38 + 3 >= v136)
    goto LABEL_46;
  v44 = *(_QWORD *)(v134 + 8 * v45);
  if (v44)
    goto LABEL_24;
  v45 = v38 + 4;
  if (v38 + 4 >= v136)
    goto LABEL_46;
  v44 = *(_QWORD *)(v134 + 8 * v45);
  if (v44)
    goto LABEL_24;
  v45 = v38 + 5;
  if (v38 + 5 >= v136)
    goto LABEL_46;
  v44 = *(_QWORD *)(v134 + 8 * v45);
  if (v44)
  {
LABEL_24:
    v38 = v45;
    goto LABEL_25;
  }
  while (1)
  {
    v38 = v45 + 1;
    if (__OFADD__(v45, 1))
      break;
    if (v38 >= v136)
      goto LABEL_46;
    v44 = *(_QWORD *)(v134 + 8 * v38);
    ++v45;
    if (v44)
      goto LABEL_25;
  }
LABEL_59:
  __break(1u);
}

uint64_t sub_1D4800478()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Reranker()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StorefrontSignals(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1EFEABA70);
}

uint64_t sub_1D48004F8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  float v15;
  uint64_t v16;
  float v17;
  float *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  float *v28;
  float *v29;
  uint64_t v30;
  float v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t i;
  uint64_t v88;
  uint64_t v89;
  float v90;
  uint64_t v91;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  float *__dst;

  v3 = a1[1];
  result = sub_1D4922E08();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_141;
    if ((unint64_t)v3 >= 2)
    {
      v84 = *a1;
      v85 = *a1 + 16;
      v86 = -1;
      for (i = 1; i != v3; ++i)
      {
        v88 = v86;
        v89 = v85;
        do
        {
          v90 = *(float *)(v89 + 8);
          if (*(float *)(v89 - 8) >= v90)
            break;
          if (!v84)
            goto LABEL_145;
          v91 = *(_QWORD *)v89;
          *(_OWORD *)v89 = *(_OWORD *)(v89 - 16);
          *(float *)(v89 - 8) = v90;
          *(_QWORD *)(v89 - 16) = v91;
          v89 -= 16;
        }
        while (!__CFADD__(v88++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_150;
  v6 = result;
  v101 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (float *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_107:
      v93 = v12;
      v104 = v9;
      if (v13 >= 2)
      {
        v94 = *v101;
        do
        {
          v95 = v13 - 2;
          if (v13 < 2)
            goto LABEL_136;
          if (!v94)
            goto LABEL_149;
          v96 = v93;
          v97 = *(_QWORD *)&v93[16 * v95 + 32];
          v98 = *(_QWORD *)&v93[16 * v13 + 24];
          sub_1D4800BE8((float *)(v94 + 16 * v97), (float *)(v94 + 16 * *(_QWORD *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1)
            break;
          if (v98 < v97)
            goto LABEL_137;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v96 = sub_1D46D5B88((uint64_t)v96);
          if (v95 >= *((_QWORD *)v96 + 2))
            goto LABEL_138;
          v99 = &v96[16 * v95 + 32];
          *(_QWORD *)v99 = v97;
          *((_QWORD *)v99 + 1) = v98;
          v100 = *((_QWORD *)v96 + 2);
          if (v13 > v100)
            goto LABEL_139;
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          v93 = v96;
          *((_QWORD *)v96 + 2) = v100 - 1;
          v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_97:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABA48);
    v8 = sub_1D4922850();
    *(_QWORD *)(v8 + 16) = v7;
    v104 = v8;
    __dst = (float *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v102 = *a1 + 40;
  v103 = *a1 + 8;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v105 = v6;
  v106 = v3;
  v107 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(float *)(v103 + 16 * v10);
      v16 = 16 * v14;
      v17 = *(float *)(v103 + 16 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v18 = (float *)(v102 + 16 * v14);
        while (v17 < v15 != *(v18 - 4) >= *v18)
        {
          ++v10;
          v18 += 4;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v17 < v15)
      {
        if (v10 < v14)
          goto LABEL_142;
        if (v14 < v10)
        {
          v19 = 16 * v10 - 16;
          v20 = v10;
          v21 = v14;
          do
          {
            if (v21 != --v20)
            {
              if (!v11)
                goto LABEL_148;
              v23 = (_OWORD *)(v11 + v16);
              v24 = (_OWORD *)(v11 + v19);
              v25 = *(_QWORD *)(v11 + v16);
              v26 = *(_DWORD *)(v11 + v16 + 8);
              if (v16 != v19 || v23 >= v24 + 1)
                *v23 = *v24;
              v22 = v11 + v19;
              *(_QWORD *)v22 = v25;
              *(_DWORD *)(v22 + 8) = v26;
            }
            ++v21;
            v19 -= 16;
            v16 += 16;
          }
          while (v21 < v20);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_50;
    if (__OFSUB__(v10, v14))
      goto LABEL_140;
    if (v10 - v14 >= v6)
      goto LABEL_50;
    v27 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_143;
    if (v27 >= v3)
      v27 = v3;
    if (v27 < v14)
      break;
    if (v10 != v27)
    {
      v28 = (float *)(v11 + 16 * v10);
      do
      {
        v29 = v28;
        v30 = v14;
        do
        {
          v31 = v29[2];
          if (*(v29 - 2) >= v31)
            break;
          if (!v11)
            goto LABEL_146;
          v32 = *(_QWORD *)v29;
          *(_OWORD *)v29 = *((_OWORD *)v29 - 1);
          *(v29 - 2) = v31;
          *((_QWORD *)v29 - 2) = v32;
          v29 -= 4;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 4;
      }
      while (v10 != v27);
      v10 = v27;
    }
LABEL_50:
    if (v10 < v14)
      goto LABEL_135;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1D46D5278(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v34 = *((_QWORD *)v12 + 2);
    v33 = *((_QWORD *)v12 + 3);
    v13 = v34 + 1;
    v11 = v107;
    if (v34 >= v33 >> 1)
    {
      v83 = sub_1D46D5278((char *)(v33 > 1), v34 + 1, 1, v12);
      v11 = v107;
      v12 = v83;
    }
    *((_QWORD *)v12 + 2) = v13;
    v35 = v12 + 32;
    v36 = &v12[16 * v34 + 32];
    *(_QWORD *)v36 = v14;
    *((_QWORD *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        v37 = v13 - 1;
        if (v13 >= 4)
        {
          v42 = &v35[16 * v13];
          v43 = *((_QWORD *)v42 - 8);
          v44 = *((_QWORD *)v42 - 7);
          v48 = __OFSUB__(v44, v43);
          v45 = v44 - v43;
          if (v48)
            goto LABEL_124;
          v47 = *((_QWORD *)v42 - 6);
          v46 = *((_QWORD *)v42 - 5);
          v48 = __OFSUB__(v46, v47);
          v40 = v46 - v47;
          v41 = v48;
          if (v48)
            goto LABEL_125;
          v49 = v13 - 2;
          v50 = &v35[16 * v13 - 32];
          v52 = *(_QWORD *)v50;
          v51 = *((_QWORD *)v50 + 1);
          v48 = __OFSUB__(v51, v52);
          v53 = v51 - v52;
          if (v48)
            goto LABEL_127;
          v48 = __OFADD__(v40, v53);
          v54 = v40 + v53;
          if (v48)
            goto LABEL_130;
          if (v54 >= v45)
          {
            v72 = &v35[16 * v37];
            v74 = *(_QWORD *)v72;
            v73 = *((_QWORD *)v72 + 1);
            v48 = __OFSUB__(v73, v74);
            v75 = v73 - v74;
            if (v48)
              goto LABEL_134;
            v65 = v40 < v75;
            goto LABEL_87;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v66 = *((_QWORD *)v12 + 4);
            v67 = *((_QWORD *)v12 + 5);
            v48 = __OFSUB__(v67, v66);
            v59 = v67 - v66;
            v60 = v48;
            goto LABEL_81;
          }
          v39 = *((_QWORD *)v12 + 4);
          v38 = *((_QWORD *)v12 + 5);
          v48 = __OFSUB__(v38, v39);
          v40 = v38 - v39;
          v41 = v48;
        }
        if ((v41 & 1) != 0)
          goto LABEL_126;
        v49 = v13 - 2;
        v55 = &v35[16 * v13 - 32];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v58 = __OFSUB__(v56, v57);
        v59 = v56 - v57;
        v60 = v58;
        if (v58)
          goto LABEL_129;
        v61 = &v35[16 * v37];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        v48 = __OFSUB__(v62, v63);
        v64 = v62 - v63;
        if (v48)
          goto LABEL_132;
        if (__OFADD__(v59, v64))
          goto LABEL_133;
        if (v59 + v64 >= v40)
        {
          v65 = v40 < v64;
LABEL_87:
          if (v65)
            v37 = v49;
          goto LABEL_89;
        }
LABEL_81:
        if ((v60 & 1) != 0)
          goto LABEL_128;
        v68 = &v35[16 * v37];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v48 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v48)
          goto LABEL_131;
        if (v71 < v59)
          goto LABEL_15;
LABEL_89:
        v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!v11)
          goto LABEL_147;
        v77 = v12;
        v78 = &v35[16 * v76];
        v79 = *(_QWORD *)v78;
        v80 = &v35[16 * v37];
        v81 = *((_QWORD *)v80 + 1);
        sub_1D4800BE8((float *)(v11 + 16 * *(_QWORD *)v78), (float *)(v11 + 16 * *(_QWORD *)v80), v11 + 16 * v81, __dst);
        if (v1)
          goto LABEL_97;
        if (v81 < v79)
          goto LABEL_121;
        if (v37 > *((_QWORD *)v77 + 2))
          goto LABEL_122;
        *(_QWORD *)v78 = v79;
        *(_QWORD *)&v35[16 * v76 + 8] = v81;
        v82 = *((_QWORD *)v77 + 2);
        if (v37 >= v82)
          goto LABEL_123;
        v12 = v77;
        v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((_QWORD *)v77 + 2) = v82 - 1;
        v11 = v107;
        if (v82 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v105;
    v3 = v106;
    if (v10 >= v106)
    {
      v9 = v104;
      goto LABEL_107;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  result = sub_1D4922C28();
  __break(1u);
  return result;
}

uint64_t sub_1D4800BE8(float *__src, float *a2, unint64_t a3, float *__dst)
{
  float *v4;
  float *v6;
  float *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  float *v15;
  float *v16;
  float *v17;
  float *v18;
  uint64_t v19;
  float *v20;
  float *v21;
  float *v22;
  float *v23;
  uint64_t result;
  float *v25;
  float *v26;
  float *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v26 = __dst;
  v27 = __src;
  if (v10 >= v13)
  {
    if (v11 >= -15)
    {
      v19 = 4 * v13;
      if (__dst != a2 || &a2[v19] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v20 = &v4[v19];
      v25 = &v4[v19];
      v27 = v6;
      if (v7 < v6 && (unint64_t)(v11 - 16) <= 0xFFFFFFFFFFFFFFE0)
      {
        v21 = (float *)(a3 - 16);
        do
        {
          v22 = v21 + 4;
          if (*(v6 - 2) >= *(v20 - 2))
          {
            v25 = v20 - 4;
            if (v22 < v20 || v21 >= v20 || v22 != v20)
              *(_OWORD *)v21 = *((_OWORD *)v20 - 1);
            v23 = v6;
            v20 -= 4;
            if (v6 <= v7)
              break;
          }
          else
          {
            v23 = v6 - 4;
            if (v22 != v6 || v21 >= v6)
              *(_OWORD *)v21 = *(_OWORD *)v23;
            v27 = v6 - 4;
            if (v23 <= v7)
              break;
          }
          v21 -= 4;
          v6 = v23;
        }
        while (v20 > v4);
      }
LABEL_44:
      sub_1D46D5748((void **)&v27, (const void **)&v26, &v25);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    v14 = 4 * v10;
    if (__dst != __src || &__src[v14] <= __dst)
      memmove(__dst, __src, v14 * 4);
    v15 = &v4[v14];
    v25 = &v4[v14];
    if ((unint64_t)v6 < a3 && (unint64_t)(v8 - 16) <= 0xFFFFFFFFFFFFFFE0)
    {
      v16 = v4;
      while (1)
      {
        if (v16[2] >= v6[2])
        {
          v4 = v16 + 4;
          v18 = v16;
          v17 = v6;
          if (v7 == v16)
          {
            v16 += 4;
            if (v7 < v4)
              goto LABEL_22;
          }
          else
          {
            v16 += 4;
          }
        }
        else
        {
          v17 = v6 + 4;
          v18 = v6;
          if (v7 == v6 && v7 < v17)
            goto LABEL_22;
        }
        *(_OWORD *)v7 = *(_OWORD *)v18;
LABEL_22:
        v7 += 4;
        if (v16 < v15)
        {
          v6 = v17;
          if ((unint64_t)v17 < a3)
            continue;
        }
        v26 = v4;
        v27 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  result = sub_1D4922C88();
  __break(1u);
  return result;
}

void (*sub_1D4800E70(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1D48013C4(v6);
  v6[10] = sub_1D4801008(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1D4800F00;
}

void sub_1D4800F00(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_1D4800F50(_QWORD *a1, uint64_t a2))(uint64_t a1)
{
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x50uLL);
  *a1 = v4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_1D48013F0(v4);
  v4[9] = sub_1D48011F4(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_1D4800FCC;
}

void sub_1D4800FCC(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 72))(*(_QWORD *)a1 + 32, 0);
  v2(v1, 0);
  free(v1);
}

void (*sub_1D4801008(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void (*result)(uint64_t **);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[1] = a3;
  v10[2] = v4;
  *v10 = a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABA40);
  v12 = malloc(*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  v10[3] = v12;
  v13 = *v4;
  v15 = sub_1D47CA4DC(a2, a3);
  *((_BYTE *)v10 + 40) = v14 & 1;
  v16 = *(_QWORD *)(v13 + 16);
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    v19 = v14;
    v20 = *(_QWORD *)(v13 + 24);
    if (v20 >= v18 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v15;
      if ((v19 & 1) != 0)
      {
LABEL_8:
        v21 = *(_QWORD *)(*v5 + 56);
        v22 = type metadata accessor for LandmarkSignals(0);
        v23 = *(_QWORD *)(v22 - 8);
        sub_1D469C630(v21 + *(_QWORD *)(v23 + 72) * v15, (uint64_t)v12, type metadata accessor for LandmarkSignals);
        v24 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v12, v24, 1, v22);
        return sub_1D48011A4;
      }
LABEL_11:
      v22 = type metadata accessor for LandmarkSignals(0);
      v23 = *(_QWORD *)(v22 - 8);
      v24 = 1;
      goto LABEL_12;
    }
    if (v20 >= v18 && (a4 & 1) == 0)
    {
      sub_1D47ADE00();
      goto LABEL_7;
    }
    sub_1D47A4A3C(v18, a4 & 1);
    v25 = sub_1D47CA4DC(a2, a3);
    if ((v19 & 1) == (v26 & 1))
    {
      v15 = v25;
      v10[4] = v25;
      if ((v19 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))sub_1D4922E8C();
  __break(1u);
  return result;
}

void sub_1D48011A4(uint64_t **a1)
{
  uint64_t *v1;
  void *v2;

  v1 = *a1;
  v2 = (void *)(*a1)[3];
  sub_1D4801410((uint64_t)v2, *((_BYTE *)*a1 + 40), (uint64_t *)(*a1)[2], (*a1)[4], **a1, (*a1)[1]);
  sub_1D46992EC((uint64_t)v2, &qword_1EFEABA40);
  free(v2);
  free(v1);
}

void (*sub_1D48011F4(_QWORD *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  void (*result)(uint64_t **);

  v4 = v3;
  v8 = malloc(0x28uLL);
  *a1 = v8;
  *v8 = a2;
  v8[1] = v3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABA58);
  v10 = malloc(*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  v8[2] = v10;
  v11 = *v3;
  v13 = sub_1D47D1618(a2);
  *((_BYTE *)v8 + 32) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*v4 + 56);
        v20 = type metadata accessor for StorefrontSignals(0);
        v21 = *(_QWORD *)(v20 - 8);
        sub_1D469C630(v19 + *(_QWORD *)(v21 + 72) * v13, (uint64_t)v10, type metadata accessor for StorefrontSignals);
        v22 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v10, v22, 1, v20);
        return sub_1D4801378;
      }
LABEL_11:
      v20 = type metadata accessor for StorefrontSignals(0);
      v21 = *(_QWORD *)(v20 - 8);
      v22 = 1;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_1D47AE46C();
      goto LABEL_7;
    }
    sub_1D47A5478(v16, a3 & 1);
    v23 = sub_1D47D1618(a2);
    if ((v17 & 1) == (v24 & 1))
    {
      v13 = v23;
      v8[3] = v23;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))sub_1D4922E8C();
  __break(1u);
  return result;
}

void sub_1D4801378(uint64_t **a1)
{
  uint64_t *v1;
  void *v2;

  v1 = *a1;
  v2 = (void *)(*a1)[2];
  sub_1D48015D0((uint64_t)v2, *((_BYTE *)*a1 + 32), (uint64_t *)(*a1)[1], (*a1)[3], **a1);
  sub_1D46992EC((uint64_t)v2, &qword_1EFEABA58);
  free(v2);
  free(v1);
}

uint64_t (*sub_1D48013C4(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_1D48013E4;
}

uint64_t sub_1D48013E4(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t (*sub_1D48013F0(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_1D4804FB8;
}

unint64_t sub_1D4801410(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unint64_t result;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v22 = a5;
  v23 = a6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABA40);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LandmarkSignals(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v22 - v18;
  sub_1D469C5EC(a1, (uint64_t)v12, &qword_1EFEABA40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    result = sub_1D46992EC((uint64_t)v12, &qword_1EFEABA40);
    if ((a2 & 1) != 0)
    {
      swift_arrayDestroy();
      return sub_1D48C1F90(a4, *a3);
    }
  }
  else
  {
    sub_1D469C630((uint64_t)v12, (uint64_t)v19, type metadata accessor for LandmarkSignals);
    v21 = (_QWORD *)*a3;
    if ((a2 & 1) != 0)
    {
      return sub_1D469C630((uint64_t)v19, v21[7] + *(_QWORD *)(v14 + 72) * a4, type metadata accessor for LandmarkSignals);
    }
    else
    {
      sub_1D469C630((uint64_t)v19, (uint64_t)v17, type metadata accessor for LandmarkSignals);
      sub_1D47AC908(a4, v22, v23, (uint64_t)v17, v21);
      return swift_bridgeObjectRetain();
    }
  }
  return result;
}

unint64_t sub_1D48015D0(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  unint64_t result;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABA58);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StorefrontSignals(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v21 - v17;
  sub_1D469C5EC(a1, (uint64_t)v11, &qword_1EFEABA58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    result = sub_1D46992EC((uint64_t)v11, &qword_1EFEABA58);
    if ((a2 & 1) != 0)
      return sub_1D48C218C(a4, *a3);
  }
  else
  {
    sub_1D469C630((uint64_t)v11, (uint64_t)v18, type metadata accessor for StorefrontSignals);
    v20 = (_QWORD *)*a3;
    if ((a2 & 1) != 0)
    {
      return sub_1D469C630((uint64_t)v18, v20[7] + *(_QWORD *)(v13 + 72) * a4, type metadata accessor for StorefrontSignals);
    }
    else
    {
      sub_1D469C630((uint64_t)v18, (uint64_t)v16, type metadata accessor for StorefrontSignals);
      return sub_1D47AC998(a4, v22, (uint64_t)v16, v20);
    }
  }
  return result;
}

uint64_t sub_1D4801768(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  const void *v20;
  BOOL v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(a1 + 16);
  v26 = *(_QWORD *)(a1 + 24);
  v2 = *(_BYTE *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  result = sub_1D4803A88(a1);
  v6 = 0;
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v8 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
  v27 = v3;
  v25 = v3 + 32;
  if ((v2 & 1) == 0)
    goto LABEL_5;
LABEL_2:
  if (v1 < v26)
  {
    v9 = v1 + 1;
    if (v6)
      goto LABEL_23;
LABEL_11:
    v11 = v7[3];
    if ((uint64_t)((v11 >> 1) + 0x4000000000000000) >= 0)
    {
      v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if (v12 <= 1)
        v13 = 1;
      else
        v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D3D8);
      v14 = (_QWORD *)swift_allocObject();
      v15 = _swift_stdlib_malloc_size(v14);
      v16 = v15 - 32;
      if (v15 < 32)
        v16 = v15 - 25;
      v17 = v16 >> 3;
      v14[2] = v13;
      v14[3] = 2 * (v16 >> 3);
      v18 = (unint64_t)(v14 + 4);
      v19 = v7[3] >> 1;
      if (v7[2])
      {
        v20 = v7 + 4;
        if (v14 != v7 || v18 >= (unint64_t)v20 + 8 * v19)
          memmove(v14 + 4, v20, 8 * v19);
        v7[2] = 0;
      }
      v8 = (_QWORD *)(v18 + 8 * v19);
      v6 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
      result = swift_release();
      v7 = v14;
LABEL_23:
      while (1)
      {
        v21 = __OFSUB__(v6--, 1);
        if (v21)
          break;
        *v8++ = v1;
        v1 = v9;
        if ((v2 & 1) != 0)
          goto LABEL_2;
LABEL_5:
        v10 = *(_QWORD *)(v27 + 16);
        if (v4 >= v10)
          goto LABEL_26;
        if (v4 + 1 >= v10)
        {
          ++v4;
          v9 = v1;
          if (!v6)
            goto LABEL_11;
        }
        else
        {
          if (v4 < -1)
            goto LABEL_32;
          v9 = *(_QWORD *)(v25 + 8 * ++v4);
          if (!v6)
            goto LABEL_11;
        }
      }
      __break(1u);
    }
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
LABEL_26:
  swift_bridgeObjectRelease();
  result = swift_release();
  v22 = v7[3];
  if (v22 < 2)
    return (uint64_t)v7;
  v23 = v22 >> 1;
  v21 = __OFSUB__(v23, v6);
  v24 = v23 - v6;
  if (!v21)
  {
    v7[2] = v24;
    return (uint64_t)v7;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1D4801944(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  size_t v17;
  BOOL v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v3 = result;
    result = swift_bridgeObjectRetain();
    v4 = 0;
    v5 = 0;
    v6 = v2 + 4;
    while (1)
    {
      v7 = *(_DWORD *)(v3 + 4 * v5 + 32);
      if (!v4)
      {
        v8 = v2[3];
        if ((uint64_t)((v8 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_28;
        v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
        if (v9 <= 1)
          v10 = 1;
        else
          v10 = v9;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABA50);
        v11 = (_QWORD *)swift_allocObject();
        v12 = _swift_stdlib_malloc_size(v11);
        v13 = v12 - 32;
        if (v12 < 32)
          v13 = v12 - 17;
        v14 = v13 >> 4;
        v11[2] = v10;
        v11[3] = 2 * (v13 >> 4);
        v15 = (unint64_t)(v11 + 4);
        v16 = v2[3] >> 1;
        v17 = 16 * v16;
        if (v2[2])
        {
          if (v11 != v2 || v15 >= (unint64_t)&v2[v17 / 8 + 4])
            memmove(v11 + 4, v2 + 4, v17);
          v2[2] = 0;
        }
        v6 = (_QWORD *)(v15 + v17);
        v4 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        result = swift_release();
        v2 = v11;
      }
      v19 = __OFSUB__(v4--, 1);
      if (v19)
        break;
      *v6 = v5;
      *((_DWORD *)v6 + 2) = v7;
      v6 += 2;
      if (v1 == ++v5)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v4 = 0;
LABEL_23:
  v20 = v2[3];
  if (v20 < 2)
    return (uint64_t)v2;
  v21 = v20 >> 1;
  v19 = __OFSUB__(v21, v4);
  v22 = v21 - v4;
  if (!v19)
  {
    v2[2] = v22;
    return (uint64_t)v2;
  }
LABEL_29:
  __break(1u);
  return result;
}

unint64_t sub_1D4801AC0(uint64_t (*a1)(uint64_t a1), char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(0);
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v35 = (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1D4801944(v6);
  swift_bridgeObjectRelease();
  v36 = v7;
  swift_bridgeObjectRetain();
  sub_1D47FC54C(&v36);
  swift_release();
  v8 = v36;
  if (*(_QWORD *)(v36 + 16) >= 0x19uLL)
    v9 = 25;
  else
    v9 = *(_QWORD *)(v36 + 16);
  sub_1D4922E5C();
  swift_unknownObjectRetain_n();
  v10 = swift_dynamicCastClass();
  if (!v10)
  {
    swift_release();
    v10 = MEMORY[0x1E0DEE9D8];
  }
  v11 = *(_QWORD *)(v10 + 16);
  swift_release();
  if (v11 != v9)
    goto LABEL_34;
  v12 = swift_dynamicCastClass();
  if (!v12)
  {
    swift_release();
    v12 = MEMORY[0x1E0DEE9D8];
  }
  while (1)
  {
    swift_release();
    v13 = *(_QWORD *)(v12 + 16);
    if (v13)
    {
      v36 = MEMORY[0x1E0DEE9D8];
      sub_1D48AC0FC(0, v13, 0);
      v8 = v36;
      v14 = *(_QWORD *)(v36 + 16);
      v9 = 32;
      do
      {
        v15 = *(_QWORD *)(v12 + v9);
        v36 = v8;
        v16 = *(_QWORD *)(v8 + 24);
        if (v14 >= v16 >> 1)
        {
          sub_1D48AC0FC(v16 > 1, v14 + 1, 1);
          v8 = v36;
        }
        *(_QWORD *)(v8 + 16) = v14 + 1;
        *(_QWORD *)(v8 + 8 * v14 + 32) = v15;
        v9 += 16;
        ++v14;
        --v13;
      }
      while (v13);
      swift_release();
    }
    else
    {
      swift_release();
      v8 = MEMORY[0x1E0DEE9D8];
    }
    v33 = *(_QWORD *)(v8 + 16);
    if (!v33)
      break;
    v17 = 0;
    v18 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    v31 = (char *)a1 + v18;
    v32 = *((_QWORD *)a1 + 2);
    v19 = *((_QWORD *)a2 + 2);
    v29 = a2 + 32;
    v30 = v19;
    v20 = MEMORY[0x1E0DEE9D8];
    a1 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet;
    a2 = (char *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v21 = *(_QWORD *)(v8 + 8 * v17 + 32);
      if (v21 >= v32)
        break;
      v22 = *(_QWORD *)(v34 + 72);
      sub_1D469C304((uint64_t)&v31[v22 * v21], v35, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_1D48A99A8(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
      v9 = *(_QWORD *)(v20 + 16);
      v23 = *(_QWORD *)(v20 + 24);
      if (v9 >= v23 >> 1)
        v20 = sub_1D48A99A8(v23 > 1, v9 + 1, 1, v20);
      *(_QWORD *)(v20 + 16) = v9 + 1;
      sub_1D469C630(v35, v20 + v18 + v9 * v22, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
      if ((uint64_t)v21 >= v30)
        goto LABEL_33;
      v24 = *(_DWORD *)&v29[4 * v21];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        a2 = sub_1D48A882C(0, *((_QWORD *)a2 + 2) + 1, 1, a2);
      v26 = *((_QWORD *)a2 + 2);
      v25 = *((_QWORD *)a2 + 3);
      if (v26 >= v25 >> 1)
        a2 = sub_1D48A882C((char *)(v25 > 1), v26 + 1, 1, a2);
      ++v17;
      *((_QWORD *)a2 + 2) = v26 + 1;
      *(_DWORD *)&a2[4 * v26 + 32] = v24;
      if (v33 == v17)
      {
        swift_bridgeObjectRelease();
        return v20;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    swift_release();
    v12 = sub_1D4851DB0(v8, v8 + 32, 0, (2 * v9) | 1);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

id sub_1D4801E9C(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _BYTE *v17;
  uint64_t i;
  int v19;
  id v20;
  double v21;
  id v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = sub_1D4922370();
  v25 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98ECE8);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1D4929910;
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(v8 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v9);
  v27 = v8;
  sub_1D4922838();
  v10 = v27;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1D4934050;
    sub_1D46C2548();
    *(_QWORD *)(v11 + 32) = sub_1D4922A24();
    *(_QWORD *)(v11 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v9);
    v27 = v11;
    sub_1D4922838();
    v10 = v27;
  }
  v12 = objc_allocWithZone(MEMORY[0x1E0C9E970]);
  v13 = sub_1D48C3E28(v10, 65568);
  if (v2)
  {
    sub_1D470C76C((uint64_t)v7);
    v14 = sub_1D4922358();
    v15 = sub_1D492291C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1D467C000, v14, v15, "Error: Unable to create MLMultiArray from float", v16, 2u);
      MEMORY[0x1D82635B8](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v26);
    sub_1D4730530();
    swift_allocError();
    *v17 = 5;
    swift_willThrow();

  }
  else if (v9)
  {
    v26 = 0;
    swift_bridgeObjectRetain();
    for (i = 0; i != v9; ++i)
    {
      v19 = *(_DWORD *)(a1 + 4 * i + 32);
      v20 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
      LODWORD(v21) = v19;
      v22 = objc_msgSend(v20, sel_initWithFloat_, v21);
      objc_msgSend(v13, sel_setObject_atIndexedSubscript_, v22, i);

    }
    swift_bridgeObjectRelease();
  }
  return v13;
}

id sub_1D4802168(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id result;
  void *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _BYTE *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = sub_1D4922370();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98ECE8);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1D4929910;
  *(_QWORD *)(v9 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a1);
  v21 = v9;
  sub_1D4922838();
  v10 = v21;
  v11 = objc_allocWithZone(MEMORY[0x1E0C9E970]);
  result = sub_1D48C3E28(v10, 65568);
  v13 = result;
  if (v2)
  {
    sub_1D470C76C((uint64_t)v8);
    v14 = sub_1D4922358();
    v15 = sub_1D492291C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1D467C000, v14, v15, "Error: Unable to create MLMultiArray for mask", v16, 2u);
      MEMORY[0x1D82635B8](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1D4730530();
    swift_allocError();
    *v17 = 5;
    swift_willThrow();

    return v13;
  }
  if ((a2 & 0x8000000000000000) == 0)
  {
    if (a2)
    {
      sub_1D46C2548();
      v18 = 0;
      do
      {
        v19 = (void *)sub_1D4922A24();
        objc_msgSend(v13, sel_setObject_atIndexedSubscript_, v19, v18);

        ++v18;
      }
      while (a2 != v18);
    }
    return v13;
  }
  __break(1u);
  return result;
}

void sub_1D4802394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _BYTE *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _BYTE *v25;
  id v26;
  id v27;
  _QWORD *v28;
  _QWORD v29[2];

  v7 = sub_1D4922370();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v29 - v12;
  if (*(_QWORD *)(a1 + 16) == 53)
  {
    v14 = sub_1D4801E9C(a1, 0);
    v15 = v3;
    if (!v3)
    {
      v16 = v14;
      v17 = sub_1D4922850();
      *(_QWORD *)(v17 + 16) = 1;
      *(float *)(v17 + 32) = (float)a2;
      v26 = sub_1D4801E9C(v17, 0);
      swift_bridgeObjectRelease();
      v27 = sub_1D4802168(53, a3);
      type metadata accessor for EncryptedSearchLTRInput();
      v28 = (_QWORD *)swift_allocObject();
      v28[2] = v16;
      v28[3] = v26;
      v28[4] = v27;
      return;
    }
  }
  else
  {
    sub_1D470C76C((uint64_t)v29 - v12);
    v18 = sub_1D4922358();
    v19 = sub_1D492291C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1D467C000, v18, v19, "Error: provided feature size not equal to EncryptedSearchLTRInput size", v20, 2u);
      MEMORY[0x1D82635B8](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    sub_1D4730530();
    v15 = (void *)swift_allocError();
    *v21 = 5;
    swift_willThrow();
  }
  sub_1D470C76C((uint64_t)v11);
  v22 = sub_1D4922358();
  v23 = sub_1D492291C();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v24 = 0;
    _os_log_impl(&dword_1D467C000, v22, v23, "Error: Unable to create EncryptedSearchLTRInput", v24, 2u);
    MEMORY[0x1D82635B8](v24, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  sub_1D4730530();
  swift_allocError();
  *v25 = 5;
  swift_willThrow();

}

uint64_t sub_1D4802678(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  _QWORD *v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  _BOOL8 v64;
  uint64_t v65;
  char v66;
  unint64_t v67;
  char v68;
  unint64_t v69;
  char v70;
  char v71;
  uint64_t v72;
  _BOOL8 v73;
  uint64_t v74;
  char v75;
  unint64_t v76;
  char v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  void *v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  _DWORD *v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int (*v109)(uint64_t, uint64_t, uint64_t);
  int v110;
  unint64_t v111;
  unint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  unint64_t v118;
  unint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  float v124;
  uint64_t v125;
  float *v126;
  float v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(_QWORD *);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _BYTE *v146;
  NSObject *v147;
  os_log_type_t v148;
  uint8_t *v149;
  unint64_t v150;
  uint64_t result;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  float *v157;
  unint64_t v158;
  uint64_t v159;
  unint64_t v160;
  void *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  void *v165;
  __int128 v166;
  uint64_t v167;
  unint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t *v173;
  _QWORD v174[5];
  unint64_t v175;

  v161 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABA40);
  v6 = MEMORY[0x1E0C80A78](v5);
  v162 = (uint64_t)&v152 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v163 = (uint64_t)&v152 - v9;
  MEMORY[0x1E0C80A78](v8);
  v164 = (uint64_t)&v152 - v10;
  v171 = type metadata accessor for LandmarkSignals(0);
  v11 = *(_QWORD *)(v171 - 8);
  v12 = MEMORY[0x1E0C80A78](v171);
  v172 = (unint64_t)&v152 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v168 = (unint64_t)&v152 - v14;
  v15 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v160 = (unint64_t)&v152 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v173 = (uint64_t *)((char *)&v152 - v19);
  v20 = sub_1D4922370();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v152 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v152 - v25;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v170 = v11;
    v153 = v24;
    v154 = v21;
    v155 = v20;
    v27 = sub_1D4801AC0((uint64_t (*)(uint64_t))a1, (char *)a2);
    v159 = v28;
    v29 = MEMORY[0x1E0DEE9D8];
    v175 = sub_1D47C4674(MEMORY[0x1E0DEE9D8]);
    v30 = sub_1D47C4690(v29);
    if (*(_QWORD *)(v27 + 16) >= 0x19uLL)
      v31 = 25;
    else
      v31 = *(_QWORD *)(v27 + 16);
    v169 = v31;
    v156 = v27;
    if (v31)
    {
      v32 = 0;
      v33 = v27 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
      v167 = *(_QWORD *)(v16 + 72);
      v166 = xmmword_1D49273C0;
      v34 = v173;
      do
      {
        sub_1D469C304(v33, (uint64_t)v34, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
        v37 = *v34;
        v36 = v34[1];
        v31 = v168;
        sub_1D469C304((uint64_t)v34, v168, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
        v39 = v171;
        v38 = v172;
        *(_QWORD *)(v31 + *(int *)(v171 + 20)) = 0;
        *(_BYTE *)(v31 + *(int *)(v39 + 24)) = 0;
        sub_1D469C630(v31, v38, type metadata accessor for LandmarkSignals);
        swift_bridgeObjectRetain();
        v40 = v175;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v174[0] = v40;
        v43 = sub_1D47CA4DC(v37, v36);
        v44 = *(_QWORD *)(v40 + 16);
        v45 = (v42 & 1) == 0;
        v46 = v44 + v45;
        if (__OFADD__(v44, v45))
          goto LABEL_135;
        v31 = v42;
        if (*(_QWORD *)(v40 + 24) >= v46)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v49 = (_QWORD *)v174[0];
            if ((v42 & 1) != 0)
              goto LABEL_17;
          }
          else
          {
            sub_1D47ADE00();
            v49 = (_QWORD *)v174[0];
            if ((v31 & 1) != 0)
              goto LABEL_17;
          }
        }
        else
        {
          sub_1D47A4A3C(v46, isUniquelyReferenced_nonNull_native);
          v47 = sub_1D47CA4DC(v37, v36);
          if ((v31 & 1) != (v48 & 1))
            goto LABEL_151;
          v43 = v47;
          v49 = (_QWORD *)v174[0];
          if ((v31 & 1) != 0)
          {
LABEL_17:
            sub_1D4803A44(v172, v49[7] + *(_QWORD *)(v170 + 72) * v43);
            goto LABEL_18;
          }
        }
        v49[(v43 >> 6) + 8] |= 1 << v43;
        v50 = (uint64_t *)(v49[6] + 16 * v43);
        *v50 = v37;
        v50[1] = v36;
        sub_1D469C630(v172, v49[7] + *(_QWORD *)(v170 + 72) * v43, type metadata accessor for LandmarkSignals);
        v51 = v49[2];
        v52 = __OFADD__(v51, 1);
        v53 = v51 + 1;
        if (v52)
          goto LABEL_137;
        v49[2] = v53;
        swift_bridgeObjectRetain();
LABEL_18:
        v175 = (unint64_t)v49;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v37 = *v173;
        v54 = v173[1];
        if (*(_QWORD *)(v30 + 16))
        {
          swift_bridgeObjectRetain();
          v55 = sub_1D47CA4DC(v37, v54);
          if ((v56 & 1) != 0)
          {
            v57 = *(_QWORD **)(*(_QWORD *)(v30 + 56) + 8 * v55);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v57 = sub_1D48A8D8C(0, v57[2] + 1, 1, v57);
            v59 = v57[2];
            v58 = v57[3];
            if (v59 >= v58 >> 1)
              v57 = sub_1D48A8D8C((_QWORD *)(v58 > 1), v59 + 1, 1, v57);
            v57[2] = v59 + 1;
            v57[v59 + 4] = v32;
            swift_bridgeObjectRetain();
            v60 = v30;
            v61 = swift_isUniquelyReferenced_nonNull_native();
            v174[0] = v60;
            v31 = sub_1D47CA4DC(v37, v54);
            v63 = *(_QWORD *)(v60 + 16);
            v64 = (v62 & 1) == 0;
            v65 = v63 + v64;
            if (__OFADD__(v63, v64))
              goto LABEL_140;
            v66 = v62;
            if (*(_QWORD *)(v60 + 24) >= v65)
            {
              if ((v61 & 1) != 0)
              {
                v30 = v174[0];
                if ((v62 & 1) == 0)
                  goto LABEL_42;
              }
              else
              {
                sub_1D47AE044();
                v30 = v174[0];
                if ((v66 & 1) == 0)
                  goto LABEL_42;
              }
            }
            else
            {
              sub_1D47A4DBC(v65, v61);
              v67 = sub_1D47CA4DC(v37, v54);
              if ((v66 & 1) != (v68 & 1))
                goto LABEL_151;
              v31 = v67;
              v30 = v174[0];
              if ((v66 & 1) == 0)
              {
LABEL_42:
                *(_QWORD *)(v30 + 8 * (v31 >> 6) + 64) |= 1 << v31;
                v81 = (uint64_t *)(*(_QWORD *)(v30 + 48) + 16 * v31);
                *v81 = v37;
                v81[1] = v54;
                *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v31) = v57;
                v82 = *(_QWORD *)(v30 + 16);
                v52 = __OFADD__(v82, 1);
                v80 = v82 + 1;
                if (v52)
                  goto LABEL_145;
                goto LABEL_43;
              }
            }
            goto LABEL_7;
          }
          swift_bridgeObjectRelease();
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D3D8);
        v57 = (_QWORD *)swift_allocObject();
        *((_OWORD *)v57 + 1) = v166;
        v57[4] = v32;
        swift_bridgeObjectRetain();
        v69 = v30;
        v70 = swift_isUniquelyReferenced_nonNull_native();
        v174[0] = v69;
        v31 = sub_1D47CA4DC(v37, v54);
        v72 = *(_QWORD *)(v69 + 16);
        v73 = (v71 & 1) == 0;
        v74 = v72 + v73;
        if (__OFADD__(v72, v73))
          goto LABEL_136;
        v75 = v71;
        if (*(_QWORD *)(v69 + 24) >= v74)
        {
          if ((v70 & 1) != 0)
          {
            v30 = v174[0];
            if ((v71 & 1) == 0)
              goto LABEL_37;
          }
          else
          {
            sub_1D47AE044();
            v30 = v174[0];
            if ((v75 & 1) == 0)
              goto LABEL_37;
          }
        }
        else
        {
          sub_1D47A4DBC(v74, v70);
          v76 = sub_1D47CA4DC(v37, v54);
          if ((v75 & 1) != (v77 & 1))
            goto LABEL_151;
          v31 = v76;
          v30 = v174[0];
          if ((v75 & 1) == 0)
          {
LABEL_37:
            *(_QWORD *)(v30 + 8 * (v31 >> 6) + 64) |= 1 << v31;
            v78 = (uint64_t *)(*(_QWORD *)(v30 + 48) + 16 * v31);
            *v78 = v37;
            v78[1] = v54;
            *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v31) = v57;
            v79 = *(_QWORD *)(v30 + 16);
            v52 = __OFADD__(v79, 1);
            v80 = v79 + 1;
            if (v52)
              goto LABEL_138;
LABEL_43:
            *(_QWORD *)(v30 + 16) = v80;
            swift_bridgeObjectRetain();
            goto LABEL_8;
          }
        }
LABEL_7:
        v35 = *(_QWORD *)(v30 + 56);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v35 + 8 * v31) = v57;
LABEL_8:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v31 = v169;
        v34 = v173;
        ++v32;
        sub_1D4697DE0((uint64_t)v173, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
        v33 += v167;
      }
      while (v31 != v32);
    }
    v88 = *(_QWORD *)(v30 + 64);
    v158 = v30 + 64;
    v89 = 1 << *(_BYTE *)(v30 + 32);
    v90 = -1;
    if (v89 < 64)
      v90 = ~(-1 << v89);
    v91 = v90 & v88;
    *(_QWORD *)&v166 = (unint64_t)(v89 + 63) >> 6;
    v157 = (float *)(v159 + 32);
    v172 = v30;
    swift_bridgeObjectRetain();
    v92 = 0;
    v93 = 2 * v31;
    v37 = v171;
    while (1)
    {
      if (v91)
      {
        v168 = (v91 - 1) & v91;
        v94 = __clz(__rbit64(v91)) | (v92 << 6);
      }
      else
      {
        v52 = __OFADD__(v92++, 1);
        if (v52)
          goto LABEL_146;
        if (v92 >= (uint64_t)v166)
        {
LABEL_129:
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          v150 = v175;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v150;
        }
        v95 = *(_QWORD *)(v158 + 8 * v92);
        if (!v95)
        {
          v96 = v92 + 1;
          if (v92 + 1 >= (uint64_t)v166)
            goto LABEL_129;
          v95 = *(_QWORD *)(v158 + 8 * v96);
          if (!v95)
          {
            v96 = v92 + 2;
            if (v92 + 2 >= (uint64_t)v166)
              goto LABEL_129;
            v95 = *(_QWORD *)(v158 + 8 * v96);
            if (!v95)
            {
              v96 = v92 + 3;
              if (v92 + 3 >= (uint64_t)v166)
                goto LABEL_129;
              v95 = *(_QWORD *)(v158 + 8 * v96);
              if (!v95)
              {
                v96 = v92 + 4;
                if (v92 + 4 >= (uint64_t)v166)
                  goto LABEL_129;
                v95 = *(_QWORD *)(v158 + 8 * v96);
                if (!v95)
                {
                  v96 = v92 + 5;
                  if (v92 + 5 >= (uint64_t)v166)
                    goto LABEL_129;
                  v95 = *(_QWORD *)(v158 + 8 * v96);
                  if (!v95)
                  {
                    while (1)
                    {
                      v92 = v96 + 1;
                      if (__OFADD__(v96, 1))
                        goto LABEL_147;
                      if (v92 >= (uint64_t)v166)
                        goto LABEL_129;
                      v95 = *(_QWORD *)(v158 + 8 * v92);
                      ++v96;
                      if (v95)
                        goto LABEL_73;
                    }
                  }
                }
              }
            }
          }
          v92 = v96;
        }
LABEL_73:
        v168 = (v95 - 1) & v95;
        v94 = __clz(__rbit64(v95)) + (v92 << 6);
      }
      v97 = *(_QWORD *)(v172 + 48) + 16 * v94;
      v98 = *(uint64_t **)v97;
      v99 = *(_QWORD *)(v97 + 8);
      swift_bridgeObjectRetain();
      v100 = sub_1D4922850();
      *(_QWORD *)(v100 + 16) = 53;
      *(_OWORD *)(v100 + 32) = 0u;
      v101 = (_DWORD *)(v100 + 32);
      *(_OWORD *)(v100 + 48) = 0u;
      *(_OWORD *)(v100 + 64) = 0u;
      *(_OWORD *)(v100 + 80) = 0u;
      *(_OWORD *)(v100 + 96) = 0u;
      *(_OWORD *)(v100 + 112) = 0u;
      *(_OWORD *)(v100 + 128) = 0u;
      *(_OWORD *)(v100 + 144) = 0u;
      *(_OWORD *)(v100 + 160) = 0u;
      *(_OWORD *)(v100 + 176) = 0u;
      *(_OWORD *)(v100 + 192) = 0u;
      *(_OWORD *)(v100 + 208) = 0u;
      *(_OWORD *)(v100 + 224) = 0u;
      *(_DWORD *)(v100 + 240) = 0;
      v102 = v175;
      v103 = *(_QWORD *)(v175 + 16);
      v173 = v98;
      if (v103)
      {
        swift_bridgeObjectRetain();
        v104 = sub_1D47CA4DC((uint64_t)v98, v99);
        v106 = v170;
        if ((v105 & 1) != 0)
        {
          v107 = *(_QWORD *)(v102 + 56) + *(_QWORD *)(v170 + 72) * v104;
          v108 = v164;
          sub_1D469C304(v107, v164, type metadata accessor for LandmarkSignals);
          v31 = *(_QWORD *)(v106 + 56);
          ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v31)(v108, 0, 1, v37);
        }
        else
        {
          v31 = *(_QWORD *)(v170 + 56);
          v108 = v164;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v164, 1, 1, v37);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v106 = v170;
        v31 = *(_QWORD *)(v170 + 56);
        v108 = v164;
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v164, 1, 1, v37);
      }
      v109 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48);
      if (v109(v108, 1, v37))
        goto LABEL_122;
      v110 = *(_DWORD *)(v108 + 32);
      sub_1D46992EC(v108, &qword_1EFEABA40);
      if (!*(_QWORD *)(v100 + 16))
        goto LABEL_139;
      *v101 = v110;
      v111 = v175;
      if (*(_QWORD *)(v175 + 16))
      {
        swift_bridgeObjectRetain();
        v112 = sub_1D47CA4DC((uint64_t)v173, v99);
        if ((v113 & 1) != 0)
        {
          v114 = *(_QWORD *)(v111 + 56) + *(_QWORD *)(v170 + 72) * v112;
          v108 = v163;
          sub_1D469C304(v114, v163, type metadata accessor for LandmarkSignals);
          v115 = v108;
          v116 = 0;
        }
        else
        {
          v108 = v163;
          v115 = v163;
          v116 = 1;
        }
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v115, v116, 1, v37);
        swift_bridgeObjectRelease();
      }
      else
      {
        v108 = v163;
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v163, 1, 1, v37);
      }
      if (v109(v108, 1, v37))
      {
LABEL_122:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1D46992EC(v108, &qword_1EFEABA40);
        swift_bridgeObjectRelease();
        sub_1D4730530();
        v86 = (void *)swift_allocError();
        *v146 = 4;
        swift_willThrow();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_124:
        v20 = v155;
        v21 = v154;
        v24 = v153;
        goto LABEL_125;
      }
      v117 = *(_DWORD *)(v108 + 36);
      sub_1D46992EC(v108, &qword_1EFEABA40);
      if (*(_QWORD *)(v100 + 16) < 2uLL)
        goto LABEL_141;
      *(_DWORD *)(v100 + 36) = v117;
      v118 = v175;
      if (!*(_QWORD *)(v175 + 16))
        goto LABEL_148;
      swift_bridgeObjectRetain();
      v119 = sub_1D47CA4DC((uint64_t)v173, v99);
      if ((v120 & 1) != 0)
      {
        v121 = *(_QWORD *)(v118 + 56) + *(_QWORD *)(v170 + 72) * v119;
        v122 = v162;
        sub_1D469C304(v121, v162, type metadata accessor for LandmarkSignals);
        v123 = 0;
      }
      else
      {
        v123 = 1;
        v122 = v162;
      }
      v167 = v92;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v122, v123, 1, v37);
      swift_bridgeObjectRelease();
      if (v109(v122, 1, v37) == 1)
        goto LABEL_149;
      v31 = v160;
      sub_1D469C304(v122, v160, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
      v37 = sub_1D472B6C0(v31, v161);
      sub_1D4697DE0(v31, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
      sub_1D4697DE0(v122, type metadata accessor for LandmarkSignals);
      if (*(_QWORD *)(v100 + 16) < 3uLL)
        goto LABEL_142;
      v124 = (v37 & 1) != 0 ? 1.0 : 0.0;
      *(float *)(v100 + 40) = v124;
      if (v169)
        break;
LABEL_104:
      v128 = v172;
      if (!*(_QWORD *)(v172 + 16))
        goto LABEL_143;
      swift_bridgeObjectRetain();
      v129 = sub_1D47CA4DC((uint64_t)v173, v99);
      if ((v130 & 1) == 0)
        goto LABEL_150;
      v31 = *(_QWORD *)(*(_QWORD *)(v128 + 56) + 8 * v129);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v131 = *(_QWORD *)(v31 + 16);
      if (v131)
      {
        v132 = (uint64_t *)(v31 + 32);
        do
        {
          v134 = *v132++;
          v133 = v134;
          if (v134 + 0x4000000000000000 < 0)
            goto LABEL_131;
          v135 = 2 * v133;
          v52 = __OFADD__(v135, 3);
          v136 = v135 + 3;
          if (v52)
            goto LABEL_132;
          if ((v136 & 0x8000000000000000) != 0)
            goto LABEL_133;
          if (v136 >= *(_QWORD *)(v100 + 16))
            goto LABEL_134;
          v101[v136] = 1065353216;
        }
        while (--v131);
      }
      swift_bridgeObjectRelease();
      v137 = v165;
      sub_1D4802394(v100, 1, 53);
      v165 = v137;
      if (v137)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v86 = v165;
        goto LABEL_124;
      }
      v139 = v138;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v140 = sub_1D47FCEEC(v174, (uint64_t)v173, v99);
      v142 = v141;
      v143 = v171;
      if (!v109(v141, 1, v171))
      {
        *(_QWORD *)(v142 + *(int *)(v143 + 20)) = v139;
        swift_retain();
        swift_release();
      }
      ((void (*)(_QWORD *, _QWORD))v140)(v174, 0);
      v92 = v167;
      swift_bridgeObjectRelease();
      v31 = (unint64_t)sub_1D47FCEEC(v174, (uint64_t)v173, v99);
      v145 = v144;
      if (!v109(v144, 1, v143))
        *(_BYTE *)(v145 + *(int *)(v143 + 24)) = v37 & 1;
      ((void (*)(_QWORD *, _QWORD))v31)(v174, 0);
      swift_bridgeObjectRelease();
      swift_release();
      v37 = v171;
      v91 = v168;
    }
    if (v169 > *(_QWORD *)(v159 + 16))
      goto LABEL_144;
    v125 = 0;
    v126 = v157;
    while ((unint64_t)(v125 + 4) < *(_QWORD *)(v100 + 16))
    {
      v127 = *v126++;
      *(float *)(v100 + 48 + 4 * v125) = v127 * 10.0;
      v125 += 2;
      if (v93 == v125)
        goto LABEL_104;
    }
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v162, 1, 1, v37);
LABEL_149:
    __break(1u);
LABEL_150:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_151:
    result = sub_1D4922E8C();
    __break(1u);
  }
  else
  {
    sub_1D470C76C((uint64_t)&v152 - v25);
    v83 = sub_1D4922358();
    v84 = sub_1D492291C();
    if (os_log_type_enabled(v83, v84))
    {
      v85 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v85 = 0;
      _os_log_impl(&dword_1D467C000, v83, v84, "Error: Size of landmarkEntities not equal to size of similarityScores", v85, 2u);
      MEMORY[0x1D82635B8](v85, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v21 + 8))(v26, v20);
    sub_1D4730530();
    v86 = (void *)swift_allocError();
    *v87 = 2;
    swift_willThrow();
LABEL_125:
    sub_1D470C76C((uint64_t)v24);
    v147 = sub_1D4922358();
    v148 = sub_1D492291C();
    if (os_log_type_enabled(v147, v148))
    {
      v149 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v149 = 0;
      _os_log_impl(&dword_1D467C000, v147, v148, "Error: Failed to process landmark signal", v149, 2u);
      MEMORY[0x1D82635B8](v149, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
    v150 = sub_1D47C4674(MEMORY[0x1E0DEE9D8]);

    return v150;
  }
  return result;
}

uint64_t sub_1D4803750(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t result;
  _QWORD v39[2];
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;

  v2 = sub_1D4921008();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v39 - v7;
  v9 = type metadata accessor for Com_Apple_Visualintelligence_LocalizedName(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)sub_1D47C4344(MEMORY[0x1E0DEE9D8]);
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    return (uint64_t)v13;
  v15 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  v16 = *(_QWORD *)(v10 + 72);
  v39[1] = a1;
  v40 = v16;
  swift_bridgeObjectRetain();
  v43 = v3;
  v44 = v2;
  v41 = v12;
  v42 = v8;
  while (1)
  {
    v19 = v14;
    sub_1D469C304(v15, (uint64_t)v12, type metadata accessor for Com_Apple_Visualintelligence_LocalizedName);
    swift_bridgeObjectRetain();
    sub_1D4920FE4();
    v20 = v12;
    v21 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v21(v6, v8, v2);
    v22 = *((_QWORD *)v12 + 2);
    v23 = *((_QWORD *)v20 + 3);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v45 = v13;
    v25 = (uint64_t)v6;
    v27 = sub_1D47CA540((uint64_t)v6);
    v28 = v13[2];
    v29 = (v26 & 1) == 0;
    v30 = v28 + v29;
    if (__OFADD__(v28, v29))
      break;
    v31 = v26;
    if (v13[3] >= v30)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1D47AE050();
    }
    else
    {
      sub_1D47A4DC8(v30, isUniquelyReferenced_nonNull_native);
      v32 = sub_1D47CA540(v25);
      if ((v31 & 1) != (v33 & 1))
        goto LABEL_18;
      v27 = v32;
    }
    v13 = v45;
    if ((v31 & 1) != 0)
    {
      v17 = (_QWORD *)(v45[7] + 16 * v27);
      swift_bridgeObjectRelease();
      *v17 = v22;
      v17[1] = v23;
    }
    else
    {
      v45[(v27 >> 6) + 8] |= 1 << v27;
      v21((char *)(v13[6] + *(_QWORD *)(v43 + 72) * v27), (char *)v25, v44);
      v34 = (_QWORD *)(v13[7] + 16 * v27);
      *v34 = v22;
      v34[1] = v23;
      v35 = v13[2];
      v36 = __OFADD__(v35, 1);
      v37 = v35 + 1;
      if (v36)
        goto LABEL_17;
      v13[2] = v37;
    }
    swift_bridgeObjectRelease();
    v3 = v43;
    v2 = v44;
    v18 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v6 = (char *)v25;
    v18(v25, v44);
    v8 = v42;
    v18((uint64_t)v42, v2);
    v12 = v41;
    sub_1D4697DE0((uint64_t)v41, type metadata accessor for Com_Apple_Visualintelligence_LocalizedName);
    v15 += v40;
    v14 = v19 - 1;
    if (v19 == 1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  result = sub_1D4922E8C();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for LandmarkSignals(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1EFEABA60);
}

uint64_t sub_1D4803A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LandmarkSignals(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D4803A88(uint64_t a1)
{
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1D4803ABC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    a1[4] = a2[4];
    a1[5] = a2[5];
    v8 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(0);
    v9 = *(int *)(v8 + 36);
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1D492201C();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = *(int *)(v8 + 40);
    v15 = (_QWORD *)((char *)v4 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = type metadata accessor for Com_Apple_Visualintelligence_LocationPoint(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAAD8);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v15 = *(_OWORD *)v16;
      v21 = v16[3];
      v15[2] = v16[2];
      v15[3] = v21;
      v22 = *(int *)(v17 + 28);
      v23 = (char *)v15 + v22;
      v24 = (char *)v16 + v22;
      swift_bridgeObjectRetain();
      v13(v23, v24, v12);
      v25 = *(int *)(v17 + 32);
      v26 = (char *)v15 + v25;
      v27 = (char *)v16 + v25;
      v28 = sub_1D4921FB0();
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB0F0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v31 = *(int *)(a3 + 24);
    *(_QWORD *)((char *)v4 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
    *((_BYTE *)v4 + v31) = *((_BYTE *)a2 + v31);
  }
  swift_retain();
  return v4;
}

uint64_t sub_1D4803CF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(0);
  v3 = a1 + *(int *)(v2 + 36);
  v4 = sub_1D492201C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = a1 + *(int *)(v2 + 40);
  v7 = type metadata accessor for Com_Apple_Visualintelligence_LocationPoint(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v5(v6 + *(int *)(v7 + 28), v4);
    v8 = v6 + *(int *)(v7 + 32);
    v9 = sub_1D4921FB0();
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  return swift_release();
}

_QWORD *sub_1D4803DFC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  a1[4] = a2[4];
  a1[5] = a2[5];
  v7 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(0);
  v8 = *(int *)(v7 + 36);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1D492201C();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = *(int *)(v7 + 40);
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = type metadata accessor for Com_Apple_Visualintelligence_LocationPoint(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAAD8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v14 = *(_OWORD *)v15;
    v19 = v15[3];
    v14[2] = v15[2];
    v14[3] = v19;
    v20 = *(int *)(v16 + 28);
    v21 = (char *)v14 + v20;
    v22 = (char *)v15 + v20;
    swift_bridgeObjectRetain();
    v12(v21, v22, v11);
    v23 = *(int *)(v16 + 32);
    v24 = (char *)v14 + v23;
    v25 = (char *)v15 + v23;
    v26 = sub_1D4921FB0();
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB0F0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v29 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  *((_BYTE *)a1 + v29) = *((_BYTE *)a2 + v29);
  swift_retain();
  return a1;
}

uint64_t sub_1D4804000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  size_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v42;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(0);
  v6 = *(int *)(v5 + 36);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D492201C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = *(int *)(v5 + 40);
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for Com_Apple_Visualintelligence_LocationPoint(0);
  v42 = *(_QWORD *)(v15 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
  v17 = v16(v13, 1, v15);
  v18 = v16(v14, 1, v15);
  if (!v17)
  {
    if (!v18)
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
      *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v11((uint64_t)&v13[*(int *)(v15 + 28)], (uint64_t)&v14[*(int *)(v15 + 28)], v9);
      v33 = *(int *)(v15 + 32);
      v34 = &v13[v33];
      v35 = &v14[v33];
      v36 = sub_1D4921FB0();
      v37 = *(_QWORD *)(v36 - 8);
      v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
      v39 = v38(v34, 1, v36);
      v40 = v38(v35, 1, v36);
      if (v39)
      {
        if (!v40)
        {
          (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
          goto LABEL_9;
        }
      }
      else
      {
        if (!v40)
        {
          (*(void (**)(char *, char *, uint64_t))(v37 + 24))(v34, v35, v36);
          goto LABEL_9;
        }
        (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v36);
      }
      v29 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB0F0) - 8) + 64);
      v30 = v34;
      v31 = v35;
LABEL_8:
      memcpy(v30, v31, v29);
LABEL_9:
      v32 = a3;
      goto LABEL_15;
    }
    sub_1D4697DE0((uint64_t)v13, type metadata accessor for Com_Apple_Visualintelligence_LocationPoint);
LABEL_7:
    v29 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAAD8) - 8) + 64);
    v30 = v13;
    v31 = v14;
    goto LABEL_8;
  }
  if (v18)
    goto LABEL_7;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
  *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
  v19 = *(int *)(v15 + 28);
  v20 = &v13[v19];
  v21 = &v14[v19];
  v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  swift_bridgeObjectRetain();
  v22(v20, v21, v9);
  v23 = *(int *)(v15 + 32);
  v24 = &v13[v23];
  v25 = &v14[v23];
  v26 = sub_1D4921FB0();
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB0F0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  v32 = a3;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v13, 0, 1, v15);
LABEL_15:
  *(_QWORD *)(a1 + *(int *)(v32 + 20)) = *(_QWORD *)(a2 + *(int *)(v32 + 20));
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + *(int *)(v32 + 24)) = *(_BYTE *)(a2 + *(int *)(v32 + 24));
  return a1;
}

uint64_t sub_1D4804398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(0);
  v8 = *(int *)(v7 + 36);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1D492201C();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v13 = *(int *)(v7 + 40);
  v14 = (_OWORD *)(a1 + v13);
  v15 = (_OWORD *)(a2 + v13);
  v16 = type metadata accessor for Com_Apple_Visualintelligence_LocationPoint(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAAD8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = v15[1];
    *v14 = *v15;
    v14[1] = v19;
    v12((uint64_t)v14 + *(int *)(v16 + 28), (uint64_t)v15 + *(int *)(v16 + 28), v11);
    v20 = *(int *)(v16 + 32);
    v21 = (char *)v14 + v20;
    v22 = (char *)v15 + v20;
    v23 = sub_1D4921FB0();
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB0F0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v26 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v26) = *(_BYTE *)(a2 + v26);
  return a1;
}

_QWORD *sub_1D4804558(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  int v19;
  int v20;
  __int128 v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  size_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(void *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v42;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  v7 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(0);
  v8 = *(int *)(v7 + 36);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1D492201C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(char *, char *, uint64_t))(v12 + 40);
  v13(v9, v10, v11);
  v14 = *(int *)(v7 + 40);
  v15 = (uint64_t)a1 + v14;
  v16 = (_OWORD *)((char *)a2 + v14);
  v17 = type metadata accessor for Com_Apple_Visualintelligence_LocationPoint(0);
  v42 = *(_QWORD *)(v17 - 8);
  v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
  v19 = v18(v15, 1, v17);
  v20 = v18((uint64_t)v16, 1, v17);
  if (!v19)
  {
    if (!v20)
    {
      *(_OWORD *)v15 = *v16;
      v32 = *((_QWORD *)v16 + 3);
      *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
      *(_QWORD *)(v15 + 24) = v32;
      swift_bridgeObjectRelease();
      v13((char *)(v15 + *(int *)(v17 + 28)), (char *)v16 + *(int *)(v17 + 28), v11);
      v33 = *(int *)(v17 + 32);
      v34 = (void *)(v15 + v33);
      v35 = (char *)v16 + v33;
      v36 = sub_1D4921FB0();
      v37 = *(_QWORD *)(v36 - 8);
      v38 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v37 + 48);
      v39 = v38(v34, 1, v36);
      v40 = v38(v35, 1, v36);
      if (v39)
      {
        if (!v40)
        {
          (*(void (**)(void *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
          goto LABEL_9;
        }
      }
      else
      {
        if (!v40)
        {
          (*(void (**)(void *, char *, uint64_t))(v37 + 40))(v34, v35, v36);
          goto LABEL_9;
        }
        (*(void (**)(void *, uint64_t))(v37 + 8))(v34, v36);
      }
      v28 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB0F0) - 8) + 64);
      v29 = v34;
      v30 = v35;
LABEL_8:
      memcpy(v29, v30, v28);
LABEL_9:
      v31 = a3;
      goto LABEL_15;
    }
    sub_1D4697DE0(v15, type metadata accessor for Com_Apple_Visualintelligence_LocationPoint);
LABEL_7:
    v28 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAAD8) - 8) + 64);
    v29 = (void *)v15;
    v30 = (char *)v16;
    goto LABEL_8;
  }
  if (v20)
    goto LABEL_7;
  v21 = v16[1];
  *(_OWORD *)v15 = *v16;
  *(_OWORD *)(v15 + 16) = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v15 + *(int *)(v17 + 28), (char *)v16 + *(int *)(v17 + 28), v11);
  v22 = *(int *)(v17 + 32);
  v23 = (void *)(v15 + v22);
  v24 = (char *)v16 + v22;
  v25 = sub_1D4921FB0();
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB0F0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  v31 = a3;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v15, 0, 1, v17);
LABEL_15:
  *(_QWORD *)((char *)a1 + *(int *)(v31 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v31 + 20));
  swift_release();
  *((_BYTE *)a1 + *(int *)(v31 + 24)) = *((_BYTE *)a2 + *(int *)(v31 + 24));
  return a1;
}

uint64_t sub_1D480487C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D4804888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
}

uint64_t sub_1D4804894()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D48048A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
}

uint64_t sub_1D48048AC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RerankerError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RerankerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D4804A04 + 4 * byte_1D4934065[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D4804A38 + 4 * byte_1D4934060[v4]))();
}

uint64_t sub_1D4804A38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4804A40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4804A48);
  return result;
}

uint64_t sub_1D4804A54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4804A5CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D4804A60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4804A68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RerankerError()
{
  return &type metadata for RerankerError;
}

uint64_t *sub_1D4804A84(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1D492201C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
    *(uint64_t *)((char *)v4 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1D4804B28(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
  swift_release();
  return swift_release();
}

uint64_t sub_1D4804B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1D4804BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D4804C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1D4804CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  swift_release();
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_1D4804D7C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D4804D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v10;
  int v11;

  v7 = a4(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, a2, v7);
  v10 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  v11 = v10 - 1;
  if (v11 < 0)
    v11 = -1;
  return (v11 + 1);
}

uint64_t sub_1D4804E1C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D4804E28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;
  uint64_t v10;

  result = a5(0);
  v10 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t sub_1D4804EAC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1D4804F20()
{
  unint64_t result;

  result = qword_1EFEABA80;
  if (!qword_1EFEABA80)
  {
    result = MEMORY[0x1D82634E0](&unk_1D493419C, &type metadata for RerankerError);
    atomic_store(result, (unint64_t *)&qword_1EFEABA80);
  }
  return result;
}

unint64_t sub_1D4804F64()
{
  unint64_t result;

  result = qword_1EFEABA88;
  if (!qword_1EFEABA88)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4934124, &type metadata for RerankerError);
    atomic_store(result, (unint64_t *)&qword_1EFEABA88);
  }
  return result;
}

unint64_t sub_1D4804FA8(unint64_t result)
{
  if (result >= 6)
    return 6;
  return result;
}

uint64_t sub_1D4804FC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D476D4E0((uint64_t (*)(void))sub_1D481A324, a1);
}

uint64_t sub_1D4804FD0()
{
  _BYTE *v0;

  if (v0[8])
    return 10 * *(_QWORD *)v0;
  else
    return *(_QWORD *)v0;
}

uint64_t sub_1D4804FEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D476D528(a1, sub_1D481A324, a2);
}

void sub_1D4804FF8(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)v1;
  if (*(_BYTE *)(v1 + 8))
    v2 = 10 * *(_QWORD *)v1;
  *a1 = v2;
}

uint64_t sub_1D4805018()
{
  sub_1D480E1D4();
  return sub_1D492207C();
}

BOOL sub_1D4805050(uint64_t a1, uint64_t a2)
{
  return sub_1D4714920(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

void sub_1D480506C()
{
  qword_1EFEC3240 = (uint64_t)&unk_1E97FD780;
}

uint64_t sub_1D4805080@<X0>(_QWORD *a1@<X8>)
{
  return sub_1D47314B4(&qword_1EFEA9F58, &qword_1EFEC3240, a1);
}

BOOL sub_1D48050A0(uint64_t a1, uint64_t a2)
{
  int v2;
  _BOOL4 v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v2 = *(unsigned __int8 *)(a2 + 8);
  v3 = *(_QWORD *)a1 == *(_QWORD *)a2;
  if (*(_BYTE *)(a2 + 8))
    v3 = 0;
  v4 = COERCE_FLOAT(*(_QWORD *)a1) == COERCE_FLOAT(*(_QWORD *)a2);
  if (v2 != 1)
    v4 = 0;
  v5 = v2 == 2 && *(double *)a1 == *(double *)a2;
  if (*(_BYTE *)(a1 + 8) != 1)
    v4 = v5;
  if (*(_BYTE *)(a1 + 8))
    return v4;
  else
    return v3;
}

uint64_t sub_1D480510C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D476D4E0((uint64_t (*)(void))sub_1D481A37C, a1);
}

uint64_t sub_1D4805118()
{
  uint64_t *v0;
  uint64_t result;

  result = *v0;
  if (*((_BYTE *)v0 + 8) == 1)
    return qword_1D49358F8[result];
  return result;
}

uint64_t sub_1D4805138@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D476D528(a1, sub_1D481A37C, a2);
}

void sub_1D4805144(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  if (*((_BYTE *)v1 + 8) == 1)
    v2 = qword_1D49358F8[v2];
  *a1 = v2;
}

uint64_t sub_1D4805168()
{
  sub_1D480E22C();
  return sub_1D492207C();
}

BOOL sub_1D48051A0(uint64_t a1, uint64_t a2)
{
  return sub_1D47148E4(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

void sub_1D48051BC()
{
  qword_1EFEC3248 = (uint64_t)&unk_1E97FD710;
}

uint64_t sub_1D48051D0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1D47314B4(&qword_1EFEA9F60, &qword_1EFEC3248, a1);
}

uint64_t sub_1D48051F0(uint64_t a1)
{
  return sub_1D4806F38(a1, qword_1EFEC3250, (uint64_t)"lowerBound", (uint64_t)"upperBound", 10);
}

unint64_t sub_1D4805210()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1D480522C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D48069B4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D3EB48]);
}

uint64_t sub_1D4805248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D4806A58(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D3ED40], (void (*)(_QWORD))type metadata accessor for Argos_Protos_MLModel_SizeRange);
}

uint64_t sub_1D480526C()
{
  sub_1D4696EA4(&qword_1EFEABBE0, type metadata accessor for Argos_Protos_MLModel_SizeRange, (uint64_t)&unk_1D4935320);
  return sub_1D4922070();
}

uint64_t sub_1D48052BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1EFEA9F68, (uint64_t)qword_1EFEC3250, a1);
}

uint64_t sub_1D48052D8()
{
  sub_1D4696EA4(&qword_1EFEABBA8, type metadata accessor for Argos_Protos_MLModel_SizeRange, (uint64_t)&unk_1D4935358);
  return sub_1D49221D8();
}

uint64_t sub_1D4805318()
{
  sub_1D4696EA4(&qword_1EFEABBA8, type metadata accessor for Argos_Protos_MLModel_SizeRange, (uint64_t)&unk_1D4935358);
  return sub_1D49221F0();
}

uint64_t sub_1D4805368(_QWORD *a1, char *a2)
{
  return sub_1D480E08C(a1, a2, type metadata accessor for Argos_Protos_MLModel_SizeRange) & 1;
}

uint64_t sub_1D4805388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_1D4922328();
  __swift_allocate_value_buffer(v0, qword_1ED9A49F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED9A49F0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D4928FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "width";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1D4922304();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "height";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 21;
  *(_QWORD *)v13 = "enumeratedSizes";
  *((_QWORD *)v13 + 1) = 15;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 31;
  *(_QWORD *)v15 = "imageSizeRange";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 3;
  *(_QWORD *)v16 = "colorSpace";
  *(_QWORD *)(v16 + 8) = 10;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_1D4922310();
}

uint64_t sub_1D480558C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_1D49220AC();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          sub_1D4922124();
          break;
        case 3:
          sub_1D4805684();
          break;
        case 21:
          sub_1D48056F8(v5, a1, a2, a3);
          break;
        case 31:
          sub_1D4805B18(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_1D49220AC();
    }
  }
  return result;
}

uint64_t sub_1D4805684()
{
  type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  sub_1D480E1D4();
  return sub_1D49220D0();
}

uint64_t sub_1D48056F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v39 = a2;
  v40 = a3;
  v41 = a4;
  v42 = a1;
  v4 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v35 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v32 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v32 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABBF0);
  v21 = MEMORY[0x1E0C80A78](v20);
  v36 = (uint64_t)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v32 - v23;
  v37 = v5;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v25((char *)&v32 - v23, 1, 1, v4);
  v33 = v42 + *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0) + 24);
  sub_1D469C5EC(v33, (uint64_t)v12, &qword_1ED98DF68);
  v34 = v14;
  LODWORD(v42) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if ((_DWORD)v42 == 1)
  {
    sub_1D46992EC((uint64_t)v12, &qword_1ED98DF68);
    v26 = v13;
  }
  else
  {
    sub_1D469C630((uint64_t)v12, (uint64_t)v19, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
    sub_1D469C630((uint64_t)v19, (uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
    v26 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1D4697DE0((uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
    }
    else
    {
      sub_1D46992EC((uint64_t)v24, &qword_1EFEABBF0);
      sub_1D469C630((uint64_t)v17, (uint64_t)v9, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
      sub_1D469C630((uint64_t)v9, (uint64_t)v24, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
      v25(v24, 0, 1, v4);
    }
  }
  v27 = v38;
  sub_1D4696EA4(&qword_1EFEABB58, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes, (uint64_t)&unk_1D4934EF8);
  sub_1D492219C();
  if (v27)
    return sub_1D46992EC((uint64_t)v24, &qword_1EFEABBF0);
  v29 = v36;
  sub_1D469C5EC((uint64_t)v24, v36, &qword_1EFEABBF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v29, 1, v4) == 1)
  {
    sub_1D46992EC((uint64_t)v24, &qword_1EFEABBF0);
    return sub_1D46992EC(v29, &qword_1EFEABBF0);
  }
  else
  {
    v30 = v35;
    sub_1D469C630(v29, v35, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
    if ((_DWORD)v42 != 1)
      sub_1D49220B8();
    sub_1D46992EC((uint64_t)v24, &qword_1EFEABBF0);
    v31 = v33;
    sub_1D46992EC(v33, &qword_1ED98DF68);
    sub_1D469C630(v30, v31, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v26);
  }
}

uint64_t sub_1D4805B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v39 = a2;
  v40 = a3;
  v41 = a4;
  v42 = a1;
  v4 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v35 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v32 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v32 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABBF8);
  v21 = MEMORY[0x1E0C80A78](v20);
  v36 = (uint64_t)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v32 - v23;
  v37 = v5;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v25((char *)&v32 - v23, 1, 1, v4);
  v33 = v42 + *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0) + 24);
  sub_1D469C5EC(v33, (uint64_t)v12, &qword_1ED98DF68);
  v34 = v14;
  LODWORD(v42) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if ((_DWORD)v42 == 1)
  {
    sub_1D46992EC((uint64_t)v12, &qword_1ED98DF68);
    v26 = v13;
  }
  else
  {
    sub_1D469C630((uint64_t)v12, (uint64_t)v19, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
    sub_1D469C630((uint64_t)v19, (uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
    v26 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1D46992EC((uint64_t)v24, &qword_1EFEABBF8);
      sub_1D469C630((uint64_t)v17, (uint64_t)v9, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
      sub_1D469C630((uint64_t)v9, (uint64_t)v24, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
      v25(v24, 0, 1, v4);
    }
    else
    {
      sub_1D4697DE0((uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
    }
  }
  v27 = v38;
  sub_1D4696EA4(&qword_1EFEABB38, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange, (uint64_t)&unk_1D4934D90);
  sub_1D492219C();
  if (v27)
    return sub_1D46992EC((uint64_t)v24, &qword_1EFEABBF8);
  v29 = v36;
  sub_1D469C5EC((uint64_t)v24, v36, &qword_1EFEABBF8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v29, 1, v4) == 1)
  {
    sub_1D46992EC((uint64_t)v24, &qword_1EFEABBF8);
    return sub_1D46992EC(v29, &qword_1EFEABBF8);
  }
  else
  {
    v30 = v35;
    sub_1D469C630(v29, v35, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
    if ((_DWORD)v42 != 1)
      sub_1D49220B8();
    sub_1D46992EC((uint64_t)v24, &qword_1EFEABBF8);
    v31 = v33;
    sub_1D46992EC(v33, &qword_1ED98DF68);
    sub_1D469C630(v30, v31, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v26);
  }
}

uint64_t sub_1D4805F38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*v0 || (result = sub_1D49222A4(), !v1))
  {
    if (!v0[1] || (result = sub_1D49222A4(), !v1))
    {
      v6 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      v7 = (char *)v0 + *(int *)(v6 + 28);
      v8 = *(_QWORD *)v7;
      LOBYTE(v7) = v7[8];
      v10 = v8;
      v11 = (char)v7;
      sub_1D480E1D4();
      result = sub_1D4922274();
      if (!v1)
      {
        sub_1D469C5EC((uint64_t)v0 + *(int *)(v6 + 24), (uint64_t)v4, &qword_1ED98DF68);
        v9 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v4, 1, v9) != 1)
        {
          if (swift_getEnumCaseMultiPayload() == 1)
            sub_1D48062D0((uint64_t)v0);
          else
            sub_1D4806124((uint64_t)v0);
          sub_1D4697DE0((uint64_t)v4, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
        }
        return sub_1D4922004();
      }
    }
  }
  return result;
}

uint64_t sub_1D4806124(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  sub_1D469C5EC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_1ED98DF68);
  v9 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    sub_1D46992EC((uint64_t)v4, &qword_1ED98DF68);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1D469C630((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
    sub_1D4696EA4(&qword_1EFEABB58, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes, (uint64_t)&unk_1D4934EF8);
    sub_1D49222F8();
    return sub_1D4697DE0((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
  }
  result = sub_1D4697DE0((uint64_t)v4, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
  __break(1u);
  return result;
}

uint64_t sub_1D48062D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  sub_1D469C5EC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_1ED98DF68);
  v9 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    sub_1D46992EC((uint64_t)v4, &qword_1ED98DF68);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1D469C630((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
    sub_1D4696EA4(&qword_1EFEABB38, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange, (uint64_t)&unk_1D4934D90);
    sub_1D49222F8();
    return sub_1D4697DE0((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
  }
  result = sub_1D4697DE0((uint64_t)v4, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
  __break(1u);
  return result;
}

uint64_t sub_1D4806480@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  char *v6;

  *a2 = 0;
  a2[1] = 0;
  v4 = (char *)a2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (char *)a2 + *(int *)(a1 + 28);
  *(_QWORD *)v6 = 0;
  v6[8] = 1;
  return sub_1D4922010();
}

unint64_t sub_1D48064F4()
{
  return 0xD000000000000025;
}

uint64_t sub_1D4806510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D480558C(a1, a2, a3);
}

uint64_t sub_1D4806524()
{
  return sub_1D4805F38();
}

uint64_t sub_1D4806538()
{
  sub_1D4696EA4(&qword_1EFEABBE8, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType, (uint64_t)&unk_1D49351B8);
  return sub_1D4922070();
}

uint64_t sub_1D4806588@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1ED98DF50, (uint64_t)qword_1ED9A49F0, a1);
}

uint64_t sub_1D48065A4()
{
  sub_1D4696EA4(&qword_1ED98DF78, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType, (uint64_t)&unk_1D49351F0);
  return sub_1D49221D8();
}

uint64_t sub_1D48065E4()
{
  sub_1D4696EA4(&qword_1ED98DF78, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType, (uint64_t)&unk_1D49351F0);
  return sub_1D49221F0();
}

uint64_t sub_1D4806638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_1D4922328();
  __swift_allocate_value_buffer(v0, qword_1ED9A4B80);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED9A4B80);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D4927560;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "INVALID_COLOR_SPACE";
  *(_QWORD *)(v7 + 8) = 19;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1D4922304();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 10;
  *(_QWORD *)v11 = "GRAYSCALE";
  *(_QWORD *)(v11 + 8) = 9;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 20;
  *(_QWORD *)v13 = "RGB";
  *((_QWORD *)v13 + 1) = 3;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 30;
  *(_QWORD *)v15 = "BGR";
  *((_QWORD *)v15 + 1) = 3;
  v15[16] = 2;
  v10();
  return sub_1D4922310();
}

uint64_t sub_1D48067FC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1ED98DF28, (uint64_t)qword_1ED9A4B80, a1);
}

uint64_t sub_1D4806818(uint64_t a1)
{
  return sub_1D4806EB0(a1, 0x69536567616D492ELL, 0xEA0000000000657ALL, qword_1EFEC3268, &qword_1EFEC3268[1]);
}

uint64_t sub_1D4806840(uint64_t a1)
{
  return sub_1D4806860(a1, qword_1EFEC3278, (uint64_t)"width", 2, (uint64_t)"height");
}

uint64_t sub_1D4806860(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void);
  char *v18;

  v7 = sub_1D4922328();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1D4927B00;
  v13 = (_QWORD *)(v12 + v11);
  v14 = v12 + v11 + *(int *)(v8 + 48);
  *v13 = 1;
  *(_QWORD *)v14 = a3;
  *(_QWORD *)(v14 + 8) = 5;
  *(_BYTE *)(v14 + 16) = 2;
  v15 = *MEMORY[0x1E0D3EF08];
  v16 = sub_1D4922304();
  v17 = *(void (**)(void))(*(_QWORD *)(v16 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v17)(v14, v15, v16);
  v18 = (char *)v13 + v10 + *(int *)(v8 + 48);
  *(_QWORD *)((char *)v13 + v10) = a4;
  *(_QWORD *)v18 = a5;
  *((_QWORD *)v18 + 1) = 6;
  v18[16] = 2;
  v17();
  return sub_1D4922310();
}

uint64_t sub_1D48069B4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  result = sub_1D49220AC();
  if (!v5)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        a4(v4 + 8, a2, a3);
      }
      else if (result == 1)
      {
        sub_1D4922184();
      }
      result = sub_1D49220AC();
    }
  }
  return result;
}

uint64_t sub_1D4806A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(_QWORD))
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v12;

  if (!*v5 || (result = sub_1D49222E0(), !v6))
  {
    v12 = v5[1];
    if (!v12 || (result = a4(v12, 2, a2, a3), !v6))
    {
      a5(0);
      return sub_1D4922004();
    }
  }
  return result;
}

uint64_t sub_1D4806B20(uint64_t a1, uint64_t a2)
{
  return sub_1D4701D64(a1, a2, &qword_1EFEA9F70, qword_1EFEC3268);
}

uint64_t sub_1D4806B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D48069B4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D3EBB0]);
}

uint64_t sub_1D4806B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D4806A58(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D3ED78], (void (*)(_QWORD))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize);
}

uint64_t sub_1D4806B80()
{
  sub_1D4696EA4(&qword_1EFEABC18, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize, (uint64_t)&unk_1D4935028);
  return sub_1D4922070();
}

uint64_t sub_1D4806BD0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1EFEA9F78, (uint64_t)qword_1EFEC3278, a1);
}

uint64_t sub_1D4806BEC()
{
  sub_1D4696EA4(&qword_1EFEABB78, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize, (uint64_t)&unk_1D4935060);
  return sub_1D49221D8();
}

uint64_t sub_1D4806C2C()
{
  sub_1D4696EA4(&qword_1EFEABB78, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize, (uint64_t)&unk_1D4935060);
  return sub_1D49221F0();
}

uint64_t sub_1D4806C7C(_QWORD *a1, char *a2)
{
  return sub_1D480E08C(a1, a2, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize) & 1;
}

uint64_t sub_1D4806C9C(uint64_t a1)
{
  return sub_1D4806EB0(a1, 0xD000000000000015, 0x80000001D4945AA0, qword_1EFEC3290, &qword_1EFEC3290[1]);
}

uint64_t sub_1D4806CC4(uint64_t a1)
{
  return sub_1D4809524(a1, qword_1EFEC32A0, (uint64_t)"sizes", 5);
}

uint64_t sub_1D4806CDC(uint64_t a1, uint64_t a2)
{
  return sub_1D4701D64(a1, a2, &qword_1EFEA9F80, qword_1EFEC3290);
}

uint64_t sub_1D4806CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D4745A90(a1, a2, a3, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize, &qword_1EFEABB78, (uint64_t)&unk_1D4935060);
}

uint64_t sub_1D4806D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D4745B58(a1, a2, a3, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize, &qword_1EFEABB78, (uint64_t)&unk_1D4935060, (void (*)(_QWORD))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
}

uint64_t sub_1D4806D5C()
{
  sub_1D4696EA4(&qword_1EFEABC20, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes, (uint64_t)&unk_1D4934EC0);
  return sub_1D4922070();
}

uint64_t sub_1D4806DAC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1EFEA9F88, (uint64_t)qword_1EFEC32A0, a1);
}

uint64_t sub_1D4806DC8()
{
  sub_1D4696EA4(&qword_1EFEABB58, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes, (uint64_t)&unk_1D4934EF8);
  return sub_1D49221D8();
}

uint64_t sub_1D4806E08()
{
  sub_1D4696EA4(&qword_1EFEABB58, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes, (uint64_t)&unk_1D4934EF8);
  return sub_1D49221F0();
}

uint64_t sub_1D4806E58(_QWORD *a1, char *a2)
{
  return sub_1D4702860(a1, a2, sub_1D48A2724, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes) & 1;
}

uint64_t sub_1D4806E80(uint64_t a1)
{
  return sub_1D4806EB0(a1, 0x69536567616D492ELL, 0xEF65676E6152657ALL, qword_1EFEC32B8, &qword_1EFEC32B8[1]);
}

uint64_t sub_1D4806EB0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _QWORD *a5)
{
  uint64_t result;

  result = sub_1D492270C();
  *a4 = 0xD000000000000025;
  *a5 = 0x80000001D4945A10;
  return result;
}

uint64_t sub_1D4806F18(uint64_t a1)
{
  return sub_1D4806F38(a1, qword_1EFEC32C8, (uint64_t)"widthRange", (uint64_t)"heightRange", 11);
}

uint64_t sub_1D4806F38(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void);
  char *v18;

  v7 = sub_1D4922328();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1D4927B00;
  v13 = (_QWORD *)(v12 + v11);
  v14 = v12 + v11 + *(int *)(v8 + 48);
  *v13 = 1;
  *(_QWORD *)v14 = a3;
  *(_QWORD *)(v14 + 8) = 10;
  *(_BYTE *)(v14 + 16) = 2;
  v15 = *MEMORY[0x1E0D3EF08];
  v16 = sub_1D4922304();
  v17 = *(void (**)(void))(*(_QWORD *)(v16 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v17)(v14, v15, v16);
  v18 = (char *)v13 + v10 + *(int *)(v8 + 48);
  *(_QWORD *)((char *)v13 + v10) = 2;
  *(_QWORD *)v18 = a4;
  *((_QWORD *)v18 + 1) = a5;
  v18[16] = 2;
  v17();
  return sub_1D4922310();
}

uint64_t sub_1D4807088()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_1D49220AC();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 2)
    {
      sub_1D48071AC();
    }
    else if (result == 1)
    {
      sub_1D4807118();
    }
  }
  return result;
}

uint64_t sub_1D4807118()
{
  type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
  type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
  sub_1D4696EA4(&qword_1EFEABBA8, type metadata accessor for Argos_Protos_MLModel_SizeRange, (uint64_t)&unk_1D4935358);
  return sub_1D492219C();
}

uint64_t sub_1D48071AC()
{
  type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
  type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
  sub_1D4696EA4(&qword_1EFEABBA8, type metadata accessor for Argos_Protos_MLModel_SizeRange, (uint64_t)&unk_1D4935358);
  return sub_1D492219C();
}

uint64_t sub_1D4807240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a3;
  v28 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v26 - v10;
  v12 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v26[0] = (uint64_t)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v26 - v16;
  v18 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
  v19 = *(int *)(v18 + 20);
  v27 = v3;
  sub_1D469C5EC(v3 + v19, (uint64_t)v11, &qword_1EFEAA428);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v21 = v20(v11, 1, v12);
  v26[1] = a1;
  if (v21 == 1)
  {
    sub_1D46992EC((uint64_t)v11, &qword_1EFEAA428);
    v22 = v27;
  }
  else
  {
    sub_1D469C630((uint64_t)v11, (uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_SizeRange);
    sub_1D4696EA4(&qword_1EFEABBA8, type metadata accessor for Argos_Protos_MLModel_SizeRange, (uint64_t)&unk_1D4935358);
    sub_1D49222F8();
    result = sub_1D4697DE0((uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_SizeRange);
    v22 = v27;
    if (v4)
      return result;
  }
  sub_1D469C5EC(v22 + *(int *)(v18 + 24), (uint64_t)v9, &qword_1EFEAA428);
  if (v20(v9, 1, v12) == 1)
  {
    sub_1D46992EC((uint64_t)v9, &qword_1EFEAA428);
  }
  else
  {
    v24 = (uint64_t)v9;
    v25 = v26[0];
    sub_1D469C630(v24, v26[0], type metadata accessor for Argos_Protos_MLModel_SizeRange);
    sub_1D4696EA4(&qword_1EFEABBA8, type metadata accessor for Argos_Protos_MLModel_SizeRange, (uint64_t)&unk_1D4935358);
    sub_1D49222F8();
    result = sub_1D4697DE0(v25, type metadata accessor for Argos_Protos_MLModel_SizeRange);
    if (v4)
      return result;
  }
  return sub_1D4922004();
}

uint64_t sub_1D48074E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  sub_1D4922010();
  v4 = a2 + *(int *)(a1 + 20);
  v5 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v7(v4, 1, 1, v5);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(a2 + *(int *)(a1 + 24), 1, 1, v5);
}

uint64_t sub_1D480756C(uint64_t a1, uint64_t a2)
{
  return sub_1D4701D64(a1, a2, &qword_1EFEA9F90, qword_1EFEC32B8);
}

uint64_t sub_1D480758C()
{
  return sub_1D4807088();
}

uint64_t sub_1D48075A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D4807240(a1, a2, a3);
}

uint64_t sub_1D48075B4()
{
  sub_1D4696EA4(&qword_1EFEABC28, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange, (uint64_t)&unk_1D4934D58);
  return sub_1D4922070();
}

uint64_t sub_1D4807604@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1EFEA9F98, (uint64_t)qword_1EFEC32C8, a1);
}

uint64_t sub_1D4807620()
{
  sub_1D4696EA4(&qword_1EFEABB38, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange, (uint64_t)&unk_1D4934D90);
  return sub_1D49221D8();
}

uint64_t sub_1D4807660()
{
  sub_1D4696EA4(&qword_1EFEABB38, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange, (uint64_t)&unk_1D4934D90);
  return sub_1D49221F0();
}

uint64_t sub_1D48076B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_1D4922328();
  __swift_allocate_value_buffer(v0, qword_1ED9A4B68);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED9A4B68);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D4934210;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "shape";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1D4922304();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "dataType";
  *(_QWORD *)(v11 + 8) = 8;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 21;
  *(_QWORD *)v13 = "enumeratedShapes";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 31;
  *(_QWORD *)v15 = "shapeRange";
  *((_QWORD *)v15 + 1) = 10;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 41;
  *(_QWORD *)v17 = "intDefaultValue";
  *((_QWORD *)v17 + 1) = 15;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 51;
  *(_QWORD *)v19 = "floatDefaultValue";
  *((_QWORD *)v19 + 1) = 17;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 61;
  *(_QWORD *)v21 = "doubleDefaultValue";
  *((_QWORD *)v21 + 1) = 18;
  v21[16] = 2;
  v10();
  return sub_1D4922310();
}

uint64_t sub_1D4807920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t (*v12)(unsigned int *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(unsigned int *, uint64_t, uint64_t);
  char v19;

  v5 = v3;
  result = sub_1D49220AC();
  v11 = v4;
  if (!v4)
  {
    v12 = (uint64_t (*)(unsigned int *, uint64_t, uint64_t))MEMORY[0x1E0D3EB20];
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_1D49220F4();
          break;
        case 2:
          sub_1D480E22C();
          sub_1D49220D0();
          break;
        case 21:
          sub_1D4807ADC(v5, a1, a2, a3);
          break;
        case 31:
          sub_1D4807EFC(v5, a1, a2, a3);
          break;
        case 41:
          v13 = a1;
          v14 = v5;
          v15 = a2;
          v16 = a3;
          v17 = v11;
          v18 = (uint64_t (*)(unsigned int *, uint64_t, uint64_t))MEMORY[0x1E0D3EB30];
          v19 = 0;
          goto LABEL_5;
        case 51:
          v13 = a1;
          v14 = v5;
          v15 = a2;
          v16 = a3;
          v17 = v11;
          v18 = v12;
          v19 = 1;
LABEL_5:
          sub_1D480831C(v13, v14, v15, v16, v18, v19);
          v11 = v17;
          break;
        case 61:
          sub_1D48083D0();
          break;
        default:
          break;
      }
      result = sub_1D49220AC();
    }
  }
  return result;
}

uint64_t sub_1D4807ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v39 = a2;
  v40 = a3;
  v41 = a4;
  v42 = a1;
  v4 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v35 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v32 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DEC8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v32 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABC38);
  v21 = MEMORY[0x1E0C80A78](v20);
  v36 = (uint64_t)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v32 - v23;
  v37 = v5;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v25((char *)&v32 - v23, 1, 1, v4);
  v33 = v42 + *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0) + 24);
  sub_1D469C5EC(v33, (uint64_t)v12, &qword_1ED98DEC8);
  v34 = v14;
  LODWORD(v42) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if ((_DWORD)v42 == 1)
  {
    sub_1D46992EC((uint64_t)v12, &qword_1ED98DEC8);
    v26 = v13;
  }
  else
  {
    sub_1D469C630((uint64_t)v12, (uint64_t)v19, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    sub_1D469C630((uint64_t)v19, (uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    v26 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1D4697DE0((uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    }
    else
    {
      sub_1D46992EC((uint64_t)v24, &qword_1EFEABC38);
      sub_1D469C630((uint64_t)v17, (uint64_t)v9, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
      sub_1D469C630((uint64_t)v9, (uint64_t)v24, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
      v25(v24, 0, 1, v4);
    }
  }
  v27 = v38;
  sub_1D4696EA4(&qword_1EFEABAE8, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes, (uint64_t)&unk_1D4934930);
  sub_1D492219C();
  if (v27)
    return sub_1D46992EC((uint64_t)v24, &qword_1EFEABC38);
  v29 = v36;
  sub_1D469C5EC((uint64_t)v24, v36, &qword_1EFEABC38);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v29, 1, v4) == 1)
  {
    sub_1D46992EC((uint64_t)v24, &qword_1EFEABC38);
    return sub_1D46992EC(v29, &qword_1EFEABC38);
  }
  else
  {
    v30 = v35;
    sub_1D469C630(v29, v35, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
    if ((_DWORD)v42 != 1)
      sub_1D49220B8();
    sub_1D46992EC((uint64_t)v24, &qword_1EFEABC38);
    v31 = v33;
    sub_1D46992EC(v33, &qword_1ED98DEC8);
    sub_1D469C630(v30, v31, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v26);
  }
}

uint64_t sub_1D4807EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v39 = a2;
  v40 = a3;
  v41 = a4;
  v42 = a1;
  v4 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v35 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v32 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DEC8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v32 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABC40);
  v21 = MEMORY[0x1E0C80A78](v20);
  v36 = (uint64_t)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v32 - v23;
  v37 = v5;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v25((char *)&v32 - v23, 1, 1, v4);
  v33 = v42 + *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0) + 24);
  sub_1D469C5EC(v33, (uint64_t)v12, &qword_1ED98DEC8);
  v34 = v14;
  LODWORD(v42) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if ((_DWORD)v42 == 1)
  {
    sub_1D46992EC((uint64_t)v12, &qword_1ED98DEC8);
    v26 = v13;
  }
  else
  {
    sub_1D469C630((uint64_t)v12, (uint64_t)v19, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    sub_1D469C630((uint64_t)v19, (uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    v26 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1D46992EC((uint64_t)v24, &qword_1EFEABC40);
      sub_1D469C630((uint64_t)v17, (uint64_t)v9, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
      sub_1D469C630((uint64_t)v9, (uint64_t)v24, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
      v25(v24, 0, 1, v4);
    }
    else
    {
      sub_1D4697DE0((uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    }
  }
  v27 = v38;
  sub_1D4696EA4(&qword_1EFEABAC8, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange, (uint64_t)&unk_1D49347C8);
  sub_1D492219C();
  if (v27)
    return sub_1D46992EC((uint64_t)v24, &qword_1EFEABC40);
  v29 = v36;
  sub_1D469C5EC((uint64_t)v24, v36, &qword_1EFEABC40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v29, 1, v4) == 1)
  {
    sub_1D46992EC((uint64_t)v24, &qword_1EFEABC40);
    return sub_1D46992EC(v29, &qword_1EFEABC40);
  }
  else
  {
    v30 = v35;
    sub_1D469C630(v29, v35, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
    if ((_DWORD)v42 != 1)
      sub_1D49220B8();
    sub_1D46992EC((uint64_t)v24, &qword_1EFEABC40);
    v31 = v33;
    sub_1D46992EC(v33, &qword_1ED98DEC8);
    sub_1D469C630(v30, v31, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v26);
  }
}

uint64_t sub_1D480831C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(unsigned int *, uint64_t, uint64_t), char a6)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  char v13;

  v12 = 0;
  v13 = 1;
  result = a5(&v12, a3, a4);
  if (!v6 && (v13 & 1) == 0)
  {
    v10 = v12;
    result = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
    v11 = a2 + *(int *)(result + 28);
    if (*(unsigned __int8 *)(v11 + 8) != 255)
      result = sub_1D49220B8();
    *(_QWORD *)v11 = v10;
    *(_BYTE *)(v11 + 8) = a6;
  }
  return result;
}

uint64_t sub_1D48083D0()
{
  return sub_1D4922154();
}

uint64_t sub_1D4808484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DEC8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(*(_QWORD *)v0 + 16) || (result = sub_1D4922244(), !v1))
  {
    v6 = *(_BYTE *)(v0 + 16);
    v9 = *(_QWORD *)(v0 + 8);
    v10 = v6;
    sub_1D480E22C();
    result = sub_1D4922274();
    if (!v1)
    {
      v7 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      sub_1D469C5EC(v0 + *(int *)(v7 + 24), (uint64_t)v4, &qword_1ED98DEC8);
      v8 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) != 1)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
          sub_1D480886C(v0);
        else
          sub_1D48086C0(v0);
        sub_1D4697DE0((uint64_t)v4, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
      }
      if (*(unsigned __int8 *)(v0 + *(int *)(v7 + 28) + 8) > 1u)
      {
        if (*(_BYTE *)(v0 + *(int *)(v7 + 28) + 8) == 2)
          sub_1D4808AFC(v0);
      }
      else if (*(_BYTE *)(v0 + *(int *)(v7 + 28) + 8))
      {
        sub_1D4808A88(v0);
      }
      else
      {
        sub_1D4808A18(v0);
      }
      return sub_1D4922004();
    }
  }
  return result;
}

uint64_t sub_1D48086C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DEC8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
  sub_1D469C5EC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_1ED98DEC8);
  v9 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    sub_1D46992EC((uint64_t)v4, &qword_1ED98DEC8);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1D469C630((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
    sub_1D4696EA4(&qword_1EFEABAE8, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes, (uint64_t)&unk_1D4934930);
    sub_1D49222F8();
    return sub_1D4697DE0((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
  }
  result = sub_1D4697DE0((uint64_t)v4, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
  __break(1u);
  return result;
}

uint64_t sub_1D480886C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DEC8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
  sub_1D469C5EC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_1ED98DEC8);
  v9 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    sub_1D46992EC((uint64_t)v4, &qword_1ED98DEC8);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1D469C630((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
    sub_1D4696EA4(&qword_1EFEABAC8, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange, (uint64_t)&unk_1D49347C8);
    sub_1D49222F8();
    return sub_1D4697DE0((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
  }
  result = sub_1D4697DE0((uint64_t)v4, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
  __break(1u);
  return result;
}

uint64_t sub_1D4808A18(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
  if (!*(_BYTE *)(a1 + *(int *)(result + 28) + 8))
    return sub_1D4922298();
  __break(1u);
  return result;
}

uint64_t sub_1D4808A88(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 28) + 8) == 1)
    return sub_1D492228C();
  __break(1u);
  return result;
}

uint64_t sub_1D4808AFC(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 28) + 8) == 2)
    return sub_1D49222BC();
  __break(1u);
  return result;
}

uint64_t sub_1D4808B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v4 = a2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = a2 + *(int *)(a1 + 28);
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = -1;
  return sub_1D4922010();
}

unint64_t sub_1D4808BF4()
{
  return 0xD000000000000025;
}

uint64_t sub_1D4808C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D4807920(a1, a2, a3);
}

uint64_t sub_1D4808C24()
{
  return sub_1D4808484();
}

uint64_t sub_1D4808C38()
{
  sub_1D4696EA4(&qword_1EFEABC30, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType, (uint64_t)&unk_1D4934BF0);
  return sub_1D4922070();
}

uint64_t sub_1D4808C88@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1ED98DEB0, (uint64_t)qword_1ED9A4B68, a1);
}

uint64_t sub_1D4808CA4()
{
  sub_1D4696EA4(&qword_1ED98DED8, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType, (uint64_t)&unk_1D4934C28);
  return sub_1D49221D8();
}

uint64_t sub_1D4808CE4()
{
  sub_1D4696EA4(&qword_1ED98DED8, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType, (uint64_t)&unk_1D4934C28);
  return sub_1D49221F0();
}

uint64_t sub_1D4808D38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v0 = sub_1D4922328();
  __swift_allocate_value_buffer(v0, qword_1ED9A4B50);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED9A4B50);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1D4928FE0;
  v5 = v17 + v4;
  v6 = v17 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v17 + v4) = 0;
  *(_QWORD *)v6 = "INVALID_ARRAY_DATA_TYPE";
  *(_QWORD *)(v6 + 8) = 23;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x1E0D3EF08];
  v8 = sub_1D4922304();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v5 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 65552;
  *(_QWORD *)v10 = "FLOAT16";
  *(_QWORD *)(v10 + 8) = 7;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v5 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 65568;
  *(_QWORD *)v12 = "FLOAT32";
  *((_QWORD *)v12 + 1) = 7;
  v12[16] = 2;
  *((_QWORD *)v12 + 3) = &unk_1E97FD6D8;
  v9();
  v13 = (_QWORD *)(v5 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 65600;
  *(_QWORD *)v14 = "FLOAT64";
  *((_QWORD *)v14 + 1) = 7;
  v14[16] = 2;
  *((_QWORD *)v14 + 3) = &unk_1E97FD6A0;
  v9();
  v15 = v5 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 4 * v3) = 131104;
  *(_QWORD *)v15 = "INT32";
  *(_QWORD *)(v15 + 8) = 5;
  *(_BYTE *)(v15 + 16) = 2;
  v9();
  return sub_1D4922310();
}

uint64_t sub_1D4808F6C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1ED98DE68, (uint64_t)qword_1ED9A4B50, a1);
}

uint64_t sub_1D4808F88()
{
  uint64_t result;

  result = sub_1D492270C();
  qword_1EFEC32E0 = 0xD000000000000025;
  *(_QWORD *)algn_1EFEC32E8 = 0x80000001D4945AE0;
  return result;
}

uint64_t sub_1D4808FEC(uint64_t a1)
{
  return sub_1D4809524(a1, qword_1EFEC32F0, (uint64_t)"shape", 5);
}

uint64_t sub_1D4809004()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_1D49220AC();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 1)
      sub_1D49220F4();
  }
  return result;
}

uint64_t sub_1D4809070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16) || (result = sub_1D4922244(), !v1))
  {
    type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape(0);
    return sub_1D4922004();
  }
  return result;
}

uint64_t sub_1D4809104(uint64_t a1, uint64_t a2)
{
  return sub_1D4701D64(a1, a2, &qword_1EFEA9FA0, &qword_1EFEC32E0);
}

uint64_t sub_1D4809124()
{
  return sub_1D4809004();
}

uint64_t sub_1D4809138()
{
  return sub_1D4809070();
}

uint64_t sub_1D480914C()
{
  sub_1D4696EA4(&qword_1EFEABC58, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape, (uint64_t)&unk_1D4934A60);
  return sub_1D4922070();
}

uint64_t sub_1D480919C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1EFEA9FA8, (uint64_t)qword_1EFEC32F0, a1);
}

uint64_t sub_1D48091B8()
{
  sub_1D4696EA4(&qword_1EFEABB08, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape, (uint64_t)&unk_1D4934A98);
  return sub_1D49221D8();
}

uint64_t sub_1D48091F8()
{
  sub_1D4696EA4(&qword_1EFEABB08, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape, (uint64_t)&unk_1D4934A98);
  return sub_1D49221F0();
}

uint64_t sub_1D4809248(_QWORD *a1, char *a2)
{
  return sub_1D4702860(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_1D489EF8C, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape) & 1;
}

uint64_t sub_1D4809270()
{
  uint64_t result;

  result = sub_1D492270C();
  qword_1EFEC3308 = 0xD000000000000025;
  unk_1EFEC3310 = 0x80000001D4945AE0;
  return result;
}

uint64_t sub_1D48092E0(uint64_t a1)
{
  return sub_1D4809524(a1, qword_1EFEC3318, (uint64_t)"shapes", 6);
}

uint64_t sub_1D48092F8(uint64_t a1, uint64_t a2)
{
  return sub_1D4701D64(a1, a2, &qword_1EFEA9FB0, &qword_1EFEC3308);
}

uint64_t sub_1D4809318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D4745A90(a1, a2, a3, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape, &qword_1EFEABB08, (uint64_t)&unk_1D4934A98);
}

uint64_t sub_1D4809344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D4745B58(a1, a2, a3, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape, &qword_1EFEABB08, (uint64_t)&unk_1D4934A98, (void (*)(_QWORD))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
}

uint64_t sub_1D4809378()
{
  sub_1D4696EA4(&qword_1EFEABC60, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes, (uint64_t)&unk_1D49348F8);
  return sub_1D4922070();
}

uint64_t sub_1D48093C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1EFEA9FB8, (uint64_t)qword_1EFEC3318, a1);
}

uint64_t sub_1D48093E4()
{
  sub_1D4696EA4(&qword_1EFEABAE8, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes, (uint64_t)&unk_1D4934930);
  return sub_1D49221D8();
}

uint64_t sub_1D4809424()
{
  sub_1D4696EA4(&qword_1EFEABAE8, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes, (uint64_t)&unk_1D4934930);
  return sub_1D49221F0();
}

uint64_t sub_1D4809474(_QWORD *a1, char *a2)
{
  return sub_1D4702860(a1, a2, sub_1D48A206C, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes) & 1;
}

uint64_t sub_1D480949C()
{
  uint64_t result;

  result = sub_1D492270C();
  qword_1EFEC3330 = 0xD000000000000025;
  *(_QWORD *)algn_1EFEC3338 = 0x80000001D4945AE0;
  return result;
}

uint64_t sub_1D480950C(uint64_t a1)
{
  return sub_1D4809524(a1, qword_1EFEC3340, (uint64_t)"sizeRanges", 10);
}

uint64_t sub_1D4809524(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = sub_1D4922328();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1D49273C0;
  v12 = v11 + v10 + *(int *)(v8 + 48);
  *(_QWORD *)(v11 + v10) = 1;
  *(_QWORD *)v12 = a3;
  *(_QWORD *)(v12 + 8) = a4;
  *(_BYTE *)(v12 + 16) = 2;
  v13 = *MEMORY[0x1E0D3EF08];
  v14 = sub_1D4922304();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  return sub_1D4922310();
}

uint64_t sub_1D4809628(uint64_t a1, uint64_t a2)
{
  return sub_1D4701D64(a1, a2, &qword_1EFEA9FC0, &qword_1EFEC3330);
}

uint64_t sub_1D4809648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D4745A90(a1, a2, a3, type metadata accessor for Argos_Protos_MLModel_SizeRange, &qword_1EFEABBA8, (uint64_t)&unk_1D4935358);
}

uint64_t sub_1D4809674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D4745B58(a1, a2, a3, type metadata accessor for Argos_Protos_MLModel_SizeRange, &qword_1EFEABBA8, (uint64_t)&unk_1D4935358, (void (*)(_QWORD))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
}

uint64_t sub_1D48096A8()
{
  sub_1D4696EA4(&qword_1EFEABC68, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange, (uint64_t)&unk_1D4934790);
  return sub_1D4922070();
}

uint64_t sub_1D48096F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(qword_1EFEA9FC8, (uint64_t)qword_1EFEC3340, a1);
}

uint64_t sub_1D4809714()
{
  sub_1D4696EA4(&qword_1EFEABAC8, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange, (uint64_t)&unk_1D49347C8);
  return sub_1D49221D8();
}

uint64_t sub_1D4809754()
{
  sub_1D4696EA4(&qword_1EFEABAC8, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange, (uint64_t)&unk_1D49347C8);
  return sub_1D49221F0();
}

uint64_t sub_1D48097A4(_QWORD *a1, char *a2)
{
  return sub_1D4702860(a1, a2, sub_1D48A2294, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange) & 1;
}

uint64_t sub_1D48097CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_1D4922328();
  __swift_allocate_value_buffer(v0, qword_1ED9A4AC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED9A4AC0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D4927210;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 4;
  *(_QWORD *)v7 = "imageType";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1D4922304();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 5;
  *(_QWORD *)v11 = "multiArrayType";
  *((_QWORD *)v11 + 1) = 14;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 1000;
  *(_QWORD *)v12 = "isOptional";
  *(_QWORD *)(v12 + 8) = 10;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_1D4922310();
}

uint64_t sub_1D4809964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t result;
  char v11;

  v5 = v3;
  while (1)
  {
    result = sub_1D49220AC();
    v9 = v4;
    if (v4 || (v11 & 1) != 0)
      return result;
    switch(result)
    {
      case 1000:
        type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
        sub_1D49220C4();
LABEL_3:
        v9 = 0;
        break;
      case 5:
        sub_1D4809E84(v5, a1, a2, a3);
        goto LABEL_3;
      case 4:
        sub_1D4809A40(v5, a1, a2, a3);
        goto LABEL_3;
    }
    v4 = v9;
  }
}

uint64_t sub_1D4809A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD40);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF98);
  v21 = MEMORY[0x1E0C80A78](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_1D469C5EC(a1, (uint64_t)v12, &qword_1ED98DD40);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_1D46992EC((uint64_t)v12, &qword_1ED98DD40);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_1D469C630((uint64_t)v12, (uint64_t)v19, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    sub_1D469C630((uint64_t)v19, (uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1D4697DE0((uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_1D46992EC((uint64_t)v24, &qword_1ED98DF98);
      sub_1D469C630((uint64_t)v17, v31, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
      sub_1D469C630(v31, (uint64_t)v24, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_1D4696EA4(&qword_1ED98DF78, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType, (uint64_t)&unk_1D49351F0);
  sub_1D492219C();
  if (v29)
    return sub_1D46992EC((uint64_t)v24, &qword_1ED98DF98);
  v33 = v41;
  sub_1D469C5EC((uint64_t)v24, (uint64_t)v41, &qword_1ED98DF98);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_1D46992EC((uint64_t)v24, &qword_1ED98DF98);
    return sub_1D46992EC((uint64_t)v33, &qword_1ED98DF98);
  }
  else
  {
    v34 = v40;
    sub_1D469C630((uint64_t)v33, (uint64_t)v40, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
    if (v27 != 1)
      sub_1D49220B8();
    sub_1D46992EC((uint64_t)v24, &qword_1ED98DF98);
    v35 = v39;
    sub_1D46992EC(v39, &qword_1ED98DD40);
    sub_1D469C630((uint64_t)v34, v35, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_1D4809E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD40);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DEF8);
  v21 = MEMORY[0x1E0C80A78](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_1D469C5EC(a1, (uint64_t)v12, &qword_1ED98DD40);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_1D46992EC((uint64_t)v12, &qword_1ED98DD40);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_1D469C630((uint64_t)v12, (uint64_t)v19, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    sub_1D469C630((uint64_t)v19, (uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1D46992EC((uint64_t)v24, &qword_1ED98DEF8);
      sub_1D469C630((uint64_t)v17, v31, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
      sub_1D469C630(v31, (uint64_t)v24, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_1D4697DE0((uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_1D4696EA4(&qword_1ED98DED8, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType, (uint64_t)&unk_1D4934C28);
  sub_1D492219C();
  if (v29)
    return sub_1D46992EC((uint64_t)v24, &qword_1ED98DEF8);
  v33 = v41;
  sub_1D469C5EC((uint64_t)v24, (uint64_t)v41, &qword_1ED98DEF8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_1D46992EC((uint64_t)v24, &qword_1ED98DEF8);
    return sub_1D46992EC((uint64_t)v33, &qword_1ED98DEF8);
  }
  else
  {
    v34 = v40;
    sub_1D469C630((uint64_t)v33, (uint64_t)v40, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
    if (v27 != 1)
      sub_1D49220B8();
    sub_1D46992EC((uint64_t)v24, &qword_1ED98DEF8);
    v35 = v39;
    sub_1D46992EC(v39, &qword_1ED98DD40);
    sub_1D469C630((uint64_t)v34, v35, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_1D480A2C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD40);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D469C5EC(v0, (uint64_t)v5, &qword_1ED98DD40);
  v6 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6) == 1)
    goto LABEL_11;
  if (swift_getEnumCaseMultiPayload() == 1)
    sub_1D480A5EC(v0);
  else
    sub_1D480A44C(v0);
  v2 = v1;
  result = sub_1D4697DE0((uint64_t)v5, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
  if (!v1)
  {
LABEL_11:
    if (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Argos_Protos_MLModel_FeatureType(0) + 20)) != 1)
      return sub_1D4922004();
    result = sub_1D4922268();
    if (!v2)
      return sub_1D4922004();
  }
  return result;
}

uint64_t sub_1D480A44C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD40);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D469C5EC(a1, (uint64_t)v4, &qword_1ED98DD40);
  v8 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_1D46992EC((uint64_t)v4, &qword_1ED98DD40);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1D469C630((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
    sub_1D4696EA4(&qword_1ED98DF78, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType, (uint64_t)&unk_1D49351F0);
    sub_1D49222F8();
    return sub_1D4697DE0((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
  }
  result = sub_1D4697DE0((uint64_t)v4, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
  __break(1u);
  return result;
}

uint64_t sub_1D480A5EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD40);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D469C5EC(a1, (uint64_t)v4, &qword_1ED98DD40);
  v8 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_1D46992EC((uint64_t)v4, &qword_1ED98DD40);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1D469C630((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
    sub_1D4696EA4(&qword_1ED98DED8, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType, (uint64_t)&unk_1D4934C28);
    sub_1D49222F8();
    return sub_1D4697DE0((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
  }
  result = sub_1D4697DE0((uint64_t)v4, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
  __break(1u);
  return result;
}

uint64_t sub_1D480A78C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a2, 1, 1, v4);
  *(_BYTE *)(a2 + *(int *)(a1 + 20)) = 0;
  return sub_1D4922010();
}

unint64_t sub_1D480A7E0()
{
  return 0xD000000000000020;
}

uint64_t sub_1D480A7FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D4809964(a1, a2, a3);
}

uint64_t sub_1D480A810()
{
  return sub_1D480A2C8();
}

uint64_t sub_1D480A824()
{
  sub_1D4696EA4(&qword_1EFEABC70, type metadata accessor for Argos_Protos_MLModel_FeatureType, (uint64_t)&unk_1D4934628);
  return sub_1D4922070();
}

uint64_t sub_1D480A874@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1ED98DD50, (uint64_t)qword_1ED9A4AC0, a1);
}

uint64_t sub_1D480A890()
{
  sub_1D4696EA4(&qword_1ED98DD58, type metadata accessor for Argos_Protos_MLModel_FeatureType, (uint64_t)&unk_1D4934660);
  return sub_1D49221D8();
}

uint64_t sub_1D480A8D0()
{
  sub_1D4696EA4(&qword_1ED98DD58, type metadata accessor for Argos_Protos_MLModel_FeatureType, (uint64_t)&unk_1D4934660);
  return sub_1D49221F0();
}

uint64_t sub_1D480A924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_1D4922328();
  __swift_allocate_value_buffer(v0, qword_1ED9A4BB8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED9A4BB8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D4927210;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "name";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1D4922304();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "shortDescription";
  *((_QWORD *)v11 + 1) = 16;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "type";
  *(_QWORD *)(v12 + 8) = 4;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_1D4922310();
}

uint64_t sub_1D480AAB8()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1D49220AC();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3)
      {
        sub_1D480AB6C();
      }
      else if (result == 2 || result == 1)
      {
        sub_1D492216C();
      }
      result = sub_1D49220AC();
    }
  }
  return result;
}

uint64_t sub_1D480AB6C()
{
  type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  sub_1D4696EA4(&qword_1ED98DD58, type metadata accessor for Argos_Protos_MLModel_FeatureType, (uint64_t)&unk_1D4934660);
  return sub_1D492219C();
}

uint64_t sub_1D480AC00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];

  v5 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD78);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v5[1];
  v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v15 = *v5 & 0xFFFFFFFFFFFFLL;
  v20[1] = a3;
  if (!v15 || (result = sub_1D49222C8(), !v4))
  {
    v17 = v5[3];
    v18 = HIBYTE(v17) & 0xF;
    if ((v17 & 0x2000000000000000) == 0)
      v18 = v5[2] & 0xFFFFFFFFFFFFLL;
    if (!v18 || (result = sub_1D49222C8(), !v4))
    {
      v19 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
      sub_1D469C5EC((uint64_t)v5 + *(int *)(v19 + 28), (uint64_t)v9, &qword_1ED98DD78);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
      {
        sub_1D46992EC((uint64_t)v9, &qword_1ED98DD78);
      }
      else
      {
        sub_1D469C630((uint64_t)v9, (uint64_t)v13, type metadata accessor for Argos_Protos_MLModel_FeatureType);
        sub_1D4696EA4(&qword_1ED98DD58, type metadata accessor for Argos_Protos_MLModel_FeatureType, (uint64_t)&unk_1D4934660);
        sub_1D49222F8();
        result = sub_1D4697DE0((uint64_t)v13, type metadata accessor for Argos_Protos_MLModel_FeatureType);
        if (v4)
          return result;
      }
      return sub_1D4922004();
    }
  }
  return result;
}

uint64_t sub_1D480AE24@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;

  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  sub_1D4922010();
  v4 = (char *)a2 + *(int *)(a1 + 28);
  v5 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
}

unint64_t sub_1D480AE84()
{
  return 0xD000000000000027;
}

uint64_t sub_1D480AEA0()
{
  return sub_1D480AAB8();
}

uint64_t sub_1D480AEB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D480AC00(a1, a2, a3);
}

uint64_t sub_1D480AEC8()
{
  sub_1D4696EA4(&qword_1EFEABC88, type metadata accessor for Argos_Protos_MLModel_FeatureDescription, (uint64_t)&unk_1D49344C0);
  return sub_1D4922070();
}

uint64_t sub_1D480AF18@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1ED98DFE8, (uint64_t)qword_1ED9A4BB8, a1);
}

uint64_t sub_1D480AF34()
{
  sub_1D4696EA4(&qword_1ED98DFF0, type metadata accessor for Argos_Protos_MLModel_FeatureDescription, (uint64_t)&unk_1D49344F8);
  return sub_1D49221D8();
}

uint64_t sub_1D480AF74()
{
  sub_1D4696EA4(&qword_1ED98DFF0, type metadata accessor for Argos_Protos_MLModel_FeatureDescription, (uint64_t)&unk_1D49344F8);
  return sub_1D49221F0();
}

uint64_t sub_1D480AFC8(uint64_t a1)
{
  return sub_1D4806860(a1, qword_1ED9A4A08, (uint64_t)"input", 10, (uint64_t)"output");
}

uint64_t sub_1D480AFE8()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1D49220AC();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 10 || result == 1)
      {
        type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
        sub_1D4696EA4(&qword_1ED98DFF0, type metadata accessor for Argos_Protos_MLModel_FeatureDescription, (uint64_t)&unk_1D49344F8);
        sub_1D4922190();
      }
      result = sub_1D49220AC();
    }
  }
  return result;
}

uint64_t sub_1D480B0FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*v0 + 16)
    || (type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0),
        sub_1D4696EA4(&qword_1ED98DFF0, type metadata accessor for Argos_Protos_MLModel_FeatureDescription, (uint64_t)&unk_1D49344F8), result = sub_1D49222EC(), !v1))
  {
    if (!*(_QWORD *)(v0[1] + 16)
      || (type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0),
          sub_1D4696EA4(&qword_1ED98DFF0, type metadata accessor for Argos_Protos_MLModel_FeatureDescription, (uint64_t)&unk_1D49344F8), result = sub_1D49222EC(), !v1))
    {
      type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
      return sub_1D4922004();
    }
  }
  return result;
}

uint64_t sub_1D480B22C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  v1 = MEMORY[0x1E0DEE9D8];
  *a1 = MEMORY[0x1E0DEE9D8];
  a1[1] = v1;
  return sub_1D4922010();
}

unint64_t sub_1D480B254()
{
  return 0xD000000000000025;
}

uint64_t sub_1D480B270()
{
  return sub_1D480AFE8();
}

uint64_t sub_1D480B284()
{
  return sub_1D480B0FC();
}

uint64_t sub_1D480B298()
{
  sub_1D4696EA4(&qword_1EFEABC98, type metadata accessor for Argos_Protos_MLModel_ModelDescription, (uint64_t)&unk_1D4934358);
  return sub_1D4922070();
}

uint64_t sub_1D480B2E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1ED98DFA0, (uint64_t)qword_1ED9A4A08, a1);
}

uint64_t sub_1D480B304()
{
  sub_1D4696EA4(&qword_1ED98DFA8, type metadata accessor for Argos_Protos_MLModel_ModelDescription, (uint64_t)&unk_1D4934390);
  return sub_1D49221D8();
}

uint64_t sub_1D480B344()
{
  sub_1D4696EA4(&qword_1ED98DFA8, type metadata accessor for Argos_Protos_MLModel_ModelDescription, (uint64_t)&unk_1D4934390);
  return sub_1D49221F0();
}

uint64_t sub_1D480B398()
{
  return sub_1D4696EA4(&qword_1EFEABA90, type metadata accessor for Argos_Protos_MLModel_ModelDescription, (uint64_t)&unk_1D49342A0);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_ModelDescription(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98DFB8);
}

uint64_t sub_1D480B3D8()
{
  return sub_1D4696EA4(&qword_1ED98DFA8, type metadata accessor for Argos_Protos_MLModel_ModelDescription, (uint64_t)&unk_1D4934390);
}

uint64_t sub_1D480B404()
{
  return sub_1D4696EA4(&qword_1EFEABA98, type metadata accessor for Argos_Protos_MLModel_ModelDescription, (uint64_t)&unk_1D49342C8);
}

uint64_t sub_1D480B430()
{
  return sub_1D4696EA4(&qword_1ED98DFB0, type metadata accessor for Argos_Protos_MLModel_ModelDescription, (uint64_t)&unk_1D4934308);
}

uint64_t sub_1D480B45C()
{
  return sub_1D4696EA4(&qword_1EFEABAA0, type metadata accessor for Argos_Protos_MLModel_FeatureDescription, (uint64_t)&unk_1D4934408);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_FeatureDescription(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98E000);
}

uint64_t sub_1D480B49C()
{
  return sub_1D4696EA4(&qword_1ED98DFF0, type metadata accessor for Argos_Protos_MLModel_FeatureDescription, (uint64_t)&unk_1D49344F8);
}

uint64_t sub_1D480B4C8()
{
  return sub_1D4696EA4(&qword_1EFEABAA8, type metadata accessor for Argos_Protos_MLModel_FeatureDescription, (uint64_t)&unk_1D4934430);
}

uint64_t sub_1D480B4F4()
{
  return sub_1D4696EA4(&qword_1ED98DFF8, type metadata accessor for Argos_Protos_MLModel_FeatureDescription, (uint64_t)&unk_1D4934470);
}

uint64_t sub_1D480B520()
{
  return sub_1D4696EA4(&qword_1EFEABAB0, type metadata accessor for Argos_Protos_MLModel_FeatureType, (uint64_t)&unk_1D4934570);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_FeatureType(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98DD68);
}

uint64_t sub_1D480B560()
{
  return sub_1D4696EA4(&qword_1ED98DD58, type metadata accessor for Argos_Protos_MLModel_FeatureType, (uint64_t)&unk_1D4934660);
}

uint64_t sub_1D480B58C()
{
  return sub_1D4696EA4(&qword_1EFEABAB8, type metadata accessor for Argos_Protos_MLModel_FeatureType, (uint64_t)&unk_1D4934598);
}

uint64_t sub_1D480B5B8()
{
  return sub_1D4696EA4(&qword_1ED98DD60, type metadata accessor for Argos_Protos_MLModel_FeatureType, (uint64_t)&unk_1D49345D8);
}

uint64_t sub_1D480B5E4()
{
  return sub_1D4696EA4(&qword_1EFEABAC0, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange, (uint64_t)&unk_1D49346D8);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98DE90);
}

uint64_t sub_1D480B624()
{
  return sub_1D4696EA4(&qword_1EFEABAC8, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange, (uint64_t)&unk_1D49347C8);
}

uint64_t sub_1D480B650()
{
  return sub_1D4696EA4(&qword_1EFEABAD0, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange, (uint64_t)&unk_1D4934700);
}

uint64_t sub_1D480B67C()
{
  return sub_1D4696EA4(&qword_1EFEABAD8, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange, (uint64_t)&unk_1D4934740);
}

uint64_t sub_1D480B6A8()
{
  return sub_1D4696EA4(&qword_1EFEABAE0, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes, (uint64_t)&unk_1D4934840);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98DEA0);
}

uint64_t sub_1D480B6E8()
{
  return sub_1D4696EA4(&qword_1EFEABAE8, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes, (uint64_t)&unk_1D4934930);
}

uint64_t sub_1D480B714()
{
  return sub_1D4696EA4(&qword_1EFEABAF0, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes, (uint64_t)&unk_1D4934868);
}

uint64_t sub_1D480B740()
{
  return sub_1D4696EA4(&qword_1EFEABAF8, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes, (uint64_t)&unk_1D49348A8);
}

uint64_t sub_1D480B76C()
{
  return sub_1D4696EA4(&qword_1EFEABB00, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape, (uint64_t)&unk_1D49349A8);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1EFEABCB0);
}

uint64_t sub_1D480B7AC()
{
  return sub_1D4696EA4(&qword_1EFEABB08, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape, (uint64_t)&unk_1D4934A98);
}

uint64_t sub_1D480B7D8()
{
  return sub_1D4696EA4(&qword_1EFEABB10, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape, (uint64_t)&unk_1D49349D0);
}

uint64_t sub_1D480B804()
{
  return sub_1D4696EA4(&qword_1EFEABB18, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape, (uint64_t)&unk_1D4934A10);
}

uint64_t sub_1D480B830()
{
  return sub_1D4696EA4(&qword_1EFEABB20, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType, (uint64_t)&unk_1D4934B38);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98DEE8);
}

uint64_t sub_1D480B870()
{
  return sub_1D4696EA4(&qword_1ED98DED8, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType, (uint64_t)&unk_1D4934C28);
}

uint64_t sub_1D480B89C()
{
  return sub_1D4696EA4(&qword_1EFEABB28, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType, (uint64_t)&unk_1D4934B60);
}

uint64_t sub_1D480B8C8()
{
  return sub_1D4696EA4(&qword_1ED98DEE0, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType, (uint64_t)&unk_1D4934BA0);
}

uint64_t sub_1D480B8F4()
{
  return sub_1D4696EA4(&qword_1EFEABB30, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange, (uint64_t)&unk_1D4934CA0);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(uint64_t a1)
{
  return sub_1D469C2D0(a1, qword_1ED98DF10);
}

uint64_t sub_1D480B934()
{
  return sub_1D4696EA4(&qword_1EFEABB38, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange, (uint64_t)&unk_1D4934D90);
}

uint64_t sub_1D480B960()
{
  return sub_1D4696EA4(&qword_1EFEABB40, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange, (uint64_t)&unk_1D4934CC8);
}

uint64_t sub_1D480B98C()
{
  return sub_1D4696EA4(&qword_1EFEABB48, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange, (uint64_t)&unk_1D4934D08);
}

uint64_t sub_1D480B9B8()
{
  return sub_1D4696EA4(&qword_1EFEABB50, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes, (uint64_t)&unk_1D4934E08);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98DF00);
}

uint64_t sub_1D480B9F8()
{
  return sub_1D4696EA4(&qword_1EFEABB58, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes, (uint64_t)&unk_1D4934EF8);
}

uint64_t sub_1D480BA24()
{
  return sub_1D4696EA4(&qword_1EFEABB60, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes, (uint64_t)&unk_1D4934E30);
}

uint64_t sub_1D480BA50()
{
  return sub_1D4696EA4(&qword_1EFEABB68, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes, (uint64_t)&unk_1D4934E70);
}

uint64_t sub_1D480BA7C()
{
  return sub_1D4696EA4(&qword_1EFEABB70, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize, (uint64_t)&unk_1D4934F70);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1EFEABCA0);
}

uint64_t sub_1D480BABC()
{
  return sub_1D4696EA4(&qword_1EFEABB78, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize, (uint64_t)&unk_1D4935060);
}

uint64_t sub_1D480BAE8()
{
  return sub_1D4696EA4(&qword_1EFEABB80, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize, (uint64_t)&unk_1D4934F98);
}

uint64_t sub_1D480BB14()
{
  return sub_1D4696EA4(&qword_1EFEABB88, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize, (uint64_t)&unk_1D4934FD8);
}

uint64_t sub_1D480BB40()
{
  return sub_1D4696EA4(&qword_1EFEABB90, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType, (uint64_t)&unk_1D4935100);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98DF88);
}

uint64_t sub_1D480BB80()
{
  return sub_1D4696EA4(&qword_1ED98DF78, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType, (uint64_t)&unk_1D49351F0);
}

uint64_t sub_1D480BBAC()
{
  return sub_1D4696EA4(&qword_1EFEABB98, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType, (uint64_t)&unk_1D4935128);
}

uint64_t sub_1D480BBD8()
{
  return sub_1D4696EA4(&qword_1ED98DF80, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType, (uint64_t)&unk_1D4935168);
}

uint64_t sub_1D480BC04()
{
  return sub_1D4696EA4(&qword_1EFEABBA0, type metadata accessor for Argos_Protos_MLModel_SizeRange, (uint64_t)&unk_1D4935268);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_SizeRange(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98DCE8);
}

uint64_t sub_1D480BC44()
{
  return sub_1D4696EA4(&qword_1EFEABBA8, type metadata accessor for Argos_Protos_MLModel_SizeRange, (uint64_t)&unk_1D4935358);
}

uint64_t sub_1D480BC70()
{
  return sub_1D4696EA4(&qword_1EFEABBB0, type metadata accessor for Argos_Protos_MLModel_SizeRange, (uint64_t)&unk_1D4935290);
}

uint64_t sub_1D480BC9C()
{
  return sub_1D4696EA4(&qword_1EFEABBB8, type metadata accessor for Argos_Protos_MLModel_SizeRange, (uint64_t)&unk_1D49352D0);
}

uint64_t sub_1D480BCC8()
{
  return sub_1D4747378(&qword_1EFEABBC0, &qword_1EFEABBC8);
}

uint64_t sub_1D480BCEC()
{
  return sub_1D4747378(&qword_1EFEABBD0, &qword_1EFEABBD8);
}

uint64_t sub_1D480BD10(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1D492201C();
  v43 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v42 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v41 = (char *)&v39 - v7;
  v8 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v40 = (uint64_t)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABC90);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD78);
  v15 = MEMORY[0x1E0C80A78](v14);
  v44 = (uint64_t)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v39 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v39 - v20;
  if (*a1 == *a2 && a1[1] == a2[1] || (v22 = 0, (sub_1D4922E38() & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (v22 = 0, (sub_1D4922E38() & 1) != 0))
    {
      v39 = v4;
      v23 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
      sub_1D469C5EC((uint64_t)a1 + *(int *)(v23 + 28), (uint64_t)v21, &qword_1ED98DD78);
      sub_1D469C5EC((uint64_t)a2 + *(int *)(v23 + 28), (uint64_t)v19, &qword_1ED98DD78);
      v24 = (uint64_t)&v13[*(int *)(v11 + 48)];
      sub_1D469C5EC((uint64_t)v21, (uint64_t)v13, &qword_1ED98DD78);
      sub_1D469C5EC((uint64_t)v19, v24, &qword_1ED98DD78);
      v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      if (v25((uint64_t)v13, 1, v8) == 1)
      {
        sub_1D46992EC((uint64_t)v19, &qword_1ED98DD78);
        sub_1D46992EC((uint64_t)v21, &qword_1ED98DD78);
        if (v25(v24, 1, v8) == 1)
        {
          sub_1D46992EC((uint64_t)v13, &qword_1ED98DD78);
LABEL_14:
          v30 = (char *)a1 + *(int *)(v23 + 24);
          v31 = v43;
          v32 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
          v33 = v41;
          v34 = v39;
          v32(v41, v30, v39);
          v35 = (char *)a2 + *(int *)(v23 + 24);
          v36 = v42;
          v32(v42, v35, v34);
          sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
          v22 = sub_1D49225E0();
          v37 = *(void (**)(char *, uint64_t))(v31 + 8);
          v37(v36, v34);
          v37(v33, v34);
          return v22 & 1;
        }
      }
      else
      {
        v26 = v44;
        sub_1D469C5EC((uint64_t)v13, v44, &qword_1ED98DD78);
        if (v25(v24, 1, v8) != 1)
        {
          v27 = v26;
          v28 = v40;
          sub_1D469C630(v24, v40, type metadata accessor for Argos_Protos_MLModel_FeatureType);
          v29 = sub_1D480D2AC(v27, v28);
          sub_1D4697DE0(v28, type metadata accessor for Argos_Protos_MLModel_FeatureType);
          sub_1D46992EC((uint64_t)v19, &qword_1ED98DD78);
          sub_1D46992EC((uint64_t)v21, &qword_1ED98DD78);
          sub_1D4697DE0(v27, type metadata accessor for Argos_Protos_MLModel_FeatureType);
          sub_1D46992EC((uint64_t)v13, &qword_1ED98DD78);
          if ((v29 & 1) != 0)
            goto LABEL_14;
LABEL_15:
          v22 = 0;
          return v22 & 1;
        }
        sub_1D46992EC((uint64_t)v19, &qword_1ED98DD78);
        sub_1D46992EC((uint64_t)v21, &qword_1ED98DD78);
        sub_1D4697DE0(v26, type metadata accessor for Argos_Protos_MLModel_FeatureType);
      }
      sub_1D46992EC((uint64_t)v13, &qword_1EFEABC90);
      goto LABEL_15;
    }
  }
  return v22 & 1;
}

uint64_t sub_1D480C140(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_1D492201C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - v9;
  if ((sub_1D48A1FEC(*a1, *a2) & 1) != 0 && (sub_1D48A1FEC(a1[1], a2[1]) & 1) != 0)
  {
    v11 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
    v12 = (char *)a1 + *(int *)(v11 + 24);
    v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, (char *)a2 + *(int *)(v11 + 24), v4);
    sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v14 = sub_1D49225E0();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_1D480C284(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  char v49;
  void (*v50)(char *, uint64_t);
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  char v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  _QWORD *v59;
  char v60;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;

  v68 = sub_1D492201C();
  v66 = *(_QWORD *)(v68 - 8);
  v4 = MEMORY[0x1E0C80A78](v68);
  v65 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v64 = (char *)&v62 - v6;
  v7 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v63 = (uint64_t *)((char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v69 = (uint64_t *)((char *)&v62 - v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABC10);
  v13 = MEMORY[0x1E0C80A78](v12);
  v72 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v62 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
  v18 = MEMORY[0x1E0C80A78](v17);
  v67 = (uint64_t *)((char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = MEMORY[0x1E0C80A78](v18);
  v70 = (uint64_t)&v62 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v71 = (uint64_t)&v62 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v75 = (uint64_t *)((char *)&v62 - v25);
  v26 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v62 - v27;
  MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v62 - v29;
  v31 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
  v32 = *(int *)(v31 + 20);
  v73 = a1;
  sub_1D469C5EC(a1 + v32, (uint64_t)v30, &qword_1EFEAA428);
  v33 = *(int *)(v31 + 20);
  v74 = a2;
  sub_1D469C5EC(a2 + v33, (uint64_t)v28, &qword_1EFEAA428);
  v34 = v12;
  v35 = (uint64_t)&v16[*(int *)(v12 + 48)];
  sub_1D469C5EC((uint64_t)v30, (uint64_t)v16, &qword_1EFEAA428);
  sub_1D469C5EC((uint64_t)v28, v35, &qword_1EFEAA428);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v36((uint64_t)v16, 1, v7) == 1)
  {
    sub_1D46992EC((uint64_t)v28, &qword_1EFEAA428);
    sub_1D46992EC((uint64_t)v30, &qword_1EFEAA428);
    if (v36(v35, 1, v7) != 1)
    {
LABEL_18:
      v57 = &qword_1EFEABC10;
      v58 = (uint64_t)v16;
LABEL_25:
      sub_1D46992EC(v58, v57);
      goto LABEL_26;
    }
    sub_1D46992EC((uint64_t)v16, &qword_1EFEAA428);
  }
  else
  {
    v51 = v75;
    sub_1D469C5EC((uint64_t)v16, (uint64_t)v75, &qword_1EFEAA428);
    if (v36(v35, 1, v7) == 1)
    {
      sub_1D46992EC((uint64_t)v28, &qword_1EFEAA428);
      sub_1D46992EC((uint64_t)v30, &qword_1EFEAA428);
      v52 = (uint64_t)v51;
LABEL_17:
      sub_1D4697DE0(v52, type metadata accessor for Argos_Protos_MLModel_SizeRange);
      goto LABEL_18;
    }
    v53 = v69;
    sub_1D469C630(v35, (uint64_t)v69, type metadata accessor for Argos_Protos_MLModel_SizeRange);
    if (*v51 != *v53 || v51[1] != v53[1])
    {
      sub_1D4697DE0((uint64_t)v53, type metadata accessor for Argos_Protos_MLModel_SizeRange);
      sub_1D46992EC((uint64_t)v28, &qword_1EFEAA428);
      sub_1D46992EC((uint64_t)v30, &qword_1EFEAA428);
      v55 = (uint64_t)v51;
      goto LABEL_24;
    }
    sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v54 = sub_1D49225E0();
    sub_1D4697DE0((uint64_t)v53, type metadata accessor for Argos_Protos_MLModel_SizeRange);
    sub_1D46992EC((uint64_t)v28, &qword_1EFEAA428);
    sub_1D46992EC((uint64_t)v30, &qword_1EFEAA428);
    sub_1D4697DE0((uint64_t)v75, type metadata accessor for Argos_Protos_MLModel_SizeRange);
    sub_1D46992EC((uint64_t)v16, &qword_1EFEAA428);
    if ((v54 & 1) == 0)
      goto LABEL_26;
  }
  v37 = v73;
  v38 = v71;
  sub_1D469C5EC(v73 + *(int *)(v31 + 24), v71, &qword_1EFEAA428);
  v39 = v74;
  v40 = v74 + *(int *)(v31 + 24);
  v41 = v70;
  sub_1D469C5EC(v40, v70, &qword_1EFEAA428);
  v16 = v72;
  v42 = (uint64_t)&v72[*(int *)(v34 + 48)];
  sub_1D469C5EC(v38, (uint64_t)v72, &qword_1EFEAA428);
  sub_1D469C5EC(v41, v42, &qword_1EFEAA428);
  if (v36((uint64_t)v16, 1, v7) != 1)
  {
    v43 = v37;
    v56 = v67;
    sub_1D469C5EC((uint64_t)v16, (uint64_t)v67, &qword_1EFEAA428);
    if (v36(v42, 1, v7) == 1)
    {
      sub_1D46992EC(v41, &qword_1EFEAA428);
      sub_1D46992EC(v38, &qword_1EFEAA428);
      v52 = (uint64_t)v56;
      goto LABEL_17;
    }
    v59 = v63;
    sub_1D469C630(v42, (uint64_t)v63, type metadata accessor for Argos_Protos_MLModel_SizeRange);
    if (*v56 == *v59 && v56[1] == v59[1])
    {
      sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
      v60 = sub_1D49225E0();
      sub_1D4697DE0((uint64_t)v59, type metadata accessor for Argos_Protos_MLModel_SizeRange);
      sub_1D46992EC(v41, &qword_1EFEAA428);
      sub_1D46992EC(v38, &qword_1EFEAA428);
      sub_1D4697DE0((uint64_t)v56, type metadata accessor for Argos_Protos_MLModel_SizeRange);
      sub_1D46992EC((uint64_t)v16, &qword_1EFEAA428);
      if ((v60 & 1) != 0)
        goto LABEL_7;
LABEL_26:
      v49 = 0;
      return v49 & 1;
    }
    sub_1D4697DE0((uint64_t)v59, type metadata accessor for Argos_Protos_MLModel_SizeRange);
    sub_1D46992EC(v41, &qword_1EFEAA428);
    sub_1D46992EC(v38, &qword_1EFEAA428);
    v55 = (uint64_t)v56;
LABEL_24:
    sub_1D4697DE0(v55, type metadata accessor for Argos_Protos_MLModel_SizeRange);
    v58 = (uint64_t)v16;
    v57 = &qword_1EFEAA428;
    goto LABEL_25;
  }
  sub_1D46992EC(v41, &qword_1EFEAA428);
  sub_1D46992EC(v38, &qword_1EFEAA428);
  if (v36(v42, 1, v7) != 1)
    goto LABEL_18;
  v43 = v37;
  sub_1D46992EC((uint64_t)v16, &qword_1EFEAA428);
LABEL_7:
  v44 = v66;
  v45 = *(void (**)(char *, uint64_t, uint64_t))(v66 + 16);
  v46 = v64;
  v47 = v68;
  v45(v64, v43, v68);
  v48 = v65;
  v45(v65, v39, v47);
  sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
  v49 = sub_1D49225E0();
  v50 = *(void (**)(char *, uint64_t))(v44 + 8);
  v50(v48, v47);
  v50(v46, v47);
  return v49 & 1;
}

uint64_t sub_1D480C9D4(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  char v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD **v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  double *v38;
  int v39;
  double *v40;
  int v41;
  _QWORD **v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  double v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD **v59;

  v4 = sub_1D492201C();
  v57 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v56 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v55 = (char *)&v52 - v7;
  v8 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v58 = (uint64_t)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABC48);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DEC8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v52 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v52 - v21;
  v23 = *(_QWORD **)a1;
  v59 = a2;
  if (!sub_1D489EF8C(v23, *a2))
    goto LABEL_15;
  v54 = v4;
  v24 = 0;
  v25 = *(_QWORD **)(a1 + 8);
  if (!v25)
    return v24 & 1;
  v26 = v59[1];
  if (!v26)
    return v24 & 1;
  if (*(_BYTE *)(a1 + 16) == 1)
    v25 = (_QWORD *)qword_1D4935920[(_QWORD)v25 - 1];
  if (*((_BYTE *)v59 + 16))
    __asm { BR              X11 }
  if (v25 != v26)
  {
LABEL_15:
    v24 = 0;
    return v24 & 1;
  }
  v27 = a1;
  v28 = v59;
  v29 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
  v30 = *(int *)(v29 + 24);
  v53 = v27;
  sub_1D469C5EC(v27 + v30, (uint64_t)v22, &qword_1ED98DEC8);
  v52 = v29;
  sub_1D469C5EC((uint64_t)v28 + *(int *)(v29 + 24), (uint64_t)v20, &qword_1ED98DEC8);
  v31 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_1D469C5EC((uint64_t)v22, (uint64_t)v13, &qword_1ED98DEC8);
  sub_1D469C5EC((uint64_t)v20, v31, &qword_1ED98DEC8);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v32((uint64_t)v13, 1, v8) == 1)
  {
    sub_1D46992EC((uint64_t)v20, &qword_1ED98DEC8);
    sub_1D46992EC((uint64_t)v22, &qword_1ED98DEC8);
    if (v32(v31, 1, v8) == 1)
    {
      sub_1D46992EC((uint64_t)v13, &qword_1ED98DEC8);
      goto LABEL_18;
    }
LABEL_14:
    sub_1D46992EC((uint64_t)v13, &qword_1EFEABC48);
    goto LABEL_15;
  }
  sub_1D469C5EC((uint64_t)v13, (uint64_t)v17, &qword_1ED98DEC8);
  if (v32(v31, 1, v8) == 1)
  {
    sub_1D46992EC((uint64_t)v20, &qword_1ED98DEC8);
    sub_1D46992EC((uint64_t)v22, &qword_1ED98DEC8);
    sub_1D4697DE0((uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    goto LABEL_14;
  }
  v34 = v58;
  sub_1D469C630(v31, v58, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
  v35 = sub_1D480CF1C((uint64_t)v17, v34);
  sub_1D4697DE0(v34, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
  sub_1D46992EC((uint64_t)v20, &qword_1ED98DEC8);
  sub_1D46992EC((uint64_t)v22, &qword_1ED98DEC8);
  sub_1D4697DE0((uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
  sub_1D46992EC((uint64_t)v13, &qword_1ED98DEC8);
  if ((v35 & 1) == 0)
    goto LABEL_15;
LABEL_18:
  v36 = v52;
  v37 = *(int *)(v52 + 28);
  v38 = (double *)(v53 + v37);
  v39 = *(unsigned __int8 *)(v53 + v37 + 8);
  v40 = (double *)((char *)v59 + v37);
  v41 = *((unsigned __int8 *)v40 + 8);
  if (v39 == 255)
  {
    if (v41 == 255)
    {
LABEL_20:
      v42 = v59;
      v43 = v57;
      v44 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
      v45 = v54;
      v46 = v55;
      v44(v55, v53 + *(int *)(v52 + 32), v54);
      v47 = (uint64_t)v42 + *(int *)(v36 + 32);
      v48 = v56;
      v44(v56, v47, v45);
      sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
      v24 = sub_1D49225E0();
      v49 = *(void (**)(char *, uint64_t))(v43 + 8);
      v49(v48, v45);
      v49(v46, v45);
      return v24 & 1;
    }
    goto LABEL_15;
  }
  if (v41 == 255)
    goto LABEL_15;
  v50 = *v38;
  v51 = *v40;
  if (v39)
  {
    if (v39 == 1)
    {
      v24 = 0;
      if (v41 == 1 && *(float *)&v50 == *(float *)&v51)
        goto LABEL_20;
    }
    else
    {
      v24 = 0;
      if (v41 == 2 && v50 == v51)
        goto LABEL_20;
    }
  }
  else
  {
    v24 = 0;
    if (!v41 && LODWORD(v50) == LODWORD(v51))
      goto LABEL_20;
  }
  return v24 & 1;
}

uint64_t sub_1D480CF1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a1;
  v27 = a2;
  v2 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v13 = (uint64_t *)((char *)&v26 - v12);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABC50);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t)&v17[*(int *)(v15 + 48)];
  sub_1D469C304(v26, (uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
  sub_1D469C304(v27, v18, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1D469C304((uint64_t)v17, (uint64_t)v11, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1D469C630(v18, (uint64_t)v4, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
      if ((sub_1D48A2294(*v11, *v4) & 1) != 0)
      {
        sub_1D492201C();
        sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
        if ((sub_1D49225E0() & 1) != 0)
        {
          v19 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange;
          sub_1D4697DE0((uint64_t)v4, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
          v20 = (uint64_t)v11;
LABEL_13:
          sub_1D4697DE0(v20, v19);
          sub_1D4697DE0((uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
          return 1;
        }
      }
      v24 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange;
      sub_1D4697DE0((uint64_t)v4, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
      v25 = (uint64_t)v11;
LABEL_16:
      sub_1D4697DE0(v25, v24);
      sub_1D4697DE0((uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
      return 0;
    }
    v21 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange;
    v22 = (uint64_t)v11;
  }
  else
  {
    sub_1D469C304((uint64_t)v17, (uint64_t)v13, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1D469C630(v18, (uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
      if ((sub_1D48A206C(*v13, *v7) & 1) != 0)
      {
        sub_1D492201C();
        sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
        if ((sub_1D49225E0() & 1) != 0)
        {
          v19 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes;
          sub_1D4697DE0((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
          v20 = (uint64_t)v13;
          goto LABEL_13;
        }
      }
      v24 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes;
      sub_1D4697DE0((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
      v25 = (uint64_t)v13;
      goto LABEL_16;
    }
    v21 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes;
    v22 = (uint64_t)v13;
  }
  sub_1D4697DE0(v22, v21);
  sub_1D46992EC((uint64_t)v17, &qword_1EFEABC50);
  return 0;
}

uint64_t sub_1D480D2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v38 = sub_1D492201C();
  v41 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v37 - v6;
  v7 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v42 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABC78);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD40);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v37 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v37 - v20;
  v43 = a1;
  sub_1D469C5EC(a1, (uint64_t)&v37 - v20, &qword_1ED98DD40);
  v44 = a2;
  sub_1D469C5EC(a2, (uint64_t)v19, &qword_1ED98DD40);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_1D469C5EC((uint64_t)v21, (uint64_t)v12, &qword_1ED98DD40);
  sub_1D469C5EC((uint64_t)v19, v22, &qword_1ED98DD40);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_1D469C5EC((uint64_t)v12, (uint64_t)v16, &qword_1ED98DD40);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v42;
      sub_1D469C630(v22, v42, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
      v25 = sub_1D480DDFC((uint64_t)v16, v24);
      sub_1D4697DE0(v24, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
      sub_1D46992EC((uint64_t)v19, &qword_1ED98DD40);
      sub_1D46992EC((uint64_t)v21, &qword_1ED98DD40);
      sub_1D4697DE0((uint64_t)v16, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
      sub_1D46992EC((uint64_t)v12, &qword_1ED98DD40);
      if ((v25 & 1) == 0)
        goto LABEL_9;
      goto LABEL_8;
    }
    sub_1D46992EC((uint64_t)v19, &qword_1ED98DD40);
    sub_1D46992EC((uint64_t)v21, &qword_1ED98DD40);
    sub_1D4697DE0((uint64_t)v16, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
LABEL_6:
    sub_1D46992EC((uint64_t)v12, &qword_1EFEABC78);
    goto LABEL_9;
  }
  sub_1D46992EC((uint64_t)v19, &qword_1ED98DD40);
  sub_1D46992EC((uint64_t)v21, &qword_1ED98DD40);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_1D46992EC((uint64_t)v12, &qword_1ED98DD40);
LABEL_8:
  v26 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  v27 = v44;
  if (*(unsigned __int8 *)(v43 + *(int *)(v26 + 20)) == *(unsigned __int8 *)(v44 + *(int *)(v26 + 20)))
  {
    v30 = v26;
    v31 = v41;
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
    v34 = v38;
    v33 = v39;
    v32(v39, v43 + *(int *)(v26 + 24), v38);
    v35 = v40;
    v32(v40, v27 + *(int *)(v30 + 24), v34);
    sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v28 = sub_1D49225E0();
    v36 = *(void (**)(char *, uint64_t))(v31 + 8);
    v36(v35, v34);
    v36(v33, v34);
    return v28 & 1;
  }
LABEL_9:
  v28 = 0;
  return v28 & 1;
}

uint64_t sub_1D480D690(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v25 = a2;
  v3 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (uint64_t *)((char *)&v24 - v13);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABC08);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_1D469C304(a1, (uint64_t)v18, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
  sub_1D469C304(v25, v19, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1D469C304((uint64_t)v18, (uint64_t)v14, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1D469C630(v19, (uint64_t)v8, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
      if ((sub_1D48A2724(*v14, *v8) & 1) != 0)
      {
        sub_1D492201C();
        sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
        if ((sub_1D49225E0() & 1) != 0)
        {
          sub_1D4697DE0((uint64_t)v8, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
          sub_1D4697DE0((uint64_t)v14, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
          sub_1D4697DE0((uint64_t)v18, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
          v20 = 1;
          return v20 & 1;
        }
      }
      sub_1D4697DE0((uint64_t)v8, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
      sub_1D4697DE0((uint64_t)v14, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
      sub_1D4697DE0((uint64_t)v18, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
LABEL_12:
      v20 = 0;
      return v20 & 1;
    }
    v21 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes;
    v22 = (uint64_t)v14;
LABEL_7:
    sub_1D4697DE0(v22, v21);
    sub_1D46992EC((uint64_t)v18, &qword_1EFEABC08);
    goto LABEL_12;
  }
  sub_1D469C304((uint64_t)v18, (uint64_t)v12, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v21 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange;
    v22 = (uint64_t)v12;
    goto LABEL_7;
  }
  sub_1D469C630(v19, (uint64_t)v5, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
  v20 = sub_1D480C284((uint64_t)v12, (uint64_t)v5);
  sub_1D4697DE0((uint64_t)v5, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
  sub_1D4697DE0((uint64_t)v12, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
  sub_1D4697DE0((uint64_t)v18, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
  return v20 & 1;
}

uint64_t sub_1D480D9C8(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  char v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  uint64_t v40;
  char *v41;
  char v42;
  void (*v43)(char *, uint64_t);
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v52 = sub_1D492201C();
  v4 = *(_QWORD *)(v52 - 8);
  v5 = MEMORY[0x1E0C80A78](v52);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v45 - v8;
  v10 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABC00);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
  v18 = MEMORY[0x1E0C80A78](v17);
  v19 = MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v19);
  if (*a1 != *a2)
    goto LABEL_12;
  v50 = v14;
  v51 = v11;
  v48 = v4;
  v49 = v13;
  v46 = v9;
  v47 = v7;
  if (a1[1] != a2[1])
    goto LABEL_12;
  v23 = (char *)a2;
  v24 = a1;
  v25 = v21;
  v26 = (char *)&v45 - v20;
  v27 = v22;
  v28 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  sub_1D469C5EC((uint64_t)v24 + v28[6], (uint64_t)v26, &qword_1ED98DF68);
  v29 = v28[6];
  v45 = v23;
  sub_1D469C5EC((uint64_t)&v23[v29], v27, &qword_1ED98DF68);
  v30 = (uint64_t)v16;
  v31 = (uint64_t)&v16[*(int *)(v50 + 48)];
  sub_1D469C5EC((uint64_t)v26, (uint64_t)v16, &qword_1ED98DF68);
  sub_1D469C5EC(v27, v31, &qword_1ED98DF68);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  if (v32(v30, 1, v10) == 1)
  {
    sub_1D46992EC(v27, &qword_1ED98DF68);
    sub_1D46992EC((uint64_t)v26, &qword_1ED98DF68);
    if (v32(v31, 1, v10) == 1)
    {
      sub_1D46992EC(v30, &qword_1ED98DF68);
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  sub_1D469C5EC(v30, v25, &qword_1ED98DF68);
  if (v32(v31, 1, v10) == 1)
  {
    sub_1D46992EC(v27, &qword_1ED98DF68);
    sub_1D46992EC((uint64_t)v26, &qword_1ED98DF68);
    sub_1D4697DE0(v25, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
LABEL_8:
    sub_1D46992EC(v30, &qword_1EFEABC00);
LABEL_12:
    v42 = 0;
    return v42 & 1;
  }
  v33 = (uint64_t)v49;
  sub_1D469C630(v31, (uint64_t)v49, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
  v34 = sub_1D480D690(v25, v33);
  sub_1D4697DE0(v33, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
  sub_1D46992EC(v27, &qword_1ED98DF68);
  sub_1D46992EC((uint64_t)v26, &qword_1ED98DF68);
  sub_1D4697DE0(v25, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
  sub_1D46992EC(v30, &qword_1ED98DF68);
  if ((v34 & 1) == 0)
    goto LABEL_12;
LABEL_10:
  v35 = v45;
  if (!sub_1D4714920(*(_QWORD *)((char *)v24 + v28[7]), *((_BYTE *)v24 + v28[7] + 8), *(_QWORD *)&v45[v28[7]], v45[v28[7] + 8]))goto LABEL_12;
  v36 = (char *)v24 + v28[8];
  v37 = v48;
  v38 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  v39 = v46;
  v40 = v52;
  v38(v46, v36, v52);
  v41 = v47;
  v38(v47, &v35[v28[8]], v40);
  sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
  v42 = sub_1D49225E0();
  v43 = *(void (**)(char *, uint64_t))(v37 + 8);
  v43(v41, v40);
  v43(v39, v40);
  return v42 & 1;
}

uint64_t sub_1D480DDFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD **v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v27;

  v4 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD **)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (uint64_t *)((char *)&v27 - v14);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABC80);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t)&v19[*(int *)(v17 + 48)];
  sub_1D469C304(a1, (uint64_t)v19, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
  sub_1D469C304(a2, v20, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1D469C304((uint64_t)v19, (uint64_t)v13, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1D469C630(v20, (uint64_t)v6, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
      v21 = sub_1D480C9D4((uint64_t)v13, v6);
      sub_1D4697DE0((uint64_t)v6, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
      v22 = (uint64_t)v13;
      v23 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType;
LABEL_9:
      sub_1D4697DE0(v22, v23);
      sub_1D4697DE0((uint64_t)v19, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
      return v21 & 1;
    }
    v24 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType;
    v25 = (uint64_t)v13;
  }
  else
  {
    sub_1D469C304((uint64_t)v19, (uint64_t)v15, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1D469C630(v20, (uint64_t)v9, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
      v21 = sub_1D480D9C8(v15, v9);
      sub_1D4697DE0((uint64_t)v9, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
      v22 = (uint64_t)v15;
      v23 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType;
      goto LABEL_9;
    }
    v24 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType;
    v25 = (uint64_t)v15;
  }
  sub_1D4697DE0(v25, v24);
  sub_1D46992EC((uint64_t)v19, &qword_1EFEABC80);
  v21 = 0;
  return v21 & 1;
}

uint64_t sub_1D480E08C(_QWORD *a1, char *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v6 = sub_1D492201C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v19 - v11;
  if (*a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1))
  {
    v13 = a3(0);
    v14 = (char *)a1 + *(int *)(v13 + 24);
    v15 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v15(v12, v14, v6);
    v15(v10, &a2[*(int *)(v13 + 24)], v6);
    sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v16 = sub_1D49225E0();
    v17 = *(void (**)(char *, uint64_t))(v7 + 8);
    v17(v10, v6);
    v17(v12, v6);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

unint64_t sub_1D480E1D4()
{
  unint64_t result;

  result = qword_1ED98DF30;
  if (!qword_1ED98DF30)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4935868, &type metadata for Argos_Protos_MLModel_ImageFeatureType.ColorSpace);
    atomic_store(result, (unint64_t *)&qword_1ED98DF30);
  }
  return result;
}

uint64_t type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98DF58);
}

unint64_t sub_1D480E22C()
{
  unint64_t result;

  result = qword_1ED98DE70;
  if (!qword_1ED98DE70)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4935820, &type metadata for Argos_Protos_MLModel_ArrayFeatureType.ArrayDataType);
    atomic_store(result, (unint64_t *)&qword_1ED98DE70);
  }
  return result;
}

uint64_t type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98DEB8);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98DD30);
}

uint64_t sub_1D480E298(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  _OWORD *v36;
  _OWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  void (*v48)(_OWORD *, _OWORD *, uint64_t);
  unsigned int (*v49)(_OWORD *, uint64_t);
  uint64_t v50;
  char *__dsta;
  _OWORD *__dst;
  char *__dstb;
  char *v54;
  uint64_t v55;
  char *v56;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v6;
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      v7 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      v8 = v7[6];
      v9 = (_QWORD *)(a1 + v8);
      v10 = (uint64_t *)((char *)a2 + v8);
      v11 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      v12 = *(_QWORD *)(v11 - 8);
      v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
      swift_bridgeObjectRetain();
      if (v13(v10, 1, v11))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DEC8);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *v9 = *v10;
        if (EnumCaseMultiPayload == 1)
          v23 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
        else
          v23 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
        __dsta = (char *)v10 + v23;
        v54 = (char *)v9 + v23;
        v24 = sub_1D492201C();
        v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25(v54, __dsta, v24);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v7 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      v16 = v7[6];
      v17 = (_QWORD *)(a1 + v16);
      v18 = (uint64_t *)((char *)a2 + v16);
      v19 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v26 = sub_1D492201C();
          v48 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
          v48(v17, v18, v26);
          v27 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
          v28 = *(int *)(v27 + 20);
          v50 = v27;
          __dst = (_OWORD *)((char *)v17 + v28);
          v29 = (_OWORD *)((char *)v18 + v28);
          v30 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
          v47 = *(_QWORD *)(v30 - 8);
          v55 = v30;
          v49 = *(unsigned int (**)(_OWORD *, uint64_t))(v47 + 48);
          if (v49(v29, 1))
          {
            v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
            memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
          }
          else
          {
            *__dst = *v29;
            v48((_OWORD *)((char *)__dst + *(int *)(v55 + 24)), (_OWORD *)((char *)v29 + *(int *)(v55 + 24)), v26);
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v55);
          }
          v35 = *(int *)(v50 + 24);
          v36 = (_OWORD *)((char *)v17 + v35);
          v37 = (_OWORD *)((char *)v18 + v35);
          if (((unsigned int (*)(_OWORD *, uint64_t, uint64_t))v49)(v37, 1, v55))
          {
            v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
            memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          }
          else
          {
            *v36 = *v37;
            v48((_OWORD *)((char *)v36 + *(int *)(v55 + 24)), (_OWORD *)((char *)v37 + *(int *)(v55 + 24)), v26);
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v36, 0, 1, v55);
          }
        }
        else
        {
          *v17 = *v18;
          v32 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
          __dstb = (char *)v18 + v32;
          v56 = (char *)v17 + v32;
          v33 = sub_1D492201C();
          v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
          swift_bridgeObjectRetain();
          v34(v56, __dstb, v33);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
    }
    v39 = v7[7];
    v40 = a1 + v39;
    v41 = (uint64_t)a2 + v39;
    *(_QWORD *)v40 = *(_QWORD *)v41;
    *(_BYTE *)(v40 + 8) = *(_BYTE *)(v41 + 8);
    v42 = v7[8];
    v43 = a1 + v42;
    v44 = (uint64_t)a2 + v42;
    v45 = sub_1D492201C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D480E780(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    v2 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
    v3 = a1 + *(int *)(v2 + 24);
    v4 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4))
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      swift_bridgeObjectRelease();
      if (EnumCaseMultiPayload == 1)
        v6 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
      else
        v6 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
      goto LABEL_13;
    }
  }
  else
  {
    v2 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
    v3 = a1 + *(int *)(v2 + 24);
    v7 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v3, 1, v7))
    {
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        swift_bridgeObjectRelease();
        v6 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
LABEL_13:
        v15 = v3 + *(int *)(v6 + 20);
        v16 = sub_1D492201C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
        goto LABEL_14;
      }
      v8 = sub_1D492201C();
      v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
      v9(v3, v8);
      v10 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
      v11 = v3 + *(int *)(v10 + 20);
      v12 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
      v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48);
      if (!v13(v11, 1, v12))
        v9(v11 + *(int *)(v12 + 24), v8);
      v14 = v3 + *(int *)(v10 + 24);
      if (!v13(v14, 1, v12))
        v9(v14 + *(int *)(v12 + 24), v8);
    }
  }
LABEL_14:
  v17 = a1 + *(int *)(v2 + 32);
  v18 = sub_1D492201C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

uint64_t sub_1D480E984(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(_QWORD *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  _OWORD *v33;
  _OWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  void (*v45)(_OWORD *, _OWORD *, uint64_t);
  unsigned int (*v46)(_OWORD *, uint64_t);
  uint64_t v47;
  char *__dsta;
  _OWORD *__dst;
  char *__dstb;
  char *v51;
  uint64_t v52;
  char *v53;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v5 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
    v6 = v5[6];
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    v9 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DEC8);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v7 = *v8;
      if (EnumCaseMultiPayload == 1)
        v20 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
      else
        v20 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
      __dsta = (char *)v8 + v20;
      v51 = (char *)v7 + v20;
      v21 = sub_1D492201C();
      v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      v22(v51, __dsta, v21);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v5 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
    v13 = v5[6];
    v14 = (_QWORD *)(a1 + v13);
    v15 = (_QWORD *)(a2 + v13);
    v16 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v23 = sub_1D492201C();
        v45 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
        v45(v14, v15, v23);
        v24 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
        v25 = *(int *)(v24 + 20);
        v47 = v24;
        __dst = (_OWORD *)((char *)v14 + v25);
        v26 = (_OWORD *)((char *)v15 + v25);
        v27 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
        v44 = *(_QWORD *)(v27 - 8);
        v52 = v27;
        v46 = *(unsigned int (**)(_OWORD *, uint64_t))(v44 + 48);
        if (v46(v26, 1))
        {
          v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
          memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          *__dst = *v26;
          v45((_OWORD *)((char *)__dst + *(int *)(v52 + 24)), (_OWORD *)((char *)v26 + *(int *)(v52 + 24)), v23);
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v44 + 56))(__dst, 0, 1, v52);
        }
        v32 = *(int *)(v47 + 24);
        v33 = (_OWORD *)((char *)v14 + v32);
        v34 = (_OWORD *)((char *)v15 + v32);
        if (((unsigned int (*)(_OWORD *, uint64_t, uint64_t))v46)(v34, 1, v52))
        {
          v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          *v33 = *v34;
          v45((_OWORD *)((char *)v33 + *(int *)(v52 + 24)), (_OWORD *)((char *)v34 + *(int *)(v52 + 24)), v23);
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v33, 0, 1, v52);
        }
      }
      else
      {
        *v14 = *v15;
        v29 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
        __dstb = (char *)v15 + v29;
        v53 = (char *)v14 + v29;
        v30 = sub_1D492201C();
        v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
        swift_bridgeObjectRetain();
        v31(v53, __dstb, v30);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  v36 = v5[7];
  v37 = a1 + v36;
  v38 = a2 + v36;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  v39 = v5[8];
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1D480EE38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(_QWORD *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(_QWORD *, uint64_t);
  uint64_t v50;
  char *__dsta;
  _QWORD *__dst;
  char *__dstb;
  char *v54;
  uint64_t v55;
  char *v56;

  if (a1 != a2)
  {
    sub_1D4697DE0(a1, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v4 = *(_QWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v4;
      v5 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      v6 = v5[6];
      v7 = (_QWORD *)(a1 + v6);
      v8 = (_QWORD *)(a2 + v6);
      v9 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      v10 = *(_QWORD *)(v9 - 8);
      v11 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
      swift_bridgeObjectRetain();
      if (v11(v8, 1, v9))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DEC8);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *v7 = *v8;
        if (EnumCaseMultiPayload == 1)
          v20 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
        else
          v20 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
        __dsta = (char *)v8 + v20;
        v54 = (char *)v7 + v20;
        v21 = sub_1D492201C();
        v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v22(v54, __dsta, v21);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v5 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      v13 = v5[6];
      v14 = (_QWORD *)(a1 + v13);
      v15 = (_QWORD *)(a2 + v13);
      v16 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v23 = sub_1D492201C();
          v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
          v48 = v23;
          ((void (*)(_QWORD *, _QWORD *))v24)(v14, v15);
          v25 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
          v26 = *(int *)(v25 + 20);
          v50 = v25;
          __dst = (_QWORD *)((char *)v14 + v26);
          v27 = (_QWORD *)((char *)v15 + v26);
          v28 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
          v47 = *(_QWORD *)(v28 - 8);
          v55 = v28;
          v49 = *(unsigned int (**)(_QWORD *, uint64_t))(v47 + 48);
          v46 = v24;
          if (v49(v27, 1))
          {
            v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
            memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          }
          else
          {
            *__dst = *v27;
            __dst[1] = v27[1];
            v24((char *)__dst + *(int *)(v55 + 24), (char *)v27 + *(int *)(v55 + 24), v48);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v55);
          }
          v33 = *(int *)(v50 + 24);
          v34 = (_QWORD *)((char *)v14 + v33);
          v35 = (_QWORD *)((char *)v15 + v33);
          if (((unsigned int (*)(_QWORD *, uint64_t, uint64_t))v49)(v35, 1, v55))
          {
            v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
            memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
          }
          else
          {
            *v34 = *v35;
            v34[1] = v35[1];
            v46((char *)v34 + *(int *)(v55 + 24), (char *)v35 + *(int *)(v55 + 24), v48);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v34, 0, 1, v55);
          }
        }
        else
        {
          *v14 = *v15;
          v30 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
          __dstb = (char *)v15 + v30;
          v56 = (char *)v14 + v30;
          v31 = sub_1D492201C();
          v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
          swift_bridgeObjectRetain();
          v32(v56, __dstb, v31);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
    }
    v37 = v5[7];
    v38 = a1 + v37;
    v39 = (uint64_t *)(a2 + v37);
    v40 = *v39;
    *(_BYTE *)(v38 + 8) = *((_BYTE *)v39 + 8);
    *(_QWORD *)v38 = v40;
    v41 = v5[8];
    v42 = a1 + v41;
    v43 = a2 + v41;
    v44 = sub_1D492201C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D480F328(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  void (*v46)(_OWORD *, _OWORD *, uint64_t);
  unsigned int (*v47)(_OWORD *, uint64_t);
  uint64_t v48;
  _OWORD *__dst;
  uint64_t v50;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v5 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
    v6 = v5[6];
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    v9 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DEC8);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v18 = swift_getEnumCaseMultiPayload();
      *v7 = *v8;
      if (v18 == 1)
        v19 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
      else
        v19 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
      v20 = (char *)v7 + v19;
      v21 = (char *)v8 + v19;
      v22 = sub_1D492201C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  else
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    v5 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
    v12 = v5[6];
    v13 = (_QWORD *)(a1 + v12);
    v14 = (_QWORD *)(a2 + v12);
    v15 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v23 = sub_1D492201C();
        v46 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
        v46(v13, v14, v23);
        v24 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
        v25 = *(int *)(v24 + 20);
        v48 = v24;
        __dst = (_OWORD *)((char *)v13 + v25);
        v26 = (_OWORD *)((char *)v14 + v25);
        v27 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
        v45 = *(_QWORD *)(v27 - 8);
        v50 = v27;
        v47 = *(unsigned int (**)(_OWORD *, uint64_t))(v45 + 48);
        if (v47(v26, 1))
        {
          v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
          memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          *__dst = *v26;
          v46((_OWORD *)((char *)__dst + *(int *)(v50 + 24)), (_OWORD *)((char *)v26 + *(int *)(v50 + 24)), v23);
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v45 + 56))(__dst, 0, 1, v50);
        }
        v33 = *(int *)(v48 + 24);
        v34 = (_OWORD *)((char *)v13 + v33);
        v35 = (_OWORD *)((char *)v14 + v33);
        if (((unsigned int (*)(_OWORD *, uint64_t, uint64_t))v47)(v35, 1, v50))
        {
          v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
          memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          *v34 = *v35;
          v46((_OWORD *)((char *)v34 + *(int *)(v50 + 24)), (_OWORD *)((char *)v35 + *(int *)(v50 + 24)), v23);
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v34, 0, 1, v50);
        }
      }
      else
      {
        *v13 = *v14;
        v29 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
        v30 = (char *)v13 + v29;
        v31 = (char *)v14 + v29;
        v32 = sub_1D492201C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  v37 = v5[7];
  v38 = a1 + v37;
  v39 = a2 + v37;
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *(_BYTE *)(v38 + 8) = *(_BYTE *)(v39 + 8);
  v40 = v5[8];
  v41 = a1 + v40;
  v42 = a2 + v40;
  v43 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1D480F7B8(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  void (*v46)(_OWORD *, _OWORD *, uint64_t);
  unsigned int (*v47)(_OWORD *, uint64_t);
  uint64_t v48;
  _OWORD *__dst;
  uint64_t v50;

  if (a1 != a2)
  {
    sub_1D4697DE0(a1, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_QWORD *)a1 = *(_QWORD *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      v5 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      v6 = v5[6];
      v7 = (_QWORD *)(a1 + v6);
      v8 = (_QWORD *)(a2 + v6);
      v9 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DEC8);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        v18 = swift_getEnumCaseMultiPayload();
        *v7 = *v8;
        if (v18 == 1)
          v19 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
        else
          v19 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
        v20 = (char *)v7 + v19;
        v21 = (char *)v8 + v19;
        v22 = sub_1D492201C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
    }
    else
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v5 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      v12 = v5[6];
      v13 = (_QWORD *)(a1 + v12);
      v14 = (_QWORD *)(a2 + v12);
      v15 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v23 = sub_1D492201C();
          v46 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
          v46(v13, v14, v23);
          v24 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
          v25 = *(int *)(v24 + 20);
          v48 = v24;
          __dst = (_OWORD *)((char *)v13 + v25);
          v26 = (_OWORD *)((char *)v14 + v25);
          v27 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
          v45 = *(_QWORD *)(v27 - 8);
          v50 = v27;
          v47 = *(unsigned int (**)(_OWORD *, uint64_t))(v45 + 48);
          if (v47(v26, 1))
          {
            v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
            memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
          }
          else
          {
            *__dst = *v26;
            v46((_OWORD *)((char *)__dst + *(int *)(v50 + 24)), (_OWORD *)((char *)v26 + *(int *)(v50 + 24)), v23);
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v45 + 56))(__dst, 0, 1, v50);
          }
          v33 = *(int *)(v48 + 24);
          v34 = (_OWORD *)((char *)v13 + v33);
          v35 = (_OWORD *)((char *)v14 + v33);
          if (((unsigned int (*)(_OWORD *, uint64_t, uint64_t))v47)(v35, 1, v50))
          {
            v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
            memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
          }
          else
          {
            *v34 = *v35;
            v46((_OWORD *)((char *)v34 + *(int *)(v50 + 24)), (_OWORD *)((char *)v35 + *(int *)(v50 + 24)), v23);
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v34, 0, 1, v50);
          }
        }
        else
        {
          *v13 = *v14;
          v29 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
          v30 = (char *)v13 + v29;
          v31 = (char *)v14 + v29;
          v32 = sub_1D492201C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
    }
    v37 = v5[7];
    v38 = a1 + v37;
    v39 = a2 + v37;
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *(_BYTE *)(v38 + 8) = *(_BYTE *)(v39 + 8);
    v40 = v5[8];
    v41 = a1 + v40;
    v42 = a2 + v40;
    v43 = sub_1D492201C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D480FC60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D48101C8(a1, a2, a3, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
}

uint64_t *sub_1D480FC74(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v7 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
    else
      v7 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1D492201C();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D480FD9C(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
    v3 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
  else
    v3 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
  v4 = a1 + *(int *)(v3 + 20);
  v5 = sub_1D492201C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1D480FE04(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
    v5 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
  else
    v5 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1D492201C();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1D480FEF8(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_1D4697DE0((uint64_t)a1, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v5 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
    else
      v5 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1D492201C();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_1D4810004(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
    v5 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
  else
    v5 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1D492201C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1D48100D0(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1D4697DE0((uint64_t)a1, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v5 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
    else
      v5 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1D492201C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D48101B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D48101C8(a1, a2, a3, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
}

uint64_t sub_1D48101C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  uint64_t result;
  unint64_t v7;
  unint64_t v8;

  result = a4(319);
  if (v7 <= 0x3F)
  {
    result = a5(319);
    if (v8 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1D481024C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  void (*v7)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_OWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v27;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1D492201C();
      v7 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      v27 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
      v8 = *(int *)(v27 + 20);
      v9 = (_OWORD *)((char *)a1 + v8);
      v10 = (_OWORD *)((char *)a2 + v8);
      v11 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
      v12 = *(_QWORD *)(v11 - 8);
      v13 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48);
      if (v13(v10, 1, v11))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        *v9 = *v10;
        v7((uint64_t *)((char *)v9 + *(int *)(v11 + 24)), (uint64_t *)((char *)v10 + *(int *)(v11 + 24)), v6);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      v21 = v6;
      v22 = *(int *)(v27 + 24);
      v23 = (_OWORD *)((char *)a1 + v22);
      v24 = (_OWORD *)((char *)a2 + v22);
      if (v13(v24, 1, v11))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        *v23 = *v24;
        v7((uint64_t *)((char *)v23 + *(int *)(v11 + 24)), (uint64_t *)((char *)v24 + *(int *)(v11 + 24)), v21);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v23, 0, 1, v11);
      }
    }
    else
    {
      *a1 = *a2;
      v16 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = sub_1D492201C();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v17, v18, v19);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

