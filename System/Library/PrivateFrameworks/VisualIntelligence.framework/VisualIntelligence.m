id _VISharedAnalytics()
{
  if (_VISharedAnalytics_onceToken[0] != -1)
    dispatch_once(_VISharedAnalytics_onceToken, &__block_literal_global);
  return (id)_VISharedAnalytics_analytics;
}

void VIAnalyticsLogStartEntryPoint(uint64_t a1, void *a2)
{
  VIAnalyticsLogStartEntryPointWithEvent(a1, a2, 28);
}

void VIAnalyticsLogStartEntryPointWithEvent(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  NSObject *v6;
  void *v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  if (!a3)
  {
    if (+[VILogger shouldLogMessage](_TtC18VisualIntelligence8VILogger, "shouldLogMessage"))
    {
      +[VILogger log](_TtC18VisualIntelligence8VILogger, "log");
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        v8 = 138412290;
        v9 = v5;
        _os_log_impl(&dword_1D467C000, v6, OS_LOG_TYPE_ERROR, "VIAnalyticsLogStartEntryPointWithEvent passed SFViewAppearEventUnknown from %@", (uint8_t *)&v8, 0xCu);
      }

    }
    a3 = 28;
  }
  +[VIAEntryPointEvent startEventWithQueryID:viewAppearEvent:originatingApplication:](VIAEntryPointEvent, "startEventWithQueryID:viewAppearEvent:originatingApplication:", a1, a3, v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  +[VIAnalytics logEvent:](VIAnalytics, "logEvent:", v7);

}

void VIAnalyticsLogEndEntryPoint(uint64_t a1)
{
  id v1;

  +[VIAEntryPointEvent endEventWithOriginatingApplication:](VIAEntryPointEvent, "endEventWithOriginatingApplication:", a1);
  v1 = (id)objc_claimAutoreleasedReturnValue();
  +[VIAnalytics logEvent:](VIAnalytics, "logEvent:", v1);

}

void VIAnalyticsLogCacheHit(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  VIACacheHitEvent *v11;
  id v12;
  uint8_t buf[4];
  id v14;
  _QWORD v15[3];
  _QWORD v16[4];

  v16[3] = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v15[0] = CFSTR("com.apple.argos.cache_hit_context_key.query_id");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLongLong:", a1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v16[0] = v6;
  v15[1] = CFSTR("com.apple.argos.cache_hit_context_key.cached_result_query_id");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLongLong:", a2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v15[2] = CFSTR("com.apple.argos.cache_hit_context_key.application_id");
  v16[1] = v7;
  v16[2] = v5;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v16, v15, 3);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v12 = 0;
  +[VIACacheHitContext contextWithDictionary:error:](VIACacheHitContext, "contextWithDictionary:error:", v8, &v12);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v12;
  if (v9)
  {
    v11 = -[VIACacheHitEvent initWithContext:]([VIACacheHitEvent alloc], "initWithContext:", v9);
    +[VIAnalytics logEvent:](VIAnalytics, "logEvent:", v11);
  }
  else
  {
    if (!+[VILogger shouldLogMessage](_TtC18VisualIntelligence8VILogger, "shouldLogMessage"))
      goto LABEL_4;
    +[VILogger log](_TtC18VisualIntelligence8VILogger, "log");
    v11 = (VIACacheHitEvent *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(&v11->super, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543362;
      v14 = v10;
      _os_log_impl(&dword_1D467C000, &v11->super, OS_LOG_TYPE_ERROR, "Could not create VIACacheHitContext: %{public}@", buf, 0xCu);
    }
  }

LABEL_4:
}

void VIAnalyticsLogCacheHitWithContext(void *a1)
{
  id v1;
  VIACacheHitEvent *v2;

  v1 = a1;
  v2 = -[VIACacheHitEvent initWithContext:]([VIACacheHitEvent alloc], "initWithContext:", v1);

  +[VIAnalytics logEvent:](VIAnalytics, "logEvent:", v2);
}

__CVBuffer *VIRotateCVPixelBufferUsingVTSessionToUp(__CVBuffer *a1, int a2)
{
  NSObject *v3;
  int v4;
  __CVBuffer *v5;
  size_t Width;
  size_t Height;
  BOOL v8;
  size_t v9;
  OSType PixelFormatType;
  uint8_t buf[16];

  switch(a2)
  {
    case 0:
      if (+[VILogger shouldLogMessage](_TtC18VisualIntelligence8VILogger, "shouldLogMessage"))
      {
        +[VILogger log](_TtC18VisualIntelligence8VILogger, "log");
        v3 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_1D467C000, v3, OS_LOG_TYPE_ERROR, "Invalid from orientation", buf, 2u);
        }

      }
      return a1;
    case 1:
      return a1;
    case 2:
      v4 = 0;
      goto LABEL_15;
    case 3:
      v4 = 0;
      goto LABEL_15;
    case 4:
      v4 = 0;
      goto LABEL_15;
    case 5:
      v4 = 1;
      goto LABEL_15;
    case 6:
      v4 = 1;
      goto LABEL_15;
    case 7:
      v4 = 1;
      goto LABEL_15;
    case 8:
      v4 = 1;
      goto LABEL_15;
    default:
      v4 = 0;
LABEL_15:
      v5 = 0;
      if (!VTPixelRotationSessionCreateWithRotationAndFlip())
      {
        Width = CVPixelBufferGetWidth(a1);
        Height = CVPixelBufferGetHeight(a1);
        v8 = v4 == 0;
        if (v4)
          v9 = Height;
        else
          v9 = Width;
        if (v8)
          Width = Height;
        PixelFormatType = CVPixelBufferGetPixelFormatType(a1);
        v5 = VICreateCVPixelBufferWithFormat(v9, Width, PixelFormatType);
        if (v5 && VTPixelRotationSessionRotateImage(0, a1, v5))
        {
          CVPixelBufferRelease(v5);
          v5 = 0;
        }
        CFRelease(0);
      }
      return v5;
  }
}

id _VIQueryContextMapperError(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  _QWORD v11[2];
  _QWORD v12[3];

  v12[2] = *MEMORY[0x1E0C80C00];
  v3 = (void *)MEMORY[0x1E0CB3940];
  v4 = a2;
  objc_msgSend(v3, "stringWithFormat:", CFSTR("Unsatisfied value type for key: %@"), a1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("The expected type is: %@"), v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = *MEMORY[0x1E0CB2D80];
  v11[0] = *MEMORY[0x1E0CB2D50];
  v11[1] = v7;
  v12[0] = v5;
  v12[1] = v6;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v12, v11, 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("com.apple.argos.query_context.error_domain"), 2, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

id _VIQueryContextMapperStringValueParseError(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  _QWORD v11[2];
  _QWORD v12[3];

  v12[2] = *MEMORY[0x1E0C80C00];
  v3 = (void *)MEMORY[0x1E0CB3940];
  v4 = a2;
  objc_msgSend(v3, "stringWithFormat:", CFSTR("Unsatisfied value string format for key: %@"), a1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("The value with error is: %@"), v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = *MEMORY[0x1E0CB2D80];
  v11[0] = *MEMORY[0x1E0CB2D50];
  v11[1] = v7;
  v12[0] = v5;
  v12[1] = v6;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v12, v11, 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("com.apple.argos.query_context.error_domain"), 3, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

void sub_1D4681570(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D46816F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void __clang_call_terminate(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

void sub_1D4681E6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  void *v11;

  if (__p)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_1D4682034(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, void *a14, uint64_t a15)
{
  void *v15;
  void *v16;

  if (__p)
    operator delete(__p);
  if (a14)
    operator delete(a14);

  _Unwind_Resume(a1);
}

void sub_1D4682118(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1D4682210(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *std::vector<long long>::vector(_QWORD *a1, unint64_t a2, _QWORD *a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    std::vector<long long>::__vallocate[abi:ne180100](a1, a2);
    v6 = (_QWORD *)a1[1];
    v7 = &v6[a2];
    v8 = 8 * a2;
    do
    {
      *v6++ = *a3;
      v8 -= 8;
    }
    while (v8);
    a1[1] = v7;
  }
  return a1;
}

void sub_1D46822C0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<long long>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 61)
    std::vector<long long>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

void std::vector<long long>::__throw_length_error[abi:ne180100]()
{
  std::__throw_length_error[abi:ne180100]("vector");
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(8 * a2);
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E97FA3C0, MEMORY[0x1E0DE42D0]);
}

void sub_1D46823A0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5020] + 16);
  return result;
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  std::bad_array_new_length *exception;
  std::bad_array_new_length *v1;

  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x1E0DE4E98], MEMORY[0x1E0DE4390]);
}

_QWORD *std::vector<float>::vector(_QWORD *a1, unint64_t a2, _DWORD *a3)
{
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    std::vector<float>::__vallocate[abi:ne180100](a1, a2);
    v6 = (_DWORD *)a1[1];
    v7 = &v6[a2];
    v8 = 4 * a2;
    do
    {
      *v6++ = *a3;
      v8 -= 4;
    }
    while (v8);
    a1[1] = v7;
  }
  return a1;
}

void sub_1D4682464(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<float>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 62)
    std::vector<long long>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<float>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(4 * a2);
}

_QWORD *std::vector<float>::vector(_QWORD *a1, unint64_t a2)
{
  char *v4;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    std::vector<float>::__vallocate[abi:ne180100](a1, a2);
    v4 = (char *)a1[1];
    bzero(v4, 4 * a2);
    a1[1] = &v4[4 * a2];
  }
  return a1;
}

void sub_1D468254C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

size_t VIPixelBufferSize(__CVBuffer *a1)
{
  size_t Width;

  Width = CVPixelBufferGetWidth(a1);
  CVPixelBufferGetHeight(a1);
  return Width;
}

id VIImageDomainInfoFromKeys(void *a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  VIImageRegionDomainInfo *v10;
  void *v11;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = (void *)objc_opt_new();
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v3 = v1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v15;
    v7 = *MEMORY[0x1E0C9D538];
    v8 = *(double *)(MEMORY[0x1E0C9D538] + 8);
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v15 != v6)
          objc_enumerationMutation(v3);
        BYTE4(v13) = 0;
        LODWORD(v13) = 1;
        v10 = -[VIImageRegionDomainInfo initWithDomainKey:labelName:glyphName:displayLabel:displayMessage:hasFocalPoint:focalPoint:isCornerGlyph:ocrResultsRequired:barcodeResultsRequired:isLowConfidence:shouldShowDynamicGlyph:]([VIImageRegionDomainInfo alloc], "initWithDomainKey:labelName:glyphName:displayLabel:displayMessage:hasFocalPoint:focalPoint:isCornerGlyph:ocrResultsRequired:barcodeResultsRequired:isLowConfidence:shouldShowDynamicGlyph:", *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * v9), 0, 0, 0, 0, 0, v7, v8, v13);
        objc_msgSend(v2, "addObject:", v10);

        ++v9;
      }
      while (v5 != v9);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v5);
  }

  v11 = (void *)objc_msgSend(v2, "copy");
  return v11;
}

id VIImageDomainKeysFromInfo(void *a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = (void *)objc_opt_new();
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v3 = v1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v12;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v12 != v6)
          objc_enumerationMutation(v3);
        objc_msgSend(*(id *)(*((_QWORD *)&v11 + 1) + 8 * v7), "domainKey", (_QWORD)v11);
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v2, "addObject:", v8);

        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v5);
  }

  v9 = (void *)objc_msgSend(v2, "copy");
  return v9;
}

CVPixelBufferRef VICreateCVPixelBufferWithFormat(size_t a1, size_t a2, OSType a3)
{
  uint64_t v6;
  const __CFDictionary *v7;
  const __CFAllocator *v8;
  CVReturn v9;
  size_t v10;
  size_t v11;
  NSObject *v12;
  CVPixelBufferRef v13;
  CVPixelBufferRef pixelBufferOut;
  uint8_t buf[4];
  size_t v17;
  __int16 v18;
  size_t v19;
  __int16 v20;
  size_t v21;
  __int16 v22;
  size_t v23;
  _QWORD v24[2];
  _QWORD v25[3];

  v25[2] = *MEMORY[0x1E0C80C00];
  pixelBufferOut = 0;
  v6 = *MEMORY[0x1E0CA8F68];
  v24[0] = *MEMORY[0x1E0CA8FF0];
  v24[1] = v6;
  v25[0] = MEMORY[0x1E0C9AA70];
  v25[1] = &unk_1E981F348;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v25, v24, 2);
  v7 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue();
  v8 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
  v9 = CVPixelBufferCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], a1, a2, a3, v7, &pixelBufferOut);
  if (CVPixelBufferIsPlanar(pixelBufferOut) && ((a2 | a1) & 1) != 0)
  {
    CVPixelBufferRelease(pixelBufferOut);
    pixelBufferOut = 0;
    if (a1 == 1)
      v10 = 2;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFFFELL;
    if (a2 == 1)
      v11 = 2;
    else
      v11 = a2 & 0xFFFFFFFFFFFFFFFELL;
    if (+[VILogger shouldLogMessage](_TtC18VisualIntelligence8VILogger, "shouldLogMessage"))
    {
      +[VILogger log](_TtC18VisualIntelligence8VILogger, "log");
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 134218752;
        v17 = a1;
        v18 = 2048;
        v19 = a2;
        v20 = 2048;
        v21 = v10;
        v22 = 2048;
        v23 = v11;
        _os_log_impl(&dword_1D467C000, v12, OS_LOG_TYPE_ERROR, "VIImageScaler: requested to create odd size planar image %zu x %zu, closest even image is allocated %zu x %zu", buf, 0x2Au);
      }

    }
    v9 = CVPixelBufferCreate(v8, v10, v11, a3, v7, &pixelBufferOut);
  }
  if (v9)
    v13 = 0;
  else
    v13 = pixelBufferOut;

  return v13;
}

uint64_t _VTModifyPixelBufferWithColor(__CVBuffer *a1, unsigned int a2)
{
  size_t Height;
  size_t BytesPerRow;
  NSObject *v6;
  size_t v8;
  char *BaseAddress;
  uint64_t v10;
  __int128 v11;
  size_t i;
  char *v13;
  __int16 v14[8];

  CVPixelBufferLockBaseAddress(a1, 0);
  Height = CVPixelBufferGetHeight(a1);
  BytesPerRow = CVPixelBufferGetBytesPerRow(a1);
  if ((BytesPerRow & 0x3F) != 0)
  {
    if (+[VILogger shouldLogMessage](_TtC18VisualIntelligence8VILogger, "shouldLogMessage"))
    {
      +[VILogger log](_TtC18VisualIntelligence8VILogger, "log");
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        v14[0] = 0;
        _os_log_impl(&dword_1D467C000, v6, OS_LOG_TYPE_ERROR, "VIImageScaler: Failed to modify PixelBuffer: only 64 byte aligned buffers are supported", (uint8_t *)v14, 2u);
      }

    }
    return 4294945519;
  }
  else
  {
    v8 = BytesPerRow;
    BaseAddress = (char *)CVPixelBufferGetBaseAddress(a1);
    if (Height)
    {
      v10 = 0;
      *(int32x2_t *)&v11 = vdup_n_s32(a2);
      *((_QWORD *)&v11 + 1) = v11;
      do
      {
        if (v8)
        {
          for (i = 0; i < v8; i += 64)
          {
            v13 = &BaseAddress[i];
            *(_OWORD *)v13 = v11;
            *((_OWORD *)v13 + 1) = v11;
            *((_OWORD *)v13 + 2) = v11;
            *((_OWORD *)v13 + 3) = v11;
          }
        }
        ++v10;
        BaseAddress += 64 * (v8 >> 6);
      }
      while (v10 != Height);
    }
    CVPixelBufferUnlockBaseAddress(a1, 0);
    return 0;
  }
}

double VIRectIntegral(__CVBuffer *a1, int a2, double a3, double a4, double a5, double a6)
{
  int IsPlanar;
  double (*v13)(double, double, double, double);
  double v14;

  IsPlanar = CVPixelBufferIsPlanar(a1);
  v13 = _CGRectIntegralEven;
  if (!IsPlanar)
    v13 = (double (*)(double, double, double, double))MEMORY[0x1E0C9D5F0];
  v14 = v13(a3, a4, a5, a6);
  if (a2)
  {
    VIPixelBufferSize(a1);
    if (CVPixelBufferIsPlanar(a1))
      __asm { FMOV            V1.2D, #0.5 }
    if (v14 < 0.0)
      return 0.0;
  }
  return v14;
}

void sub_1D468AD04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t VIvnCropScaleToVi(unint64_t a1)
{
  if (a1 < 3)
    return a1 + 1;
  else
    return 0;
}

void VIPredictionInNormalizedImageCoordinates(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, CGFloat a10, CGFloat a11, CGFloat a12, CGFloat a13)
{
  double width;
  double height;
  double v29;
  double v30;
  double v31;
  double v32;
  BOOL v33;
  float v34;
  float v35;
  double v36;
  double v37;
  double v38;
  double v39;
  float v40;
  double v41;
  double v42;
  double v43;
  double v44;
  CGAffineTransform *v45;
  float v46;
  float v47;
  float v48;
  float v49;
  float v50;
  double v51;
  double v52;
  double v55[6];
  CGAffineTransform v56;
  _QWORD v57[6];
  CGRect v58;
  CGRect v59;
  CGRect v60;

  v60.origin.x = a10;
  v60.origin.y = a11;
  v60.size.width = a12;
  v60.size.height = a13;
  v58.origin.x = 0.0;
  v58.origin.y = 0.0;
  v58.size.width = 1.0;
  v58.size.height = 1.0;
  v59 = CGRectIntersection(v58, v60);
  width = v59.size.width;
  height = v59.size.height;
  if (!CGRectIsNull(v59))
  {
    v29 = a6 * width / (a7 * height);
    v30 = a5;
    v31 = a8 / a9;
    v32 = a4;
    switch(a1)
    {
      case 1:
        v33 = v31 <= v29;
        v46 = v29 / v31;
        v47 = 0.0;
        v48 = v31 / v29;
        v49 = (float)(v48 + -1.0) * 0.5;
        if (v33)
        {
          v49 = 0.0;
          v47 = (float)(v46 + -1.0) * 0.5;
          v48 = 1.0;
          v50 = v46;
        }
        else
        {
          v50 = 1.0;
        }
        v55[0] = 1.0 / v50;
        v55[1] = 0.0;
        v55[2] = 0.0;
        v55[3] = 1.0 / v48;
        v55[4] = (float)(v47 / v50);
        v55[5] = (float)(v49 / v48);
        v45 = (CGAffineTransform *)v55;
        goto LABEL_18;
      case 2:
      case 4:
        v33 = v31 <= v29;
        v34 = v29 / v31;
        v35 = (float)(v34 + -1.0) * -0.5;
        v36 = v34;
        v37 = v35;
        v38 = 1.0;
        v39 = 0.0;
        v40 = v31 / v29;
        v41 = v40;
        v42 = (float)((float)(v40 + -1.0) * -0.5);
        if (v33)
          v43 = v37;
        else
          v43 = 0.0;
        if (v33)
        {
          v44 = v36;
        }
        else
        {
          v39 = v42;
          v44 = 1.0;
        }
        if (!v33)
          v38 = v41;
        if (a1 == 2)
        {
          *(double *)v57 = v38;
          v57[1] = 0;
          v57[2] = 0;
          *(double *)&v57[3] = v44;
          *(double *)&v57[4] = v39;
          *(double *)&v57[5] = v43;
          v45 = (CGAffineTransform *)v57;
        }
        else
        {
          v56.a = v38;
          v56.b = 0.0;
          v56.c = 0.0;
          v56.d = v44;
          v56.tx = 0.0;
          v56.ty = 0.0;
          v45 = &v56;
        }
LABEL_18:
        v51 = a2;
        v52 = a3;
        CGRectApplyAffineTransform(*(CGRect *)(&v32 - 2), v45);
        break;
      default:
        return;
    }
  }
}

double _CGRectIntegralEven(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double v8;
  double v9;
  CGFloat v10;
  CGRect v12;

  v8 = floor(a1 * 0.5);
  v9 = round(v8 + v8);
  v10 = a1;
  CGRectGetMaxX(*(CGRect *)(&a2 - 1));
  v12.origin.x = a1;
  v12.origin.y = a2;
  v12.size.width = a3;
  v12.size.height = a4;
  CGRectGetMaxY(v12);
  return v9;
}

id _VIServiceNilInputError()
{
  uint64_t v0;
  void *v1;
  void *v2;
  _QWORD v4[2];
  _QWORD v5[3];

  v5[2] = *MEMORY[0x1E0C80C00];
  v0 = *MEMORY[0x1E0CB2D80];
  v4[0] = *MEMORY[0x1E0CB2D50];
  v4[1] = v0;
  v5[0] = CFSTR("Unsatisfied parameters.");
  v5[1] = CFSTR("Please check for nil input parameters.");
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v5, v4, 2);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("com.apple.argos.objective_c"), -1, v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

uint64_t VIObjectIsEqual(unint64_t a1, uint64_t a2)
{
  if (a1 | a2)
    return objc_msgSend((id)a1, "isEqual:", a2);
  else
    return 1;
}

BOOL VICompareFloat(float a1, float a2)
{
  float v2;

  v2 = vabds_f32(a1, a2);
  return v2 < (float)(fabsf(a1 + a2) * 0.00000011921) || v2 < 1.1755e-38;
}

BOOL VICompareDouble(double a1, double a2)
{
  double v2;

  v2 = vabdd_f64(a1, a2);
  return v2 < fabs(a1 + a2) * 2.22044605e-16 || v2 < 2.22507386e-308;
}

BOOL VICompareUInt64(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

BOOL VICompareCGRect(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v8;
  double v9;
  double v11;
  double v12;
  double v14;
  double v15;
  double v17;

  v8 = vabdd_f64(a1, a5);
  v9 = fabs(a1 + a5) * 2.22044605e-16;
  if (v8 >= 2.22507386e-308 && v8 >= v9)
    return 0;
  v11 = vabdd_f64(a2, a6);
  v12 = fabs(a2 + a6) * 2.22044605e-16;
  if (v11 >= 2.22507386e-308 && v11 >= v12)
    return 0;
  v14 = vabdd_f64(a3, a7);
  v15 = fabs(a3 + a7) * 2.22044605e-16;
  if (v14 >= 2.22507386e-308 && v14 >= v15)
    return 0;
  v17 = vabdd_f64(a4, a8);
  return v17 < fabs(a4 + a8) * 2.22044605e-16 || v17 < 2.22507386e-308;
}

uint64_t VICompactMapArray(void *a1, void *a2)
{
  id v3;
  void (**v4)(id, _QWORD);
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = (void *)objc_opt_new();
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v6 = v3;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v15;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v15 != v9)
          objc_enumerationMutation(v6);
        v4[2](v4, *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * v10));
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        if (v11)
          objc_msgSend(v5, "addObject:", v11, (_QWORD)v14);

        ++v10;
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v8);
  }

  v12 = objc_msgSend(v5, "copy");
  return v12;
}

uint64_t VIFlatMapArray(void *a1, void *a2)
{
  id v3;
  void (**v4)(id, _QWORD);
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = (void *)objc_opt_new();
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v6 = v3;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v15;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v15 != v9)
          objc_enumerationMutation(v6);
        v4[2](v4, *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * v10));
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        if (v11)
          objc_msgSend(v5, "addObjectsFromArray:", v11, (_QWORD)v14);

        ++v10;
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v8);
  }

  v12 = objc_msgSend(v5, "copy");
  return v12;
}

double VIFlipOriginNormalizedRect(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double MinX;
  CGRect v10;
  CGRect v11;
  CGRect v12;

  MinX = CGRectGetMinX(*(CGRect *)&a1);
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.width = a3;
  v10.size.height = a4;
  CGRectGetMaxY(v10);
  v11.origin.x = a1;
  v11.origin.y = a2;
  v11.size.width = a3;
  v11.size.height = a4;
  CGRectGetWidth(v11);
  v12.origin.x = a1;
  v12.origin.y = a2;
  v12.size.width = a3;
  v12.size.height = a4;
  CGRectGetHeight(v12);
  return MinX;
}

void sub_1D46912E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1D46918AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

id VIACacheHitContextMapperError(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  _QWORD v11[2];
  _QWORD v12[3];

  v12[2] = *MEMORY[0x1E0C80C00];
  v3 = (void *)MEMORY[0x1E0CB3940];
  v4 = a2;
  objc_msgSend(v3, "stringWithFormat:", CFSTR("Unsatisfied value type for key: %@"), a1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("The expected type is: %@"), v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = *MEMORY[0x1E0CB2D80];
  v11[0] = *MEMORY[0x1E0CB2D50];
  v11[1] = v7;
  v12[0] = v5;
  v12[1] = v6;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v12, v11, 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("com.apple.argos.cache_hit_context.error_domain"), 2, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

id VIACacheHitContextMapperMissingValueError(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  uint64_t v5;
  _QWORD v6[2];

  v6[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Missing required value for key: %@"), a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = *MEMORY[0x1E0CB2D50];
  v6[0] = v1;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v6, &v5, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("com.apple.argos.cache_hit_context.error_domain"), 3, v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id _descriptionForFloatArray(void *a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  float v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = objc_alloc_init(MEMORY[0x1E0CB37A0]);
  objc_msgSend(v2, "appendString:", CFSTR("["));
  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  v3 = v1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v4)
  {
    v5 = v4;
    v6 = 0;
    v7 = *(_QWORD *)v12;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v12 != v7)
          objc_enumerationMutation(v3);
        objc_msgSend(*(id *)(*((_QWORD *)&v11 + 1) + 8 * v8), "floatValue");
        objc_msgSend(v2, "appendFormat:", CFSTR("%0.8f"), v9);
        if (v6 + 1 + v8 < (unint64_t)objc_msgSend(v3, "count"))
          objc_msgSend(v2, "appendString:", CFSTR(", "));
        ++v8;
      }
      while (v5 != v8);
      v6 += v5;
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v5);
  }

  objc_msgSend(v2, "appendString:", CFSTR("]"));
  return v2;
}

__CVBuffer *VIRescaleCVPixelBufferUsingVTSession(__CVBuffer *a1, double a2)
{
  __CVBuffer *v3;
  double Width;
  size_t Height;
  double v6;
  double v7;
  __CVBuffer *v8;
  VTPixelTransferSessionRef v9;
  NSObject *v10;
  size_t v11;
  size_t v12;
  OSType PixelFormatType;
  OSType v14;
  VTPixelTransferSessionRef pixelTransferSessionOut;
  uint8_t buf[4];
  size_t v18;
  __int16 v19;
  size_t v20;
  __int16 v21;
  OSType v22;
  __int16 v23;
  uint64_t v24;
  __int16 v25;
  uint64_t v26;
  __int16 v27;
  OSType v28;
  uint64_t v29;

  v3 = a1;
  v29 = *MEMORY[0x1E0C80C00];
  Width = (double)CVPixelBufferGetWidth(a1);
  Height = CVPixelBufferGetHeight(v3);
  v6 = (double)Height;
  if (Width >= (double)Height)
    v7 = (double)Height;
  else
    v7 = Width;
  if (v7 > a2)
  {
    pixelTransferSessionOut = 0;
    v8 = 0;
    if (!VTPixelTransferSessionCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], &pixelTransferSessionOut))
    {
      v8 = VICreateCVPixelBufferWithFormat((int)(a2 / v7 * Width), (int)(a2 / v7 * v6), 0x42475241u);
      v9 = pixelTransferSessionOut;
      if (v8)
      {
        if (VTPixelTransferSessionTransferImage(pixelTransferSessionOut, v3, v8))
        {
          CVPixelBufferRelease(v8);
          v8 = 0;
        }
        else if (+[VILogger shouldLogMessage](_TtC18VisualIntelligence8VILogger, "shouldLogMessage"))
        {
          +[VILogger log](_TtC18VisualIntelligence8VILogger, "log");
          v10 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
          {
            v11 = CVPixelBufferGetWidth(v3);
            v12 = CVPixelBufferGetHeight(v3);
            PixelFormatType = CVPixelBufferGetPixelFormatType(v3);
            v14 = CVPixelBufferGetPixelFormatType(v8);
            *(_DWORD *)buf = 134219264;
            v18 = v11;
            v19 = 2048;
            v20 = v12;
            v21 = 1024;
            v22 = PixelFormatType;
            v23 = 2048;
            v24 = (int)(a2 / v7 * Width);
            v25 = 2048;
            v26 = (int)(a2 / v7 * v6);
            v27 = 1024;
            v28 = v14;
            _os_log_impl(&dword_1D467C000, v10, OS_LOG_TYPE_DEBUG, "VIPrescaling (w, h, pixtype): from (%zu, %zu, %d) to (%zu, %zu, %d)", buf, 0x36u);
          }

        }
        v9 = pixelTransferSessionOut;
      }
      CFRelease(v9);
    }
    return v8;
  }
  return v3;
}

void _HashItem(void *a1, _QWORD *a2)
{
  void *v3;
  id v4;
  void *v5;
  id v6;
  const void *v7;
  CC_LONG v8;
  id v9;
  _QWORD *v10;
  id v11;

  v3 = (void *)MEMORY[0x1E0C99DF0];
  v4 = a1;
  objc_msgSend(v3, "dataWithLength:", 32);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_retainAutorelease(v4);
  v7 = (const void *)objc_msgSend(v6, "bytes");
  v8 = objc_msgSend(v6, "length");

  v9 = objc_retainAutorelease(v5);
  CC_SHA256(v7, v8, (unsigned __int8 *)objc_msgSend(v9, "mutableBytes"));
  v11 = objc_retainAutorelease(v9);
  v10 = (_QWORD *)objc_msgSend(v11, "bytes");
  *a2 = *v10;
  a2[1] = v10[1];

}

id VIAllVisualSearchDomains()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD v6[2];
  _QWORD v7[5];
  _QWORD v8[19];

  v8[18] = *MEMORY[0x1E0C80C00];
  v0 = (void *)MEMORY[0x1E0C99E20];
  v8[0] = CFSTR("com.apple.argos.domain_key.art");
  v8[1] = CFSTR("com.apple.argos.domain_key.book");
  v8[2] = CFSTR("com.apple.argos.domain_key.cats");
  v8[3] = CFSTR("com.apple.argos.domain_key.dogs");
  v8[4] = CFSTR("com.apple.argos.domain_key.nature");
  v8[5] = CFSTR("com.apple.argos.domain_key.media");
  v8[6] = CFSTR("com.apple.argos.domain_key.landmark");
  v8[7] = CFSTR("com.apple.argos.domain_key.object2D");
  v8[8] = CFSTR("com.apple.argos.domain_key.album");
  v8[9] = CFSTR("com.apple.argos.domain_key.animals");
  v8[10] = CFSTR("com.apple.argos.domain_key.naturalLandmark");
  v8[11] = CFSTR("com.apple.argos.domain_key.sculpture");
  v8[12] = CFSTR("com.apple.argos.domain_key.skyline");
  v8[13] = CFSTR("com.apple.argos.domain_key.insects");
  v8[14] = CFSTR("com.apple.argos.domain_key.birds");
  v8[15] = CFSTR("com.apple.argos.domain_key.reptiles");
  v8[16] = CFSTR("com.apple.argos.domain_key.mammals");
  v8[17] = CFSTR("com.apple.argos.domain_key.storefront");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v8, 18);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setWithArray:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  if (+[VIFeatureFlags isVisualLookUpDawnDomainsEnabled](VIFeatureFlags, "isVisualLookUpDawnDomainsEnabled"))
  {
    v7[0] = CFSTR("com.apple.argos.domain_key.food");
    v7[1] = CFSTR("com.apple.argos.domain_key.laundryCareSymbol");
    v7[2] = CFSTR("com.apple.argos.domain_key.autoSymbol");
    v7[3] = CFSTR("com.apple.argos.domain_key.brandLogoSymbol");
    v7[4] = CFSTR("com.apple.argos.domain_key.signSymbol");
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v7, 5);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "addObjectsFromArray:", v3);

  }
  if (+[VIFeatureFlags isVisualLookUpDawnDomainsCPEnabled](VIFeatureFlags, "isVisualLookUpDawnDomainsCPEnabled"))
  {
    v6[0] = CFSTR("com.apple.argos.domain_key.apparel");
    v6[1] = CFSTR("com.apple.argos.domain_key.accessories");
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v6, 2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "addObjectsFromArray:", v4);

  }
  return v2;
}

uint64_t VIIsSettingsEnabledForLookup()
{
  void *v0;
  void *v1;
  uint64_t v2;

  v0 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99EA0]), "initWithSuiteName:", CFSTR("com.apple.spotlightui"));
  objc_msgSend(v0, "objectForKey:", CFSTR("SBSearchDisabledDomains"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "containsObject:", CFSTR("DOMAIN_PARSEC")) ^ 1;

  return v2;
}

VisualIntelligence::OntologyGraph __swiftcall OntologyGraph.init(definitionFilePath:bundle:useTrialDefaults:)(Swift::String_optional definitionFilePath, NSBundle_optional bundle, Swift::Bool useTrialDefaults)
{
  _QWORD *v3;
  Class isa;
  _QWORD *v5;
  char v6;
  uint64_t v7;
  VisualIntelligence::OntologyGraph result;
  uint64_t v9;

  isa = bundle.value.super.isa;
  v5 = v3;
  if (bundle.is_nil)
  {
    swift_bridgeObjectRelease();
    v6 = sub_1D473117C();
    type metadata accessor for TrialWrapper();
    swift_initStackObject();
    sub_1D48BEC44((v6 & 1) == 0);
    sub_1D48BEE58(7, 0, 1852797802, 0xE400000000000000);
    sub_1D4695360(v7, 0, &v9);
    swift_release();

  }
  else
  {
    sub_1D4695360(0, bundle.value.super.isa, &v9);
  }
  *v5 = v9;
  return result;
}

void sub_1D4695360(uint64_t a1@<X3>, void *a2@<X4>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  uint64_t ObjCClassFromMetadata;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  BOOL v32;
  unint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  int64_t v42;
  unint64_t v43;
  int64_t v44;
  uint64_t *v45;
  uint64_t v46;
  char isUniquelyReferenced_nonNull_native;
  char v48;
  unint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  void *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  id v70;
  _QWORD *v71;
  uint64_t v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76[6];

  v71 = a3;
  v76[4] = *(id *)MEMORY[0x1E0C80C00];
  v5 = sub_1D4920F18();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = a2;
  if (a1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = a2;
    if (a2)
    {
      v10 = a2;
    }
    else
    {
      type metadata accessor for VisualIntelligenceService(0);
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    }
    v12 = v9;
    v13 = (void *)sub_1D49225F8();
    swift_bridgeObjectRelease();
    v14 = (void *)sub_1D49225F8();
    v15 = objc_msgSend(v10, sel_pathForResource_ofType_, v13, v14);

    if (v15)
    {
      sub_1D492261C();

    }
    else
    {

    }
  }
  sub_1D4920EA0();
  swift_bridgeObjectRelease();
  v16 = sub_1D4920F24();
  v18 = v17;
  sub_1D484D52C(v16, v17);
  v21 = v20;
  v23 = v22;
  sub_1D4696F10(v16, v18);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v24 = (void *)objc_opt_self();
  v25 = (void *)sub_1D4920F60();
  v76[0] = 0;
  v26 = objc_msgSend(v24, sel_JSONObjectWithData_options_error_, v25, 2, v76);

  if (!v26)
  {
    v59 = v76[0];
    v60 = (void *)sub_1D4920E64();

    swift_willThrow();
    sub_1D4696F10(v21, v23);

LABEL_10:
    v19 = (_QWORD *)sub_1D47C361C(MEMORY[0x1E0DEE9D8]);

    goto LABEL_11;
  }
  v27 = v76[0];
  sub_1D4922AE4();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D1F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1D4696F10(v21, v23);
    goto LABEL_10;
  }
  v28 = sub_1D4695A38(v75);
  swift_bridgeObjectRelease();
  if (v28 >> 62)
    goto LABEL_68;
  v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_16:
  v61 = v21;
  v62 = v23;
  v65 = v28;
  if (v29)
  {
    v30 = 0;
    v67 = v28 & 0xC000000000000001;
    v63 = v28 + 32;
    v64 = v28 & 0xFFFFFFFFFFFFFF8;
    v19 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v66 = v29;
    while (1)
    {
      if (v67)
      {
        v31 = MEMORY[0x1D8261F20](v30, v65);
        v32 = __OFADD__(v30, 1);
        v33 = v30 + 1;
        if (v32)
          goto LABEL_66;
      }
      else
      {
        if (v30 >= *(_QWORD *)(v64 + 16))
          goto LABEL_67;
        v31 = swift_retain();
        v32 = __OFADD__(v30, 1);
        v33 = v30 + 1;
        if (v32)
        {
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          swift_bridgeObjectRetain();
          v29 = sub_1D4922C4C();
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
      }
      v68 = v31;
      v69 = v33;
      v28 = v31;
      v34 = sub_1D46962DC();
      v35 = 0;
      v36 = *(_QWORD *)(v34 + 64);
      v72 = v34 + 64;
      v37 = 1 << *(_BYTE *)(v34 + 32);
      if (v37 < 64)
        v38 = ~(-1 << v37);
      else
        v38 = -1;
      v39 = v38 & v36;
      v73 = (unint64_t)(v37 + 63) >> 6;
      v74 = v34;
      while (1)
      {
        if (v39)
        {
          v40 = __clz(__rbit64(v39));
          v39 &= v39 - 1;
          v41 = v40 | (v35 << 6);
          goto LABEL_47;
        }
        v42 = v35 + 1;
        if (__OFADD__(v35, 1))
          goto LABEL_64;
        if (v42 >= v73)
          break;
        v43 = *(_QWORD *)(v72 + 8 * v42);
        ++v35;
        if (!v43)
        {
          v35 = v42 + 1;
          if (v42 + 1 >= v73)
            break;
          v43 = *(_QWORD *)(v72 + 8 * v35);
          if (!v43)
          {
            v35 = v42 + 2;
            if (v42 + 2 >= v73)
              break;
            v43 = *(_QWORD *)(v72 + 8 * v35);
            if (!v43)
            {
              v44 = v42 + 3;
              if (v44 >= v73)
                break;
              v43 = *(_QWORD *)(v72 + 8 * v44);
              if (!v43)
              {
                while (1)
                {
                  v35 = v44 + 1;
                  if (__OFADD__(v44, 1))
                    goto LABEL_65;
                  if (v35 >= v73)
                    goto LABEL_18;
                  v43 = *(_QWORD *)(v72 + 8 * v35);
                  ++v44;
                  if (v43)
                    goto LABEL_46;
                }
              }
              v35 = v44;
            }
          }
        }
LABEL_46:
        v39 = (v43 - 1) & v43;
        v41 = __clz(__rbit64(v43)) + (v35 << 6);
LABEL_47:
        v45 = (uint64_t *)(*(_QWORD *)(v74 + 48) + 16 * v41);
        v21 = *v45;
        v46 = v45[1];
        v23 = *(_QWORD *)(*(_QWORD *)(v74 + 56) + 8 * v41);
        swift_retain_n();
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v76[0] = v19;
        v28 = (unint64_t)v19;
        v49 = sub_1D47CA4DC(v21, v46);
        v50 = v19[2];
        v51 = (v48 & 1) == 0;
        v52 = v50 + v51;
        if (__OFADD__(v50, v51))
        {
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
          goto LABEL_66;
        }
        v53 = v48;
        if (v19[3] >= v52)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v19 = v76[0];
            if ((v48 & 1) != 0)
              goto LABEL_29;
          }
          else
          {
            v28 = (unint64_t)v76;
            sub_1D47ACE0C();
            v19 = v76[0];
            if ((v53 & 1) != 0)
              goto LABEL_29;
          }
        }
        else
        {
          sub_1D47A2B84(v52, isUniquelyReferenced_nonNull_native);
          v28 = (unint64_t)v76[0];
          v54 = sub_1D47CA4DC(v21, v46);
          if ((v53 & 1) != (v55 & 1))
          {
            sub_1D4922E8C();
            __break(1u);
            return;
          }
          v49 = v54;
          v19 = v76[0];
          if ((v53 & 1) != 0)
          {
LABEL_29:
            v28 = v19[7];
            swift_release();
            *(_QWORD *)(v28 + 8 * v49) = v23;
            goto LABEL_30;
          }
        }
        v19[(v49 >> 6) + 8] |= 1 << v49;
        v56 = (uint64_t *)(v19[6] + 16 * v49);
        *v56 = v21;
        v56[1] = v46;
        *(_QWORD *)(v19[7] + 8 * v49) = v23;
        v57 = v19[2];
        v32 = __OFADD__(v57, 1);
        v58 = v57 + 1;
        if (v32)
          goto LABEL_63;
        v19[2] = v58;
        swift_bridgeObjectRetain();
LABEL_30:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_18:
      swift_release();
      swift_release();
      v30 = v69;
      if (v69 == v66)
        goto LABEL_61;
    }
  }
  v19 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_61:
  sub_1D4696F10(v61, v62);

  swift_bridgeObjectRelease();
LABEL_11:
  *v71 = v19;
}

uint64_t sub_1D4695A38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t i;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t *v37;
  void *v38;
  void *v39;
  uint64_t *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[2];
  unint64_t v59;
  char *v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;

  v2 = sub_1D4922370();
  v66 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v4 = (char *)v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0DEE9D8];
  v73 = MEMORY[0x1E0DEE9D8];
  v65 = *(_QWORD *)(a1 + 16);
  if (v65)
  {
    v6 = a1 + 32;
    v58[1] = a1;
    swift_bridgeObjectRetain();
    v7 = 0;
    v60 = "neric";
    v59 = 0x80000001D493F830;
    *(_QWORD *)&v8 = 136315138;
    v61 = v8;
    v62 = a1 + 32;
    v63 = MEMORY[0x1E0DEE9B8] + 8;
    while (1)
    {
      v9 = *(_QWORD *)(v6 + 8 * v7);
      v10 = *(_QWORD *)(v9 + 16);
      swift_bridgeObjectRetain();
      if (v10)
      {
        v11 = sub_1D47CA4DC(0x64695F676BLL, 0xE500000000000000);
        if ((v12 & 1) != 0)
        {
          sub_1D4696FAC(*(_QWORD *)(v9 + 56) + 32 * v11, (uint64_t)&v71);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v13 = v70;
            v14 = v9;
            if (*(_QWORD *)(v9 + 16)
              && (v15 = v69, v16 = sub_1D47CA4DC(1701667182, 0xE400000000000000), (v17 & 1) != 0)
              && (sub_1D4696FAC(*(_QWORD *)(v14 + 56) + 32 * v16, (uint64_t)&v71), (swift_dynamicCast() & 1) != 0))
            {
              v18 = v6;
              v64 = v7;
              v19 = v70;
              if (*(_QWORD *)(v14 + 16))
              {
                v20 = v69;
                v21 = sub_1D47CA4DC(0x6E6572646C696863, 0xE800000000000000);
                if ((v22 & 1) != 0)
                {
                  sub_1D4696FAC(*(_QWORD *)(v14 + 56) + 32 * v21, (uint64_t)&v71);
                  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D1F0);
                  if ((swift_dynamicCast() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    v23 = sub_1D4695A38(v69);
                    swift_bridgeObjectRelease();
                    v71 = v20;
                    v72 = v19;
                    v69 = 0x20646E6120;
                    v70 = 0xE500000000000000;
                    v67 = 32;
                    v68 = 0xE100000000000000;
                    sub_1D4696FE8();
                    v71 = sub_1D4922A9C();
                    v72 = v24;
                    v69 = 2106912;
                    v70 = 0xE300000000000000;
                    v67 = 32;
                    v68 = 0xE100000000000000;
                    sub_1D4922A9C();
                    swift_bridgeObjectRelease();
                    sub_1D492267C();
                    swift_bridgeObjectRelease();
                    v25 = sub_1D469702C();
                    v27 = v26;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    type metadata accessor for OntologyGraph.Node();
                    v28 = (_QWORD *)swift_allocObject();
                    swift_weakInit();
                    v28[2] = v25;
                    v28[3] = v27;
                    v28[4] = v15;
                    v28[5] = v13;
                    v28[6] = v23;
                    swift_weakAssign();
                    if (v23 >> 62)
                    {
                      swift_bridgeObjectRetain();
                      result = sub_1D4922C4C();
                      v29 = result;
                      if (result)
                      {
LABEL_14:
                        if (v29 < 1)
                        {
                          __break(1u);
                          return result;
                        }
                        for (i = 0; i != v29; ++i)
                        {
                          if ((v23 & 0xC000000000000001) != 0)
                            MEMORY[0x1D8261F20](i, v23);
                          else
                            swift_retain();
                          swift_weakAssign();
                          swift_release();
                        }
                      }
                    }
                    else
                    {
                      v29 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
                      result = swift_bridgeObjectRetain();
                      if (v29)
                        goto LABEL_14;
                    }
                    swift_bridgeObjectRelease();
                    v57 = swift_retain();
                    MEMORY[0x1D8261B78](v57);
                    if (*(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
                      sub_1D4922844();
                    sub_1D492285C();
                    sub_1D4922838();
                    swift_release();
                    v6 = v62;
                    v7 = v64;
                    goto LABEL_37;
                  }
                }
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v7 = v64;
              v6 = v18;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
          }
        }
      }
      if (qword_1ED98F398 != -1)
        swift_once();
      if (byte_1ED98F388 != 1)
      {
LABEL_32:
        v40 = qword_1ED98F3B0;
        if (qword_1ED98F3D0 != -1)
        {
          swift_once();
          v40 = qword_1ED98F3B0;
        }
        goto LABEL_34;
      }
      v31 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
      v32 = objc_msgSend(v31, sel_bundleIdentifier);

      if (v32)
      {
        v33 = sub_1D492261C();
        v35 = v34;

        if (v33 == 0xD00000000000002BLL && v35 == v59)
        {
          swift_bridgeObjectRelease();
LABEL_25:
          v37 = &qword_1EFEAA908;
          if (qword_1EFEA9C20 != -1)
          {
            swift_once();
            v37 = &qword_1EFEAA908;
          }
          goto LABEL_29;
        }
        v36 = sub_1D4922E38();
        swift_bridgeObjectRelease();
        if ((v36 & 1) != 0)
          goto LABEL_25;
      }
      v37 = (uint64_t *)&off_1ED98F3F0;
      if (qword_1ED98F3A8 != -1)
      {
        swift_once();
        v37 = (uint64_t *)&off_1ED98F3F0;
      }
LABEL_29:
      v38 = *(void **)(*v37 + 32);
      swift_retain();
      v39 = (void *)sub_1D49225F8();
      LODWORD(v38) = objc_msgSend(v38, sel_BOOLForKey_, v39);
      swift_release();

      if (!(_DWORD)v38)
        goto LABEL_32;
      v40 = qword_1EFEAAA30;
      if (qword_1EFEA9C78 != -1)
      {
        swift_once();
        v40 = qword_1EFEAAA30;
      }
LABEL_34:
      v41 = __swift_project_value_buffer(v2, (uint64_t)v40);
      (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v4, v41, v2);
      swift_bridgeObjectRetain();
      v42 = sub_1D4922358();
      v43 = sub_1D492291C();
      if (os_log_type_enabled(v42, v43))
      {
        v44 = swift_slowAlloc();
        v45 = swift_slowAlloc();
        v71 = v45;
        *(_DWORD *)v44 = v61;
        swift_bridgeObjectRetain();
        v46 = sub_1D4922550();
        v64 = v7;
        v47 = v4;
        v48 = v2;
        v49 = v46;
        v51 = v50;
        swift_bridgeObjectRelease();
        v52 = v49;
        v53 = v66;
        v54 = v62;
        *(_QWORD *)(v44 + 4) = sub_1D47F0250(v52, v51, &v71);
        swift_bridgeObjectRelease_n();
        v6 = v54;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D467C000, v42, v43, "Incorrect ontology definitions. Current value: %s", (uint8_t *)v44, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D82635B8](v45, -1, -1);
        MEMORY[0x1D82635B8](v44, -1, -1);

        v55 = *(void (**)(char *, uint64_t))(v53 + 8);
        v4 = v47;
        v2 = v48;
        v56 = v48;
        v7 = v64;
        v55(v47, v56);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v4, v2);
      }
LABEL_37:
      if (++v7 == v65)
      {
        swift_bridgeObjectRelease();
        return v73;
      }
    }
  }
  return result;
}

uint64_t sub_1D46962DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  BOOL v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  _QWORD *v49;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v49 = v4;
  sub_1D47AA6E0(v1, v2, v3, isUniquelyReferenced_nonNull_native);
  v6 = v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v1 + 48);
  if (v7 >> 62)
    goto LABEL_50;
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v8)
  {
    v9 = 0;
    v43 = v7;
    v44 = v7 & 0xC000000000000001;
    v41 = v7 & 0xFFFFFFFFFFFFFF8;
    v42 = v8;
    while (1)
    {
      if (v44)
      {
        v10 = MEMORY[0x1D8261F20](v9, v7);
        v11 = __OFADD__(v9, 1);
        v12 = v9 + 1;
        if (v11)
          break;
        goto LABEL_11;
      }
      if (v9 >= *(_QWORD *)(v41 + 16))
        goto LABEL_49;
      v10 = swift_retain();
      v11 = __OFADD__(v9, 1);
      v12 = v9 + 1;
      if (v11)
        break;
LABEL_11:
      v45 = v12;
      v7 = v10;
      v13 = sub_1D46962DC();
      v14 = 0;
      v46 = v13 + 64;
      v15 = 1 << *(_BYTE *)(v13 + 32);
      if (v15 < 64)
        v16 = ~(-1 << v15);
      else
        v16 = -1;
      v17 = v16 & *(_QWORD *)(v13 + 64);
      v47 = (unint64_t)(v15 + 63) >> 6;
      v48 = v13;
      while (1)
      {
        if (v17)
        {
          v19 = __clz(__rbit64(v17));
          v17 &= v17 - 1;
          v20 = v19 | (v14 << 6);
          goto LABEL_33;
        }
        v21 = v14 + 1;
        if (__OFADD__(v14, 1))
          goto LABEL_46;
        if (v21 >= v47)
          break;
        v22 = *(_QWORD *)(v46 + 8 * v21);
        ++v14;
        if (!v22)
        {
          v14 = v21 + 1;
          if (v21 + 1 >= v47)
            break;
          v22 = *(_QWORD *)(v46 + 8 * v14);
          if (!v22)
          {
            v14 = v21 + 2;
            if (v21 + 2 >= v47)
              break;
            v22 = *(_QWORD *)(v46 + 8 * v14);
            if (!v22)
            {
              v23 = v21 + 3;
              if (v23 >= v47)
                break;
              v22 = *(_QWORD *)(v46 + 8 * v23);
              if (!v22)
              {
                while (1)
                {
                  v14 = v23 + 1;
                  if (__OFADD__(v23, 1))
                    goto LABEL_47;
                  if (v14 >= v47)
                    goto LABEL_4;
                  v22 = *(_QWORD *)(v46 + 8 * v14);
                  ++v23;
                  if (v22)
                    goto LABEL_32;
                }
              }
              v14 = v23;
            }
          }
        }
LABEL_32:
        v17 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v14 << 6);
LABEL_33:
        v24 = (uint64_t *)(*(_QWORD *)(v48 + 48) + 16 * v20);
        v26 = *v24;
        v25 = v24[1];
        v27 = *(_QWORD *)(*(_QWORD *)(v48 + 56) + 8 * v20);
        swift_retain_n();
        swift_bridgeObjectRetain();
        v28 = swift_isUniquelyReferenced_nonNull_native();
        v49 = v6;
        v7 = (unint64_t)v6;
        v30 = sub_1D47CA4DC(v26, v25);
        v31 = v6[2];
        v32 = (v29 & 1) == 0;
        v33 = v31 + v32;
        if (__OFADD__(v31, v32))
        {
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
          goto LABEL_48;
        }
        v34 = v29;
        if (v6[3] >= v33)
        {
          if ((v28 & 1) != 0)
          {
            v6 = v49;
            if ((v29 & 1) != 0)
              goto LABEL_15;
          }
          else
          {
            v7 = (unint64_t)&v49;
            sub_1D47ACE0C();
            v6 = v49;
            if ((v34 & 1) != 0)
              goto LABEL_15;
          }
        }
        else
        {
          sub_1D47A2B84(v33, v28);
          v7 = (unint64_t)v49;
          v35 = sub_1D47CA4DC(v26, v25);
          if ((v34 & 1) != (v36 & 1))
          {
            result = sub_1D4922E8C();
            __break(1u);
            return result;
          }
          v30 = v35;
          v6 = v49;
          if ((v34 & 1) != 0)
          {
LABEL_15:
            v18 = v6[7];
            v7 = 8 * v30;
            swift_release();
            *(_QWORD *)(v18 + 8 * v30) = v27;
            goto LABEL_16;
          }
        }
        v6[(v30 >> 6) + 8] |= 1 << v30;
        v37 = (uint64_t *)(v6[6] + 16 * v30);
        *v37 = v26;
        v37[1] = v25;
        *(_QWORD *)(v6[7] + 8 * v30) = v27;
        v38 = v6[2];
        v11 = __OFADD__(v38, 1);
        v39 = v38 + 1;
        if (v11)
          goto LABEL_45;
        v6[2] = v39;
        swift_bridgeObjectRetain();
LABEL_16:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_4:
      swift_release();
      swift_release();
      v7 = v43;
      v9 = v45;
      if (v45 == v42)
        goto LABEL_51;
    }
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    swift_bridgeObjectRetain_n();
    v8 = sub_1D4922C4C();
    swift_bridgeObjectRelease();
  }
LABEL_51:
  swift_bridgeObjectRelease();
  return (uint64_t)v6;
}

void *sub_1D46966E0()
{
  void *result;

  result = (void *)sub_1D47C3734((uint64_t)&unk_1E97FC1A8);
  off_1ED98CC38 = result;
  return result;
}

uint64_t sub_1D4696704(uint64_t a1, uint64_t a2)
{
  return sub_1D4696B44(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1D469671C(uint64_t a1, uint64_t a2)
{
  return sub_1D4696B44(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEA950]);
}

_DWORD *sub_1D4696734@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_1D4696744(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

_QWORD *sub_1D4696750@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1D4696760(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1D4922604();
  *a2 = 0;
  return result;
}

uint64_t sub_1D46967D4(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1D4922610();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1D4696850@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1D492261C();
  v2 = sub_1D49225F8();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

BOOL sub_1D4696894(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

BOOL sub_1D46968A8(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void sub_1D46968BC(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1D46968C8()
{
  sub_1D4696EA4((unint64_t *)&qword_1EFEAA358, (uint64_t (*)(uint64_t))type metadata accessor for CIImageRepresentationOption, (uint64_t)&unk_1D4926FC0);
  sub_1D4696EA4(&qword_1EFEAA360, (uint64_t (*)(uint64_t))type metadata accessor for CIImageRepresentationOption, (uint64_t)&unk_1D4926F14);
  return sub_1D4922C94();
}

uint64_t sub_1D469694C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1D49225F8();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1D4696990@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1D492261C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D46969B8()
{
  sub_1D4696EA4((unint64_t *)&qword_1ED98AE80, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_1D49271C4);
  sub_1D4696EA4(&qword_1EFEAA398, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_1D4927118);
  return sub_1D4922C94();
}

uint64_t sub_1D4696A3C()
{
  sub_1D4696EA4(&qword_1EFEAA300, (uint64_t (*)(uint64_t))type metadata accessor for VNBarcodeSymbology, (uint64_t)&unk_1D4926C00);
  sub_1D4696EA4(&qword_1EFEAA308, (uint64_t (*)(uint64_t))type metadata accessor for VNBarcodeSymbology, (uint64_t)&unk_1D4926BA0);
  return sub_1D4922C94();
}

uint64_t sub_1D4696AC0()
{
  sub_1D4696EA4(&qword_1EFEAA368, (uint64_t (*)(uint64_t))type metadata accessor for VISuggestionType, (uint64_t)&unk_1D4926DB0);
  sub_1D4696EA4((unint64_t *)&unk_1EFEAA370, (uint64_t (*)(uint64_t))type metadata accessor for VISuggestionType, (uint64_t)&unk_1D4926D50);
  return sub_1D4922C94();
}

uint64_t sub_1D4696B44(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1D492261C();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1D4696B80()
{
  sub_1D492261C();
  sub_1D49226D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4696BC0()
{
  uint64_t v0;

  sub_1D492261C();
  sub_1D4922EF8();
  sub_1D49226D0();
  v0 = sub_1D4922F34();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D4696C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1D492261C();
  v2 = v1;
  if (v0 == sub_1D492261C() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void type metadata accessor for CVBuffer(uint64_t a1)
{
  sub_1D46974D0(a1, &qword_1ED98F2F0);
}

void type metadata accessor for VNImageCropAndScaleOption(uint64_t a1)
{
  sub_1D46974D0(a1, &qword_1EFEAA2B8);
}

void type metadata accessor for VTPixelTransferSession(uint64_t a1)
{
  sub_1D46974D0(a1, &qword_1EFEAA2C0);
}

void type metadata accessor for VNBarcodeSymbology(uint64_t a1)
{
  sub_1D46974D0(a1, (unint64_t *)&unk_1EFEAA2C8);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1D46974D0(a1, &qword_1ED98EAE0);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for R1Interval(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for R1Interval(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1D46974D0(a1, &qword_1ED98EB08);
}

uint64_t initializeBufferWithCopyOfBuffer for ImageHandler(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for NormalizedRect(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for NormalizedRect(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_1D46974D0(a1, &qword_1ED98D280);
}

void type metadata accessor for CKContainerEnvironment(uint64_t a1)
{
  sub_1D46974D0(a1, (unint64_t *)&unk_1EFEAA2D8);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1D46974D0(a1, &qword_1ED98D290);
}

uint64_t sub_1D4696E4C()
{
  return sub_1D4696EA4(&qword_1EFEAA2E8, (uint64_t (*)(uint64_t))type metadata accessor for VNBarcodeSymbology, (uint64_t)&unk_1D4926B64);
}

uint64_t sub_1D4696E78()
{
  return sub_1D4696EA4(&qword_1EFEAA2F0, (uint64_t (*)(uint64_t))type metadata accessor for VNBarcodeSymbology, (uint64_t)&unk_1D4926B38);
}

uint64_t sub_1D4696EA4(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1D82634E0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D4696EE4()
{
  return sub_1D4696EA4(&qword_1EFEAA2F8, (uint64_t (*)(uint64_t))type metadata accessor for VNBarcodeSymbology, (uint64_t)&unk_1D4926BD4);
}

uint64_t sub_1D4696F10(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1D82634C8]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_1D4696FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1D4696FE8()
{
  unint64_t result;

  result = qword_1ED98D0C8;
  if (!qword_1ED98D0C8)
  {
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED98D0C8);
  }
  return result;
}

uint64_t sub_1D469702C()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  sub_1D4696FE8();
  v0 = sub_1D4922ACC();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
  {
    swift_bridgeObjectRelease();
    v3 = MEMORY[0x1E0DEE9D8];
    v15 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v15)
      goto LABEL_19;
    goto LABEL_7;
  }
  v31 = MEMORY[0x1E0DEE9D8];
  sub_1D48AB4A4(0, v1, 0);
  v3 = v31;
  v4 = (uint64_t *)(v0 + 56);
  do
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v7 = *(v4 - 1);
    v8 = *v4;
    swift_bridgeObjectRetain();
    v9 = MEMORY[0x1D8261A1C](v5, v6, v7, v8);
    v11 = v10;
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v31 + 16);
    v12 = *(_QWORD *)(v31 + 24);
    if (v13 >= v12 >> 1)
      sub_1D48AB4A4(v12 > 1, v13 + 1, 1);
    *(_QWORD *)(v31 + 16) = v13 + 1;
    v14 = v31 + 16 * v13;
    *(_QWORD *)(v14 + 32) = v9;
    *(_QWORD *)(v14 + 40) = v11;
    v4 += 4;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v31 + 16);
  if (v15)
  {
LABEL_7:
    sub_1D48AB4A4(0, v15, 0);
    v16 = v2;
    v17 = (uint64_t *)(v3 + 40);
    do
    {
      v18 = *(v17 - 1);
      v19 = *v17;
      v20 = qword_1ED98CC40;
      swift_bridgeObjectRetain();
      if (v20 != -1)
        swift_once();
      v21 = off_1ED98CC38;
      if (*((_QWORD *)off_1ED98CC38 + 2))
      {
        swift_bridgeObjectRetain();
        v22 = sub_1D47CA4DC(v18, v19);
        v23 = v19;
        if ((v24 & 1) != 0)
        {
          v25 = (uint64_t *)(v21[7] + 16 * v22);
          v18 = *v25;
          v23 = v25[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v19 = v23;
      }
      v27 = *(_QWORD *)(v16 + 16);
      v26 = *(_QWORD *)(v16 + 24);
      if (v27 >= v26 >> 1)
        sub_1D48AB4A4(v26 > 1, v27 + 1, 1);
      v17 += 2;
      *(_QWORD *)(v16 + 16) = v27 + 1;
      v28 = v16 + 16 * v27;
      *(_QWORD *)(v28 + 32) = v18;
      *(_QWORD *)(v28 + 40) = v19;
      --v15;
    }
    while (v15);
  }
LABEL_19:
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D200);
  sub_1D46972D4();
  v29 = sub_1D49225D4();
  swift_bridgeObjectRelease();
  return v29;
}

unint64_t sub_1D46972D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED98D208;
  if (!qword_1ED98D208)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED98D200);
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED98D208);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1D82634D4](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void type metadata accessor for CIImageRepresentationOption(uint64_t a1)
{
  sub_1D46974D0(a1, (unint64_t *)&unk_1EFEAA310);
}

void type metadata accessor for CGImagePropertyOrientation(uint64_t a1)
{
  sub_1D46974D0(a1, &qword_1ED98ED88);
}

void type metadata accessor for VISuggestionType(uint64_t a1)
{
  sub_1D46974D0(a1, &qword_1EFEAA320);
}

uint64_t sub_1D46973A0()
{
  return sub_1D4696EA4(&qword_1EFEAA328, (uint64_t (*)(uint64_t))type metadata accessor for VISuggestionType, (uint64_t)&unk_1D4926D14);
}

uint64_t sub_1D46973CC()
{
  return sub_1D4696EA4(&qword_1EFEAA330, (uint64_t (*)(uint64_t))type metadata accessor for VISuggestionType, (uint64_t)&unk_1D4926CE8);
}

uint64_t sub_1D46973F8()
{
  return sub_1D4696EA4(&qword_1EFEAA338, (uint64_t (*)(uint64_t))type metadata accessor for VISuggestionType, (uint64_t)&unk_1D4926D84);
}

uint64_t sub_1D4697424()
{
  return sub_1D4696EA4(&qword_1EFEAA340, (uint64_t (*)(uint64_t))type metadata accessor for CIImageRepresentationOption, (uint64_t)&unk_1D4926ED8);
}

uint64_t sub_1D4697450()
{
  return sub_1D4696EA4(&qword_1EFEAA348, (uint64_t (*)(uint64_t))type metadata accessor for CIImageRepresentationOption, (uint64_t)&unk_1D4926EAC);
}

uint64_t sub_1D469747C()
{
  return sub_1D4696EA4(&qword_1EFEAA350, (uint64_t (*)(uint64_t))type metadata accessor for CIImageRepresentationOption, (uint64_t)&unk_1D4926F48);
}

void type metadata accessor for VNImageOption(uint64_t a1)
{
  sub_1D46974D0(a1, &qword_1ED98AE98);
}

void type metadata accessor for VIQueryContextImageType(uint64_t a1)
{
  sub_1D46974D0(a1, &qword_1EFEAA380);
}

void sub_1D46974D0(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1D4697514()
{
  return sub_1D4696EA4(&qword_1EFEAA388, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_1D49270DC);
}

uint64_t sub_1D4697540()
{
  return sub_1D4696EA4(&qword_1EFEAA390, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_1D49270B0);
}

uint64_t sub_1D469756C()
{
  return sub_1D4696EA4((unint64_t *)&unk_1ED98AE88, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_1D492714C);
}

uint64_t *sub_1D46975B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v29;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1D492201C();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = *(int *)(a3 + 28);
    v13 = (char *)v4 + v12;
    v14 = (char *)a2 + v12;
    v15 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98CE10);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *v13 = *v14;
      *(_QWORD *)(v13 + 4) = *(_QWORD *)(v14 + 4);
      v13[12] = v14[12];
      *((_DWORD *)v13 + 4) = *((_DWORD *)v14 + 4);
      v11(&v13[*(int *)(v15 + 36)], &v14[*(int *)(v15 + 36)], v10);
      v19 = *(int *)(v15 + 40);
      v20 = &v13[v19];
      v21 = &v14[v19];
      v22 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold(0);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CDF8);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        v25 = v21[1];
        *v20 = *v21;
        v20[1] = v25;
        *((_DWORD *)v20 + 4) = *((_DWORD *)v21 + 4);
        v26 = *(int *)(v22 + 24);
        v29 = (char *)v20 + v26;
        v27 = (char *)v21 + v26;
        swift_bridgeObjectRetain();
        v11(v29, v27, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t sub_1D46977AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1D492201C();
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v11(v4, v5);
  v6 = a1 + *(int *)(a2 + 28);
  v7 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    v11(v6 + *(int *)(v7 + 36), v5);
    v9 = v6 + *(int *)(v7 + 40);
    v10 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10);
    if (!(_DWORD)result)
    {
      swift_bridgeObjectRelease();
      return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9 + *(int *)(v10 + 24), v5);
    }
  }
  return result;
}

_QWORD *sub_1D46978A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v27;

  *a1 = *a2;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D492201C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 28);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98CE10);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    *(_QWORD *)(v12 + 4) = *(_QWORD *)(v13 + 4);
    v12[12] = v13[12];
    *((_DWORD *)v12 + 4) = *((_DWORD *)v13 + 4);
    v10(&v12[*(int *)(v14 + 36)], &v13[*(int *)(v14 + 36)], v9);
    v17 = *(int *)(v14 + 40);
    v18 = &v12[v17];
    v19 = &v13[v17];
    v20 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CDF8);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v23 = v19[1];
      *v18 = *v19;
      v18[1] = v23;
      *((_DWORD *)v18 + 4) = *((_DWORD *)v19 + 4);
      v24 = *(int *)(v20 + 24);
      v27 = (char *)v18 + v24;
      v25 = (char *)v19 + v24;
      swift_bridgeObjectRetain();
      v10(v27, v25, v9);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_DWORD *sub_1D4697A78(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  int v18;
  void (*v19)(uint64_t, char *, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(uint64_t, char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v44;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D492201C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 28);
  v13 = (uint64_t)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17((uint64_t)v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      *(_BYTE *)v13 = *v14;
      *(_DWORD *)(v13 + 4) = *((_DWORD *)v14 + 1);
      *(_DWORD *)(v13 + 8) = *((_DWORD *)v14 + 2);
      *(_BYTE *)(v13 + 12) = v14[12];
      *(_DWORD *)(v13 + 16) = *((_DWORD *)v14 + 4);
      v11((char *)(v13 + *(int *)(v15 + 36)), &v14[*(int *)(v15 + 36)], v9);
      v29 = *(int *)(v15 + 40);
      v30 = v13 + v29;
      v31 = &v14[v29];
      v32 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold(0);
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
      v35 = v34(v30, 1, v32);
      v36 = v34((uint64_t)v31, 1, v32);
      if (v35)
      {
        if (!v36)
        {
          *(_QWORD *)v30 = *(_QWORD *)v31;
          *(_QWORD *)(v30 + 8) = *((_QWORD *)v31 + 1);
          *(_DWORD *)(v30 + 16) = *((_DWORD *)v31 + 4);
          v37 = *(int *)(v32 + 24);
          v38 = v30 + v37;
          v39 = &v31[v37];
          v40 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 16);
          swift_bridgeObjectRetain();
          v40(v38, v39, v9);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
          return a1;
        }
      }
      else
      {
        if (!v36)
        {
          *(_QWORD *)v30 = *(_QWORD *)v31;
          *(_QWORD *)(v30 + 8) = *((_QWORD *)v31 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_DWORD *)(v30 + 16) = *((_DWORD *)v31 + 4);
          v11((char *)(v30 + *(int *)(v32 + 24)), &v31[*(int *)(v32 + 24)], v9);
          return a1;
        }
        sub_1D4697DE0(v30, type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold);
      }
      v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CDF8) - 8) + 64);
      v27 = (void *)v30;
      v28 = v31;
      goto LABEL_8;
    }
    sub_1D4697DE0(v13, type metadata accessor for Argos_Protos_Queryflow_RefineConfig);
LABEL_7:
    v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98CE10) - 8) + 64);
    v27 = (void *)v13;
    v28 = v14;
LABEL_8:
    memcpy(v27, v28, v26);
    return a1;
  }
  if (v18)
    goto LABEL_7;
  *(_BYTE *)v13 = *v14;
  *(_DWORD *)(v13 + 4) = *((_DWORD *)v14 + 1);
  *(_DWORD *)(v13 + 8) = *((_DWORD *)v14 + 2);
  *(_BYTE *)(v13 + 12) = v14[12];
  *(_DWORD *)(v13 + 16) = *((_DWORD *)v14 + 4);
  v19 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 16);
  v19(v13 + *(int *)(v15 + 36), &v14[*(int *)(v15 + 36)], v9);
  v20 = *(int *)(v15 + 40);
  v21 = (_QWORD *)(v13 + v20);
  v22 = &v14[v20];
  v23 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CDF8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *v21 = *(_QWORD *)v22;
    v21[1] = *((_QWORD *)v22 + 1);
    *((_DWORD *)v21 + 4) = *((_DWORD *)v22 + 4);
    v41 = *(int *)(v23 + 24);
    v44 = (char *)v21 + v41;
    v42 = &v22[v41];
    swift_bridgeObjectRetain();
    v19((uint64_t)v44, v42, v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_1D4697DE0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_QWORD *sub_1D4697E1C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D492201C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 28);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98CE10);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    *(_QWORD *)(v12 + 4) = *(_QWORD *)(v13 + 4);
    v12[12] = v13[12];
    *((_DWORD *)v12 + 4) = *((_DWORD *)v13 + 4);
    v10(&v12[*(int *)(v14 + 36)], &v13[*(int *)(v14 + 36)], v9);
    v17 = *(int *)(v14 + 40);
    v18 = &v12[v17];
    v19 = &v13[v17];
    v20 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CDF8);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v18 = *(_OWORD *)v19;
      v18[4] = v19[4];
      v10((char *)v18 + *(int *)(v20 + 24), (char *)v19 + *(int *)(v20 + 24), v9);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_DWORD *sub_1D4697FD4(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  int v18;
  void (*v19)(uint64_t, char *, uint64_t);
  uint64_t v20;
  _DWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v38;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D492201C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 28);
  v13 = (uint64_t)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17((uint64_t)v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      *(_BYTE *)v13 = *v14;
      *(_QWORD *)(v13 + 4) = *(_QWORD *)(v14 + 4);
      *(_BYTE *)(v13 + 12) = v14[12];
      *(_DWORD *)(v13 + 16) = *((_DWORD *)v14 + 4);
      v11((char *)(v13 + *(int *)(v15 + 36)), &v14[*(int *)(v15 + 36)], v9);
      v29 = *(int *)(v15 + 40);
      v30 = v13 + v29;
      v31 = &v14[v29];
      v32 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold(0);
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
      v35 = v34(v30, 1, v32);
      v36 = v34((uint64_t)v31, 1, v32);
      if (v35)
      {
        if (!v36)
        {
          *(_OWORD *)v30 = *(_OWORD *)v31;
          *(_DWORD *)(v30 + 16) = *((_DWORD *)v31 + 4);
          (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v30 + *(int *)(v32 + 24), &v31[*(int *)(v32 + 24)], v9);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
          return a1;
        }
      }
      else
      {
        if (!v36)
        {
          v38 = *((_QWORD *)v31 + 1);
          *(_QWORD *)v30 = *(_QWORD *)v31;
          *(_QWORD *)(v30 + 8) = v38;
          swift_bridgeObjectRelease();
          *(_DWORD *)(v30 + 16) = *((_DWORD *)v31 + 4);
          v11((char *)(v30 + *(int *)(v32 + 24)), &v31[*(int *)(v32 + 24)], v9);
          return a1;
        }
        sub_1D4697DE0(v30, type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold);
      }
      v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CDF8) - 8) + 64);
      v27 = (void *)v30;
      v28 = v31;
      goto LABEL_8;
    }
    sub_1D4697DE0(v13, type metadata accessor for Argos_Protos_Queryflow_RefineConfig);
LABEL_7:
    v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98CE10) - 8) + 64);
    v27 = (void *)v13;
    v28 = v14;
LABEL_8:
    memcpy(v27, v28, v26);
    return a1;
  }
  if (v18)
    goto LABEL_7;
  *(_BYTE *)v13 = *v14;
  *(_QWORD *)(v13 + 4) = *(_QWORD *)(v14 + 4);
  *(_BYTE *)(v13 + 12) = v14[12];
  *(_DWORD *)(v13 + 16) = *((_DWORD *)v14 + 4);
  v19 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v19(v13 + *(int *)(v15 + 36), &v14[*(int *)(v15 + 36)], v9);
  v20 = *(int *)(v15 + 40);
  v21 = (_DWORD *)(v13 + v20);
  v22 = &v14[v20];
  v23 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CDF8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v21 = *(_OWORD *)v22;
    v21[4] = *((_DWORD *)v22 + 4);
    v19((uint64_t)v21 + *(int *)(v23 + 24), &v22[*(int *)(v23 + 24)], v9);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_1D46982E8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D46982F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1D492201C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(int *)(a3 + 24);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98CE10);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = *(int *)(a3 + 28);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
}

uint64_t sub_1D4698368()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D4698374(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = sub_1D492201C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(int *)(a4 + 24);
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98CE10);
    v9 = *(_QWORD *)(v10 - 8);
    v11 = *(int *)(a4 + 28);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig()
{
  uint64_t result;

  result = qword_1ED98F230;
  if (!qword_1ED98F230)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D469842C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D492201C();
  if (v0 <= 0x3F)
  {
    sub_1D46984C0();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1D46984C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED98EE90)
  {
    type metadata accessor for Argos_Protos_Queryflow_RefineConfig(255);
    v0 = sub_1D4922A60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED98EE90);
  }
}

uint64_t sub_1D4698514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_1D4922328();
  __swift_allocate_value_buffer(v0, qword_1ED9A4C30);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED9A4C30);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D4927210;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "version";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1D4922304();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "refine_config";
  *((_QWORD *)v11 + 1) = 13;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "whole_image_fallback_detector_threshold";
  *(_QWORD *)(v12 + 8) = 39;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_1D4922310();
}

uint64_t sub_1D46986B4()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1D49220AC();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_1D492210C();
          break;
        case 2:
          sub_1D4698778();
          break;
        case 1:
          sub_1D4922178();
          break;
      }
      result = sub_1D49220AC();
    }
  }
  return result;
}

uint64_t sub_1D4698778()
{
  type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig();
  type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
  sub_1D4696EA4(&qword_1ED98CE00, type metadata accessor for Argos_Protos_Queryflow_RefineConfig, (uint64_t)&unk_1D492D8B4);
  return sub_1D492219C();
}

uint64_t sub_1D469880C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_DWORD *)v0 || (result = sub_1D49222D4(), !v1))
  {
    result = sub_1D46988E8(v0);
    if (!v1)
    {
      if (*(float *)(v0 + 4) != 0.0)
        sub_1D492228C();
      type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig();
      return sub_1D4922004();
    }
  }
  return result;
}

uint64_t sub_1D46988E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98CE10);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig();
  sub_1D4698E38(a1 + *(int *)(v9 + 28), (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_1D46992EC((uint64_t)v4, (uint64_t *)&unk_1ED98CE10);
  sub_1D4698E80((uint64_t)v4, (uint64_t)v8);
  sub_1D4696EA4(&qword_1ED98CE00, type metadata accessor for Argos_Protos_Queryflow_RefineConfig, (uint64_t)&unk_1D492D8B4);
  sub_1D49222F8();
  return sub_1D4697DE0((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_RefineConfig);
}

uint64_t sub_1D4698A50@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;

  *a2 = 0;
  sub_1D4922010();
  v4 = (char *)a2 + *(int *)(a1 + 28);
  v5 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
}

unint64_t sub_1D4698AA8()
{
  return 0xD000000000000029;
}

uint64_t sub_1D4698AC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 24);
  v5 = sub_1D492201C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1D4698B08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 24);
  v5 = sub_1D492201C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

void (*sub_1D4698B48())(faiss::NormalizationTransform *__hidden this)
{
  return faiss::NormalizationTransform::~NormalizationTransform;
}

uint64_t sub_1D4698B60()
{
  return sub_1D46986B4();
}

uint64_t sub_1D4698B74()
{
  return sub_1D469880C();
}

uint64_t sub_1D4698B8C()
{
  sub_1D4696EA4(&qword_1EFEAA410, (uint64_t (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig, (uint64_t)&unk_1D4927304);
  return sub_1D4922070();
}

uint64_t sub_1D4698BE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED98E120 != -1)
    swift_once();
  v2 = sub_1D4922328();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED9A4C30);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1D4698C50()
{
  sub_1D4696EA4((unint64_t *)&qword_1ED98E128, (uint64_t (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig, (uint64_t)&unk_1D492733C);
  return sub_1D49221D8();
}

uint64_t sub_1D4698C90()
{
  sub_1D4922EF8();
  sub_1D49225B0();
  return sub_1D4922F34();
}

uint64_t sub_1D4698CE4()
{
  sub_1D4696EA4((unint64_t *)&qword_1ED98E128, (uint64_t (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig, (uint64_t)&unk_1D492733C);
  return sub_1D49221F0();
}

uint64_t sub_1D4698D34()
{
  sub_1D4922EF8();
  sub_1D49225B0();
  return sub_1D4922F34();
}

uint64_t sub_1D4698D88()
{
  return sub_1D4696EA4(&qword_1EFEAA400, (uint64_t (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig, (uint64_t)&unk_1D492724C);
}

uint64_t sub_1D4698DB4()
{
  return sub_1D4696EA4((unint64_t *)&qword_1ED98E128, (uint64_t (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig, (uint64_t)&unk_1D492733C);
}

uint64_t sub_1D4698DE0()
{
  return sub_1D4696EA4(&qword_1EFEAA408, (uint64_t (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig, (uint64_t)&unk_1D4927274);
}

uint64_t sub_1D4698E0C()
{
  return sub_1D4696EA4(&qword_1ED98E130, (uint64_t (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig, (uint64_t)&unk_1D49272B4);
}

uint64_t sub_1D4698E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98CE10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D4698E80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1D4698F04(float *a1, float *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  float *v25;
  uint64_t v26;
  float *v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  float *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  char *v39;
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v4 = sub_1D492201C();
  v5 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  v48 = v5;
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v43 - v9;
  v11 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
  v49 = *(_QWORD *)(v11 - 8);
  v50 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA418);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98CE10);
  v18 = MEMORY[0x1E0C80A78](v17);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v43 - v20;
  MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v43 - v23;
  if (*(_DWORD *)a1 != *(_DWORD *)a2)
    goto LABEL_11;
  v25 = a1;
  v45 = v8;
  v46 = v22;
  v44 = v10;
  v26 = type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig();
  sub_1D4698E38((uint64_t)a1 + *(int *)(v26 + 28), (uint64_t)v24);
  v27 = a2;
  sub_1D4698E38((uint64_t)a2 + *(int *)(v26 + 28), (uint64_t)v21);
  v28 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1D4698E38((uint64_t)v24, (uint64_t)v16);
  sub_1D4698E38((uint64_t)v21, v28);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
  v30 = v25;
  if (v29((uint64_t)v16, 1, v50) == 1)
  {
    v49 = v26;
    sub_1D46992EC((uint64_t)v21, (uint64_t *)&unk_1ED98CE10);
    sub_1D46992EC((uint64_t)v24, (uint64_t *)&unk_1ED98CE10);
    if (v29(v28, 1, v50) == 1)
    {
      sub_1D46992EC((uint64_t)v16, (uint64_t *)&unk_1ED98CE10);
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  v31 = v46;
  sub_1D4698E38((uint64_t)v16, v46);
  if (v29(v28, 1, v50) == 1)
  {
    sub_1D46992EC((uint64_t)v21, (uint64_t *)&unk_1ED98CE10);
    sub_1D46992EC((uint64_t)v24, (uint64_t *)&unk_1ED98CE10);
    sub_1D4697DE0(v31, type metadata accessor for Argos_Protos_Queryflow_RefineConfig);
LABEL_7:
    sub_1D46992EC((uint64_t)v16, &qword_1EFEAA418);
LABEL_11:
    v40 = 0;
    return v40 & 1;
  }
  v49 = v26;
  sub_1D4698E80(v28, (uint64_t)v13);
  v32 = sub_1D473F854(v31, v13);
  sub_1D4697DE0((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_RefineConfig);
  sub_1D46992EC((uint64_t)v21, (uint64_t *)&unk_1ED98CE10);
  sub_1D46992EC((uint64_t)v24, (uint64_t *)&unk_1ED98CE10);
  sub_1D4697DE0(v31, type metadata accessor for Argos_Protos_Queryflow_RefineConfig);
  sub_1D46992EC((uint64_t)v16, (uint64_t *)&unk_1ED98CE10);
  if ((v32 & 1) == 0)
    goto LABEL_11;
LABEL_9:
  if (v30[1] != v27[1])
    goto LABEL_11;
  v33 = v49;
  v34 = (uint64_t)v30 + *(int *)(v49 + 24);
  v35 = v47;
  v36 = v48;
  v37 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 16);
  v38 = v44;
  v37(v44, v34, v47);
  v39 = v45;
  v37(v45, (uint64_t)v27 + *(int *)(v33 + 24), v35);
  sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
  v40 = sub_1D49225E0();
  v41 = *(void (**)(char *, uint64_t))(v36 + 8);
  v41(v39, v35);
  v41(v38, v35);
  return v40 & 1;
}

uint64_t sub_1D46992EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D4699328()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D4696FE8();
  v0 = sub_1D4922A90();
  if (*(_QWORD *)(v0 + 16))
  {
    v1 = *(_QWORD *)(v0 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    v1 = 0;
  }
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1D46993B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;

  if (sub_1D4922B98() == a1 && v4 == a2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = sub_1D4922E38();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v6 & 1) == 0)
    {
      if (sub_1D4922B98() == a1 && v8 == a2)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v9 = sub_1D4922E38();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
        {
          return 2;
        }
        else if (sub_1D4922B98() == a1 && v10 == a2)
        {
          swift_bridgeObjectRelease();
          return 1;
        }
        else
        {
          v11 = sub_1D4922E38();
          swift_bridgeObjectRelease();
          if ((v11 & 1) != 0)
          {
            return 1;
          }
          else
          {
            sub_1D4696FE8();
            if ((sub_1D4922AC0() & 1) != 0)
            {
              return 3;
            }
            else if ((sub_1D4922AC0() & 1) != 0)
            {
              return 4;
            }
            else if ((sub_1D4922AC0() & 1) != 0)
            {
              return 5;
            }
            else if ((sub_1D4922AC0() & 1) != 0)
            {
              return 6;
            }
            else
            {
              return 7;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1D4699664(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1[2] != 3)
    return 0;
  v2 = a1[4];
  v3 = a1[5];
  swift_bridgeObjectRetain();
  v4 = sub_1D4699328();
  v6 = v5;
  swift_bridgeObjectRelease();
  if (!v6)
    return 0;
  v7 = a1[8];
  v8 = a1[9];
  swift_bridgeObjectRetain();
  v9 = sub_1D4699328();
  v11 = v10;
  swift_bridgeObjectRelease();
  if (!v11)
    goto LABEL_22;
  v20 = v7;
  v21 = v4;
  v13 = a1[12];
  v12 = a1[13];
  swift_bridgeObjectRetain();
  v19 = v13;
  v14 = sub_1D4699328();
  v16 = v15;
  swift_bridgeObjectRelease();
  if (!v16)
  {
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  if ((v21 != v9 || v6 != v11) && (sub_1D4922E38() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  if (v9 == v14 && v11 == v16)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v17 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_13:
  if (v2 == v20 && v3 == v8
    || (sub_1D4922E38() & 1) != 0
    || v20 == v19 && v8 == v12
    || (sub_1D4922E38() & 1) != 0
    || v2 == v19 && v3 == v12
    || (sub_1D4922E38() & 1) != 0)
  {
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  sub_1D492270C();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1D4699904(void *a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD *v22;
  _QWORD *v23;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  double v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  unint64_t v52;
  unint64_t v53;
  double v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  double v62;
  unint64_t v63;
  id v64;
  void *v65;
  id v66;
  unint64_t v67;
  unint64_t v68;
  double v69;
  unint64_t v70;
  double v71;
  unint64_t v72;
  id v73;
  void *v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  _QWORD *v92;
  _QWORD *v93;

  v3 = *(_QWORD *)(a3 + 16);
  if (v3)
  {
    v85 = a2;
    swift_bridgeObjectRetain();
    v5 = 0;
    v6 = (uint64_t *)(a3 + 56);
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v9 = *(v6 - 3);
      v8 = *(v6 - 2);
      v10 = *(v6 - 1);
      v11 = *v6;
      swift_bridgeObjectRetain();
      if (sub_1D46993B8(v9, v8) == 4)
        break;
      result = sub_1D46993B8(v9, v8);
      if (result != 5)
      {
        result = sub_1D46993B8(v9, v8);
        if (result != 6)
          goto LABEL_7;
      }
      if (v5 >= v7[2])
        goto LABEL_80;
      if (*(_QWORD *)(v7[v5 + 4] + 16))
      {
        sub_1D4696FE8();
        swift_bridgeObjectRetain();
        v16 = (_QWORD *)sub_1D4922A90();
        if (v16[2])
        {
          v86 = v16[4];
          v88 = v5;
          v17 = v16[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v18 = (_QWORD *)sub_1D4922A90();
          if (v18[2])
          {
            v20 = v18[4];
            v19 = v18[5];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (v86 == v20 && v17 == v19)
            {
              swift_bridgeObjectRelease_n();
LABEL_24:
              result = swift_isUniquelyReferenced_nonNull_native();
              if ((result & 1) == 0)
              {
                result = (uint64_t)sub_1D47DFA34(v7);
                v7 = (_QWORD *)result;
              }
              if (v88 >= v7[2])
                goto LABEL_84;
              v92 = v7;
              v22 = v7 + 4;
              v23 = (_QWORD *)v22[v88];
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v22[v88] = v23;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                v23 = sub_1D48A83D8(0, v23[2] + 1, 1, v23);
                v22[v88] = v23;
              }
              v26 = v23[2];
              v25 = v23[3];
              if (v26 >= v25 >> 1)
              {
                v23 = sub_1D48A83D8((_QWORD *)(v25 > 1), v26 + 1, 1, v23);
                v22[v88] = v23;
              }
              v7 = v92;
              v23[2] = v26 + 1;
              v27 = &v23[4 * v26];
              v27[4] = v9;
              v27[5] = v8;
              v27[6] = v10;
              v27[7] = v11;
              v5 = v88;
              goto LABEL_4;
            }
            v21 = sub_1D4922E38();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v21 & 1) != 0)
              goto LABEL_24;
            swift_bridgeObjectRelease();
            v5 = v88;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v5 = v88;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
LABEL_4:
      v6 += 4;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        a2 = v85;
        goto LABEL_35;
      }
    }
    v5 = v7[2];
LABEL_7:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EC48);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1D49273C0;
    *(_QWORD *)(v12 + 32) = v9;
    *(_QWORD *)(v12 + 40) = v8;
    *(_QWORD *)(v12 + 48) = v10;
    *(_QWORD *)(v12 + 56) = v11;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v7 = sub_1D48A84E4(0, v7[2] + 1, 1, v7);
    v14 = v7[2];
    v13 = v7[3];
    if (v14 >= v13 >> 1)
      v7 = sub_1D48A84E4((_QWORD *)(v13 > 1), v14 + 1, 1, v7);
    v7[2] = v14 + 1;
    v7[v14 + 4] = v12;
    goto LABEL_4;
  }
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_35:
  v90 = v7[2];
  if (!v90)
  {
    v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_76:
    swift_bridgeObjectRelease();
    return (uint64_t)v29;
  }
  v89 = a2 & 1;
  v93 = v7;
  swift_bridgeObjectRetain();
  v28 = 0;
  v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v31 = v93[v28 + 4];
    if (*(_QWORD *)(v31 + 16) == 1)
      break;
    v43 = (_QWORD *)swift_bridgeObjectRetain();
    sub_1D4699664(v43);
    v45 = v44;
    v47 = v46;
    swift_bridgeObjectRelease();
    if (!v45)
      goto LABEL_39;
    if (!a1)
    {
      swift_bridgeObjectRetain();
      v87 = 0;
      v49 = 0;
LABEL_65:
      v53 = 0xE000000000000000;
      goto LABEL_66;
    }
    v48 = a1;
    swift_bridgeObjectRetain();
    v49 = objc_msgSend(v48, sel_queryID);
    v50 = objc_msgSend(v48, sel_applicationIdentifier);
    if (!v50)
    {
      v87 = 0;
      goto LABEL_65;
    }
    v51 = v50;
    v87 = sub_1D492261C();
    v53 = v52;

LABEL_66:
    v69 = v47;
    sub_1D492267C();
    v70 = sub_1D4696FE8();
    swift_bridgeObjectRetain();
    v82 = v70;
    v84 = v70;
    v80 = v70;
    v78 = MEMORY[0x1E0DEA968];
    sub_1D4922A9C();
    swift_bridgeObjectRelease_n();
    result = swift_bridgeObjectRelease();
    v71 = v69 * 1000000.0;
    if ((~COERCE__INT64(v69 * 1000000.0) & 0x7FF0000000000000) == 0)
      goto LABEL_81;
    if (v71 <= -1.0)
      goto LABEL_82;
    if (v71 >= 1.84467441e19)
      goto LABEL_83;
    v72 = (unint64_t)v71;
    v73 = objc_allocWithZone(MEMORY[0x1E0D8C250]);
    v74 = (void *)sub_1D49225F8();
    swift_bridgeObjectRelease();
    v66 = objc_msgSend(v73, sel_initWithEvent_timeInterval_queryId_, v74, v72, v49, v78, v80, v82, v84);

    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v29 = sub_1D48A82BC(0, v29[2] + 1, 1, v29);
    v76 = v29[2];
    v75 = v29[3];
    if (v76 >= v75 >> 1)
      v29 = sub_1D48A82BC((_QWORD *)(v75 > 1), v76 + 1, 1, v29);
    v29[2] = v76 + 1;
    v30 = &v29[5 * v76];
    v30[4] = v49;
    v30[5] = v87;
LABEL_38:
    v30[6] = v53;
    v30[7] = v66;
    *((_BYTE *)v30 + 64) = v89;
LABEL_39:
    if (v90 == ++v28)
    {
      swift_bridgeObjectRelease();
      goto LABEL_76;
    }
  }
  v32 = *(_QWORD *)(v31 + 32);
  v33 = *(_QWORD *)(v31 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34 = sub_1D46993B8(v32, v33);
  swift_bridgeObjectRelease();
  if (v34)
  {
    v35 = *(_QWORD *)(v31 + 32);
    v36 = *(_QWORD *)(v31 + 40);
    swift_bridgeObjectRetain();
    v37 = sub_1D46993B8(v35, v36);
    swift_bridgeObjectRelease();
    if (v37 != 2)
    {
      v38 = *(_QWORD *)(v31 + 32);
      v39 = *(_QWORD *)(v31 + 40);
      swift_bridgeObjectRetain();
      v40 = sub_1D46993B8(v38, v39);
      swift_bridgeObjectRelease();
      if (v40 != 1)
      {
        v41 = *(_QWORD *)(v31 + 32);
        v42 = *(_QWORD *)(v31 + 40);
        swift_bridgeObjectRetain();
        LOBYTE(v41) = sub_1D46993B8(v41, v42);
        swift_bridgeObjectRelease();
        if (v41 != 3)
        {
          swift_bridgeObjectRelease();
          goto LABEL_39;
        }
      }
    }
  }
  v54 = *(double *)(v31 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  if (a1)
  {
    v55 = a1;
    v56 = objc_msgSend(v55, sel_queryID);
    v57 = objc_msgSend(v55, sel_applicationIdentifier);
    if (v57)
    {
      v58 = v57;
      v59 = sub_1D492261C();
      v53 = v60;

      goto LABEL_57;
    }
    v59 = 0;
  }
  else
  {
    v59 = 0;
    v56 = 0;
  }
  v53 = 0xE000000000000000;
LABEL_57:
  sub_1D492267C();
  v61 = sub_1D4696FE8();
  swift_bridgeObjectRetain();
  v81 = v61;
  v83 = v61;
  v79 = v61;
  v77 = MEMORY[0x1E0DEA968];
  sub_1D4922A9C();
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease();
  v62 = v54 * 1000000.0;
  if ((~COERCE__INT64(v54 * 1000000.0) & 0x7FF0000000000000) != 0)
  {
    if (v62 <= -1.0)
      goto LABEL_78;
    if (v62 >= 1.84467441e19)
      goto LABEL_79;
    v63 = (unint64_t)v62;
    v64 = objc_allocWithZone(MEMORY[0x1E0D8C250]);
    v65 = (void *)sub_1D49225F8();
    swift_bridgeObjectRelease();
    v66 = objc_msgSend(v64, sel_initWithEvent_timeInterval_queryId_, v65, v63, v56, v77, v79, v81, v83);

    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v29 = sub_1D48A82BC(0, v29[2] + 1, 1, v29);
    v68 = v29[2];
    v67 = v29[3];
    if (v68 >= v67 >> 1)
      v29 = sub_1D48A82BC((_QWORD *)(v67 > 1), v68 + 1, 1, v29);
    v29[2] = v68 + 1;
    v30 = &v29[5 * v68];
    v30[4] = v56;
    v30[5] = v59;
    goto LABEL_38;
  }
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_1D469A2F4(unsigned __int8 a1)
{
  return ((uint64_t (*)(double))((char *)sub_1D469A344 + 4 * byte_1D49273D0[a1]))(COERCE_DOUBLE("ObjectDetector Model Execution"));
}

void sub_1D469A344(int64x2_t *a1@<X8>)
{
  int64x2_t v1;

  v1 = vdupq_n_s64(0x20uLL);
  v1.i64[0] = (uint64_t)"DomainPrediction Model Execution";
  a1->i64[0] = 0xD000000000000010;
  a1->i64[1] = 0x80000001D493E970;
  a1[1] = v1;
  a1[2].i8[0] = 2;
}

uint64_t sub_1D469A464(unsigned __int8 a1)
{
  return ((uint64_t (*)(double))((char *)sub_1D469A4B4 + 4 * byte_1D49273D7[a1]))(COERCE_DOUBLE("ObjectDetector Model Loading"));
}

void sub_1D469A4B4(int64x2_t *a1@<X8>)
{
  int64x2_t v1;

  v1 = vdupq_n_s64(0x1EuLL);
  v1.i64[0] = (uint64_t)"DomainPrediction Model Loading";
  a1->i64[0] = 0xD000000000000010;
  a1->i64[1] = 0x80000001D493E970;
  a1[1] = v1;
  a1[2].i8[0] = 2;
}

uint64_t sub_1D469A5D4(unsigned __int8 a1)
{
  return ((uint64_t (*)(double))((char *)sub_1D469A624 + 4 * byte_1D49273DE[a1]))(COERCE_DOUBLE("ObjectDetector Model Preprocess Input"));
}

void sub_1D469A624(int64x2_t *a1@<X8>)
{
  int64x2_t v1;

  v1 = vdupq_n_s64(0x27uLL);
  v1.i64[0] = (uint64_t)"DomainPrediction Model Preprocess Input";
  a1->i64[0] = 0xD000000000000010;
  a1->i64[1] = 0x80000001D493E970;
  a1[1] = v1;
  a1[2].i8[0] = 2;
}

uint64_t sub_1D469A744(unsigned __int8 a1)
{
  return ((uint64_t (*)(double))((char *)sub_1D469A794 + 4 * byte_1D49273E5[a1]))(COERCE_DOUBLE("ObjectDetector Model Postprocess Results"));
}

void sub_1D469A794(int64x2_t *a1@<X8>)
{
  int64x2_t v1;

  v1 = vdupq_n_s64(0x2AuLL);
  v1.i64[0] = (uint64_t)"DomainPrediction Model Postprocess Results";
  a1->i64[0] = 0xD000000000000010;
  a1->i64[1] = 0x80000001D493E970;
  a1[1] = v1;
  a1[2].i8[0] = 2;
}

_QWORD *sub_1D469A8B4(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D4920F18();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (_QWORD *)((char *)v4 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (_QWORD *)((char *)v4 + v14);
    v19 = (_QWORD *)((char *)a2 + v14);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = a3[9];
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *(_QWORD *)((char *)v4 + v21) = *(_QWORD *)((char *)a2 + v21);
    v22 = a3[11];
    *(_QWORD *)((char *)v4 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
    *(_QWORD *)((char *)v4 + v22) = *(_QWORD *)((char *)a2 + v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1D469A9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1D4920F18();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *sub_1D469AA60(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D4920F18();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)((char *)a1 + v13);
  v18 = (_QWORD *)((char *)a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v20) = *(_QWORD *)((char *)a2 + v20);
  v21 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *sub_1D469AB50(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D4920F18();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1D469AC8C(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D4920F18();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  v11 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  v12 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  return a1;
}

_QWORD *sub_1D469AD34(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D4920F18();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  swift_release();
  return a1;
}

uint64_t sub_1D469AE24()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D469AE30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D4920F18();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1D469AEAC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D469AEB8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1D4920F18();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MLModelInfo(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98EDB8);
}

uint64_t sub_1D469AF40()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D4920F18();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D469AFE8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D469B020 + 4 * byte_1D49273F0[a1]))(0xD000000000000010, 0x80000001D493E9B0);
}

uint64_t sub_1D469B020()
{
  return 0x676E697070616DLL;
}

uint64_t sub_1D469B038()
{
  return 0x617461646174656DLL;
}

uint64_t sub_1D469B050()
{
  return 0x697070614D746163;
}

uint64_t sub_1D469B078()
{
  return 0x7070614D74616F63;
}

uint64_t sub_1D469B0A4()
{
  return 0x4D736C616D696E61;
}

uint64_t sub_1D469B0C8(uint64_t a1)
{
  return a1 + 5;
}

uint64_t sub_1D469B0E0()
{
  return 0x614C657372616F63;
}

uint64_t sub_1D469B100()
{
  return 0x614D65727574616ELL;
}

uint64_t sub_1D469B124(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1D469AFE8(*a1);
  v5 = v4;
  if (v3 == sub_1D469AFE8(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D469B1AC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1D4922EF8();
  sub_1D469AFE8(v1);
  sub_1D49226D0();
  swift_bridgeObjectRelease();
  return sub_1D4922F34();
}

uint64_t sub_1D469B20C()
{
  unsigned __int8 *v0;

  sub_1D469AFE8(*v0);
  sub_1D49226D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D469B24C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1D4922EF8();
  sub_1D469AFE8(v1);
  sub_1D49226D0();
  swift_bridgeObjectRelease();
  return sub_1D4922F34();
}

uint64_t sub_1D469B2A8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D469C5A4();
  *a1 = result;
  return result;
}

uint64_t sub_1D469B2D4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1D469AFE8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D469B2FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  _QWORD v16[2];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DFC8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D469C5EC(a1, (uint64_t)v9, &qword_1ED98DFC8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1D46992EC((uint64_t)v9, &qword_1ED98DFC8);
    result = sub_1D469B468(a2, a3);
    if (!v3)
      return result;

    v15 = 1;
  }
  else
  {
    sub_1D469C630((uint64_t)v9, (uint64_t)v13, type metadata accessor for Argos_Protos_MLModel_ModelDescription);
    sub_1D469C630((uint64_t)v13, a3, type metadata accessor for Argos_Protos_MLModel_ModelDescription);
    v15 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a3, v15, 1, v10);
}

uint64_t sub_1D469B468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  unint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint8_t *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v42;
  void (*v43)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  _QWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v54 = a2;
  v4 = sub_1D4922370();
  v52 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v51 = (uint64_t)v47 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DFC8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D4920F18();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v47 - v20;
  if (*(_QWORD *)(a1 + 16) && (v22 = sub_1D47CA6B4(0), (v23 & 1) != 0))
  {
    v24 = *(_QWORD *)(a1 + 56) + *(_QWORD *)(v16 + 72) * v22;
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    v25(v14, v24, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
      sub_1D4714450();
      if (v2)
      {

        v26 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
        v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
        v50(v11, 1, 1, v26);
        sub_1D46992EC((uint64_t)v11, &qword_1ED98DFC8);
        v27 = v51;
        sub_1D470C76C(v51);
        v25(v19, (uint64_t)v21, v15);
        v28 = sub_1D4922358();
        v29 = sub_1D492291C();
        if (os_log_type_enabled(v28, v29))
        {
          v30 = swift_slowAlloc();
          v49 = v26;
          v31 = (uint8_t *)v30;
          v48 = swift_slowAlloc();
          v56 = v48;
          *(_DWORD *)v31 = 136315138;
          v47[1] = v31 + 4;
          sub_1D469C674();
          v32 = sub_1D4922E14();
          v55 = sub_1D47F0250(v32, v33, &v56);
          sub_1D4922A78();
          swift_bridgeObjectRelease();
          v34 = *(void (**)(char *, uint64_t))(v16 + 8);
          v34(v19, v15);
          _os_log_impl(&dword_1D467C000, v28, v29, "unable to load Model Description from file %s", v31, 0xCu);
          v35 = v48;
          swift_arrayDestroy();
          MEMORY[0x1D82635B8](v35, -1, -1);
          v36 = v31;
          v26 = v49;
          MEMORY[0x1D82635B8](v36, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
          v34(v21, v15);
        }
        else
        {

          v46 = *(void (**)(char *, uint64_t))(v16 + 8);
          v46(v19, v15);
          (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v27, v53);
          v46(v21, v15);
        }
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v50)(v54, 1, 1, v26);
      }
      else
      {
        v42 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
        v43 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56);
        v43(v11, 0, 1, v42);
        (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
        v44 = (uint64_t)v11;
        v45 = v54;
        sub_1D469C630(v44, v54, type metadata accessor for Argos_Protos_MLModel_ModelDescription);
        return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v43)(v45, 0, 1, v42);
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }
  sub_1D46992EC((uint64_t)v14, &qword_1ED98CAF0);
  sub_1D470C76C((uint64_t)v7);
  v37 = sub_1D4922358();
  v38 = sub_1D492291C();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v39 = 0;
    _os_log_impl(&dword_1D467C000, v37, v38, "missing model Specification", v39, 2u);
    MEMORY[0x1D82635B8](v39, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v52 + 8))(v7, v53);
  v40 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v54, 1, 1, v40);
}

uint64_t sub_1D469B998@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int EnumCaseMultiPayload;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v61 = a1;
  v1 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  MEMORY[0x1E0C80A78](v1);
  v57 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD40);
  v4 = MEMORY[0x1E0C80A78](v3);
  v56 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v53 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD78);
  v9 = MEMORY[0x1E0C80A78](v8);
  v58 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v53 - v11;
  v59 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  v13 = *(_QWORD *)(v59 - 8);
  v14 = MEMORY[0x1E0C80A78](v59);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v53 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DFC8);
  MEMORY[0x1E0C80A78](v19);
  v21 = (uint64_t *)((char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E010);
  MEMORY[0x1E0C80A78](v22);
  v60 = (uint64_t)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  v62 = *(_QWORD *)(v65 - 8);
  v24 = MEMORY[0x1E0C80A78](v65);
  v26 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v53 - v27;
  type metadata accessor for MLModelInfo(0);
  sub_1D48C4820((uint64_t)v21);
  v64 = v13;
  v29 = v59;
  v54 = v16;
  v55 = v28;
  v30 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v21, 1, v30) == 1)
  {
    sub_1D46992EC((uint64_t)v21, &qword_1ED98DFC8);
    v31 = v60;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v60, 1, 1, v65);
    v32 = v61;
LABEL_3:
    v33 = &qword_1ED98E010;
LABEL_4:
    sub_1D46992EC(v31, v33);
    goto LABEL_5;
  }
  v36 = *v21;
  swift_bridgeObjectRetain();
  sub_1D4697DE0((uint64_t)v21, type metadata accessor for Argos_Protos_MLModel_ModelDescription);
  v37 = *(_QWORD *)(v36 + 16);
  if (v37)
  {
    v38 = v36 + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80));
    v63 = *(_QWORD *)(v62 + 72);
    v53 = v36;
    swift_bridgeObjectRetain();
    v39 = v29;
    do
    {
      sub_1D469C304(v38, (uint64_t)v26, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
      sub_1D469C5EC((uint64_t)&v26[*(int *)(v65 + 28)], (uint64_t)v12, &qword_1ED98DD78);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v12, 1, v39) == 1)
      {
        v40 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v18, 1, 1, v40);
        v18[*(int *)(v39 + 20)] = 0;
        sub_1D4922010();
        sub_1D46992EC((uint64_t)v12, &qword_1ED98DD78);
      }
      else
      {
        sub_1D469C630((uint64_t)v12, (uint64_t)v18, type metadata accessor for Argos_Protos_MLModel_FeatureType);
      }
      sub_1D469C5EC((uint64_t)v18, (uint64_t)v7, &qword_1ED98DD40);
      sub_1D4697DE0((uint64_t)v18, type metadata accessor for Argos_Protos_MLModel_FeatureType);
      v41 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v7, 1, v41) == 1)
      {
        sub_1D46992EC((uint64_t)v7, &qword_1ED98DD40);
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        sub_1D4697DE0((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
        if (EnumCaseMultiPayload != 1)
        {
          swift_bridgeObjectRelease();
          v31 = v60;
          sub_1D469C630((uint64_t)v26, v60, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
          v43 = 0;
          v32 = v61;
          v44 = (uint64_t)v55;
          goto LABEL_20;
        }
      }
      sub_1D4697DE0((uint64_t)v26, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
      v38 += v63;
      --v37;
    }
    while (v37);
    swift_bridgeObjectRelease();
    v43 = 1;
    v32 = v61;
    v44 = (uint64_t)v55;
  }
  else
  {
    v43 = 1;
    v32 = v61;
    v44 = (uint64_t)v55;
    v39 = v29;
  }
  v31 = v60;
LABEL_20:
  v45 = v65;
  v46 = v62;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v31, v43, 1, v65);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v31, 1, v45) == 1)
    goto LABEL_3;
  sub_1D469C630(v31, v44, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
  v47 = v58;
  sub_1D469C5EC(v44 + *(int *)(v45 + 28), v58, &qword_1ED98DD78);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v47, 1, v39) == 1)
  {
    v48 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
    v49 = (uint64_t)v54;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v54, 1, 1, v48);
    *(_BYTE *)(v49 + *(int *)(v39 + 20)) = 0;
    sub_1D4922010();
    sub_1D46992EC(v47, &qword_1ED98DD78);
  }
  else
  {
    v49 = (uint64_t)v54;
    sub_1D469C630(v47, (uint64_t)v54, type metadata accessor for Argos_Protos_MLModel_FeatureType);
  }
  v31 = v56;
  v50 = (uint64_t)v57;
  sub_1D469C5EC(v49, v56, &qword_1ED98DD40);
  sub_1D4697DE0(v49, type metadata accessor for Argos_Protos_MLModel_FeatureType);
  v51 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v31, 1, v51) == 1)
  {
    sub_1D4697DE0(v44, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
    v33 = &qword_1ED98DD40;
    goto LABEL_4;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1D469C630(v31, v50, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
    sub_1D469C630(v44, v32, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
    v52 = type metadata accessor for MLModelImageInput(0);
    sub_1D469C630(v50, v32 + *(int *)(v52 + 20), type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v32, 0, 1, v52);
  }
  sub_1D4697DE0(v44, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
  sub_1D4697DE0(v31, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
LABEL_5:
  v34 = type metadata accessor for MLModelImageInput(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v32, 1, 1, v34);
}

double sub_1D469C0F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  double v11;
  uint64_t v12;
  uint64_t v14;

  v0 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (uint64_t *)((char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D9F8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  sub_1D469B998((uint64_t)&v14 - v7);
  v9 = type metadata accessor for MLModelImageInput(0);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
  if (v10(v8, 1, v9) == 1)
  {
    sub_1D46992EC((uint64_t)v8, &qword_1ED98D9F8);
    v11 = 0.0;
  }
  else
  {
    sub_1D469C304((uint64_t)&v8[*(int *)(v9 + 20)], (uint64_t)v2, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
    sub_1D4697DE0((uint64_t)v8, type metadata accessor for MLModelImageInput);
    v12 = *v2;
    sub_1D4697DE0((uint64_t)v2, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
    v11 = (double)v12;
  }
  sub_1D469B998((uint64_t)v6);
  if (v10(v6, 1, v9) == 1)
  {
    sub_1D46992EC((uint64_t)v6, &qword_1ED98D9F8);
  }
  else
  {
    sub_1D469C304((uint64_t)&v6[*(int *)(v9 + 20)], (uint64_t)v2, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
    sub_1D4697DE0((uint64_t)v6, type metadata accessor for MLModelImageInput);
    sub_1D4697DE0((uint64_t)v2, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
  }
  return v11;
}

uint64_t type metadata accessor for MLModelImageInput(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98D9E8);
}

uint64_t sub_1D469C2D0(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D469C304(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D469C348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  uint64_t v21;

  v0 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (_QWORD *)((char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DFC8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MLModelInfo(0);
  sub_1D48C4820((uint64_t)v6);
  v7 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7) == 1)
  {
    sub_1D46992EC((uint64_t)v6, &qword_1ED98DFC8);
    return MEMORY[0x1E0DEE9D8];
  }
  v10 = *((_QWORD *)v6 + 1);
  swift_bridgeObjectRetain();
  sub_1D4697DE0((uint64_t)v6, type metadata accessor for Argos_Protos_MLModel_ModelDescription);
  v11 = *(_QWORD *)(v10 + 16);
  if (!v11)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v21 = MEMORY[0x1E0DEE9D8];
  sub_1D48AB4A4(0, v11, 0);
  v12 = *(unsigned __int8 *)(v1 + 80);
  v20[1] = v10;
  v13 = v10 + ((v12 + 32) & ~v12);
  v14 = *(_QWORD *)(v1 + 72);
  v8 = v21;
  do
  {
    sub_1D469C304(v13, (uint64_t)v3, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
    v16 = *v3;
    v15 = v3[1];
    swift_bridgeObjectRetain();
    sub_1D4697DE0((uint64_t)v3, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D48AB4A4(0, *(_QWORD *)(v8 + 16) + 1, 1);
      v8 = v21;
    }
    v18 = *(_QWORD *)(v8 + 16);
    v17 = *(_QWORD *)(v8 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_1D48AB4A4(v17 > 1, v18 + 1, 1);
      v8 = v21;
    }
    *(_QWORD *)(v8 + 16) = v18 + 1;
    v19 = v8 + 16 * v18;
    *(_QWORD *)(v19 + 32) = v16;
    *(_QWORD *)(v19 + 40) = v15;
    v13 += v14;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1D469C5A4()
{
  unint64_t v0;

  v0 = sub_1D4922CA0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB)
    return 11;
  else
    return v0;
}

uint64_t sub_1D469C5EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D469C630(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1D469C674()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED98ED60;
  if (!qword_1ED98ED60)
  {
    v1 = sub_1D4920F18();
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0CB0048], v1);
    atomic_store(result, (unint64_t *)&qword_1ED98ED60);
  }
  return result;
}

uint64_t *sub_1D469C6BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  int EnumCaseMultiPayload;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  int *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v96;
  char *v97;
  unsigned int (*v98)(char *, uint64_t, uint64_t);
  uint64_t v99;
  char *v100;
  void *v101;
  _OWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unsigned int (*v106)(_QWORD *, uint64_t, void *);
  void *v107;
  char *v108;
  _QWORD *__dst;
  char *__dsta;
  _OWORD *__dstb;
  unsigned int (*__dstc)(char *, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  _QWORD *__src;
  char *__srcb;
  char *__srca;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(char *, char *, uint64_t);
  void (*v121)(char *, char *, uint64_t);
  uint64_t v122;
  uint64_t v123;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
    v10 = *(int *)(v9 + 24);
    v11 = (char *)v4 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_1D492201C();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v11;
    v16 = v13;
    v14(v15, v12, v13);
    v17 = *(int *)(v9 + 28);
    v18 = (uint64_t *)((char *)v4 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD78);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v122 = v13;
      v24 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v25 + 48))(v19, 1, v24))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD40);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        v27 = v122;
      }
      else
      {
        v118 = v25;
        v120 = v14;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v28 = v19[1];
          *v18 = *v19;
          v18[1] = v28;
          *((_BYTE *)v18 + 16) = *((_BYTE *)v19 + 16);
          v29 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
          v30 = *(int *)(v29 + 24);
          __dst = (_QWORD *)((char *)v18 + v30);
          v113 = v29;
          v31 = (_QWORD *)((char *)v19 + v30);
          v32 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
          v103 = *(_QWORD *)(v32 - 8);
          v106 = *(unsigned int (**)(_QWORD *, uint64_t, void *))(v103 + 48);
          v33 = (void *)v32;
          swift_bridgeObjectRetain();
          if (v106(v31, 1, v33))
          {
            v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DEC8);
            memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
          }
          else
          {
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            *__dst = *v31;
            v101 = v33;
            if (EnumCaseMultiPayload == 1)
              v49 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
            else
              v49 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
            v50 = *(int *)(v49 + 20);
            v51 = (char *)__dst + v50;
            __srcb = (char *)v31 + v50;
            swift_bridgeObjectRetain();
            v120(v51, __srcb, v122);
            swift_storeEnumTagMultiPayload();
            (*(void (**)(_QWORD *, _QWORD, uint64_t, void *))(v103 + 56))(__dst, 0, 1, v101);
          }
        }
        else
        {
          *(_OWORD *)v18 = *(_OWORD *)v19;
          v35 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
          v36 = *(int *)(v35 + 24);
          v113 = v35;
          __src = (_QWORD *)((char *)v18 + v36);
          v37 = (char *)v19 + v36;
          v38 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
          v107 = *(void **)(v38 - 8);
          __dsta = v37;
          if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v107 + 6))(v37, 1, v38))
          {
            v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
            memcpy(__src, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
          }
          else
          {
            v104 = v38;
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v120((char *)__src, v37, v122);
              v41 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
              v42 = *(int *)(v41 + 20);
              v99 = v41;
              v102 = (_OWORD *)((char *)__src + v42);
              v43 = &v37[v42];
              v44 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
              v45 = *(_QWORD *)(v44 - 8);
              v97 = v43;
              v98 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
              v46 = v43;
              v47 = v44;
              v96 = v45;
              if (v98(v46, 1, v44))
              {
                v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
                memcpy(v102, v97, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
              }
              else
              {
                *v102 = *(_OWORD *)v97;
                v120((char *)v102 + *(int *)(v47 + 24), &v97[*(int *)(v47 + 24)], v122);
                (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v102, 0, 1, v47);
              }
              v55 = v47;
              v56 = (char *)__dsta;
              v57 = *(int *)(v99 + 24);
              __dstb = (_OWORD *)((char *)__src + v57);
              v58 = &v56[v57];
              if (v98(&v56[v57], 1, v55))
              {
                v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
                memcpy(__dstb, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
              }
              else
              {
                *__dstb = *v58;
                v120((char *)__dstb + *(int *)(v55 + 24), (char *)v58 + *(int *)(v55 + 24), v122);
                (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v96 + 56))(__dstb, 0, 1, v55);
              }
              v52 = __src;
            }
            else
            {
              v52 = __src;
              *__src = *__dsta;
              v53 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0)
                           + 20);
              v100 = (char *)__src + v53;
              v54 = (char *)__dsta + v53;
              swift_bridgeObjectRetain();
              v120(v100, v54, v122);
            }
            swift_storeEnumTagMultiPayload();
            (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v107 + 7))(v52, 0, 1, v104);
          }
        }
        v60 = *(int *)(v113 + 28);
        v61 = (char *)v18 + v60;
        v62 = (char *)v19 + v60;
        *(_QWORD *)v61 = *(_QWORD *)v62;
        v61[8] = v62[8];
        v27 = v122;
        v14 = v120;
        v120((char *)v18 + *(int *)(v113 + 32), (char *)v19 + *(int *)(v113 + 32), v122);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v18, 0, 1, v24);
      }
      *((_BYTE *)v18 + *(int *)(v20 + 20)) = *((_BYTE *)v19 + *(int *)(v20 + 20));
      v14((char *)v18 + *(int *)(v20 + 24), (char *)v19 + *(int *)(v20 + 24), v27);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      v16 = v27;
    }
    v63 = *(int *)(a3 + 20);
    v64 = (char *)v4 + v63;
    v65 = (char *)a2 + v63;
    *(_OWORD *)((char *)v4 + v63) = *(_OWORD *)((char *)a2 + v63);
    v66 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
    v67 = v66[6];
    v68 = &v64[v67];
    v69 = &v65[v67];
    v70 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
    v71 = *(_QWORD *)(v70 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
    {
      v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      v119 = v71;
      v121 = v14;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v14(v68, v69, v16);
        v73 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
        v74 = *(int *)(v73 + 20);
        v114 = v73;
        __srca = &v68[v74];
        v123 = v16;
        v75 = &v69[v74];
        v76 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
        v77 = *(_QWORD *)(v76 - 8);
        v108 = v75;
        __dstc = *(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48);
        v105 = v77;
        if (__dstc(v75, 1, v76))
        {
          v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
          memcpy(__srca, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
          v79 = v76;
          v81 = __dstc;
          v80 = v114;
          v14 = v121;
        }
        else
        {
          *(_OWORD *)__srca = *(_OWORD *)v75;
          v14 = v121;
          v121(&__srca[*(int *)(v76 + 24)], &v108[*(int *)(v76 + 24)], v123);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(__srca, 0, 1, v76);
          v79 = v76;
          v81 = __dstc;
          v80 = v114;
        }
        v87 = *(int *)(v80 + 24);
        v88 = &v68[v87];
        v89 = &v69[v87];
        if (v81(v89, 1, v79))
        {
          v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
          memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
          v16 = v123;
        }
        else
        {
          *(_OWORD *)v88 = *(_OWORD *)v89;
          v14(&v88[*(int *)(v79 + 24)], &v89[*(int *)(v79 + 24)], v123);
          v91 = v88;
          v16 = v123;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v91, 0, 1, v79);
        }
      }
      else
      {
        *(_QWORD *)v68 = *(_QWORD *)v69;
        v82 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
        v83 = v16;
        v84 = &v68[v82];
        v85 = &v69[v82];
        swift_bridgeObjectRetain();
        v86 = v84;
        v16 = v83;
        v14 = v121;
        v121(v86, v85, v16);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v68, 0, 1, v70);
    }
    v92 = v66[7];
    v93 = &v64[v92];
    v94 = &v65[v92];
    *(_QWORD *)v93 = *(_QWORD *)v94;
    v93[8] = v94[8];
    v14(&v64[v66[8]], &v65[v66[8]], v16);
  }
  return v4;
}

uint64_t sub_1D469CF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  v5 = a1 + *(int *)(v4 + 24);
  v6 = sub_1D492201C();
  v31 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v31(v5, v6);
  v7 = a1 + *(int *)(v4 + 28);
  v8 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9))
    {
LABEL_18:
      v31(v7 + *(int *)(v8 + 24), v6);
      goto LABEL_19;
    }
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      v10 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      v11 = v7 + *(int *)(v10 + 24);
      v12 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (EnumCaseMultiPayload == 1)
          v14 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
        else
          v14 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
        goto LABEL_15;
      }
    }
    else
    {
      v10 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      v11 = v7 + *(int *)(v10 + 24);
      v15 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v11, 1, v15))
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v31(v11, v6);
          v30 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
          v16 = v11 + *(int *)(v30 + 20);
          v17 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
          v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48);
          if (!v18(v16, 1, v17))
            v31(v16 + *(int *)(v17 + 24), v6);
          v11 += *(int *)(v30 + 24);
          if (v18(v11, 1, v17))
            goto LABEL_17;
          v19 = *(int *)(v17 + 24);
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
        v14 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
LABEL_15:
        v19 = *(int *)(v14 + 20);
LABEL_16:
        v31(v11 + v19, v6);
      }
    }
LABEL_17:
    v31(v7 + *(int *)(v10 + 32), v6);
    goto LABEL_18;
  }
LABEL_19:
  v20 = a1 + *(int *)(a2 + 20);
  v21 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  v22 = v20 + *(int *)(v21 + 24);
  v23 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23))
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      swift_bridgeObjectRelease();
      v28 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
      goto LABEL_26;
    }
    v31(v22, v6);
    v24 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
    v25 = v22 + *(int *)(v24 + 20);
    v26 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
    v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48);
    if (!v27(v25, 1, v26))
      v31(v25 + *(int *)(v26 + 24), v6);
    v22 += *(int *)(v24 + 24);
    if (!v27(v22, 1, v26))
    {
      v28 = *(int *)(v26 + 24);
LABEL_26:
      v31(v22 + v28, v6);
    }
  }
  return ((uint64_t (*)(uint64_t, uint64_t))v31)(v20 + *(int *)(v21 + 32), v6);
}

_QWORD *sub_1D469D310(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (**v23)(_QWORD *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(_QWORD *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int EnumCaseMultiPayload;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _OWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  _OWORD *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  int *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v96;
  _OWORD *v97;
  _OWORD *v98;
  unsigned int (*v99)(_OWORD *, uint64_t, uint64_t);
  int *v100;
  char *v101;
  _OWORD *v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  char *v107;
  uint64_t v108;
  _QWORD *__dst;
  _QWORD *__dsta;
  char *__dstb;
  int *v112;
  unsigned int (*v113)(char *, uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  void *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(char *, char *, uint64_t);
  void (*v121)(char *, char *, uint64_t);
  uint64_t v122;
  uint64_t v123;

  v5 = a1;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  v9 = *(int *)(v8 + 24);
  v10 = (char *)v5 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1D492201C();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = v10;
  v15 = v12;
  v13(v14, v11, v12);
  v16 = *(int *)(v8 + 28);
  v17 = (_QWORD *)((char *)v5 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD78);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v122 = v12;
    v22 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
    v23 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v22 - 8);
    if (v23[6](v18, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD40);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      v25 = v122;
    }
    else
    {
      v120 = v13;
      v116 = v23;
      v118 = a3;
      v114 = v22;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v26 = v18[1];
        *v17 = *v18;
        v17[1] = v26;
        *((_BYTE *)v17 + 16) = *((_BYTE *)v18 + 16);
        v27 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
        v28 = *(int *)(v27 + 24);
        __dst = (_QWORD *)((char *)v17 + v28);
        v112 = (int *)v27;
        v29 = (_QWORD *)((char *)v18 + v28);
        v30 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
        v31 = *(_QWORD *)(v30 - 8);
        v32 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v31 + 48);
        v33 = v30;
        swift_bridgeObjectRetain();
        if (v32(v29, 1, v33))
        {
          v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DEC8);
          memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          v106 = v29;
          *__dst = *v29;
          v41 = v33;
          if (EnumCaseMultiPayload == 1)
            v42 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
          else
            v42 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
          v51 = *(int *)(v42 + 20);
          v52 = (char *)__dst + v51;
          v107 = (char *)v106 + v51;
          swift_bridgeObjectRetain();
          v120(v52, v107, v122);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v41);
        }
      }
      else
      {
        *(_OWORD *)v17 = *(_OWORD *)v18;
        v112 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
        v35 = v112[6];
        v105 = (_QWORD *)((char *)v17 + v35);
        v36 = (_QWORD *)((char *)v18 + v35);
        v37 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
        v38 = *(_QWORD *)(v37 - 8);
        __dsta = v36;
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
        {
          v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
          memcpy(v105, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          v103 = v38;
          v104 = v37;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v43 = v36;
            v120((char *)v105, (char *)v36, v122);
            v100 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
            v44 = v100[5];
            v98 = (_OWORD *)((char *)v105 + v44);
            v45 = (_OWORD *)((char *)v36 + v44);
            v46 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
            v47 = *(_QWORD *)(v46 - 8);
            v97 = v45;
            v48 = v45;
            v49 = v46;
            v99 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v47 + 48);
            v96 = v47;
            if (v99(v48, 1, v46))
            {
              v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
              memcpy(v98, v97, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
            }
            else
            {
              *v98 = *v97;
              v120((char *)v98 + *(int *)(v49 + 24), (char *)v97 + *(int *)(v49 + 24), v122);
              v43 = __dsta;
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v98, 0, 1, v49);
            }
            v56 = v100[6];
            v102 = (_OWORD *)((char *)v105 + v56);
            v57 = (_OWORD *)((char *)v43 + v56);
            if (v99((_QWORD *)((char *)v43 + v56), 1, v49))
            {
              v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
              memcpy(v102, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
            }
            else
            {
              *v102 = *v57;
              v120((char *)v102 + *(int *)(v49 + 24), (char *)v57 + *(int *)(v49 + 24), v122);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v102, 0, 1, v49);
            }
            v53 = v105;
          }
          else
          {
            v53 = v105;
            *v105 = *v36;
            v54 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0)
                         + 20);
            v101 = (char *)v105 + v54;
            v55 = (char *)v36 + v54;
            swift_bridgeObjectRetain();
            v120(v101, v55, v122);
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v53, 0, 1, v104);
        }
      }
      v59 = v112[7];
      v60 = (char *)v17 + v59;
      v61 = (char *)v18 + v59;
      *(_QWORD *)v60 = *(_QWORD *)v61;
      v60[8] = v61[8];
      v13 = v120;
      v25 = v122;
      v120((char *)v17 + v112[8], (char *)v18 + v112[8], v122);
      swift_storeEnumTagMultiPayload();
      (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v116 + 7))(v17, 0, 1, v114);
      a3 = v118;
    }
    *((_BYTE *)v17 + *(int *)(v19 + 20)) = *((_BYTE *)v18 + *(int *)(v19 + 20));
    v13((char *)v17 + *(int *)(v19 + 24), (char *)v18 + *(int *)(v19 + 24), v25);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    v15 = v25;
  }
  v62 = *(int *)(a3 + 20);
  v63 = (char *)v5 + v62;
  v64 = (char *)a2 + v62;
  *(_OWORD *)((char *)v5 + v62) = *(_OWORD *)((char *)a2 + v62);
  v65 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  v66 = v65[6];
  v67 = &v63[v66];
  v68 = &v64[v66];
  v69 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  v70 = *(_QWORD *)(v69 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
  {
    v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
  }
  else
  {
    v119 = v70;
    v121 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13(v67, v68, v15);
      v72 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
      v73 = *(int *)(v72 + 20);
      v115 = v72;
      v117 = &v67[v73];
      v123 = v15;
      v74 = &v68[v73];
      v75 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
      v76 = *(_QWORD *)(v75 - 8);
      __dstb = v74;
      v113 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
      v108 = v76;
      if (v113(v74, 1, v75))
      {
        v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
        memcpy(v117, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        v78 = v75;
        v80 = v113;
        v79 = v115;
        v13 = v121;
      }
      else
      {
        *(_OWORD *)v117 = *(_OWORD *)v74;
        v13 = v121;
        v121(&v117[*(int *)(v75 + 24)], &__dstb[*(int *)(v75 + 24)], v123);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v117, 0, 1, v75);
        v78 = v75;
        v80 = v113;
        v79 = v115;
      }
      v87 = *(int *)(v79 + 24);
      v88 = &v67[v87];
      v89 = &v68[v87];
      if (v80(v89, 1, v78))
      {
        v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
        memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
        v15 = v123;
      }
      else
      {
        *(_OWORD *)v88 = *(_OWORD *)v89;
        v13(&v88[*(int *)(v78 + 24)], &v89[*(int *)(v78 + 24)], v123);
        v91 = v88;
        v15 = v123;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v91, 0, 1, v78);
      }
    }
    else
    {
      *(_QWORD *)v67 = *(_QWORD *)v68;
      v81 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
      v82 = v5;
      v83 = v15;
      v84 = &v67[v81];
      v85 = &v68[v81];
      swift_bridgeObjectRetain();
      v86 = v84;
      v15 = v83;
      v5 = v82;
      v13 = v121;
      v121(v86, v85, v15);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v67, 0, 1, v69);
  }
  v92 = v65[7];
  v93 = &v63[v92];
  v94 = &v64[v92];
  *(_QWORD *)v93 = *(_QWORD *)v94;
  v93[8] = v94[8];
  v13(&v63[v65[8]], &v64[v65[8]], v15);
  return v5;
}

_QWORD *sub_1D469DB60(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, void *);
  void *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(char *, uint64_t, void *);
  void *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  int *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  _QWORD *v84;
  uint64_t v85;
  int EnumCaseMultiPayload;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  _QWORD *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  char *v118;
  int *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)(_QWORD *, uint64_t, uint64_t);
  int v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  BOOL v137;
  void (*v138)(char *, char *, uint64_t);
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  void (*v147)(char *, char *, uint64_t);
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  void (*v155)(char *, char *, uint64_t);
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  int v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  _QWORD *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  unsigned int (*v203)(char *, uint64_t, uint64_t);
  void (*v204)(char *, char *, uint64_t);
  char *__srcc;
  unsigned int (*__src)(char *, uint64_t, uint64_t);
  char *__srcd;
  char *__srca;
  char *__srcb;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  unsigned int (*v214)(char *, uint64_t, uint64_t);
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  void *v223;
  _QWORD *v224;
  void *v225;
  _QWORD *v226;
  void (**v227)(char *, _QWORD, uint64_t, uint64_t);
  _QWORD *v228;
  char *v229;
  _QWORD *__dst;
  _QWORD *__dsta;
  _QWORD *__dstb;
  _QWORD *__dstc;
  void (*__dstd)(_QWORD *, char *, uint64_t);
  void (*__dste)(char *, char *, uint64_t);
  void *__dstf;
  _QWORD *__dstg;
  int *v238;
  int *v239;
  int *v240;
  _QWORD *v241;
  int *v242;
  unsigned int (*v243)(char *, uint64_t, uint64_t);
  char *v244;
  uint64_t v245;
  uint64_t v246;
  unsigned int (*v247)(char *, uint64_t, uint64_t);
  char *v249;
  int *v250;
  void (*v251)(char *, char *);
  _QWORD *v252;
  uint64_t v253;

  v4 = a1;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4[2] = a2[2];
  v4[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  v6 = *(int *)(v5 + 24);
  v7 = (char *)v4 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D492201C();
  v245 = *(_QWORD *)(v9 - 8);
  v10 = *(void (**)(char *, char *))(v245 + 24);
  v253 = v9;
  v10(v7, v8);
  v11 = *(int *)(v5 + 28);
  v12 = (uint64_t)v4 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16((uint64_t)v13, 1, v14);
  v252 = v4;
  v251 = v10;
  if (!v17)
  {
    if (v18)
    {
      sub_1D4697DE0(v12, type metadata accessor for Argos_Protos_MLModel_FeatureType);
      goto LABEL_7;
    }
    v26 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
    v27 = *(_QWORD **)(v26 - 8);
    v28 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v27[6];
    v29 = v28(v12, 1, v26);
    v30 = v28((uint64_t)v13, 1, v26);
    if (v29)
    {
      if (!v30)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_QWORD *)v12 = *(_QWORD *)v13;
          v31 = *((_QWORD *)v13 + 1);
          *(_BYTE *)(v12 + 16) = v13[16];
          *(_QWORD *)(v12 + 8) = v31;
          v32 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
          v33 = *(int *)(v32 + 24);
          __dst = (_QWORD *)(v12 + v33);
          v238 = (int *)v32;
          v34 = &v13[v33];
          v35 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
          v36 = *(_QWORD *)(v35 - 8);
          v37 = *(unsigned int (**)(char *, uint64_t, void *))(v36 + 48);
          v38 = (void *)v35;
          swift_bridgeObjectRetain();
          if (v37(v34, 1, v38))
          {
            v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DEC8);
            memcpy(__dst, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
            v40 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
          }
          else
          {
            v225 = v38;
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            *__dst = *(_QWORD *)v34;
            if (EnumCaseMultiPayload == 1)
              v87 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
            else
              v87 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
            v88 = (char *)__dst + v87;
            v89 = &v34[v87];
            v40 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
            swift_bridgeObjectRetain();
            v40(v88, v89, v253);
            swift_storeEnumTagMultiPayload();
            (*(void (**)(_QWORD *, _QWORD, uint64_t, void *))(v36 + 56))(__dst, 0, 1, v225);
          }
        }
        else
        {
          v224 = v27;
          *(_QWORD *)v12 = *(_QWORD *)v13;
          *(_QWORD *)(v12 + 8) = *((_QWORD *)v13 + 1);
          v68 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
          v69 = v68[6];
          __dstc = (_QWORD *)(v12 + v69);
          v70 = &v13[v69];
          v71 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
          v72 = *(_QWORD *)(v71 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71))
          {
            v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
            memcpy(__dstc, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
            v40 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
            v27 = v224;
LABEL_96:
            v186 = v68[7];
            v187 = v12 + v186;
            v188 = &v13[v186];
            v189 = *(_QWORD *)v188;
            *(_BYTE *)(v187 + 8) = v188[8];
            *(_QWORD *)v187 = v189;
            v40((char *)(v12 + v68[8]), &v13[v68[8]], v253);
            swift_storeEnumTagMultiPayload();
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v27[7])(v12, 0, 1, v26);
            goto LABEL_97;
          }
          v217 = v71;
          v221 = v72;
          v238 = v68;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v40 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
            v40((char *)__dstc, v70, v253);
            __srca = v70;
            v212 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
            v97 = *(int *)(v212 + 20);
            v98 = (_QWORD *)((char *)__dstc + v97);
            v99 = &v70[v97];
            v100 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
            v101 = *(_QWORD *)(v100 - 8);
            v203 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48);
            v200 = v101;
            if (v203(v99, 1, v100))
            {
              v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
              memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
            }
            else
            {
              *v98 = *(_QWORD *)v99;
              v98[1] = *((_QWORD *)v99 + 1);
              v40((char *)v98 + *(int *)(v100 + 24), &v99[*(int *)(v100 + 24)], v253);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
            }
            v27 = v224;
            v176 = *(int *)(v212 + 24);
            v177 = (_QWORD *)((char *)__dstc + v176);
            v178 = &__srca[v176];
            if (v203(&__srca[v176], 1, v100))
            {
              v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
              memcpy(v177, v178, *(_QWORD *)(*(_QWORD *)(v179 - 8) + 64));
            }
            else
            {
              *v177 = *(_QWORD *)v178;
              v177[1] = *((_QWORD *)v178 + 1);
              v40((char *)v177 + *(int *)(v100 + 24), &v178[*(int *)(v100 + 24)], v253);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v200 + 56))(v177, 0, 1, v100);
            }
            v106 = __dstc;
            v109 = v217;
          }
          else
          {
            v106 = __dstc;
            *__dstc = *(_QWORD *)v70;
            v107 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0)
                          + 20);
            v213 = (char *)__dstc + v107;
            v108 = &v70[v107];
            v40 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
            swift_bridgeObjectRetain();
            v40(v213, v108, v253);
            v109 = v217;
            v27 = v224;
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v221 + 56))(v106, 0, 1, v109);
        }
        v68 = v238;
        goto LABEL_96;
      }
    }
    else
    {
      if (!v30)
      {
        if (v4 != a2)
        {
          sub_1D4697DE0(v12, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_QWORD *)v12 = *(_QWORD *)v13;
            v58 = *((_QWORD *)v13 + 1);
            *(_BYTE *)(v12 + 16) = v13[16];
            *(_QWORD *)(v12 + 8) = v58;
            v59 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
            v60 = v59[6];
            v241 = (_QWORD *)(v12 + v60);
            v61 = &v13[v60];
            v62 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
            v63 = *(_QWORD *)(v62 - 8);
            v64 = *(unsigned int (**)(char *, uint64_t, void *))(v63 + 48);
            v65 = (void *)v62;
            swift_bridgeObjectRetain();
            if (v64(v61, 1, v65))
            {
              v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DEC8);
              memcpy(v241, v61, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
              v67 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
            }
            else
            {
              __dstf = v65;
              v167 = swift_getEnumCaseMultiPayload();
              *v241 = *(_QWORD *)v61;
              if (v167 == 1)
                v168 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
              else
                v168 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0)
                              + 20);
              v169 = (char *)v241 + v168;
              v170 = &v61[v168];
              v67 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
              swift_bridgeObjectRetain();
              v67(v169, v170, v253);
              swift_storeEnumTagMultiPayload();
              (*(void (**)(_QWORD *, _QWORD, uint64_t, void *))(v63 + 56))(v241, 0, 1, __dstf);
            }
            v4 = v252;
            v180 = v59[7];
            v181 = v12 + v180;
            v182 = &v13[v180];
            v183 = *(_QWORD *)v182;
            *(_BYTE *)(v181 + 8) = v182[8];
            *(_QWORD *)v181 = v183;
            v67((char *)(v12 + v59[8]), &v13[v59[8]], v253);
            swift_storeEnumTagMultiPayload();
            goto LABEL_98;
          }
          *(_QWORD *)v12 = *(_QWORD *)v13;
          *(_QWORD *)(v12 + 8) = *((_QWORD *)v13 + 1);
          v242 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
          v90 = v242[6];
          v91 = (_QWORD *)(v12 + v90);
          v92 = &v13[v90];
          v93 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
          v94 = *(_QWORD *)(v93 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v92, 1, v93))
          {
            v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
            memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
            v96 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
          }
          else
          {
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v222 = v94;
              v204 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
              v204((char *)v91, v92, v253);
              v218 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
              v171 = *(int *)(v218 + 20);
              v228 = (_QWORD *)((char *)v91 + v171);
              __dstg = v91;
              v172 = &v92[v171];
              v173 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
              v174 = *(_QWORD *)(v173 - 8);
              __srcb = v172;
              v214 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v174 + 48);
              v201 = v174;
              if (v214(v172, 1, v173))
              {
                v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
                memcpy(v228, v172, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
                v96 = v204;
              }
              else
              {
                v96 = v204;
                *v228 = *(_QWORD *)__srcb;
                v228[1] = *((_QWORD *)__srcb + 1);
                v204((char *)v228 + *(int *)(v173 + 24), &__srcb[*(int *)(v173 + 24)], v253);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v174 + 56))(v228, 0, 1, v173);
              }
              v190 = *(int *)(v218 + 24);
              v191 = (_QWORD *)((char *)__dstg + v190);
              v192 = &v92[v190];
              if (v214(v192, 1, v173))
              {
                v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
                memcpy(v191, v192, *(_QWORD *)(*(_QWORD *)(v193 - 8) + 64));
              }
              else
              {
                *v191 = *(_QWORD *)v192;
                v191[1] = *((_QWORD *)v192 + 1);
                v96((char *)v191 + *(int *)(v173 + 24), &v192[*(int *)(v173 + 24)], v253);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v201 + 56))(v191, 0, 1, v173);
              }
              v91 = __dstg;
              v94 = v222;
            }
            else
            {
              *v91 = *(_QWORD *)v92;
              v184 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0)
                            + 20);
              v229 = (char *)v91 + v184;
              v185 = &v92[v184];
              v96 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
              swift_bridgeObjectRetain();
              v96(v229, v185, v253);
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, v93);
          }
          v194 = v242[7];
          v195 = v12 + v194;
          v196 = &v13[v194];
          v197 = *(_QWORD *)v196;
          *(_BYTE *)(v195 + 8) = v196[8];
          *(_QWORD *)v195 = v197;
          v96((char *)(v12 + v242[8]), &v13[v242[8]], v253);
          swift_storeEnumTagMultiPayload();
LABEL_97:
          v4 = v252;
LABEL_98:
          v10 = v251;
        }
LABEL_99:
        *(_BYTE *)(v12 + *(int *)(v14 + 20)) = v13[*(int *)(v14 + 20)];
        ((void (*)(uint64_t, char *, uint64_t))v10)(v12 + *(int *)(v14 + 24), &v13[*(int *)(v14 + 24)], v253);
        goto LABEL_8;
      }
      sub_1D4697DE0(v12, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    }
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD40);
    memcpy((void *)v12, v13, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_99;
  }
  if (v18)
  {
LABEL_7:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD78);
    memcpy((void *)v12, v13, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
LABEL_8:
    v25 = a3;
    goto LABEL_54;
  }
  v19 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  v20 = *(void **)(v19 - 8);
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v20 + 6))(v13, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD40);
    memcpy((void *)v12, v13, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    v22 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
    v23 = v253;
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v219 = v19;
      *(_QWORD *)v12 = *(_QWORD *)v13;
      v41 = *((_QWORD *)v13 + 1);
      *(_BYTE *)(v12 + 16) = v13[16];
      *(_QWORD *)(v12 + 8) = v41;
      v42 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      v43 = *(int *)(v42 + 24);
      __dsta = (_QWORD *)(v12 + v43);
      v239 = (int *)v42;
      v44 = &v13[v43];
      v45 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      v46 = *(_QWORD *)(v45 - 8);
      v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
      v48 = v45;
      swift_bridgeObjectRetain();
      if (v47(v44, 1, v48))
      {
        v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DEC8);
        memcpy(__dsta, v44, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v50 = v239;
        v22 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
        v19 = v219;
      }
      else
      {
        v210 = v46;
        v215 = v48;
        v74 = swift_getEnumCaseMultiPayload();
        *__dsta = *(_QWORD *)v44;
        if (v74 == 1)
          v75 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
        else
          v75 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
        __srcc = (char *)__dsta + v75;
        v76 = &v44[v75];
        v22 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
        swift_bridgeObjectRetain();
        v22(__srcc, v76, v253);
        v50 = v239;
        v19 = v219;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v210 + 56))(__dsta, 0, 1, v215);
      }
    }
    else
    {
      v223 = v20;
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *(_QWORD *)(v12 + 8) = *((_QWORD *)v13 + 1);
      v52 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      v53 = *(int *)(v52 + 24);
      __dstb = (_QWORD *)(v12 + v53);
      v240 = (int *)v52;
      v54 = &v13[v53];
      v55 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
      v56 = *(_QWORD *)(v55 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
      {
        v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
        memcpy(__dstb, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
        v50 = v240;
        v22 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
        v20 = v223;
      }
      else
      {
        v216 = v55;
        v220 = v56;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v22 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
          v22((char *)__dstb, v54, v253);
          v211 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
          v77 = *(int *)(v211 + 20);
          v199 = (_QWORD *)((char *)__dstb + v77);
          v202 = v54;
          v78 = &v54[v77];
          v79 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
          v80 = *(_QWORD *)(v79 - 8);
          __src = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
          v198 = v80;
          if (__src(v78, 1, v79))
          {
            v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
            memcpy(v199, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
          }
          else
          {
            *v199 = *(_QWORD *)v78;
            v199[1] = *((_QWORD *)v78 + 1);
            v22((char *)v199 + *(int *)(v79 + 24), &v78[*(int *)(v79 + 24)], v253);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v199, 0, 1, v79);
          }
          v20 = v223;
          v103 = *(int *)(v211 + 24);
          v226 = (_QWORD *)((char *)__dstb + v103);
          v104 = &v202[v103];
          if (__src(&v202[v103], 1, v79))
          {
            v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
            memcpy(v226, v104, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
          }
          else
          {
            *v226 = *(_QWORD *)v104;
            v226[1] = *((_QWORD *)v104 + 1);
            v22((char *)v226 + *(int *)(v79 + 24), &v104[*(int *)(v79 + 24)], v253);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v198 + 56))(v226, 0, 1, v79);
          }
          v84 = __dstb;
          v85 = v216;
        }
        else
        {
          *__dstb = *(_QWORD *)v54;
          v82 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
          __srcd = (char *)__dstb + v82;
          v83 = &v54[v82];
          v22 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
          swift_bridgeObjectRetain();
          v22(__srcd, v83, v253);
          v84 = __dstb;
          v85 = v216;
          v20 = v223;
        }
        v110 = v84;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v220 + 56))(v110, 0, 1, v85);
        v50 = v240;
      }
    }
    v111 = v50[7];
    v112 = v12 + v111;
    v113 = &v13[v111];
    v114 = *(_QWORD *)v113;
    *(_BYTE *)(v112 + 8) = v113[8];
    *(_QWORD *)v112 = v114;
    v115 = v50[8];
    v23 = v253;
    v22((char *)(v12 + v115), &v13[v115], v253);
    swift_storeEnumTagMultiPayload();
    (*((void (**)(uint64_t, _QWORD, uint64_t, uint64_t))v20 + 7))(v12, 0, 1, v19);
    v4 = v252;
  }
  v25 = a3;
  *(_BYTE *)(v12 + *(int *)(v14 + 20)) = v13[*(int *)(v14 + 20)];
  v22((char *)(v12 + *(int *)(v14 + 24)), &v13[*(int *)(v14 + 24)], v23);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_54:
  v116 = *(int *)(v25 + 20);
  v117 = (_QWORD *)((char *)v4 + v116);
  v118 = (char *)a2 + v116;
  *v117 = *(_QWORD *)((char *)a2 + v116);
  v117[1] = *(_QWORD *)((char *)a2 + v116 + 8);
  v119 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  v120 = v119[6];
  v121 = (char *)v117 + v120;
  v122 = &v118[v120];
  v123 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  v124 = *(_QWORD *)(v123 - 8);
  v125 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v124 + 48);
  v126 = v125(v121, 1, v123);
  v127 = v125(v122, 1, v123);
  if (!v126)
  {
    if (!v127)
    {
      v135 = v252;
      v137 = v252 == a2;
      v136 = v253;
      if (v137)
        goto LABEL_74;
      sub_1D4697DE0((uint64_t)v121, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        *(_QWORD *)v121 = *(_QWORD *)v122;
        v152 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
        v153 = &v121[v152];
        v154 = &v122[v152];
        v155 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
        v136 = v253;
        swift_bridgeObjectRetain();
        v155(v153, v154, v253);
        swift_storeEnumTagMultiPayload();
        goto LABEL_74;
      }
      v138 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
      v138(v121, v122, v253);
      v250 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
      v139 = v250[5];
      v244 = &v121[v139];
      v140 = &v122[v139];
      v141 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
      v142 = *(_QWORD *)(v141 - 8);
      v247 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48);
      __dste = v138;
      if (v247(v140, 1, v141))
      {
        v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
        memcpy(v244, v140, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v244 = *(_QWORD *)v140;
        *((_QWORD *)v244 + 1) = *((_QWORD *)v140 + 1);
        v138(&v244[*(int *)(v141 + 24)], &v140[*(int *)(v141 + 24)], v253);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v142 + 56))(v244, 0, 1, v141);
      }
      v162 = v142;
      v163 = v250[6];
      v164 = &v121[v163];
      v165 = &v122[v163];
      v135 = v252;
      if (v247(v165, 1, v141))
      {
        v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
        memcpy(v164, v165, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v164 = *(_QWORD *)v165;
        *((_QWORD *)v164 + 1) = *((_QWORD *)v165 + 1);
        __dste(&v164[*(int *)(v141 + 24)], &v165[*(int *)(v141 + 24)], v253);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v164, 0, 1, v141);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_62;
    }
    sub_1D4697DE0((uint64_t)v121, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
LABEL_61:
    v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
    memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
    v135 = v252;
LABEL_62:
    v136 = v253;
    goto LABEL_74;
  }
  if (v127)
    goto LABEL_61;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    __dstd = *(void (**)(_QWORD *, char *, uint64_t))(v245 + 16);
    __dstd(v121, v122, v253);
    v128 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
    v129 = *(int *)(v128 + 20);
    v246 = v128;
    v249 = &v121[v129];
    v130 = &v122[v129];
    v131 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
    v132 = *(_QWORD *)(v131 - 8);
    v243 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v132 + 48);
    v227 = (void *)v132;
    if (v243(v130, 1, v131))
    {
      v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
      memcpy(v249, v130, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v249 = *(_QWORD *)v130;
      *((_QWORD *)v249 + 1) = *((_QWORD *)v130 + 1);
      __dstd(&v249[*(int *)(v131 + 24)], &v130[*(int *)(v131 + 24)], v253);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v132 + 56))(v249, 0, 1, v131);
    }
    v148 = *(int *)(v246 + 24);
    v149 = &v121[v148];
    v150 = &v122[v148];
    v135 = v252;
    if (v243(v150, 1, v131))
    {
      v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
      memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
      v136 = v253;
    }
    else
    {
      *(_QWORD *)v149 = *(_QWORD *)v150;
      *((_QWORD *)v149 + 1) = *((_QWORD *)v150 + 1);
      __dstd(&v149[*(int *)(v131 + 24)], &v150[*(int *)(v131 + 24)], v253);
      v156 = v131;
      v136 = v253;
      (*((void (**)(char *, _QWORD, uint64_t, uint64_t))v227 + 7))(v149, 0, 1, v156);
    }
  }
  else
  {
    *(_QWORD *)v121 = *(_QWORD *)v122;
    v144 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
    v145 = &v121[v144];
    v146 = &v122[v144];
    v147 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
    swift_bridgeObjectRetain();
    v136 = v253;
    v147(v145, v146, v253);
    v135 = v252;
  }
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v121, 0, 1, v123);
LABEL_74:
  v157 = v119[7];
  v158 = (char *)v117 + v157;
  v159 = &v118[v157];
  v160 = *(_QWORD *)v159;
  v158[8] = v159[8];
  *(_QWORD *)v158 = v160;
  ((void (*)(char *, char *, uint64_t))v251)((char *)v117 + v119[8], &v118[v119[8]], v136);
  return v135;
}

_OWORD *sub_1D469F068(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  unsigned int (**v17)(_QWORD *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (**v22)(_QWORD *, _QWORD, uint64_t, uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  int *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v79;
  _QWORD *v80;
  char *v81;
  unsigned int (*v82)(_OWORD *, uint64_t, uint64_t);
  uint64_t v83;
  int *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *__dst;
  char *__dsta;
  void (**__dstb)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v92;
  unsigned int (*v93)(char *, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _OWORD *v97;
  void *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(char *, char *, uint64_t);

  v5 = a1;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  v8 = *(int *)(v7 + 24);
  v9 = (char *)v5 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1D492201C();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v13 = *(int *)(v7 + 28);
  v14 = (_QWORD *)((char *)v5 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  v17 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v16 - 8);
  v102 = v12;
  if (v17[6](v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD78);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_27;
  }
  v98 = v17;
  v19 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  v20 = *(_QWORD *)(v19 - 8);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48))(v15, 1, v19))
  {
    v94 = v20;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v14 = *v15;
    v100 = v11;
    v96 = a3;
    if (EnumCaseMultiPayload == 1)
    {
      v14[1] = v15[1];
      *((_BYTE *)v14 + 16) = *((_BYTE *)v15 + 16);
      v24 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      v25 = *(int *)(v24 + 24);
      __dst = (char *)v14 + v25;
      v92 = v24;
      v26 = (char *)v15 + v25;
      v27 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      v28 = *(_QWORD *)(v27 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        v86 = v28;
        v37 = swift_getEnumCaseMultiPayload();
        *(_QWORD *)__dst = *(_QWORD *)v26;
        v22 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v98;
        v29 = v19;
        if (v37 == 1)
          v43 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
        else
          v43 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
        v102(&__dst[*(int *)(v43 + 20)], &v26[*(int *)(v43 + 20)], v100);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(__dst, 0, 1, v27);
        goto LABEL_25;
      }
      v29 = v19;
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DEC8);
      memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v14[1] = v15[1];
      v31 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      v32 = *(int *)(v31 + 24);
      __dsta = (char *)v14 + v32;
      v92 = v31;
      v33 = (char *)v15 + v32;
      v34 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
      v35 = *(_QWORD *)(v34 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v88 = v35;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v87 = v34;
          v102(__dsta, v33, v100);
          v84 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
          v38 = v84[5];
          v81 = &__dsta[v38];
          v80 = v33;
          v39 = &v33[v38];
          v40 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
          v41 = *(_QWORD *)(v40 - 8);
          v82 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v41 + 48);
          v79 = v41;
          if (v82((char *)v39, 1, v40))
          {
            v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
            memcpy(v81, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
          }
          else
          {
            *v81 = *v39;
            v102((char *)v81 + *(int *)(v40 + 24), (char *)v39 + *(int *)(v40 + 24), v100);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))((char *)v81, 0, 1, v40);
          }
          v22 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v98;
          v46 = v84[6];
          v85 = &__dsta[v46];
          v47 = (_OWORD *)((char *)v80 + v46);
          v48 = v82((_QWORD *)((char *)v80 + v46), 1, v40);
          v49 = v40;
          v34 = v87;
          v29 = v19;
          if (v48)
          {
            v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
            memcpy(v85, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
          }
          else
          {
            *v85 = *v47;
            v83 = v49;
            v102((char *)v85 + *(int *)(v49 + 24), (char *)v47 + *(int *)(v49 + 24), v100);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))((char *)v85, 0, 1, v83);
          }
          v44 = __dsta;
        }
        else
        {
          v29 = v19;
          v44 = __dsta;
          *(_QWORD *)__dsta = *(_QWORD *)v33;
          v45 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
          v102(&__dsta[*(int *)(v45 + 20)], &v33[*(int *)(v45 + 20)], v100);
          v22 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v98;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))((char *)v44, 0, 1, v34);
        goto LABEL_25;
      }
      v29 = v19;
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
      memcpy(__dsta, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    v22 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v98;
LABEL_25:
    v51 = *(int *)(v92 + 28);
    v52 = (char *)v14 + v51;
    v53 = (char *)v15 + v51;
    *(_QWORD *)v52 = *(_QWORD *)v53;
    v52[8] = v53[8];
    v11 = v100;
    v12 = v102;
    v102((char *)v14 + *(int *)(v92 + 32), (char *)v15 + *(int *)(v92 + 32), v100);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v14, 0, 1, v29);
    a3 = v96;
    goto LABEL_26;
  }
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD40);
  memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  v22 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v98;
LABEL_26:
  *((_BYTE *)v14 + *(int *)(v16 + 20)) = *((_BYTE *)v15 + *(int *)(v16 + 20));
  v12((char *)v14 + *(int *)(v16 + 24), (char *)v15 + *(int *)(v16 + 24), v11);
  v22[7](v14, 0, 1, v16);
LABEL_27:
  v54 = *(int *)(a3 + 20);
  v55 = (char *)v5 + v54;
  v56 = (char *)a2 + v54;
  *(_OWORD *)((char *)v5 + v54) = *(_OWORD *)((char *)a2 + v54);
  v57 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  v58 = v57[6];
  v59 = &v55[v58];
  v60 = &v56[v58];
  v61 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  v62 = *(_QWORD *)(v61 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
  {
    v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v97 = v5;
      v102(v59, v60, v11);
      v95 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
      v64 = *(int *)(v95 + 20);
      v99 = &v59[v64];
      v101 = v11;
      v65 = &v60[v64];
      v66 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
      v67 = *(_QWORD *)(v66 - 8);
      v93 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
      __dstb = (void (**)(char *, _QWORD, uint64_t, uint64_t))v67;
      if (v93(v65, 1, v66))
      {
        v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
        memcpy(v99, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v99 = *(_OWORD *)v65;
        v102(&v99[*(int *)(v66 + 24)], &v65[*(int *)(v66 + 24)], v101);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v99, 0, 1, v66);
      }
      v5 = v97;
      v70 = *(int *)(v95 + 24);
      v71 = &v59[v70];
      v72 = &v60[v70];
      if (v93(v72, 1, v66))
      {
        v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        v11 = v101;
      }
      else
      {
        *(_OWORD *)v71 = *(_OWORD *)v72;
        v102(&v71[*(int *)(v66 + 24)], &v72[*(int *)(v66 + 24)], v101);
        v74 = v71;
        v11 = v101;
        __dstb[7](v74, 0, 1, v66);
      }
    }
    else
    {
      *(_QWORD *)v59 = *(_QWORD *)v60;
      v69 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
      v102(&v59[*(int *)(v69 + 20)], &v60[*(int *)(v69 + 20)], v11);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
  }
  v75 = v57[7];
  v76 = &v55[v75];
  v77 = &v56[v75];
  *(_QWORD *)v76 = *(_QWORD *)v77;
  v76[8] = v77[8];
  v102(&v55[v57[8]], &v56[v57[8]], v11);
  return v5;
}

_QWORD *sub_1D469F864(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  unsigned int (**v22)(_QWORD, uint64_t, uint64_t);
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  int v30;
  int v31;
  int EnumCaseMultiPayload;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, char *, uint64_t);
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unsigned int (**v52)(_QWORD *, uint64_t, uint64_t);
  uint64_t v53;
  int *v54;
  void (**v55)(uint64_t, _QWORD, uint64_t, uint64_t);
  int v56;
  int *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  void (*v88)(_OWORD *, char *, uint64_t);
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _OWORD *v96;
  char *v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  int *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t (*v114)(char *, uint64_t, uint64_t);
  int v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  void (*v125)(char *, char *, uint64_t);
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  unsigned int (*v153)(char *, uint64_t, uint64_t);
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _OWORD *v158;
  char *v159;
  unsigned int v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  _OWORD *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  _OWORD *v178;
  void *v179;
  unsigned int (*v180)(char *, uint64_t, uint64_t);
  unsigned int (*v181)(char *, uint64_t, uint64_t);
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  void *v188;
  _OWORD *v189;
  _OWORD *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  _QWORD *__dst;
  _QWORD *__dsta;
  void (*__dstb)(char *, char *, uint64_t);
  void *__dstc;
  int *v198;
  _QWORD *v199;
  void (**v200)(char *, _QWORD, uint64_t, uint64_t);
  void (*v201)(char *, char *, uint64_t);
  _QWORD *v202;
  int *v203;
  void (**v204)(uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v205;
  int *v206;
  void (*v207)(char *, char *, uint64_t);
  _QWORD *v208;
  _QWORD *v209;
  _QWORD *v210;
  unsigned int (*v211)(char *, uint64_t, uint64_t);
  unsigned int (*v212)(char *, uint64_t, uint64_t);
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v217;
  char *v218;
  void (*v219)(char *, char *, uint64_t);
  _QWORD *v220;
  uint64_t v221;

  v3 = a2;
  v4 = a1;
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  v6 = v3[3];
  v4[2] = v3[2];
  v4[3] = v6;
  swift_bridgeObjectRelease();
  v7 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  v8 = *(int *)(v7 + 24);
  v9 = (char *)v4 + v8;
  v10 = (char *)v3 + v8;
  v11 = sub_1D492201C();
  v12 = *(_QWORD *)(v11 - 8);
  v219 = *(void (**)(char *, char *, uint64_t))(v12 + 40);
  v219(v9, v10, v11);
  v13 = *(int *)(v7 + 28);
  v14 = (uint64_t)v4 + v13;
  v15 = (char *)v3 + v13;
  v16 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18((uint64_t)v15, 1, v16);
  v221 = v11;
  v213 = v12;
  v220 = v4;
  if (!v19)
  {
    if (v20)
    {
      sub_1D4697DE0(v14, type metadata accessor for Argos_Protos_MLModel_FeatureType);
      goto LABEL_7;
    }
    v208 = v3;
    v27 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
    v30 = v29(v14, 1, v27);
    v31 = v29((uint64_t)v15, 1, v27);
    if (v30)
    {
      if (!v31)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *(_QWORD *)v14 = *(_QWORD *)v15;
        if (EnumCaseMultiPayload == 1)
        {
          *(_QWORD *)(v14 + 8) = *((_QWORD *)v15 + 1);
          *(_BYTE *)(v14 + 16) = v15[16];
          v203 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
          v33 = v203[6];
          v34 = (_QWORD *)(v14 + v33);
          v35 = &v15[v33];
          v36 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
          v37 = *(_QWORD *)(v36 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
          {
            v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DEC8);
            memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
            v3 = v208;
            v39 = *(void (**)(uint64_t, char *, uint64_t))(v213 + 32);
LABEL_29:
            v70 = v203;
LABEL_99:
            v167 = v70[7];
            v168 = v14 + v167;
            v169 = &v15[v167];
            *(_QWORD *)v168 = *(_QWORD *)v169;
            *(_BYTE *)(v168 + 8) = v169[8];
            v39(v14 + v70[8], &v15[v70[8]], v11);
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v14, 0, 1, v27);
LABEL_100:
            v4 = v220;
            goto LABEL_101;
          }
          v80 = swift_getEnumCaseMultiPayload();
          *v34 = *(_QWORD *)v35;
          if (v80 == 1)
            v81 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
          else
            v81 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
          __dstb = *(void (**)(char *, char *, uint64_t))(v213 + 32);
          __dstb((char *)v34 + *(int *)(v81 + 20), &v35[*(int *)(v81 + 20)], v11);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
          v3 = v208;
        }
        else
        {
          *(_QWORD *)(v14 + 8) = *((_QWORD *)v15 + 1);
          v64 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
          v65 = *(int *)(v64 + 24);
          v199 = (_QWORD *)(v14 + v65);
          v203 = (int *)v64;
          v66 = &v15[v65];
          v67 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
          v68 = *(_QWORD *)(v67 - 8);
          v3 = v208;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
          {
            v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
            memcpy(v199, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
            v39 = *(void (**)(uint64_t, char *, uint64_t))(v213 + 32);
            goto LABEL_29;
          }
          v192 = v68;
          v89 = v66;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v186 = v67;
            __dstb = *(void (**)(char *, char *, uint64_t))(v213 + 32);
            __dstb((char *)v199, v66, v11);
            v183 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
            v90 = *(int *)(v183 + 20);
            v189 = (_OWORD *)((char *)v199 + v90);
            v91 = &v66[v90];
            v92 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
            v93 = *(_QWORD *)(v92 - 8);
            v181 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48);
            v179 = (void *)v93;
            if (v181(v91, 1, v92))
            {
              v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
              memcpy(v189, v91, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
            }
            else
            {
              *v189 = *(_OWORD *)v91;
              __dstb((char *)v189 + *(int *)(v92 + 24), &v91[*(int *)(v92 + 24)], v11);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v189, 0, 1, v92);
            }
            v157 = *(int *)(v183 + 24);
            v158 = (_OWORD *)((char *)v199 + v157);
            v159 = &v89[v157];
            v160 = v181(v159, 1, v92);
            v161 = v92;
            v67 = v186;
            if (v160)
            {
              v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
              memcpy(v158, v159, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
            }
            else
            {
              *v158 = *(_OWORD *)v159;
              __dstb((char *)v158 + *(int *)(v161 + 24), &v159[*(int *)(v161 + 24)], v11);
              (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))v179 + 7))(v158, 0, 1, v161);
            }
            v3 = v208;
            v99 = v199;
          }
          else
          {
            v99 = v199;
            *v199 = *(_QWORD *)v89;
            v100 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
            __dstb = *(void (**)(char *, char *, uint64_t))(v213 + 32);
            __dstb((char *)v199 + *(int *)(v100 + 20), &v89[*(int *)(v100 + 20)], v11);
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v192 + 56))(v99, 0, 1, v67);
        }
        v70 = v203;
        v39 = (void (*)(uint64_t, char *, uint64_t))__dstb;
        goto LABEL_99;
      }
    }
    else
    {
      if (!v31)
      {
        v3 = v208;
        if (v4 == v208)
          goto LABEL_101;
        sub_1D4697DE0(v14, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
        v56 = swift_getEnumCaseMultiPayload();
        *(_QWORD *)v14 = *(_QWORD *)v15;
        if (v56 == 1)
        {
          *(_QWORD *)(v14 + 8) = *((_QWORD *)v15 + 1);
          *(_BYTE *)(v14 + 16) = v15[16];
          v57 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
          v58 = v57[6];
          v205 = (_QWORD *)(v14 + v58);
          v59 = &v15[v58];
          v60 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
          v61 = *(_QWORD *)(v60 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
          {
            v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DEC8);
            memcpy(v205, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
            v63 = *(void (**)(char *, char *, uint64_t))(v213 + 32);
          }
          else
          {
            v146 = swift_getEnumCaseMultiPayload();
            *v205 = *(_QWORD *)v59;
            if (v146 == 1)
              v147 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
            else
              v147 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
            v63 = *(void (**)(char *, char *, uint64_t))(v213 + 32);
            v63((char *)v205 + *(int *)(v147 + 20), &v59[*(int *)(v147 + 20)], v11);
            swift_storeEnumTagMultiPayload();
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v205, 0, 1, v60);
          }
          v3 = v208;
          v163 = v57[7];
          v164 = v14 + v163;
          v165 = &v15[v163];
          *(_QWORD *)v164 = *(_QWORD *)v165;
          *(_BYTE *)(v164 + 8) = v165[8];
          v63((char *)(v14 + v57[8]), &v15[v57[8]], v11);
          swift_storeEnumTagMultiPayload();
          goto LABEL_100;
        }
        *(_QWORD *)(v14 + 8) = *((_QWORD *)v15 + 1);
        v206 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
        v82 = v206[6];
        v83 = (_QWORD *)(v14 + v82);
        v84 = &v15[v82];
        v85 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
        v86 = *(void **)(v85 - 8);
        if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v86 + 6))(v84, 1, v85))
        {
          v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
          memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
          v88 = *(void (**)(_OWORD *, char *, uint64_t))(v213 + 32);
        }
        else
        {
          v202 = v83;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            __dstc = v86;
            v88 = *(void (**)(_OWORD *, char *, uint64_t))(v213 + 32);
            v88(v83, v84, v11);
            v148 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
            v149 = *(int *)(v148 + 20);
            v190 = (_OWORD *)((char *)v83 + v149);
            v193 = v148;
            v150 = &v84[v149];
            v151 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
            v152 = *(_QWORD *)(v151 - 8);
            v153 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48);
            v187 = v150;
            v154 = v150;
            v155 = v151;
            v184 = v152;
            if (v153(v154, 1, v151))
            {
              v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
              memcpy(v190, v187, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
            }
            else
            {
              *v190 = *(_OWORD *)v187;
              v88((_OWORD *)((char *)v190 + *(int *)(v155 + 24)), &v187[*(int *)(v155 + 24)], v221);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v190, 0, 1, v155);
            }
            v170 = *(int *)(v193 + 24);
            v171 = (_OWORD *)((char *)v202 + v170);
            v172 = &v84[v170];
            if (v153(v172, 1, v155))
            {
              v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
              memcpy(v171, v172, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
              v11 = v221;
            }
            else
            {
              *v171 = *(_OWORD *)v172;
              v11 = v221;
              v88((_OWORD *)((char *)v171 + *(int *)(v155 + 24)), &v172[*(int *)(v155 + 24)], v221);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v184 + 56))(v171, 0, 1, v155);
            }
            v86 = __dstc;
            v83 = v202;
          }
          else
          {
            *v83 = *(_QWORD *)v84;
            v166 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
            v88 = *(void (**)(_OWORD *, char *, uint64_t))(v213 + 32);
            v88((_QWORD *)((char *)v83 + *(int *)(v166 + 20)), &v84[*(int *)(v166 + 20)], v11);
          }
          swift_storeEnumTagMultiPayload();
          (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v86 + 7))(v83, 0, 1, v85);
        }
        v174 = v206[7];
        v175 = v14 + v174;
        v176 = &v15[v174];
        *(_QWORD *)v175 = *(_QWORD *)v176;
        *(_BYTE *)(v175 + 8) = v176[8];
        v88((_OWORD *)(v14 + v206[8]), &v15[v206[8]], v11);
        swift_storeEnumTagMultiPayload();
        v4 = v220;
LABEL_20:
        v3 = v208;
LABEL_101:
        *(_BYTE *)(v14 + *(int *)(v16 + 20)) = v15[*(int *)(v16 + 20)];
        v219((char *)(v14 + *(int *)(v16 + 24)), &v15[*(int *)(v16 + 24)], v11);
        goto LABEL_8;
      }
      sub_1D4697DE0(v14, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    }
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD40);
    memcpy((void *)v14, v15, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_20;
  }
  if (v20)
  {
LABEL_7:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD78);
    memcpy((void *)v14, v15, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
LABEL_8:
    v26 = a3;
    goto LABEL_58;
  }
  v21 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  v22 = *(unsigned int (***)(_QWORD, uint64_t, uint64_t))(v21 - 8);
  if (!((unsigned int (**)(char *, uint64_t, uint64_t))v22)[6](v15, 1, v21))
  {
    v204 = (void (**)(uint64_t, _QWORD, uint64_t, uint64_t))v22;
    v40 = swift_getEnumCaseMultiPayload();
    *(_QWORD *)v14 = *(_QWORD *)v15;
    if (v40 == 1)
    {
      v209 = v3;
      *(_QWORD *)(v14 + 8) = *((_QWORD *)v15 + 1);
      *(_BYTE *)(v14 + 16) = v15[16];
      v41 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      v42 = *(int *)(v41 + 24);
      __dst = (_QWORD *)(v14 + v42);
      v198 = (int *)v41;
      v43 = &v15[v42];
      v44 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
      {
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DEC8);
        memcpy(__dst, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      }
      else
      {
        v71 = swift_getEnumCaseMultiPayload();
        *__dst = *(_QWORD *)v43;
        if (v71 == 1)
          v72 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
        else
          v72 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
        v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v24((char *)__dst + *(int *)(v72 + 20), &v43[*(int *)(v72 + 20)], v11);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v45 + 56))(__dst, 0, 1, v44);
      }
      v3 = v209;
    }
    else
    {
      v191 = v21;
      *(_QWORD *)(v14 + 8) = *((_QWORD *)v15 + 1);
      v48 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      v49 = *(int *)(v48 + 24);
      __dsta = (_QWORD *)(v14 + v49);
      v198 = (int *)v48;
      v50 = &v15[v49];
      v51 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
      v52 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v51 - 8);
      if (((unsigned int (**)(char *, uint64_t, uint64_t))v52)[6](v50, 1, v51))
      {
        v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
        memcpy(__dsta, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v54 = v198;
        v55 = v204;
        v21 = v191;
LABEL_56:
        v102 = v54[7];
        v103 = v14 + v102;
        v104 = &v15[v102];
        *(_QWORD *)v103 = *(_QWORD *)v104;
        *(_BYTE *)(v103 + 8) = v104[8];
        v24((char *)(v14 + v54[8]), &v15[v54[8]], v11);
        swift_storeEnumTagMultiPayload();
        v55[7](v14, 0, 1, v21);
        v4 = v220;
        goto LABEL_57;
      }
      v185 = v51;
      v188 = v52;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v210 = v3;
        v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v24((char *)__dsta, v50, v11);
        v182 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
        v73 = *(int *)(v182 + 20);
        v178 = (_OWORD *)((char *)__dsta + v73);
        v74 = &v50[v73];
        v75 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
        v76 = *(_QWORD *)(v75 - 8);
        v180 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
        v177 = v76;
        if (v180(v74, 1, v75))
        {
          v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
          memcpy(v178, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        }
        else
        {
          *v178 = *(_OWORD *)v74;
          v24((char *)v178 + *(int *)(v75 + 24), &v74[*(int *)(v75 + 24)], v11);
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v178, 0, 1, v75);
        }
        v95 = *(int *)(v182 + 24);
        v96 = (_OWORD *)((char *)__dsta + v95);
        v97 = &v50[v95];
        if (v180(&v50[v95], 1, v75))
        {
          v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
          memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
        }
        else
        {
          *v96 = *(_OWORD *)v97;
          v24((char *)v96 + *(int *)(v75 + 24), &v97[*(int *)(v75 + 24)], v11);
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v177 + 56))(v96, 0, 1, v75);
        }
        v3 = v210;
        v79 = __dsta;
      }
      else
      {
        *__dsta = *(_QWORD *)v50;
        v78 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
        v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v24((char *)__dsta + *(int *)(v78 + 20), &v50[*(int *)(v78 + 20)], v11);
        v79 = __dsta;
      }
      v21 = v191;
      v101 = v79;
      swift_storeEnumTagMultiPayload();
      (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v188 + 7))(v101, 0, 1, v185);
    }
    v54 = v198;
    v55 = v204;
    goto LABEL_56;
  }
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD40);
  memcpy((void *)v14, v15, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
LABEL_57:
  v26 = a3;
  *(_BYTE *)(v14 + *(int *)(v16 + 20)) = v15[*(int *)(v16 + 20)];
  v24((char *)(v14 + *(int *)(v16 + 24)), &v15[*(int *)(v16 + 24)], v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_58:
  v105 = *(int *)(v26 + 20);
  v106 = (char *)v4 + v105;
  v107 = (char *)v3 + v105;
  *(_OWORD *)((char *)v4 + v105) = *(_OWORD *)((char *)v3 + v105);
  v108 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  v109 = v108[6];
  v110 = &v106[v109];
  v111 = &v107[v109];
  v112 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  v113 = *(_QWORD *)(v112 - 8);
  v114 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v113 + 48);
  v115 = v114(v110, 1, v112);
  v116 = v114(v111, 1, v112);
  if (v115)
  {
    if (!v116)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v207 = *(void (**)(char *, char *, uint64_t))(v213 + 32);
        v207(v110, v111, v221);
        v117 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
        v118 = *(int *)(v117 + 20);
        v214 = v117;
        v217 = &v110[v118];
        v119 = &v111[v118];
        v120 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
        v121 = *(_QWORD *)(v120 - 8);
        v211 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48);
        v200 = (void (**)(char *, _QWORD, uint64_t, uint64_t))v121;
        if (v211(v119, 1, v120))
        {
          v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
          memcpy(v217, v119, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v217 = *(_OWORD *)v119;
          v207(&v217[*(int *)(v120 + 24)], &v119[*(int *)(v120 + 24)], v221);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v217, 0, 1, v120);
        }
        v133 = *(int *)(v214 + 24);
        v134 = &v110[v133];
        v135 = &v111[v133];
        v124 = v220;
        if (v211(v135, 1, v120))
        {
          v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
          memcpy(v134, v135, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v134 = *(_OWORD *)v135;
          v207(&v134[*(int *)(v120 + 24)], &v135[*(int *)(v120 + 24)], v221);
          v200[7](v134, 0, 1, v120);
        }
      }
      else
      {
        *(_QWORD *)v110 = *(_QWORD *)v111;
        v132 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
        (*(void (**)(char *, char *, uint64_t))(v213 + 32))(&v110[*(int *)(v132 + 20)], &v111[*(int *)(v132 + 20)], v221);
        v124 = v220;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v113 + 56))(v110, 0, 1, v112);
      goto LABEL_77;
    }
LABEL_65:
    v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DF68);
    memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
    v124 = v220;
    goto LABEL_77;
  }
  if (v116)
  {
    sub_1D4697DE0((uint64_t)v110, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
    goto LABEL_65;
  }
  v124 = v220;
  if (v220 != v3)
  {
    sub_1D4697DE0((uint64_t)v110, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v125 = *(void (**)(char *, char *, uint64_t))(v213 + 32);
      v125(v110, v111, v221);
      v126 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
      v127 = *(int *)(v126 + 20);
      v215 = v126;
      v218 = &v110[v127];
      v128 = &v111[v127];
      v129 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
      v130 = *(_QWORD *)(v129 - 8);
      v212 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48);
      v201 = v125;
      if (v212(v128, 1, v129))
      {
        v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
        memcpy(v218, v128, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v218 = *(_OWORD *)v128;
        v125(&v218[*(int *)(v129 + 24)], &v128[*(int *)(v129 + 24)], v221);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v218, 0, 1, v129);
      }
      v142 = *(int *)(v215 + 24);
      v143 = &v110[v142];
      v144 = &v111[v142];
      v124 = v220;
      if (v212(v144, 1, v129))
      {
        v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA428);
        memcpy(v143, v144, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v143 = *(_OWORD *)v144;
        v201(&v143[*(int *)(v129 + 24)], &v144[*(int *)(v129 + 24)], v221);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v143, 0, 1, v129);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *(_QWORD *)v110 = *(_QWORD *)v111;
      v137 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
      (*(void (**)(char *, char *, uint64_t))(v213 + 32))(&v110[*(int *)(v137 + 20)], &v111[*(int *)(v137 + 20)], v221);
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_77:
  v138 = v108[7];
  v139 = &v106[v138];
  v140 = &v107[v138];
  *(_QWORD *)v139 = *(_QWORD *)v140;
  v139[8] = v140[8];
  v219(&v106[v108[8]], &v107[v108[8]], v221);
  return v124;
}

uint64_t sub_1D46A0BCC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D46A0BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1D46A0C4C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D46A0C58(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1D46A0CD4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for MLModelAssetRole(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MLModelAssetRole(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1D46A0E40 + 4 * byte_1D4927400[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1D46A0E74 + 4 * byte_1D49273FB[v4]))();
}

uint64_t sub_1D46A0E74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46A0E7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D46A0E84);
  return result;
}

uint64_t sub_1D46A0E90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D46A0E98);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1D46A0E9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46A0EA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46A0EB0(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1D46A0EB8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for MLModelAssetRole()
{
  return &type metadata for MLModelAssetRole;
}

unint64_t sub_1D46A0ED4()
{
  unint64_t result;

  result = qword_1ED98CD00;
  if (!qword_1ED98CD00)
  {
    result = MEMORY[0x1D82634E0](&unk_1D492752C, &type metadata for MLModelAssetRole);
    atomic_store(result, (unint64_t *)&qword_1ED98CD00);
  }
  return result;
}

uint64_t sub_1D46A0F18@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X1>, CGFloat *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  int v28;
  char v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  CGFloat *v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  uint64_t v42;
  CGFloat MinX;
  uint64_t v44;
  unint64_t v45;
  CGFloat MinY;
  CGFloat Width;
  CGFloat Height;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v55;
  int v56;
  int v57;
  CGFloat *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75[3];
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  _OWORD v84[2];
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  _OWORD v93[2];
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  _OWORD v102[3];
  CGRect v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;

  v69 = a4;
  v58 = a3;
  v71 = a2;
  v5 = sub_1D4922370();
  v63 = *(_QWORD *)(v5 - 8);
  v64 = v5;
  MEMORY[0x1E0C80A78](v5);
  v72 = (uint64_t)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[1];
  v96 = a1[2];
  v8 = a1[5];
  v9 = a1[7];
  v100 = a1[6];
  v101 = v9;
  v10 = a1[7];
  v102[0] = a1[8];
  *(_OWORD *)((char *)v102 + 12) = *(__int128 *)((char *)a1 + 140);
  v11 = a1[2];
  v12 = a1[4];
  v97 = a1[3];
  v98 = v12;
  v13 = a1[4];
  v99 = a1[5];
  v14 = a1[1];
  v94 = *a1;
  v95 = v14;
  v85 = v94;
  v86 = v7;
  v89 = v13;
  v90 = v8;
  v70 = v96;
  v59 = *((_QWORD *)&v14 + 1);
  v73 = *((_QWORD *)&v97 + 1);
  v60 = v97;
  v15 = *((_QWORD *)&v98 + 1);
  v17 = *((_QWORD *)&v99 + 1);
  v16 = v99;
  v18 = v100;
  v61 = v98;
  v62 = *((_QWORD *)&v102[0] + 1);
  v19 = *(_QWORD *)&v102[1];
  v87 = v11;
  v88 = v97;
  v20 = a1[8];
  *(_OWORD *)((char *)v93 + 12) = *(__int128 *)((char *)a1 + 140);
  v92 = v10;
  v93[0] = v20;
  v91 = v100;
  v21 = *v71;
  v65 = v94;
  v71 = (uint64_t *)sub_1D46F8BC8(v94);
  v23 = v22;
  sub_1D46A47CC((uint64_t)&v94);
  v68 = v15;
  v24 = v70;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v67 = v16;
  sub_1D46A484C(v16, v17);
  v66 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v16) = sub_1D46DE598((uint64_t)v71, v23, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
  {
    v25 = *((_QWORD *)&v94 + 1);
    v26 = v95;
    v27 = BYTE8(v96);
    v28 = DWORD2(v101);
    LODWORD(v71) = BYTE13(v101);
    v29 = BYTE14(v101);
    v56 = LOBYTE(v102[0]);
    v57 = HIBYTE(v101);
    HIDWORD(v55) = BYTE1(v102[0]);
    v30 = DWORD2(v102[1]);
    BYTE12(v92) = 0;
    v31 = v101;
    sub_1D470C76C(v72);
    LOBYTE(v76) = v65;
    *((_QWORD *)&v76 + 1) = v25;
    *(_QWORD *)&v77 = v26;
    *((_QWORD *)&v77 + 1) = v59;
    *(_QWORD *)&v78 = v24;
    BYTE8(v78) = v27;
    *(_QWORD *)&v79 = v60;
    *((_QWORD *)&v79 + 1) = v73;
    v32 = v67;
    *(_QWORD *)&v80 = v61;
    *((_QWORD *)&v80 + 1) = v68;
    *(_QWORD *)&v81 = v67;
    *((_QWORD *)&v81 + 1) = v17;
    v82 = v18;
    *(_QWORD *)&v83 = v31;
    DWORD2(v83) = v28;
    BYTE12(v83) = 0;
    BYTE13(v83) = (_BYTE)v71;
    BYTE14(v83) = v29;
    HIBYTE(v83) = v57;
    LOBYTE(v84[0]) = v56;
    BYTE1(v84[0]) = BYTE4(v55);
    *((_QWORD *)&v84[0] + 1) = v62;
    *(_QWORD *)&v84[1] = v66;
    DWORD2(v84[1]) = v30;
    sub_1D46A47CC((uint64_t)&v76);
    swift_bridgeObjectRelease();
    sub_1D46A487C(v32, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D46A47CC((uint64_t)&v76);
    v33 = sub_1D4922358();
    v34 = sub_1D4922910();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v36 = swift_slowAlloc();
      v75[0] = v36;
      *(_DWORD *)v35 = 136315394;
      v37 = v58;
      swift_beginAccess();
      v38 = *v37;
      v39 = v37[1];
      v40 = v37[2];
      v41 = v37[3];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
      v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_1D4927560;
      v103.origin.x = v38;
      v103.origin.y = v39;
      v103.size.width = v40;
      v103.size.height = v41;
      MinX = CGRectGetMinX(v103);
      v44 = MEMORY[0x1E0DEF040];
      *(_QWORD *)(v42 + 56) = MEMORY[0x1E0DEF040];
      v45 = sub_1D46A492C();
      *(_QWORD *)(v42 + 64) = v45;
      *(CGFloat *)(v42 + 32) = MinX;
      v104.origin.x = v38;
      v104.origin.y = v39;
      v104.size.width = v40;
      v104.size.height = v41;
      MinY = CGRectGetMinY(v104);
      *(_QWORD *)(v42 + 96) = v44;
      *(_QWORD *)(v42 + 104) = v45;
      *(CGFloat *)(v42 + 72) = MinY;
      v105.origin.x = v38;
      v105.origin.y = v39;
      v105.size.width = v40;
      v105.size.height = v41;
      Width = CGRectGetWidth(v105);
      *(_QWORD *)(v42 + 136) = v44;
      *(_QWORD *)(v42 + 144) = v45;
      *(CGFloat *)(v42 + 112) = Width;
      v106.origin.x = v38;
      v106.origin.y = v39;
      v106.size.width = v40;
      v106.size.height = v41;
      Height = CGRectGetHeight(v106);
      *(_QWORD *)(v42 + 176) = v44;
      *(_QWORD *)(v42 + 184) = v45;
      *(CGFloat *)(v42 + 152) = Height;
      v49 = sub_1D4922640();
      v74 = sub_1D47F0250(v49, v50, v75);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      v51 = sub_1D46F8BC8(v65);
      v74 = sub_1D47F0250(v51, v52, v75);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      sub_1D46A48AC((uint64_t)&v76);
      sub_1D46A48AC((uint64_t)&v76);
      _os_log_impl(&dword_1D467C000, v33, v34, "%s unselects %s because this region contains a known person and satisfies person_image_level_supression_rule.", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v36, -1, -1);
      MEMORY[0x1D82635B8](v35, -1, -1);
    }
    else
    {
      sub_1D46A48AC((uint64_t)&v76);
      sub_1D46A48AC((uint64_t)&v76);
    }

    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v72, v64);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1D46A487C(v67, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v53 = v69;
  swift_beginAccess();
  v83 = v92;
  v84[0] = v93[0];
  *(_OWORD *)((char *)v84 + 12) = *(_OWORD *)((char *)v93 + 12);
  v78 = v87;
  v79 = v88;
  v80 = v89;
  v81 = v90;
  v82 = v91;
  v76 = v85;
  v77 = v86;
  faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v76);
  return sub_1D46A4760((uint64_t)&v76, v53);
}

unint64_t sub_1D46A14FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v49;
  unint64_t v50;
  _QWORD v52[2];
  unint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t *v65;
  _OWORD v66[8];
  _OWORD v67[2];
  __int128 v68[8];
  _OWORD v69[4];
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  _OWORD v76[2];
  _BYTE v77[160];
  _BYTE v78[176];
  _OWORD *v79;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D7C0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v9 = *(_QWORD *)(v60 - 8);
  v10 = MEMORY[0x1E0C80A78](v60);
  v59 = (uint64_t)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v52 - v13;
  MEMORY[0x1E0C80A78](v12);
  v54 = (uint64_t)v52 - v15;
  v58 = *(_QWORD *)(a1 + 16);
  if (!v58)
    return MEMORY[0x1E0DEE9D8];
  v16 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v52[1] = a1;
  v53 = v16;
  v56 = a1 + v16;
  v61 = *(_QWORD *)(v9 + 72);
  swift_bridgeObjectRetain();
  v17 = 0;
  v18 = MEMORY[0x1E0DEE9D8];
  v64 = v14;
  v65 = a2;
  v55 = v8;
  v57 = v9;
  do
  {
    v62 = v18;
    v63 = v17;
    sub_1D469C304(v56 + v61 * v17, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v19 = *(_QWORD *)(*((_QWORD *)v14 + 5) + 16);
    if (v19)
    {
      v20 = (_OWORD *)swift_bridgeObjectRetain();
      v21 = v20[9];
      v74 = v20[8];
      v75 = v21;
      v76[0] = v20[10];
      *(_OWORD *)((char *)v76 + 12) = *(_OWORD *)((char *)v20 + 172);
      v22 = v20[5];
      v70 = v20[4];
      v71 = v22;
      v23 = v20[7];
      v72 = v20[6];
      v73 = v23;
      v24 = v20[2];
      v25 = v20[3];
      v79 = v20;
      v26 = v19 - 1;
      v27 = 12;
      v28 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      while (1)
      {
        v69[2] = v24;
        v69[3] = v25;
        v68[6] = v74;
        v68[7] = v75;
        v69[0] = v76[0];
        *(_OWORD *)((char *)v69 + 12) = *(_OWORD *)((char *)v76 + 12);
        v68[2] = v70;
        v68[3] = v71;
        v68[4] = v72;
        v68[5] = v73;
        v68[0] = v24;
        v68[1] = v25;
        v29 = v3;
        sub_1D46A0F18(v68, a2, (CGFloat *)v14, (uint64_t)v66);
        sub_1D46A4760((uint64_t)v66, (uint64_t)v77);
        sub_1D46A4760((uint64_t)v77, (uint64_t)v78);
        if (sub_1D46A47A8((uint64_t)v78) != 1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v28 = sub_1D48A84F8(0, v28[2] + 1, 1, v28);
          v31 = v28[2];
          v30 = v28[3];
          if (v31 >= v30 >> 1)
            v28 = sub_1D48A84F8((_QWORD *)(v30 > 1), v31 + 1, 1, v28);
          sub_1D46A4760((uint64_t)v77, (uint64_t)v66);
          v28[2] = v31 + 1;
          v32 = &v28[20 * v31];
          v33 = v66[1];
          v32[2] = v66[0];
          v32[3] = v33;
          v34 = v66[5];
          v36 = v66[2];
          v35 = v66[3];
          v32[6] = v66[4];
          v32[7] = v34;
          v32[4] = v36;
          v32[5] = v35;
          v37 = v66[7];
          v38 = v67[0];
          v39 = v66[6];
          *(_OWORD *)((char *)v32 + 172) = *(_OWORD *)((char *)v67 + 12);
          v32[9] = v37;
          v32[10] = v38;
          v32[8] = v39;
          v3 = v29;
          v14 = v64;
          a2 = v65;
        }
        if (!v26)
          break;
        v40 = v79[v27 + 7];
        v74 = v79[v27 + 6];
        v75 = v40;
        v76[0] = v79[v27 + 8];
        *(_OWORD *)((char *)v76 + 12) = *(_OWORD *)((char *)&v79[v27 + 8] + 12);
        v41 = v79[v27 + 3];
        v70 = v79[v27 + 2];
        v71 = v41;
        v42 = v79[v27 + 5];
        v72 = v79[v27 + 4];
        v73 = v42;
        v24 = v79[v27];
        v25 = v79[v27 + 1];
        v27 += 10;
        --v26;
      }
      swift_bridgeObjectRelease();
      v8 = v55;
    }
    else
    {
      v28 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_beginAccess();
    *((_QWORD *)v14 + 5) = v28;
    swift_bridgeObjectRelease();
    sub_1D469C304((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v43 = (uint64_t)v8;
    v44 = v57;
    v45 = v60;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56))(v43, 0, 1, v60);
    sub_1D4697DE0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
    v8 = (char *)v43;
    if (v46(v43, 1, v45) == 1)
    {
      sub_1D46992EC(v43, &qword_1ED98D7C0);
      v18 = v62;
      a2 = v65;
    }
    else
    {
      v47 = v54;
      sub_1D469C630(v43, v54, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1D469C630(v47, v59, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      v18 = v62;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      a2 = v65;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v18 = sub_1D48A8614(0, *(_QWORD *)(v18 + 16) + 1, 1, v18);
      v50 = *(_QWORD *)(v18 + 16);
      v49 = *(_QWORD *)(v18 + 24);
      if (v50 >= v49 >> 1)
        v18 = sub_1D48A8614(v49 > 1, v50 + 1, 1, v18);
      *(_QWORD *)(v18 + 16) = v50 + 1;
      sub_1D469C630(v59, v18 + v53 + v50 * v61, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      v14 = v64;
    }
    v17 = v63 + 1;
  }
  while (v63 + 1 != v58);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1D46A19EC(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1D46D7444(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_1D46A1A6C(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1D46A1A6C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  float v26;
  float v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  float v45;
  float v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  char v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;

  v2 = v1;
  v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v125 = *(_QWORD *)(v4 - 8);
  v126 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v122 = (uint64_t)&v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v131 = (uint64_t)&v116 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v129 = (uint64_t)&v116 - v10;
  MEMORY[0x1E0C80A78](v9);
  v128 = (uint64_t)&v116 - v11;
  v12 = a1[1];
  result = sub_1D4922E08();
  if (result >= v12)
  {
    if (v12 < 0)
      goto LABEL_138;
    if (v12)
      return sub_1D46A2444(0, v12, 1, a1);
    return result;
  }
  if (v12 >= 0)
    v14 = v12;
  else
    v14 = v12 + 1;
  if (v12 < -1)
    goto LABEL_146;
  v118 = result;
  if (v12 < 2)
  {
    v18 = (char *)MEMORY[0x1E0DEE9D8];
    v124 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
    v117 = MEMORY[0x1E0DEE9D8];
    if (v12 != 1)
    {
      v20 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_104:
      if (v20 >= 2)
      {
        v109 = *a1;
        do
        {
          v110 = v20 - 2;
          if (v20 < 2)
            goto LABEL_133;
          if (!v109)
            goto LABEL_145;
          v111 = v18;
          v112 = *(_QWORD *)&v18[16 * v110 + 32];
          v113 = *(_QWORD *)&v18[16 * v20 + 24];
          sub_1D46A2674(v109 + *(_QWORD *)(v125 + 72) * v112, v109 + *(_QWORD *)(v125 + 72) * *(_QWORD *)&v18[16 * v20 + 16], v109 + *(_QWORD *)(v125 + 72) * v113, v124);
          if (v2)
            break;
          if (v113 < v112)
            goto LABEL_134;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v111 = sub_1D46D5B88((uint64_t)v18);
          if (v110 >= *((_QWORD *)v111 + 2))
            goto LABEL_135;
          v114 = &v111[16 * v110 + 32];
          *(_QWORD *)v114 = v112;
          *((_QWORD *)v114 + 1) = v113;
          v115 = *((_QWORD *)v111 + 2);
          if (v20 > v115)
            goto LABEL_136;
          memmove(&v111[16 * v20 + 16], &v111[16 * v20 + 32], 16 * (v115 - v20));
          *((_QWORD *)v111 + 2) = v115 - 1;
          v20 = v115 - 1;
          v18 = v111;
        }
        while (v115 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v117 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v15 = v14 >> 1;
    v16 = sub_1D4922850();
    *(_QWORD *)(v16 + 16) = v15;
    v17 = *(unsigned __int8 *)(v125 + 80);
    v117 = v16;
    v124 = v16 + ((v17 + 32) & ~v17);
  }
  v19 = 0;
  v18 = (char *)MEMORY[0x1E0DEE9D8];
  v130 = a1;
  while (1)
  {
    v21 = v19 + 1;
    v123 = v19;
    if (v19 + 1 >= v12)
    {
      v28 = v19 + 1;
      goto LABEL_24;
    }
    v120 = *a1;
    v22 = v120;
    v132 = *(_QWORD *)(v125 + 72);
    v23 = v128;
    sub_1D469C304(v120 + v132 * v21, v128, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v24 = v22 + v132 * v19;
    v25 = v129;
    sub_1D469C304(v24, v129, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v26 = *(float *)(v23 + 64);
    v27 = *(float *)(v25 + 64);
    sub_1D4697DE0(v25, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1D4697DE0(v23, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v28 = v19 + 2;
    if (v19 + 2 >= v12)
    {
LABEL_21:
      if (v27 >= v26)
        goto LABEL_24;
LABEL_42:
      if (v28 < v19)
        goto LABEL_139;
      if (v19 < v28)
      {
        v127 = v12;
        v119 = v18;
        v49 = 0;
        v50 = v132;
        v51 = v132 * (v28 - 1);
        v52 = v28 * v132;
        v53 = v19 * v132;
        do
        {
          if (v19 != v28 + v49 - 1)
          {
            v121 = v2;
            v54 = v120;
            if (!v120)
              goto LABEL_144;
            v55 = v120 + v53;
            sub_1D469C630(v120 + v53, v122, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
            if (v53 < v51 || v55 >= v54 + v52)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v53 != v51)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            sub_1D469C630(v122, v54 + v51, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
            a1 = v130;
            v2 = v121;
            v50 = v132;
          }
          ++v19;
          --v49;
          v51 -= v50;
          v52 -= v50;
          v53 += v50;
        }
        while (v19 < v28 + v49);
        v18 = v119;
        v19 = v123;
        v12 = v127;
      }
      goto LABEL_24;
    }
    v121 = v2;
    v119 = v18;
    v127 = v132 * v21;
    v29 = v120;
    v30 = v19 + 2;
    v31 = v132 * (v19 + 2);
    while (1)
    {
      v32 = v12;
      v33 = v128;
      sub_1D469C304(v29 + v31, v128, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      v34 = v129;
      sub_1D469C304(v29 + v127, v129, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      v35 = *(float *)(v34 + 64) >= *(float *)(v33 + 64);
      sub_1D4697DE0(v34, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1D4697DE0(v33, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v27 < v26 == v35)
        break;
      v29 += v132;
      ++v30;
      v12 = v32;
      if (v32 == v30)
      {
        v28 = v32;
        v18 = v119;
        v2 = v121;
        v19 = v123;
        goto LABEL_21;
      }
    }
    v18 = v119;
    v28 = v30;
    v2 = v121;
    v19 = v123;
    v12 = v32;
    if (v27 < v26)
      goto LABEL_42;
LABEL_24:
    if (v28 >= v12)
      goto LABEL_56;
    if (__OFSUB__(v28, v19))
      goto LABEL_137;
    if (v28 - v19 >= v118)
      goto LABEL_56;
    if (__OFADD__(v19, v118))
      goto LABEL_140;
    v36 = v19 + v118 >= v12 ? v12 : v19 + v118;
    if (v36 < v19)
      break;
    if (v28 != v36)
    {
      v119 = v18;
      v120 = v36;
      v121 = v2;
      v37 = *(_QWORD *)(v125 + 72);
      v132 = v37 * (v28 - 1);
      v127 = v37;
      v38 = v28 * v37;
      do
      {
        v39 = 0;
        while (1)
        {
          v40 = v28;
          v41 = *a1;
          v42 = v128;
          sub_1D469C304(v38 + v39 + *a1, v128, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          v43 = v132 + v39 + v41;
          v44 = v129;
          sub_1D469C304(v43, v129, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          v45 = *(float *)(v42 + 64);
          v46 = *(float *)(v44 + 64);
          sub_1D4697DE0(v44, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1D4697DE0(v42, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v46 >= v45)
            break;
          v47 = *a1;
          if (!*a1)
            goto LABEL_142;
          v48 = v47 + v132 + v39;
          sub_1D469C630(v47 + v38 + v39, v131, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          swift_arrayInitWithTakeFrontToBack();
          sub_1D469C630(v131, v48, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          v39 -= v127;
          ++v19;
          v28 = v40;
          a1 = v130;
          if (v40 == v19)
            goto LABEL_35;
        }
        v28 = v40;
LABEL_35:
        ++v28;
        v132 += v127;
        v38 += v127;
        v19 = v123;
      }
      while (v28 != v120);
      v28 = v120;
      v2 = v121;
      v18 = v119;
    }
LABEL_56:
    if (v28 < v19)
      goto LABEL_132;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v132 = v28;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v18 = sub_1D46D5278(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
    v58 = *((_QWORD *)v18 + 2);
    v57 = *((_QWORD *)v18 + 3);
    v20 = v58 + 1;
    if (v58 >= v57 >> 1)
      v18 = sub_1D46D5278((char *)(v57 > 1), v58 + 1, 1, v18);
    *((_QWORD *)v18 + 2) = v20;
    v59 = v18 + 32;
    v60 = &v18[16 * v58 + 32];
    v61 = v132;
    *(_QWORD *)v60 = v19;
    *((_QWORD *)v60 + 1) = v61;
    if (v58)
    {
      while (1)
      {
        v62 = v20 - 1;
        if (v20 >= 4)
        {
          v67 = &v59[16 * v20];
          v68 = *((_QWORD *)v67 - 8);
          v69 = *((_QWORD *)v67 - 7);
          v73 = __OFSUB__(v69, v68);
          v70 = v69 - v68;
          if (v73)
            goto LABEL_121;
          v72 = *((_QWORD *)v67 - 6);
          v71 = *((_QWORD *)v67 - 5);
          v73 = __OFSUB__(v71, v72);
          v65 = v71 - v72;
          v66 = v73;
          if (v73)
            goto LABEL_122;
          v74 = v20 - 2;
          v75 = &v59[16 * v20 - 32];
          v77 = *(_QWORD *)v75;
          v76 = *((_QWORD *)v75 + 1);
          v73 = __OFSUB__(v76, v77);
          v78 = v76 - v77;
          if (v73)
            goto LABEL_124;
          v73 = __OFADD__(v65, v78);
          v79 = v65 + v78;
          if (v73)
            goto LABEL_127;
          if (v79 >= v70)
          {
            v97 = &v59[16 * v62];
            v99 = *(_QWORD *)v97;
            v98 = *((_QWORD *)v97 + 1);
            v73 = __OFSUB__(v98, v99);
            v100 = v98 - v99;
            if (v73)
              goto LABEL_131;
            v90 = v65 < v100;
            goto LABEL_93;
          }
        }
        else
        {
          if (v20 != 3)
          {
            v91 = *((_QWORD *)v18 + 4);
            v92 = *((_QWORD *)v18 + 5);
            v73 = __OFSUB__(v92, v91);
            v84 = v92 - v91;
            v85 = v73;
            goto LABEL_87;
          }
          v64 = *((_QWORD *)v18 + 4);
          v63 = *((_QWORD *)v18 + 5);
          v73 = __OFSUB__(v63, v64);
          v65 = v63 - v64;
          v66 = v73;
        }
        if ((v66 & 1) != 0)
          goto LABEL_123;
        v74 = v20 - 2;
        v80 = &v59[16 * v20 - 32];
        v82 = *(_QWORD *)v80;
        v81 = *((_QWORD *)v80 + 1);
        v83 = __OFSUB__(v81, v82);
        v84 = v81 - v82;
        v85 = v83;
        if (v83)
          goto LABEL_126;
        v86 = &v59[16 * v62];
        v88 = *(_QWORD *)v86;
        v87 = *((_QWORD *)v86 + 1);
        v73 = __OFSUB__(v87, v88);
        v89 = v87 - v88;
        if (v73)
          goto LABEL_129;
        if (__OFADD__(v84, v89))
          goto LABEL_130;
        if (v84 + v89 >= v65)
        {
          v90 = v65 < v89;
LABEL_93:
          if (v90)
            v62 = v74;
          goto LABEL_95;
        }
LABEL_87:
        if ((v85 & 1) != 0)
          goto LABEL_125;
        v93 = &v59[16 * v62];
        v95 = *(_QWORD *)v93;
        v94 = *((_QWORD *)v93 + 1);
        v73 = __OFSUB__(v94, v95);
        v96 = v94 - v95;
        if (v73)
          goto LABEL_128;
        if (v96 < v84)
          goto LABEL_14;
LABEL_95:
        v101 = v62 - 1;
        if (v62 - 1 >= v20)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        v102 = *a1;
        if (!*a1)
          goto LABEL_143;
        v103 = v18;
        v104 = &v59[16 * v101];
        v105 = *(_QWORD *)v104;
        v106 = &v59[16 * v62];
        v107 = *((_QWORD *)v106 + 1);
        sub_1D46A2674(v102 + *(_QWORD *)(v125 + 72) * *(_QWORD *)v104, v102 + *(_QWORD *)(v125 + 72) * *(_QWORD *)v106, v102 + *(_QWORD *)(v125 + 72) * v107, v124);
        if (v2)
          goto LABEL_115;
        if (v107 < v105)
          goto LABEL_118;
        if (v62 > *((_QWORD *)v103 + 2))
          goto LABEL_119;
        *(_QWORD *)v104 = v105;
        *(_QWORD *)&v59[16 * v101 + 8] = v107;
        v108 = *((_QWORD *)v103 + 2);
        if (v62 >= v108)
          goto LABEL_120;
        v18 = v103;
        v20 = v108 - 1;
        memmove(&v59[16 * v62], v106 + 16, 16 * (v108 - 1 - v62));
        *((_QWORD *)v103 + 2) = v108 - 1;
        a1 = v130;
        if (v108 <= 2)
          goto LABEL_14;
      }
    }
    v20 = 1;
LABEL_14:
    v12 = a1[1];
    v19 = v132;
    if (v132 >= v12)
      goto LABEL_104;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_1D4922C28();
  __break(1u);
  return result;
}

uint64_t sub_1D46A2444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  float *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  float v21;
  float v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v27 = a1;
  v28 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v7 = MEMORY[0x1E0C80A78](v28);
  v32 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v29 = (uint64_t)&v25 - v10;
  result = MEMORY[0x1E0C80A78](v9);
  v14 = (float *)((char *)&v25 - v13);
  v31 = a3;
  v26 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v34 = v15 * (v31 - 1);
    v30 = v15;
    v33 = v15 * v31;
LABEL_5:
    v16 = 0;
    v17 = v27;
    while (1)
    {
      v18 = *a4;
      sub_1D469C304(v33 + v16 + *a4, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      v19 = v34 + v16 + v18;
      v20 = v29;
      sub_1D469C304(v19, v29, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      v21 = v14[16];
      v22 = *(float *)(v20 + 64);
      sub_1D4697DE0(v20, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      result = sub_1D4697DE0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v22 >= v21)
      {
LABEL_4:
        v34 += v30;
        v33 += v30;
        if (++v31 == v26)
          return result;
        goto LABEL_5;
      }
      v23 = *a4;
      if (!*a4)
        break;
      v24 = v23 + v34 + v16;
      sub_1D469C630(v23 + v33 + v16, v32, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_1D469C630(v32, v24, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      v16 -= v30;
      if (v31 == ++v17)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1D46A2674(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  float *v10;
  uint64_t v11;
  float *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  float v21;
  float v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v26;
  unint64_t v28;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  float v33;
  float v34;
  unint64_t v35;
  uint64_t result;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;

  v40 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v8 = MEMORY[0x1E0C80A78](v40);
  v10 = (float *)((char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v12 = (float *)((char *)&v38 - v11);
  v14 = *(_QWORD *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1)
    goto LABEL_70;
  v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1)
    goto LABEL_71;
  v16 = (uint64_t)(a2 - a1) / v14;
  v43 = a1;
  v42 = a4;
  v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v28 = a4 + v19;
      v41 = a4 + v19;
      v43 = a2;
      v39 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        v30 = -v14;
        do
        {
          v31 = a3 + v30;
          sub_1D469C304(v28 + v30, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          v32 = a2 + v30;
          sub_1D469C304(a2 + v30, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          v33 = v12[16];
          v34 = v10[16];
          sub_1D4697DE0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1D4697DE0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v34 >= v33)
          {
            v35 = v41;
            v41 += v30;
            if (a3 < v35 || v31 >= v35)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v35)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v32 = a2;
          }
          else
          {
            if (a3 < a2 || v31 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v43 += v30;
          }
          v28 = v41;
          if (v41 <= a4)
            break;
          a2 = v32;
          a3 += v30;
        }
        while (v32 > v39);
      }
      goto LABEL_68;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v39 = a4 + v18;
    v41 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_1D469C304(a2, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1D469C304(a4, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        v21 = v12[16];
        v22 = v10[16];
        sub_1D4697DE0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1D4697DE0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        v23 = v43;
        if (v22 >= v21)
        {
          v26 = v42 + v14;
          if (v43 < v42 || v43 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 != v42)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v42 = v26;
          v24 = a2;
        }
        else
        {
          v24 = a2 + v14;
          if (v43 < a2 || v43 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 == a2)
          {
            v23 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v43 = v23 + v14;
        a4 = v42;
        if (v42 >= v39)
          break;
        a2 = v24;
      }
      while (v24 < a3);
    }
LABEL_68:
    sub_1D46D5370(&v43, &v42, (uint64_t *)&v41);
    return 1;
  }
LABEL_72:
  result = sub_1D4922C88();
  __break(1u);
  return result;
}

uint64_t sub_1D46A2AE0(unsigned __int8 *a1, uint64_t a2, float *a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  float *v18;
  uint64_t v19;
  float *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  float *v25;
  uint64_t v26;
  uint64_t v27;
  float *v28;
  uint64_t v29;
  _QWORD *v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD);
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  float v37;
  float v38;
  float v39;
  float v40;
  float v41;
  float v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62[6];
  uint64_t v63;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D010);
  v9 = MEMORY[0x1E0C80A78](v8);
  v57 = (uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v56 - v11;
  v13 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v14 = MEMORY[0x1E0C80A78](v13);
  v60 = (uint64_t)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (float *)((char *)&v56 - v17);
  MEMORY[0x1E0C80A78](v16);
  v20 = (float *)((char *)&v56 - v19);
  v58 = type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction(0);
  v21 = MEMORY[0x1E0C80A78](v58);
  v59 = (uint64_t)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (float *)((char *)&v56 - v24);
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (float *)((char *)&v56 - v27);
  MEMORY[0x1E0C80A78](v26);
  v30 = (uint64_t *)((char *)&v56 - v29);
  v31 = *a1;
  v56 = *a4;
  v32 = *(_QWORD *)(*(_QWORD *)a3 + 16);
  sub_1D469C304((uint64_t)a3, (uint64_t)&v56 - v29, v33);
  if (v32)
  {
    v34 = (_QWORD *)*v30;
    v35 = sub_1D46F8BC8(v31);
    LOBYTE(v34) = sub_1D487C90C(v35, v36, v34);
    swift_bridgeObjectRelease();
    sub_1D4697DE0((uint64_t)v30, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
    if ((v34 & 1) == 0)
      return 0;
  }
  else
  {
    sub_1D4697DE0((uint64_t)v30, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
  }
  v37 = a3[3];
  sub_1D469C304((uint64_t)a3, (uint64_t)v28, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
  sub_1D469C304(a2, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  if (v37 == 0.0)
  {
    sub_1D4697DE0((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1D4697DE0((uint64_t)v28, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
  }
  else
  {
    v38 = v28[3];
    sub_1D4697DE0((uint64_t)v28, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
    v39 = v20[17];
    sub_1D4697DE0((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    if (v39 < v38)
      return 0;
  }
  v40 = a3[2];
  sub_1D469C304((uint64_t)a3, (uint64_t)v25, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
  sub_1D469C304(a2, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  if (v40 == 0.0)
  {
    sub_1D4697DE0((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1D4697DE0((uint64_t)v25, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
    goto LABEL_11;
  }
  v41 = v25[2];
  sub_1D4697DE0((uint64_t)v25, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
  v42 = v18[17];
  sub_1D4697DE0((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  if (v41 >= v42)
  {
LABEL_11:
    v43 = v58;
    sub_1D469C5EC((uint64_t)a3 + *(int *)(v58 + 32), (uint64_t)v12, &qword_1ED98D010);
    v44 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
    v45 = *(_QWORD *)(v44 - 8);
    v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
    v47 = v46(v12, 1, v44);
    sub_1D46992EC((uint64_t)v12, &qword_1ED98D010);
    v48 = v60;
    sub_1D469C304(a2, v60, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v49 = v59;
    sub_1D469C304((uint64_t)a3, v59, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
    if (v47 == 1)
    {
      sub_1D4697DE0(v49, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
      sub_1D4697DE0(v48, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D3B8);
      v50 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
      v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = xmmword_1D49273C0;
      v52 = v51 + v50;
      v53 = v57;
      sub_1D469C5EC(v49 + *(int *)(v43 + 32), v57, &qword_1ED98D010);
      if (v46((char *)v53, 1, v44) == 1)
      {
        *(_QWORD *)v52 = 0;
        *(_QWORD *)(v52 + 8) = 0xE000000000000000;
        *(_DWORD *)(v52 + 16) = 0;
        *(_WORD *)(v52 + 20) = 0;
        sub_1D4922010();
        sub_1D46992EC(v53, &qword_1ED98D010);
      }
      else
      {
        sub_1D469C630(v53, v52, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
      }
      v61 = v56;
      sub_1D4720740(v51, &v61, (uint64_t)v62);
      swift_bridgeObjectRelease();
      sub_1D4697DE0(v49, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
      v54 = v63;
      sub_1D46A4970(v62[0], v62[1], v62[2], v62[3], v62[4], v62[5], v63);
      sub_1D4697DE0(v48, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (!v54)
        return 0;
    }
    return 1;
  }
  return 0;
}

uint64_t sub_1D46A3004(unint64_t a1, uint8_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  float *v12;
  uint64_t v13;
  float *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double *v25;
  uint64_t v26;
  uint64_t v27;
  double *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  CGFloat v38;
  __int128 v39;
  unint64_t v40;
  unint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  float v73;
  CGFloat v74;
  CGFloat v75;
  CGFloat v76;
  CGFloat v77;
  CGFloat v78;
  CGFloat v79;
  CGFloat v80;
  double Width;
  CGFloat v82;
  os_log_t v83;
  CGFloat v84;
  double Height;
  double v86;
  CGFloat x;
  CGFloat y;
  CGFloat v89;
  CGFloat v90;
  float v91;
  double v92;
  double v93;
  double v94;
  BOOL v95;
  char v96;
  CGFloat *v97;
  CGFloat v98;
  CGFloat v99;
  CGFloat v100;
  CGFloat v101;
  id v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t *v108;
  void *v109;
  void *v110;
  uint64_t *v111;
  char *v112;
  uint64_t v113;
  double v114;
  uint64_t v115;
  CGFloat MinX;
  uint64_t v117;
  unint64_t v118;
  CGFloat MinY;
  CGFloat v120;
  CGFloat v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  os_log_t v138;
  unint64_t v139;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v141;
  _QWORD v142[4];
  __int128 v143;
  __int128 v144;
  uint64_t *v145;
  uint64_t v146;
  _OWORD *v147;
  char *v148;
  uint8_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  unsigned int (*v159)(uint64_t, uint64_t, uint64_t);
  uint8_t *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  int v166;
  uint8_t *v167;
  unint64_t v168;
  uint8_t *v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t *v172;
  uint8_t *v173;
  uint64_t v174;
  unint64_t v175;
  CGFloat v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  CGFloat v180;
  os_log_t v181;
  float v182;
  uint64_t v183;
  _OWORD v184[8];
  _OWORD v185[2];
  _OWORD v186[7];
  __int128 v187;
  _OWORD v188[3];
  CGRect v189;
  CGRect v190;
  CGRect v191;
  CGRect v192;
  CGRect v193;
  CGRect v194;
  CGRect v195;
  CGRect v196;
  CGRect v197;
  CGRect v198;
  CGRect v199;
  CGRect v200;
  CGRect v201;

  v172 = (uint64_t *)a4;
  v167 = a2;
  v163 = type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule(0);
  MEMORY[0x1E0C80A78](v163);
  v153 = (uint64_t)v142 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = (uint8_t *)sub_1D4922370();
  v152 = *((_QWORD *)v149 - 1);
  MEMORY[0x1E0C80A78](v149);
  v148 = (char *)v142 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.SuppressCondition(0);
  v154 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (float *)((char *)v142 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v14 = (float *)((char *)v142 - v13);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E2E8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v146 = (uint64_t)v142 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v158 = (uint64_t)v142 - v18;
  v162 = type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction(0);
  v157 = *(_QWORD *)(v162 - 8);
  v19 = MEMORY[0x1E0C80A78](v162);
  v145 = (_QWORD *)((char *)v142 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v19);
  v156 = (_QWORD *)((char *)v142 - v21);
  v22 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v150 = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (double *)((char *)v142 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (double *)((char *)v142 - v27);
  v29 = MEMORY[0x1E0C80A78](v26);
  v177 = (uint64_t)v142 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v178 = (uint64_t)v142 - v32;
  result = MEMORY[0x1E0C80A78](v31);
  v35 = a1;
  v170 = (uint64_t)v142 - v36;
  v37 = *v34;
  if (*(_QWORD *)(*v34 + 16))
  {
    v38 = *(double *)&v34;
    v151 = *(_QWORD *)(*v34 + 16);
    v171 = v35;
    v155 = *a5;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      goto LABEL_87;
    while (1)
    {
      v40 = 0;
      v41 = *(unint64_t **)&v38;
      **(_QWORD **)&v38 = v37;
      v147 = v184;
      v142[1] = "neric";
      v142[0] = 0x80000001D493F830;
      *(_QWORD *)&v39 = 136315650;
      v144 = v39;
      v143 = xmmword_1D4927560;
      v142[3] = 0x80000001D493FD60;
      v142[2] = MEMORY[0x1E0DEE9B8] + 8;
      v42 = v151;
      v173 = *(uint8_t **)&v38;
      while (1)
      {
        if (v40 == v42)
          goto LABEL_82;
        v43 = *v41;
        if (v40 >= *(_QWORD *)(*v41 + 16))
          break;
        v175 = (*(unsigned __int8 *)(v150 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80);
        v37 = *(_QWORD *)(v150 + 72);
        v174 = v37 * v40;
        v44 = v43 + v175 + v37 * v40;
        if ((*(_BYTE *)(v44 + 96) & 1) == 0)
        {
          v38 = *(double *)(*(_QWORD *)(v44 + 40) + 16);
          if (v38 != 0.0)
          {
            result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              result = sub_1D47DFA5C(v43);
              v43 = result;
            }
            v45 = 0;
            v41 = (unint64_t *)v173;
            *(_QWORD *)v173 = v43;
            v46 = v171;
            v160 = *(uint8_t **)&v38;
            v161 = v37 * v171;
            v168 = v40;
            do
            {
              if (v40 == v46 && (uint8_t *)v45 == v167)
                goto LABEL_13;
              if (v40 >= *(_QWORD *)(*v41 + 16))
              {
                __break(1u);
LABEL_77:
                __break(1u);
LABEL_78:
                __break(1u);
LABEL_79:
                __break(1u);
LABEL_80:
                __break(1u);
LABEL_81:
                __break(1u);
LABEL_82:
                __break(1u);
                goto LABEL_83;
              }
              if ((v45 & 0x8000000000000000) != 0)
                goto LABEL_77;
              v47 = *v41 + v175 + v174;
              v48 = *(_QWORD *)(v47 + 40);
              if (v45 >= *(_QWORD *)(v48 + 16))
                goto LABEL_78;
              v169 = (uint8_t *)v45;
              v164 = 160 * v45;
              v49 = (_OWORD *)(v48 + 160 * v45);
              v50 = v49[3];
              v186[0] = v49[2];
              v186[1] = v50;
              v51 = v49[4];
              v52 = v49[5];
              v53 = v49[7];
              v186[4] = v49[6];
              v186[5] = v53;
              v186[2] = v51;
              v186[3] = v52;
              v54 = v49[8];
              v55 = v49[9];
              v56 = v49[10];
              *(_OWORD *)((char *)v188 + 12) = *(_OWORD *)((char *)v49 + 172);
              v187 = v55;
              v188[0] = v56;
              v186[6] = v54;
              v57 = v49[9];
              v184[6] = v49[8];
              v184[7] = v57;
              v185[0] = v49[10];
              *(_OWORD *)((char *)v185 + 12) = *(_OWORD *)((char *)v49 + 172);
              v58 = v49[5];
              v184[2] = v49[4];
              v184[3] = v58;
              v59 = v49[7];
              v184[4] = v49[6];
              v184[5] = v59;
              v60 = v49[3];
              v184[0] = v49[2];
              v184[1] = v60;
              sub_1D469C304(v47, v170, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
              v61 = v158;
              sub_1D469C5EC((uint64_t)v172 + *(int *)(v163 + 28), v158, &qword_1ED98E2E8);
              v62 = v162;
              v159 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v157 + 48);
              if (v159(v61, 1, v162) == 1)
              {
                v37 = (uint64_t)v156;
                *v156 = MEMORY[0x1E0DEE9D8];
                *(_QWORD *)(v37 + 8) = 0;
                v63 = v61;
                sub_1D46A47CC((uint64_t)v186);
                sub_1D4922010();
                v64 = v37 + *(int *)(v62 + 32);
                v65 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v64, 1, 1, v65);
                sub_1D46992EC(v63, &qword_1ED98E2E8);
                v40 = v168;
                v38 = COERCE_DOUBLE(type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
              }
              else
              {
                v37 = (uint64_t)v156;
                v38 = COERCE_DOUBLE(type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
                sub_1D469C630(v61, (uint64_t)v156, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
                sub_1D46A47CC((uint64_t)v186);
                v40 = v168;
              }
              v183 = v155;
              v66 = v170;
              v166 = sub_1D46A2AE0((unsigned __int8 *)v184, v170, (float *)v37, &v183);
              sub_1D4697DE0(v37, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
              sub_1D4697DE0(v66, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
              if ((v171 & 0x8000000000000000) != 0)
                goto LABEL_79;
              v67 = *(_QWORD *)v173;
              v68 = *(_QWORD *)(*(_QWORD *)v173 + 16);
              if (v68 <= v171)
                goto LABEL_80;
              v37 = v67 + v175;
              sub_1D469C304(v67 + v175 + v161, v178, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
              if (v40 >= v68)
                goto LABEL_81;
              sub_1D469C304(v37 + v174, v177, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
              v37 = *(_QWORD *)(*v172 + 16);
              if (v37)
              {
                v69 = v154;
                v70 = *v172
                    + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80));
                v165 = *v172;
                swift_bridgeObjectRetain();
                v71 = *(_QWORD *)(v69 + 72);
                v72 = v37 - 1;
                while (1)
                {
                  v37 = v72;
                  sub_1D469C304(v70, (uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.SuppressCondition);
                  v73 = *v14;
                  sub_1D469C630((uint64_t)v14, (uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.SuppressCondition);
                  sub_1D469C304(v178, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
                  sub_1D469C304(v177, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
                  if (v73 == 0.0)
                    break;
                  v182 = *v12;
                  v74 = *v28;
                  v75 = v28[1];
                  v76 = v28[2];
                  v77 = v28[3];
                  v78 = v25[1];
                  v181 = *(os_log_t *)v25;
                  v79 = v25[2];
                  v80 = v25[3];
                  v189.origin.x = v74;
                  v189.origin.y = v75;
                  v189.size.width = v76;
                  v189.size.height = v77;
                  Width = CGRectGetWidth(v189);
                  v179 = *(_QWORD *)&v74;
                  v190.origin.x = v74;
                  v82 = v75;
                  v83 = v181;
                  v190.origin.y = v82;
                  v190.size.width = v76;
                  v190.size.height = v77;
                  v84 = Width * CGRectGetHeight(v190);
                  *(_QWORD *)&v191.origin.x = v83;
                  v191.origin.y = v78;
                  v191.size.width = v79;
                  v191.size.height = v80;
                  v180 = CGRectGetWidth(v191);
                  *(_QWORD *)&v192.origin.x = v83;
                  v192.origin.y = v78;
                  v192.size.width = v79;
                  v192.size.height = v80;
                  Height = CGRectGetHeight(v192);
                  v176 = v84;
                  if (v84 <= 0.0 || (v86 = v180 * Height, v86 <= 0.0))
                  {
                    v91 = 0.0;
                  }
                  else
                  {
                    v180 = v86;
                    *(_QWORD *)&v193.origin.x = v179;
                    v193.origin.y = v82;
                    v193.size.width = v76;
                    v193.size.height = v77;
                    *(_QWORD *)&v201.origin.x = v83;
                    v201.origin.y = v78;
                    v201.size.width = v79;
                    v201.size.height = v80;
                    v194 = CGRectIntersection(v193, v201);
                    x = v194.origin.x;
                    y = v194.origin.y;
                    v89 = v194.size.width;
                    v90 = v194.size.height;
                    v91 = 0.0;
                    if (!CGRectIsNull(v194))
                    {
                      v195.origin.x = x;
                      v195.origin.y = y;
                      v195.size.width = v89;
                      v195.size.height = v90;
                      v92 = CGRectGetWidth(v195);
                      v196.origin.x = x;
                      v196.origin.y = y;
                      v196.size.width = v89;
                      v196.size.height = v90;
                      v93 = v92 * CGRectGetHeight(v196);
                      v94 = v176;
                      if (v180 < v176)
                        v94 = v180;
                      v91 = v93 / v94;
                    }
                  }
                  sub_1D4697DE0((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
                  sub_1D4697DE0((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
                  sub_1D4697DE0((uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.SuppressCondition);
                  v95 = v91 >= v182;
                  if (v91 < v182)
                  {
                    v72 = v37 - 1;
                    v70 += v71;
                    if (v37)
                      continue;
                  }
                  goto LABEL_40;
                }
                sub_1D4697DE0((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
                sub_1D4697DE0((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
                sub_1D4697DE0((uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.SuppressCondition);
                v95 = 1;
LABEL_40:
                swift_bridgeObjectRelease();
                v40 = v168;
              }
              else
              {
                v95 = 1;
              }
              v96 = BYTE12(v187);
              sub_1D4697DE0(v177, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
              sub_1D4697DE0(v178, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
              if ((v96 & 1) == 0 || (v166 & 1) == 0 || !v95)
              {
                result = sub_1D46A48AC((uint64_t)v186);
                v41 = (unint64_t *)v173;
                v46 = v171;
                v38 = *(double *)&v160;
                v45 = (unint64_t)v169;
                goto LABEL_13;
              }
              v38 = *(double *)&v173;
              if (v40 >= *(_QWORD *)(*(_QWORD *)v173 + 16))
                goto LABEL_84;
              v97 = (CGFloat *)(*(_QWORD *)v173 + v175 + v174);
              v98 = *v97;
              v99 = v97[1];
              v100 = v97[2];
              v101 = v97[3];
              if (qword_1ED98F398 != -1)
                swift_once();
              if (byte_1ED98F388 != 1)
              {
LABEL_60:
                v111 = qword_1ED98F3B0;
                v112 = v148;
                if (qword_1ED98F3D0 != -1)
                {
                  swift_once();
                  v111 = qword_1ED98F3B0;
                }
                goto LABEL_62;
              }
              v102 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
              v103 = objc_msgSend(v102, sel_bundleIdentifier);

              if (v103)
              {
                v104 = sub_1D492261C();
                v106 = v105;

                if (v104 == 0xD00000000000002BLL && v106 == v142[0])
                {
                  swift_bridgeObjectRelease();
LABEL_53:
                  v108 = &qword_1EFEAA908;
                  if (qword_1EFEA9C20 != -1)
                  {
                    swift_once();
                    v108 = &qword_1EFEAA908;
                  }
                  goto LABEL_57;
                }
                v107 = sub_1D4922E38();
                swift_bridgeObjectRelease();
                if ((v107 & 1) != 0)
                  goto LABEL_53;
              }
              v108 = (uint64_t *)&off_1ED98F3F0;
              if (qword_1ED98F3A8 != -1)
              {
                swift_once();
                v108 = (uint64_t *)&off_1ED98F3F0;
              }
LABEL_57:
              v109 = *(void **)(*v108 + 32);
              swift_retain();
              v110 = (void *)sub_1D49225F8();
              LODWORD(v109) = objc_msgSend(v109, sel_BOOLForKey_, v110);
              swift_release();

              if (!(_DWORD)v109)
                goto LABEL_60;
              v111 = qword_1EFEAAA30;
              v112 = v148;
              if (qword_1EFEA9C78 != -1)
              {
                swift_once();
                v111 = qword_1EFEAAA30;
              }
LABEL_62:
              v38 = *(double *)&v149;
              v113 = __swift_project_value_buffer((uint64_t)v149, (uint64_t)v111);
              (*(void (**)(char *, uint64_t, CGFloat))(v152 + 16))(v112, v113, COERCE_CGFLOAT(*(_QWORD *)&v38));
              sub_1D469C304((uint64_t)v172, v153, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule);
              sub_1D46A47CC((uint64_t)v186);
              v37 = sub_1D4922358();
              LODWORD(v182) = sub_1D4922910();
              if (os_log_type_enabled((os_log_t)v37, LOBYTE(v182)))
              {
                v181 = (os_log_t)v37;
                LODWORD(v180) = LOBYTE(v186[0]);
                v114 = COERCE_DOUBLE(swift_slowAlloc());
                v179 = swift_slowAlloc();
                *(_QWORD *)&v184[0] = v179;
                **(_DWORD **)&v114 = v144;
                *(_QWORD *)&v176 = *(_QWORD *)&v114 + 4;
                __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
                v115 = swift_allocObject();
                *(_OWORD *)(v115 + 16) = v143;
                v197.origin.x = v98;
                v197.origin.y = v99;
                v197.size.width = v100;
                v197.size.height = v101;
                MinX = CGRectGetMinX(v197);
                v117 = MEMORY[0x1E0DEF040];
                *(_QWORD *)(v115 + 56) = MEMORY[0x1E0DEF040];
                v118 = sub_1D46A492C();
                *(_QWORD *)(v115 + 64) = v118;
                *(CGFloat *)(v115 + 32) = MinX;
                v198.origin.x = v98;
                v198.origin.y = v99;
                v198.size.width = v100;
                v198.size.height = v101;
                MinY = CGRectGetMinY(v198);
                *(_QWORD *)(v115 + 96) = v117;
                *(_QWORD *)(v115 + 104) = v118;
                *(CGFloat *)(v115 + 72) = MinY;
                v199.origin.x = v98;
                v199.origin.y = v99;
                v199.size.width = v100;
                v199.size.height = v101;
                v120 = CGRectGetWidth(v199);
                *(_QWORD *)(v115 + 136) = v117;
                *(_QWORD *)(v115 + 144) = v118;
                *(CGFloat *)(v115 + 112) = v120;
                v200.origin.x = v98;
                v200.origin.y = v99;
                v200.size.width = v100;
                v200.size.height = v101;
                v121 = CGRectGetHeight(v200);
                *(_QWORD *)(v115 + 176) = v117;
                *(_QWORD *)(v115 + 184) = v118;
                *(CGFloat *)(v115 + 152) = v121;
                v122 = sub_1D4922640();
                v183 = sub_1D47F0250(v122, v123, (uint64_t *)v184);
                sub_1D4922A78();
                swift_bridgeObjectRelease();
                *(_WORD *)(*(_QWORD *)&v114 + 12) = 2080;
                v124 = sub_1D46F8BC8(LOBYTE(v180));
                v183 = sub_1D47F0250(v124, v125, (uint64_t *)v184);
                sub_1D4922A78();
                swift_bridgeObjectRelease();
                sub_1D46A48AC((uint64_t)v186);
                sub_1D46A48AC((uint64_t)v186);
                v180 = v114;
                *(_WORD *)(*(_QWORD *)&v114 + 22) = 2080;
                v126 = v146;
                sub_1D469C5EC(v153 + *(int *)(v163 + 28), v146, &qword_1ED98E2E8);
                v127 = v162;
                if (v159(v126, 1, v162) == 1)
                {
                  v128 = v145;
                  *v145 = MEMORY[0x1E0DEE9D8];
                  v128[1] = 0;
                  sub_1D4922010();
                  v129 = (char *)v128 + *(int *)(v127 + 32);
                  v130 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 56))(v129, 1, 1, v130);
                  v131 = v126;
                  v132 = v128;
                  sub_1D46992EC(v131, &qword_1ED98E2E8);
                }
                else
                {
                  v133 = v126;
                  v132 = v145;
                  sub_1D469C630(v133, (uint64_t)v145, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
                }
                v38 = v180;
                *(_QWORD *)&v176 = *(_QWORD *)&v180 + 24;
                v134 = *v132;
                swift_bridgeObjectRetain();
                sub_1D4697DE0((uint64_t)v132, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
                v135 = MEMORY[0x1D8261B9C](v134, MEMORY[0x1E0DEA968]);
                v137 = v136;
                swift_bridgeObjectRelease();
                v183 = sub_1D47F0250(v135, v137, (uint64_t *)v184);
                sub_1D4922A78();
                swift_bridgeObjectRelease();
                sub_1D4697DE0(v153, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule);
                v138 = v181;
                _os_log_impl(&dword_1D467C000, v181, LOBYTE(v182), "%s drops %s due to suppression rules of %s", *(uint8_t **)&v38, 0x20u);
                v37 = v179;
                swift_arrayDestroy();
                MEMORY[0x1D82635B8](v37, -1, -1);
                MEMORY[0x1D82635B8](*(_QWORD *)&v38, -1, -1);

                (*(void (**)(char *, uint8_t *))(v152 + 8))(v148, v149);
              }
              else
              {
                sub_1D46A48AC((uint64_t)v186);
                sub_1D46A48AC((uint64_t)v186);
                sub_1D4697DE0(v153, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule);

                (*(void (**)(char *, CGFloat))(v152 + 8))(v112, COERCE_CGFLOAT(*(_QWORD *)&v38));
              }
              v139 = *(_QWORD *)v173;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v40 = v168;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                v139 = sub_1D47DFA5C(v139);
              if (v40 >= *(_QWORD *)(v139 + 16))
                goto LABEL_85;
              v141 = v139 + v175 + v174;
              v37 = *(_QWORD *)(v141 + 40);
              result = swift_isUniquelyReferenced_nonNull_native();
              *(_QWORD *)(v141 + 40) = v37;
              if ((result & 1) == 0)
              {
                result = (uint64_t)sub_1D47DFA48((_QWORD *)v37);
                v37 = result;
                *(_QWORD *)(v141 + 40) = result;
              }
              v41 = (unint64_t *)v173;
              v38 = *(double *)&v160;
              v45 = (unint64_t)v169;
              v46 = v171;
              if ((uint64_t)v169 >= *(_QWORD *)(v37 + 16))
                goto LABEL_86;
              *(_BYTE *)(v37 + v164 + 156) = 0;
              *v41 = v139;
LABEL_13:
              ++v45;
            }
            while (v45 != *(_QWORD *)&v38);
          }
        }
        ++v40;
        v42 = v151;
        if (v40 == v151)
          return result;
      }
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      result = sub_1D47DFA5C(v37);
      v37 = result;
    }
  }
  return result;
}

uint64_t sub_1D46A4010(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint8_t *v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  _OWORD v72[8];
  _OWORD v73[2];
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  _OWORD v82[2];
  _OWORD v83[8];
  _OWORD v84[2];
  uint64_t v85[3];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E2E8);
  MEMORY[0x1E0C80A78](v8);
  v64 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction(0);
  v60 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v57 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v66 = (uint64_t)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule(0);
  v14 = *(_QWORD *)(v62 - 8);
  v15 = MEMORY[0x1E0C80A78](v62);
  v59 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v67 = (uint64_t)&v52 - v17;
  v61 = *a4;
  *(_QWORD *)&v83[0] = sub_1D4788894(a1, a3);
  swift_bridgeObjectRetain();
  sub_1D46A19EC((_QWORD **)v83);
  swift_bridgeObjectRelease();
  result = *(_QWORD *)&v83[0];
  v85[0] = *(_QWORD *)&v83[0];
  v53 = *(_QWORD *)(a2 + 16);
  if (v53)
  {
    v55 = a2 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v54 = *(_QWORD *)(v14 + 72);
    v52 = a2;
    swift_bridgeObjectRetain();
    v19 = 0;
    v20 = (uint64_t)v59;
    v21 = v67;
    while (1)
    {
      v56 = v19;
      sub_1D469C304(v55 + v54 * v19, v21, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule);
      v23 = v21;
      v58 = *(_QWORD *)(v85[0] + 16);
      if (v58)
        break;
LABEL_3:
      v22 = v56 + 1;
      v21 = v23;
      sub_1D4697DE0(v23, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule);
      v19 = v22;
      if (v22 == v53)
        goto LABEL_26;
    }
    v24 = 0;
    while (1)
    {
      if (v24 >= *(_QWORD *)(v85[0] + 16))
      {
        __break(1u);
        result = swift_release();
        __break(1u);
        return result;
      }
      v70 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
      v69 = *(_QWORD *)(v57 + 72) * v24;
      v25 = v85[0] + v70 + v69;
      if ((*(_BYTE *)(v25 + 96) & 1) == 0)
      {
        v68 = *(uint8_t **)(*(_QWORD *)(v25 + 40) + 16);
        if (v68)
          break;
      }
LABEL_6:
      if (++v24 == v58)
        goto LABEL_3;
    }
    v26 = 0;
    v27 = 0;
    v65 = v24;
    while (v24 < *(_QWORD *)(v85[0] + 16))
    {
      v28 = v85[0] + v70 + v69;
      v29 = *(_QWORD *)(v28 + 40);
      if ((unint64_t)v27 >= *(_QWORD *)(v29 + 16))
        goto LABEL_24;
      v30 = *(unsigned __int8 *)(v29 + v26 + 156);
      sub_1D469C304(v23, v20, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule);
      if (v30 == 1)
      {
        v31 = *(_QWORD *)(v28 + 40);
        if ((unint64_t)v27 >= *(_QWORD *)(v31 + 16))
          goto LABEL_25;
        v32 = (_OWORD *)(v31 + v26);
        v33 = v32[3];
        v83[0] = v32[2];
        v83[1] = v33;
        v34 = v32[4];
        v35 = v32[5];
        v36 = v32[7];
        v83[4] = v32[6];
        v83[5] = v36;
        v83[2] = v34;
        v83[3] = v35;
        v37 = v32[8];
        v38 = v32[9];
        v39 = v32[10];
        *(_OWORD *)((char *)v84 + 12) = *(_OWORD *)((char *)v32 + 172);
        v83[7] = v38;
        v84[0] = v39;
        v83[6] = v37;
        v40 = v32[9];
        v80 = v32[8];
        v81 = v40;
        v82[0] = v32[10];
        *(_OWORD *)((char *)v82 + 12) = *(_OWORD *)((char *)v32 + 172);
        v41 = v32[5];
        v76 = v32[4];
        v77 = v41;
        v42 = v32[7];
        v78 = v32[6];
        v79 = v42;
        v43 = v32[3];
        v74 = v32[2];
        v75 = v43;
        sub_1D469C304(v28, v66, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        v44 = v64;
        sub_1D469C5EC(v20 + *(int *)(v62 + 24), v64, &qword_1ED98E2E8);
        v45 = v63;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v44, 1, v63) == 1)
        {
          *(_QWORD *)v11 = MEMORY[0x1E0DEE9D8];
          *((_QWORD *)v11 + 1) = 0;
          sub_1D46A47CC((uint64_t)v83);
          sub_1D4922010();
          v20 = (uint64_t)v59;
          v46 = &v11[*(int *)(v45 + 32)];
          v47 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
          sub_1D46992EC(v44, &qword_1ED98E2E8);
        }
        else
        {
          sub_1D469C630(v44, (uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
          sub_1D46A47CC((uint64_t)v83);
        }
        v48 = v61;
        v71 = v61;
        v49 = v66;
        v50 = sub_1D46A2AE0((unsigned __int8 *)&v74, v66, (float *)v11, &v71);
        sub_1D4697DE0((uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
        sub_1D4697DE0(v49, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        v72[6] = v80;
        v72[7] = v81;
        v73[0] = v82[0];
        *(_OWORD *)((char *)v73 + 12) = *(_OWORD *)((char *)v82 + 12);
        v72[2] = v76;
        v72[3] = v77;
        v72[4] = v78;
        v72[5] = v79;
        v72[0] = v74;
        v72[1] = v75;
        sub_1D46A48AC((uint64_t)v72);
        sub_1D4697DE0(v20, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule);
        if ((v50 & 1) != 0)
        {
          v71 = v48;
          v24 = v65;
          v51 = v67;
          sub_1D46A3004(v65, v27, (uint64_t)v85, v67, &v71);
          v23 = v51;
        }
        else
        {
          v23 = v67;
          v24 = v65;
        }
      }
      else
      {
        sub_1D4697DE0(v20, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule);
        v23 = v67;
      }
      ++v27;
      v26 += 160;
      if (v68 == v27)
        goto LABEL_6;
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    swift_bridgeObjectRelease();
    return v85[0];
  }
  return result;
}

unint64_t sub_1D46A45A0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.PersonImageLevelSupressionRule(0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a2;
  v11 = a2[7];
  v32 = MEMORY[0x1E0DEE9E8];
  v30 = *(_QWORD *)(a3 + 16);
  if (v30)
  {
    v25 = a1;
    v26 = v11;
    v29 = a3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v28 = *(_QWORD *)(v7 + 72);
    v13 = v10 == 1 || v11 == 0;
    v27 = v13;
    v24[1] = a3;
    swift_bridgeObjectRetain();
    v14 = 0;
    do
    {
      sub_1D469C304(v29 + v28 * v14, (uint64_t)v9, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.PersonImageLevelSupressionRule);
      v15 = MEMORY[0x1E0DEE9D8];
      if (!v27)
      {
        v15 = v26;
        swift_bridgeObjectRetain();
      }
      v16 = *(_QWORD *)(v15 + 16);
      if (v16)
      {
        v17 = *((_DWORD *)v9 + 4);
        v18 = (int *)(v15 + 52);
        do
        {
          v19 = *v18;
          v18 += 14;
          if (v19 >= v17)
          {
            v20 = *(_QWORD *)v9;
            v21 = *((_QWORD *)v9 + 1);
            swift_bridgeObjectRetain();
            sub_1D47CC84C(&v31, v20, v21);
            swift_bridgeObjectRelease();
          }
          --v16;
        }
        while (v16);
      }
      ++v14;
      swift_bridgeObjectRelease();
      sub_1D4697DE0((uint64_t)v9, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.PersonImageLevelSupressionRule);
    }
    while (v14 != v30);
    swift_bridgeObjectRelease();
    a1 = v25;
  }
  v22 = sub_1D46A14FC(a1, &v32);
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1D46A4760(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D5D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D46A47A8(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 32);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t sub_1D46A47CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(_QWORD *)(a1 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D46A484C(v2, v3);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D46A484C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D46A487C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D46A48AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(_QWORD *)(a1 + 88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D46A487C(v2, v3);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1D46A492C()
{
  unint64_t result;

  result = qword_1ED98CAA0;
  if (!qword_1ED98CAA0)
  {
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0DEF098], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1ED98CAA0);
  }
  return result;
}

uint64_t sub_1D46A4970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;

  if (a7)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D46A49A0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD v31[5];
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _OWORD v35[2];
  uint64_t v36;
  uint64_t v37;

  v34 = a3;
  v5 = sub_1D4922370();
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v31 - v9;
  v11 = sub_1D492204C();
  MEMORY[0x1E0C80A78](v11);
  v12 = type metadata accessor for Argos_Protos_Queryflow_RichLabelThresholdConfig(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v16 = (void *)sub_1D49225F8();
  v17 = objc_msgSend(v15, sel_contentsAtPath_, v16);

  if (v17)
  {
    v31[3] = v8;
    v31[4] = a1;
    v18 = sub_1D4920F6C();
    v20 = v19;

    sub_1D484D52C(v18, v20);
    v26 = v25;
    v27 = v18;
    v29 = v28;
    sub_1D4696F10(v27, v20);

    v36 = 0;
    memset(v35, 0, sizeof(v35));
    sub_1D46A5708(v26, v29);
    sub_1D4922040();
    sub_1D46A574C();
    sub_1D49221C0();
    sub_1D4696F10(v26, v29);
    return sub_1D46A5794((uint64_t)v14, (uint64_t)v34);
  }
  else
  {

    sub_1D470C76C((uint64_t)v10);
    swift_bridgeObjectRetain_n();
    v21 = sub_1D4922358();
    v22 = sub_1D492291C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      *(_QWORD *)&v35[0] = v24;
      *(_DWORD *)v23 = 136315138;
      swift_bridgeObjectRetain();
      v37 = sub_1D47F0250(a1, a2, (uint64_t *)v35);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D467C000, v21, v22, "Failed to load rich label threshold at path %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v24, -1, -1);
      MEMORY[0x1D82635B8](v23, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v33);
    *v34 = MEMORY[0x1E0DEE9D8];
    return sub_1D4922010();
  }
}

unint64_t sub_1D46A4F58(uint64_t a1, unint64_t a2, float a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  char v22;
  int v23;
  unsigned __int8 v24;
  float v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v35 = sub_1D4922370();
  v6 = *(_QWORD *)(v35 - 8);
  v7 = MEMORY[0x1E0C80A78](v35);
  v36 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v34 - v9;
  swift_bridgeObjectRetain();
  v34 = a1;
  v11 = sub_1D47DAE0C(1uLL, a1, a2);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  swift_bridgeObjectRelease();
  if (!((v11 ^ v13) >> 14))
  {
    swift_bridgeObjectRelease();
LABEL_11:
    sub_1D470C76C((uint64_t)v10);
    v26 = (uint64_t)v36;
    sub_1D470C928((uint64_t)v36);
    v27 = *(void (**)(char *, uint64_t))(v6 + 8);
    v28 = v35;
    v27(v10, v35);
    swift_bridgeObjectRetain_n();
    v29 = sub_1D4922358();
    v30 = sub_1D4922910();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v38 = v32;
      *(_DWORD *)v31 = 136315138;
      swift_bridgeObjectRetain();
      v37 = sub_1D47F0250(v34, a2, &v38);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D467C000, v29, v30, "Rich label failed to convert KGID %s", v31, 0xCu);
      v24 = 1;
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v32, -1, -1);
      MEMORY[0x1D82635B8](v31, -1, -1);

      v27(v36, v28);
      v25 = 0.0;
      return LODWORD(v25) | ((unint64_t)v24 << 32);
    }

    swift_bridgeObjectRelease_n();
    v27((char *)v26, v28);
    goto LABEL_14;
  }
  v18 = sub_1D4783654(v11, v13, v15, v17, 10);
  if ((v18 & 0x10000000000) != 0)
    v18 = sub_1D46BCE3C(v11, v13, v15, v17, 10);
  v19 = v18;
  swift_bridgeObjectRelease();
  if ((v19 & 0x100000000) != 0)
    goto LABEL_11;
  swift_retain();
  v20 = sub_1D48C4BE4();
  swift_release();
  if (!v20[2] || (v21 = sub_1D47CA6DC(v19), (v22 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    if (a3 > 0.0)
    {
      v24 = 0;
      v25 = a3;
      return LODWORD(v25) | ((unint64_t)v24 << 32);
    }
LABEL_14:
    v25 = 0.0;
    v24 = 1;
    return LODWORD(v25) | ((unint64_t)v24 << 32);
  }
  v23 = *(_DWORD *)(v20[7] + 4 * v21);
  swift_bridgeObjectRelease();
  v24 = 0;
  v25 = (float)v23 / 100.0;
  return LODWORD(v25) | ((unint64_t)v24 << 32);
}

uint64_t sub_1D46A52C4()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RichLabelThresholdMapper()
{
  return objc_opt_self();
}

_QWORD *sub_1D46A5308()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0;
  v2 = *v0;
  v3 = sub_1D48BEE58(33, 0, 25200, 0xE200000000000000);
  v5 = v4;
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v3;
  v6[3] = v5;
  v6[4] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E4D0);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 24) = 0;
  *(_BYTE *)(v7 + 32) = -1;
  *(_QWORD *)(v7 + 56) = 0;
  *(_QWORD *)(v7 + 64) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB70);
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v7 + 80) = v8;
  *(_QWORD *)(v7 + 40) = sub_1D46A5684;
  *(_QWORD *)(v7 + 48) = v6;
  swift_retain();
  swift_retain();
  sub_1D46A56B4(0);
  *(_QWORD *)(v7 + 72) = 4;
  swift_release();
  v9 = sub_1D4835CD8();
  swift_release();
  v1[2] = v9;
  return v1;
}

uint64_t sub_1D46A5414(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  char isUniquelyReferenced_nonNull_native;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t result;
  _QWORD v32[2];
  _QWORD *v33;
  _QWORD *v34;

  v4 = type metadata accessor for Argos_Protos_Queryflow_RichLabelThreshold(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (unsigned int *)((char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for Argos_Protos_Queryflow_RichLabelThresholdConfig(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = (_QWORD *)sub_1D47D0C98(MEMORY[0x1E0DEE9D8]);
  sub_1D46A49A0(a1, a2, v10);
  v12 = *v10;
  v13 = *(_QWORD *)(*v10 + 16);
  if (!v13)
  {
LABEL_17:
    sub_1D4697DE0((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_RichLabelThresholdConfig);
    return (uint64_t)v11;
  }
  v32[1] = *v10;
  v33 = v10;
  v14 = v12 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v15 = *(_QWORD *)(v5 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1D46A56C4(v14, (uint64_t)v7);
    v17 = *v7;
    v16 = v7[1];
    sub_1D4697DE0((uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_RichLabelThreshold);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v34 = v11;
    v20 = sub_1D47CA6DC(v17);
    v21 = v11[2];
    v22 = (v19 & 1) == 0;
    v23 = v21 + v22;
    if (__OFADD__(v21, v22))
      break;
    v24 = v19;
    if (v11[3] >= v23)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v11 = v34;
        if ((v19 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1D47AD14C();
        v11 = v34;
        if ((v24 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1D47A317C(v23, isUniquelyReferenced_nonNull_native);
      v25 = sub_1D47CA6DC(v17);
      if ((v24 & 1) != (v26 & 1))
        goto LABEL_20;
      v20 = v25;
      v11 = v34;
      if ((v24 & 1) != 0)
      {
LABEL_3:
        *(_DWORD *)(v11[7] + 4 * v20) = v16;
        goto LABEL_4;
      }
    }
    v11[(v20 >> 6) + 8] |= 1 << v20;
    v27 = 4 * v20;
    *(_DWORD *)(v11[6] + v27) = v17;
    *(_DWORD *)(v11[7] + v27) = v16;
    v28 = v11[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_19;
    v11[2] = v30;
LABEL_4:
    swift_bridgeObjectRelease();
    v14 += v15;
    if (!--v13)
    {
      swift_bridgeObjectRelease();
      v10 = v33;
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_1D4922E8C();
  __break(1u);
  return result;
}

uint64_t sub_1D46A5660()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D46A5684@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1D46A5414(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
  *a1 = result;
  return result;
}

uint64_t sub_1D46A56B4(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1D46A56C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Argos_Protos_Queryflow_RichLabelThreshold(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D46A5708(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

unint64_t sub_1D46A574C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED98E390;
  if (!qword_1ED98E390)
  {
    v1 = type metadata accessor for Argos_Protos_Queryflow_RichLabelThresholdConfig(255);
    result = MEMORY[0x1D82634E0](&unk_1D492C234, v1);
    atomic_store(result, (unint64_t *)&qword_1ED98E390);
  }
  return result;
}

uint64_t sub_1D46A5794(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Argos_Protos_Queryflow_RichLabelThresholdConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D46A57D8(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double *v64;
  double v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  CGFloat v80;
  CGFloat v81;
  CGFloat v82;
  CGFloat v83;
  CGFloat v84;
  CGFloat v85;
  CGFloat v86;
  double v87;
  CGFloat v88;
  NSObject *v89;
  double v90;
  double v91;
  double v92;
  CGFloat v93;
  CGFloat v94;
  CGFloat v95;
  CGFloat v96;
  float v97;
  double v98;
  CGFloat v99;
  uint64_t v100;
  uint64_t *v101;
  void *v102;
  void *v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  char *v107;
  NSObject *v108;
  os_log_type_t v109;
  uint64_t v110;
  uint64_t v111;
  NSObject *v112;
  CGFloat v113;
  CGFloat v114;
  CGFloat v115;
  uint64_t v116;
  CGFloat v117;
  uint64_t v118;
  unint64_t v119;
  CGFloat v120;
  CGFloat v121;
  CGFloat v122;
  uint64_t v123;
  unint64_t v124;
  CGFloat v125;
  CGFloat v126;
  CGFloat v127;
  CGFloat v128;
  uint64_t v129;
  CGFloat v130;
  CGFloat v131;
  CGFloat v132;
  CGFloat v133;
  uint64_t v134;
  unint64_t v135;
  NSObject *v136;
  uint64_t v137;
  uint64_t v138;
  double *v139;
  uint64_t v140;
  uint64_t v141;
  double *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  CGFloat v155;
  CGFloat v156;
  CGFloat v157;
  CGFloat v158;
  CGFloat v159;
  CGFloat v160;
  CGFloat v161;
  double Width;
  CGFloat v163;
  CGFloat v164;
  double v165;
  double Height;
  float v167;
  double v168;
  CGFloat x;
  CGFloat y;
  CGFloat v171;
  CGFloat v172;
  BOOL IsNull;
  double v174;
  CGFloat v175;
  id v176;
  id v177;
  uint64_t v178;
  char *v179;
  char *v180;
  unint64_t v181;
  unint64_t v182;
  char v183;
  uint64_t *v184;
  void *v185;
  void *v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  NSObject *v191;
  os_log_type_t v192;
  int v193;
  double *v194;
  uint64_t v195;
  CGFloat v196;
  CGFloat v197;
  CGFloat v198;
  CGFloat v199;
  uint64_t v200;
  CGFloat MinX;
  uint64_t v202;
  unint64_t v203;
  CGFloat MinY;
  CGFloat v205;
  CGFloat v206;
  uint64_t v207;
  unint64_t v208;
  CGFloat v209;
  CGFloat v210;
  CGFloat v211;
  CGFloat v212;
  uint64_t v213;
  CGFloat v214;
  CGFloat v215;
  CGFloat v216;
  CGFloat v217;
  uint64_t v218;
  unint64_t v219;
  CGFloat v220;
  unint64_t v221;
  unint64_t v222;
  uint64_t v224;
  unint64_t v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  double *v237;
  __int128 v238;
  _QWORD *v239;
  unint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  unint64_t v245;
  uint64_t v246;
  char *v247;
  __int128 v248;
  uint64_t v249;
  double *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  double *v254;
  unint64_t v255;
  CGFloat v256;
  uint64_t v257;
  NSObject *v258;
  uint64_t v259;
  float *v260;
  double v261;
  __int128 v262;
  CGFloat v263;
  uint64_t v264;
  uint64_t v265;
  double v266;
  uint64_t v267;
  char v268;
  uint64_t v269;
  __int128 v270;
  uint64_t v271;
  uint64_t v272;
  _QWORD v273[4];
  char v274;
  CGRect v275;
  CGRect v276;
  CGRect v277;
  CGRect v278;
  CGRect v279;
  CGRect v280;
  CGRect v281;
  CGRect v282;
  CGRect v283;
  CGRect v284;
  CGRect v285;
  CGRect v286;
  CGRect v287;
  CGRect v288;
  CGRect v289;
  CGRect v290;
  CGRect v291;
  CGRect v292;
  CGRect v293;
  CGRect v294;
  CGRect v295;
  CGRect v296;
  CGRect v297;
  CGRect v298;
  CGRect v299;
  CGRect v300;
  CGRect v301;
  CGRect v302;
  CGRect v303;
  CGRect v304;
  CGRect v305;
  CGRect v306;
  CGRect v307;
  CGRect v308;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D7C0);
  MEMORY[0x1E0C80A78](v8);
  v227 = (uint64_t)&v224 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v253 = sub_1D4922370();
  v10 = *(double **)(v253 - 8);
  v11 = MEMORY[0x1E0C80A78](v253);
  v13 = (char *)&v224 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v247 = (char *)&v224 - v14;
  v228 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v15 = *(_QWORD *)(v228 - 8);
  v16 = MEMORY[0x1E0C80A78](v228);
  v231 = (uint64_t)&v224 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v244 = (uint64_t)&v224 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v235 = (uint64_t)&v224 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v237 = (double *)((char *)&v224 - v23);
  v24 = MEMORY[0x1E0C80A78](v22);
  v250 = (double *)((char *)&v224 - v25);
  v26 = MEMORY[0x1E0C80A78](v24);
  v226 = (char *)&v224 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v230 = (uint64_t)&v224 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v236 = (uint64_t)&v224 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v242 = (uint64_t)&v224 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v249 = (uint64_t)&v224 - v35;
  MEMORY[0x1E0C80A78](v34);
  v37 = (double *)((char *)&v224 - v36);
  v264 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EAC8);
  v259 = *(_QWORD *)(v264 - 8);
  MEMORY[0x1E0C80A78](v264);
  v251 = (char *)&v224 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98EAD0);
  v40 = MEMORY[0x1E0C80A78](v39);
  *(_QWORD *)&v263 = (char *)&v224 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v40);
  v43 = (uint64_t *)((char *)&v224 - v42);
  v262 = *a2;
  v44 = *((_QWORD *)a2 + 2);
  v45 = *((_QWORD *)a2 + 3);
  v273[0] = 0x6C46206573726150;
  v273[1] = 0xEA0000000000776FLL;
  v273[2] = "VI: Region Merging";
  v273[3] = 18;
  v274 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  v229 = sub_1D47C12D0((uint64_t)v273, a3);
  swift_release();
  type metadata accessor for RegionMergingProcessor();
  v270 = v262;
  v271 = v44;
  v272 = v45;
  v46 = *(_QWORD *)(v4 + OBJC_IVAR____TtC18VisualIntelligence22RegionMergingProcessor_boxScorer);
  v252 = v4 + OBJC_IVAR____TtC18VisualIntelligence22RegionMergingProcessor_config;
  *(_QWORD *)&v270 = sub_1D4716B08(a1, (uint64_t *)&v270, v46, v4 + OBJC_IVAR____TtC18VisualIntelligence22RegionMergingProcessor_config);
  v232 = v270;
  swift_bridgeObjectRetain();
  sub_1D46A74E0((_QWORD **)&v270);
  v47 = MEMORY[0x1E0DEE9E8];
  v269 = MEMORY[0x1E0DEE9E8];
  v48 = *(_QWORD *)(v270 + 16);
  v241 = &v268;
  v261 = *(double *)&v270;
  swift_retain();
  v49 = 0;
  v245 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v50 = 136315394;
  v238 = v50;
  v248 = xmmword_1D4927560;
  v225 = (unint64_t)"Model Postprocess Results";
  v240 = 0x80000001D493FD60;
  v234 = MEMORY[0x1E0DEE9B8] + 8;
  v243 = v15;
  v254 = v10;
  v233 = v13;
  v51 = v264;
  v257 = v48;
  v239 = v43;
LABEL_2:
  v52 = v47 + 56;
  v53 = *(_QWORD *)&v263;
  while (1)
  {
    if (v49 == v48)
    {
      v54 = 1;
      v49 = v48;
      goto LABEL_9;
    }
    if ((v49 & 0x8000000000000000) != 0)
      goto LABEL_116;
    if (v49 >= *(_QWORD *)(*(_QWORD *)&v261 + 16))
      break;
    v55 = (uint64_t)&v251[*(int *)(v264 + 48)];
    sub_1D46A8550(*(_QWORD *)&v261+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v49, v55);
    v56 = *(_QWORD *)&v263 + *(int *)(v264 + 48);
    **(_QWORD **)&v263 = v49;
    sub_1D46A8594(v55, v56);
    v53 = *(_QWORD *)&v263;
    v54 = 0;
    ++v49;
    v51 = v264;
LABEL_9:
    v57 = v259;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v259 + 56))(v53, v54, 1, v51);
    sub_1D46A85D8(v53, (uint64_t)v43);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v57 + 48))(v43, 1, v51) == 1)
    {
      swift_release_n();
      v138 = *(_QWORD *)(v232 + 16);
      v139 = v10;
      if (v138)
      {
        v140 = v232 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
        v141 = *(_QWORD *)(v15 + 72);
        swift_bridgeObjectRetain();
        v10 = v250;
        v142 = v237;
        v143 = (uint64_t)v226;
        v144 = v233;
        while (1)
        {
          sub_1D46A8550(v140, v143);
          if (*(_BYTE *)(v143 + 96) == 1)
            break;
          sub_1D4697DE0(v143, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          v140 += v141;
          if (!--v138)
          {
            swift_bridgeObjectRelease();
            v145 = 1;
            v146 = v227;
            goto LABEL_70;
          }
        }
        swift_bridgeObjectRelease();
        v146 = v227;
        sub_1D46A8594(v143, v227);
        v145 = 0;
      }
      else
      {
        v145 = 1;
        v10 = v250;
        v142 = v237;
        v146 = v227;
        v144 = v233;
      }
LABEL_70:
      v147 = v228;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v146, v145, 1, v228);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v146, 1, v147) == 1)
      {
        sub_1D46A8620(v146);
        v52 = v245;
        goto LABEL_112;
      }
      v148 = v230;
      sub_1D46A8594(v146, v230);
      sub_1D46A8550(v148, (uint64_t)v10);
      v149 = *(_QWORD *)(v245 + 16);
      if (!v149)
      {
        swift_bridgeObjectRelease();
        v52 = MEMORY[0x1E0DEE9D8];
LABEL_108:
        swift_beginAccess();
        sub_1D46A8550((uint64_t)v10, v231);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          goto LABEL_120;
        goto LABEL_109;
      }
      v150 = v245;
      v151 = *(_QWORD *)(v252 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20))
           + 36;
      v258 = ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
      v152 = (char *)v258 + v150;
      swift_beginAccess();
      v260 = (float *)v151;
      swift_beginAccess();
      v52 = MEMORY[0x1E0DEE9D8];
      v256 = COERCE_DOUBLE(&v266);
      v259 = *(_QWORD *)(v15 + 72);
      v251 = "neric";
      v247 = (char *)0x80000001D493F830;
      v255 = v225 | 0x8000000000000000;
      v252 = MEMORY[0x1E0DEE9B8] + 8;
      while (1)
      {
        sub_1D46A8550((uint64_t)v152, (uint64_t)v142);
        v155 = *v10;
        v156 = v10[1];
        v157 = v10[2];
        v158 = v10[3];
        v159 = v142[1];
        v264 = *(_QWORD *)v142;
        v160 = v142[2];
        v161 = v142[3];
        v291.origin.x = v155;
        v291.origin.y = v156;
        v291.size.width = v157;
        v291.size.height = v158;
        Width = CGRectGetWidth(v291);
        *(CGFloat *)&v262 = v155;
        v292.origin.x = v155;
        v163 = v156;
        v164 = *(double *)&v264;
        v292.origin.y = v163;
        v292.size.width = v157;
        v292.size.height = v158;
        v165 = Width * CGRectGetHeight(v292);
        v293.origin.x = v164;
        v293.origin.y = v159;
        v293.size.width = v160;
        v293.size.height = v161;
        v263 = CGRectGetWidth(v293);
        v294.origin.x = v164;
        v294.origin.y = v159;
        v294.size.width = v160;
        v294.size.height = v161;
        Height = CGRectGetHeight(v294);
        v167 = 0.0;
        v261 = v165;
        if (v165 > 0.0)
        {
          v168 = v263 * Height;
          if (v263 * Height > 0.0)
          {
            *(_QWORD *)&v295.origin.x = v262;
            v295.origin.y = v163;
            v295.size.width = v157;
            v295.size.height = v158;
            v308.origin.x = v164;
            v308.origin.y = v159;
            v308.size.width = v160;
            v308.size.height = v161;
            v296 = CGRectIntersection(v295, v308);
            x = v296.origin.x;
            y = v296.origin.y;
            v171 = v296.size.width;
            v172 = v296.size.height;
            IsNull = CGRectIsNull(v296);
            v167 = 0.0;
            if (!IsNull)
            {
              v297.origin.x = x;
              v297.origin.y = y;
              v297.size.width = v171;
              v297.size.height = v172;
              v174 = CGRectGetWidth(v297);
              v298.origin.x = x;
              v298.origin.y = y;
              v298.size.width = v171;
              v298.size.height = v172;
              v175 = CGRectGetHeight(v298);
              v167 = v174 * v175 / (v261 + v168 - v174 * v175);
            }
          }
        }
        if (*v260 >= v167)
        {
          sub_1D46A8550((uint64_t)v142, v244);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v52 = sub_1D48A8614(0, *(_QWORD *)(v52 + 16) + 1, 1, v52);
          v182 = *(_QWORD *)(v52 + 16);
          v181 = *(_QWORD *)(v52 + 24);
          if (v182 >= v181 >> 1)
            v52 = sub_1D48A8614(v181 > 1, v182 + 1, 1, v52);
          *(_QWORD *)(v52 + 16) = v182 + 1;
          v154 = v259;
          sub_1D46A8594(v244, (uint64_t)v258 + v52 + v182 * v259);
          sub_1D4697DE0((uint64_t)v142, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          goto LABEL_76;
        }
        v264 = v52;
        if (qword_1ED98F398 != -1)
          swift_once();
        if (byte_1ED98F388 != 1)
        {
LABEL_102:
          v187 = qword_1ED98F3B0;
          if (qword_1ED98F3D0 != -1)
          {
            swift_once();
            v187 = qword_1ED98F3B0;
          }
          goto LABEL_104;
        }
        v176 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
        v177 = objc_msgSend(v176, sel_bundleIdentifier);

        if (v177)
        {
          v178 = sub_1D492261C();
          v180 = v179;

          if (v178 == 0xD00000000000002BLL && v180 == v247)
          {
            swift_bridgeObjectRelease();
LABEL_95:
            v184 = &qword_1EFEAA908;
            if (qword_1EFEA9C20 != -1)
            {
              swift_once();
              v184 = &qword_1EFEAA908;
            }
            goto LABEL_99;
          }
          v183 = sub_1D4922E38();
          swift_bridgeObjectRelease();
          if ((v183 & 1) != 0)
            goto LABEL_95;
        }
        v184 = (uint64_t *)&off_1ED98F3F0;
        if (qword_1ED98F3A8 != -1)
        {
          swift_once();
          v184 = (uint64_t *)&off_1ED98F3F0;
        }
LABEL_99:
        v185 = *(void **)(*v184 + 32);
        swift_retain();
        v186 = (void *)sub_1D49225F8();
        LODWORD(v185) = objc_msgSend(v185, sel_BOOLForKey_, v186);
        swift_release();

        v15 = v243;
        if (!(_DWORD)v185)
          goto LABEL_102;
        v187 = qword_1EFEAAA30;
        if (qword_1EFEA9C78 != -1)
        {
          swift_once();
          v187 = qword_1EFEAAA30;
        }
LABEL_104:
        v188 = v253;
        v189 = __swift_project_value_buffer(v253, (uint64_t)v187);
        (*((void (**)(char *, uint64_t, uint64_t))v139 + 2))(v144, v189, v188);
        v190 = v235;
        sub_1D46A8550((uint64_t)v142, v235);
        v191 = sub_1D4922358();
        v192 = sub_1D4922910();
        v193 = v192;
        if (os_log_type_enabled(v191, v192))
        {
          v194 = (double *)v190;
          v195 = swift_slowAlloc();
          v263 = COERCE_DOUBLE(swift_slowAlloc());
          v266 = v263;
          *(_DWORD *)v195 = v238;
          v257 = v195 + 4;
          v196 = *v194;
          v197 = v194[1];
          v198 = v194[2];
          v199 = v194[3];
          v261 = COERCE_DOUBLE(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408));
          v200 = swift_allocObject();
          *(_OWORD *)(v200 + 16) = v248;
          v299.origin.x = v196;
          v299.origin.y = v197;
          v299.size.width = v198;
          v299.size.height = v199;
          MinX = CGRectGetMinX(v299);
          v202 = MEMORY[0x1E0DEF040];
          *(_QWORD *)(v200 + 56) = MEMORY[0x1E0DEF040];
          v203 = sub_1D46A492C();
          *(_QWORD *)(v200 + 64) = v203;
          *(CGFloat *)(v200 + 32) = MinX;
          v300.origin.x = v196;
          v300.origin.y = v197;
          v300.size.width = v198;
          v300.size.height = v199;
          MinY = CGRectGetMinY(v300);
          *(_QWORD *)(v200 + 96) = v202;
          *(_QWORD *)(v200 + 104) = v203;
          *(CGFloat *)(v200 + 72) = MinY;
          v301.origin.x = v196;
          v301.origin.y = v197;
          v301.size.width = v198;
          v301.size.height = v199;
          v205 = CGRectGetWidth(v301);
          *(_QWORD *)(v200 + 136) = v202;
          *(_QWORD *)(v200 + 144) = v203;
          *(CGFloat *)(v200 + 112) = v205;
          v302.origin.x = v196;
          v302.origin.y = v197;
          v302.size.width = v198;
          v302.size.height = v199;
          v206 = CGRectGetHeight(v302);
          *(_QWORD *)(v200 + 176) = v202;
          *(_QWORD *)(v200 + 184) = v203;
          *(CGFloat *)(v200 + 152) = v206;
          v207 = sub_1D4922640();
          v265 = sub_1D47F0250(v207, v208, (uint64_t *)&v266);
          LODWORD(v262) = v193;
          sub_1D4922A78();
          swift_bridgeObjectRelease();
          sub_1D4697DE0((uint64_t)v194, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          *(_WORD *)(v195 + 12) = 2080;
          v257 = v195 + 14;
          v209 = *v250;
          v210 = v250[1];
          v211 = v250[2];
          v212 = v250[3];
          v10 = v250;
          v213 = swift_allocObject();
          *(_OWORD *)(v213 + 16) = v248;
          v303.origin.x = v209;
          v303.origin.y = v210;
          v303.size.width = v211;
          v303.size.height = v212;
          v214 = CGRectGetMinX(v303);
          *(_QWORD *)(v213 + 56) = v202;
          *(_QWORD *)(v213 + 64) = v203;
          *(CGFloat *)(v213 + 32) = v214;
          v304.origin.x = v209;
          v304.origin.y = v210;
          v304.size.width = v211;
          v304.size.height = v212;
          v215 = CGRectGetMinY(v304);
          *(_QWORD *)(v213 + 96) = v202;
          *(_QWORD *)(v213 + 104) = v203;
          *(CGFloat *)(v213 + 72) = v215;
          v305.origin.x = v209;
          v305.origin.y = v210;
          v305.size.width = v211;
          v305.size.height = v212;
          v216 = CGRectGetWidth(v305);
          *(_QWORD *)(v213 + 136) = v202;
          *(_QWORD *)(v213 + 144) = v203;
          *(CGFloat *)(v213 + 112) = v216;
          v306.origin.x = v209;
          v306.origin.y = v210;
          v306.size.width = v211;
          v306.size.height = v212;
          v217 = CGRectGetHeight(v306);
          *(_QWORD *)(v213 + 176) = v202;
          *(_QWORD *)(v213 + 184) = v203;
          v15 = v243;
          *(CGFloat *)(v213 + 152) = v217;
          v218 = sub_1D4922640();
          v265 = sub_1D47F0250(v218, v219, (uint64_t *)&v266);
          v139 = v254;
          sub_1D4922A78();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1D467C000, v191, (os_log_type_t)v262, "Merge from %s to %s", (uint8_t *)v195, 0x16u);
          v220 = v263;
          swift_arrayDestroy();
          v144 = v233;
          MEMORY[0x1D82635B8](*(_QWORD *)&v220, -1, -1);
          MEMORY[0x1D82635B8](v195, -1, -1);

          (*((void (**)(char *, uint64_t))v139 + 1))(v144, v253);
        }
        else
        {
          sub_1D4697DE0(v190, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);

          (*((void (**)(char *, uint64_t))v139 + 1))(v144, v188);
        }
        v153 = v249;
        v142 = v237;
        sub_1D4828948((uint64_t)v237, (uint64_t)v10, v249);
        sub_1D4697DE0((uint64_t)v142, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1D46A8660(v153, (uint64_t)v10);
        v52 = v264;
        v154 = v259;
LABEL_76:
        v152 += v154;
        if (!--v149)
        {
          swift_bridgeObjectRelease();
          goto LABEL_108;
        }
      }
    }
    v58 = *v43;
    sub_1D46A8594((uint64_t)v43 + *(int *)(v51 + 48), (uint64_t)v37);
    swift_beginAccess();
    if (((_BYTE)v37[12] & 1) == 0)
    {
      if (!*(_QWORD *)(v47 + 16))
        goto LABEL_18;
      v59 = sub_1D4922EEC();
      v60 = -1 << *(_BYTE *)(v47 + 32);
      v61 = v59 & ~v60;
      if (((*(_QWORD *)(v52 + ((v61 >> 3) & 0xFFFFFFFFFFFFF8)) >> v61) & 1) == 0)
        goto LABEL_18;
      v62 = *(_QWORD *)(v47 + 48);
      if (*(_QWORD *)(v62 + 8 * v61) != v58)
      {
        v63 = ~v60;
        while (1)
        {
          v61 = (v61 + 1) & v63;
          if (((*(_QWORD *)(v52 + ((v61 >> 3) & 0xFFFFFFFFFFFFF8)) >> v61) & 1) == 0)
            break;
          if (*(_QWORD *)(v62 + 8 * v61) == v58)
            goto LABEL_3;
        }
LABEL_18:
        v64 = (double *)(v58 + 1);
        if (__OFADD__(v58, 1))
          goto LABEL_118;
        v65 = v261;
        v10 = *(double **)(*(_QWORD *)&v261 + 16);
        if ((uint64_t)v10 < (uint64_t)v64)
          goto LABEL_119;
        v52 = v253;
        if (v64 != v10)
        {
          *(_QWORD *)&v262 = *(_QWORD *)&v261
                           + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
          v70 = v58 + 1;
          v260 = (float *)(v58 + 1);
          while (1)
          {
            if (v70 >= (uint64_t)v10)
            {
              __break(1u);
LABEL_114:
              __break(1u);
LABEL_115:
              __break(1u);
LABEL_116:
              __break(1u);
              goto LABEL_117;
            }
            if (((unint64_t)v64 & 0x8000000000000000) != 0)
              goto LABEL_114;
            if ((unint64_t)v70 >= *(_QWORD *)(*(_QWORD *)&v65 + 16))
              goto LABEL_115;
            v73 = v262 + *(_QWORD *)(v15 + 72) * v70;
            if ((*(_BYTE *)(v73 + 96) & 1) == 0)
            {
              v74 = v269;
              if (!*(_QWORD *)(v269 + 16))
                goto LABEL_41;
              v75 = sub_1D4922EEC();
              v64 = (double *)v260;
              v76 = -1 << *(_BYTE *)(v74 + 32);
              v77 = v75 & ~v76;
              if (((*(_QWORD *)(v74 + 56 + ((v77 >> 3) & 0xFFFFFFFFFFFFF8)) >> v77) & 1) == 0)
                goto LABEL_41;
              v78 = *(_QWORD *)(v74 + 48);
              if (*(_QWORD *)(v78 + 8 * v77) != v70)
                break;
            }
LABEL_29:
            ++v70;
            v51 = v264;
            if ((double *)v70 == v10)
              goto LABEL_21;
          }
          v79 = ~v76;
          while (1)
          {
            v77 = (v77 + 1) & v79;
            if (((*(_QWORD *)(v74 + 56 + ((v77 >> 3) & 0xFFFFFFFFFFFFF8)) >> v77) & 1) == 0)
              break;
            if (*(_QWORD *)(v78 + 8 * v77) == v70)
              goto LABEL_29;
          }
LABEL_41:
          v80 = *v37;
          v81 = v37[1];
          v82 = v37[2];
          v83 = v37[3];
          v84 = *(double *)(v73 + 8);
          v258 = *(NSObject **)v73;
          v85 = *(double *)(v73 + 16);
          v86 = *(double *)(v73 + 24);
          v275.origin.x = v80;
          v275.origin.y = v81;
          v275.size.width = v82;
          v275.size.height = v83;
          v87 = CGRectGetWidth(v275);
          v255 = *(_QWORD *)&v80;
          v276.origin.x = v80;
          v88 = v81;
          v89 = v258;
          v276.origin.y = v88;
          v276.size.width = v82;
          v276.size.height = v83;
          v90 = v87 * CGRectGetHeight(v276);
          *(_QWORD *)&v277.origin.x = v89;
          v277.origin.y = v84;
          v277.size.width = v85;
          v277.size.height = v86;
          v256 = CGRectGetWidth(v277);
          *(_QWORD *)&v278.origin.x = v89;
          v278.origin.y = v84;
          v278.size.width = v85;
          v278.size.height = v86;
          v91 = CGRectGetHeight(v278);
          if (v90 <= 0.0 || (v92 = v256 * v91, v92 <= 0.0))
          {
            v97 = 0.0;
          }
          else
          {
            *(double *)&v246 = v92;
            v256 = v90;
            *(_QWORD *)&v279.origin.x = v255;
            v279.origin.y = v88;
            v279.size.width = v82;
            v279.size.height = v83;
            *(_QWORD *)&v307.origin.x = v89;
            v307.origin.y = v84;
            v307.size.width = v85;
            v307.size.height = v86;
            v280 = CGRectIntersection(v279, v307);
            v93 = v280.origin.x;
            v94 = v280.origin.y;
            v95 = v280.size.width;
            v96 = v280.size.height;
            v97 = 0.0;
            if (!CGRectIsNull(v280))
            {
              v281.origin.x = v93;
              v281.origin.y = v94;
              v281.size.width = v95;
              v281.size.height = v96;
              v98 = CGRectGetWidth(v281);
              v282.origin.x = v93;
              v282.origin.y = v94;
              v282.size.width = v95;
              v282.size.height = v96;
              v99 = CGRectGetHeight(v282);
              v97 = v98 * v99 / (v256 + *(double *)&v246 - v98 * v99);
            }
          }
          v100 = *(_QWORD *)(v252 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20));
          swift_beginAccess();
          v64 = (double *)v260;
          if (*(float *)(v100 + 32) < v97)
          {
            sub_1D47CC9F8((uint64_t *)&v270, v70);
            if (qword_1ED98F398 != -1)
              swift_once();
            if (byte_1ED98F388 != 1)
              goto LABEL_58;
            if ((sub_1D473117C() & 1) != 0)
            {
              v101 = &qword_1EFEAA908;
              if (qword_1EFEA9C20 != -1)
              {
                swift_once();
                v101 = &qword_1EFEAA908;
              }
            }
            else
            {
              v101 = (uint64_t *)&off_1ED98F3F0;
              if (qword_1ED98F3A8 != -1)
              {
                swift_once();
                v101 = (uint64_t *)&off_1ED98F3F0;
              }
            }
            v102 = *(void **)(*v101 + 32);
            swift_retain();
            v103 = (void *)sub_1D49225F8();
            LODWORD(v102) = objc_msgSend(v102, sel_BOOLForKey_, v103);
            swift_release();

            v52 = v253;
            if ((_DWORD)v102)
            {
              v104 = v15;
              v105 = qword_1EFEAAA30;
              if (qword_1EFEA9C78 != -1)
              {
                swift_once();
                v105 = qword_1EFEAAA30;
              }
            }
            else
            {
LABEL_58:
              v104 = v15;
              v105 = qword_1ED98F3B0;
              if (qword_1ED98F3D0 != -1)
              {
                swift_once();
                v105 = qword_1ED98F3B0;
              }
            }
            v106 = __swift_project_value_buffer(v52, (uint64_t)v105);
            v107 = v247;
            (*((void (**)(char *, uint64_t, uint64_t))v254 + 2))(v247, v106, v52);
            swift_retain_n();
            v108 = sub_1D4922358();
            v109 = sub_1D4922910();
            v258 = v108;
            LODWORD(v256) = v109;
            if (os_log_type_enabled(v108, v109))
            {
              v110 = swift_slowAlloc();
              v111 = swift_slowAlloc();
              *(_QWORD *)&v270 = v111;
              *(_DWORD *)v110 = v238;
              v246 = v110 + 4;
              v112 = *(NSObject **)v73;
              v113 = *(double *)(v73 + 8);
              v114 = *(double *)(v73 + 16);
              v115 = *(double *)(v73 + 24);
              v255 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
              v116 = swift_allocObject();
              *(_OWORD *)(v116 + 16) = v248;
              *(_QWORD *)&v283.origin.x = v112;
              v283.origin.y = v113;
              v283.size.width = v114;
              v283.size.height = v115;
              v117 = CGRectGetMinX(v283);
              v118 = MEMORY[0x1E0DEF040];
              *(_QWORD *)(v116 + 56) = MEMORY[0x1E0DEF040];
              v119 = sub_1D46A492C();
              *(_QWORD *)(v116 + 64) = v119;
              *(CGFloat *)(v116 + 32) = v117;
              *(_QWORD *)&v284.origin.x = v112;
              v284.origin.y = v113;
              v284.size.width = v114;
              v284.size.height = v115;
              v120 = CGRectGetMinY(v284);
              *(_QWORD *)(v116 + 96) = v118;
              *(_QWORD *)(v116 + 104) = v119;
              *(CGFloat *)(v116 + 72) = v120;
              *(_QWORD *)&v285.origin.x = v112;
              v285.origin.y = v113;
              v285.size.width = v114;
              v285.size.height = v115;
              v121 = CGRectGetWidth(v285);
              *(_QWORD *)(v116 + 136) = v118;
              *(_QWORD *)(v116 + 144) = v119;
              *(CGFloat *)(v116 + 112) = v121;
              *(_QWORD *)&v286.origin.x = v112;
              v286.origin.y = v113;
              v286.size.width = v114;
              v286.size.height = v115;
              v122 = CGRectGetHeight(v286);
              *(_QWORD *)(v116 + 176) = v118;
              *(_QWORD *)(v116 + 184) = v119;
              *(CGFloat *)(v116 + 152) = v122;
              v123 = sub_1D4922640();
              v267 = sub_1D47F0250(v123, v124, (uint64_t *)&v270);
              sub_1D4922A78();
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v110 + 12) = 2080;
              v246 = v110 + 14;
              v125 = *v37;
              v126 = v37[1];
              v127 = v37[2];
              v128 = v37[3];
              v129 = swift_allocObject();
              *(_OWORD *)(v129 + 16) = v248;
              v287.origin.x = v125;
              v287.origin.y = v126;
              v287.size.width = v127;
              v287.size.height = v128;
              v130 = CGRectGetMinX(v287);
              *(_QWORD *)(v129 + 56) = v118;
              *(_QWORD *)(v129 + 64) = v119;
              *(CGFloat *)(v129 + 32) = v130;
              v288.origin.x = v125;
              v288.origin.y = v126;
              v288.size.width = v127;
              v288.size.height = v128;
              v131 = CGRectGetMinY(v288);
              *(_QWORD *)(v129 + 96) = v118;
              *(_QWORD *)(v129 + 104) = v119;
              *(CGFloat *)(v129 + 72) = v131;
              v289.origin.x = v125;
              v289.origin.y = v126;
              v289.size.width = v127;
              v289.size.height = v128;
              v132 = CGRectGetWidth(v289);
              *(_QWORD *)(v129 + 136) = v118;
              *(_QWORD *)(v129 + 144) = v119;
              *(CGFloat *)(v129 + 112) = v132;
              v290.origin.x = v125;
              v290.origin.y = v126;
              v290.size.width = v127;
              v290.size.height = v128;
              v133 = CGRectGetHeight(v290);
              *(_QWORD *)(v129 + 176) = v118;
              *(_QWORD *)(v129 + 184) = v119;
              v15 = v243;
              *(CGFloat *)(v129 + 152) = v133;
              v134 = sub_1D4922640();
              v267 = sub_1D47F0250(v134, v135, (uint64_t *)&v270);
              sub_1D4922A78();
              swift_bridgeObjectRelease();
              v136 = v258;
              _os_log_impl(&dword_1D467C000, v258, LOBYTE(v256), "Merge from %s to %s", (uint8_t *)v110, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x1D82635B8](v111, -1, -1);
              v137 = v110;
              v52 = v253;
              MEMORY[0x1D82635B8](v137, -1, -1);

              (*((void (**)(char *, uint64_t))v254 + 1))(v247, v52);
            }
            else
            {

              swift_release_n();
              (*((void (**)(char *, uint64_t))v254 + 1))(v107, v52);
              v15 = v104;
            }
            v43 = v239;
            v71 = v242;
            sub_1D46A8550(v73, v242);
            v72 = v249;
            sub_1D4828948(v71, (uint64_t)v37, v249);
            sub_1D4697DE0(v71, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
            sub_1D46A8660(v72, (uint64_t)v37);
            v65 = v261;
            v64 = (double *)v260;
          }
          goto LABEL_29;
        }
LABEL_21:
        sub_1D46A8550((uint64_t)v37, v236);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
          v10 = v254;
          v66 = v245;
        }
        else
        {
          v66 = sub_1D48A8614(0, *(_QWORD *)(v245 + 16) + 1, 1, v245);
          v10 = v254;
        }
        v68 = *(_QWORD *)(v66 + 16);
        v67 = *(_QWORD *)(v66 + 24);
        if (v68 >= v67 >> 1)
          v66 = sub_1D48A8614(v67 > 1, v68 + 1, 1, v66);
        *(_QWORD *)(v66 + 16) = v68 + 1;
        v69 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
        v245 = v66;
        sub_1D46A8594(v236, v66 + v69 + *(_QWORD *)(v15 + 72) * v68);
        sub_1D4697DE0((uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        v47 = v269;
        v48 = v257;
        goto LABEL_2;
      }
    }
LABEL_3:
    sub_1D4697DE0((uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v53 = *(_QWORD *)&v263;
    v48 = v257;
  }
LABEL_117:
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
LABEL_120:
  v52 = sub_1D48A8614(0, *(_QWORD *)(v52 + 16) + 1, 1, v52);
LABEL_109:
  v222 = *(_QWORD *)(v52 + 16);
  v221 = *(_QWORD *)(v52 + 24);
  if (v222 >= v221 >> 1)
    v52 = sub_1D48A8614(v221 > 1, v222 + 1, 1, v52);
  *(_QWORD *)(v52 + 16) = v222 + 1;
  sub_1D46A8594(v231, v52+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v222);
  sub_1D4697DE0(v230, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  sub_1D4697DE0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
LABEL_112:
  sub_1D47C0B30();
  swift_release();
  return v52;
}

uint64_t sub_1D46A73DC()
{
  uint64_t v0;

  sub_1D4697DE0(v0 + OBJC_IVAR____TtC18VisualIntelligence22RegionMergingProcessor_config, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D46A7424()
{
  return type metadata accessor for RegionMergingProcessor();
}

uint64_t type metadata accessor for RegionMergingProcessor()
{
  uint64_t result;

  result = qword_1ED98F0D0;
  if (!qword_1ED98F0D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D46A7468()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Argos_Protos_Queryflow_ParseConfig(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D46A74E0(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[2];

  v2 = *(_QWORD *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1D46D7444(v3);
  v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_1D46A7560(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1D46A7560(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  float v28;
  float v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  float v56;
  float v57;
  uint64_t v58;
  uint64_t v59;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v61;
  unint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  uint64_t v88;
  char v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;

  v2 = v1;
  v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v129 = *(_QWORD *)(v4 - 8);
  v130 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v126 = (uint64_t)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v135 = (uint64_t)&v120 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v133 = (uint64_t)&v120 - v10;
  MEMORY[0x1E0C80A78](v9);
  v132 = (uint64_t)&v120 - v11;
  v12 = a1[1];
  result = sub_1D4922E08();
  if (result >= v12)
  {
    if (v12 < 0)
      goto LABEL_138;
    if (v12)
      return sub_1D46A7EDC(0, v12, 1, a1);
    return result;
  }
  if (v12 >= 0)
    v14 = v12;
  else
    v14 = v12 + 1;
  if (v12 < -1)
    goto LABEL_146;
  v122 = result;
  if (v12 < 2)
  {
    v18 = (char *)MEMORY[0x1E0DEE9D8];
    v128 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80));
    v121 = MEMORY[0x1E0DEE9D8];
    if (v12 != 1)
    {
      v20 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_104:
      if (v20 >= 2)
      {
        v113 = *a1;
        do
        {
          v114 = v20 - 2;
          if (v20 < 2)
            goto LABEL_133;
          if (!v113)
            goto LABEL_145;
          v115 = v18;
          v116 = *(_QWORD *)&v18[16 * v114 + 32];
          v117 = *(_QWORD *)&v18[16 * v20 + 24];
          sub_1D46A80FC(v113 + *(_QWORD *)(v129 + 72) * v116, v113 + *(_QWORD *)(v129 + 72) * *(_QWORD *)&v18[16 * v20 + 16], v113 + *(_QWORD *)(v129 + 72) * v117, v128);
          if (v2)
            break;
          if (v117 < v116)
            goto LABEL_134;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v115 = sub_1D46D5B88((uint64_t)v18);
          if (v114 >= *((_QWORD *)v115 + 2))
            goto LABEL_135;
          v118 = &v115[16 * v114 + 32];
          *(_QWORD *)v118 = v116;
          *((_QWORD *)v118 + 1) = v117;
          v119 = *((_QWORD *)v115 + 2);
          if (v20 > v119)
            goto LABEL_136;
          memmove(&v115[16 * v20 + 16], &v115[16 * v20 + 32], 16 * (v119 - v20));
          *((_QWORD *)v115 + 2) = v119 - 1;
          v20 = v119 - 1;
          v18 = v115;
        }
        while (v119 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v121 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v15 = v14 >> 1;
    v16 = sub_1D4922850();
    *(_QWORD *)(v16 + 16) = v15;
    v17 = *(unsigned __int8 *)(v129 + 80);
    v121 = v16;
    v128 = v16 + ((v17 + 32) & ~v17);
  }
  v19 = 0;
  v18 = (char *)MEMORY[0x1E0DEE9D8];
  v134 = a1;
  while (1)
  {
    v21 = v19;
    v22 = v19 + 1;
    if (v19 + 1 >= v12)
    {
      v31 = v19 + 1;
    }
    else
    {
      v23 = *a1;
      v24 = *(_QWORD *)(v129 + 72);
      v25 = *a1 + v24 * v22;
      v127 = v19;
      v26 = v132;
      sub_1D46A8550(v25, v132);
      v27 = v133;
      sub_1D46A8550(v23 + v24 * v127, v133);
      v28 = *(float *)(v26 + 68);
      v29 = *(float *)(v27 + 68);
      sub_1D4697DE0(v27, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      v30 = v26;
      v21 = v127;
      sub_1D4697DE0(v30, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      v31 = v21 + 2;
      v124 = v23;
      v136 = v24;
      if (v21 + 2 < v12)
      {
        v125 = v2;
        v123 = v18;
        v131 = v24 * v22;
        v32 = v23;
        v33 = v21 + 2;
        v34 = v24 * (v21 + 2);
        while (1)
        {
          v35 = v132;
          sub_1D46A8550(v32 + v34, v132);
          v36 = v133;
          sub_1D46A8550(v32 + v131, v133);
          v37 = *(float *)(v36 + 68) >= *(float *)(v35 + 68);
          sub_1D4697DE0(v36, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1D4697DE0(v35, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v29 < v28 == v37)
            break;
          v32 += v136;
          if (v12 == ++v33)
          {
            v31 = v12;
            v18 = v123;
            goto LABEL_23;
          }
        }
        v18 = v123;
        v31 = v33;
LABEL_23:
        v2 = v125;
        v21 = v127;
      }
      if (v29 < v28)
      {
        if (v31 < v21)
          goto LABEL_139;
        if (v21 < v31)
        {
          v131 = v12;
          v123 = v18;
          v38 = 0;
          v39 = v136;
          v40 = v136 * (v31 - 1);
          v41 = v31 * v136;
          v42 = v21;
          v43 = v21 * v136;
          do
          {
            if (v42 != v31 + v38 - 1)
            {
              v125 = v2;
              v44 = v124;
              if (!v124)
                goto LABEL_144;
              v45 = v124 + v43;
              sub_1D46A8594(v124 + v43, v126);
              if (v43 < v40 || v45 >= v44 + v41)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v43 != v40)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_1D46A8594(v126, v44 + v40);
              a1 = v134;
              v2 = v125;
              v39 = v136;
            }
            ++v42;
            --v38;
            v40 -= v39;
            v41 -= v39;
            v43 += v39;
          }
          while (v42 < v31 + v38);
          v18 = v123;
          v21 = v127;
          v12 = v131;
        }
      }
    }
    if (v31 < v12)
    {
      if (__OFSUB__(v31, v21))
        goto LABEL_137;
      if (v31 - v21 < v122)
        break;
    }
LABEL_56:
    if (v31 < v21)
      goto LABEL_132;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v136 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v18 = sub_1D46D5278(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
    v62 = *((_QWORD *)v18 + 2);
    v61 = *((_QWORD *)v18 + 3);
    v20 = v62 + 1;
    if (v62 >= v61 >> 1)
      v18 = sub_1D46D5278((char *)(v61 > 1), v62 + 1, 1, v18);
    *((_QWORD *)v18 + 2) = v20;
    v63 = v18 + 32;
    v64 = &v18[16 * v62 + 32];
    v65 = v136;
    *(_QWORD *)v64 = v21;
    *((_QWORD *)v64 + 1) = v65;
    if (v62)
    {
      while (1)
      {
        v66 = v20 - 1;
        if (v20 >= 4)
        {
          v71 = &v63[16 * v20];
          v72 = *((_QWORD *)v71 - 8);
          v73 = *((_QWORD *)v71 - 7);
          v77 = __OFSUB__(v73, v72);
          v74 = v73 - v72;
          if (v77)
            goto LABEL_121;
          v76 = *((_QWORD *)v71 - 6);
          v75 = *((_QWORD *)v71 - 5);
          v77 = __OFSUB__(v75, v76);
          v69 = v75 - v76;
          v70 = v77;
          if (v77)
            goto LABEL_122;
          v78 = v20 - 2;
          v79 = &v63[16 * v20 - 32];
          v81 = *(_QWORD *)v79;
          v80 = *((_QWORD *)v79 + 1);
          v77 = __OFSUB__(v80, v81);
          v82 = v80 - v81;
          if (v77)
            goto LABEL_124;
          v77 = __OFADD__(v69, v82);
          v83 = v69 + v82;
          if (v77)
            goto LABEL_127;
          if (v83 >= v74)
          {
            v101 = &v63[16 * v66];
            v103 = *(_QWORD *)v101;
            v102 = *((_QWORD *)v101 + 1);
            v77 = __OFSUB__(v102, v103);
            v104 = v102 - v103;
            if (v77)
              goto LABEL_131;
            v94 = v69 < v104;
            goto LABEL_93;
          }
        }
        else
        {
          if (v20 != 3)
          {
            v95 = *((_QWORD *)v18 + 4);
            v96 = *((_QWORD *)v18 + 5);
            v77 = __OFSUB__(v96, v95);
            v88 = v96 - v95;
            v89 = v77;
            goto LABEL_87;
          }
          v68 = *((_QWORD *)v18 + 4);
          v67 = *((_QWORD *)v18 + 5);
          v77 = __OFSUB__(v67, v68);
          v69 = v67 - v68;
          v70 = v77;
        }
        if ((v70 & 1) != 0)
          goto LABEL_123;
        v78 = v20 - 2;
        v84 = &v63[16 * v20 - 32];
        v86 = *(_QWORD *)v84;
        v85 = *((_QWORD *)v84 + 1);
        v87 = __OFSUB__(v85, v86);
        v88 = v85 - v86;
        v89 = v87;
        if (v87)
          goto LABEL_126;
        v90 = &v63[16 * v66];
        v92 = *(_QWORD *)v90;
        v91 = *((_QWORD *)v90 + 1);
        v77 = __OFSUB__(v91, v92);
        v93 = v91 - v92;
        if (v77)
          goto LABEL_129;
        if (__OFADD__(v88, v93))
          goto LABEL_130;
        if (v88 + v93 >= v69)
        {
          v94 = v69 < v93;
LABEL_93:
          if (v94)
            v66 = v78;
          goto LABEL_95;
        }
LABEL_87:
        if ((v89 & 1) != 0)
          goto LABEL_125;
        v97 = &v63[16 * v66];
        v99 = *(_QWORD *)v97;
        v98 = *((_QWORD *)v97 + 1);
        v77 = __OFSUB__(v98, v99);
        v100 = v98 - v99;
        if (v77)
          goto LABEL_128;
        if (v100 < v88)
          goto LABEL_14;
LABEL_95:
        v105 = v66 - 1;
        if (v66 - 1 >= v20)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        v106 = *a1;
        if (!*a1)
          goto LABEL_143;
        v107 = v18;
        v108 = &v63[16 * v105];
        v109 = *(_QWORD *)v108;
        v110 = &v63[16 * v66];
        v111 = *((_QWORD *)v110 + 1);
        sub_1D46A80FC(v106 + *(_QWORD *)(v129 + 72) * *(_QWORD *)v108, v106 + *(_QWORD *)(v129 + 72) * *(_QWORD *)v110, v106 + *(_QWORD *)(v129 + 72) * v111, v128);
        if (v2)
          goto LABEL_115;
        if (v111 < v109)
          goto LABEL_118;
        if (v66 > *((_QWORD *)v107 + 2))
          goto LABEL_119;
        *(_QWORD *)v108 = v109;
        *(_QWORD *)&v63[16 * v105 + 8] = v111;
        v112 = *((_QWORD *)v107 + 2);
        if (v66 >= v112)
          goto LABEL_120;
        v18 = v107;
        v20 = v112 - 1;
        memmove(&v63[16 * v66], v110 + 16, 16 * (v112 - 1 - v66));
        *((_QWORD *)v107 + 2) = v112 - 1;
        a1 = v134;
        if (v112 <= 2)
          goto LABEL_14;
      }
    }
    v20 = 1;
LABEL_14:
    v12 = a1[1];
    v19 = v136;
    if (v136 >= v12)
      goto LABEL_104;
  }
  if (__OFADD__(v21, v122))
    goto LABEL_140;
  if (v21 + v122 >= v12)
    v46 = v12;
  else
    v46 = v21 + v122;
  if (v46 >= v21)
  {
    if (v31 != v46)
    {
      v127 = v21;
      v123 = v18;
      v124 = v46;
      v125 = v2;
      v47 = *(_QWORD *)(v129 + 72);
      v136 = v47 * (v31 - 1);
      v131 = v47;
      v48 = v31 * v47;
      do
      {
        v49 = 0;
        v50 = v127;
        while (1)
        {
          v51 = v31;
          v52 = *a1;
          v53 = v132;
          sub_1D46A8550(v48 + v49 + *a1, v132);
          v54 = v136 + v49 + v52;
          v55 = v133;
          sub_1D46A8550(v54, v133);
          v56 = *(float *)(v53 + 68);
          v57 = *(float *)(v55 + 68);
          sub_1D4697DE0(v55, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1D4697DE0(v53, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v57 >= v56)
            break;
          v58 = *a1;
          if (!*a1)
            goto LABEL_142;
          v59 = v58 + v136 + v49;
          sub_1D46A8594(v58 + v48 + v49, v135);
          swift_arrayInitWithTakeFrontToBack();
          sub_1D46A8594(v135, v59);
          v49 -= v131;
          ++v50;
          v31 = v51;
          a1 = v134;
          if (v51 == v50)
            goto LABEL_49;
        }
        v31 = v51;
LABEL_49:
        ++v31;
        v136 += v131;
        v48 += v131;
      }
      while (v31 != v124);
      v31 = v124;
      v2 = v125;
      v18 = v123;
      v21 = v127;
    }
    goto LABEL_56;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_1D4922C28();
  __break(1u);
  return result;
}

uint64_t sub_1D46A7EDC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  float *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  float v20;
  float v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v27 = a1;
  v28 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v7 = MEMORY[0x1E0C80A78](v28);
  v31 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (float *)((char *)&v25 - v10);
  result = MEMORY[0x1E0C80A78](v9);
  v15 = (float *)((char *)&v25 - v14);
  v30 = a3;
  v26 = a2;
  if (a3 != a2)
  {
    v16 = *(_QWORD *)(v13 + 72);
    v33 = v16 * (v30 - 1);
    v29 = v16;
    v32 = v16 * v30;
LABEL_5:
    v17 = 0;
    v18 = v27;
    while (1)
    {
      v19 = *a4;
      sub_1D46A8550(v32 + v17 + *a4, (uint64_t)v15);
      sub_1D46A8550(v33 + v17 + v19, (uint64_t)v11);
      v20 = v15[17];
      v21 = v11[17];
      sub_1D4697DE0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      result = sub_1D4697DE0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v21 >= v20)
      {
LABEL_4:
        v33 += v29;
        v32 += v29;
        if (++v30 == v26)
          return result;
        goto LABEL_5;
      }
      v22 = *a4;
      if (!*a4)
        break;
      v23 = a4;
      v24 = v22 + v33 + v17;
      sub_1D46A8594(v22 + v32 + v17, v31);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_1D46A8594(v31, v24);
      v17 -= v29;
      ++v18;
      a4 = v23;
      if (v30 == v18)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1D46A80FC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  float *v10;
  uint64_t v11;
  float *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  float v22;
  float v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v27;
  unint64_t v29;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  float v34;
  float v35;
  unint64_t v36;
  uint64_t result;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;

  v41 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v8 = MEMORY[0x1E0C80A78](v41);
  v10 = (float *)((char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v12 = (float *)((char *)&v39 - v11);
  v14 = *(_QWORD *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1)
    goto LABEL_70;
  v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1)
    goto LABEL_71;
  v16 = (uint64_t)(a2 - a1) / v14;
  v44 = a1;
  v43 = a4;
  v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v29 = a4 + v19;
      v42 = a4 + v19;
      v44 = a2;
      v40 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        v31 = -v14;
        do
        {
          v32 = a3 + v31;
          sub_1D46A8550(v29 + v31, (uint64_t)v12);
          v33 = a2 + v31;
          sub_1D46A8550(a2 + v31, (uint64_t)v10);
          v34 = v12[17];
          v35 = v10[17];
          sub_1D4697DE0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1D4697DE0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v35 >= v34)
          {
            v36 = v42;
            v42 += v31;
            if (a3 < v36 || v32 >= v36)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v36)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v33 = a2;
          }
          else
          {
            if (a3 < a2 || v32 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v44 += v31;
          }
          v29 = v42;
          if (v42 <= a4)
            break;
          a2 = v33;
          a3 += v31;
        }
        while (v33 > v40);
      }
      goto LABEL_68;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v20 = a4 + v18;
    v42 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_1D46A8550(a2, (uint64_t)v12);
        sub_1D46A8550(a4, (uint64_t)v10);
        v22 = v12[17];
        v23 = v10[17];
        sub_1D4697DE0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1D4697DE0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        v24 = v44;
        if (v23 >= v22)
        {
          v27 = v43 + v14;
          if (v44 < v43 || v44 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v44 != v43)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v43 = v27;
          v25 = a2;
        }
        else
        {
          v25 = a2 + v14;
          if (v44 < a2 || v44 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v44 == a2)
          {
            v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v44 = v24 + v14;
        a4 = v43;
        if (v43 >= v20)
          break;
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_68:
    sub_1D46D5370(&v44, &v43, (uint64_t *)&v42);
    return 1;
  }
LABEL_72:
  result = sub_1D4922C88();
  __break(1u);
  return result;
}

uint64_t sub_1D46A8550(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D46A8594(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D46A85D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98EAD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D46A8620(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D7C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D46A8660(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D46A86A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E620);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold(0);
  v30 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v29 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v27 = (uint64_t)&v25 - v9;
  v10 = type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold(0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v25 = a1;
    v26 = v1;
    v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v28 = *(_QWORD *)(v11 + 72);
    swift_bridgeObjectRetain();
    v31 = MEMORY[0x1E0DEE9D8];
    do
    {
      v16 = sub_1D469C304(v15, (uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
      MEMORY[0x1E0C80A78](v16);
      *(&v25 - 2) = (uint64_t)v13;
      sub_1D46A9140();
      sub_1D49221FC();
      v17 = v30;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v5, 0, 1, v6);
      sub_1D4697DE0((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v5, 1, v6) == 1)
      {
        sub_1D46A9188((uint64_t)v5);
      }
      else
      {
        v18 = v27;
        sub_1D469C630((uint64_t)v5, v27, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
        sub_1D469C630(v18, v29, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v31 = sub_1D48A8D98(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
        v20 = *(_QWORD *)(v31 + 16);
        v19 = *(_QWORD *)(v31 + 24);
        if (v20 >= v19 >> 1)
          v31 = sub_1D48A8D98(v19 > 1, v20 + 1, 1, v31);
        v22 = v30;
        v21 = v31;
        *(_QWORD *)(v31 + 16) = v20 + 1;
        sub_1D469C630(v29, v21+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(_QWORD *)(v22 + 72) * v20, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
      }
      v15 += v28;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v26 + 8))
      goto LABEL_12;
LABEL_14:
    swift_bridgeObjectRelease();
    return 0;
  }
  v31 = MEMORY[0x1E0DEE9D8];
  if (!*(_QWORD *)(v1 + 8))
    goto LABEL_14;
LABEL_12:
  v23 = sub_1D47208E8(v31);
  swift_bridgeObjectRelease();
  return v23;
}

double sub_1D46A89E8@<D0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double result;
  char *v14;
  uint64_t v15;
  int v16;

  v6 = type metadata accessor for GeoFenceDomainAssignmentRule();
  MEMORY[0x1E0C80A78](v6);
  v7 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CF58);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a2;
  sub_1D46A9028(a1, (uint64_t)v11);
  v12 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) != 1)
  {
    v14 = (char *)&loc_1D46A8B58 + 4 * word_1D49275B8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  *(_QWORD *)(a3 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

void sub_1D46A8FB8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v6;
  uint64_t v7;
  char *v8;

  v4 = type metadata accessor for StorefrontDomainAssignmentRule();
  v1[3] = v4;
  v1[4] = (uint64_t)&off_1E9803660;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v1);
  sub_1D469C630(v2, (uint64_t)boxed_opaque_existential_1, type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule);
  v6 = (uint64_t *)(v0 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule(0) + 20));
  v7 = *v6;
  LOBYTE(v6) = *((_BYTE *)v6 + 8);
  *((_BYTE *)boxed_opaque_existential_1 + *(int *)(v4 + 20)) = *(_DWORD *)(v3 - 84);
  v8 = (char *)boxed_opaque_existential_1 + *(int *)(v4 + 24);
  *(_QWORD *)v8 = v7;
  v8[8] = (char)v6;
  JUMPOUT(0x1D46A8F98);
}

uint64_t sub_1D46A9028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CF58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

char *sub_1D46A90AC@<X0>(char **a1@<X8>)
{
  return sub_1D48BABEC(a1);
}

uint64_t sub_1D46A90C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D48BAC14(a1);
}

float sub_1D46A90DC(uint64_t a1)
{
  uint64_t v1;
  float *v3;
  uint64_t v4;
  uint64_t v5;
  float result;

  v3 = *(float **)(v1 + 16);
  v5 = *(_QWORD *)v3;
  v4 = *((_QWORD *)v3 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  result = v3[4];
  *(float *)(a1 + 32) = result;
  *(_BYTE *)(a1 + 36) = *((_BYTE *)v3 + 20);
  return result;
}

unint64_t sub_1D46A9140()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED98E600;
  if (!qword_1ED98E600)
  {
    v1 = type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold(255);
    result = MEMORY[0x1D82634E0](&unk_1D492D314, v1);
    atomic_store(result, (unint64_t *)&qword_1ED98E600);
  }
  return result;
}

uint64_t sub_1D46A9188(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E620);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1D46A91C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D46A91DC()
{
  sub_1D4922EF8();
  sub_1D4922F04();
  return sub_1D4922F34();
}

uint64_t sub_1D46A9220()
{
  return sub_1D4922F04();
}

uint64_t sub_1D46A9248()
{
  sub_1D4922EF8();
  sub_1D4922F04();
  return sub_1D4922F34();
}

uint64_t sub_1D46A9298(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v4;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  _BYTE *v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29[2];

  v29[1] = *(id *)MEMORY[0x1E0C80C00];
  v9 = objc_allocWithZone(MEMORY[0x1E0D106F0]);
  sub_1D46A5708(a1, a2);
  sub_1D46A5708(a3, a4);
  v10 = (void *)sub_1D4920F60();
  v11 = (void *)sub_1D4920F60();
  v12 = objc_msgSend(v9, sel_initWithPIRConfig_keyStatus_, v10, v11);
  sub_1D4696F10(a3, a4);
  sub_1D4696F10(a1, a2);

  v13 = (void *)v4[2];
  v4[2] = v12;

  v14 = (void *)v4[2];
  if (v14)
  {
    v15 = (void *)v4[3];
    v29[0] = 0;
    v16 = v14;
    v17 = objc_msgSend(v15, sel_setPIRConfig_error_, v16, v29);
    v18 = v17;
    if (v29[0])
    {
      v29[0];

    }
    else
    {
      if (v17)
      {
        v20 = sub_1D4920F6C();
        sub_1D4696F10(v20, v21);

      }
      v29[0] = 0;
      v22 = objc_msgSend(v15, sel_generateEvaluationKey_, v29);
      if (!v29[0])
      {
        v24 = sub_1D4920F6C();
        v26 = v25;

        v27 = v4[4];
        v28 = v4[5];
        v4[4] = v24;
        v4[5] = v26;
        sub_1D4696F10(v27, v28);
        return 1;
      }
      v29[0];

    }
    swift_willThrow();

  }
  else
  {
    sub_1D46AA204();
    swift_allocError();
    *v19 = 2;
    swift_willThrow();
  }
  return 1;
}

NSObject *sub_1D46A94B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  os_log_type_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  NSObject *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD v53[2];
  uint64_t v54;
  uint64_t v55;

  v55 = *MEMORY[0x1E0C80C00];
  v1 = sub_1D4922370();
  v49 = *(_QWORD *)(v1 - 8);
  v50 = v1;
  MEMORY[0x1E0C80A78](v1);
  v51 = (uint64_t)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D492204C();
  MEMORY[0x1E0C80A78](v3);
  v46 = sub_1D49223E8();
  v44 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v47 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D4922664();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D492264C();
  v9 = sub_1D4922628();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v11 >> 60 == 15)
    __break(1u);
  swift_bridgeObjectRetain();
  v12 = sub_1D47D456C(3);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  swift_bridgeObjectRelease();
  MEMORY[0x1D8261A1C](v12, v14, v16, v18);
  swift_bridgeObjectRelease();
  v19 = *(void **)(v0 + 24);
  v20 = (void *)sub_1D4920F60();
  v21 = (void *)sub_1D49225F8();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v53[0] = 0;
  v22 = objc_msgSend(v19, sel_constructPIRRequestWithKeyword_withEvaluationKey_shardId_error_, v20, 1, v21, v53);

  v23 = *(id *)&v53[0];
  if (v22)
  {
    v45 = v9;
    v24 = sub_1D4920F6C();
    v26 = v25;

    v54 = 0;
    memset(v53, 0, sizeof(v53));
    sub_1D46A5708(v24, v26);
    sub_1D4922040();
    sub_1D4696EA4(&qword_1EFEAA438, (uint64_t (*)(uint64_t))MEMORY[0x1E0D10660], MEMORY[0x1E0D10658]);
    v27 = v46;
    v28 = v47;
    v29 = v48;
    sub_1D49221C0();
    v30 = v29;
    if (!v29)
    {
      v42 = sub_1D49221CC();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v28, v27);
      sub_1D46AA1F0(v45, v11);
      sub_1D4696F10(v24, v26);
      return v42;
    }
    sub_1D46AA1F0(v45, v11);
    sub_1D4696F10(v24, v26);
  }
  else
  {
    v31 = v23;
    v30 = (void *)sub_1D4920E64();

    swift_willThrow();
    sub_1D46AA1F0(v9, v11);
  }
  v32 = v51;
  sub_1D470C76C(v51);
  v33 = v30;
  v34 = v30;
  v42 = sub_1D4922358();
  v35 = sub_1D492291C();
  if (os_log_type_enabled(v42, v35))
  {
    v36 = swift_slowAlloc();
    v37 = (_QWORD *)swift_slowAlloc();
    v38 = swift_slowAlloc();
    *(_QWORD *)&v53[0] = v38;
    *(_DWORD *)v36 = 136315394;
    v52 = sub_1D47F0250(0xD00000000000001BLL, 0x80000001D493FF60, (uint64_t *)v53);
    sub_1D4922A78();
    *(_WORD *)(v36 + 12) = 2112;
    v39 = v30;
    v40 = _swift_stdlib_bridgeErrorToNSError();
    v52 = v40;
    sub_1D4922A78();
    *v37 = v40;

    _os_log_impl(&dword_1D467C000, v42, v35, "CipherMLPIRClient.%s failed: %@", (uint8_t *)v36, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFEAB9C0);
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v37, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v38, -1, -1);
    MEMORY[0x1D82635B8](v36, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v51, v50);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v32, v50);
  }
  swift_willThrow();
  return v42;
}

NSObject *sub_1D46A9A3C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  void *v43;
  unint64_t v44;
  void *v45;
  void *v46;
  id v47;
  char *v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54[2];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD v65[2];
  uint64_t v66;
  uint64_t v67;

  v59 = a2;
  v58 = a1;
  v67 = *MEMORY[0x1E0C80C00];
  v2 = sub_1D4922370();
  v56 = *(_QWORD *)(v2 - 8);
  v57 = v2;
  v3 = MEMORY[0x1E0C80A78](v2);
  v63 = (uint64_t)v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v54[0] = (uint64_t)v54 - v5;
  v6 = sub_1D492204C();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1D4922418();
  v55 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D4922664();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D492264C();
  v62 = sub_1D4922628();
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v61 = v15;
  if (v15 >> 60 == 15)
    __break(1u);
  swift_bridgeObjectRetain();
  v16 = sub_1D47D456C(3);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  swift_bridgeObjectRelease();
  MEMORY[0x1D8261A1C](v16, v18, v20, v22);
  swift_bridgeObjectRelease();
  v66 = 0;
  memset(v65, 0, sizeof(v65));
  sub_1D46A5708(v58, v59);
  sub_1D4922040();
  sub_1D4696EA4(&qword_1EFEAA430, (uint64_t (*)(uint64_t))MEMORY[0x1E0D10690], MEMORY[0x1E0D10688]);
  v23 = v60;
  sub_1D49221C0();
  v24 = v23;
  if (v23)
  {
    sub_1D46AA1F0(v62, v61);
    swift_bridgeObjectRelease();
LABEL_5:
    v29 = v63;
    sub_1D470C76C(v63);
    v30 = v24;
    v31 = v24;
    v32 = sub_1D4922358();
    v33 = sub_1D492291C();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc();
      v35 = (_QWORD *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      *(_QWORD *)&v65[0] = v36;
      *(_DWORD *)v34 = 136315394;
      v64 = sub_1D47F0250(0xD000000000000025, 0x80000001D493FF30, (uint64_t *)v65);
      sub_1D4922A78();
      *(_WORD *)(v34 + 12) = 2112;
      v37 = v24;
      v38 = _swift_stdlib_bridgeErrorToNSError();
      v64 = v38;
      sub_1D4922A78();
      *v35 = v38;

      _os_log_impl(&dword_1D467C000, v32, v33, "CipherMLPIRClient.%s failed: %@", (uint8_t *)v34, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFEAB9C0);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v35, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v36, -1, -1);
      MEMORY[0x1D82635B8](v34, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v63, v57);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v29, v57);
    }
    swift_willThrow();
    return v32;
  }
  v25 = v7;
  v26 = *(void **)(v54[1] + 24);
  v27 = sub_1D49221CC();
  v28 = v62;
  v40 = v27;
  v42 = v41;
  v59 = v25;
  v60 = v9;
  v43 = (void *)sub_1D4920F60();
  sub_1D4696F10(v40, v42);
  v44 = v61;
  v45 = (void *)sub_1D4920F60();
  v46 = (void *)sub_1D49225F8();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v65[0] = 0;
  v47 = objc_msgSend(v26, sel_decryptPIRResponse_keyword_shardId_error_, v43, v45, v46, v65);

  if (*(_QWORD *)&v65[0])
  {
    v24 = (char *)*(id *)&v65[0];

    swift_willThrow();
    sub_1D46AA1F0(v28, v44);
    (*(void (**)(char *, unint64_t))(v55 + 8))(v60, v59);
    goto LABEL_5;
  }
  v48 = v60;
  if (v47)
  {
    v32 = sub_1D4920F6C();
    sub_1D46AA1F0(v62, v44);

  }
  else
  {
    v49 = v54[0];
    sub_1D470C76C(v54[0]);
    v50 = sub_1D4922358();
    v51 = sub_1D492291C();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc();
      v53 = swift_slowAlloc();
      *(_QWORD *)&v65[0] = v53;
      *(_DWORD *)v52 = 136315138;
      v64 = sub_1D47F0250(0xD000000000000025, 0x80000001D493FF30, (uint64_t *)v65);
      sub_1D4922A78();
      _os_log_impl(&dword_1D467C000, v50, v51, "CipherMLPIRClient.%s empty result", v52, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v53, -1, -1);
      MEMORY[0x1D82635B8](v52, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v49, v57);
    sub_1D46AA1F0(v62, v61);
    v32 = 0;
    v48 = v60;
  }
  (*(void (**)(char *, unint64_t))(v55 + 8))(v48, v59);
  return v32;
}

uint64_t sub_1D46AA14C()
{
  uint64_t v0;

  sub_1D4696F10(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CipherMLPIRClient()
{
  return objc_opt_self();
}

BOOL sub_1D46AA1A0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16) != 0;
}

uint64_t sub_1D46AA1B0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_1D46A9298(a1, a2, a3, a4);
  return 1;
}

NSObject *sub_1D46AA1C8()
{
  return sub_1D46A94B0();
}

NSObject *sub_1D46AA1DC(uint64_t a1, unint64_t a2)
{
  return sub_1D46A9A3C(a1, a2);
}

uint64_t sub_1D46AA1F0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1D4696F10(a1, a2);
  return a1;
}

unint64_t sub_1D46AA204()
{
  unint64_t result;

  result = qword_1EFEAA440;
  if (!qword_1EFEAA440)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4927694, &type metadata for CipherMLPIRClient.Error);
    atomic_store(result, (unint64_t *)&qword_1EFEAA440);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CipherMLPIRClient.Error(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CipherMLPIRClient.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D46AA324 + 4 * byte_1D49275D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D46AA358 + 4 * byte_1D49275D0[v4]))();
}

uint64_t sub_1D46AA358(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46AA360(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D46AA368);
  return result;
}

uint64_t sub_1D46AA374(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D46AA37CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D46AA380(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46AA388(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CipherMLPIRClient.Error()
{
  return &type metadata for CipherMLPIRClient.Error;
}

unint64_t sub_1D46AA3A8()
{
  unint64_t result;

  result = qword_1EFEAA448;
  if (!qword_1EFEAA448)
  {
    result = MEMORY[0x1D82634E0](&unk_1D492766C, &type metadata for CipherMLPIRClient.Error);
    atomic_store(result, (unint64_t *)&qword_1EFEAA448);
  }
  return result;
}

uint64_t dispatch thunk of S2Region.capBound.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of S2Region.rectBound.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of S2Region.contains(cell:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of S2Region.mayIntersect(cell:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t initializeWithCopy for ImageHandler(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for ImageHandler(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ImageHandler(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageHandler(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageHandler(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageHandler()
{
  return &type metadata for ImageHandler;
}

void sub_1D46AA6E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  unsigned int v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  id v47[5];
  uint64_t v48;
  uint64_t v49;
  _UNKNOWN **v50;
  _BYTE v51[40];
  uint64_t v52;
  uint64_t v53;

  v3 = v2;
  v4 = v1;
  v53 = *MEMORY[0x1E0C80C00];
  v44 = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    v14 = MEMORY[0x1E0DEE9D8];
    v10 = MEMORY[0x1E0DEE9D8];
    if (!(MEMORY[0x1E0DEE9D8] >> 62))
      goto LABEL_27;
LABEL_31:
    swift_bridgeObjectRetain();
    v20 = sub_1D4922C4C();
    swift_bridgeObjectRelease();
    if (v20)
      goto LABEL_28;
    goto LABEL_32;
  }
  v6 = a1 + 32;
  swift_bridgeObjectRetain();
  v7 = v6;
  v8 = v5;
  do
  {
    sub_1D46AAF28(v7, (uint64_t)v47);
    sub_1D46AAF28((uint64_t)v47, (uint64_t)v51);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D960);
    sub_1D46AAE80();
    if ((swift_dynamicCast() & 1) == 0)
      v52 = 0;
    v9 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    if (v52)
    {
      MEMORY[0x1D8261B78](v9);
      if (*(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1D4922844();
      sub_1D492285C();
      sub_1D4922838();
    }
    v7 += 40;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease();
  v10 = v44;
  v45 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v11 = v6;
  v12 = v5;
  do
  {
    sub_1D46AAF28(v11, (uint64_t)v47);
    sub_1D46AAF28((uint64_t)v47, (uint64_t)v51);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D960);
    type metadata accessor for EspressoRequest(0);
    if ((swift_dynamicCast() & 1) == 0)
      v52 = 0;
    v13 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    if (v52)
    {
      MEMORY[0x1D8261B78](v13);
      if (*(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1D4922844();
      sub_1D492285C();
      sub_1D4922838();
    }
    v11 += 40;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  v14 = v45;
  v46 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  do
  {
    sub_1D46AAF28(v6, (uint64_t)v47);
    sub_1D46AAF28((uint64_t)v47, (uint64_t)v51);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D960);
    type metadata accessor for E5Request();
    if ((swift_dynamicCast() & 1) == 0)
      v52 = 0;
    v15 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    if (v52)
    {
      MEMORY[0x1D8261B78](v15);
      if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1D4922844();
      sub_1D492285C();
      sub_1D4922838();
    }
    v6 += 40;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  v16 = v46;
  v4 = v1;
  v3 = v2;
  if (v10 >> 62)
    goto LABEL_31;
LABEL_27:
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_28:
    v17 = v4[3];
    v18 = v4[4];
    __swift_project_boxed_opaque_existential_1(v4, v17);
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_50:
      swift_bridgeObjectRelease();
      return;
    }
    v21 = (void *)v19;
    v22 = v4[3];
    v23 = v4[4];
    v24 = v4;
    __swift_project_boxed_opaque_existential_1(v4, v22);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
    sub_1D47C3854(MEMORY[0x1E0DEE9D8]);
    v26 = objc_allocWithZone(MEMORY[0x1E0CEDF70]);
    type metadata accessor for VNImageOption(0);
    sub_1D46AAEE0();
    v27 = (void *)sub_1D4922538();
    swift_bridgeObjectRelease();
    v28 = objc_msgSend(v26, sel_initWithCVPixelBuffer_orientation_options_, v21, v25, v27);

    sub_1D46AAE80();
    v29 = (void *)sub_1D4922814();
    swift_bridgeObjectRelease();
    v47[0] = 0;
    v30 = objc_msgSend(v28, sel_performRequests_error_, v29, v47);

    if (!v30)
    {
      v32 = v47[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D4920E64();

      swift_willThrow();
      return;
    }
    v31 = v47[0];

    v4 = v24;
LABEL_42:
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      v35 = sub_1D4922C4C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v35 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v35)
    {
      sub_1D46AAF28((uint64_t)v4, (uint64_t)v47);
      v36 = type metadata accessor for ProcessInputImageEspresso();
      swift_allocObject();
      sub_1D470D774();
      v49 = v36;
      v50 = &off_1E9803120;
      v48 = v37;
      v38 = sub_1D483F6B0(v14);
      swift_bridgeObjectRelease();
      sub_1D4840DF8(v38);
      swift_bridgeObjectRelease();
      sub_1D46AAF6C((uint64_t)v47);
      if (!(v16 >> 62))
        goto LABEL_46;
    }
    else
    {
      swift_bridgeObjectRelease();
      if (!(v16 >> 62))
      {
LABEL_46:
        if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_50;
LABEL_47:
        sub_1D46AAF28((uint64_t)v4, (uint64_t)v47);
        v39 = type metadata accessor for ProcessInputImageEspresso();
        swift_allocObject();
        sub_1D470D774();
        v49 = v39;
        v50 = &off_1E9803120;
        v48 = v40;
        v41 = sub_1D483F6C4(v16);
        swift_bridgeObjectRelease();
        sub_1D471C2CC(v41);
        swift_bridgeObjectRelease();
        sub_1D46AAFA0((uint64_t)v47);
        return;
      }
    }
    swift_bridgeObjectRetain();
    v42 = sub_1D4922C4C();
    swift_bridgeObjectRelease();
    if (!v42)
      goto LABEL_50;
    goto LABEL_47;
  }
LABEL_32:
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    v33 = sub_1D4922C4C();
    swift_bridgeObjectRelease();
    if (v33)
      goto LABEL_34;
  }
  else if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_34:
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v34 = sub_1D4922C4C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v34 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v34)
    goto LABEL_42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D46AAFD4();
  swift_allocError();
  *(_OWORD *)v43 = xmmword_1D49276F0;
  *(_BYTE *)(v43 + 16) = 3;
  swift_willThrow();
}

void sub_1D46AAE6C(uint64_t a1)
{
  sub_1D46AA6E0(a1);
}

unint64_t sub_1D46AAE80()
{
  unint64_t result;

  result = qword_1ED98D2A0;
  if (!qword_1ED98D2A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED98D2A0);
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_1D46AAEE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED98AE80;
  if (!qword_1ED98AE80)
  {
    type metadata accessor for VNImageOption(255);
    result = MEMORY[0x1D82634E0](&unk_1D49271C4, v1);
    atomic_store(result, (unint64_t *)&qword_1ED98AE80);
  }
  return result;
}

uint64_t sub_1D46AAF28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1D46AAF6C(uint64_t a1)
{
  destroy for EspressoRequestHandler(a1);
  return a1;
}

uint64_t sub_1D46AAFA0(uint64_t a1)
{
  destroy for E5ImageRequestHandler(a1);
  return a1;
}

unint64_t sub_1D46AAFD4()
{
  unint64_t result;

  result = qword_1ED98CAE0;
  if (!qword_1ED98CAE0)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4932750, &type metadata for MLError);
    atomic_store(result, (unint64_t *)&qword_1ED98CAE0);
  }
  return result;
}

double NormalizedQuad.topLeft.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double NormalizedQuad.bottomLeft.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double NormalizedQuad.bottomRight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double NormalizedQuad.topRight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

void __swiftcall NormalizedQuad.init(topLeft:bottomLeft:bottomRight:topRight:)(VisualIntelligence::NormalizedQuad *__return_ptr retstr, CGPoint topLeft, CGPoint bottomLeft, CGPoint bottomRight, CGPoint topRight)
{
  retstr->topLeft.x = topLeft.x;
  retstr->topLeft.y = topLeft.y;
  retstr->bottomLeft.x = bottomLeft.x;
  retstr->bottomLeft.y = bottomLeft.y;
  retstr->bottomRight.x = bottomRight.x;
  retstr->bottomRight.y = bottomRight.y;
  retstr->topRight.x = topRight.x;
  retstr->topRight.y = topRight.y;
}

uint64_t sub_1D46AB050()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D46AB080 + 4 * byte_1D4927730[*v0]))(0x7466654C706F74, 0xE700000000000000);
}

uint64_t sub_1D46AB080()
{
  return 0x654C6D6F74746F62;
}

uint64_t sub_1D46AB09C()
{
  return 0x69526D6F74746F62;
}

uint64_t sub_1D46AB0BC()
{
  return 0x7468676952706F74;
}

uint64_t sub_1D46AB0D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D46AB940(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D46AB0F8()
{
  return 0;
}

void sub_1D46AB104(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1D46AB110()
{
  sub_1D46AB608();
  return sub_1D4922F64();
}

uint64_t sub_1D46AB138()
{
  sub_1D46AB608();
  return sub_1D4922F70();
}

uint64_t NormalizedQuad.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA450);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v10 = v1[2];
  v11 = v1[3];
  v12 = v1[4];
  v13 = v1[5];
  v14 = v1[6];
  v15 = v1[7];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D46AB608();
  sub_1D4922F58();
  v19 = v8;
  v20 = v9;
  v18 = 0;
  type metadata accessor for CGPoint(0);
  sub_1D46AB64C(&qword_1ED98D288, MEMORY[0x1E0C9BA20]);
  sub_1D4922DCC();
  if (!v2)
  {
    v19 = v10;
    v20 = v11;
    v18 = 1;
    sub_1D4922DCC();
    v19 = v12;
    v20 = v13;
    v18 = 2;
    sub_1D4922DCC();
    v19 = v14;
    v20 = v15;
    v18 = 3;
    sub_1D4922DCC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t NormalizedQuad.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA460);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D46AB608();
  sub_1D4922F4C();
  if (!v2)
  {
    type metadata accessor for CGPoint(0);
    v15 = 0;
    sub_1D46AB64C(&qword_1EFEAA468, MEMORY[0x1E0C9BA30]);
    sub_1D4922D30();
    v9 = v14;
    v15 = 1;
    sub_1D4922D30();
    v10 = v14;
    v15 = 2;
    sub_1D4922D30();
    v12 = v14;
    v15 = 3;
    sub_1D4922D30();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = v14;
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v12;
    a2[3] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D46AB568@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return NormalizedQuad.init(from:)(a1, a2);
}

uint64_t sub_1D46AB57C(_QWORD *a1)
{
  return NormalizedQuad.encode(to:)(a1);
}

BOOL _s18VisualIntelligence14NormalizedQuadV2eeoiySbAC_ACtFZ_0(float64x2_t *a1, float64x2_t *a2)
{
  _BOOL8 result;
  double v4;
  _BOOL4 v5;

  result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0&& a1[2].f64[0] == a2[2].f64[0]&& a1[2].f64[1] == a2[2].f64[1])
  {
    v4 = a1[3].f64[1];
    v5 = a1[3].f64[0] == a2[3].f64[0];
    return v4 == a2[3].f64[1] && v5;
  }
  return result;
}

unint64_t sub_1D46AB608()
{
  unint64_t result;

  result = qword_1EFEAA458;
  if (!qword_1EFEAA458)
  {
    result = MEMORY[0x1D82634E0](&unk_1D49278A8, &type metadata for NormalizedQuad.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFEAA458);
  }
  return result;
}

uint64_t sub_1D46AB64C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for CGPoint(255);
    result = MEMORY[0x1D82634E0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for NormalizedQuad(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for NormalizedQuad(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 64) = v3;
  return result;
}

ValueMetadata *type metadata accessor for NormalizedQuad()
{
  return &type metadata for NormalizedQuad;
}

uint64_t getEnumTagSinglePayload for NormalizedQuad.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NormalizedQuad.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D46AB7E8 + 4 * byte_1D4927739[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D46AB81C + 4 * byte_1D4927734[v4]))();
}

uint64_t sub_1D46AB81C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46AB824(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D46AB82CLL);
  return result;
}

uint64_t sub_1D46AB838(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D46AB840);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D46AB844(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46AB84C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NormalizedQuad.CodingKeys()
{
  return &type metadata for NormalizedQuad.CodingKeys;
}

unint64_t sub_1D46AB86C()
{
  unint64_t result;

  result = qword_1EFEAA470;
  if (!qword_1EFEAA470)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4927880, &type metadata for NormalizedQuad.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFEAA470);
  }
  return result;
}

unint64_t sub_1D46AB8B4()
{
  unint64_t result;

  result = qword_1EFEAA478;
  if (!qword_1EFEAA478)
  {
    result = MEMORY[0x1D82634E0](&unk_1D49277F0, &type metadata for NormalizedQuad.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFEAA478);
  }
  return result;
}

unint64_t sub_1D46AB8FC()
{
  unint64_t result;

  result = qword_1EFEAA480;
  if (!qword_1EFEAA480)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4927818, &type metadata for NormalizedQuad.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFEAA480);
  }
  return result;
}

uint64_t sub_1D46AB940(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7466654C706F74 && a2 == 0xE700000000000000;
  if (v2 || (sub_1D4922E38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x654C6D6F74746F62 && a2 == 0xEA00000000007466 || (sub_1D4922E38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69526D6F74746F62 && a2 == 0xEB00000000746867 || (sub_1D4922E38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7468676952706F74 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D4922E38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1D46ABB1C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;

  v8 = sub_1D46B2F84(a1, a2, a3, a4, a5 & 1, a6, a7);
  swift_release();
  sub_1D46B34D0(a3);
  swift_release();
  return v8;
}

uint64_t sub_1D46ABB80(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  *(_QWORD *)(v4 + 104) = sub_1D47C3868(MEMORY[0x1E0DEE9D8]);
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 128) = 0u;
  *(_OWORD *)(v4 + 144) = 0u;
  *(_QWORD *)(v4 + 40) = a1;
  sub_1D46B2A10(a2, v4 + 48);
  type metadata accessor for TextDetectionRequestFactory();
  *(_QWORD *)(v4 + 16) = swift_allocObject();
  type metadata accessor for BarcodeDetectionRequestFactory();
  *(_QWORD *)(v4 + 24) = swift_allocObject();
  *(_QWORD *)(v4 + 88) = a3;
  type metadata accessor for ImageFingerprintRequestFactory();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v4 + 32) = v9;
  *(_QWORD *)(v4 + 96) = a4;
  swift_retain();
  return v4;
}

uint64_t sub_1D46ABC44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t result;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64[5];
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  _BYTE v81[48];
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE v88[24];
  __int128 v89;
  __int128 v90;
  unint64_t v91;

  v8 = v6;
  v14 = *(_OWORD *)(a1 + 144);
  v15 = *(_OWORD *)(a1 + 112);
  v83 = *(_OWORD *)(a1 + 128);
  v84 = v14;
  v16 = *(_OWORD *)(a1 + 144);
  v85 = *(_OWORD *)(a1 + 160);
  v17 = *(_OWORD *)(a1 + 80);
  v18 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)v81 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)&v81[16] = v17;
  v19 = *(_OWORD *)(a1 + 80);
  v20 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)&v81[32] = *(_OWORD *)(a1 + 96);
  v82 = v20;
  v21 = *(_OWORD *)(a1 + 16);
  v77 = *(_OWORD *)a1;
  v78 = v21;
  v22 = *(_OWORD *)(a1 + 48);
  v24 = *(_OWORD *)a1;
  v23 = *(_OWORD *)(a1 + 16);
  v79 = *(_OWORD *)(a1 + 32);
  v80 = v22;
  v73 = v83;
  v74 = v16;
  v75 = *(_OWORD *)(a1 + 160);
  v69 = *(_OWORD *)v81;
  v70 = v19;
  v71 = *(_OWORD *)&v81[32];
  v72 = v15;
  v65 = v24;
  v66 = v23;
  v25 = *v6;
  v86 = *(_QWORD *)(a1 + 176);
  v76 = *(_QWORD *)(a1 + 176);
  v67 = v79;
  v68 = v18;
  v26 = *(_QWORD *)(sub_1D4829664() + 16);
  swift_bridgeObjectRelease();
  if (v26)
  {
    v73 = v83;
    v74 = v84;
    v75 = v85;
    v76 = v86;
    v69 = *(_OWORD *)v81;
    v70 = *(_OWORD *)&v81[16];
    v71 = *(_OWORD *)&v81[32];
    v72 = v82;
    v65 = v77;
    v66 = v78;
    v67 = v79;
    v68 = v80;
    v27 = sub_1D4829664();
    swift_retain();
    sub_1D46B2E18((uint64_t)&v77);
    swift_retain();
    v28 = (_QWORD *)sub_1D46ABB1C(v27, v8, (uint64_t)&v77, a3, a4 & 1, a5, v25);
    result = swift_bridgeObjectRelease();
    if (!v7)
    {
      if (qword_1ED98CC88 != -1)
        swift_once();
      v30 = xmmword_1ED98CC60;
      v31 = xmmword_1ED98CC70;
      v65 = xmmword_1ED98CC60;
      v66 = xmmword_1ED98CC70;
      sub_1D46B2598(&v65, a2, a5, v64);
      sub_1D46AAF28((uint64_t)v64, (uint64_t)&v65);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v28 = sub_1D48A90C4(0, v28[2] + 1, 1, v28);
      v38 = v28[2];
      v37 = v28[3];
      if (v38 >= v37 >> 1)
        v28 = sub_1D48A90C4((_QWORD *)(v37 > 1), v38 + 1, 1, v28);
      v28[2] = v38 + 1;
      sub_1D46B2A10(&v65, (uint64_t)&v28[5 * v38 + 4]);
      v73 = v83;
      v74 = v84;
      v75 = v85;
      v76 = v86;
      v69 = *(_OWORD *)v81;
      v70 = *(_OWORD *)&v81[16];
      v71 = *(_OWORD *)&v81[32];
      v72 = v82;
      v65 = v77;
      v66 = v78;
      v67 = v79;
      v68 = v80;
      v60 = v30;
      v61 = v31;
      sub_1D46B05AC((uint64_t)&v65, &v60, a2, a5, (uint64_t)&v62);
      if (v63)
      {
        sub_1D46B2A10(&v62, (uint64_t)&v65);
        sub_1D46AAF28((uint64_t)&v65, (uint64_t)&v62);
        v40 = v28[2];
        v39 = v28[3];
        if (v40 >= v39 >> 1)
          v28 = sub_1D48A90C4((_QWORD *)(v39 > 1), v40 + 1, 1, v28);
        v28[2] = v40 + 1;
        sub_1D46B2A10(&v62, (uint64_t)&v28[5 * v40 + 4]);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
      }
      else
      {
        sub_1D46992EC((uint64_t)&v62, &qword_1EFEAA4B8);
      }
      v73 = v83;
      v74 = v84;
      v75 = v85;
      v76 = v86;
      v69 = *(_OWORD *)v81;
      v70 = *(_OWORD *)&v81[16];
      v71 = *(_OWORD *)&v81[32];
      v72 = v82;
      v65 = v77;
      v66 = v78;
      v67 = v79;
      v68 = v80;
      v60 = xmmword_1ED98CC60;
      v61 = xmmword_1ED98CC70;
      sub_1D46B1398((uint64_t *)&v65, a2, a5, (uint64_t)&v62);
      if (v63)
      {
        sub_1D46B2A10(&v62, (uint64_t)&v65);
        sub_1D46AAF28((uint64_t)&v65, (uint64_t)&v62);
        v42 = v28[2];
        v41 = v28[3];
        if (v42 >= v41 >> 1)
          v28 = sub_1D48A90C4((_QWORD *)(v41 > 1), v42 + 1, 1, v28);
        v28[2] = v42 + 1;
        sub_1D46B2A10(&v62, (uint64_t)&v28[5 * v42 + 4]);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
      }
      else
      {
        sub_1D46992EC((uint64_t)&v62, &qword_1EFEAA4B8);
      }
      *((_QWORD *)&v66 + 1) = &type metadata for BatchModelRequest;
      *(_QWORD *)&v67 = &off_1E9801CA8;
      *(_QWORD *)&v65 = v28;
      swift_bridgeObjectRetain();
      sub_1D46AF824(&v65);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
      v43 = (void *)v8[14];
      if (v43)
      {
        v44 = v43;
        swift_bridgeObjectRelease();
        swift_willThrow();
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
      }
      else
      {
        swift_retain();
        v45 = swift_bridgeObjectRetain();
        v91 = sub_1D46B30C4(v45, (uint64_t)v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        v46 = *((_QWORD *)&v77 + 1);
        if (*((_QWORD *)&v77 + 1) == 1)
        {
          v46 = 0;
          v56 = 0uLL;
          v58 = 0;
          v59 = 0;
          v57 = 0;
          v47 = v8[15];
          v48 = v8[16];
        }
        else
        {
          v58 = *((_QWORD *)&v80 + 1);
          v59 = *(_QWORD *)v81;
          v49 = v80;
          v50 = v78;
          v47 = v8[15];
          v48 = v8[16];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v56 = v50;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v57 = v49;
          swift_bridgeObjectRetain();
        }
        v89 = *(_OWORD *)&v81[8];
        v90 = *(_OWORD *)&v81[24];
        sub_1D46B3464((uint64_t)&v81[40], (uint64_t)v88, (uint64_t *)&unk_1EFEAA4C0);
        v52 = v8[17];
        v51 = v8[18];
        v53 = v8[19];
        v54 = v84;
        v87 = v86;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D46B2F58(v52);
        sub_1D46B34A8((uint64_t)&v87);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
        *(_QWORD *)a6 = v91;
        *(_QWORD *)(a6 + 8) = v46;
        *(_OWORD *)(a6 + 16) = v56;
        *(_QWORD *)(a6 + 32) = v47;
        *(_QWORD *)(a6 + 40) = v48;
        *(_QWORD *)(a6 + 48) = v57;
        *(_QWORD *)(a6 + 56) = v58;
        *(_QWORD *)(a6 + 64) = v59;
        v55 = v90;
        *(_OWORD *)(a6 + 72) = v89;
        *(_OWORD *)(a6 + 88) = v55;
        result = sub_1D46B3464((uint64_t)v88, a6 + 104, (uint64_t *)&unk_1EFEAA4C0);
        *(_QWORD *)(a6 + 128) = 0;
        *(_QWORD *)(a6 + 136) = 0xE000000000000000;
        *(_QWORD *)(a6 + 144) = v54;
        *(_QWORD *)(a6 + 152) = v52;
        *(_QWORD *)(a6 + 160) = v51;
        *(_QWORD *)(a6 + 168) = v53;
        *(_QWORD *)(a6 + 176) = v87;
      }
    }
  }
  else
  {
    v32 = v84;
    *(_OWORD *)(a6 + 128) = v83;
    *(_OWORD *)(a6 + 144) = v32;
    *(_OWORD *)(a6 + 160) = v85;
    *(_QWORD *)(a6 + 176) = v86;
    v33 = *(_OWORD *)&v81[16];
    *(_OWORD *)(a6 + 64) = *(_OWORD *)v81;
    *(_OWORD *)(a6 + 80) = v33;
    v34 = v82;
    *(_OWORD *)(a6 + 96) = *(_OWORD *)&v81[32];
    *(_OWORD *)(a6 + 112) = v34;
    v35 = v78;
    *(_OWORD *)a6 = v77;
    *(_OWORD *)(a6 + 16) = v35;
    v36 = v80;
    *(_OWORD *)(a6 + 32) = v79;
    *(_OWORD *)(a6 + 48) = v36;
    return sub_1D46B2E18((uint64_t)&v77);
  }
  return result;
}

uint64_t sub_1D46AC2CC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49[2];
  uint64_t v50;

  v36 = a8;
  v47 = a4;
  v48 = a7;
  v44 = a6;
  v45 = a9;
  v39 = a3;
  v42 = a5 & 1;
  v11 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v40 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v40 + 64);
  v13 = MEMORY[0x1E0C80A78](v11);
  v41 = (uint64_t)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v35 - v14;
  v46 = a1;
  v16 = sub_1D48299EC();
  v17 = *(_QWORD *)(v16 + 16);
  v43 = v15;
  if (v17)
  {
    v18 = (char *)(v16 + 32);
    v19 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      v21 = *v18;
      v18 += 160;
      v20 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_1D48A8628(0, *((_QWORD *)v19 + 2) + 1, 1, v19);
      v23 = *((_QWORD *)v19 + 2);
      v22 = *((_QWORD *)v19 + 3);
      if (v23 >= v22 >> 1)
        v19 = sub_1D48A8628((char *)(v22 > 1), v23 + 1, 1, v19);
      *((_QWORD *)v19 + 2) = v23 + 1;
      v19[v23 + 32] = v20;
      --v17;
    }
    while (v17);
  }
  else
  {
    v19 = (char *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v24 = *(_OWORD *)(v39 + 88);
  v49[0] = *(_OWORD *)(v39 + 72);
  v49[1] = v24;
  v25 = a2[5];
  v38 = a2 + 6;
  v39 = v25;
  v26 = a2[12];
  v37 = a2[11];
  v27 = swift_allocObject();
  swift_weakInit();
  v28 = v46;
  v29 = (uint64_t)v43;
  sub_1D469C304(v46, (uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  v30 = v41;
  sub_1D469C304(v29, v41, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  v31 = (*(unsigned __int8 *)(v40 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = v27;
  sub_1D46A8594(v30, v32 + v31);
  swift_retain();
  v33 = v50;
  sub_1D46AC644(v28, (uint64_t)v19, (uint64_t)v38, v49, v26, v39, v37, v47, v45, v42, 3, 3, v44, (uint64_t)sub_1D46B36D4, v32);
  sub_1D4697DE0(v29, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  swift_release();
  swift_bridgeObjectRelease();
  result = swift_release();
  if (v33)
    *v36 = v33;
  return result;
}

uint64_t sub_1D46AC5A4(uint64_t *a1, uint64_t a2, double *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  _QWORD v12[6];
  char v13;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = a1[4];
  v9 = a1[5];
  v10 = *((_BYTE *)a1 + 48);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v12[0] = v4;
    v12[1] = v5;
    v12[2] = v6;
    v12[3] = v7;
    v12[4] = v8;
    v12[5] = v9;
    v13 = v10;
    sub_1D46AF954((uint64_t)v12, a3);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D46AC644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t result;
  uint64_t *v59;
  _QWORD v60[2];
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  int v84;
  char *v85;
  unsigned __int8 *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  _OWORD *v105;
  uint64_t v106;
  uint64_t v107;
  char v108[8];
  uint64_t v109;
  _OWORD v110[3];
  _OWORD v111[4];
  uint64_t v112;

  v94 = a7;
  v80 = a8;
  v74 = a6;
  v92 = a3;
  v93 = a5;
  v67 = a2;
  v60[0] = a9;
  v18 = sub_1D4922370();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)v60 - v24;
  v26 = MEMORY[0x1E0C80A78](v23);
  v81 = (char *)v60 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v99 = (char *)v60 - v29;
  MEMORY[0x1E0C80A78](v28);
  v101 = (char *)v60 - v30;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98AEC0);
  MEMORY[0x1E0C80A78](v31);
  v85 = (char *)v60 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v64 = *(_QWORD *)(v100 - 8);
  v33 = MEMORY[0x1E0C80A78](v100);
  v83 = (char *)v60 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x1E0C80A78](v33);
  v73 = (char *)v60 - v36;
  v37 = MEMORY[0x1E0C80A78](v35);
  v39 = (char *)v60 - v38;
  v40 = MEMORY[0x1E0C80A78](v37);
  v72 = (char *)v60 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v82 = (char *)v60 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v71 = (char *)v60 - v45;
  v46 = MEMORY[0x1E0C80A78](v44);
  v79 = (char *)v60 - v47;
  v48 = MEMORY[0x1E0C80A78](v46);
  v70 = (char *)v60 - v49;
  MEMORY[0x1E0C80A78](v48);
  v105 = (_OWORD *)((char *)v60 - v50);
  v51 = *a4;
  v90 = a4[1];
  v91 = v51;
  if (qword_1ED98D9E0 != -1)
LABEL_14:
    swift_once();
  v96 = qword_1ED9A49E0;
  swift_bridgeObjectRetain();
  v52 = sub_1D46FEA2C(a1);
  v53 = v52;
  v61 = *(_QWORD *)(v52 + 16);
  if (v61)
  {
    v54 = 0;
    v98 = a15;
    v89 = a12;
    v88 = a11;
    v97 = a14;
    v87 = a13;
    v84 = a10;
    v95 = *(_QWORD *)(v67 + 16);
    v62 = v52 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
    v86 = (unsigned __int8 *)(v67 + 32);
    v75 = v74 + OBJC_IVAR____TtC18VisualIntelligence19DomainModelRegistry_domainModelConfig + 16;
    v76 = v39;
    v65 = v74 + OBJC_IVAR____TtC18VisualIntelligence19DomainModelRegistry_domainModelConfig + 32;
    v66 = &v107;
    v68 = v74 + OBJC_IVAR____TtC18VisualIntelligence19DomainModelRegistry_domainModelConfig + 24;
    v69 = &v109;
    v77 = v25;
    v78 = a1;
    v102 = v18;
    v103 = v19;
    v104 = v22;
    v60[1] = v52;
    while (1)
    {
      if (v54 >= *(_QWORD *)(v53 + 16))
      {
        __break(1u);
        goto LABEL_14;
      }
      v55 = *(_QWORD *)(v64 + 72);
      v63 = v54;
      sub_1D469C304(v62 + v55 * v54, (uint64_t)v105, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v95)
        break;
      a1 = v63 + 1;
      sub_1D4697DE0((uint64_t)v105, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      v54 = a1;
      if (a1 == v61)
        goto LABEL_12;
    }
    swift_bridgeObjectRetain();
    v56 = *v86;
    v57 = v105[1];
    v111[0] = *v105;
    v111[1] = v57;
    v110[0] = v91;
    v110[1] = v90;
    v106 = v56;
    v108[0] = v56;
    sub_1D46AF1F0((CGFloat *)v111, v92, v110, v108, v93, v94, v88, v89, (uint64_t)&v112, v87);
    if (!v15)
    {
      if ((v84 & 1) != 0)
        swift_bridgeObjectRetain();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    sub_1D4697DE0((uint64_t)v105, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_12:
    result = swift_bridgeObjectRelease();
    v59 = (uint64_t *)v60[0];
    *(_QWORD *)(v60[0] + 24) = &type metadata for BatchModelRequest;
    v59[4] = (uint64_t)&off_1E9801CA8;
    *v59 = v96;
  }
  return result;
}

uint64_t sub_1D46AF1F0@<X0>(CGFloat *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  char v23;
  __int128 v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  char v34;
  uint8_t *v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD v45[2];
  CGRect v46;
  _QWORD v47[5];
  char v48;

  v43 = a8;
  v42 = a7;
  v41 = a5;
  v40 = a2;
  v15 = sub_1D4922370();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a1;
  v20 = a1[1];
  v21 = a1[2];
  v22 = a1[3];
  v23 = *a4;
  v46.origin.x = v19;
  v46.origin.y = v20;
  v46.size.width = v21;
  v46.size.height = v22;
  v24 = a3[1];
  v45[0] = *a3;
  v45[1] = v24;
  v48 = v23;
  v25 = v44;
  result = sub_1D46AF44C((uint64_t)v47, &v46, v45, &v48, a6);
  if (!v25)
  {
    v27 = result;
    v39 = v16;
    v44 = v15;
    v28 = v47[0];
    v29 = v47[1];
    v30 = v47[2];
    v31 = v47[3];
    sub_1D470C76C((uint64_t)v18);
    v32 = sub_1D4922358();
    v33 = sub_1D4922910();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = v23;
      v35 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v35 = 134217984;
      v47[0] = v27;
      sub_1D4922A78();
      _os_log_impl(&dword_1D467C000, v32, v33, "SignalsExtractionProcessor: createModelInput maxResults set to %ld", v35, 0xCu);
      v36 = v35;
      v23 = v34;
      MEMORY[0x1D82635B8](v36, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v44);
    sub_1D46AAF28(v40, a9);
    *(_QWORD *)(a9 + 40) = v28;
    *(_QWORD *)(a9 + 48) = v29;
    *(_QWORD *)(a9 + 56) = v30;
    *(_QWORD *)(a9 + 64) = v31;
    *(CGFloat *)(a9 + 72) = v19;
    *(CGFloat *)(a9 + 80) = v20;
    *(CGFloat *)(a9 + 88) = v21;
    *(CGFloat *)(a9 + 96) = v22;
    *(_BYTE *)(a9 + 104) = v23;
    v37 = v41;
    *(_QWORD *)(a9 + 112) = v27;
    *(_QWORD *)(a9 + 120) = v37;
    v38 = v43;
    *(_QWORD *)(a9 + 128) = v42;
    *(_QWORD *)(a9 + 136) = v38;
    *(_QWORD *)(a9 + 144) = a10;
    swift_retain();
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_1D46AF44C(uint64_t a1, CGRect *a2, _OWORD *a3, _BYTE *a4, uint64_t a5)
{
  CGFloat y;
  CGFloat x;
  CGFloat height;
  CGFloat width;
  uint64_t v10;
  _QWORD *v11;
  const char *v12;
  __int128 v13;
  double v14;
  double v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  uint64_t v21;
  char v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;

  x = a2->origin.x;
  y = a2->origin.y;
  width = a2->size.width;
  height = a2->size.height;
  switch(*a4)
  {
    case 1:
      v10 = *(_QWORD *)(a5 + 16);
      MEMORY[0x1E0C80A78](a1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98F380);
      sub_1D4922958();
      if ((v22 & 1) != 0)
      {
        sub_1D46B2BB4();
        swift_allocError();
        *v11 = 0xD00000000000001DLL;
        v12 = ".nature .maxResults not found";
        goto LABEL_11;
      }
      v10 = v21;
      *(CGFloat *)a1 = x;
      *(CGFloat *)(a1 + 8) = y;
      goto LABEL_16;
    case 2:
    case 3:
    case 0x17:
    case 0x18:
      v13 = a3[1];
      *(_OWORD *)a1 = *a3;
      *(_OWORD *)(a1 + 16) = v13;
      return 1;
    case 7:
    case 8:
      v10 = *(_QWORD *)(a5 + 16);
      MEMORY[0x1E0C80A78](a1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98F380);
      sub_1D4922958();
      if ((v22 & 1) == 0)
        goto LABEL_8;
      sub_1D46B2BB4();
      swift_allocError();
      *v11 = 0xD00000000000001BLL;
      v12 = ".pets .maxResults not found";
      goto LABEL_11;
    case 9:
    case 0xA:
    case 0xB:
    case 0xC:
    case 0xD:
      v10 = *(_QWORD *)(a5 + 16);
      MEMORY[0x1E0C80A78](a1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98F380);
      sub_1D4922958();
      if ((v22 & 1) != 0)
      {
        sub_1D46B2BB4();
        swift_allocError();
        *v11 = 0xD000000000000024;
        v12 = ".nature .maxResultsAnimals not found";
LABEL_11:
        v11[1] = (unint64_t)(v12 - 32) | 0x8000000000000000;
        swift_willThrow();
      }
      else
      {
LABEL_8:
        v10 = v21;
        v23.origin.x = x;
        v23.origin.y = y;
        v23.size.width = width;
        v23.size.height = height;
        v16 = CGRectGetWidth(v23) * -0.3 * 0.5;
        v24.origin.x = x;
        v24.origin.y = y;
        v24.size.width = width;
        v24.size.height = height;
        v17 = CGRectGetHeight(v24) * -0.3 * 0.5;
        v25.origin.x = x;
        v25.origin.y = y;
        v25.size.width = width;
        v25.size.height = height;
        v26 = CGRectInset(v25, v16, v17);
        v30.origin.x = 0.0;
        v30.origin.y = 0.0;
        v30.size.width = 1.0;
        v30.size.height = 1.0;
        *(CGRect *)a1 = CGRectIntersection(v26, v30);
      }
      break;
    case 0x11:
      v14 = CGRectGetWidth(*a2);
      v15 = -0.3;
      goto LABEL_13;
    case 0x12:
    case 0x13:
    case 0x14:
      v14 = CGRectGetWidth(*a2);
      v15 = -0.1;
LABEL_13:
      v18 = v14 * v15 * 0.5;
      v27.origin.x = x;
      v27.origin.y = y;
      v27.size.width = width;
      v27.size.height = height;
      v19 = CGRectGetHeight(v27) * v15 * 0.5;
      v28.origin.x = x;
      v28.origin.y = y;
      v28.size.width = width;
      v28.size.height = height;
      v29 = CGRectInset(v28, v18, v19);
      v31.origin.x = 0.0;
      v31.origin.y = 0.0;
      v31.size.width = 1.0;
      v31.size.height = 1.0;
      *(CGRect *)a1 = CGRectIntersection(v29, v31);
      v10 = 1;
      break;
    default:
      *(CGFloat *)a1 = x;
      *(CGFloat *)(a1 + 8) = y;
      v10 = 1;
LABEL_16:
      *(CGFloat *)(a1 + 16) = width;
      *(CGFloat *)(a1 + 24) = height;
      break;
  }
  return v10;
}

uint64_t sub_1D46AF824(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14[3];
  uint64_t v15;
  uint64_t v16;

  v3 = v1;
  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  if (*(_QWORD *)(v6 + 16))
  {
    v7 = (_QWORD *)(v1 + 48);
    v8 = *(_QWORD *)(v1 + 72);
    v9 = *(_QWORD *)(v3 + 80);
    __swift_project_boxed_opaque_existential_1(v7, v8);
    sub_1D483D504(v8, v9, v14);
    if (v2)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      v12 = v15;
      v13 = v16;
      __swift_project_boxed_opaque_existential_1(v14, v15);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 8))(v6, v12, v13);
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1D46AAFD4();
    swift_allocError();
    *(_OWORD *)v11 = xmmword_1D4927920;
    *(_BYTE *)(v11 + 16) = 3;
    return swift_willThrow();
  }
}

void sub_1D46AF954(uint64_t a1, double *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  CGFloat v31;
  CGFloat v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  _BOOL4 v43;
  void *v44;
  uint8_t *v45;
  uint64_t v46;
  CGFloat MinX;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  CGFloat MinY;
  CGFloat Width;
  CGFloat Height;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  NSObject *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  _BOOL4 v65;
  uint8_t *v66;
  uint64_t v67;
  CGFloat v68;
  uint64_t v69;
  unint64_t v70;
  CGFloat v71;
  CGFloat v72;
  CGFloat v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  double *v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  uint8_t *v89;
  uint64_t v90;
  CGFloat v91;
  CGFloat v92;
  CGFloat v93;
  CGFloat v94;
  uint64_t v95;
  CGFloat v96;
  uint64_t v97;
  unint64_t v98;
  CGFloat v99;
  CGFloat v100;
  CGFloat v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  double *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  CGFloat v112;
  CGFloat v113;
  CGFloat v114;
  CGFloat v115;
  uint64_t v116;
  unint64_t v117;
  char v118;
  void (*v119)(uint64_t, uint64_t, uint64_t, uint64_t);
  CGFloat v120;
  CGFloat v121;
  CGFloat v122;
  CGFloat v123;
  uint8_t *v124;
  uint64_t v125;
  int v126;
  NSObject *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  double *v136;
  char *v137;
  uint64_t v138;
  uint8_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  double *v147;
  uint64_t v148[6];
  uint64_t v149;
  CGRect v150;
  CGRect v151;
  CGRect v152;
  CGRect v153;
  CGRect v154;
  CGRect v155;
  CGRect v156;
  CGRect v157;
  CGRect v158;
  CGRect v159;
  CGRect v160;
  CGRect v161;

  v147 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D7C0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v124 - v8;
  v10 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v124 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (double *)((char *)&v124 - v16);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v124 - v18;
  v20 = sub_1D4922370();
  v21 = MEMORY[0x1E0C80A78](v20);
  v22 = MEMORY[0x1E0C80A78](v21);
  v23 = MEMORY[0x1E0C80A78](v22);
  v28 = *(void **)a1;
  if (*(_BYTE *)(a1 + 48) == 1)
  {
    v29 = *(void **)(v2 + 112);
    *(_QWORD *)(v2 + 112) = v28;
    v30 = v28;

  }
  else
  {
    v142 = v27;
    v139 = (uint8_t *)v26;
    v129 = v19;
    v140 = v25;
    v143 = v23;
    v130 = v2;
    v132 = v11;
    v133 = v14;
    v32 = *(double *)(a1 + 8);
    v31 = *(double *)(a1 + 16);
    v33 = *(_QWORD *)(a1 + 24);
    v34 = *(_QWORD *)(a1 + 32);
    v35 = *(_QWORD *)(a1 + 40);
    v36 = *(double *)&v28;
    v37 = v32;
    v38 = v31;
    v144 = v33;
    v39 = *(double *)&v33;
    v40 = (char *)&v124 - v24;
    sub_1D470C76C((uint64_t)&v124 - v24);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v128 = (uint64_t)v40;
    v41 = sub_1D4922358();
    v42 = sub_1D4922910();
    v127 = v41;
    v126 = v42;
    v43 = os_log_type_enabled(v41, v42);
    v44 = v28;
    v146 = v28;
    v137 = v7;
    v136 = v17;
    v135 = v10;
    v134 = v9;
    v145 = *(_QWORD *)&v32;
    if (v43)
    {
      v45 = (uint8_t *)swift_slowAlloc();
      v125 = swift_slowAlloc();
      v148[0] = v125;
      *(_DWORD *)v45 = 136315138;
      v124 = v45 + 4;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
      v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_1D4927560;
      *(_QWORD *)&v150.origin.x = v28;
      v150.origin.y = v32;
      v150.size.width = v31;
      v150.size.height = v39;
      MinX = CGRectGetMinX(v150);
      v48 = v35;
      v49 = MEMORY[0x1E0DEF040];
      *(_QWORD *)(v46 + 56) = MEMORY[0x1E0DEF040];
      v50 = sub_1D46A492C();
      *(_QWORD *)(v46 + 64) = v50;
      *(CGFloat *)(v46 + 32) = MinX;
      v151.origin.x = v36;
      v151.origin.y = v32;
      v151.size.width = v31;
      v151.size.height = v39;
      MinY = CGRectGetMinY(v151);
      *(_QWORD *)(v46 + 96) = v49;
      *(_QWORD *)(v46 + 104) = v50;
      *(CGFloat *)(v46 + 72) = MinY;
      v152.origin.x = v36;
      v152.origin.y = v32;
      v152.size.width = v31;
      v152.size.height = v39;
      Width = CGRectGetWidth(v152);
      *(_QWORD *)(v46 + 136) = v49;
      *(_QWORD *)(v46 + 144) = v50;
      *(CGFloat *)(v46 + 112) = Width;
      v153.origin.x = v36;
      v153.origin.y = v32;
      v153.size.width = v31;
      v153.size.height = v39;
      Height = CGRectGetHeight(v153);
      *(_QWORD *)(v46 + 176) = v49;
      *(_QWORD *)(v46 + 184) = v50;
      v35 = v48;
      *(CGFloat *)(v46 + 152) = Height;
      v54 = sub_1D4922640();
      v149 = sub_1D47F0250(v54, v55, v148);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      v56 = v144;
      sub_1D46B2DE8(v44, *(uint64_t *)&v32, *(uint64_t *)&v31, v144, v34, v35, 0);
      sub_1D46B2DE8(v44, *(uint64_t *)&v32, *(uint64_t *)&v31, v56, v34, v35, 0);
      v57 = v127;
      _os_log_impl(&dword_1D467C000, v127, (os_log_type_t)v126, "Search extracted classifications (signals.classification.map { $0.description }) from %s", v45, 0xCu);
      v58 = v125;
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v58, -1, -1);
      MEMORY[0x1D82635B8](v45, -1, -1);

    }
    else
    {
      v59 = v28;
      v56 = v144;
      sub_1D46B2DE8(v59, *(uint64_t *)&v32, *(uint64_t *)&v31, v144, v34, v35, 0);
      sub_1D46B2DE8(v44, *(uint64_t *)&v32, *(uint64_t *)&v31, v56, v34, v35, 0);

    }
    v60 = v143;
    v142 = *(_QWORD *)(v142 + 8);
    ((void (*)(uint64_t, uint64_t))v142)(v128, v143);
    v61 = *(_QWORD *)&v31;
    v62 = (uint64_t)v139;
    sub_1D470C76C((uint64_t)v139);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v63 = sub_1D4922358();
    v64 = sub_1D4922910();
    v65 = os_log_type_enabled(v63, v64);
    v141 = v34;
    v138 = v35;
    v131 = v61;
    if (v65)
    {
      v66 = (uint8_t *)swift_slowAlloc();
      v128 = swift_slowAlloc();
      v148[0] = v128;
      *(_DWORD *)v66 = 136315138;
      v127 = (v66 + 4);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
      v67 = swift_allocObject();
      *(_OWORD *)(v67 + 16) = xmmword_1D4927560;
      v154.origin.x = v36;
      v154.origin.y = v37;
      v154.size.width = v38;
      v154.size.height = v39;
      v68 = CGRectGetMinX(v154);
      v69 = MEMORY[0x1E0DEF040];
      *(_QWORD *)(v67 + 56) = MEMORY[0x1E0DEF040];
      v70 = sub_1D46A492C();
      *(_QWORD *)(v67 + 64) = v70;
      *(CGFloat *)(v67 + 32) = v68;
      v155.origin.x = v36;
      v155.origin.y = v37;
      v155.size.width = v38;
      v155.size.height = v39;
      v71 = CGRectGetMinY(v155);
      *(_QWORD *)(v67 + 96) = v69;
      *(_QWORD *)(v67 + 104) = v70;
      *(CGFloat *)(v67 + 72) = v71;
      v156.origin.x = v36;
      v156.origin.y = v37;
      v156.size.width = v38;
      v156.size.height = v39;
      v72 = CGRectGetWidth(v156);
      *(_QWORD *)(v67 + 136) = v69;
      *(_QWORD *)(v67 + 144) = v70;
      *(CGFloat *)(v67 + 112) = v72;
      v157.origin.x = v36;
      v157.origin.y = v37;
      v157.size.width = v38;
      v157.size.height = v39;
      v73 = CGRectGetHeight(v157);
      *(_QWORD *)(v67 + 176) = v69;
      *(_QWORD *)(v67 + 184) = v70;
      v74 = v141;
      *(CGFloat *)(v67 + 152) = v73;
      v75 = sub_1D4922640();
      v149 = sub_1D47F0250(v75, v76, v148);
      v60 = v143;
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      v78 = v145;
      v77 = v146;
      sub_1D46B2DE8(v146, v145, v61, v56, v74, v35, 0);
      sub_1D46B2DE8(v77, v78, v61, v56, v74, v35, 0);
      _os_log_impl(&dword_1D467C000, v63, v64, "Search extracted embeddings (signals.embedding.map { $0.description }) from %s", v66, 0xCu);
      v79 = v128;
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v79, -1, -1);
      MEMORY[0x1D82635B8](v66, -1, -1);

      v80 = (uint64_t)v139;
    }
    else
    {
      v82 = v145;
      v81 = v146;
      sub_1D46B2DE8(v146, v145, v61, v56, v34, v35, 0);
      sub_1D46B2DE8(v81, v82, v61, v56, v34, v35, 0);

      v80 = v62;
    }
    ((void (*)(uint64_t, uint64_t))v142)(v80, v60);
    v83 = v135;
    v84 = v147;
    v85 = v140;
    v86 = (uint64_t)v129;
    sub_1D470C76C(v140);
    sub_1D469C304((uint64_t)v84, v86, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v87 = sub_1D4922358();
    v88 = sub_1D4922910();
    if (os_log_type_enabled(v87, v88))
    {
      v89 = (uint8_t *)swift_slowAlloc();
      v90 = swift_slowAlloc();
      *(_DWORD *)v89 = 136315138;
      v148[0] = v90;
      v139 = v89 + 4;
      v91 = *(double *)v86;
      v92 = *(double *)(v86 + 8);
      v93 = *(double *)(v86 + 16);
      v94 = *(double *)(v86 + 24);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
      v95 = swift_allocObject();
      *(_OWORD *)(v95 + 16) = xmmword_1D4927560;
      v158.origin.x = v91;
      v158.origin.y = v92;
      v158.size.width = v93;
      v158.size.height = v94;
      v96 = CGRectGetMinX(v158);
      v97 = MEMORY[0x1E0DEF040];
      *(_QWORD *)(v95 + 56) = MEMORY[0x1E0DEF040];
      v98 = sub_1D46A492C();
      *(_QWORD *)(v95 + 64) = v98;
      *(CGFloat *)(v95 + 32) = v96;
      v159.origin.x = v91;
      v159.origin.y = v92;
      v159.size.width = v93;
      v159.size.height = v94;
      v99 = CGRectGetMinY(v159);
      *(_QWORD *)(v95 + 96) = v97;
      *(_QWORD *)(v95 + 104) = v98;
      *(CGFloat *)(v95 + 72) = v99;
      v160.origin.x = v91;
      v160.origin.y = v92;
      v160.size.width = v93;
      v160.size.height = v94;
      v100 = CGRectGetWidth(v160);
      *(_QWORD *)(v95 + 136) = v97;
      *(_QWORD *)(v95 + 144) = v98;
      *(CGFloat *)(v95 + 112) = v100;
      v161.origin.x = v91;
      v161.origin.y = v92;
      v161.size.width = v93;
      v161.size.height = v94;
      v101 = CGRectGetHeight(v161);
      *(_QWORD *)(v95 + 176) = v97;
      *(_QWORD *)(v95 + 184) = v98;
      *(CGFloat *)(v95 + 152) = v101;
      v102 = sub_1D4922640();
      v149 = sub_1D47F0250(v102, v103, v148);
      v84 = v147;
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      sub_1D4697DE0(v86, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      _os_log_impl(&dword_1D467C000, v87, v88, "Merge signals from (signals.boundingBox.loggingDescription) to %s", v89, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v90, -1, -1);
      MEMORY[0x1D82635B8](v89, -1, -1);

      v104 = v140;
      v105 = v143;
    }
    else
    {
      sub_1D4697DE0(v86, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);

      v104 = v85;
      v105 = v60;
    }
    ((void (*)(uint64_t, uint64_t))v142)(v104, v105);
    v106 = (uint64_t)v137;
    v107 = v136;
    v108 = (uint64_t)v134;
    v109 = (uint64_t)v133;
    v110 = v132;
    v111 = v130;
    v112 = *v84;
    v113 = v84[1];
    v115 = v84[2];
    v114 = v84[3];
    swift_beginAccess();
    v116 = *(_QWORD *)(v111 + 104);
    if (*(_QWORD *)(v116 + 16))
    {
      swift_bridgeObjectRetain();
      v117 = sub_1D47CA748(v112, v113, v115, v114);
      if ((v118 & 1) != 0)
      {
        sub_1D469C304(*(_QWORD *)(v116 + 56) + *(_QWORD *)(v110 + 72) * v117, v108, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        v119 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56);
        v119(v108, 0, 1, v83);
      }
      else
      {
        v119 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56);
        v119(v108, 1, 1, v83);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v119 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56);
      v119(v108, 1, 1, v83);
    }
    sub_1D469C304((uint64_t)v84, v109, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v108, 1, v83) == 1)
    {
      sub_1D46A8594(v109, (uint64_t)v107);
      sub_1D46992EC(v108, &qword_1ED98D7C0);
    }
    else
    {
      sub_1D4697DE0(v109, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1D46A8594(v108, (uint64_t)v107);
    }
    v148[0] = (uint64_t)v146;
    v148[1] = v145;
    v148[2] = v131;
    v148[3] = v144;
    v148[4] = v141;
    v148[5] = v138;
    sub_1D4829B8C((uint64_t)v148);
    v120 = *v107;
    v121 = v107[1];
    v122 = v107[2];
    v123 = v107[3];
    sub_1D469C304((uint64_t)v107, v106, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v119(v106, 0, 1, v83);
    swift_beginAccess();
    sub_1D47FBF64(v106, v120, v121, v122, v123);
    swift_endAccess();
    sub_1D4697DE0((uint64_t)v107, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  }
}

uint64_t sub_1D46B05AC@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  unint64_t v40;
  _OWORD *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t result;
  _QWORD v55[3];
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  _BYTE v78[136];
  __int128 v79;

  v6 = v5;
  v66 = a4;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA490);
  MEMORY[0x1E0C80A78](v11);
  v64 = (char *)v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for TextDetectionRequestFactory.Input();
  MEMORY[0x1E0C80A78](v63);
  v65 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1D4922370();
  v71 = *(_QWORD *)(v72 - 8);
  v14 = MEMORY[0x1E0C80A78](v72);
  v62 = (char *)v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v55 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA498);
  MEMORY[0x1E0C80A78](v18);
  v70 = a3;
  if (*(_BYTE *)(a3 + 8) != 1)
  {
LABEL_22:
    sub_1D470C76C((uint64_t)v17);
    v51 = sub_1D4922358();
    v52 = sub_1D4922910();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v53 = 0;
      _os_log_impl(&dword_1D467C000, v51, v52, "Skip OCR extraction as no requested domain requires.", v53, 2u);
      MEMORY[0x1D82635B8](v53, -1, -1);
    }

    result = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v17, v72);
    *(_QWORD *)(a5 + 32) = 0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    return result;
  }
  v59 = v17;
  v19 = *(_QWORD *)(a1 + 32);
  v58 = *a2;
  v57 = a2[1];
  v20 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)&v76 = *(_QWORD *)a1;
  v60 = v20;
  *((_QWORD *)&v76 + 1) = v20;
  v77 = *(_OWORD *)(a1 + 16);
  v61 = v19;
  *(_QWORD *)v78 = v19;
  *(_OWORD *)&v78[8] = *(_OWORD *)(a1 + 40);
  *(_OWORD *)&v78[24] = *(_OWORD *)(a1 + 56);
  *(_OWORD *)&v78[88] = *(_OWORD *)(a1 + 120);
  *(_OWORD *)&v78[104] = *(_OWORD *)(a1 + 136);
  *(_OWORD *)&v78[120] = *(_OWORD *)(a1 + 152);
  v79 = *(_OWORD *)(a1 + 168);
  *(_OWORD *)&v78[40] = *(_OWORD *)(a1 + 72);
  *(_OWORD *)&v78[56] = *(_OWORD *)(a1 + 88);
  *(_OWORD *)&v78[72] = *(_OWORD *)(a1 + 104);
  v21 = sub_1D4829664();
  v67 = *(_QWORD *)(v21 + 16);
  if (!v67)
  {
    swift_bridgeObjectRelease();
LABEL_21:
    v17 = v59;
    goto LABEL_22;
  }
  v55[1] = v6;
  v56 = a5;
  v22 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v23 = 0;
  v74 = 0;
  v24 = *(_QWORD *)(v22 - 8);
  v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v55[2] = v21;
  v69 = v21 + v25 + 40;
  v68 = *(_QWORD *)(v24 + 72);
  while (1)
  {
    v73 = v23;
    v26 = *(_QWORD *)(v69 + v68 * v23);
    v27 = *(_QWORD *)(v26 + 16);
    if (v27)
    {
      swift_bridgeObjectRetain();
      v28 = v27 - 1;
      v29 = 32;
      v30 = MEMORY[0x1E0DEE9D8];
      while (1)
      {
        v31 = *(_OWORD *)(v26 + v29);
        v77 = *(_OWORD *)(v26 + v29 + 16);
        v76 = v31;
        v32 = *(_OWORD *)(v26 + v29 + 32);
        v33 = *(_OWORD *)(v26 + v29 + 48);
        v34 = *(_OWORD *)(v26 + v29 + 80);
        *(_OWORD *)&v78[32] = *(_OWORD *)(v26 + v29 + 64);
        *(_OWORD *)&v78[48] = v34;
        *(_OWORD *)v78 = v32;
        *(_OWORD *)&v78[16] = v33;
        v35 = *(_OWORD *)(v26 + v29 + 96);
        v36 = *(_OWORD *)(v26 + v29 + 112);
        v37 = *(_OWORD *)(v26 + v29 + 128);
        *(_OWORD *)&v78[108] = *(_OWORD *)(v26 + v29 + 140);
        *(_OWORD *)&v78[80] = v36;
        *(_OWORD *)&v78[96] = v37;
        *(_OWORD *)&v78[64] = v35;
        if (HIBYTE(v36) == 1)
        {
          sub_1D46A47CC((uint64_t)&v76);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v75 = v30;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1D48AB57C(0, *(_QWORD *)(v30 + 16) + 1, 1);
            v30 = v75;
          }
          v40 = *(_QWORD *)(v30 + 16);
          v39 = *(_QWORD *)(v30 + 24);
          if (v40 >= v39 >> 1)
          {
            sub_1D48AB57C(v39 > 1, v40 + 1, 1);
            v30 = v75;
          }
          *(_QWORD *)(v30 + 16) = v40 + 1;
          v41 = (_OWORD *)(v30 + 160 * v40);
          v42 = v77;
          v41[2] = v76;
          v41[3] = v42;
          v43 = *(_OWORD *)v78;
          v44 = *(_OWORD *)&v78[16];
          v45 = *(_OWORD *)&v78[48];
          v41[6] = *(_OWORD *)&v78[32];
          v41[7] = v45;
          v41[4] = v43;
          v41[5] = v44;
          v46 = *(_OWORD *)&v78[64];
          v47 = *(_OWORD *)&v78[80];
          v48 = *(_OWORD *)&v78[96];
          *(_OWORD *)((char *)v41 + 172) = *(_OWORD *)&v78[108];
          v41[9] = v47;
          v41[10] = v48;
          v41[8] = v46;
        }
        if (!v28)
          break;
        --v28;
        v29 += 160;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v30 = MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)&v76 = v30;
    swift_retain();
    v49 = v74;
    sub_1D482A338((uint64_t *)&v76);
    v74 = v49;
    if (v49)
      break;
    swift_release();
    v50 = v76;
    if (*(_QWORD *)(v76 + 16))
    {
      swift_retain();
      __asm { BR              X9 }
    }
    v23 = v73 + 1;
    swift_release();
    if (v23 == v67)
    {
      swift_bridgeObjectRelease();
      a5 = v56;
      goto LABEL_21;
    }
  }
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1D46B113C(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  id v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v18[2];
  uint64_t v19[7];

  v4 = sub_1D4922370();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v9 = a1;
    sub_1D470C76C((uint64_t)v7);
    v10 = a1;
    v11 = a1;
    v12 = sub_1D4922358();
    v13 = sub_1D492291C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      *(_DWORD *)v14 = 136446210;
      v18[1] = v14 + 4;
      v19[0] = v15;
      swift_getErrorValue();
      v16 = sub_1D4715AA0(v19[5], v19[6]);
      v19[3] = sub_1D47F0250(v16, v17, v19);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      sub_1D46B2DDC(a1, 1);
      sub_1D46B2DDC(a1, 1);
      _os_log_impl(&dword_1D467C000, v12, v13, "Text detection error: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v15, -1, -1);
      MEMORY[0x1D82635B8](v14, -1, -1);

      sub_1D46B2DDC(a1, 1);
    }
    else
    {
      sub_1D46B2DDC(a1, 1);
      sub_1D46B2DDC(a1, 1);

    }
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      *(_QWORD *)(result + 120) = a1;
      swift_bridgeObjectRetain();
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1D46B1398@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v37;
  unint64_t v38;
  _OWORD *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t result;
  _QWORD v54[3];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  _BYTE v74[168];
  __int128 v75;

  v66 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA490);
  MEMORY[0x1E0C80A78](v8);
  v61 = (char *)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for BarcodeDetectionRequestFactory.Input();
  MEMORY[0x1E0C80A78](v60);
  v11 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D4922370();
  v65 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v59 = (char *)v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v63 = (uint64_t)v54 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA498);
  MEMORY[0x1E0C80A78](v16);
  v72 = (char *)v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  *(_OWORD *)&v74[120] = *(_OWORD *)(a1 + 15);
  *(_OWORD *)&v74[136] = *(_OWORD *)(a1 + 17);
  *(_OWORD *)&v74[152] = *(_OWORD *)(a1 + 19);
  v75 = *(_OWORD *)(a1 + 21);
  *(_OWORD *)&v74[72] = *(_OWORD *)(a1 + 9);
  *(_OWORD *)&v74[88] = *(_OWORD *)(a1 + 11);
  *(_OWORD *)&v74[104] = *(_OWORD *)(a1 + 13);
  *(_QWORD *)v74 = v18;
  v64 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)&v74[8] = v64;
  *(_OWORD *)&v74[24] = *(_OWORD *)(a1 + 3);
  v62 = *(_OWORD *)(a1 + 5);
  *(_OWORD *)&v74[40] = v62;
  *(_OWORD *)&v74[56] = *(_OWORD *)(a1 + 7);
  v19 = sub_1D4829664();
  v67 = *(_QWORD *)(v19 + 16);
  if (v67)
  {
    v55 = v12;
    v54[1] = v11;
    v54[2] = a3;
    v56 = v4;
    v58 = a4;
    v20 = type metadata accessor for VisualUnderstanding.ImageRegion();
    v21 = 0;
    v71 = 0;
    v22 = *(_QWORD *)(v20 - 8);
    v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    v57 = v19;
    v69 = v19 + v23 + 40;
    v68 = *(_QWORD *)(v22 + 72);
    while (1)
    {
      v70 = v21;
      v24 = *(_QWORD *)(v69 + v68 * v21);
      v25 = *(_QWORD *)(v24 + 16);
      if (v25)
      {
        swift_bridgeObjectRetain();
        v26 = v25 - 1;
        v27 = 32;
        v28 = MEMORY[0x1E0DEE9D8];
        while (1)
        {
          v29 = *(_OWORD *)(v24 + v27);
          *(_OWORD *)&v74[16] = *(_OWORD *)(v24 + v27 + 16);
          *(_OWORD *)v74 = v29;
          v30 = *(_OWORD *)(v24 + v27 + 32);
          v31 = *(_OWORD *)(v24 + v27 + 48);
          v32 = *(_OWORD *)(v24 + v27 + 80);
          *(_OWORD *)&v74[64] = *(_OWORD *)(v24 + v27 + 64);
          *(_OWORD *)&v74[80] = v32;
          *(_OWORD *)&v74[48] = v31;
          *(_OWORD *)&v74[32] = v30;
          v33 = *(_OWORD *)(v24 + v27 + 96);
          v34 = *(_OWORD *)(v24 + v27 + 112);
          v35 = *(_OWORD *)(v24 + v27 + 128);
          *(_OWORD *)&v74[140] = *(_OWORD *)(v24 + v27 + 140);
          *(_OWORD *)&v74[112] = v34;
          *(_OWORD *)&v74[128] = v35;
          *(_OWORD *)&v74[96] = v33;
          if (HIBYTE(v34) == 1)
          {
            sub_1D46A47CC((uint64_t)v74);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v73 = v28;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1D48AB57C(0, *(_QWORD *)(v28 + 16) + 1, 1);
              v28 = v73;
            }
            v38 = *(_QWORD *)(v28 + 16);
            v37 = *(_QWORD *)(v28 + 24);
            if (v38 >= v37 >> 1)
            {
              sub_1D48AB57C(v37 > 1, v38 + 1, 1);
              v28 = v73;
            }
            *(_QWORD *)(v28 + 16) = v38 + 1;
            v39 = (_OWORD *)(v28 + 160 * v38);
            v40 = *(_OWORD *)&v74[16];
            v39[2] = *(_OWORD *)v74;
            v39[3] = v40;
            v41 = *(_OWORD *)&v74[32];
            v42 = *(_OWORD *)&v74[48];
            v43 = *(_OWORD *)&v74[80];
            v39[6] = *(_OWORD *)&v74[64];
            v39[7] = v43;
            v39[4] = v41;
            v39[5] = v42;
            v44 = *(_OWORD *)&v74[96];
            v45 = *(_OWORD *)&v74[112];
            v46 = *(_OWORD *)&v74[128];
            *(_OWORD *)((char *)v39 + 172) = *(_OWORD *)&v74[140];
            v39[9] = v45;
            v39[10] = v46;
            v39[8] = v44;
          }
          if (!v26)
            break;
          --v26;
          v27 += 160;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v28 = MEMORY[0x1E0DEE9D8];
      }
      *(_QWORD *)v74 = v28;
      swift_retain();
      v47 = v71;
      sub_1D482A338((uint64_t *)v74);
      v71 = v47;
      if (v47)
        break;
      swift_release();
      v48 = *(_QWORD *)v74;
      if (*(_QWORD *)(*(_QWORD *)v74 + 16))
      {
        swift_retain();
        __asm { BR              X9 }
      }
      v21 = v70 + 1;
      swift_release();
      if (v21 == v67)
      {
        swift_bridgeObjectRelease();
        a4 = v58;
        v12 = v55;
        goto LABEL_20;
      }
    }
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_20:
    v49 = v63;
    sub_1D470C76C(v63);
    v50 = sub_1D4922358();
    v51 = sub_1D4922910();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v52 = 0;
      _os_log_impl(&dword_1D467C000, v50, v51, "Skip barcode extraction as no requested domain requires.", v52, 2u);
      MEMORY[0x1D82635B8](v52, -1, -1);
    }

    result = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 8))(v49, v12);
    *(_QWORD *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1D46B1FBC(void *a1, void *a2, __int16 a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t result;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  void *v42;
  unint64_t v43;
  uint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[5];
  __int128 v51;
  char v52;
  ValueMetadata *v53;
  unint64_t v54;
  uint64_t v55;

  v8 = sub_1D4922370();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v45 - v13;
  if ((a3 & 0x100) != 0)
  {
    sub_1D46B2CC8(a1, a2, a3);
    sub_1D470C76C((uint64_t)v12);
    sub_1D46B2CC8(a1, a2, a3);
    sub_1D46B2CC8(a1, a2, a3);
    v25 = sub_1D4922358();
    v26 = sub_1D492291C();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v47 = swift_slowAlloc();
      v55 = v47;
      *(_DWORD *)v27 = 136446210;
      sub_1D46B2D44();
      v28 = swift_dynamicCastMetatype();
      v48 = v9;
      v49 = v8;
      if (v28)
      {
        *(_QWORD *)&v51 = a1;
        *((_QWORD *)&v51 + 1) = a2;
        v52 = a3;
        sub_1D46B2CC8(a1, a2, a3);
        sub_1D46B2CC8(a1, a2, a3);
        sub_1D46AAFD4();
        v29 = sub_1D4922E20();
        if (v29)
        {
          v30 = (void *)v29;
          sub_1D46B2D00(a1, a2, a3, 1);
        }
        else
        {
          v30 = (void *)swift_allocError();
          v40 = v52;
          *(_OWORD *)v41 = v51;
          *(_BYTE *)(v41 + 16) = v40;
        }
        v42 = (void *)sub_1D4920E58();

        v37 = sub_1D4715DCC();
        v39 = v43;

        sub_1D46B2D00(a1, a2, a3, 1);
      }
      else
      {
        v53 = &type metadata for MLError;
        v54 = sub_1D46B2D80();
        *(_QWORD *)&v51 = a1;
        *((_QWORD *)&v51 + 1) = a2;
        v52 = a3;
        sub_1D46B2A10(&v51, (uint64_t)v50);
        v32 = __swift_project_boxed_opaque_existential_1(v50, v50[3]);
        v33 = *v32;
        v34 = v32[1];
        v35 = *((_BYTE *)v32 + 16);
        sub_1D46B2CC8(a1, a2, a3);
        sub_1D479B1AC(v33, v34, v35);
        v37 = v36;
        v39 = v38;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
      }
      *(_QWORD *)&v51 = sub_1D47F0250(v37, v39, &v55);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      sub_1D46B2D00(a1, a2, a3, 1);
      sub_1D46B2D00(a1, a2, a3, 1);
      _os_log_impl(&dword_1D467C000, v25, v26, "Barcode detection error: %{public}s", v27, 0xCu);
      v44 = v47;
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v44, -1, -1);
      MEMORY[0x1D82635B8](v27, -1, -1);

      sub_1D46B2D00(a1, a2, a3, 1);
      return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v12, v49);
    }
    else
    {
      sub_1D46B2D00(a1, a2, a3, 1);
      sub_1D46B2D00(a1, a2, a3, 1);
      sub_1D46B2D0C(a1, a2, a3);

      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
  }
  else
  {
    v15 = a4 + 16;
    sub_1D470C76C((uint64_t)&v45 - v13);
    sub_1D46B2DC4(a1, a2, a3, 0);
    swift_bridgeObjectRetain();
    v16 = sub_1D4922358();
    v17 = sub_1D4922910();
    if (os_log_type_enabled(v16, v17))
    {
      v47 = v15;
      v18 = swift_slowAlloc();
      v49 = v8;
      v19 = (uint8_t *)v18;
      v46 = swift_slowAlloc();
      *(_QWORD *)&v51 = v46;
      *(_DWORD *)v19 = 136315138;
      v45 = v19 + 4;
      v20 = swift_bridgeObjectRetain();
      v21 = MEMORY[0x1D8261B9C](v20, &type metadata for DetectedBarcode);
      v48 = v9;
      v23 = v22;
      sub_1D46B2D00(a1, a2, a3, 0);
      v50[0] = sub_1D47F0250(v21, v23, (uint64_t *)&v51);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      sub_1D46B2D00(a1, a2, a3, 0);
      sub_1D46B2D00(a1, a2, a3, 0);
      _os_log_impl(&dword_1D467C000, v16, v17, "Detected barcodes %s.", v19, 0xCu);
      v24 = v46;
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v24, -1, -1);
      MEMORY[0x1D82635B8](v19, -1, -1);

      (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v49);
    }
    else
    {
      sub_1D46B2D00(a1, a2, a3, 0);
      sub_1D46B2D00(a1, a2, a3, 0);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      *(_QWORD *)(result + 128) = a1;
      swift_bridgeObjectRetain();
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1D46B2598@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  __int128 v12;
  _BYTE v13[40];
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (*(_BYTE *)(a2 + 9) == 1)
  {
    v8 = *((_QWORD *)a1 + 2);
    v7 = *((_QWORD *)a1 + 3);
    v12 = *a1;
    sub_1D46AAF28(v4 + 48, (uint64_t)v13);
    v9 = *(_QWORD *)(v4 + 96);
    v14 = v12;
    v15 = v8;
    v16 = v7;
    v17 = v9;
    v18 = a3;
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    sub_1D4781920((uint64_t)v13, (uint64_t)sub_1D46B2BF8, v4, a4);
    sub_1D46B2C04((uint64_t)v13);
    return swift_release();
  }
  else
  {
    if (qword_1ED98D9E0 != -1)
      swift_once();
    v11 = qword_1ED9A49E0;
    a4[3] = (uint64_t)&type metadata for BatchModelRequest;
    a4[4] = (uint64_t)&off_1E9801CA8;
    *a4 = v11;
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1D46B26BC(void *a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  os_log_t v24;
  uint64_t v25;
  _QWORD v26[2];
  uint64_t v27;
  os_log_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v10 = sub_1D4922370();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a4 & 1) != 0)
  {
    v16 = a1;
    sub_1D470C76C((uint64_t)v13);
    v17 = a1;
    v18 = a1;
    v19 = sub_1D4922358();
    v20 = sub_1D492291C();
    if (os_log_type_enabled(v19, v20))
    {
      v28 = v19;
      v21 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v32 = v27;
      *(_DWORD *)v21 = 136446210;
      v26[1] = v21 + 4;
      swift_getErrorValue();
      v22 = sub_1D4715AA0(v30, v31);
      v29 = sub_1D47F0250(v22, v23, &v32);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      sub_1D46B2C38(a1, a2, a3, 1);
      sub_1D46B2C38(a1, a2, a3, 1);
      v24 = v28;
      _os_log_impl(&dword_1D467C000, v28, v20, "Failed to calculate image fingerprint: %{public}s", v21, 0xCu);
      v25 = v27;
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v25, -1, -1);
      MEMORY[0x1D82635B8](v21, -1, -1);

      sub_1D46B2C38(a1, a2, a3, 1);
    }
    else
    {
      sub_1D46B2C38(a1, a2, a3, 1);
      sub_1D46B2C38(a1, a2, a3, 1);

    }
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    v14 = a5[17];
    a5[17] = a1;
    a5[18] = a2;
    a5[19] = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1D46B2C64(v14);
  }
}

uint64_t sub_1D46B2958()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D46B2C64(*(_QWORD *)(v0 + 136));
  return v0;
}

uint64_t sub_1D46B29D0()
{
  sub_1D46B2958();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SignalsExtractionProcessor()
{
  return objc_opt_self();
}

uint64_t sub_1D46B2A10(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1D46B2A28(uint64_t a1)
{
  destroy for DomainModelRequestFactory.Input(a1);
  return a1;
}

uint64_t sub_1D46B2A5C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  result = MEMORY[0x1E0DEE9D8];
  v10 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v6 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      v7 = sub_1D4922CA0();
      if (v7 < 7 && *(_QWORD *)(*(_QWORD *)(a2 + 16) + 16) && (sub_1D47CA850(v7), (v8 & 1) != 0))
      {
        swift_retain();
        v9 = swift_bridgeObjectRelease();
        MEMORY[0x1D8261B78](v9);
        if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1D4922844();
        sub_1D492285C();
        sub_1D4922838();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v6 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

uint64_t sub_1D46B2B94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D48BF398(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(unsigned __int8 *)(v1 + 25), a1);
}

unint64_t sub_1D46B2BB4()
{
  unint64_t result;

  result = qword_1EFEAA488;
  if (!qword_1EFEAA488)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4927A40, &type metadata for SignalsExtractionProcessorError);
    atomic_store(result, (unint64_t *)&qword_1EFEAA488);
  }
  return result;
}

uint64_t sub_1D46B2BF8(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;

  return sub_1D46B26BC(a1, a2, a3, a4 & 1, v4);
}

uint64_t sub_1D46B2C04(uint64_t a1)
{
  destroy for FingerprintModelRequestInput(a1);
  return a1;
}

void sub_1D46B2C38(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
  {

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D46B2C64(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D46B2C90()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D46B2CB4(void *a1, void *a2, __int16 a3)
{
  uint64_t v3;

  return sub_1D46B1FBC(a1, a2, a3 & 0x1FF, v3);
}

id sub_1D46B2CC8(id result, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
      result = result;
      break;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      result = (id)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

void sub_1D46B2D00(void *a1, id a2, char a3, char a4)
{
  if ((a4 & 1) != 0)
    sub_1D46B2D0C(a1, a2, a3);
  else
    swift_bridgeObjectRelease();
}

void sub_1D46B2D0C(void *a1, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:

      break;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

unint64_t sub_1D46B2D44()
{
  unint64_t result;

  result = qword_1EFEAA4A8;
  if (!qword_1EFEAA4A8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFEAA4A8);
  }
  return result;
}

unint64_t sub_1D46B2D80()
{
  unint64_t result;

  result = qword_1EFEAA4B0;
  if (!qword_1EFEAA4B0)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4932790, &type metadata for MLError);
    atomic_store(result, (unint64_t *)&qword_1EFEAA4B0);
  }
  return result;
}

id sub_1D46B2DC4(id result, id a2, char a3, char a4)
{
  if ((a4 & 1) != 0)
    return sub_1D46B2CC8(result, a2, a3);
  else
    return (id)swift_bridgeObjectRetain();
}

uint64_t sub_1D46B2DD0(void *a1, char a2)
{
  return sub_1D46B113C(a1, a2 & 1);
}

void sub_1D46B2DDC(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

void sub_1D46B2DE8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
  {

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D46B2E18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 152);
  swift_bridgeObjectRetain();
  sub_1D46B2ED8(v2);
  swift_bridgeObjectRetain();
  sub_1D46B2F58(v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D46B2ED8(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D46B2F58(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D46B2F84(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v24;
  __int128 v25[2];
  uint64_t v26;

  v8 = v7;
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v13 = a5 & 1;
    v26 = MEMORY[0x1E0DEE9D8];
    sub_1D48ABF88(0, v9, 0);
    v10 = v26;
    v14 = *(_QWORD *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
    v15 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v16 = *(_QWORD *)(v14 + 72);
    while (1)
    {
      sub_1D46AC2CC(v15, a2, a3, a4, v13, a6, a7, &v24, (uint64_t)v25);
      if (v8)
        break;
      v8 = 0;
      v26 = v10;
      v18 = *(_QWORD *)(v10 + 16);
      v17 = *(_QWORD *)(v10 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1D48ABF88(v17 > 1, v18 + 1, 1);
        v10 = v26;
      }
      *(_QWORD *)(v10 + 16) = v18 + 1;
      sub_1D46B2A10(v25, v10 + 40 * v18 + 32);
      v15 += v16;
      if (!--v9)
        return v10;
    }
    swift_release();
  }
  return v10;
}

unint64_t sub_1D46B30C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  unint64_t v21;
  uint64_t v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD v40[3];
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D7C0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v40 - v15;
  MEMORY[0x1E0C80A78](v14);
  v48 = (uint64_t)v40 - v18;
  v19 = *(_QWORD *)(a1 + 16);
  if (!v19)
    return MEMORY[0x1E0DEE9D8];
  v42 = v17;
  v40[1] = a1;
  v40[2] = v2;
  v45 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v20 = (double *)(a1 + v45);
  swift_bridgeObjectRetain();
  v44 = (uint64_t *)(a2 + 104);
  swift_beginAccess();
  v43 = v9;
  v49 = *(_QWORD *)(v9 + 72);
  v21 = MEMORY[0x1E0DEE9D8];
  v46 = v16;
  v47 = v8;
  v41 = v12;
  do
  {
    v22 = *v44;
    if (*(_QWORD *)(*v44 + 16))
    {
      v24 = v20[2];
      v23 = v20[3];
      v26 = *v20;
      v25 = v20[1];
      swift_bridgeObjectRetain();
      v27 = sub_1D47CA748(v26, v25, v24, v23);
      if ((v28 & 1) != 0)
      {
        sub_1D469C304(*(_QWORD *)(v22 + 56) + v27 * v49, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        v29 = v43;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v7, 0, 1, v8);
        v30 = v29;
        v12 = v41;
        swift_bridgeObjectRelease();
        v31 = v42;
        goto LABEL_9;
      }
      v32 = v43;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v7, 1, 1, v8);
      v30 = v32;
      v12 = v41;
      swift_bridgeObjectRelease();
    }
    else
    {
      v30 = v43;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v7, 1, 1, v8);
    }
    v31 = v42;
LABEL_9:
    sub_1D469C304((uint64_t)v20, v31, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v7, 1, v8) == 1)
    {
      v33 = (uint64_t)v46;
      sub_1D46A8594(v31, (uint64_t)v46);
      sub_1D46992EC((uint64_t)v7, &qword_1ED98D7C0);
    }
    else
    {
      sub_1D4697DE0(v31, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      v33 = (uint64_t)v46;
      sub_1D46A8594((uint64_t)v7, (uint64_t)v46);
    }
    v34 = v33;
    v35 = v48;
    sub_1D46A8594(v34, v48);
    sub_1D46A8594(v35, (uint64_t)v12);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v21 = sub_1D48A8614(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
    v37 = *(_QWORD *)(v21 + 16);
    v36 = *(_QWORD *)(v21 + 24);
    if (v37 >= v36 >> 1)
      v21 = sub_1D48A8614(v36 > 1, v37 + 1, 1, v21);
    *(_QWORD *)(v21 + 16) = v37 + 1;
    v38 = v49;
    sub_1D46A8594((uint64_t)v12, v21 + v45 + v37 * v49);
    v20 = (double *)((char *)v20 + v38);
    --v19;
    v8 = v47;
  }
  while (v19);
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1D46B3464(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D46B34A8(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D46B34D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 152);
  swift_bridgeObjectRelease();
  sub_1D46B3590(v2);
  swift_bridgeObjectRelease();
  sub_1D46B2C64(v4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D46B3590(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D46B360C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 24) & ~v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + 80))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 56);
  v5 = sub_1D4920FD8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocObject();
}

uint64_t sub_1D46B36D4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8) + 80);
  return sub_1D46AC5A4(a1, *(_QWORD *)(v1 + 16), (double *)(v1 + ((v3 + 24) & ~v3)));
}

_QWORD *initializeBufferWithCopyOfBuffer for DomainPredictionNet.PredictionResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for VisualUnderstanding.RegionalAnnotation()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for DomainPredictionNet.PredictionResult(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for DomainPredictionNet.PredictionResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SignalsExtractionProcessorError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SignalsExtractionProcessorError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_1D46B3864()
{
  return 0;
}

ValueMetadata *type metadata accessor for SignalsExtractionProcessorError()
{
  return &type metadata for SignalsExtractionProcessorError;
}

uint64_t sub_1D46B387C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46B2B94(a1);
}

uint64_t sub_1D46B3894(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1D48ABFB4(0, v5, 0);
    v6 = v17;
    v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D730) - 8);
    v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      a1(&v16, v9);
      if (v4)
        break;
      v4 = 0;
      v11 = v16;
      v17 = v6;
      v13 = *(_QWORD *)(v6 + 16);
      v12 = *(_QWORD *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1D48ABFB4(v12 > 1, v13 + 1, 1);
        v6 = v17;
      }
      *(_QWORD *)(v6 + 16) = v13 + 1;
      *(_QWORD *)(v6 + 8 * v13 + 32) = v11;
      v9 += v10;
      if (!--v5)
        return v6;
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_1D46B39B4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  v19 = a1;
  v20 = a2;
  v6 = type metadata accessor for RegionSearchResult.ResultItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1D48AC28C(0, v10, 0);
    v11 = v21;
    v12 = *(_QWORD *)(type metadata accessor for ObjectKnowledge() - 8);
    v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v18 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      v19(v13);
      if (v4)
        break;
      v4 = 0;
      v21 = v11;
      v15 = *(_QWORD *)(v11 + 16);
      v14 = *(_QWORD *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1D48AC28C(v14 > 1, v15 + 1, 1);
        v11 = v21;
      }
      *(_QWORD *)(v11 + 16) = v15 + 1;
      sub_1D469C630((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v15, type metadata accessor for RegionSearchResult.ResultItem);
      v13 += v18;
      if (!--v10)
        return v11;
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1D46B3B28(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);

  v4 = a1 == 0x6D75626C61 && a2 == 0xE500000000000000;
  if (!v4
    && (sub_1D4922E38() & 1) == 0
    && (a1 != 0x6C616D696E61 || a2 != 0xE600000000000000)
    && (sub_1D4922E38() & 1) == 0
    && (a1 != 7631457 || a2 != 0xE300000000000000)
    && (sub_1D4922E38() & 1) == 0
    && (a1 != 1937006947 || a2 != 0xE400000000000000)
    && (sub_1D4922E38() & 1) == 0
    && (a1 != 1936158564 || a2 != 0xE400000000000000)
    && (sub_1D4922E38() & 1) == 0
    && (a1 != 0xD000000000000011 || a2 != 0x80000001D493F640)
    && (sub_1D4922E38() & 1) == 0
    && (a1 != 0x6E616D7568 || a2 != 0xE500000000000000)
    && (sub_1D4922E38() & 1) == 0
    && (a1 != 0x6B72616D646E616CLL || a2 != 0xE800000000000000)
    && (sub_1D4922E38() & 1) == 0
    && (a1 != 0x616964656DLL || a2 != 0xE500000000000000)
    && (sub_1D4922E38() & 1) == 0
    && (a1 != 0xD000000000000010 || a2 != 0x80000001D493F660)
    && (sub_1D4922E38() & 1) == 0
    && (a1 != 0x65727574616ELL || a2 != 0xE600000000000000)
    && (sub_1D4922E38() & 1) == 0
    && (a1 != 0x6465767265736572 || a2 != 0xE900000000000033)
    && (sub_1D4922E38() & 1) == 0
    && (a1 != 0x6465767265736572 || a2 != 0xE900000000000032)
    && (sub_1D4922E38() & 1) == 0
    && (a1 != 0x6465767265736572 || a2 != 0xE900000000000031)
    && (sub_1D4922E38() & 1) == 0
    && (a1 != 0x68736E6565726373 || a2 != 0xEA0000000000746FLL)
    && (sub_1D4922E38() & 1) == 0
    && (a1 != 0x727574706C756373 || a2 != 0xE900000000000065)
    && (sub_1D4922E38() & 1) == 0
    && (a1 != 0x656E696C796B73 || a2 != 0xE700000000000000)
    && (sub_1D4922E38() & 1) == 0
    && (a1 != 0x6465767265736572 || a2 != 0xE900000000000034)
    && (sub_1D4922E38() & 1) == 0
    && (a1 != 0x6465767265736572 || a2 != 0xE900000000000035)
    && (sub_1D4922E38() & 1) == 0
    && (a1 != 0x6465767265736572 || a2 != 0xE900000000000037))
  {
    sub_1D4922E38();
  }
  v5 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult(0);
  MEMORY[0x1E0C80A78](v5);
  sub_1D4696EA4(&qword_1ED98E8E0, v6, (uint64_t)&unk_1D49317C4);
  return sub_1D49221FC();
}

uint64_t sub_1D46B41D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;

  v54 = a1;
  v66 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D728);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1D4921F14();
  v68 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D720);
  v64 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v49 = (char *)&v48 - v11;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D740);
  v60 = *(_QWORD *)(v62 - 8);
  v12 = MEMORY[0x1E0C80A78](v62);
  v53 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v58 = (char *)&v48 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D750);
  MEMORY[0x1E0C80A78](v15);
  v65 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_1D4921F74();
  v51 = *(_QWORD *)(v67 - 8);
  v17 = MEMORY[0x1E0C80A78](v67);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v52 = (char *)&v48 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D5B8);
  v50 = *(_QWORD *)(v21 - 8);
  v22 = v50;
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D708);
  v63 = *(_QWORD *)(v61 - 8);
  v25 = MEMORY[0x1E0C80A78](v61);
  v55 = (char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v57 = (char *)&v48 - v27;
  v69 = 81;
  v70 = 0xE100000000000000;
  v59 = sub_1D46BE174();
  sub_1D4921EE4();
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v54, v21);
  sub_1D4921F08();
  sub_1D4921F80();
  v28 = sub_1D4921F8C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v4, 1, 1, v28);
  sub_1D4921F08();
  sub_1D4696EA4(&qword_1ED98D710, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEFE40], MEMORY[0x1E0DEFE38]);
  v29 = MEMORY[0x1E0DEBAF0];
  v30 = v53;
  v31 = v56;
  sub_1D4921F68();
  sub_1D46992EC((uint64_t)v4, &qword_1ED98D728);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v6, v31);
  v68 = *(_QWORD *)(v51 + 8);
  v32 = v67;
  ((void (*)(char *, uint64_t))v68)(v19, v67);
  MEMORY[0x1D8261290](v30, v29);
  sub_1D46BF03C(&qword_1ED98D718, &qword_1ED98D720, MEMORY[0x1E0DEFEE8]);
  v33 = v49;
  sub_1D4921EE4();
  v34 = *(void (**)(char *, uint64_t))(v64 + 8);
  v34(v10, v7);
  sub_1D4921EF0();
  v34(v33, v7);
  v35 = v60;
  v36 = v58;
  v37 = v62;
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v58, v30, v62);
  sub_1D4921F2C();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v24, v21);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB10);
  v64 = sub_1D46BF03C(&qword_1ED98D738, &qword_1ED98D740, MEMORY[0x1E0DF1F60]);
  v39 = v65;
  v56 = v38;
  v40 = v52;
  sub_1D4921F50();
  v41 = *(void (**)(char *, uint64_t))(v35 + 8);
  v42 = v36;
  v41(v36, v37);
  v43 = v40;
  ((void (*)(char *, uint64_t))v68)(v40, v32);
  v44 = v55;
  MEMORY[0x1D826126C](v39, v38);
  sub_1D46BF03C(&qword_1ED98D700, &qword_1ED98D708, MEMORY[0x1E0DEFE08]);
  v45 = v57;
  v46 = v61;
  sub_1D4921EE4();
  v65 = *(char **)(v63 + 8);
  ((void (*)(char *, uint64_t))v65)(v44, v46);
  v69 = v71;
  v70 = v72;
  sub_1D4921EF0();
  swift_bridgeObjectRelease();
  sub_1D4921F08();
  sub_1D4921F5C();
  sub_1D4921F44();
  v41(v30, v37);
  ((void (*)(char *, uint64_t))v68)(v43, v67);
  v41(v42, v37);
  return ((uint64_t (*)(char *, uint64_t))v65)(v45, v46);
}

unint64_t *sub_1D46B481C@<X0>(unint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int16 v7;
  unsigned __int8 *v8;
  int v9;
  char v10;
  char v11;
  unsigned __int8 *v12;

  v3 = *result;
  v4 = result[1];
  if ((v4 ^ *result) < 0x4000)
  {
    v12 = 0;
    LOBYTE(v9) = 1;
  }
  else
  {
    v6 = result[2];
    v5 = result[3];
    result = (unint64_t *)sub_1D46BEAF8(*result, v4, v6, v5, 10);
    if ((v7 & 0x100) != 0)
    {
      swift_bridgeObjectRetain();
      v8 = sub_1D46BCF2C(v3, v4, v6, v5, 10);
      v11 = v10;
      result = (unint64_t *)swift_bridgeObjectRelease();
      v9 = v11 & 1;
    }
    else
    {
      v8 = (unsigned __int8 *)result;
      v9 = v7 & 1;
    }
    if (v9)
      v12 = 0;
    else
      v12 = v8;
  }
  *(_QWORD *)a2 = v12;
  *(_BYTE *)(a2 + 8) = v9;
  return result;
}

uint64_t sub_1D46B48EC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D730);
  return sub_1D4921FA4();
}

uint64_t sub_1D46B4948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38[16];
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42[2];

  v37 = a3;
  v5 = sub_1D4922370();
  v33 = *(_QWORD *)(v5 - 8);
  v34 = v5;
  MEMORY[0x1E0C80A78](v5);
  v36 = (uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D750);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D5B8);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4921F38();
  v40 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB10);
  sub_1D46BF03C((unint64_t *)&qword_1ED98D748, &qword_1ED98D750, MEMORY[0x1E0DF1F60]);
  sub_1D4921F98();
  v42[0] = a1;
  v42[1] = a2;
  v35 = a2;
  sub_1D46BE08C();
  v15 = sub_1D49225C8();
  v39 = v14;
  v16 = sub_1D46B3894((void (*)(uint64_t *__return_ptr, uint64_t))sub_1D46BE0D0, (uint64_t)v38, v15);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (*(_QWORD *)(v16 + 16))
  {
    v17 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
    MEMORY[0x1E0C80A78](v17);
    *(&v32 - 2) = v16;
    sub_1D4696EA4(&qword_1ED98E738, v18, (uint64_t)&unk_1D4930F2C);
    v19 = v37;
    sub_1D49221FC();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v19, 0, 1, v17);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1D470C76C(v36);
    swift_bridgeObjectRetain_n();
    v21 = sub_1D4922358();
    v22 = sub_1D4922910();
    v23 = os_log_type_enabled(v21, v22);
    v24 = v37;
    v25 = v33;
    v26 = v34;
    if (v23)
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v42[0] = v28;
      *(_DWORD *)v27 = 136315138;
      v29 = v35;
      swift_bridgeObjectRetain();
      v41 = sub_1D47F0250(a1, v29, v42);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D467C000, v21, v22, "Failed to parse OntologyNode %s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v28, -1, -1);
      v30 = v27;
      v24 = v37;
      MEMORY[0x1D82635B8](v30, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v36, v26);
    v31 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v24, 1, 1, v31);
  }
}

uint64_t sub_1D46B4D40(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v1)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1D48AB4A4(0, v1, 0);
    v2 = 0;
    do
    {
      sub_1D4922E14();
      sub_1D492270C();
      swift_bridgeObjectRelease();
      v4 = *(_QWORD *)(v8 + 16);
      v3 = *(_QWORD *)(v8 + 24);
      if (v4 >= v3 >> 1)
        sub_1D48AB4A4(v3 > 1, v4 + 1, 1);
      ++v2;
      *(_QWORD *)(v8 + 16) = v4 + 1;
      v5 = v8 + 16 * v4;
      *(_QWORD *)(v5 + 32) = 81;
      *(_QWORD *)(v5 + 40) = 0xE100000000000000;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D200);
  sub_1D46BF03C((unint64_t *)&qword_1ED98D208, &qword_1ED98D200, MEMORY[0x1E0DEAF20]);
  v6 = sub_1D49225D4();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1D46B4EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v6;

  if (a1 == 0x4E574F4E4B4E55 && a2 == 0xE700000000000000 || (sub_1D4922E38() & 1) != 0)
    return 0;
  if (a1 == 5526081 && a2 == 0xE300000000000000 || (sub_1D4922E38() & 1) != 0)
    return 1;
  if (a1 == 0x45525554414ELL && a2 == 0xE600000000000000 || (sub_1D4922E38() & 1) != 0)
    return 2;
  if (a1 == 0x4B52414D444E414CLL && a2 == 0xE800000000000000 || (sub_1D4922E38() & 1) != 0)
    return 3;
  if (a1 == 0x414944454DLL && a2 == 0xE500000000000000 || (sub_1D4922E38() & 1) != 0)
    return 4;
  if (a1 == 1398031696 && a2 == 0xE400000000000000 || (sub_1D4922E38() & 1) != 0)
    return 5;
  if (a1 == 0x4445565245534552 && a2 == 0xE900000000000031 || (sub_1D4922E38() & 1) != 0)
    return 6;
  if (a1 == 0xD000000000000010 && a2 == 0x80000001D49401F0 || (sub_1D4922E38() & 1) != 0)
    return 7;
  if (a1 == 0x534C414D494E41 && a2 == 0xE700000000000000 || (sub_1D4922E38() & 1) != 0)
    return 8;
  if (a1 == 0x525554504C554353 && a2 == 0xE900000000000045 || (sub_1D4922E38() & 1) != 0)
    return 9;
  if (a1 == 0x454E494C594B53 && a2 == 0xE700000000000000 || (sub_1D4922E38() & 1) != 0)
    return 10;
  if (a1 == 1398030659 && a2 == 0xE400000000000000 || (sub_1D4922E38() & 1) != 0)
    return 11;
  if (a1 == 1397182276 && a2 == 0xE400000000000000 || (sub_1D4922E38() & 1) != 0)
    return 12;
  if (a1 == 1263488834 && a2 == 0xE400000000000000 || (sub_1D4922E38() & 1) != 0)
    return 13;
  if (a1 == 0x4D55424C41 && a2 == 0xE500000000000000 || (sub_1D4922E38() & 1) != 0)
    return 14;
  if (a1 == 1146243394 && a2 == 0xE400000000000000 || (sub_1D4922E38() & 1) != 0)
    return 15;
  if (a1 == 0x53544345534E49 && a2 == 0xE700000000000000 || (sub_1D4922E38() & 1) != 0)
    return 16;
  if (a1 == 0x4C414D4D414DLL && a2 == 0xE600000000000000 || (sub_1D4922E38() & 1) != 0)
    return 17;
  if (a1 == 0x454C4954504552 && a2 == 0xE700000000000000 || (sub_1D4922E38() & 1) != 0)
    return 18;
  if (a1 == 0x4C455241505041 && a2 == 0xE700000000000000 || (sub_1D4922E38() & 1) != 0)
    return 19;
  if (a1 == 0x524F535345434341 && a2 == 0xEB00000000534549 || (sub_1D4922E38() & 1) != 0)
    return 25;
  if (a1 == 1146048326 && a2 == 0xE400000000000000 || (sub_1D4922E38() & 1) != 0)
    return 20;
  if (a1 == 0x4F524645524F5453 && a2 == 0xEA0000000000544ELL || (sub_1D4922E38() & 1) != 0)
    return 21;
  if (a1 == 0xD000000000000013 && a2 == 0x80000001D4940210 || (sub_1D4922E38() & 1) != 0)
    return 22;
  if (a1 == 0x4D59535F4F545541 && a2 == 0xEB000000004C4F42 || (sub_1D4922E38() & 1) != 0)
    return 23;
  if (a1 == 0xD000000000000011 && a2 == 0x80000001D4940230)
    return 24;
  v6 = sub_1D4922E38();
  v4 = 100;
  if ((v6 & 1) != 0)
    return 24;
  return v4;
}

uint64_t sub_1D46B5778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;

  v8 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
  sub_1D4922010();
  v12 = *(_QWORD *)(a3 + 16);
  if (v12)
  {
    v20 = a1;
    v21 = a2;
    swift_bridgeObjectRetain();
    v13 = a3 + 48;
    v14 = MEMORY[0x1E0DEE9D8];
    do
    {
      v15 = *(_QWORD *)(v13 - 16);
      v16 = *(_QWORD *)(v13 - 8);
      swift_bridgeObjectRetain();
      sub_1D46B3B28(v15, v16);
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1D48A9460(0, *(_QWORD *)(v14 + 16) + 1, 1, v14);
      v18 = *(_QWORD *)(v14 + 16);
      v17 = *(_QWORD *)(v14 + 24);
      if (v18 >= v17 >> 1)
        v14 = sub_1D48A9460(v17 > 1, v18 + 1, 1, v14);
      v13 += 24;
      *(_QWORD *)(v14 + 16) = v18 + 1;
      sub_1D469C630((uint64_t)v11, v14+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v18, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult);
      --v12;
    }
    while (v12);
    result = swift_bridgeObjectRelease_n();
    a1 = v20;
    a2 = v21;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v14 = MEMORY[0x1E0DEE9D8];
  }
  a4[1] = a2;
  a4[2] = v14;
  *a4 = a1;
  return result;
}

uint64_t sub_1D46B592C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD v16[3];
  _QWORD *v17;

  v1 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult(0);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0[2];
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v16[2] = v0[2];
    v17 = v0;
    v7 = v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v8 = *(_QWORD *)(v2 + 72);
    swift_bridgeObjectRetain();
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v16[0] = "event_destruction";
    v16[1] = "DomainKnowledgeIdsMapping";
    do
    {
      sub_1D469C304(v7, (uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult);
      if (v4[8] == 1)
        __asm { BR              X9 }
      v10 = *((_DWORD *)v4 + 3);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = sub_1D48A9474(0, v9[2] + 1, 1, v9);
      v12 = v9[2];
      v11 = v9[3];
      if (v12 >= v11 >> 1)
        v9 = sub_1D48A9474((_QWORD *)(v11 > 1), v12 + 1, 1, v9);
      v9[2] = v12 + 1;
      v13 = (char *)&v9[3 * v12];
      strcpy(v13 + 32, "unrecognized");
      v13[45] = 0;
      *((_WORD *)v13 + 23) = -5120;
      *((_DWORD *)v13 + 12) = v10;
      sub_1D4697DE0((uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult);
      v7 += v8;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    v0 = v17;
  }
  v14 = *v0;
  swift_bridgeObjectRetain();
  return v14;
}

uint64_t sub_1D46B5CC4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  int v11;
  int v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  char isUniquelyReferenced_nonNull_native;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v30[2];
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v1 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult(0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (_QWORD *)sub_1D47C3B60(MEMORY[0x1E0DEE9D8]);
  v6 = v0[1];
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = v6 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v9 = *(_QWORD *)(v2 + 72);
    v31 = v0;
    v32 = v9;
    v30[1] = v6;
    swift_bridgeObjectRetain();
    v10 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult;
    while (1)
    {
      sub_1D469C304(v8, (uint64_t)v4, v10);
      v11 = v4[8];
      v33 = v7;
      if (v11 == 1)
        __asm { BR              X9 }
      v12 = *((_DWORD *)v4 + 3);
      v13 = v4;
      v14 = (uint64_t)v4;
      v15 = v10;
      sub_1D4697DE0(v14, v10);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v34 = v5;
      v18 = sub_1D47CA4DC(0x6E676F6365726E75, 0xEC00000064657A69);
      v19 = v5[2];
      v20 = (v17 & 1) == 0;
      v21 = v19 + v20;
      if (__OFADD__(v19, v20))
      {
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        sub_1D4922E8C();
        __break(1u);
        JUMPOUT(0x1D46B619CLL);
      }
      v22 = v17;
      if (v5[3] >= v21)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v5 = v34;
          if ((v17 & 1) == 0)
            goto LABEL_14;
        }
        else
        {
          sub_1D47ADA8C();
          v5 = v34;
          if ((v22 & 1) == 0)
            goto LABEL_14;
        }
      }
      else
      {
        sub_1D47A4190(v21, isUniquelyReferenced_nonNull_native);
        v23 = sub_1D47CA4DC(0x6E676F6365726E75, 0xEC00000064657A69);
        if ((v22 & 1) != (v24 & 1))
          goto LABEL_22;
        v18 = v23;
        v5 = v34;
        if ((v22 & 1) == 0)
        {
LABEL_14:
          v5[(v18 >> 6) + 8] |= 1 << v18;
          v25 = v5[6] + 16 * v18;
          strcpy((char *)v25, "unrecognized");
          *(_BYTE *)(v25 + 13) = 0;
          *(_WORD *)(v25 + 14) = -5120;
          *(_DWORD *)(v5[7] + 4 * v18) = v12;
          v26 = v5[2];
          v27 = __OFADD__(v26, 1);
          v28 = v26 + 1;
          if (v27)
            goto LABEL_21;
          v5[2] = v28;
          swift_bridgeObjectRetain();
          goto LABEL_4;
        }
      }
      *(_DWORD *)(v5[7] + 4 * v18) = v12;
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 += v32;
      v7 = v33 - 1;
      v10 = v15;
      v4 = v13;
      if (v33 == 1)
      {
        swift_bridgeObjectRelease();
        v0 = v31;
        return *(unsigned int *)v0;
      }
    }
  }
  return *(unsigned int *)v0;
}

uint64_t sub_1D46B6204@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  __int128 v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  int64_t v49;
  _QWORD *v50;
  char *v51;
  unint64_t v52;
  unint64_t *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  size_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t *v67;
  uint64_t result;
  __int128 *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t *v77;
  _QWORD *v78;
  _QWORD *v79;
  _QWORD *v80;
  _QWORD *v81;
  char *v82;
  unint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  _QWORD *v87[5];
  unint64_t v88;
  _OWORD v89[3];
  _BYTE v90[28];

  v69 = a1;
  v3 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult(0);
  v84 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult(0);
  v74 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E758);
  MEMORY[0x1E0C80A78](v8);
  v81 = (__int128 **)((char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80 = (_QWORD *)type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  v79 = (_QWORD *)*(v80 - 1);
  v10 = MEMORY[0x1E0C80A78](v80);
  v72 = (uint64_t)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v78 = (__int128 **)((char *)&v69 - v12);
  v13 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult(0);
  v71 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v76 = (uint64_t)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v82 = (char *)&v69 - v16;
  v17 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)a2 = MEMORY[0x1E0DEE9D8];
  *(_DWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = v21;
  *(_QWORD *)(a2 + 24) = v21;
  v22 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion(0);
  sub_1D4922010();
  v23 = a2 + *(int *)(v22 + 36);
  v83 = *(_QWORD *)(v18 + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v83)(v23, 1, 1, v17);
  v24 = v69;
  v25 = v69[1];
  v85 = *v69;
  v86 = v25;
  sub_1D4696EA4(&qword_1ED98E778, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect, (uint64_t)&unk_1D4930694);
  sub_1D49221FC();
  sub_1D46992EC(v23, &qword_1ED98E798);
  sub_1D469C630((uint64_t)v20, v23, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v83)(v23, 0, 1, v17);
  *(_DWORD *)(a2 + 8) = *((_DWORD *)v24 + 17);
  swift_bridgeObjectRelease();
  v77 = (unint64_t *)a2;
  *(_QWORD *)a2 = MEMORY[0x1E0DEE9D8];
  v26 = *((_QWORD *)v24 + 6);
  v27 = *(_QWORD *)(v26 + 16);
  if (v27)
  {
    v28 = swift_bridgeObjectRetain();
    v29 = 32;
    v30 = (uint64_t)v82;
    v70 = v13;
    v73 = v26;
    do
    {
      v83 = v27;
      v82 = (char *)v29;
      v31 = (_OWORD *)(v26 + v29);
      v89[0] = *v31;
      v32 = v31[1];
      v33 = v31[2];
      v34 = v31[3];
      *(_OWORD *)&v90[12] = *(_OWORD *)((char *)v31 + 60);
      v89[2] = v33;
      *(_OWORD *)v90 = v34;
      v89[1] = v32;
      MEMORY[0x1E0C80A78](v28);
      sub_1D46BC2D4((uint64_t)v89);
      sub_1D4696EA4(&qword_1ED98E880, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult, (uint64_t)&unk_1D4930C5C);
      sub_1D49221FC();
      v35 = *(_QWORD *)&v90[8];
      v36 = *(_QWORD *)&v90[16];
      swift_bridgeObjectRetain();
      v37 = v81;
      sub_1D46B4948(v35, v36, (uint64_t)v81);
      swift_bridgeObjectRelease();
      v38 = v30;
      v39 = v13;
      v40 = v79;
      v41 = v80;
      if (((unsigned int (*)(_QWORD *, uint64_t, _QWORD *))v79[6])(v37, 1, v80) == 1)
      {
        sub_1D4697DE0(v38, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult);
        sub_1D46BC308((uint64_t)v89);
        v28 = sub_1D46992EC((uint64_t)v37, &qword_1ED98E758);
        v13 = v39;
        v30 = v38;
        v26 = v73;
      }
      else
      {
        v42 = v78;
        sub_1D469C630((uint64_t)v37, (uint64_t)v78, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
        v43 = v72;
        sub_1D469C304((uint64_t)v42, v72, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
        v44 = v38 + *(int *)(v39 + 32);
        sub_1D46992EC(v44, &qword_1ED98E758);
        sub_1D469C630(v43, v44, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
        ((void (*)(uint64_t, _QWORD, uint64_t, _QWORD *))v40[7])(v44, 0, 1, v41);
        sub_1D46BC308((uint64_t)v89);
        *(_DWORD *)(v38 + 4) = *(_DWORD *)&v90[24];
        sub_1D469C304(v38, v76, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult);
        v45 = *v77;
        v30 = v38;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v45 = sub_1D48A949C(0, *(_QWORD *)(v45 + 16) + 1, 1, v45);
        v26 = v73;
        v47 = *(_QWORD *)(v45 + 16);
        v46 = *(_QWORD *)(v45 + 24);
        v13 = v70;
        if (v47 >= v46 >> 1)
          v45 = sub_1D48A949C(v46 > 1, v47 + 1, 1, v45);
        *(_QWORD *)(v45 + 16) = v47 + 1;
        sub_1D469C630(v76, v45+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(_QWORD *)(v71 + 72) * v47, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult);
        *v77 = v45;
        sub_1D4697DE0((uint64_t)v78, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
        v28 = sub_1D4697DE0(v30, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult);
      }
      v29 = (uint64_t)(v82 + 80);
      v27 = v83 - 1;
    }
    while (v83 != 1);
    swift_bridgeObjectRelease();
  }
  v48 = *((_QWORD *)v69 + 7);
  v49 = *(_QWORD *)(v48 + 16);
  v50 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v49)
  {
    v88 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1D48ABFD8(0, v49, 0);
    v51 = 0;
    v52 = v88;
    v72 = v48;
    v76 = v48 + 32;
    v73 = v49;
    while (1)
    {
      v82 = v51;
      v53 = (unint64_t *)(v76 + 16 * (_QWORD)v51);
      v55 = *v53;
      v54 = v53[1];
      *((_QWORD *)v7 + 1) = v50;
      swift_bridgeObjectRetain();
      sub_1D4922010();
      if ((v55 & 0x8000000000000000) != 0 || HIDWORD(v55))
        break;
      v83 = v52;
      *(_DWORD *)v7 = v55;
      v56 = *(_QWORD *)(v54 + 16);
      if (v56)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98ECB0);
        v50 = (_QWORD *)swift_allocObject();
        v57 = _swift_stdlib_malloc_size(v50);
        v50[2] = v56;
        v50[3] = 2 * ((uint64_t)(v57 - 32) / 24);
        v81 = (_QWORD *)sub_1D46BDE34((uint64_t)v87, (uint64_t)(v50 + 4), v56, v54);
        v80 = v87[1];
        v79 = v87[3];
        v78 = v87[4];
        swift_bridgeObjectRetain_n();
        sub_1D46BE038();
        if (v81 != (_QWORD *)v56)
        {
          __break(1u);
          break;
        }
        swift_bridgeObjectRelease();
      }
      v87[0] = v50;
      sub_1D46BC14C(v87);
      swift_bridgeObjectRelease();
      v58 = v87[0];
      v59 = v87[0][2];
      v81 = v87[0];
      if (v59)
      {
        v60 = sub_1D4696EA4(&qword_1ED98E820, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult, (uint64_t)&unk_1D4930964);
        v61 = v58 + 6;
        do
        {
          MEMORY[0x1E0C80A78](v60);
          swift_bridgeObjectRetain();
          sub_1D49221FC();
          swift_bridgeObjectRelease();
          v62 = *((_QWORD *)v7 + 1);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v62 = sub_1D48A9488(0, *(_QWORD *)(v62 + 16) + 1, 1, v62);
          v64 = *(_QWORD *)(v62 + 16);
          v63 = *(_QWORD *)(v62 + 24);
          if (v64 >= v63 >> 1)
            v62 = sub_1D48A9488(v63 > 1, v64 + 1, 1, v62);
          v61 += 3;
          *(_QWORD *)(v62 + 16) = v64 + 1;
          v60 = sub_1D469C630((uint64_t)v5, v62+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ *(_QWORD *)(v84 + 72) * v64, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult);
          *((_QWORD *)v7 + 1) = v62;
          --v59;
        }
        while (v59);
      }
      swift_release();
      v52 = v83;
      v88 = v83;
      v66 = *(_QWORD *)(v83 + 16);
      v65 = *(_QWORD *)(v83 + 24);
      if (v66 >= v65 >> 1)
      {
        sub_1D48ABFD8(v65 > 1, v66 + 1, 1);
        v52 = v88;
      }
      v51 = v82 + 1;
      *(_QWORD *)(v52 + 16) = v66 + 1;
      sub_1D469C630((uint64_t)v7, v52+ ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80))+ *(_QWORD *)(v74 + 72) * v66, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult);
      v50 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v51 == (char *)v73)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
    }
    sub_1D4922C28();
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  else
  {
    v52 = MEMORY[0x1E0DEE9D8];
LABEL_31:
    v67 = v77;
    result = swift_bridgeObjectRelease();
    v67[2] = v52;
  }
  return result;
}

unint64_t sub_1D46B6CB4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v23 = a2;
  v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion(0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD *)((char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(_QWORD *)(v2 + 16);
  v13 = *(_QWORD *)(v12 + 16);
  if (!v13)
    return MEMORY[0x1E0DEE9D8];
  v14 = *a1;
  v15 = v12 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  v21 = *(_QWORD *)(v9 + 72);
  v22 = v14;
  v20[1] = v12;
  swift_bridgeObjectRetain();
  v16 = MEMORY[0x1E0DEE9D8];
  do
  {
    sub_1D469C304(v15, (uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion);
    v24 = v22;
    sub_1D46B6E8C(v11, &v24, v23, (uint64_t)v7);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_1D48A8614(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
    v18 = *(_QWORD *)(v16 + 16);
    v17 = *(_QWORD *)(v16 + 24);
    if (v18 >= v17 >> 1)
      v16 = sub_1D48A8614(v17 > 1, v18 + 1, 1, v16);
    *(_QWORD *)(v16 + 16) = v18 + 1;
    sub_1D469C630((uint64_t)v7, v16+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v18, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1D4697DE0((uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion);
    v15 += v21;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v16;
}

double sub_1D46B6E8C@<D0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  double *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int *v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  int64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  _OWORD *v92;
  char v93;
  _QWORD *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _OWORD *v103;
  uint64_t v104;
  uint64_t v105;
  _OWORD *v106;
  uint64_t v107;
  _OWORD *v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  _OWORD *v112;
  uint64_t v113;
  uint64_t v114;
  unsigned int v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  char *v122;
  unint64_t v123;
  unint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  _QWORD *v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  double result;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t *v157;
  double v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  _OWORD *v162;
  _OWORD *v163;
  _OWORD *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  _QWORD *v178;
  _QWORD *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t (*v185)(char *, uint64_t, uint64_t);
  _QWORD *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  _QWORD *v191;

  v155 = a3;
  v159 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED98E3F8);
  MEMORY[0x1E0C80A78](v6);
  v156 = (char *)&v151 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
  v153 = *(_QWORD *)(v154 - 8);
  MEMORY[0x1E0C80A78](v154);
  v157 = (uint64_t *)((char *)&v151 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult(0);
  v152 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v182 = (uint64_t)&v151 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E758);
  MEMORY[0x1E0C80A78](v11);
  v173 = (char *)&v151 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  v181 = *(_QWORD *)(v172 - 8);
  MEMORY[0x1E0C80A78](v172);
  v186 = (uint64_t *)((char *)&v151 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v184 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult(0);
  v179 = *(_QWORD **)(v184 - 8);
  MEMORY[0x1E0C80A78](v184);
  v171 = (char *)&v151 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E798);
  v16 = MEMORY[0x1E0C80A78](v15);
  v165 = (char *)&v151 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v167 = (uint64_t)&v151 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v177 = (char *)&v151 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v166 = (uint64_t)&v151 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v187 = (char *)&v151 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v151 - v27;
  v29 = MEMORY[0x1E0C80A78](v26);
  v31 = (char *)&v151 - v30;
  MEMORY[0x1E0C80A78](v29);
  v33 = (char *)&v151 - v32;
  v34 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = MEMORY[0x1E0C80A78](v34);
  v164 = (_OWORD *)((char *)&v151 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = MEMORY[0x1E0C80A78](v36);
  v163 = (_OWORD *)((char *)&v151 - v39);
  v40 = MEMORY[0x1E0C80A78](v38);
  v162 = (_OWORD *)((char *)&v151 - v41);
  v42 = MEMORY[0x1E0C80A78](v40);
  v169 = (char *)&v151 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v183 = (char *)&v151 - v45;
  v46 = MEMORY[0x1E0C80A78](v44);
  v48 = (_OWORD *)((char *)&v151 - v47);
  v49 = MEMORY[0x1E0C80A78](v46);
  v51 = (char *)&v151 - v50;
  MEMORY[0x1E0C80A78](v49);
  v53 = (double *)((char *)&v151 - v52);
  v176 = *a2;
  v54 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion(0)
               + 36);
  v160 = a1;
  v55 = (uint64_t)a1 + v54;
  sub_1D469C5EC((uint64_t)a1 + v54, (uint64_t)v33, &qword_1ED98E798);
  v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  v57 = v34;
  v185 = v56;
  if (v56(v33, 1, v34) == 1)
  {
    *(_OWORD *)v53 = 0u;
    *((_OWORD *)v53 + 1) = 0u;
    sub_1D4922010();
    sub_1D46992EC((uint64_t)v33, &qword_1ED98E798);
  }
  else
  {
    sub_1D469C630((uint64_t)v33, (uint64_t)v53, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  }
  v58 = (uint64_t)v177;
  v59 = v176;
  v60 = *v53;
  sub_1D4697DE0((uint64_t)v53, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  sub_1D469C5EC(v55, (uint64_t)v31, &qword_1ED98E798);
  v61 = v185(v31, 1, v57);
  v158 = v60;
  if (v61 == 1)
  {
    *(_OWORD *)v51 = 0u;
    *((_OWORD *)v51 + 1) = 0u;
    sub_1D4922010();
    sub_1D46992EC((uint64_t)v31, &qword_1ED98E798);
  }
  else
  {
    sub_1D469C630((uint64_t)v31, (uint64_t)v51, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  }
  v62 = (uint64_t)v187;
  v63 = *((_QWORD *)v51 + 1);
  sub_1D4697DE0((uint64_t)v51, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  sub_1D469C5EC(v55, (uint64_t)v28, &qword_1ED98E798);
  if (v185(v28, 1, v57) == 1)
  {
    *v48 = 0u;
    v48[1] = 0u;
    sub_1D4922010();
    sub_1D46992EC((uint64_t)v28, &qword_1ED98E798);
  }
  else
  {
    sub_1D469C630((uint64_t)v28, (uint64_t)v48, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  }
  v64 = (uint64_t)v183;
  v65 = *((_QWORD *)v48 + 2);
  sub_1D4697DE0((uint64_t)v48, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  sub_1D469C5EC(v55, v62, &qword_1ED98E798);
  if (v185((char *)v62, 1, v57) == 1)
  {
    *(_OWORD *)v64 = 0u;
    *(_OWORD *)(v64 + 16) = 0u;
    sub_1D4922010();
    sub_1D46992EC(v62, &qword_1ED98E798);
  }
  else
  {
    sub_1D469C630(v62, v64, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  }
  v66 = v182;
  v67 = *(_QWORD *)(v64 + 24);
  sub_1D4697DE0(v64, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  v68 = *v160;
  v69 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v180 = *(char **)(*v160 + 16);
  if (v180)
  {
    v161 = v57;
    v175 = v68 + ((*((unsigned __int8 *)v179 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v179 + 80));
    v174 = v179[9];
    v151 = v68;
    swift_bridgeObjectRetain();
    v70 = 0;
    v179 = v69;
    v178 = v69;
    v71 = (uint64_t)v173;
    v72 = v172;
    v73 = (unsigned int *)v171;
    while (1)
    {
      sub_1D469C304(v175 + v174 * (_QWORD)v70, (uint64_t)v73, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult);
      sub_1D469C5EC((uint64_t)v73 + *(int *)(v184 + 32), v71, &qword_1ED98E758);
      v74 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v181 + 48))(v71, 1, v72);
      v187 = v70;
      v75 = v59;
      v76 = v58;
      if (v74 == 1)
      {
        v77 = v186;
        *v186 = v69;
        v77[1] = 0;
        v77[2] = 0xE000000000000000;
        v78 = v72;
        sub_1D4922010();
        sub_1D46992EC(v71, &qword_1ED98E758);
      }
      else
      {
        v78 = v72;
        v77 = v186;
        sub_1D469C630(v71, (uint64_t)v186, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
      }
      v79 = *v77;
      v80 = *(_QWORD *)(*v77 + 16);
      if (v80)
      {
        v191 = v69;
        swift_bridgeObjectRetain();
        sub_1D48AB4A4(0, v80, 0);
        v81 = 0;
        v69 = v191;
        do
        {
          v188 = *(_QWORD *)(v79 + 8 * v81 + 32);
          v189 = 81;
          v190 = 0xE100000000000000;
          sub_1D4922E14();
          sub_1D492270C();
          swift_bridgeObjectRelease();
          v82 = v189;
          v83 = v190;
          v191 = v69;
          v85 = v69[2];
          v84 = v69[3];
          if (v85 >= v84 >> 1)
          {
            sub_1D48AB4A4(v84 > 1, v85 + 1, 1);
            v69 = v191;
          }
          ++v81;
          v69[2] = v85 + 1;
          v86 = &v69[2 * v85];
          v86[4] = v82;
          v86[5] = v83;
        }
        while (v80 != v81);
        swift_bridgeObjectRelease();
        v71 = (uint64_t)v173;
        v72 = v172;
        v87 = v186;
        v73 = (unsigned int *)v171;
        v58 = (uint64_t)v177;
        v59 = v176;
      }
      else
      {
        v72 = v78;
        v58 = v76;
        v59 = v75;
        v87 = v77;
      }
      v189 = (uint64_t)v69;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D200);
      sub_1D46BF03C((unint64_t *)&qword_1ED98D208, &qword_1ED98D200, MEMORY[0x1E0DEAF20]);
      v88 = sub_1D49225D4();
      v90 = v89;
      swift_bridgeObjectRelease();
      sub_1D4697DE0((uint64_t)v87, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
      if (*(_QWORD *)(v59 + 16))
      {
        swift_bridgeObjectRetain();
        v91 = sub_1D47CA4DC(v88, v90);
        v92 = v169;
        if ((v93 & 1) != 0)
        {
          v94 = *(_QWORD **)(*(_QWORD *)(v59 + 56) + 8 * v91);
          swift_retain();
          swift_bridgeObjectRelease();
          v95 = v94[3];
          v168 = v94[2];
          v96 = (char *)v94[5];
          v170 = v94[4];
          v97 = v95;
          swift_bridgeObjectRetain();
          v183 = v96;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_release();
          v98 = (uint64_t)v73 + *(int *)(v184 + 28);
          v99 = v166;
          sub_1D469C5EC(v98, v166, &qword_1ED98E798);
          v100 = v161;
          if (v185((char *)v99, 1, v161) == 1)
          {
            *v92 = 0u;
            v92[1] = 0u;
            sub_1D4922010();
            sub_1D46992EC(v99, &qword_1ED98E798);
          }
          else
          {
            sub_1D469C630(v99, (uint64_t)v92, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
          }
          v101 = (uint64_t)v165;
          v102 = *(_QWORD *)v92;
          sub_1D4697DE0((uint64_t)v92, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
          sub_1D469C5EC(v98, v58, &qword_1ED98E798);
          if (v185((char *)v58, 1, v100) == 1)
          {
            v103 = v162;
            *v162 = 0u;
            v103[1] = 0u;
            sub_1D4922010();
            sub_1D46992EC(v58, &qword_1ED98E798);
          }
          else
          {
            v103 = v162;
            sub_1D469C630(v58, (uint64_t)v162, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
          }
          v104 = *((_QWORD *)v103 + 1);
          sub_1D4697DE0((uint64_t)v103, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
          v105 = v167;
          sub_1D469C5EC(v98, v167, &qword_1ED98E798);
          if (v185((char *)v105, 1, v100) == 1)
          {
            v106 = v163;
            *v163 = 0u;
            v106[1] = 0u;
            sub_1D4922010();
            v107 = v105;
            v108 = v106;
            sub_1D46992EC(v107, &qword_1ED98E798);
          }
          else
          {
            v109 = v105;
            v108 = v163;
            sub_1D469C630(v109, (uint64_t)v163, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
          }
          v69 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          v110 = *((_QWORD *)v108 + 2);
          sub_1D4697DE0((uint64_t)v108, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
          sub_1D469C5EC(v98, v101, &qword_1ED98E798);
          v111 = v185((char *)v101, 1, v100);
          v58 = (uint64_t)v177;
          v112 = v164;
          if (v111 == 1)
          {
            *v164 = 0u;
            v112[1] = 0u;
            sub_1D4922010();
            sub_1D46992EC(v101, &qword_1ED98E798);
          }
          else
          {
            sub_1D469C630(v101, (uint64_t)v164, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
          }
          v59 = v176;
          v71 = (uint64_t)v173;
          v113 = *((_QWORD *)v112 + 3);
          sub_1D4697DE0((uint64_t)v112, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
          v114 = *v73;
          v115 = v73[1];
          v116 = v97;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v179 = sub_1D48A8B64(0, v179[2] + 1, 1, v179);
          v117 = v168;
          v119 = v179[2];
          v118 = v179[3];
          if (v119 >= v118 >> 1)
            v179 = sub_1D48A8B64((_QWORD *)(v118 > 1), v119 + 1, 1, v179);
          v120 = v179;
          v179[2] = v119 + 1;
          v121 = &v120[10 * v119];
          v121[4] = v114;
          v121[5] = v102;
          v121[6] = v104;
          v121[7] = v110;
          v121[8] = v113;
          v121[9] = v117;
          v121[10] = v116;
          v122 = v183;
          v121[11] = v170;
          v121[12] = v122;
          *((_DWORD *)v121 + 26) = v115;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v178 = sub_1D48A8A58(0, v178[2] + 1, 1, v178);
          v73 = (unsigned int *)v171;
          v124 = v178[2];
          v123 = v178[3];
          if (v124 >= v123 >> 1)
            v178 = sub_1D48A8A58((_QWORD *)(v123 > 1), v124 + 1, 1, v178);
          v125 = v178;
          v178[2] = v124 + 1;
          v126 = &v125[4 * v124];
          v126[4] = v117;
          v126[5] = v116;
          v127 = v183;
          v126[6] = v170;
          v126[7] = v127;
          v72 = v172;
          goto LABEL_17;
        }
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v69 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_17:
      v70 = v187 + 1;
      sub_1D4697DE0((uint64_t)v73, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult);
      if (v70 == v180)
      {
        swift_bridgeObjectRelease();
        v66 = v182;
        goto LABEL_54;
      }
    }
  }
  v179 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v178 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_54:
  v128 = v160[2];
  v129 = *(_QWORD *)(v128 + 16);
  v130 = MEMORY[0x1E0DEE9D8];
  if (v129)
  {
    v131 = v128 + ((*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80));
    v132 = *(_QWORD *)(v152 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1D469C304(v131, v66, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult);
      v133 = sub_1D46B5CC4();
      v135 = v134;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v69 = sub_1D48A894C(0, v69[2] + 1, 1, v69);
      v137 = v69[2];
      v136 = v69[3];
      if (v137 >= v136 >> 1)
        v69 = sub_1D48A894C((_QWORD *)(v136 > 1), v137 + 1, 1, v69);
      v69[2] = v137 + 1;
      v138 = &v69[2 * v137];
      v138[4] = v133;
      v138[5] = v135;
      v66 = v182;
      sub_1D4697DE0(v182, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult);
      v131 += v132;
      --v129;
    }
    while (v129);
    swift_bridgeObjectRelease();
    v139 = v157;
    v140 = (uint64_t)v156;
    v141 = v155;
    v142 = v154;
    v143 = v153;
    v130 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v69 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v139 = v157;
    v140 = (uint64_t)v156;
    v141 = v155;
    v142 = v154;
    v143 = v153;
  }
  v144 = v160[3];
  v145 = type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig(0);
  sub_1D469C5EC(v141 + *(int *)(v145 + 32), v140, qword_1ED98E3F8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v143 + 48))(v140, 1, v142) == 1)
  {
    *v139 = v130;
    sub_1D4922010();
    sub_1D46992EC(v140, qword_1ED98E3F8);
  }
  else
  {
    sub_1D469C630(v140, (uint64_t)v139, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig);
  }
  v146 = sub_1D46B8F80(v139, v144);
  sub_1D4697DE0((uint64_t)v139, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig);
  v147 = *((_DWORD *)v160 + 2);
  v148 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v149 = v159;
  sub_1D4920FCC();
  result = v158;
  *(double *)v149 = v158;
  *(_QWORD *)(v149 + 8) = v63;
  *(_QWORD *)(v149 + 16) = v65;
  *(_QWORD *)(v149 + 24) = v67;
  *(_QWORD *)(v149 + 32) = v178;
  *(_QWORD *)(v149 + 40) = v130;
  *(_QWORD *)(v149 + 48) = v179;
  *(_QWORD *)(v149 + 56) = v69;
  *(_DWORD *)(v149 + 64) = 0;
  *(_DWORD *)(v149 + 68) = v147;
  *(_QWORD *)(v149 + 80) = 0;
  *(_QWORD *)(v149 + 88) = 0;
  *(_QWORD *)(v149 + 72) = 0;
  *(_BYTE *)(v149 + 96) = 0;
  *(_QWORD *)(v149 + 104) = v146;
  *(_BYTE *)(v149 + *(int *)(v148 + 60)) = 0;
  return result;
}

uint64_t sub_1D46B7F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  int64_t v46;
  int isUniquelyReferenced_nonNull_native;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  CGFloat v73;
  CGFloat v74;
  CGFloat v75;
  CGFloat v76;
  CGFloat v77;
  CGFloat v78;
  CGFloat v79;
  CGFloat v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v87;
  double v88;
  double v90;
  double v91;
  double v93;
  double v94;
  double v95;
  unint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t *v107;
  void *v108;
  void *v109;
  uint64_t *v110;
  double *v111;
  uint64_t v112;
  NSObject *v113;
  char *v114;
  uint64_t v115;
  os_log_type_t v116;
  uint64_t v117;
  uint64_t v118;
  CGFloat v119;
  CGFloat v120;
  CGFloat v121;
  CGFloat v122;
  uint64_t v123;
  CGFloat MinX;
  uint64_t v125;
  unint64_t v126;
  CGFloat MinY;
  CGFloat Width;
  CGFloat Height;
  uint64_t v130;
  unint64_t v131;
  _QWORD v132[2];
  unint64_t v133;
  char *v134;
  uint64_t v135;
  unint64_t v136;
  __int128 v137;
  __int128 v138;
  uint64_t v139;
  double *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  double v156;
  double v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  CGFloat v163;
  CGFloat v164;
  CGFloat v165;
  CGFloat v166;
  uint64_t v167;
  uint64_t v168;
  CGRect v169;
  CGRect v170;
  CGRect v171;
  CGRect v172;
  CGRect v173;
  CGRect v174;
  CGRect v175;
  CGRect v176;
  CGRect v177;
  CGRect v178;
  CGRect v179;
  CGRect v180;

  v152 = sub_1D4922370();
  v144 = *(_QWORD *)(v152 - 8);
  MEMORY[0x1E0C80A78](v152);
  v143 = (char *)v132 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E798);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v132 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  v161 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v132 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion(0);
  v139 = *(_QWORD *)(v160 - 8);
  MEMORY[0x1E0C80A78](v160);
  v167 = (uint64_t)v132 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals(0);
  v141 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (_QWORD *)((char *)v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED98E3F8);
  MEMORY[0x1E0C80A78](v18);
  v151 = (char *)v132 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
  v150 = *(_QWORD *)(v153 - 8);
  MEMORY[0x1E0C80A78](v153);
  v149 = (_QWORD *)((char *)v132 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x1E0C80A78](v21);
  v140 = (double *)((char *)v132 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v23);
  v162 = (_QWORD *)((char *)v132 - v25);
  v142 = a3;
  result = sub_1D469C304(v3, a3, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
  v148 = *(_QWORD *)(a1 + 16);
  if (!v148)
    return result;
  v147 = a2 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig(0) + 32);
  v146 = a1 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  v145 = *(_QWORD *)(v22 + 72);
  v132[1] = a1;
  swift_bridgeObjectRetain();
  v27 = 0;
  v134 = "neric";
  v133 = 0x80000001D493F830;
  *(_QWORD *)&v28 = 136315138;
  v138 = v28;
  v137 = xmmword_1D4927560;
  v136 = 0x80000001D493FD60;
  v135 = MEMORY[0x1E0DEE9B8] + 8;
  v156 = 0.0001;
  v158 = v11;
  v29 = (uint64_t)v151;
  v30 = v153;
  v157 = -0.0001;
  v159 = v10;
  while (1)
  {
    v154 = v27;
    v31 = v162;
    sub_1D469C304(v146 + v145 * v27, (uint64_t)v162, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v32 = v31[13];
    sub_1D469C5EC(v147, v29, qword_1ED98E3F8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v150 + 48))(v29, 1, v30) == 1)
    {
      v33 = v149;
      *v149 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1D4922010();
      v34 = v29;
      v35 = v33;
      sub_1D46992EC(v34, qword_1ED98E3F8);
    }
    else
    {
      v36 = v29;
      v35 = v149;
      sub_1D469C630(v36, (uint64_t)v149, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig);
      swift_bridgeObjectRetain();
    }
    v37 = sub_1D46BF07C(v32, (uint64_t)v35);
    v38 = *(_QWORD *)(v37 + 16);
    v155 = v37;
    if (v38)
    {
      v39 = v141;
      v40 = v37 + ((*(unsigned __int8 *)(v141 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80));
      swift_bridgeObjectRetain();
      v41 = *(_QWORD *)(v39 + 72);
      v42 = MEMORY[0x1E0DEE9D8];
      while (1)
      {
        sub_1D469C304(v40, (uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
        v43 = *v17;
        swift_bridgeObjectRetain();
        sub_1D4697DE0((uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
        v44 = *(_QWORD *)(v43 + 16);
        v45 = *(_QWORD *)(v42 + 16);
        v46 = v45 + v44;
        if (__OFADD__(v45, v44))
        {
          __break(1u);
LABEL_85:
          __break(1u);
LABEL_86:
          __break(1u);
LABEL_87:
          __break(1u);
          goto LABEL_88;
        }
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if (isUniquelyReferenced_nonNull_native && v46 <= *(_QWORD *)(v42 + 24) >> 1)
        {
          if (*(_QWORD *)(v43 + 16))
            goto LABEL_19;
        }
        else
        {
          if (v45 <= v46)
            v48 = v45 + v44;
          else
            v48 = v45;
          v42 = sub_1D48A94C4(isUniquelyReferenced_nonNull_native, v48, 1, v42);
          if (*(_QWORD *)(v43 + 16))
          {
LABEL_19:
            v49 = *(_QWORD *)(v42 + 16);
            v50 = (*(_QWORD *)(v42 + 24) >> 1) - v49;
            v51 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult(0);
            if (v50 < v44)
              goto LABEL_86;
            v52 = *(_QWORD *)(v51 - 8);
            v53 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
            v54 = *(_QWORD *)(v52 + 72);
            v55 = v42 + v53 + v54 * v49;
            v56 = v43 + v53;
            v57 = v54 * v44;
            v58 = v55 + v57;
            v59 = v56 + v57;
            if (v56 < v58 && v55 < v59)
              goto LABEL_89;
            swift_arrayInitWithCopy();
            if (v44)
            {
              v61 = *(_QWORD *)(v42 + 16);
              v62 = __OFADD__(v61, v44);
              v63 = v61 + v44;
              if (v62)
                goto LABEL_87;
              *(_QWORD *)(v42 + 16) = v63;
            }
            goto LABEL_9;
          }
        }
        if (v44)
          goto LABEL_85;
LABEL_9:
        swift_bridgeObjectRelease();
        v40 += v41;
        if (!--v38)
        {
          swift_bridgeObjectRelease();
          v30 = v153;
          goto LABEL_30;
        }
      }
    }
    v42 = MEMORY[0x1E0DEE9D8];
LABEL_30:
    v64 = *(_QWORD *)(v42 + 16);
    swift_bridgeObjectRelease();
    if (!v64)
    {
      sub_1D4697DE0((uint64_t)v162, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      swift_bridgeObjectRelease();
      goto LABEL_80;
    }
    v65 = *(_QWORD *)(v142 + 16);
    v66 = *(_QWORD *)(v65 + 16);
    if (v66)
      break;
    v98 = v143;
LABEL_59:
    swift_bridgeObjectRelease();
    v99 = v152;
    v100 = v144;
    if (qword_1ED98F398 != -1)
      swift_once();
    if (byte_1ED98F388 != 1)
    {
LABEL_74:
      v110 = qword_1ED98F3B0;
      v111 = v140;
      if (qword_1ED98F3D0 != -1)
      {
        swift_once();
        v110 = qword_1ED98F3B0;
      }
      goto LABEL_76;
    }
    v101 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v102 = objc_msgSend(v101, sel_bundleIdentifier);

    if (v102)
    {
      v103 = sub_1D492261C();
      v105 = v104;

      if (v103 == 0xD00000000000002BLL && v105 == v133)
      {
        swift_bridgeObjectRelease();
LABEL_67:
        v107 = &qword_1EFEAA908;
        if (qword_1EFEA9C20 != -1)
        {
          swift_once();
          v107 = &qword_1EFEAA908;
        }
        goto LABEL_71;
      }
      v106 = sub_1D4922E38();
      swift_bridgeObjectRelease();
      if ((v106 & 1) != 0)
        goto LABEL_67;
    }
    v107 = (uint64_t *)&off_1ED98F3F0;
    if (qword_1ED98F3A8 != -1)
    {
      swift_once();
      v107 = (uint64_t *)&off_1ED98F3F0;
    }
LABEL_71:
    v108 = *(void **)(*v107 + 32);
    swift_retain();
    v109 = (void *)sub_1D49225F8();
    LODWORD(v108) = objc_msgSend(v108, sel_BOOLForKey_, v109);
    swift_release();

    v30 = v153;
    if (!(_DWORD)v108)
      goto LABEL_74;
    v110 = qword_1EFEAAA30;
    v111 = v140;
    if (qword_1EFEA9C78 != -1)
    {
      swift_once();
      v110 = qword_1EFEAAA30;
    }
LABEL_76:
    v112 = __swift_project_value_buffer(v99, (uint64_t)v110);
    (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v98, v112, v99);
    sub_1D469C304((uint64_t)v162, (uint64_t)v111, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v113 = sub_1D4922358();
    v114 = v98;
    v115 = v100;
    v116 = sub_1D4922910();
    if (os_log_type_enabled(v113, v116))
    {
      v117 = swift_slowAlloc();
      v168 = swift_slowAlloc();
      v118 = v168;
      *(_DWORD *)v117 = v138;
      v119 = *v111;
      v120 = v111[1];
      v121 = v111[2];
      v122 = v111[3];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
      v123 = swift_allocObject();
      *(_OWORD *)(v123 + 16) = v137;
      v177.origin.x = v119;
      v177.origin.y = v120;
      v177.size.width = v121;
      v177.size.height = v122;
      MinX = CGRectGetMinX(v177);
      v125 = MEMORY[0x1E0DEF040];
      *(_QWORD *)(v123 + 56) = MEMORY[0x1E0DEF040];
      v126 = sub_1D46A492C();
      *(_QWORD *)(v123 + 64) = v126;
      *(CGFloat *)(v123 + 32) = MinX;
      v178.origin.x = v119;
      v178.origin.y = v120;
      v178.size.width = v121;
      v178.size.height = v122;
      MinY = CGRectGetMinY(v178);
      *(_QWORD *)(v123 + 96) = v125;
      *(_QWORD *)(v123 + 104) = v126;
      *(CGFloat *)(v123 + 72) = MinY;
      v179.origin.x = v119;
      v179.origin.y = v120;
      v179.size.width = v121;
      v179.size.height = v122;
      Width = CGRectGetWidth(v179);
      *(_QWORD *)(v123 + 136) = v125;
      *(_QWORD *)(v123 + 144) = v126;
      *(CGFloat *)(v123 + 112) = Width;
      v180.origin.x = v119;
      v180.origin.y = v120;
      v180.size.width = v121;
      v180.size.height = v122;
      Height = CGRectGetHeight(v180);
      *(_QWORD *)(v123 + 176) = v125;
      *(_QWORD *)(v123 + 184) = v126;
      v30 = v153;
      *(CGFloat *)(v123 + 152) = Height;
      v130 = sub_1D4922640();
      *(_QWORD *)(v117 + 4) = sub_1D47F0250(v130, v131, &v168);
      swift_bridgeObjectRelease();
      sub_1D4697DE0((uint64_t)v111, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      _os_log_impl(&dword_1D467C000, v113, v116, "Failed to find matched region for %s", (uint8_t *)v117, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v118, -1, -1);
      MEMORY[0x1D82635B8](v117, -1, -1);

      (*(void (**)(char *, uint64_t))(v144 + 8))(v143, v152);
    }
    else
    {
      sub_1D4697DE0((uint64_t)v111, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);

      (*(void (**)(char *, uint64_t))(v115 + 8))(v114, v152);
    }
    sub_1D4697DE0((uint64_t)v162, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
LABEL_80:
    v29 = (uint64_t)v151;
    v97 = v154;
LABEL_81:
    v27 = v97 + 1;
    if (v27 == v148)
      return swift_bridgeObjectRelease();
  }
  v67 = v139;
  v68 = (*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80);
  swift_bridgeObjectRetain();
  v69 = 0;
  v70 = *(_QWORD *)(v67 + 72);
  while (1)
  {
    v71 = v167;
    sub_1D469C304(v65 + v68, v167, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion);
    v72 = (uint64_t)v159;
    sub_1D469C5EC(v71 + *(int *)(v160 + 36), (uint64_t)v159, &qword_1ED98E798);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v161 + 48))(v72, 1, v158) == 1)
    {
      *(_OWORD *)v13 = 0u;
      *((_OWORD *)v13 + 1) = 0u;
      sub_1D4922010();
      sub_1D46992EC(v72, &qword_1ED98E798);
    }
    else
    {
      sub_1D469C630(v72, (uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    }
    v73 = *(double *)v13;
    v74 = *((double *)v13 + 1);
    v76 = *((double *)v13 + 2);
    v75 = *((double *)v13 + 3);
    sub_1D4697DE0((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    v77 = *(double *)v162;
    v78 = *((double *)v162 + 1);
    v79 = *((double *)v162 + 2);
    v80 = *((double *)v162 + 3);
    v165 = v74;
    v166 = v73;
    v169.origin.x = v73;
    v169.origin.y = v74;
    v163 = v75;
    v164 = v76;
    v169.size.width = v76;
    v169.size.height = v75;
    v81 = CGRectGetMinX(v169);
    v82 = v157;
    v83 = v81 + v157;
    v170.origin.x = v77;
    v170.origin.y = v78;
    v170.size.width = v79;
    v170.size.height = v80;
    v84 = CGRectGetMinX(v170);
    v85 = v156;
    if (v83 <= v84 && v84 <= v81 + v156)
    {
      v171.origin.y = v165;
      v171.origin.x = v166;
      v171.size.height = v163;
      v171.size.width = v164;
      v87 = CGRectGetMinY(v171);
      v172.origin.x = v77;
      v172.origin.y = v78;
      v172.size.width = v79;
      v172.size.height = v80;
      v88 = CGRectGetMinY(v172);
      if (v87 + v82 <= v88 && v88 <= v87 + v85)
      {
        v173.origin.y = v165;
        v173.origin.x = v166;
        v173.size.height = v163;
        v173.size.width = v164;
        v90 = CGRectGetWidth(v173);
        v174.origin.x = v77;
        v174.origin.y = v78;
        v174.size.width = v79;
        v174.size.height = v80;
        v91 = CGRectGetWidth(v174);
        if (v90 + v82 <= v91 && v91 <= v90 + v85)
        {
          v175.origin.y = v165;
          v175.origin.x = v166;
          v175.size.height = v163;
          v175.size.width = v164;
          v93 = CGRectGetHeight(v175);
          v176.origin.x = v77;
          v176.origin.y = v78;
          v176.size.width = v79;
          v176.size.height = v80;
          v94 = CGRectGetHeight(v176);
          if (v93 + v82 <= v94)
            break;
        }
      }
    }
    sub_1D4697DE0(v167, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion);
LABEL_50:
    ++v69;
    v68 += v70;
    if (v66 == v69)
    {
      swift_bridgeObjectRelease();
      v98 = v143;
      v30 = v153;
      goto LABEL_59;
    }
  }
  v95 = v94;
  sub_1D4697DE0(v167, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion);
  if (v95 > v93 + v85)
    goto LABEL_50;
  swift_bridgeObjectRelease();
  v96 = *(_QWORD *)(v142 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v96 = sub_1D47DFA98(v96);
  v29 = (uint64_t)v151;
  if (v69 < *(_QWORD *)(v96 + 16))
  {
    *(_QWORD *)(v96 + v68 + 24) = v155;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v142 + 16) = v96;
    sub_1D4697DE0((uint64_t)v162, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v30 = v153;
    v97 = v154;
    goto LABEL_81;
  }
LABEL_88:
  __break(1u);
LABEL_89:
  result = sub_1D4922C88();
  __break(1u);
  return result;
}

uint64_t sub_1D46B8DAC(_DWORD *a1, unint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a2;
  if ((*a2 & 0x8000000000000000) != 0 || HIDWORD(v9))
  {
    result = sub_1D4922C28();
    __break(1u);
  }
  else
  {
    *a1 = v9;
    MEMORY[0x1E0C80A78](v6);
    sub_1D4696EA4(&qword_1ED98E778, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect, (uint64_t)&unk_1D4930694);
    sub_1D49221FC();
    v10 = (uint64_t)a1
        + *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult(0)
                 + 28);
    sub_1D46992EC(v10, &qword_1ED98E798);
    sub_1D469C630((uint64_t)v8, v10, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
  }
  return result;
}

uint64_t sub_1D46B8F80(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  unint64_t v55;
  unint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  char v68;
  uint64_t *v69;
  void *v70;
  void *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  NSObject *v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t result;
  _QWORD v94[2];
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  __int128 v107;
  uint64_t v108;
  uint64_t *v109;
  int *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  unint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unsigned int *v125;
  _QWORD *v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  int v130;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E798);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  v99 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D4922370();
  v119 = *(_QWORD *)(v10 - 8);
  v120 = v10;
  MEMORY[0x1E0C80A78](v10);
  v118 = (char *)v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult(0);
  v108 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (_DWORD *)((char *)v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig(0);
  v111 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v127 = (_QWORD *)((char *)v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult(0);
  v122 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x1E0C80A78](v17);
  v110 = (int *)((char *)v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v18);
  v125 = (unsigned int *)((char *)v94 - v20);
  v98 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals(0);
  v21 = *(_QWORD *)(v98 - 8);
  v22 = MEMORY[0x1E0C80A78](v98);
  v103 = (uint64_t)v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v25 = (_QWORD *)((char *)v94 - v24);
  v26 = MEMORY[0x1E0DEE9D8];
  v128 = MEMORY[0x1E0DEE9D8];
  v27 = *(_QWORD *)(a2 + 16);
  v109 = a1;
  v100 = v6;
  v112 = v7;
  v115 = v9;
  v101 = v27;
  if (v27)
  {
    v28 = a2 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    v29 = *(_QWORD *)(v21 + 72);
    swift_bridgeObjectRetain();
    v30 = v27;
    do
    {
      sub_1D469C304(v28, (uint64_t)v25, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
      v31 = *v25;
      swift_bridgeObjectRetain();
      sub_1D4697DE0((uint64_t)v25, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
      sub_1D489591C(v31);
      v28 += v29;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease();
    v26 = v128;
    a1 = v109;
    v7 = v112;
    v9 = v115;
  }
  v32 = *(_QWORD *)(v26 + 16);
  swift_bridgeObjectRelease();
  v95 = MEMORY[0x1E0DEE9D8];
  if (!v101 || !v32)
    return v95;
  v97 = a2 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  v96 = *(_QWORD *)(v21 + 72);
  v94[1] = a2;
  swift_bridgeObjectRetain();
  v33 = 0;
  v106 = "neric";
  v105 = 0x80000001D493F830;
  *(_QWORD *)&v34 = 67109120;
  v107 = v34;
  v35 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v36 = v103;
  while (1)
  {
    v104 = v33;
    sub_1D469C304(v97 + v96 * v33, v36, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
    v37 = *(_QWORD *)v36;
    v123 = *(_QWORD *)(*(_QWORD *)v36 + 16);
    if (v123)
      break;
    v126 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_52:
    v81 = (uint64_t)v100;
    sub_1D469C5EC(v36 + *(int *)(v98 + 24), (uint64_t)v100, &qword_1ED98E798);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v81, 1, v7) == 1)
    {
      *(_OWORD *)v9 = 0u;
      *((_OWORD *)v9 + 1) = 0u;
      sub_1D4922010();
      sub_1D46992EC(v81, &qword_1ED98E798);
    }
    else
    {
      sub_1D469C630(v81, (uint64_t)v9, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    }
    v82 = *(_QWORD *)v9;
    v83 = *((_QWORD *)v9 + 1);
    v84 = *((_QWORD *)v9 + 2);
    v85 = *((_QWORD *)v9 + 3);
    sub_1D4697DE0((uint64_t)v9, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v35 = sub_1D48A8938(0, v35[2] + 1, 1, v35);
    v87 = v35[2];
    v86 = v35[3];
    v88 = v104;
    if (v87 >= v86 >> 1)
    {
      v92 = sub_1D48A8938((_QWORD *)(v86 > 1), v87 + 1, 1, v35);
      v88 = v104;
      v35 = v92;
    }
    v35[2] = v87 + 1;
    v89 = &v35[6 * v87];
    v89[4] = v82;
    v89[5] = v83;
    v89[6] = v84;
    v89[7] = v85;
    v90 = v126;
    v89[8] = MEMORY[0x1E0DEE9D8];
    v89[9] = v90;
    v36 = v103;
    v91 = v88 + 1;
    sub_1D4697DE0(v103, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
    v33 = v91;
    if (v91 == v101)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v35;
    }
  }
  v102 = v35;
  v121 = v37 + ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80));
  v124 = v37;
  swift_bridgeObjectRetain();
  v38 = v124;
  v39 = v125;
  v40 = 0;
  v126 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (v40 < *(_QWORD *)(v38 + 16))
  {
    sub_1D469C304(v121 + *(_QWORD *)(v122 + 72) * v40, (uint64_t)v39, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
    v41 = *v39;
    v42 = *a1;
    if (*(_QWORD *)(*a1 + 16) > v41)
    {
      v117 = v40;
      v43 = v127;
      sub_1D469C304(v42+ ((*(unsigned __int8 *)(v111 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80))+ *(_QWORD *)(v111 + 72) * v41, (uint64_t)v127, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig);
      v44 = *v43;
      v45 = *((_QWORD *)v39 + 1);
      v46 = *(_QWORD *)(v45 + 16);
      v116 = v43[1];
      if (v46)
      {
        v114 = v44;
        v47 = v108;
        v48 = v45 + ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80));
        v113 = v45;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v49 = *(_QWORD *)(v47 + 72);
        v50 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        do
        {
          sub_1D469C304(v48, (uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
          sub_1D46BBA28(v14, (uint64_t)v127, &v128);
          sub_1D4697DE0((uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
          v52 = v129;
          if (v129)
          {
            v53 = v128;
            v54 = v130;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v50 = sub_1D48A9474(0, v50[2] + 1, 1, v50);
            v56 = v50[2];
            v55 = v50[3];
            if (v56 >= v55 >> 1)
              v50 = sub_1D48A9474((_QWORD *)(v55 > 1), v56 + 1, 1, v50);
            v50[2] = v56 + 1;
            v51 = &v50[3 * v56];
            v51[4] = v53;
            v51[5] = v52;
            *((_DWORD *)v51 + 12) = v54;
          }
          v48 += v49;
          --v46;
        }
        while (v46);
        swift_bridgeObjectRelease_n();
        a1 = v109;
        v9 = v115;
        v44 = v114;
      }
      else
      {
        swift_bridgeObjectRetain();
        v50 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v39 = v125;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v126 = sub_1D48A933C(0, v126[2] + 1, 1, v126);
      v64 = v126[2];
      v63 = v126[3];
      if (v64 >= v63 >> 1)
        v126 = sub_1D48A933C((_QWORD *)(v63 > 1), v64 + 1, 1, v126);
      v65 = v126;
      v126[2] = v64 + 1;
      v66 = &v65[3 * v64];
      v67 = v116;
      v66[4] = v44;
      v66[5] = v67;
      v66[6] = v50;
      sub_1D4697DE0((uint64_t)v39, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
      sub_1D4697DE0((uint64_t)v127, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig);
      v7 = v112;
      v40 = v117;
      goto LABEL_12;
    }
    if (qword_1ED98F398 != -1)
      swift_once();
    if (byte_1ED98F388 != 1)
    {
LABEL_46:
      v72 = qword_1ED98F3B0;
      if (qword_1ED98F3D0 != -1)
      {
        swift_once();
        v72 = qword_1ED98F3B0;
      }
      goto LABEL_48;
    }
    v57 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v58 = objc_msgSend(v57, sel_bundleIdentifier);

    if (v58)
    {
      v59 = sub_1D492261C();
      v61 = v60;

      if (v59 == 0xD00000000000002BLL && v61 == v105)
      {
        swift_bridgeObjectRelease();
LABEL_39:
        v69 = &qword_1EFEAA908;
        if (qword_1EFEA9C20 != -1)
        {
          swift_once();
          v69 = &qword_1EFEAA908;
        }
        goto LABEL_43;
      }
      v68 = sub_1D4922E38();
      swift_bridgeObjectRelease();
      if ((v68 & 1) != 0)
        goto LABEL_39;
    }
    v69 = (uint64_t *)&off_1ED98F3F0;
    if (qword_1ED98F3A8 != -1)
    {
      swift_once();
      v69 = (uint64_t *)&off_1ED98F3F0;
    }
LABEL_43:
    v70 = *(void **)(*v69 + 32);
    swift_retain();
    v71 = (void *)sub_1D49225F8();
    LODWORD(v70) = objc_msgSend(v70, sel_BOOLForKey_, v71);
    swift_release();

    if (!(_DWORD)v70)
      goto LABEL_46;
    v72 = qword_1EFEAAA30;
    if (qword_1EFEA9C78 != -1)
    {
      swift_once();
      v72 = qword_1EFEAAA30;
    }
LABEL_48:
    v73 = v120;
    v74 = __swift_project_value_buffer(v120, (uint64_t)v72);
    (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))(v118, v74, v73);
    v75 = v110;
    sub_1D469C304((uint64_t)v125, (uint64_t)v110, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
    v76 = sub_1D4922358();
    v77 = sub_1D4922910();
    if (os_log_type_enabled(v76, v77))
    {
      v78 = swift_slowAlloc();
      *(_DWORD *)v78 = v107;
      v79 = (uint64_t)v75;
      v80 = *v75;
      sub_1D4697DE0(v79, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
      *(_DWORD *)(v78 + 4) = v80;
      _os_log_impl(&dword_1D467C000, v76, v77, "Invalid model urn index %u", (uint8_t *)v78, 8u);
      MEMORY[0x1D82635B8](v78, -1, -1);
    }
    else
    {
      sub_1D4697DE0((uint64_t)v75, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
    }
    v9 = v115;

    (*(void (**)(char *, uint64_t))(v119 + 8))(v118, v120);
    v39 = v125;
    sub_1D4697DE0((uint64_t)v125, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
LABEL_12:
    ++v40;
    v38 = v124;
    if (v40 == v123)
    {
      swift_bridgeObjectRelease();
      v36 = v103;
      v35 = v102;
      goto LABEL_52;
    }
  }
  __break(1u);
  sub_1D4697DE0((uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1D46B9B74(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  float *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char v55;
  float v56;
  float v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  float **v70;
  uint64_t v71;
  const char *v72;
  unint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  unint64_t v77;
  uint64_t v78;
  float *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  float *v83;
  uint64_t v84;
  int64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  float v97;
  float v98;
  _QWORD v100[2];
  const char *v101;
  uint64_t v102;
  unint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  unint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  float **v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  float *v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;

  v121 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E758);
  MEMORY[0x1E0C80A78](v3);
  v109 = (char *)v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  v112 = *(_QWORD *)(v108 - 8);
  MEMORY[0x1E0C80A78](v108);
  v107 = (char *)v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult(0);
  v119 = *(_QWORD *)(v111 - 8);
  MEMORY[0x1E0C80A78](v111);
  v110 = (char *)v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion(0);
  v105 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v104 = (_QWORD *)((char *)v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E6F8);
  MEMORY[0x1E0C80A78](v9);
  v114 = (uint64_t)v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
  v106 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v115 = (_QWORD *)((char *)v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98E110);
  v13 = MEMORY[0x1E0C80A78](v12);
  v117 = (char *)v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v100 - v15;
  v122 = type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig(0);
  v120 = *(_QWORD *)(v122 - 8);
  v17 = MEMORY[0x1E0C80A78](v122);
  v116 = (float **)((char *)v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v20 = (_QWORD *)((char *)v100 - v19);
  v21 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult(0);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (float *)((char *)v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E728);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)v100 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v31 = (_QWORD *)((char *)v100 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*a1 != 1)
  {
    v32 = a1[2];
    if (v32)
    {
      if (*(_QWORD *)(v32 + 16))
        return 0;
    }
  }
  v33 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  sub_1D469C5EC(v118 + *(int *)(v33 + 20), (uint64_t)v27, &qword_1ED98E728);
  v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28);
  v35 = MEMORY[0x1E0DEE9D8];
  if (v34 == 1)
  {
    *v31 = 0;
    v31[1] = 0xE000000000000000;
    v31[2] = v35;
    sub_1D4922010();
    sub_1D46992EC((uint64_t)v27, &qword_1ED98E728);
  }
  else
  {
    sub_1D469C630((uint64_t)v27, (uint64_t)v31, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults);
  }
  v36 = (uint64_t)v110;
  v37 = v31[2];
  swift_bridgeObjectRetain();
  sub_1D4697DE0((uint64_t)v31, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults);
  v38 = *(_QWORD *)(v37 + 16);
  if (!v38)
  {
    swift_bridgeObjectRelease();
LABEL_22:
    v58 = v114;
    sub_1D469C5EC(v118 + *(int *)(v33 + 24), v114, &qword_1ED98E6F8);
    v59 = v113;
    v60 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v58, 1, v113);
    v61 = (uint64_t)v109;
    v62 = v108;
    v63 = (uint64_t *)v107;
    v64 = v122;
    v65 = v115;
    if (v60 == 1)
    {
      *v115 = 0;
      v65[1] = 0xE000000000000000;
      v65[2] = MEMORY[0x1E0DEE9D8];
      sub_1D4922010();
      v66 = (char *)v115 + *(int *)(v59 + 28);
      v67 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
      v68 = v66;
      v65 = v115;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v68, 1, 1, v67);
      sub_1D46992EC(v58, &qword_1ED98E6F8);
    }
    else
    {
      sub_1D469C630(v58, (uint64_t)v115, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
    }
    v70 = v116;
    v69 = (uint64_t)v117;
    v71 = v65[2];
    swift_bridgeObjectRetain();
    sub_1D4697DE0((uint64_t)v65, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
    v72 = *(const char **)(v71 + 16);
    if (v72)
    {
      v73 = 0;
      v103 = v71 + ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80));
      v102 = v71;
      v101 = v72;
      while (1)
      {
        if (v73 >= *(_QWORD *)(v71 + 16))
          goto LABEL_54;
        v74 = *(_QWORD *)(v105 + 72);
        v106 = v73;
        v75 = v104;
        sub_1D469C304(v103 + v74 * v73, (uint64_t)v104, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion);
        v76 = (_QWORD *)*v75;
        swift_bridgeObjectRetain();
        sub_1D4697DE0((uint64_t)v75, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion);
        v118 = v76[2];
        if (v118)
          break;
LABEL_27:
        swift_bridgeObjectRelease();
        v71 = v102;
        v73 = v106 + 1;
        if ((const char *)(v106 + 1) == v101)
          goto LABEL_50;
      }
      v77 = 0;
      v114 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20);
      v113 = (uint64_t)v76
           + ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80));
      v115 = v76;
      while (v77 < v76[2])
      {
        sub_1D469C304(v113 + *(_QWORD *)(v119 + 72) * v77, v36, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult);
        v78 = *(_QWORD *)(v121 + v114)
            + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__parseCachingConfig;
        swift_beginAccess();
        sub_1D469C5EC(v78, v69, (uint64_t *)&unk_1ED98E110);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48))(v69, 1, v64) == 1)
        {
          v79 = (float *)MEMORY[0x1E0DEE9E0];
          *v70 = (float *)MEMORY[0x1E0DEE9E0];
          v70[1] = v79;
          v70[2] = v79;
          sub_1D4922010();
          v80 = (char *)v70 + *(int *)(v64 + 32);
          v81 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v80, 1, 1, v81);
          sub_1D46992EC(v69, (uint64_t *)&unk_1ED98E110);
        }
        else
        {
          sub_1D469C630(v69, (uint64_t)v70, type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig);
        }
        v82 = MEMORY[0x1E0DEE9D8];
        v83 = *v70;
        swift_bridgeObjectRetain();
        sub_1D4697DE0((uint64_t)v70, type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig);
        sub_1D469C5EC(v36 + *(int *)(v111 + 32), v61, &qword_1ED98E758);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v61, 1, v62) == 1)
        {
          *v63 = v82;
          v63[1] = 0;
          v63[2] = 0xE000000000000000;
          sub_1D4922010();
          sub_1D46992EC(v61, &qword_1ED98E758);
        }
        else
        {
          sub_1D469C630(v61, (uint64_t)v63, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
        }
        v123 = v83;
        v84 = *v63;
        v85 = *(_QWORD *)(*v63 + 16);
        if (v85)
        {
          v127 = v82;
          swift_bridgeObjectRetain();
          sub_1D48AB4A4(0, v85, 0);
          v86 = 0;
          v82 = v127;
          do
          {
            v124 = *(_QWORD *)(v84 + 8 * v86 + 32);
            v125 = 81;
            v126 = 0xE100000000000000;
            sub_1D4922E14();
            sub_1D492270C();
            swift_bridgeObjectRelease();
            v88 = v125;
            v87 = v126;
            v127 = v82;
            v90 = *(_QWORD *)(v82 + 16);
            v89 = *(_QWORD *)(v82 + 24);
            if (v90 >= v89 >> 1)
            {
              sub_1D48AB4A4(v89 > 1, v90 + 1, 1);
              v82 = v127;
            }
            ++v86;
            *(_QWORD *)(v82 + 16) = v90 + 1;
            v91 = v82 + 16 * v90;
            *(_QWORD *)(v91 + 32) = v88;
            *(_QWORD *)(v91 + 40) = v87;
          }
          while (v85 != v86);
          swift_bridgeObjectRelease();
          v61 = (uint64_t)v109;
          v62 = v108;
          v63 = (uint64_t *)v107;
          v36 = (uint64_t)v110;
        }
        v125 = v82;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D200);
        sub_1D46BF03C((unint64_t *)&qword_1ED98D208, &qword_1ED98D200, MEMORY[0x1E0DEAF20]);
        v92 = sub_1D49225D4();
        v94 = v93;
        swift_bridgeObjectRelease();
        sub_1D4697DE0((uint64_t)v63, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
        v70 = v116;
        v69 = (uint64_t)v117;
        if (*((_QWORD *)v123 + 2) && (v95 = sub_1D47CA4DC(v92, v94), (v96 & 1) != 0))
        {
          v97 = *(float *)(*((_QWORD *)v123 + 7) + 4 * v95);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v98 = *(float *)(v36 + 4);
          sub_1D4697DE0(v36, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult);
          if (v97 <= v98)
          {
            swift_bridgeObjectRelease();
            goto LABEL_52;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1D4697DE0(v36, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult);
        }
        ++v77;
        v64 = v122;
        v76 = v115;
        if (v77 == v118)
          goto LABEL_27;
      }
      __break(1u);
LABEL_54:
      __break(1u);
      JUMPOUT(0x1D46BA9F4);
    }
LABEL_50:
    swift_bridgeObjectRelease();
    return 0;
  }
  v102 = v33;
  v39 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20);
  v40 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v103 = v37;
  v41 = v37 + v40;
  v42 = *(_QWORD *)(v22 + 72);
  v43 = type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig;
  v101 = "DomainKnowledgeIdsMapping";
  v100[1] = "event_destruction";
  v123 = v24;
  while (1)
  {
    sub_1D469C304(v41, (uint64_t)v24, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult);
    v44 = *(_QWORD *)(v121 + v39)
        + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__parseCachingConfig;
    swift_beginAccess();
    sub_1D469C5EC(v44, (uint64_t)v16, (uint64_t *)&unk_1ED98E110);
    v45 = v122;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))(v16, 1, v122) == 1)
    {
      v46 = v43;
      v47 = v42;
      v48 = v39;
      v49 = MEMORY[0x1E0DEE9D8];
      *v20 = sub_1D47C3B60(MEMORY[0x1E0DEE9D8]);
      v20[1] = sub_1D47C3B60(v49);
      v50 = v49;
      v39 = v48;
      v42 = v47;
      v43 = v46;
      v24 = v123;
      v20[2] = sub_1D47C3B60(v50);
      sub_1D4922010();
      v51 = (char *)v20 + *(int *)(v45 + 32);
      v52 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v51, 1, 1, v52);
      sub_1D46992EC((uint64_t)v16, (uint64_t *)&unk_1ED98E110);
    }
    else
    {
      sub_1D469C630((uint64_t)v16, (uint64_t)v20, v43);
    }
    v53 = v20[1];
    swift_bridgeObjectRetain();
    sub_1D4697DE0((uint64_t)v20, v43);
    if (*((_BYTE *)v24 + 8) == 1)
      __asm { BR              X9 }
    if (*(_QWORD *)(v53 + 16))
    {
      v54 = sub_1D47CA4DC(0x6E676F6365726E75, 0xEC00000064657A69);
      if ((v55 & 1) != 0)
        break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D4697DE0((uint64_t)v24, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult);
LABEL_10:
    v41 += v42;
    if (!--v38)
    {
      swift_bridgeObjectRelease();
      v36 = (uint64_t)v110;
      v33 = v102;
      goto LABEL_22;
    }
  }
  v56 = *(float *)(*(_QWORD *)(v53 + 56) + 4 * v54);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v57 = v24[3];
  sub_1D4697DE0((uint64_t)v24, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult);
  if (v56 > v57)
    goto LABEL_10;
LABEL_52:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1D46BAA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  int *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v43 = a3;
  v44 = a4;
  v52 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E798);
  MEMORY[0x1E0C80A78](v5);
  v48 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  v50 = *(_QWORD *)(v7 - 8);
  v51 = v7;
  MEMORY[0x1E0C80A78](v7);
  v49 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E728);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
  v45 = *(_QWORD *)(v12 - 8);
  v46 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E6F8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (uint64_t *)((char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v43 - v23;
  v25 = (int *)type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  v26 = v25[6];
  v47 = a2;
  sub_1D469C5EC(a2 + v26, (uint64_t)v17, &qword_1ED98E6F8);
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18);
  v28 = MEMORY[0x1E0DEE9D8];
  if (v27 == 1)
  {
    *v22 = 0;
    v22[1] = 0xE000000000000000;
    v22[2] = v28;
    sub_1D4922010();
    v29 = (char *)v22 + *(int *)(v18 + 28);
    v30 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
    sub_1D46992EC((uint64_t)v17, &qword_1ED98E6F8);
  }
  else
  {
    sub_1D469C630((uint64_t)v17, (uint64_t)v22, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
  }
  sub_1D46B7F08(v43, v44, (uint64_t)v24);
  sub_1D4697DE0((uint64_t)v22, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
  v31 = v52;
  v32 = v52 + v25[6];
  sub_1D46992EC(v32, &qword_1ED98E6F8);
  sub_1D469C630((uint64_t)v24, v32, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v32, 0, 1, v18);
  v33 = v47;
  sub_1D469C5EC(v47 + v25[5], (uint64_t)v11, &qword_1ED98E728);
  v35 = v45;
  v34 = v46;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v11, 1, v46) == 1)
  {
    *v14 = 0;
    v14[1] = 0xE000000000000000;
    v14[2] = MEMORY[0x1E0DEE9D8];
    sub_1D4922010();
    sub_1D46992EC((uint64_t)v11, &qword_1ED98E728);
  }
  else
  {
    sub_1D469C630((uint64_t)v11, (uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults);
  }
  v36 = v49;
  v37 = v31 + v25[5];
  sub_1D46992EC(v37, &qword_1ED98E728);
  sub_1D469C630((uint64_t)v14, v37, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56))(v37, 0, 1, v34);
  v38 = v48;
  sub_1D469C5EC(v33 + v25[7], v48, &qword_1ED98E798);
  v40 = v50;
  v39 = v51;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v38, 1, v51) == 1)
  {
    *v36 = 0u;
    v36[1] = 0u;
    sub_1D4922010();
    sub_1D46992EC(v38, &qword_1ED98E798);
  }
  else
  {
    sub_1D469C630(v38, (uint64_t)v36, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  }
  v41 = v31 + v25[7];
  sub_1D46992EC(v41, &qword_1ED98E798);
  sub_1D469C630((uint64_t)v36, v41, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v41, 0, 1, v39);
}

BOOL sub_1D46BAEB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  _BOOL8 v21;
  uint64_t v22;
  uint64_t v24;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E798);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E728);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v24 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E6F8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D469C5EC(v1 + v8[6], (uint64_t)v16, &qword_1ED98E6F8);
  v17 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17);
  sub_1D46992EC((uint64_t)v16, &qword_1ED98E6F8);
  sub_1D469C304(v1, (uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
  if (v18 == 1)
  {
    sub_1D4697DE0((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
    sub_1D469C304(v1, (uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
  }
  else
  {
    sub_1D469C5EC((uint64_t)&v13[v8[5]], (uint64_t)v7, &qword_1ED98E728);
    v19 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
    v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v7, 1, v19);
    sub_1D46992EC((uint64_t)v7, &qword_1ED98E728);
    sub_1D4697DE0((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
    sub_1D469C304(v1, (uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
    if (v20 != 1)
    {
      sub_1D469C5EC((uint64_t)&v11[v8[7]], (uint64_t)v4, &qword_1ED98E798);
      v22 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
      v21 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v4, 1, v22) != 1;
      sub_1D46992EC((uint64_t)v4, &qword_1ED98E798);
      goto LABEL_6;
    }
  }
  v21 = 0;
LABEL_6:
  sub_1D4697DE0((uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
  return v21;
}

uint64_t sub_1D46BB164(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  char v10[8];
  uint64_t v11;
  uint64_t v12;

  if ((a2 & 0x8000000000000000) != 0)
  {
    LODWORD(v12) = 0;
    v11 = 3451;
    v10[0] = 2;
  }
  else
  {
    if (!HIDWORD(a2))
    {
      *(_DWORD *)a1 = a2;
      MEMORY[0x1E0C80A78](a1);
      v12 = v7;
      swift_bridgeObjectRetain();
      v8 = sub_1D489BA08((void (*)(_QWORD))sub_1D46BFECC, (uint64_t)v10, a5);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 8) = v8;
      return result;
    }
    LODWORD(v12) = 0;
    v11 = 3455;
    v10[0] = 2;
  }
  result = sub_1D4922C28();
  __break(1u);
  return result;
}

uint64_t sub_1D46BB29C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v61 = a3;
  v57 = a2;
  v4 = sub_1D4922370();
  v59 = *(_QWORD *)(v4 - 8);
  v60 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v56 = (uint64_t)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v53 - v8;
  MEMORY[0x1E0C80A78](v7);
  v55 = (uint64_t)&v53 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D520);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E758);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  v21 = *(_QWORD *)(v63 - 8);
  v22 = MEMORY[0x1E0C80A78](v63);
  v54 = (uint64_t)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v58 = (uint64_t)&v53 - v24;
  v25 = *(_QWORD *)(a1 + 8);
  v62 = *(void (**)(uint64_t, uint64_t))a1;
  v26 = *(_DWORD *)(a1 + 16);
  v27 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig(0);
  sub_1D469C5EC(v57 + *(int *)(v27 + 24), (uint64_t)v13, (uint64_t *)&unk_1ED98D520);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    v28 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v17, 1, 1, v28);
    sub_1D4922010();
    sub_1D46992EC((uint64_t)v13, (uint64_t *)&unk_1ED98D520);
  }
  else
  {
    sub_1D469C630((uint64_t)v13, (uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig);
  }
  sub_1D471B7D0((uint64_t)v62, v25, (uint64_t)v17, (uint64_t)v20);
  sub_1D4697DE0((uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, v63);
  v30 = v60;
  if (v29 == 1)
  {
    sub_1D46992EC((uint64_t)v20, &qword_1ED98E758);
    v31 = v55;
    sub_1D470C76C(v55);
    swift_bridgeObjectRetain_n();
    v32 = sub_1D4922358();
    v33 = sub_1D4922910();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v65 = v35;
      *(_DWORD *)v34 = 136315138;
      swift_bridgeObjectRetain();
      v64 = sub_1D47F0250((uint64_t)v62, v25, &v65);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D467C000, v32, v33, "Failed to encode label %s", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v35, -1, -1);
      MEMORY[0x1D82635B8](v34, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v31, v30);
    v47 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v61, 1, 1, v47);
  }
  else
  {
    v36 = (uint64_t)v20;
    v37 = v58;
    sub_1D469C630(v36, v58, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
    sub_1D470C76C((uint64_t)v9);
    v38 = v56;
    sub_1D470C928(v56);
    v39 = *(void (**)(char *, uint64_t))(v59 + 8);
    v39(v9, v30);
    v40 = v54;
    sub_1D469C304(v37, v54, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
    v41 = sub_1D4922358();
    v42 = sub_1D4922910();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v65 = v44;
      v62 = (void (*)(uint64_t, uint64_t))v39;
      *(_DWORD *)v43 = 136315138;
      sub_1D4696EA4((unint64_t *)&qword_1ED98E740, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode, (uint64_t)&unk_1D4930EA4);
      v45 = sub_1D4922E14();
      v64 = sub_1D47F0250(v45, v46, &v65);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      sub_1D4697DE0(v40, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
      _os_log_impl(&dword_1D467C000, v41, v42, "Writing %s to parseCache", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v44, -1, -1);
      MEMORY[0x1D82635B8](v43, -1, -1);

      v62(v56, v30);
    }
    else
    {
      sub_1D4697DE0(v40, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);

      v39((char *)v38, v30);
    }
    v49 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult(0);
    MEMORY[0x1E0C80A78](v49);
    v50 = v58;
    *(&v53 - 2) = v58;
    *((_DWORD *)&v53 - 2) = v26;
    sub_1D4696EA4(&qword_1ED98E7A8, v51, (uint64_t)&unk_1D49311FC);
    v52 = v61;
    sub_1D49221FC();
    sub_1D4697DE0(v50, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v52, 0, 1, v49);
  }
}

uint64_t sub_1D46BB93C(float *a1, uint64_t a2, float a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v6 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D469C304(a2, (uint64_t)v9, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
  v10 = (uint64_t)a1
      + *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult(0)
               + 24);
  sub_1D46992EC(v10, &qword_1ED98E758);
  sub_1D469C630((uint64_t)v9, v10, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
  result = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  *a1 = a3;
  return result;
}

uint64_t sub_1D46BBA28@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  _DWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  unsigned int v53;
  _QWORD *v54;
  uint64_t result;
  uint64_t *v56;
  int v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  _DWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _DWORD *v74;
  uint64_t v75;
  _DWORD *v76;

  v70 = a3;
  v72 = a2;
  v74 = a1;
  v3 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult(0);
  MEMORY[0x1E0C80A78](v3);
  v67 = (uint64_t)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_1D4922370();
  v71 = *(_QWORD *)(v73 - 8);
  v5 = MEMORY[0x1E0C80A78](v73);
  v69 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v68 = (uint64_t)&v63 - v8;
  MEMORY[0x1E0C80A78](v7);
  v66 = (uint64_t)&v63 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D520);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E758);
  v18 = MEMORY[0x1E0C80A78](v17);
  v63 = (uint64_t)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v63 - v20;
  v22 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x1E0C80A78](v22);
  v64 = (uint64_t *)((char *)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v24);
  v27 = (uint64_t *)((char *)&v63 - v26);
  v65 = v3;
  sub_1D469C5EC((uint64_t)v74 + *(int *)(v3 + 24), (uint64_t)v21, &qword_1ED98E758);
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v29 = v22;
  if (v28(v21, 1, v22) == 1)
  {
    *v27 = MEMORY[0x1E0DEE9D8];
    v27[1] = 0;
    v27[2] = 0xE000000000000000;
    sub_1D4922010();
    sub_1D46992EC((uint64_t)v21, &qword_1ED98E758);
  }
  else
  {
    sub_1D469C630((uint64_t)v21, (uint64_t)v27, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
  }
  v30 = v72;
  v31 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig(0);
  sub_1D469C5EC(v30 + *(int *)(v31 + 24), (uint64_t)v12, (uint64_t *)&unk_1ED98D520);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    v32 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v16, 1, 1, v32);
    sub_1D4922010();
    sub_1D46992EC((uint64_t)v12, (uint64_t *)&unk_1ED98D520);
  }
  else
  {
    sub_1D469C630((uint64_t)v12, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig);
  }
  v33 = sub_1D471BBF4((uint64_t)v27, (uint64_t)v16);
  v35 = v34;
  sub_1D4697DE0((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig);
  sub_1D4697DE0((uint64_t)v27, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
  if (v35)
  {
    v36 = v68;
    sub_1D470C76C(v68);
    v37 = v69;
    sub_1D470C928(v69);
    v38 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
    v39 = v73;
    v38(v36, v73);
    swift_bridgeObjectRetain_n();
    v40 = sub_1D4922358();
    v41 = sub_1D4922910();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      v43 = (_DWORD *)swift_slowAlloc();
      v76 = v43;
      *(_DWORD *)v42 = 136315138;
      swift_bridgeObjectRetain();
      v75 = sub_1D47F0250(v33, v35, (uint64_t *)&v76);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D467C000, v40, v41, "Reading %s from parseCache", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v43, -1, -1);
      MEMORY[0x1D82635B8](v42, -1, -1);

      v44 = v69;
      v45 = v73;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v44 = v37;
      v45 = v39;
    }
    result = ((uint64_t (*)(uint64_t, uint64_t))v38)(v44, v45);
    v56 = v70;
    v57 = *v74;
    *v70 = v33;
    v56[1] = v35;
    *((_DWORD *)v56 + 4) = v57;
  }
  else
  {
    v46 = v29;
    v47 = v66;
    sub_1D470C76C(v66);
    v48 = v67;
    sub_1D469C304((uint64_t)v74, v67, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
    v49 = sub_1D4922358();
    v50 = sub_1D4922910();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      v74 = (_DWORD *)swift_slowAlloc();
      v76 = v74;
      *(_DWORD *)v51 = 136315138;
      v52 = v63;
      sub_1D469C5EC(v48 + *(int *)(v65 + 24), v63, &qword_1ED98E758);
      v53 = v28((char *)v52, 1, v46);
      v54 = v64;
      if (v53 == 1)
      {
        *v64 = MEMORY[0x1E0DEE9D8];
        v54[1] = 0;
        v54[2] = 0xE000000000000000;
        sub_1D4922010();
        sub_1D46992EC(v52, &qword_1ED98E758);
      }
      else
      {
        sub_1D469C630(v52, (uint64_t)v64, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
      }
      sub_1D4696EA4((unint64_t *)&qword_1ED98E740, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode, (uint64_t)&unk_1D4930EA4);
      v58 = sub_1D4922E14();
      v60 = v59;
      sub_1D4697DE0((uint64_t)v54, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
      v75 = sub_1D47F0250(v58, v60, (uint64_t *)&v76);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      sub_1D4697DE0(v67, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
      _os_log_impl(&dword_1D467C000, v49, v50, "Failed to encode label %s", v51, 0xCu);
      v61 = v74;
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v61, -1, -1);
      MEMORY[0x1D82635B8](v51, -1, -1);
    }
    else
    {
      sub_1D4697DE0(v48, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
    }

    result = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 8))(v47, v73);
    v62 = v70;
    *v70 = 0;
    v62[1] = 0;
    *((_DWORD *)v62 + 4) = 0;
  }
  return result;
}

uint64_t sub_1D46BC14C(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_1D46D74A8(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_1D46BC33C(v5);
  *a1 = v2;
  return result;
}

float sub_1D46BC1B4(uint64_t a1)
{
  uint64_t v1;
  float result;
  uint64_t *v3;
  uint64_t v4;

  result = *(float *)(v1 + 32);
  v3 = *(uint64_t **)(v1 + 40);
  *(float *)(a1 + 12) = result;
  v4 = *v3;
  LOBYTE(v3) = *((_BYTE *)v3 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = (_BYTE)v3;
  return result;
}

_QWORD *sub_1D46BC1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98ECD0);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1D46BC238(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1D492276C();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1D8261AB8](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

__n128 sub_1D46BC2B0(uint64_t a1)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(v1 + 16);
  v3 = *(_OWORD *)(v1 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1D46BC2BC(_DWORD *a1)
{
  uint64_t v1;

  return sub_1D46B8DAC(a1, *(unint64_t **)(v1 + 16));
}

uint64_t sub_1D46BC2D4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D46BC308(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D46BC33C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  int v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  char *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  char v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  unint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *__dst;

  v3 = a1[1];
  result = sub_1D4922E08();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_154;
    if (v3)
      return sub_1D46BCA90(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_162;
  v109 = result;
  v106 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_120:
      v98 = v11;
      v108 = v8;
      if (v12 >= 2)
      {
        v99 = *v106;
        do
        {
          v100 = v12 - 2;
          if (v12 < 2)
            goto LABEL_149;
          if (!v99)
            goto LABEL_161;
          v101 = v98;
          v102 = *(_QWORD *)&v98[16 * v100 + 32];
          v103 = *(_QWORD *)&v98[16 * v12 + 24];
          sub_1D46BCB70((char *)(v99 + 24 * v102), (char *)(v99 + 24 * *(_QWORD *)&v98[16 * v12 + 16]), v99 + 24 * v103, __dst);
          if (v1)
            break;
          if (v103 < v102)
            goto LABEL_150;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v101 = sub_1D46D5B88((uint64_t)v101);
          if (v100 >= *((_QWORD *)v101 + 2))
            goto LABEL_151;
          v104 = &v101[16 * v100 + 32];
          *(_QWORD *)v104 = v102;
          *((_QWORD *)v104 + 1) = v103;
          v105 = *((_QWORD *)v101 + 2);
          if (v12 > v105)
            goto LABEL_152;
          memmove(&v101[16 * v12 + 16], &v101[16 * v12 + 32], 16 * (v105 - v12));
          v98 = v101;
          *((_QWORD *)v101 + 2) = v105 - 1;
          v12 = v105 - 1;
        }
        while (v105 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v108 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v108 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA4D0);
    v7 = sub_1D4922850();
    *(_QWORD *)(v7 + 16) = v6;
    v108 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v107 = v10 + 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v110 = v3;
  while (2)
  {
    v13 = v9++;
    if (v9 >= v3)
    {
LABEL_23:
      if (v9 < v3)
        goto LABEL_49;
      goto LABEL_69;
    }
    v14 = (uint64_t *)(v10 + 24 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 24 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v21 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_48;
      v20 = 0;
    }
    else
    {
      v19 = sub_1D4922E38();
      v20 = v19;
      v21 = v13 + 2;
      if (v13 + 2 >= v3)
      {
        v9 = v13 + 2;
        if ((v19 & 1) == 0)
          goto LABEL_23;
LABEL_40:
        if (v21 < v13)
          break;
        goto LABEL_41;
      }
    }
    v22 = (_QWORD *)(v107 + 24 * v21);
    while (1)
    {
      v24 = (_QWORD *)(v10 + 24 * v9);
      if (*(v22 - 1) != *v24 || *v22 != v24[1])
      {
        if (((v20 ^ sub_1D4922E38()) & 1) != 0)
          goto LABEL_39;
        goto LABEL_29;
      }
      if ((v20 & 1) != 0)
        break;
LABEL_29:
      v22 += 3;
      v23 = v21 + 1;
      v9 = v21;
      v21 = v23;
      if (v23 >= v110)
      {
        v21 = v23;
LABEL_39:
        v3 = v110;
        v9 = v21;
        if ((v20 & 1) == 0)
          goto LABEL_23;
        goto LABEL_40;
      }
    }
    v3 = v110;
    if (v21 >= v13)
    {
LABEL_41:
      if (v13 < v21)
      {
        v26 = 24 * v21;
        v27 = 24 * v13;
        v28 = v21;
        v29 = v13;
        do
        {
          if (v29 != --v28)
          {
            if (!v10)
              goto LABEL_160;
            v30 = v10 + v27;
            v31 = v10 + v26;
            v32 = *(_QWORD *)(v10 + v27);
            v33 = *(_QWORD *)(v10 + v27 + 8);
            v34 = *(_DWORD *)(v10 + v27 + 16);
            v35 = *(_QWORD *)(v10 + v26 - 8);
            *(_OWORD *)v30 = *(_OWORD *)(v10 + v26 - 24);
            *(_QWORD *)(v30 + 16) = v35;
            *(_QWORD *)(v31 - 24) = v32;
            *(_QWORD *)(v31 - 16) = v33;
            *(_DWORD *)(v31 - 8) = v34;
          }
          ++v29;
          v26 -= 24;
          v27 += 24;
        }
        while (v29 < v28);
      }
LABEL_48:
      v9 = v21;
      if (v21 < v3)
      {
LABEL_49:
        if (__OFSUB__(v9, v13))
          goto LABEL_153;
        if (v9 - v13 < v109)
        {
          if (__OFADD__(v13, v109))
            goto LABEL_155;
          if (v13 + v109 >= v3)
            v36 = v3;
          else
            v36 = v13 + v109;
          if (v36 < v13)
          {
LABEL_156:
            __break(1u);
            break;
          }
          if (v9 != v36)
          {
            v37 = v10 + 24 * v9;
            do
            {
              v38 = v13;
              v39 = v37;
              do
              {
                v40 = *(_QWORD *)v39 == *(_QWORD *)(v39 - 24) && *(_QWORD *)(v39 + 8) == *(_QWORD *)(v39 - 16);
                if (v40 || (sub_1D4922E38() & 1) == 0)
                  break;
                if (!v10)
                  goto LABEL_158;
                v41 = *(_QWORD *)v39;
                v42 = *(_QWORD *)(v39 + 8);
                v43 = *(_DWORD *)(v39 + 16);
                *(_OWORD *)v39 = *(_OWORD *)(v39 - 24);
                *(_QWORD *)(v39 + 16) = *(_QWORD *)(v39 - 8);
                *(_QWORD *)(v39 - 16) = v42;
                *(_DWORD *)(v39 - 8) = v43;
                *(_QWORD *)(v39 - 24) = v41;
                v39 -= 24;
                ++v38;
              }
              while (v9 != v38);
              ++v9;
              v37 += 24;
            }
            while (v9 != v36);
            v9 = v36;
          }
        }
      }
LABEL_69:
      if (v9 < v13)
        goto LABEL_148;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1D46D5278(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
      v45 = *((_QWORD *)v11 + 2);
      v44 = *((_QWORD *)v11 + 3);
      v12 = v45 + 1;
      if (v45 >= v44 >> 1)
        v11 = sub_1D46D5278((char *)(v44 > 1), v45 + 1, 1, v11);
      *((_QWORD *)v11 + 2) = v12;
      v46 = v11 + 32;
      v47 = &v11[16 * v45 + 32];
      *(_QWORD *)v47 = v13;
      *((_QWORD *)v47 + 1) = v9;
      if (v45)
      {
        v111 = v9;
        while (1)
        {
          v48 = v12 - 1;
          if (v12 >= 4)
          {
            v53 = &v46[16 * v12];
            v54 = *((_QWORD *)v53 - 8);
            v55 = *((_QWORD *)v53 - 7);
            v59 = __OFSUB__(v55, v54);
            v56 = v55 - v54;
            if (v59)
              goto LABEL_137;
            v58 = *((_QWORD *)v53 - 6);
            v57 = *((_QWORD *)v53 - 5);
            v59 = __OFSUB__(v57, v58);
            v51 = v57 - v58;
            v52 = v59;
            if (v59)
              goto LABEL_138;
            v60 = v12 - 2;
            v61 = &v46[16 * v12 - 32];
            v63 = *(_QWORD *)v61;
            v62 = *((_QWORD *)v61 + 1);
            v59 = __OFSUB__(v62, v63);
            v64 = v62 - v63;
            if (v59)
              goto LABEL_140;
            v59 = __OFADD__(v51, v64);
            v65 = v51 + v64;
            if (v59)
              goto LABEL_143;
            if (v65 >= v56)
            {
              v83 = &v46[16 * v48];
              v85 = *(_QWORD *)v83;
              v84 = *((_QWORD *)v83 + 1);
              v59 = __OFSUB__(v84, v85);
              v86 = v84 - v85;
              if (v59)
                goto LABEL_147;
              v76 = v51 < v86;
              goto LABEL_107;
            }
          }
          else
          {
            if (v12 != 3)
            {
              v77 = *((_QWORD *)v11 + 4);
              v78 = *((_QWORD *)v11 + 5);
              v59 = __OFSUB__(v78, v77);
              v70 = v78 - v77;
              v71 = v59;
              goto LABEL_101;
            }
            v50 = *((_QWORD *)v11 + 4);
            v49 = *((_QWORD *)v11 + 5);
            v59 = __OFSUB__(v49, v50);
            v51 = v49 - v50;
            v52 = v59;
          }
          if ((v52 & 1) != 0)
            goto LABEL_139;
          v60 = v12 - 2;
          v66 = &v46[16 * v12 - 32];
          v68 = *(_QWORD *)v66;
          v67 = *((_QWORD *)v66 + 1);
          v69 = __OFSUB__(v67, v68);
          v70 = v67 - v68;
          v71 = v69;
          if (v69)
            goto LABEL_142;
          v72 = &v46[16 * v48];
          v74 = *(_QWORD *)v72;
          v73 = *((_QWORD *)v72 + 1);
          v59 = __OFSUB__(v73, v74);
          v75 = v73 - v74;
          if (v59)
            goto LABEL_145;
          if (__OFADD__(v70, v75))
            goto LABEL_146;
          if (v70 + v75 >= v51)
          {
            v76 = v51 < v75;
LABEL_107:
            if (v76)
              v48 = v60;
            goto LABEL_109;
          }
LABEL_101:
          if ((v71 & 1) != 0)
            goto LABEL_141;
          v79 = &v46[16 * v48];
          v81 = *(_QWORD *)v79;
          v80 = *((_QWORD *)v79 + 1);
          v59 = __OFSUB__(v80, v81);
          v82 = v80 - v81;
          if (v59)
            goto LABEL_144;
          if (v82 < v70)
            goto LABEL_15;
LABEL_109:
          v87 = v48 - 1;
          if (v48 - 1 >= v12)
          {
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
            goto LABEL_156;
          }
          v88 = v10;
          if (!v10)
            goto LABEL_159;
          v89 = v11;
          v90 = &v46[16 * v87];
          v91 = *(_QWORD *)v90;
          v92 = v46;
          v93 = v48;
          v94 = &v46[16 * v48];
          v95 = *((_QWORD *)v94 + 1);
          v96 = v88;
          sub_1D46BCB70((char *)(v88 + 24 * *(_QWORD *)v90), (char *)(v88 + 24 * *(_QWORD *)v94), v88 + 24 * v95, __dst);
          if (v1)
            goto LABEL_117;
          if (v95 < v91)
            goto LABEL_134;
          if (v93 > *((_QWORD *)v89 + 2))
            goto LABEL_135;
          *(_QWORD *)v90 = v91;
          *(_QWORD *)&v92[16 * v87 + 8] = v95;
          v97 = *((_QWORD *)v89 + 2);
          if (v93 >= v97)
            goto LABEL_136;
          v11 = v89;
          v12 = v97 - 1;
          memmove(v94, v94 + 16, 16 * (v97 - 1 - v93));
          v46 = v92;
          *((_QWORD *)v89 + 2) = v97 - 1;
          v10 = v96;
          v9 = v111;
          if (v97 <= 2)
            goto LABEL_15;
        }
      }
      v12 = 1;
LABEL_15:
      v3 = v110;
      if (v9 >= v110)
      {
        v8 = v108;
        goto LABEL_120;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  result = sub_1D4922C28();
  __break(1u);
  return result;
}

uint64_t sub_1D46BCA90(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  int v14;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 24 * a3;
LABEL_5:
    v9 = v6;
    v10 = v8;
    while (1)
    {
      result = *(_QWORD *)v10;
      v11 = *(_QWORD *)v10 == *(_QWORD *)(v10 - 24) && *(_QWORD *)(v10 + 8) == *(_QWORD *)(v10 - 16);
      if (v11 || (result = sub_1D4922E38(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 24;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      v12 = *(_QWORD *)v10;
      v13 = *(_QWORD *)(v10 + 8);
      v14 = *(_DWORD *)(v10 + 16);
      *(_OWORD *)v10 = *(_OWORD *)(v10 - 24);
      *(_QWORD *)(v10 + 16) = *(_QWORD *)(v10 - 8);
      *(_QWORD *)(v10 - 16) = v13;
      *(_DWORD *)(v10 - 8) = v14;
      *(_QWORD *)(v10 - 24) = v12;
      v10 -= 24;
      if (v4 == ++v9)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1D46BCB70(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  char *v13;
  BOOL v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  __int128 v26;
  __int128 v27;
  uint64_t result;
  char *v29;
  char *v30;
  char *v31;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 24;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 24;
  v31 = __src;
  v30 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      v18 = 24 * v11;
      if (__dst != a2 || &a2[v18] <= __dst)
        memmove(__dst, a2, 24 * v11);
      v19 = &v4[v18];
      v29 = v19;
      v31 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        v20 = a3 - 24;
        v21 = v6;
        while (1)
        {
          v22 = (char *)(v20 + 24);
          v23 = *((_QWORD *)v21 - 3);
          v24 = *((_QWORD *)v21 - 2);
          v21 -= 24;
          v25 = *((_QWORD *)v19 - 3) == v23 && *((_QWORD *)v19 - 2) == v24;
          if (v25 || (sub_1D4922E38() & 1) == 0)
          {
            v29 = v19 - 24;
            if (v22 < v19 || v20 >= (unint64_t)v19 || v22 != v19)
            {
              v27 = *(_OWORD *)(v19 - 24);
              *(_QWORD *)(v20 + 16) = *((_QWORD *)v19 - 1);
              *(_OWORD *)v20 = v27;
            }
            v21 = v6;
            v19 -= 24;
            if (v6 <= v7)
              goto LABEL_46;
          }
          else
          {
            if (v22 != v6 || v20 >= (unint64_t)v6)
            {
              v26 = *(_OWORD *)v21;
              *(_QWORD *)(v20 + 16) = *((_QWORD *)v21 + 2);
              *(_OWORD *)v20 = v26;
            }
            v31 = v21;
            if (v21 <= v7)
              goto LABEL_46;
          }
          v20 -= 24;
          v6 = v21;
          if (v19 <= v4)
            goto LABEL_46;
        }
      }
      goto LABEL_46;
    }
  }
  else if (v8 >= -23)
  {
    v12 = 24 * v9;
    if (__dst != __src || &__src[v12] <= __dst)
      memmove(__dst, __src, v12);
    v13 = &v4[v12];
    v29 = v13;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      do
      {
        v14 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v14 || (sub_1D4922E38() & 1) == 0)
        {
          if (v7 != v4)
          {
            v17 = *(_OWORD *)v4;
            *((_QWORD *)v7 + 2) = *((_QWORD *)v4 + 2);
            *(_OWORD *)v7 = v17;
          }
          v4 += 24;
          v30 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 24;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
          {
            v16 = *(_OWORD *)v6;
            *((_QWORD *)v7 + 2) = *((_QWORD *)v6 + 2);
            *(_OWORD *)v7 = v16;
          }
        }
        v7 += 24;
        if (v4 >= v13)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v31 = v7;
    }
LABEL_46:
    sub_1D46D5690((void **)&v31, (const void **)&v30, &v29);
    return 1;
  }
  result = sub_1D4922C88();
  __break(1u);
  return result;
}

uint64_t sub_1D46BCE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15 = a1;
  v16 = a2;
  v17 = a3;
  v18 = a4;
  sub_1D46BEBC8();
  swift_bridgeObjectRetain();
  v7 = sub_1D49227B4();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  v7 = sub_1D46BD518();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (unsigned __int8 *)sub_1D4922BC8();
  }
LABEL_7:
  v13 = sub_1D46BD01C(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13 | ((((unint64_t)v13 >> 32) & 1) << 32);
}

unsigned __int8 *sub_1D46BCF2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15 = a1;
  v16 = a2;
  v17 = a3;
  v18 = a4;
  sub_1D46BEBC8();
  swift_bridgeObjectRetain();
  v7 = sub_1D49227B4();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  v7 = sub_1D46BD518();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (unsigned __int8 *)sub_1D4922BC8();
  }
LABEL_7:
  v13 = sub_1D46BD29C(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1D46BD01C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  unsigned __int8 v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  uint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned int v28;
  unsigned int v29;
  char v30;
  uint64_t v31;
  unsigned __int8 v32;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v16 = a2 - 1;
      if (a2 != 1)
      {
        v17 = a3 + 87;
        if (a3 > 10)
        {
          v18 = a3 + 55;
        }
        else
        {
          v17 = 97;
          v18 = 65;
        }
        if (a3 <= 10)
          v19 = a3 + 48;
        else
          v19 = 58;
        if (result)
        {
          v8 = 0;
          v20 = result + 1;
          do
          {
            v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                v12 = 0;
                v13 = 1;
                if (v21 < 0x61 || v21 >= v17)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v22 = -87;
              }
              else
              {
                v22 = -55;
              }
            }
            else
            {
              v22 = -48;
            }
            v23 = (int)v8 * (uint64_t)(int)a3;
            if (v23 != (int)v23)
              goto LABEL_72;
            v24 = v21 + v22;
            v8 = v23 + v24;
            if (__OFADD__((_DWORD)v23, v24))
              goto LABEL_72;
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v26 = a3 + 55;
        }
        else
        {
          v25 = 97;
          v26 = 65;
        }
        if (a3 <= 10)
          v27 = a3 + 48;
        else
          v27 = 58;
        if (result)
        {
          v28 = 0;
          do
          {
            v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                v12 = 0;
                v13 = 1;
                if (v29 < 0x61 || v29 >= v25)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v30 = -87;
              }
              else
              {
                v30 = -55;
              }
            }
            else
            {
              v30 = -48;
            }
            v31 = (int)v28 * (uint64_t)(int)a3;
            if (v31 != (int)v31)
              goto LABEL_72;
            v32 = v29 + v30;
            v28 = v31 + v32;
            if (__OFADD__((_DWORD)v31, v32))
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          v8 = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            v14 = (int)v8 * (uint64_t)(int)a3;
            if (v14 != (int)v14)
              goto LABEL_72;
            v15 = v10 + v11;
            v8 = v14 - v15;
            if (__OFSUB__((_DWORD)v14, v15))
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1D46BD29C(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  unsigned __int8 v15;
  BOOL v16;
  uint64_t v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  unsigned __int8 *v21;
  unsigned int v22;
  char v23;
  unint64_t v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  unint64_t v29;
  unsigned int v30;
  char v31;
  unint64_t v32;
  unsigned __int8 v33;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  v13 = 0;
                  if (v11 < 0x61 || v11 >= v8)
                    return (unsigned __int8 *)v13;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              if (!is_mul_ok(v9, a3))
                return 0;
              v14 = v9 * a3;
              v15 = v11 + v12;
              v16 = v14 >= v15;
              v9 = v14 - v15;
              if (!v16)
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_67;
    }
    if (a2)
    {
      v26 = a3 + 48;
      v27 = a3 + 55;
      v28 = a3 + 87;
      if (a3 > 10)
      {
        v26 = 58;
      }
      else
      {
        v28 = 97;
        v27 = 65;
      }
      if (result)
      {
        v29 = 0;
        do
        {
          v30 = *result;
          if (v30 < 0x30 || v30 >= v26)
          {
            if (v30 < 0x41 || v30 >= v27)
            {
              v13 = 0;
              if (v30 < 0x61 || v30 >= v28)
                return (unsigned __int8 *)v13;
              v31 = -87;
            }
            else
            {
              v31 = -55;
            }
          }
          else
          {
            v31 = -48;
          }
          if (!is_mul_ok(v29, a3))
            return 0;
          v32 = v29 * a3;
          v33 = v30 + v31;
          v16 = __CFADD__(v32, v33);
          v29 = v32 + v33;
          if (v16)
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v29;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_67:
    __break(1u);
    return result;
  }
  v17 = a2 - 1;
  if (a2 == 1)
    return 0;
  v18 = a3 + 48;
  v19 = a3 + 55;
  v20 = a3 + 87;
  if (a3 > 10)
  {
    v18 = 58;
  }
  else
  {
    v20 = 97;
    v19 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v21 = result + 1;
  do
  {
    v22 = *v21;
    if (v22 < 0x30 || v22 >= v18)
    {
      if (v22 < 0x41 || v22 >= v19)
      {
        v13 = 0;
        if (v22 < 0x61 || v22 >= v20)
          return (unsigned __int8 *)v13;
        v23 = -87;
      }
      else
      {
        v23 = -55;
      }
    }
    else
    {
      v23 = -48;
    }
    if (!is_mul_ok(v9, a3))
      return 0;
    v24 = v9 * a3;
    v25 = v22 + v23;
    v16 = __CFADD__(v24, v25);
    v9 = v24 + v25;
    if (v16)
      return 0;
    ++v21;
    --v17;
  }
  while (v17);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1D46BD518()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1D49227C0();
  v4 = sub_1D46BD594(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1D46BD594(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1D46BD6D8(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1D46BC1D4(v9, 0);
      v12 = sub_1D46BD7C4((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x1D8261A34](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1D8261A34);
LABEL_9:
      sub_1D4922BC8();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1D8261A34]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1D46BD6D8(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1D46BC238(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1D46BC238(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_1D4922754();
  }
  __break(1u);
  return result;
}

unint64_t sub_1D46BD7C4(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1D46BC238(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_1D4922760();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_1D4922BC8();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1D46BC238(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_1D492273C();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1D46BD9D4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  if (!a2)
  {
    v15 = *((_OWORD *)v3 + 1);
    *(_OWORD *)result = *(_OWORD *)v3;
    *(_OWORD *)(result + 16) = v15;
    *(_OWORD *)(result + 32) = *((_OWORD *)v3 + 2);
    return 0;
  }
  v4 = *v3;
  v6 = v3[2];
  v5 = v3[3];
  v7 = v3[4];
  v8 = v3[5];
  v9 = v3[1] & 1;
  if (!a3)
  {
    v11 = v3[2];
    v12 = v3[5];
LABEL_17:
    *(_QWORD *)result = v4;
    *(_BYTE *)(result + 8) = v9;
    *(_QWORD *)(result + 16) = v11;
    *(_QWORD *)(result + 24) = v5;
    *(_QWORD *)(result + 32) = v7;
    *(_QWORD *)(result + 40) = v12;
    return a3;
  }
  if (a3 < 0)
    goto LABEL_20;
  v10 = 0;
  v11 = v3[2];
  v12 = v3[5];
  while (1)
  {
    if (v9)
    {
      if (v6 >= v5)
      {
LABEL_18:
        *(_QWORD *)result = v4;
        *(_BYTE *)(result + 8) = v9;
        *(_QWORD *)(result + 16) = v11;
        *(_QWORD *)(result + 24) = v5;
        *(_QWORD *)(result + 32) = v7;
        *(_QWORD *)(result + 40) = v8;
        return v10;
      }
      v11 = v6 + 1;
      goto LABEL_14;
    }
    v14 = *(_QWORD *)(v7 + 16);
    if (v8 >= v14)
      goto LABEL_18;
    v12 = v8 + 1;
    if (v8 + 1 < v14)
      break;
    ++v8;
    v13 = v6;
LABEL_6:
    *(_QWORD *)(a2 + 8 * v10) = v6;
    v6 = v13;
    if (a3 == ++v10)
      goto LABEL_17;
  }
  if (v8 >= -1)
  {
    v11 = *(_QWORD *)(v7 + 32 + 8 * v12);
    ++v8;
LABEL_14:
    v13 = v11;
    goto LABEL_6;
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

_QWORD *sub_1D46BDAC4(_QWORD *result, char *__dst, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _OWORD v29[8];
  _BYTE v30[28];

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!__dst)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = __dst;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v28 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_OWORD *)(*(_QWORD *)(a4 + 56) + 160 * v16);
    v21 = v20[1];
    v29[0] = *v20;
    v29[1] = v21;
    v22 = v20[5];
    v24 = v20[2];
    v23 = v20[3];
    v29[4] = v20[4];
    v29[5] = v22;
    v29[2] = v24;
    v29[3] = v23;
    v26 = v20[7];
    v25 = v20[8];
    v27 = v20[6];
    *(_OWORD *)&v30[12] = *(_OWORD *)((char *)v20 + 140);
    v29[7] = v26;
    *(_OWORD *)v30 = v25;
    v29[6] = v27;
    memmove(v11, v20, 0x9CuLL);
    if (v13 == v10)
    {
      sub_1D46A47CC((uint64_t)v29);
      goto LABEL_38;
    }
    v11 += 160;
    result = (_QWORD *)sub_1D46A47CC((uint64_t)v29);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v28;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

int64_t *sub_1D46BDD04(int64_t *result, int64_t *a2, int64_t a3, int64_t a4, int64_t a5)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64x2_t v14;
  int64x2_t *v15;
  int64x2_t v16;
  _QWORD *v17;
  int64_t v18;

  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
LABEL_6:
    v5 = a4;
LABEL_7:
    *result = a4;
    result[1] = a5;
    result[2] = v5;
    return (int64_t *)a3;
  }
  if (a3 < 0)
    goto LABEL_31;
  if (a5 == a4)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  if (a5 < a4)
    goto LABEL_32;
  if (a5 > a4)
  {
    v5 = a4 + 1;
    *a2 = a4;
    v6 = a3 - 1;
    if (a3 == 1)
      goto LABEL_7;
    v7 = a3 - 2;
    if (a3 - 2 >= (unint64_t)(~a4 + a5))
      v7 = ~a4 + a5;
    if (v7 < v6)
      v6 = v7;
    v8 = v6 + 1;
    if (v8 > 4)
    {
      v11 = v8 & 3;
      if ((v8 & 3) == 0)
        v11 = 4;
      v12 = v8 - v11;
      v9 = v8 - v11 + 1;
      v13 = v5 + v12;
      v10 = &a2[v12];
      v14 = vaddq_s64(vdupq_n_s64(v5), (int64x2_t)xmmword_1D4927AB0);
      v15 = (int64x2_t *)(a2 + 3);
      v16 = vdupq_n_s64(2uLL);
      do
      {
        v15[-1] = v14;
        *v15 = vaddq_s64(v14, v16);
        v14 = vaddq_s64(v14, vdupq_n_s64(4uLL));
        v15 += 2;
        v12 -= 4;
      }
      while (v12);
      v5 = v13;
    }
    else
    {
      v9 = 1;
      v10 = a2;
    }
    v17 = v10 + 1;
    v18 = v5;
    while (a3 != v9)
    {
      if (a5 == v18)
      {
        v5 = a5;
        a3 = a5 - a4;
        goto LABEL_7;
      }
      if (v18 >= a5)
        goto LABEL_30;
      ++v9;
      v5 = v18 + 1;
      *v17++ = v18++;
      if (a3 == v9)
        goto LABEL_7;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D46BDE34(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  int v22;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    v22 = *(_DWORD *)(*(_QWORD *)(a4 + 56) + 4 * v16);
    *(_QWORD *)v11 = *v20;
    *(_QWORD *)(v11 + 8) = v21;
    *(_DWORD *)(v11 + 16) = v22;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 24;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D46BE038()
{
  return swift_release();
}

uint64_t sub_1D46BE040(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;

  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(v1 + 16);
  result = sub_1D46B4EC0(v3, v4);
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v6 & 1;
  return result;
}

uint64_t sub_1D46BE084@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D46B41D8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1D46BE08C()
{
  unint64_t result;

  result = qword_1ED98EA30;
  if (!qword_1ED98EA30)
  {
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0DEA980], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED98EA30);
  }
  return result;
}

uint64_t sub_1D46BE0D0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D730);
  return sub_1D4921FA4();
}

uint64_t sub_1D46BE12C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

unint64_t sub_1D46BE174()
{
  unint64_t result;

  result = qword_1ED98EA28;
  if (!qword_1ED98EA28)
  {
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0DEFF48], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED98EA28);
  }
  return result;
}

uint64_t sub_1D46BE1B8(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D46BE3B4(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 56) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D46BE5B0(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1D46BE7AC(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    v13 = *(_QWORD *)(a4 + 56) + 56 * v12;
    v14 = *(_DWORD *)(v13 + 8);
    v15 = *(_QWORD *)(v13 + 48);
    v16 = *(_OWORD *)(v13 + 16);
    v17 = *(_OWORD *)(v13 + 32);
    *(_QWORD *)a2 = *(_QWORD *)v13;
    *(_DWORD *)(a2 + 8) = v14;
    *(_OWORD *)(a2 + 16) = v16;
    *(_OWORD *)(a2 + 32) = v17;
    *(_QWORD *)(a2 + 48) = v15;
    a2 += 56;
    if (v9 == a3)
      goto LABEL_35;
  }
  v18 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v18 >= v10)
    goto LABEL_30;
  v19 = *(_QWORD *)(v4 + 8 * v18);
  if (v19)
    goto LABEL_19;
  v8 += 2;
  if (v18 + 1 >= v10)
  {
    v7 = 0;
    v8 = v18;
    goto LABEL_34;
  }
  v19 = *(_QWORD *)(v4 + 8 * v8);
  if (v19)
  {
LABEL_15:
    v18 = v8;
LABEL_19:
    v21 = __clz(__rbit64(v19));
    v7 = (v19 - 1) & v19;
    v12 = v21 + (v18 << 6);
    v8 = v18;
    goto LABEL_8;
  }
  v20 = v18 + 2;
  if (v18 + 2 >= v10)
    goto LABEL_30;
  v19 = *(_QWORD *)(v4 + 8 * v20);
  if (v19)
  {
LABEL_18:
    v18 = v20;
    goto LABEL_19;
  }
  v8 = v18 + 3;
  if (v18 + 3 >= v10)
  {
    v7 = 0;
    v8 = v18 + 2;
    goto LABEL_34;
  }
  v19 = *(_QWORD *)(v4 + 8 * v8);
  if (v19)
    goto LABEL_15;
  v20 = v18 + 4;
  if (v18 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v4 + 8 * v20);
  if (v19)
    goto LABEL_18;
  while (1)
  {
    v18 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v18 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v19 = *(_QWORD *)(v4 + 8 * v18);
    ++v20;
    if (v19)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

_QWORD *sub_1D46BE964(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1D46BEAF8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, int64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t result;
  char v13;
  _QWORD v14[2];
  char v15;

  if ((a4 & 0x1000000000000000) != 0)
  {
    result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    v11 = (_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    v11 = (_QWORD *)sub_1D4922BC8();
  }
  result = sub_1D46BEC0C((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

unint64_t sub_1D46BEBC8()
{
  unint64_t result;

  result = qword_1EFEAA4D8;
  if (!qword_1EFEAA4D8)
  {
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0DEBB10], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1EFEAA4D8);
  }
  return result;
}

uint64_t sub_1D46BEC0C(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, int64_t a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unsigned __int8 *v19;
  int v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unint64_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  unsigned __int8 v31;
  BOOL v32;
  unsigned __int8 v33;
  unsigned __int8 v34;
  unsigned __int8 v35;
  unsigned __int8 *v36;
  uint64_t v37;
  unsigned int v38;
  char v39;
  unint64_t v40;
  unsigned __int8 v41;
  unsigned __int8 v42;
  unsigned __int8 v43;
  unsigned __int8 v44;
  unsigned int v45;
  char v46;
  unint64_t v47;
  unsigned __int8 v48;

  v10 = a2;
  v11 = result;
  v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0)
    LOBYTE(v12) = 1;
  v13 = 4 << v12;
  v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    result = sub_1D46BC238(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      v15 = a2 >> 16;
      if (v14 != v13)
        goto LABEL_6;
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0)
    v16 = HIBYTE(a5) & 0xF;
  if (v16 < a2 >> 16)
    goto LABEL_96;
  result = sub_1D4922754();
  v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    result = sub_1D46BC238(v10, a4, a5);
    v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    result = sub_1D46BC238(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0)
      goto LABEL_8;
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0)
    v17 = a4 & 0xFFFFFFFFFFFFLL;
  if (v17 < v10 >> 16)
    goto LABEL_92;
  if (v17 < a3 >> 16)
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  result = sub_1D4922754();
LABEL_21:
  v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_91;
  }
  if (v18 < v15)
  {
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11)
    v19 = 0;
  v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        v33 = a6 + 48;
        v34 = a6 + 55;
        v35 = a6 + 87;
        if (a6 > 10)
        {
          v33 = 58;
        }
        else
        {
          v35 = 97;
          v34 = 65;
        }
        if (v19)
        {
          v24 = 0;
          v36 = v19 + 1;
          v37 = result - 1;
          do
          {
            v38 = *v36;
            if (v38 < 0x30 || v38 >= v33)
            {
              if (v38 < 0x41 || v38 >= v34)
              {
                v29 = 0;
                if (v38 < 0x61 || v38 >= v35)
                  return v29;
                v39 = -87;
              }
              else
              {
                v39 = -55;
              }
            }
            else
            {
              v39 = -48;
            }
            if (!is_mul_ok(v24, a6))
              return 0;
            v40 = v24 * a6;
            v41 = v38 + v39;
            v32 = __CFADD__(v40, v41);
            v24 = v40 + v41;
            if (v32)
              return 0;
            ++v36;
            --v37;
          }
          while (v37);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_95;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      v42 = a6 + 48;
      v43 = a6 + 55;
      v44 = a6 + 87;
      if (a6 > 10)
      {
        v42 = 58;
      }
      else
      {
        v44 = 97;
        v43 = 65;
      }
      if (v19)
      {
        v24 = 0;
        while (1)
        {
          v45 = *v19;
          if (v45 < 0x30 || v45 >= v42)
          {
            if (v45 < 0x41 || v45 >= v43)
            {
              v29 = 0;
              if (v45 < 0x61 || v45 >= v44)
                return v29;
              v46 = -87;
            }
            else
            {
              v46 = -55;
            }
          }
          else
          {
            v46 = -48;
          }
          if (!is_mul_ok(v24, a6))
            return 0;
          v47 = v24 * a6;
          v48 = v45 + v46;
          v32 = __CFADD__(v47, v48);
          v24 = v47 + v48;
          if (v32)
            return 0;
          ++v19;
          if (!--result)
            return v24;
        }
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      v21 = a6 + 48;
      v22 = a6 + 55;
      v23 = a6 + 87;
      if (a6 > 10)
      {
        v21 = 58;
      }
      else
      {
        v23 = 97;
        v22 = 65;
      }
      if (v19)
      {
        v24 = 0;
        v25 = v19 + 1;
        v26 = result - 1;
        while (1)
        {
          v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              v29 = 0;
              if (v27 < 0x61 || v27 >= v23)
                return v29;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          if (!is_mul_ok(v24, a6))
            return 0;
          v30 = v24 * a6;
          v31 = v27 + v28;
          v32 = v30 >= v31;
          v24 = v30 - v31;
          if (!v32)
            return 0;
          ++v25;
          if (!--v26)
            return v24;
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
  return result;
}

__n128 sub_1D46BF028(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __int128 v4;

  v2 = *(_QWORD *)(v1 + 16);
  result = *(__n128 *)(v2 + 8);
  v4 = *(_OWORD *)(v2 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_1D46BF03C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1D82634E0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D46BF07C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  __int128 v23;
  __int128 *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  int64_t v41;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t *v53;
  uint64_t v54;
  unint64_t v55;
  char **v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t *v69;
  void *v70;
  void *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  char **v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  char *v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t);
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint8_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t result;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  uint64_t *v114;
  unint64_t v115;
  uint64_t v116;
  uint8_t *v117;
  unint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  unint64_t *v130;
  uint64_t v131;
  uint64_t *v132;
  __int128 v133;
  char **v134;
  uint64_t v135;
  char **v136;

  v132 = (uint64_t *)a2;
  v3 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult(0);
  v122 = *(_QWORD *)(v3 - 8);
  v123 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v124 = (uint64_t)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v103 - v6;
  v8 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig(0);
  v127 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char **)((char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v111 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  v110 = *(_QWORD *)(v111 - 8);
  MEMORY[0x1E0C80A78](v111);
  v109 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals(0);
  v107 = *(_QWORD *)(v108 - 8);
  v12 = MEMORY[0x1E0C80A78](v108);
  v116 = (uint64_t)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v130 = (unint64_t *)((char *)&v103 - v14);
  v121 = sub_1D4922370();
  v119 = *(_QWORD *)(v121 - 8);
  v15 = MEMORY[0x1E0C80A78](v121);
  v120 = (char *)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v104 = (uint64_t)&v103 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v103 - v19;
  v21 = MEMORY[0x1E0DEE9D8];
  v106 = *(_QWORD *)(a1 + 16);
  if (!v106)
  {
    v118 = MEMORY[0x1E0DEE9D8];
    goto LABEL_74;
  }
  v103 = (char *)&v103 - v19;
  v105 = a1 + 32;
  v114 = (uint64_t *)&v136;
  swift_bridgeObjectRetain();
  v22 = 0;
  v131 = 0;
  *(_QWORD *)&v23 = 136315138;
  v113 = v23;
  v112 = MEMORY[0x1E0DEE9B8] + 8;
  v118 = v21;
  v125 = v7;
  v126 = a1;
  while (1)
  {
    if (v22 >= *(_QWORD *)(a1 + 16))
      goto LABEL_84;
    v115 = v22;
    v24 = (__int128 *)(v105 + 48 * v22);
    v26 = *((_QWORD *)v24 + 2);
    v25 = *((_QWORD *)v24 + 3);
    v133 = *v24;
    v27 = v130;
    *v130 = v21;
    v28 = v108;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D4922010();
    v29 = (uint64_t)v27 + *(int *)(v28 + 24);
    v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56);
    v31 = v111;
    v32 = v30(v29, 1, 1, v111);
    v134 = &v103;
    MEMORY[0x1E0C80A78](v32);
    v100 = v133;
    v101 = v26;
    v102 = v25;
    sub_1D4696EA4(&qword_1ED98E778, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect, (uint64_t)&unk_1D4930694);
    v33 = (uint64_t)v109;
    v34 = v131;
    sub_1D49221FC();
    v131 = v34;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D46992EC(v29, &qword_1ED98E798);
    sub_1D469C630(v33, v29, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    v30(v29, 0, 1, v31);
    v35 = *(_QWORD *)(a1 + 16);
    if (v35)
      break;
    v37 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v21 = MEMORY[0x1E0DEE9D8];
LABEL_28:
    *(_QWORD *)&v133 = v37[2];
    if ((_QWORD)v133)
    {
      v50 = 0;
      v128 = v37;
      v129 = v37 + 4;
      while (v50 < v37[2])
      {
        v51 = *v132;
        v52 = *(char **)(*v132 + 16);
        if (v52)
        {
          v53 = &v129[3 * v50];
          v54 = *v53;
          v55 = v53[1];
          v56 = (char **)v53[2];
          v57 = v127;
          v58 = v51 + ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80));
          swift_bridgeObjectRetain();
          v134 = v56;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v59 = 0;
          v60 = *(_QWORD *)(v57 + 72);
          while (1)
          {
            sub_1D469C304(v58, (uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig);
            if (*v10 == v54 && v10[1] == v55)
              break;
            v62 = sub_1D4922E38();
            sub_1D4697DE0((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig);
            if ((v62 & 1) != 0)
              goto LABEL_45;
            ++v59;
            v58 += v60;
            if (v52 == v59)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_32:
              a1 = v126;
              v21 = MEMORY[0x1E0DEE9D8];
              v37 = v128;
              goto LABEL_33;
            }
          }
          sub_1D4697DE0((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig);
LABEL_45:
          v63 = swift_bridgeObjectRelease();
          if ((unint64_t)v59 >= *(_QWORD *)(v51 + 16))
            goto LABEL_82;
          MEMORY[0x1E0C80A78](v63);
          *(&v103 - 6) = v59;
          *(&v103 - 5) = (char *)v54;
          *(_QWORD *)&v100 = v55;
          *((_QWORD *)&v100 + 1) = v134;
          v101 = v58;
          sub_1D4696EA4(&qword_1ED98E7D0, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult, (uint64_t)&unk_1D4931364);
          v64 = (uint64_t)v125;
          v65 = v131;
          sub_1D49221FC();
          v131 = v65;
          if (!*(_QWORD *)(*(_QWORD *)(v64 + 8) + 16))
          {
            if (qword_1ED98F398 != -1)
              swift_once();
            if (byte_1ED98F388 != 1)
              goto LABEL_63;
            if ((sub_1D473117C() & 1) != 0)
            {
              v69 = &qword_1EFEAA908;
              if (qword_1EFEA9C20 != -1)
              {
                swift_once();
                v69 = &qword_1EFEAA908;
              }
            }
            else
            {
              v69 = (uint64_t *)&off_1ED98F3F0;
              if (qword_1ED98F3A8 != -1)
              {
                swift_once();
                v69 = (uint64_t *)&off_1ED98F3F0;
              }
            }
            v70 = *(void **)(*v69 + 32);
            swift_retain();
            v71 = (void *)sub_1D49225F8();
            LODWORD(v70) = objc_msgSend(v70, sel_BOOLForKey_, v71);
            swift_release();

            if ((_DWORD)v70)
            {
              v72 = qword_1EFEAAA30;
              if (qword_1EFEA9C78 != -1)
              {
                swift_once();
                v72 = qword_1EFEAAA30;
              }
            }
            else
            {
LABEL_63:
              v72 = qword_1ED98F3B0;
              if (qword_1ED98F3D0 != -1)
              {
                swift_once();
                v72 = qword_1ED98F3B0;
              }
            }
            v73 = v121;
            v74 = __swift_project_value_buffer(v121, (uint64_t)v72);
            v75 = v119;
            v76 = v120;
            (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))(v120, v74, v73);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v77 = sub_1D4922358();
            v78 = sub_1D4922910();
            if (os_log_type_enabled(v77, v78))
            {
              v79 = (uint8_t *)swift_slowAlloc();
              v134 = (char **)swift_slowAlloc();
              v136 = v134;
              *(_DWORD *)v79 = v113;
              v117 = v79 + 4;
              swift_bridgeObjectRetain();
              v135 = sub_1D47F0250(v54, v55, (uint64_t *)&v136);
              sub_1D4922A78();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1D467C000, v77, v78, "No valid classification results %s", v79, 0xCu);
              v80 = v134;
              swift_arrayDestroy();
              MEMORY[0x1D82635B8](v80, -1, -1);
              MEMORY[0x1D82635B8](v79, -1, -1);

              (*(void (**)(char *, uint64_t))(v75 + 8))(v120, v121);
            }
            else
            {
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();

              (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v73);
            }
            sub_1D4697DE0((uint64_t)v125, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
            goto LABEL_32;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1D469C304(v64, v124, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
          v66 = *v130;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v66 = sub_1D48A94C4(0, *(_QWORD *)(v66 + 16) + 1, 1, v66);
          a1 = v126;
          v21 = MEMORY[0x1E0DEE9D8];
          v37 = v128;
          v68 = *(_QWORD *)(v66 + 16);
          v67 = *(_QWORD *)(v66 + 24);
          if (v68 >= v67 >> 1)
            v66 = sub_1D48A94C4(v67 > 1, v68 + 1, 1, v66);
          *(_QWORD *)(v66 + 16) = v68 + 1;
          sub_1D469C630(v124, v66+ ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80))+ *(_QWORD *)(v122 + 72) * v68, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
          *v130 = v66;
          sub_1D4697DE0(v64, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
        }
LABEL_33:
        if (++v50 == (_QWORD)v133)
          goto LABEL_67;
      }
      goto LABEL_80;
    }
LABEL_67:
    swift_bridgeObjectRelease();
    sub_1D469C304((uint64_t)v130, v116, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v118 = sub_1D48A94D8(0, *(_QWORD *)(v118 + 16) + 1, 1, v118);
    v82 = *(_QWORD *)(v118 + 16);
    v81 = *(_QWORD *)(v118 + 24);
    if (v82 >= v81 >> 1)
      v118 = sub_1D48A94D8(v81 > 1, v82 + 1, 1, v118);
    v83 = v115 + 1;
    v84 = v118;
    *(_QWORD *)(v118 + 16) = v82 + 1;
    v22 = v83;
    sub_1D469C630(v116, v84+ ((*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80))+ *(_QWORD *)(v107 + 72) * v82, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
    sub_1D4697DE0((uint64_t)v130, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
    if (v22 == v106)
    {
      swift_bridgeObjectRelease();
      v20 = v103;
LABEL_74:
      v85 = v20;
      sub_1D470C76C((uint64_t)v20);
      v86 = v104;
      sub_1D470C928(v104);
      v87 = *(void (**)(char *, uint64_t))(v119 + 8);
      v88 = v121;
      v87(v85, v121);
      swift_bridgeObjectRetain();
      v89 = sub_1D4922358();
      v90 = sub_1D4922910();
      if (os_log_type_enabled(v89, v90))
      {
        v91 = (uint8_t *)swift_slowAlloc();
        v92 = swift_slowAlloc();
        v136 = (char **)v92;
        *(_DWORD *)v91 = 136315138;
        v93 = swift_bridgeObjectRetain();
        v94 = MEMORY[0x1D8261B9C](v93, &type metadata for VisualUnderstanding.Signal);
        v96 = v95;
        swift_bridgeObjectRelease();
        v135 = sub_1D47F0250(v94, v96, (uint64_t *)&v136);
        sub_1D4922A78();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D467C000, v89, v90, "VisualUnderstanding signals are: %s", v91, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D82635B8](v92, -1, -1);
        MEMORY[0x1D82635B8](v91, -1, -1);

        v97 = v104;
        v98 = v121;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        v97 = v86;
        v98 = v88;
      }
      v87((char *)v97, v98);
      sub_1D4697DE0((uint64_t)v132, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig);
      return v118;
    }
  }
  swift_bridgeObjectRetain();
  v36 = 72;
  v37 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v21 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v38 = *(_QWORD *)(a1 + v36);
    v39 = *(_QWORD *)(v38 + 16);
    v40 = v37[2];
    v41 = v40 + v39;
    if (__OFADD__(v40, v39))
      break;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v41 <= v37[3] >> 1)
    {
      if (*(_QWORD *)(v38 + 16))
        goto LABEL_17;
    }
    else
    {
      if (v40 <= v41)
        v43 = v40 + v39;
      else
        v43 = v40;
      v37 = sub_1D48A933C(isUniquelyReferenced_nonNull_native, v43, 1, v37);
      if (*(_QWORD *)(v38 + 16))
      {
LABEL_17:
        v44 = v37[2];
        if ((v37[3] >> 1) - v44 < v39)
          goto LABEL_81;
        v45 = (unint64_t)&v37[3 * v44 + 4];
        if (v38 + 32 < v45 + 24 * v39 && v45 < v38 + 32 + 24 * v39)
          goto LABEL_85;
        swift_arrayInitWithCopy();
        if (v39)
        {
          v47 = v37[2];
          v48 = __OFADD__(v47, v39);
          v49 = v47 + v39;
          if (v48)
            goto LABEL_83;
          v37[2] = v49;
        }
        goto LABEL_7;
      }
    }
    if (v39)
      goto LABEL_79;
LABEL_7:
    swift_bridgeObjectRelease();
    v36 += 48;
    if (!--v35)
    {
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  LODWORD(v101) = 0;
  *((_QWORD *)&v100 + 1) = 1092;
  LOBYTE(v100) = 2;
  result = sub_1D4922C88();
  __break(1u);
  return result;
}

uint64_t sub_1D46BFEAC(uint64_t a1)
{
  uint64_t v1;

  return sub_1D46BB164(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1D46BFECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1D46BB29C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1D46BFEE4(float *a1)
{
  uint64_t v1;

  return sub_1D46BB93C(a1, *(_QWORD *)(v1 + 16), *(float *)(v1 + 24));
}

double sub_1D46BFF00(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = sub_1D46BC2B0(a1).n128_u64[0];
  return result;
}

double S2Edge.start.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(double *)(a1 + 16) = result;
  return result;
}

double S2Edge.end.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + 40);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 24);
  *(double *)(a1 + 16) = result;
  return result;
}

void __swiftcall S2Edge.init(start:end:)(VisualIntelligence::S2Edge *__return_ptr retstr, VisualIntelligence::S2Point start, VisualIntelligence::S2Point end)
{
  uint64_t v3;
  uint64_t v4;
  Swift::Double v5;
  Swift::Double v6;

  v5 = *(double *)(v3 + 16);
  v6 = *(double *)(v4 + 16);
  *(_OWORD *)&retstr->start.x = *(_OWORD *)v3;
  retstr->start.z = v5;
  *(_OWORD *)&retstr->end.x = *(_OWORD *)v4;
  retstr->end.z = v6;
}

BOOL == infix(_:_:)(float64x2_t *a1, float64x2_t *a2)
{
  _BOOL8 result;

  result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0&& a1[2].f64[0] == a2[2].f64[0])
  {
    return a1[2].f64[1] == a2[2].f64[1];
  }
  return result;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for S2Edge(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for S2Edge(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

ValueMetadata *type metadata accessor for S2Edge()
{
  return &type metadata for S2Edge;
}

uint64_t sub_1D46C0084(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_1D49228EC();
  v3 = 0;
  v18 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1D47CC84C(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_1D46C0218(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  char v7;
  id v8;
  id v9;

  v3 = *(_QWORD *)(v2 + 16);
  if (!*(_QWORD *)(v3 + 16))
    return 0;
  swift_bridgeObjectRetain();
  v6 = sub_1D47CA4DC(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v8 = *(id *)(*(_QWORD *)(v3 + 56) + 8 * v6);
  swift_bridgeObjectRelease();
  v9 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, v8);

  return v9;
}

uint64_t sub_1D46C031C()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DomainPredictionModelInput()
{
  return objc_opt_self();
}

_QWORD *sub_1D46C0360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v9 = v8;
  v49 = a7;
  v50 = a8;
  v51 = a6;
  v47 = a3;
  v48 = a4;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v44 - v17;
  v19 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for MLModelInfo(0) + 36));
  if (*(_QWORD *)(v19 + 16) && (v20 = sub_1D47CA6B4(2), (v21 & 1) != 0))
  {
    v22 = v20;
    v46 = a2;
    v23 = v16;
    v24 = a5;
    v25 = *(_QWORD *)(v19 + 56);
    v26 = sub_1D4920F18();
    v45 = a1;
    v27 = *(_QWORD *)(v26 - 8);
    v28 = v25 + *(_QWORD *)(v27 + 72) * v22;
    a5 = v24;
    v16 = v23;
    a2 = v46;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v18, v28, v26);
    a1 = v45;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v18, 0, 1, v26);
  }
  else
  {
    v29 = sub_1D4920F18();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v18, 1, 1, v29);
  }
  type metadata accessor for FileMapper();
  swift_allocObject();
  v9[2] = sub_1D47E2F48((uint64_t)v18);
  if (*(_QWORD *)(v19 + 16) && (v30 = sub_1D47CA6B4(10), (v31 & 1) != 0))
  {
    v32 = v30;
    v33 = *(_QWORD *)(v19 + 56);
    v34 = sub_1D4920F18();
    v35 = a5;
    v36 = *(_QWORD *)(v34 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v16, v33 + *(_QWORD *)(v36 + 72) * v32, v34);
    v37 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56);
    a5 = v35;
    v37(v16, 0, 1, v34);
  }
  else
  {
    v38 = sub_1D4920F18();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v16, 1, 1, v38);
  }
  swift_allocObject();
  v39 = sub_1D47E2F48((uint64_t)v16);
  sub_1D4697DE0(a1, type metadata accessor for MLModelInfo);
  v9[3] = v39;
  v9[4] = a2;
  v40 = v48;
  v9[5] = v47;
  v9[6] = v40;
  v41 = v51;
  v9[7] = a5;
  v9[8] = v41;
  v42 = v50;
  v9[9] = v49;
  v9[10] = v42;
  return v9;
}

void sub_1D46C05D0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, double *a5@<X4>, uint64_t *a6@<X8>)
{
  _QWORD *v6;
  _QWORD *v7;
  double v10;
  double v11;
  double v12;
  double v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  double v32[6];

  v7 = v6;
  v10 = *a5;
  v11 = a5[1];
  v12 = a5[2];
  v13 = a5[3];
  v14 = sub_1D48C4E2C();
  v15 = sub_1D48C4E2C();
  v16 = (_QWORD *)a4;
  v17 = a2;
  v32[0] = v10;
  v32[1] = v11;
  v32[2] = v12;
  v32[3] = v13;
  v18 = v7[4];
  v19 = sub_1D46C1044(a1, a2, a3, a4, v32, (uint64_t)v14, v15, v18, v7[5]);
  v21 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v19)
  {
    sub_1D46C1E20(a1, a2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v24 = 0;
LABEL_6:
    v21 = v16;
    goto LABEL_7;
  }
  v22 = a1;
  v23 = v19;
  v24 = sub_1D46C1E50(v21, v18);
  if (!v24)
  {
    v17 = a2;
    sub_1D46C1E20(a1, a2);
    v16 = (_QWORD *)a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();

    goto LABEL_6;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98ECB8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D4927B00;
  v26 = v7[8];
  *(_QWORD *)(inited + 32) = v7[7];
  *(_QWORD *)(inited + 40) = v26;
  *(_QWORD *)(inited + 48) = v23;
  v27 = v7[10];
  *(_QWORD *)(inited + 56) = v7[9];
  *(_QWORD *)(inited + 64) = v27;
  *(_QWORD *)(inited + 72) = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = sub_1D47C3A2C(inited);

  type metadata accessor for DomainPredictionModelInput();
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v28;
  a1 = v22;
  v17 = a2;
  sub_1D46C1E20(v22, a2);
LABEL_7:
  *a6 = v24;
  a6[1] = a1;
  a6[2] = v17;
  a6[3] = a3;
  a6[4] = (uint64_t)v21;
}

uint64_t sub_1D46C080C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DomainPredictionRequestProcessor()
{
  return objc_opt_self();
}

uint64_t sub_1D46C0868(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1D48AC004(0, v2, 0);
    v3 = v14;
    v6 = (_QWORD *)(a1 + 40);
    v7 = *(_QWORD *)(a2 + 56);
    v8 = *(_QWORD *)(a2 + 64);
    do
    {
      v9 = v7 == *(v6 - 1) && v8 == *v6;
      if (v9 || (v10 = 0, (sub_1D4922E38() & 1) != 0))
        v10 = *(_DWORD *)(a2 + 72);
      v12 = *(_QWORD *)(v14 + 16);
      v11 = *(_QWORD *)(v14 + 24);
      if (v12 >= v11 >> 1)
        sub_1D48AC004(v11 > 1, v12 + 1, 1);
      v6 += 2;
      *(_QWORD *)(v14 + 16) = v12 + 1;
      *(_DWORD *)(v14 + 4 * v12 + 32) = v10;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1D46C0974(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1D49228EC();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1D47CC84C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1D46C0A08(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  unsigned int v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1D46C2584();
  result = sub_1D49228EC();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1D47CCAF0(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1D46C0A78(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char *v24;
  uint64_t v25;
  int v26;
  uint64_t result;
  _DWORD *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  NSObject *v38;
  os_log_type_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  int32x2_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _DWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;

  v7 = sub_1D4922370();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v50 - v13;
  MEMORY[0x1E0C80A78](v12);
  if (!a2)
  {
    sub_1D470C76C((uint64_t)v11);
    v35 = sub_1D4922358();
    v36 = sub_1D492291C();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v37 = 0;
      _os_log_impl(&dword_1D467C000, v35, v36, "Detector's coarse labels not present.", v37, 2u);
      MEMORY[0x1D82635B8](v37, -1, -1);
    }

    goto LABEL_33;
  }
  v16 = *(_QWORD *)(a3 + 16);
  v17 = a4[2];
  if (v16 != v17)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D470C76C((uint64_t)v14);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v38 = sub_1D4922358();
    v39 = sub_1D492291C();
    v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      v41 = swift_slowAlloc();
      *(_DWORD *)v41 = 134218240;
      v54 = v8;
      v55 = v7;
      v42 = *(_QWORD *)(a3 + 16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v59 = v42;
      LODWORD(v57) = v40;
      v8 = v54;
      v7 = v55;
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2048;
      swift_bridgeObjectRelease();
      v59 = v17;
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D467C000, v38, (os_log_type_t)v57, "Detector's coarse label size does not mathched with Domain PredictionNet's description. %ld != %ld", (uint8_t *)v41, 0x16u);
      MEMORY[0x1D82635B8](v41, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v11 = v14;
LABEL_33:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    v43 = a4[2];
    v44.i32[0] = 0;
    return sub_1D48C3578(v43, v44);
  }
  if (!v16)
    return MEMORY[0x1E0DEE9D8];
  v51 = (uint64_t)&v50 - v15;
  v52 = a4;
  v54 = v8;
  v55 = v7;
  v18 = a4 + 4;
  v19 = a4[4];
  v20 = a4[5];
  v21 = *(_QWORD *)(a3 + 32);
  v22 = *(_QWORD *)(a3 + 40);
  v23 = *(_DWORD *)(a3 + 48);
  swift_bridgeObjectRetain();
  v53 = (_DWORD *)(a3 + 72);
  v24 = (char *)MEMORY[0x1E0DEE9D8];
  v25 = 1;
  v56 = v21;
  v57 = a4 + 4;
  while (1)
  {
    swift_bridgeObjectRetain();
    if (v21 == v19)
    {
      v26 = v23;
      if (v22 == v20)
        goto LABEL_20;
    }
    result = sub_1D4922E38();
    v26 = v23;
    if ((result & 1) == 0)
      break;
LABEL_8:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
LABEL_19:
    v21 = v56;
    v18 = v57;
LABEL_20:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v24 = sub_1D48A882C(0, *((_QWORD *)v24 + 2) + 1, 1, v24);
    v33 = *((_QWORD *)v24 + 2);
    v32 = *((_QWORD *)v24 + 3);
    if (v33 >= v32 >> 1)
      v24 = sub_1D48A882C((char *)(v32 > 1), v33 + 1, 1, v24);
    *((_QWORD *)v24 + 2) = v33 + 1;
    *(_DWORD *)&v24[4 * v33 + 32] = v26;
    swift_bridgeObjectRelease();
    if (v25 == v16)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v24;
    }
    v34 = &v18[2 * v25++];
    v19 = *v34;
    v20 = v34[1];
  }
  if (v16 == 1)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v45 = v51;
    sub_1D470C76C(v51);
    swift_bridgeObjectRetain();
    v46 = sub_1D4922358();
    v47 = sub_1D492291C();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      v59 = v49;
      *(_DWORD *)v48 = 136315138;
      swift_bridgeObjectRetain();
      v58 = sub_1D47F0250(v19, v20, &v59);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D467C000, v46, v47, "Failed to find class item for %s", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v49, -1, -1);
      MEMORY[0x1D82635B8](v48, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v45, v55);
    v44.i32[0] = 0;
    v43 = v16;
    return sub_1D48C3578(v43, v44);
  }
  v28 = v53;
  v29 = 1;
  while (1)
  {
    v30 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    v26 = *v28;
    if (*((_QWORD *)v28 - 2) == v19 && *((_QWORD *)v28 - 1) == v20)
      goto LABEL_19;
    result = sub_1D4922E38();
    if ((result & 1) != 0)
      goto LABEL_8;
    v28 += 6;
    ++v29;
    if (v30 == v16)
      goto LABEL_36;
  }
  __break(1u);
  return result;
}

void *sub_1D46C1044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double *a5, uint64_t a6, _QWORD *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double *v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  void *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  double v52;
  CGFloat v53;
  CGFloat v54;
  CGFloat v55;
  CGFloat v56;
  CGFloat Width;
  CGFloat Height;
  double v59;
  CGFloat v60;
  CGFloat v61;
  CGFloat v62;
  uint64_t inited;
  float v64;
  float v65;
  float v66;
  float v67;
  float v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  unint64_t v72;
  _QWORD *v73;
  __int128 *v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  _OWORD *v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  int v87;
  char *v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  id v100;
  double v101;
  id v102;
  void *v103;
  uint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  uint8_t *v107;
  uint8_t *v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  void *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  double v122;
  __int128 v123;
  double v124;
  double v125;
  double v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  double *v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  id v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  __int128 v155;
  uint64_t v156;
  uint64_t v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  _BYTE v161[28];
  uint64_t v162;
  CGRect v163;
  CGRect v164;
  CGRect v165;
  CGRect v166;
  CGRect v167;
  CGRect v168;
  CGRect v169;
  CGRect v170;

  v154 = a7;
  v152 = a4;
  v151 = a3;
  v149 = a2;
  v148 = a1;
  v12 = a9;
  v162 = *MEMORY[0x1E0C80C00];
  v128 = sub_1D4922370();
  v127 = *(_QWORD *)(v128 - 8);
  v13 = MEMORY[0x1E0C80A78](v128);
  v15 = (char *)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v119 = (uint64_t)&v117 - v16;
  v17 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v129 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v117 - v22;
  MEMORY[0x1E0C80A78](v21);
  v25 = (double *)((char *)&v117 - v24);
  v26 = *a5;
  v27 = a5[1];
  v29 = a5[2];
  v28 = a5[3];
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98ECE8);
  v31 = swift_allocObject();
  v155 = xmmword_1D4927B10;
  *(_OWORD *)(v31 + 16) = xmmword_1D4927B10;
  *(_QWORD *)(v31 + 32) = sub_1D49228F8();
  *(_QWORD *)(v31 + 40) = sub_1D49228F8();
  *(_QWORD *)(v31 + 48) = sub_1D49228F8();
  *(_QWORD *)&v158 = v31;
  sub_1D4922838();
  v32 = v158;
  v33 = objc_allocWithZone(MEMORY[0x1E0C9E970]);
  v34 = sub_1D48C3E28(v32, 65568);
  v40 = v152;
  v145 = v23;
  v146 = v25;
  v118 = v20;
  v153 = v30;
  v133 = a8;
  v150 = v34;
  if (!v34)
  {
    sub_1D470C76C((uint64_t)v15);
    v35 = sub_1D4922358();
    v36 = sub_1D492291C();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v37 = 0;
      _os_log_impl(&dword_1D467C000, v35, v36, "Failed to create nodeFeatures MLMultiArray", v37, 2u);
      MEMORY[0x1D82635B8](v37, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v127 + 8))(v15, v128);
    v38 = 0;
    v135 = MEMORY[0x1E0DEE9D8];
    return v38;
  }
  v138 = sub_1D46C0A78(v148, v149, v151, v154);
  *(_QWORD *)&v158 = v40;
  swift_bridgeObjectRetain_n();
  sub_1D46A74E0((_QWORD **)&v158);
  swift_bridgeObjectRelease();
  v41 = v158;
  v38 = v150;
  v131 = *(_QWORD *)(v158 + 16);
  if (!v131)
  {
    swift_bridgeObjectRelease();
    swift_release();
    v42 = 0;
    v135 = MEMORY[0x1E0DEE9D8];
    if (v133 <= 0)
      return v38;
LABEL_43:
    if ((v12 & 0x8000000000000000) == 0)
    {
      do
      {
        if (v12)
        {
          sub_1D46C2548();
          v112 = 0;
          do
          {
            v113 = v112 + 1;
            v114 = swift_allocObject();
            *(_OWORD *)(v114 + 16) = v155;
            *(_QWORD *)(v114 + 32) = sub_1D49228F8();
            *(_QWORD *)(v114 + 40) = sub_1D49228F8();
            *(_QWORD *)(v114 + 48) = sub_1D49228F8();
            v157 = v114;
            sub_1D4922838();
            v115 = (void *)sub_1D4922A24();
            v116 = (void *)sub_1D4922814();
            swift_bridgeObjectRelease();
            objc_msgSend(v38, sel_setObject_forKeyedSubscript_, v115, v116);

            v112 = v113;
          }
          while (v12 != v113);
        }
        ++v42;
      }
      while (v42 != v133);
      return v38;
    }
LABEL_54:
    __break(1u);
  }
  v149 = 0;
  v42 = 0;
  v43 = 0;
  v44 = v129;
  v120 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  v130 = v158 + v120;
  v124 = 1.0 / v29;
  v123 = xmmword_1D4927560;
  v122 = 1.0 / v28;
  v135 = MEMORY[0x1E0DEE9D8];
  v45 = v133;
  v137 = a6;
  v46 = (uint64_t)v118;
  v136 = a9;
  v126 = v26;
  v121 = v158;
  v125 = v27;
  v47 = 1.0 / v28;
  do
  {
    if (v43 >= *(_QWORD *)(v41 + 16))
      goto LABEL_53;
    v48 = *(_QWORD *)(v44 + 72);
    v134 = v43;
    v132 = v48;
    v49 = (uint64_t)v146;
    sub_1D46A8550(v130 + v48 * v43, (uint64_t)v146);
    if (*(_BYTE *)(v49 + 96) == 1)
    {
      sub_1D4697DE0(v49, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      goto LABEL_10;
    }
    v144 = v45 - v42;
    if (v45 == v42)
    {
      swift_bridgeObjectRelease();
      sub_1D4697DE0((uint64_t)v146, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      swift_release();
      return v38;
    }
    v50 = (uint64_t)v146;
    v51 = *v146;
    v52 = v146[1];
    v53 = v146[2];
    v54 = v146[3];
    v55 = *v146 - v26;
    v56 = v52 - v27;
    v163.origin.x = *v146;
    v163.origin.y = v52;
    v163.size.width = v53;
    v163.size.height = v54;
    Width = CGRectGetWidth(v163);
    v164.origin.x = v51;
    v164.origin.y = v52;
    v164.size.width = v53;
    v164.size.height = v54;
    Height = CGRectGetHeight(v164);
    v59 = v124;
    v60 = v124 * v55;
    v165.origin.x = v55;
    v165.origin.y = v56;
    v165.size.width = Width;
    v165.size.height = Height;
    v61 = v59 * CGRectGetWidth(v165);
    v166.origin.x = v55;
    v166.origin.y = v56;
    v166.size.width = Width;
    v166.size.height = Height;
    v62 = v47 * CGRectGetHeight(v166);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D3D0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v123;
    v167.origin.x = v60;
    v167.origin.y = v47 * v56;
    v167.size.width = v61;
    v167.size.height = v62;
    v64 = CGRectGetWidth(v167);
    *(float *)&v55 = v60;
    *(float *)(inited + 32) = (float)(v64 * 0.5) + *(float *)&v55;
    v65 = v47 * v56;
    *(float *)&v55 = 1.0 - v65;
    v168.origin.x = v60;
    v168.origin.y = v47 * v56;
    v168.size.width = v61;
    v168.size.height = v62;
    v66 = CGRectGetHeight(v168);
    *(float *)(inited + 36) = *(float *)&v55 - (float)(v66 * 0.5);
    v169.origin.x = v60;
    v169.origin.y = v47 * v56;
    v169.size.width = v61;
    v169.size.height = v62;
    v67 = CGRectGetWidth(v169);
    *(float *)(inited + 40) = v67;
    v170.origin.x = v60;
    v170.origin.y = v47 * v56;
    v170.size.width = v61;
    v170.size.height = v62;
    v68 = CGRectGetHeight(v170);
    *(float *)(inited + 44) = v68;
    v69 = (uint64_t)v145;
    sub_1D46A8550(v50, (uint64_t)v145);
    swift_bridgeObjectRelease();
    v70 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v69 + 48) = MEMORY[0x1E0DEE9D8];
    v71 = *(_QWORD *)(v50 + 48);
    v142 = *(_QWORD *)(v71 + 16);
    if (!v142)
    {
      swift_bridgeObjectRelease();
      v26 = v126;
      v27 = v125;
      v44 = v129;
      v45 = v133;
      goto LABEL_35;
    }
    v143 = inited;
    v141 = v71 + 32;
    v140 = v42 ^ 0x7FFFFFFFFFFFFFFFLL;
    swift_bridgeObjectRetain();
    v72 = 0;
    v73 = v70;
    v26 = v126;
    v27 = v125;
    v139 = v71;
    while (1)
    {
      if (v72 >= *(_QWORD *)(v71 + 16))
      {
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      v74 = (__int128 *)(v141 + 80 * v72);
      v158 = *v74;
      v75 = v74[1];
      v76 = v74[2];
      v77 = v74[3];
      *(_OWORD *)&v161[12] = *(__int128 *)((char *)v74 + 60);
      v160 = v76;
      *(_OWORD *)v161 = v77;
      v159 = v75;
      sub_1D46BC2D4((uint64_t)&v158);
      if (v72 == v144)
        break;
      v148 = v72;
      sub_1D46BC2D4((uint64_t)&v158);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v79 = (uint64_t)v145;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v73 = sub_1D48A8B64(0, v73[2] + 1, 1, v73);
      v80 = (uint64_t)v146;
      v82 = v73[2];
      v81 = v73[3];
      if (v82 >= v81 >> 1)
        v73 = sub_1D48A8B64((_QWORD *)(v81 > 1), v82 + 1, 1, v73);
      v73[2] = v82 + 1;
      v83 = &v73[10 * v82];
      v83[2] = v158;
      v84 = v159;
      v85 = v160;
      v86 = *(_OWORD *)v161;
      *(_OWORD *)((char *)v83 + 92) = *(_OWORD *)&v161[12];
      v83[4] = v85;
      v83[5] = v86;
      v83[3] = v84;
      *(_QWORD *)(v79 + 48) = v73;
      v87 = *(_DWORD *)(v80 + 68);
      v88 = sub_1D48A882C(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v90 = *((_QWORD *)v88 + 2);
      v89 = *((_QWORD *)v88 + 3);
      v152 = v42;
      v147 = v73;
      if (v90 >= v89 >> 1)
        v88 = sub_1D48A882C((char *)(v89 > 1), v90 + 1, 1, v88);
      v91 = v149;
      *((_QWORD *)v88 + 2) = v90 + 1;
      *(_DWORD *)&v88[4 * v90 + 32] = v87;
      v157 = (uint64_t)v88;
      sub_1D46BC2D4((uint64_t)&v158);
      v92 = sub_1D46C0868(a6, (uint64_t)&v158);
      v149 = v91;
      sub_1D46BC308((uint64_t)&v158);
      sub_1D46BC308((uint64_t)&v158);
      sub_1D4895930(v92);
      v93 = swift_bridgeObjectRetain();
      sub_1D4895930(v93);
      v94 = swift_bridgeObjectRetain();
      sub_1D4895930(v94);
      v151 = v157;
      v95 = *(_QWORD *)(v157 + 16);
      v96 = v150;
      if (v95)
      {
        v97 = 0;
        v154 = (_QWORD *)(v151 + 32);
        do
        {
          v98 = *((_DWORD *)v154 + v97);
          v99 = swift_allocObject();
          *(_OWORD *)(v99 + 16) = v155;
          *(_QWORD *)(v99 + 32) = sub_1D49228F8();
          *(_QWORD *)(v99 + 40) = sub_1D49228F8();
          *(_QWORD *)(v99 + 48) = sub_1D49228F8();
          v156 = v99;
          sub_1D4922838();
          v100 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
          LODWORD(v101) = v98;
          v102 = objc_msgSend(v100, sel_initWithFloat_, v101);
          sub_1D46C2548();
          v103 = (void *)sub_1D4922814();
          swift_bridgeObjectRelease();
          objc_msgSend(v96, sel_setObject_forKeyedSubscript_, v102, v103);

          ++v97;
        }
        while (v95 != v97);
      }
      swift_bridgeObjectRelease();
      v73 = v147;
      if (v148 == v140)
        goto LABEL_52;
      v72 = v148 + 1;
      v42 = v152 + 1;
      v12 = v136;
      v38 = v150;
      a6 = v137;
      v71 = v139;
      if (v148 + 1 == v142)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v45 = v133;
        goto LABEL_34;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D46BC308((uint64_t)&v158);
    v104 = v119;
    sub_1D470C76C(v119);
    v105 = sub_1D4922358();
    v106 = sub_1D4922910();
    if (os_log_type_enabled(v105, v106))
    {
      v107 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v107 = 0;
      _os_log_impl(&dword_1D467C000, v105, v106, "Reached maximum number of supported detector results of Domain Prediction Net", v107, 2u);
      v108 = v107;
      a6 = v137;
      MEMORY[0x1D82635B8](v108, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v104, v128);
    v45 = v133;
    v42 = v133;
LABEL_34:
    v44 = v129;
    v46 = (uint64_t)v118;
LABEL_35:
    sub_1D46A8550((uint64_t)v145, v46);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v135 = sub_1D48A8614(0, *(_QWORD *)(v135 + 16) + 1, 1, v135);
    v110 = *(_QWORD *)(v135 + 16);
    v109 = *(_QWORD *)(v135 + 24);
    if (v110 >= v109 >> 1)
      v135 = sub_1D48A8614(v109 > 1, v110 + 1, 1, v135);
    v111 = v135;
    *(_QWORD *)(v135 + 16) = v110 + 1;
    sub_1D46A8594(v46, v111 + v120 + v110 * v132);
    sub_1D4697DE0((uint64_t)v146, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1D4697DE0((uint64_t)v145, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v41 = v121;
LABEL_10:
    v43 = v134 + 1;
  }
  while (v134 + 1 != v131);
  swift_bridgeObjectRelease();
  swift_release();
  if (v42 < v45)
    goto LABEL_43;
  return v38;
}

uint64_t sub_1D46C1E20(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D46C1E50(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void *v16;
  uint64_t result;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  int64_t v36;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  CGFloat *v48;
  double *v49;
  id v50;
  void *v51;
  void *v52;
  uint64_t v53;
  double v54;
  double v55;
  CGFloat v56;
  CGFloat v57;
  double v58;
  double v59;
  CGFloat v60;
  CGFloat v61;
  double v62;
  double v63;
  CGFloat Height;
  id v65;
  double v66;
  uint64_t v67;
  CGFloat *v68;
  _QWORD *v69;
  unint64_t v70;
  _QWORD *v71;
  double v72;
  __int128 v73;
  uint64_t v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;

  v4 = sub_1D4922370();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)&v8 = COERCE_DOUBLE(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED98ECE8));
  v9 = swift_allocObject();
  v73 = xmmword_1D4927B20;
  *(_OWORD *)(v9 + 16) = xmmword_1D4927B20;
  *(_QWORD *)(v9 + 32) = sub_1D49228F8();
  *(_QWORD *)(v9 + 40) = sub_1D49228F8();
  *(_QWORD *)(v9 + 48) = sub_1D49228F8();
  *(_QWORD *)(v9 + 56) = sub_1D49228F8();
  v74 = v9;
  sub_1D4922838();
  v10 = v74;
  v11 = objc_allocWithZone(MEMORY[0x1E0C9E970]);
  v12 = sub_1D48C3E28(v10, 65568);
  v16 = v12;
  v71 = a1;
  if (!v12)
  {
    sub_1D470C76C((uint64_t)v7);
    v13 = sub_1D4922358();
    v14 = sub_1D492291C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1D467C000, v13, v14, "Failed to create edgeAttributes MLMultiArray", v15, 2u);
      MEMORY[0x1D82635B8](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return 0;
  }
  v67 = 0;
  v72 = *(double *)&v8;
  if (a2 < 0)
    goto LABEL_54;
  v18 = 0x1E0CB3000uLL;
  if (a2)
  {
    v19 = 0;
    do
    {
      if (v19 == a2)
        goto LABEL_49;
      v20 = 0;
      do
      {
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = v73;
        *(_QWORD *)(v21 + 32) = sub_1D49228F8();
        *(_QWORD *)(v21 + 40) = sub_1D49228F8();
        *(_QWORD *)(v21 + 48) = sub_1D49228F8();
        *(_QWORD *)(v21 + 56) = sub_1D49228F8();
        v74 = v21;
        sub_1D4922838();
        v22 = objc_allocWithZone(*(Class *)(v18 + 2024));
        v23 = objc_msgSend(v22, sel_initWithInteger_, 0, v67);
        sub_1D46C2548();
        v24 = a2;
        v25 = v18;
        v26 = (void *)sub_1D4922814();
        swift_bridgeObjectRelease();
        objc_msgSend(v16, sel_setObject_forKeyedSubscript_, v23, v26);

        v18 = v25;
        a2 = v24;
        ++v20;
      }
      while (v24 != v20);
      ++v19;
    }
    while (v19 != v24);
  }
  v27 = v71;
  v28 = v71[2];
  if (!v28)
  {
    v32 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v45 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (v45)
      goto LABEL_37;
    goto LABEL_47;
  }
  v29 = *(_QWORD *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
  v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v70 = *(_QWORD *)(v29 + 72);
  swift_bridgeObjectRetain();
  v31 = v30 + 48;
  v32 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v33 = *(_QWORD *)((char *)v27 + v31);
    v34 = *(_QWORD *)(v33 + 16);
    v35 = v32[2];
    v36 = v35 + v34;
    if (__OFADD__(v35, v34))
      goto LABEL_50;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v36 <= v32[3] >> 1)
    {
      if (!*(_QWORD *)(v33 + 16))
        goto LABEL_16;
    }
    else
    {
      if (v35 <= v36)
        v38 = v35 + v34;
      else
        v38 = v35;
      v32 = sub_1D48A8B64(isUniquelyReferenced_nonNull_native, v38, 1, v32);
      if (!*(_QWORD *)(v33 + 16))
      {
LABEL_16:
        if (v34)
          goto LABEL_51;
        goto LABEL_17;
      }
    }
    v39 = v32[2];
    if ((v32[3] >> 1) - v39 < v34)
      goto LABEL_52;
    v40 = (unint64_t)&v32[10 * v39 + 4];
    if (v33 + 32 < v40 + 80 * v34 && v40 < v33 + 32 + 80 * v34)
      goto LABEL_55;
    swift_arrayInitWithCopy();
    if (v34)
    {
      v42 = v32[2];
      v43 = __OFADD__(v42, v34);
      v44 = v42 + v34;
      if (v43)
        goto LABEL_53;
      v32[2] = v44;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    v27 = v71;
    v31 += v70;
    --v28;
  }
  while (v28);
  swift_bridgeObjectRelease();
  v45 = v32[2];
  if (!v45)
  {
LABEL_47:
    swift_bridgeObjectRelease();
    return (uint64_t)v16;
  }
LABEL_37:
  v46 = 0;
  v71 = v32;
  v68 = (CGFloat *)(v32 + 8);
  v69 = v32 + 4;
  while (2)
  {
    v47 = 0;
    v70 = v46 + 1;
    v48 = v68;
    v49 = (double *)&v69[10 * v46];
LABEL_42:
    v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = v73;
    *(_QWORD *)(v53 + 32) = sub_1D49228F8();
    *(_QWORD *)(v53 + 40) = sub_1D49228F8();
    if (v46 == v47)
    {
      *(_QWORD *)(v53 + 48) = sub_1D49228F8();
      *(_QWORD *)(v53 + 56) = sub_1D49228F8();
      v74 = v53;
      sub_1D4922838();
      v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, 1);
      goto LABEL_41;
    }
    *(_QWORD *)(v53 + 48) = sub_1D49228F8();
    *(_QWORD *)(v53 + 56) = sub_1D49228F8();
    v74 = v53;
    sub_1D4922838();
    if (v46 < v71[2])
    {
      v54 = v49[1];
      v55 = v49[2];
      v56 = v49[3];
      v57 = v49[4];
      v58 = *(v48 - 3);
      v59 = *(v48 - 2);
      v60 = *(v48 - 1);
      v61 = *v48;
      v75.origin.x = v54;
      v75.origin.y = v55;
      v75.size.width = v56;
      v75.size.height = v57;
      v72 = v54 + CGRectGetWidth(v75) * 0.5;
      v76.origin.x = v54;
      v76.origin.y = v55;
      v76.size.width = v56;
      v76.size.height = v57;
      v62 = v55 + CGRectGetHeight(v76) * 0.5;
      v77.origin.x = v58;
      v77.origin.y = v59;
      v77.size.width = v60;
      v77.size.height = v61;
      v63 = v58 + CGRectGetWidth(v77) * 0.5;
      v78.origin.x = v58;
      v78.origin.y = v59;
      v78.size.width = v60;
      v78.size.height = v61;
      Height = CGRectGetHeight(v78);
      *(float *)&Height = (v72 - v63) * (v72 - v63) + (v62 - (v59 + Height * 0.5)) * (v62 - (v59 + Height * 0.5));
      *(float *)&v62 = (float)(2.0 - *(float *)&Height) * 0.5;
      v65 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
      LODWORD(v66) = LODWORD(v62);
      v50 = objc_msgSend(v65, sel_initWithFloat_, v66);
LABEL_41:
      v51 = v50;
      sub_1D46C2548();
      v52 = (void *)sub_1D4922814();
      swift_bridgeObjectRelease();
      objc_msgSend(v16, sel_setObject_forKeyedSubscript_, v51, v52);
      ++v47;

      v48 += 10;
      if (v45 == v47)
      {
        v46 = v70;
        if (v70 == v45)
          goto LABEL_47;
        continue;
      }
      goto LABEL_42;
    }
    break;
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  result = sub_1D4922C88();
  __break(1u);
  return result;
}

unint64_t sub_1D46C2548()
{
  unint64_t result;

  result = qword_1ED98D298;
  if (!qword_1ED98D298)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED98D298);
  }
  return result;
}

unint64_t sub_1D46C2584()
{
  unint64_t result;

  result = qword_1ED98CBC8;
  if (!qword_1ED98CBC8)
  {
    result = MEMORY[0x1D82634E0](&protocol conformance descriptor for VisualDomain, &type metadata for VisualDomain);
    atomic_store(result, (unint64_t *)&qword_1ED98CBC8);
  }
  return result;
}

uint64_t sub_1D46C25C8(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  NSObject *v20;
  os_log_type_t v21;
  BOOL v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void (*v33)(char *, uint64_t);
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v2 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1E0C80A78](v2);
  v36 = (uint64_t)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1D4922370();
  v4 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v39 = (uint64_t)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D4920F18();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v38 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v34 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAD8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MLModelBundle();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v40 = a1;
  v19(v11, a1, v6);
  sub_1D47F5194(v11, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    v36 = v4;
    sub_1D46C2AE8((uint64_t)v14);
    sub_1D470C76C(v39);
    v19(v38, v40, v6);
    v20 = sub_1D4922358();
    v21 = sub_1D492291C();
    v22 = os_log_type_enabled(v20, v21);
    v23 = v35;
    if (v22)
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v42 = v25;
      *(_DWORD *)v24 = 136315138;
      v34[1] = v24 + 4;
      sub_1D469C674();
      v26 = v38;
      v27 = sub_1D4922E14();
      v41 = sub_1D47F0250(v27, v28, &v42);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      v29 = *(void (**)(char *, uint64_t))(v7 + 8);
      v29(v26, v6);
      _os_log_impl(&dword_1D467C000, v20, v21, "Failed to initialize VI Model bundle %s)", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v25, -1, -1);
      MEMORY[0x1D82635B8](v24, -1, -1);

      v29(v40, v6);
    }
    else
    {

      v33 = *(void (**)(char *, uint64_t))(v7 + 8);
      v33(v38, v6);
      v33(v40, v6);
    }
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v39, v23);
    type metadata accessor for ModelBundleProvider();
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v40, v6);
    sub_1D469C630((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for MLModelBundle);
    v30 = v36;
    sub_1D46C2AA4((uint64_t)&v18[*(int *)(v15 + 20)], v36);
    sub_1D4697DE0((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for MLModelBundle);
    v31 = v37;
    sub_1D469C630(v30, v37 + OBJC_IVAR____TtC18VisualIntelligence19ModelBundleProvider_info, type metadata accessor for MLModelInfo);
    return v31;
  }
}

uint64_t sub_1D46C29A8()
{
  uint64_t v0;

  sub_1D4697DE0(v0 + OBJC_IVAR____TtC18VisualIntelligence19ModelBundleProvider_info, type metadata accessor for MLModelInfo);
  return swift_deallocClassInstance();
}

uint64_t sub_1D46C29E0()
{
  return type metadata accessor for ModelBundleProvider();
}

uint64_t type metadata accessor for ModelBundleProvider()
{
  uint64_t result;

  result = qword_1ED98F2F8;
  if (!qword_1ED98F2F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D46C2A24()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MLModelInfo(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D46C2A90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D46C2AA4(v1 + OBJC_IVAR____TtC18VisualIntelligence19ModelBundleProvider_info, a1);
}

uint64_t sub_1D46C2AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MLModelInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D46C2AE8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D46C2B28@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  uint64_t v44;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  float v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD v66[2];
  uint64_t v67;
  uint64_t v68;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CEB0);
  MEMORY[0x1E0C80A78](v6);
  v56 = (uint64_t)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig(0);
  v61 = *(_QWORD *)(v8 - 8);
  v62 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D4922370();
  v63 = *(_QWORD *)(v11 - 8);
  v64 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v58 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v54 - v15;
  MEMORY[0x1E0C80A78](v14);
  v57 = (uint64_t)&v54 - v17;
  v18 = sub_1D4922664();
  MEMORY[0x1E0C80A78](v18);
  v65 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig(0);
  v19 = MEMORY[0x1E0C80A78](v65);
  v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v54 - v22;
  v24 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v60 = a1;
  v25 = (void *)sub_1D49225F8();
  v26 = objc_msgSend(v24, sel_contentsAtPath_, v25);

  if (v26)
  {
    v59 = a3;
    v27 = sub_1D4920F6C();
    v29 = v28;

    sub_1D484D52C(v27, v29);
    v37 = v36;
    v38 = v27;
    v40 = v39;
    sub_1D4696F10(v38, v29);

    sub_1D492264C();
    v54 = v37;
    v55 = v40;
    sub_1D4922634();
    sub_1D46C3340();
    memset(v66, 0, sizeof(v66));
    v67 = 0;
    v41 = v65;
    sub_1D49221E4();
    v42 = v57;
    sub_1D470C76C(v57);
    sub_1D46C3388((uint64_t)v23, (uint64_t)v21);
    v43 = sub_1D4922358();
    v44 = sub_1D4922910();
    if (os_log_type_enabled(v43, (os_log_type_t)v44))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v46 = 134349056;
      v47 = (uint64_t)&v21[*(int *)(v41 + 20)];
      v48 = v56;
      sub_1D46C33CC(v47, v56);
      v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v48, 1, v62);
      v50 = v59;
      if (v49 == 1)
      {
        *(_QWORD *)v10 = 0;
        *((_DWORD *)v10 + 2) = 0;
        sub_1D4922010();
        sub_1D46C3414(v48);
      }
      else
      {
        sub_1D469C630(v48, (uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig);
      }
      v51 = *(float *)v10;
      sub_1D4697DE0((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig);
      *(double *)v66 = v51;
      sub_1D4922A78();
      sub_1D4697DE0((uint64_t)v21, type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig);
      _os_log_impl(&dword_1D467C000, v43, (os_log_type_t)v44, "Loaded eligibility config with min image size %{public}f", v46, 0xCu);
      MEMORY[0x1D82635B8](v46, -1, -1);
    }
    else
    {
      sub_1D4697DE0((uint64_t)v21, type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig);
      v50 = v59;
    }
    v53 = v63;
    v52 = v64;
    sub_1D4696F10(v54, v55);

    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v42, v52);
    return sub_1D469C630((uint64_t)v23, v50, type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig);
  }
  else
  {

    sub_1D470C76C((uint64_t)v16);
    swift_bridgeObjectRetain_n();
    v30 = sub_1D4922358();
    v31 = sub_1D492291C();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      *(_QWORD *)&v66[0] = v33;
      *(_DWORD *)v32 = 136446210;
      swift_bridgeObjectRetain();
      v68 = sub_1D47F0250(v60, a2, (uint64_t *)v66);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D467C000, v30, v31, "Failed to load data at path %{public}s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v33, -1, -1);
      MEMORY[0x1D82635B8](v32, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v63 + 8))(v16, v64);
    v34 = v65;
    sub_1D4922010();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(a3 + *(int *)(v34 + 20), 1, 1, v62);
  }
}

unint64_t sub_1D46C3340()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED98CEC0;
  if (!qword_1ED98CEC0)
  {
    v1 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig(255);
    result = MEMORY[0x1D82634E0](&unk_1D4936754, v1);
    atomic_store(result, (unint64_t *)&qword_1ED98CEC0);
  }
  return result;
}

uint64_t sub_1D46C3388(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D46C33CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CEB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D46C3414(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CEB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double S2AreaCentroid.area.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double S2AreaCentroid.centroid.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 8);
  *(double *)(a1 + 16) = result;
  return result;
}

VisualIntelligence::S2AreaCentroid __swiftcall S2AreaCentroid.init(area:centroid:)(Swift::Double area, VisualIntelligence::S2Point centroid)
{
  double *v2;
  uint64_t v3;
  double v4;
  __int128 v5;
  VisualIntelligence::S2AreaCentroid result;

  v4 = v2[2];
  *(Swift::Double *)v3 = area;
  v5 = *(_OWORD *)v2;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v2;
  *(double *)(v3 + 24) = v4;
  result.centroid.z = centroid.z;
  result.centroid.y = centroid.y;
  result.area = *(double *)&v5;
  result.centroid.x = v4;
  return result;
}

ValueMetadata *type metadata accessor for S2AreaCentroid()
{
  return &type metadata for S2AreaCentroid;
}

uint64_t sub_1D46C3498(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for MLModelInfo(0) + 36));
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_1D47CA6B4(1), (v9 & 1) != 0))
  {
    v10 = v8;
    v11 = *(_QWORD *)(v7 + 56);
    v12 = sub_1D4920F18();
    v13 = *(_QWORD *)(v12 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v6, v11 + *(_QWORD *)(v13 + 72) * v10, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
  }
  else
  {
    v14 = sub_1D4920F18();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
  }
  type metadata accessor for FileMapper();
  swift_allocObject();
  v15 = sub_1D47E2F48((uint64_t)v6);
  sub_1D46C35F0(a1);
  *(_QWORD *)(v2 + 16) = v15;
  return v2;
}

uint64_t type metadata accessor for FoodClassificationPostProcessor()
{
  return objc_opt_self();
}

uint64_t sub_1D46C35F0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MLModelInfo(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for VIAnalyticsEventLoggingService()
{
  return &type metadata for VIAnalyticsEventLoggingService;
}

BOOL static S2Projections.Projection.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t S2Projections.Projection.hash(into:)()
{
  return sub_1D4922F04();
}

uint64_t S2Projections.Projection.hashValue.getter()
{
  sub_1D4922EF8();
  sub_1D4922F04();
  return sub_1D4922F34();
}

void sub_1D46C36BC()
{
  qword_1EFEAA4E0 = 0x3FD41CFE93FF519ALL;
  *(_QWORD *)algn_1EFEAA4E8 = 2;
}

double static S2Projections.minArea.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_1D46C3888(&qword_1EFEA9BD8, (double *)&qword_1EFEAA4E0, (uint64_t *)algn_1EFEAA4E8, a1);
}

void static S2Projections.maxArea.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3FE5161DEBBBD2B2;
  a1[1] = 2;
}

void static S2Projections.avgArea.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3FE0C152382D7365;
  a1[1] = 2;
}

void static S2Projections.minAngleSpan.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3FE5555555555555;
  a1[1] = 1;
}

void static S2Projections.maxAngleSpan.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3FEB474243BB40B2;
  a1[1] = 1;
}

void static S2Projections.avgAngleSpan.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3FE921FB54442D18;
  a1[1] = 1;
}

void sub_1D46C3784()
{
  qword_1EFEAA4F0 = 0x3FDE2B7DDDFEFA67;
  qword_1EFEAA4F8 = 1;
}

double static S2Projections.minWidth.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_1D46C3888(&qword_1EFEA9BE0, (double *)&qword_1EFEAA4F0, &qword_1EFEAA4F8, a1);
}

void static S2Projections.avgWidth.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3FE6F3CF18462338;
  a1[1] = 1;
}

void sub_1D46C37E4()
{
  qword_1EFEAA500 = 0x3FDE2B7DDDFEFA67;
  *(_QWORD *)algn_1EFEAA508 = 1;
}

double static S2Projections.minEdge.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_1D46C3888(&qword_1EFEA9BE8, (double *)&qword_1EFEAA500, (uint64_t *)algn_1EFEAA508, a1);
}

void static S2Projections.avgEdge.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3FE758F08369A1A5;
  a1[1] = 1;
}

void sub_1D46C3844()
{
  qword_1EFEAA510 = 0x3FE41CFE93FF519ALL;
  *(_QWORD *)algn_1EFEAA518 = 1;
}

double static S2Projections.minDiag.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_1D46C3888(&qword_1EFEA9BF0, (double *)&qword_1EFEAA510, (uint64_t *)algn_1EFEAA518, a1);
}

double sub_1D46C3888@<D0>(_QWORD *a1@<X0>, double *a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  double result;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  result = *a2;
  v8 = *a3;
  *a4 = *(_QWORD *)a2;
  a4[1] = v8;
  return result;
}

void static S2Projections.maxDiag.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3FF3825D570AAC93;
  a1[1] = 1;
}

void static S2Projections.avgDiag.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3FF07BBEEABF7727;
  a1[1] = 1;
}

double static S2Projections.maxEdgeAspect.getter()
{
  return 1.44261527;
}

void sub_1D46C3920()
{
  qword_1EFEAA520 = 0x3FFBB67AE8584CAALL;
}

double static S2Projections.maxDiagAspect.getter()
{
  if (qword_1EFEA9BF8 != -1)
    swift_once();
  return *(double *)&qword_1EFEAA520;
}

double static S2Projections.stToUV(s:)(double a1)
{
  BOOL v1;
  double v2;
  double v3;

  v1 = a1 < 0.0;
  v2 = 1.0 - (1.0 - a1) * (1.0 - a1);
  v3 = (a1 + 1.0) * (a1 + 1.0) + -1.0;
  if (v1)
    v3 = v2;
  return v3 * 0.333333333;
}

double static S2Projections.uvToST(u:)(double a1)
{
  BOOL v1;
  double v2;
  double result;

  v1 = a1 < 0.0;
  v2 = 1.0 - sqrt(1.0 - a1 * 3.0);
  result = sqrt(a1 * 3.0 + 1.0) + -1.0;
  if (v1)
    return v2;
  return result;
}

uint64_t static S2Projections.faceUvToXyz(face:u:v:)@<X0>(uint64_t result@<X0>, double *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  double v4;
  double v5;

  v4 = 1.0;
  switch(result)
  {
    case 0:
      break;
    case 1:
      v4 = -a3;
      a3 = 1.0;
      break;
    case 2:
      v4 = -a3;
      a3 = -a4;
      a4 = 1.0;
      break;
    case 3:
      v5 = -a4;
      a4 = -a3;
      v4 = -1.0;
      a3 = v5;
      break;
    case 4:
      v4 = a4;
      a4 = -a3;
      a3 = -1.0;
      break;
    default:
      v4 = a4;
      a4 = -1.0;
      break;
  }
  *a2 = v4;
  a2[1] = a3;
  a2[2] = a4;
  return result;
}

uint64_t static S2Projections.validFaceXyzToUv(face:point:)@<X0>(uint64_t result@<X0>, double *a2@<X1>, double *a3@<X8>)
{
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;

  v4 = *a2;
  v3 = a2[1];
  v5 = a2[2];
  switch(result)
  {
    case 0:
      *a3 = v3 / v4;
      a3[1] = v5 / v4;
      return result;
    case 1:
      v8 = -v4 / v3;
      goto LABEL_9;
    case 2:
      v6 = -v4 / v5;
      v7 = -v3;
      goto LABEL_6;
    case 3:
      *a3 = v5 / v4;
      a3[1] = v3 / v4;
      return result;
    case 4:
      v8 = v5 / v3;
      v5 = -v4;
LABEL_9:
      *a3 = v8;
      a3[1] = v5 / v3;
      return result;
    default:
      v6 = -v3 / v5;
      v7 = -v4;
LABEL_6:
      *a3 = v6;
      a3[1] = v7 / v5;
      return result;
  }
}

uint64_t static S2Projections.xyzToFace(point:)(double *a1)
{
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;

  v1 = a1[1];
  v2 = a1[2];
  v3 = fabs(*a1);
  v4 = fabs(v1);
  v5 = fabs(v2);
  if (v4 < v3)
  {
    if (v5 < v3)
    {
      if (*a1 >= 0.0)
        return 0;
      else
        return 3;
    }
    goto LABEL_8;
  }
  if (v5 >= v4)
  {
LABEL_8:
    if (v2 >= 0.0)
      return 2;
    else
      return 5;
  }
  if (v1 >= 0.0)
    return 1;
  else
    return 4;
}

uint64_t static S2Projections.faceXyzToUv(face:point:)@<X0>(uint64_t result@<X0>, double *a2@<X1>, uint64_t a3@<X8>)
{
  double v4;
  double v5;
  double v6;
  double v7;
  double v8[3];
  __int128 v9;

  v4 = a2[1];
  v5 = a2[2];
  if (result > 2)
  {
    if (result == 3)
      v7 = *a2;
    else
      v7 = a2[2];
    if (result == 4)
      v7 = a2[1];
    if (v7 < 0.0)
      goto LABEL_8;
  }
  else
  {
    if (result)
      v6 = a2[2];
    else
      v6 = *a2;
    if (result == 1)
      v6 = a2[1];
    if (v6 > 0.0)
    {
LABEL_8:
      v8[0] = *a2;
      v8[1] = v4;
      v8[2] = v5;
      result = static S2Projections.validFaceXyzToUv(face:point:)(result, v8, (double *)&v9);
      *(_OWORD *)a3 = v9;
      *(_BYTE *)(a3 + 16) = 0;
      return result;
    }
  }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

uint64_t static S2Projections.getUNorm(face:u:)@<X0>(uint64_t result@<X0>, double *a2@<X8>, double a3@<D0>)
{
  double v3;
  double v4;
  double v5;

  v3 = -1.0;
  v4 = 0.0;
  v5 = a3;
  switch(result)
  {
    case 0:
      break;
    case 1:
      v5 = 1.0;
      v3 = a3;
      break;
    case 2:
      v3 = 0.0;
      v5 = 1.0;
      v4 = a3;
      break;
    case 3:
      v5 = -a3;
      v4 = 1.0;
      v3 = 0.0;
      break;
    case 4:
      v3 = -a3;
      v4 = 1.0;
      goto LABEL_7;
    default:
      v4 = -a3;
LABEL_7:
      v5 = 0.0;
      break;
  }
  *a2 = v5;
  a2[1] = v3;
  a2[2] = v4;
  return result;
}

uint64_t static S2Projections.getVNorm(face:v:)@<X0>(uint64_t result@<X0>, double *a2@<X8>, double a3@<D0>)
{
  double v3;
  double v4;
  double v5;

  v3 = 0.0;
  v4 = -1.0;
  v5 = a3;
  switch(result)
  {
    case 0:
      v5 = -a3;
      v3 = 1.0;
      v4 = 0.0;
      break;
    case 1:
      v4 = -a3;
      v3 = 1.0;
      v5 = 0.0;
      break;
    case 2:
      v3 = -a3;
      v5 = 0.0;
      break;
    case 3:
      break;
    case 4:
      v5 = 1.0;
      v4 = a3;
      break;
    default:
      v4 = 0.0;
      v5 = 1.0;
      v3 = a3;
      break;
  }
  *a2 = v5;
  a2[1] = v4;
  a2[2] = v3;
  return result;
}

uint64_t static S2Projections.getNorm(face:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  __int128 v2;

  switch(result)
  {
    case 0:
      a2[1] = 0;
      a2[2] = 0;
      *a2 = 0x3FF0000000000000;
      break;
    case 1:
      *(_OWORD *)a2 = xmmword_1D4927D90;
      a2[2] = 0;
      break;
    case 2:
      *(int64x2_t *)a2 = vdupq_n_s64(0x8000000000000000);
      a2[2] = 0x3FF0000000000000;
      break;
    case 3:
      v2 = xmmword_1D4927D80;
      goto LABEL_8;
    case 4:
      v2 = xmmword_1D4927D70;
LABEL_8:
      *(_OWORD *)a2 = v2;
      a2[2] = 0x8000000000000000;
      break;
    default:
      *a2 = 0;
      a2[1] = 0;
      a2[2] = 0xBFF0000000000000;
      break;
  }
  return result;
}

uint64_t static S2Projections.getUAxis(face:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  switch(result)
  {
    case 1:
    case 2:
      a2[1] = 0;
      a2[2] = 0;
      *a2 = 0xBFF0000000000000;
      break;
    case 3:
    case 4:
      *a2 = 0;
      a2[1] = 0;
      a2[2] = 0xBFF0000000000000;
      break;
    default:
      *(_OWORD *)a2 = xmmword_1D4927DA0;
      a2[2] = 0;
      break;
  }
  return result;
}

uint64_t static S2Projections.getVAxis(face:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  switch(result)
  {
    case 0:
    case 1:
      *a2 = 0;
      a2[1] = 0;
      a2[2] = 0x3FF0000000000000;
      break;
    case 2:
    case 3:
      *(_OWORD *)a2 = xmmword_1D4927D70;
      a2[2] = 0;
      break;
    default:
      a2[1] = 0;
      a2[2] = 0;
      *a2 = 0x3FF0000000000000;
      break;
  }
  return result;
}

unint64_t sub_1D46C3E2C()
{
  unint64_t result;

  result = qword_1EFEAA528;
  if (!qword_1EFEAA528)
  {
    result = MEMORY[0x1D82634E0](&protocol conformance descriptor for S2Projections.Projection, &type metadata for S2Projections.Projection);
    atomic_store(result, (unint64_t *)&qword_1EFEAA528);
  }
  return result;
}

ValueMetadata *type metadata accessor for S2Projections()
{
  return &type metadata for S2Projections;
}

uint64_t storeEnumTagSinglePayload for S2Projections.Projection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D46C3ECC + 4 * byte_1D4927CC8[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D46C3F00 + 4 * byte_1D4927CC3[v4]))();
}

uint64_t sub_1D46C3F00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46C3F08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D46C3F10);
  return result;
}

uint64_t sub_1D46C3F1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D46C3F24);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D46C3F28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46C3F30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for S2Projections.Projection()
{
  return &type metadata for S2Projections.Projection;
}

uint64_t sub_1D46C3F54()
{
  swift_bridgeObjectRetain();
  return sub_1D4922688();
}

uint64_t sub_1D46C3F90()
{
  swift_bridgeObjectRetain();
  return sub_1D4922688();
}

uint64_t sub_1D46C3FD4()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1D4922688();
}

uint64_t sub_1D46C4020()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1D4922688();
}

uint64_t sub_1D46C4078()
{
  return sub_1D4922688();
}

uint64_t sub_1D46C40AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_1D4922688();
}

uint64_t sub_1D46C4118()
{
  return sub_1D4922688();
}

uint64_t sub_1D46C414C()
{
  uint64_t *v0;

  sub_1D46C1E20(*v0, v0[1]);
  swift_bridgeObjectRetain();
  return sub_1D4922688();
}

uint64_t sub_1D46C4198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = MEMORY[0x1E0C80A78](v0);
  sub_1D46A8550(v1, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_1D4922688();
}

_QWORD *sub_1D46C41FC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB70);
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + 16) = 0;
  v0[3] = v3;
  v0[4] = 0;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D6C0);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 24) = 0;
  *(_BYTE *)(v5 + 32) = -1;
  *(_QWORD *)(v5 + 40) = 0;
  *(_QWORD *)(v5 + 48) = 0;
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v5 + 80) = v6;
  *(_QWORD *)(v5 + 56) = sub_1D46C5960;
  *(_QWORD *)(v5 + 64) = v4;
  swift_retain();
  swift_retain();
  sub_1D46A56B4(0);
  *(_QWORD *)(v5 + 72) = 8;
  swift_release();
  v7 = sub_1D4835CD8();
  swift_release();
  v1[2] = v7;
  return v1;
}

uint64_t sub_1D46C42FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  uint64_t result;
  _QWORD v6[4];
  char v7;

  v6[0] = 0xD00000000000001DLL;
  v6[1] = 0x80000001D49404A0;
  v6[2] = "NSFW Model Loading";
  v6[3] = 18;
  v7 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  sub_1D47C12D0((uint64_t)v6, a1);
  swift_release();
  v4 = objc_msgSend(objc_allocWithZone((Class)VINSFWModelHandler), sel_initWithPreferredMetalDevice_, 0);
  sub_1D47C0B30();
  result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_1D46C43D0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  void *v20;
  unsigned __int8 v21;
  uint64_t v23;

  v2 = v1;
  v4 = *v1;
  v5 = sub_1D4922370();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (os_unfair_lock_s *)(v2[3] + 16);
  os_unfair_lock_lock(v9);
  v10 = v2[4];
  if (!a1)
  {
    if (v10)
      goto LABEL_9;
LABEL_7:
    os_unfair_lock_unlock(v9);
    return 0;
  }
  if (v10)
    v11 = a1 == v10;
  else
    v11 = 0;
  if (v11)
    goto LABEL_7;
LABEL_9:
  sub_1D470C76C((uint64_t)v8);
  v13 = sub_1D4922358();
  v14 = sub_1D4922910();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_1D467C000, v13, v14, "Updating NSFW Model due to MetalDevice switch", v15, 2u);
    MEMORY[0x1D82635B8](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v2[4] = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v16 = v2[2];
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = v4;
  v18 = (os_unfair_lock_s *)(*(_QWORD *)(v16 + 80) + 16);
  swift_unknownObjectRetain();
  os_unfair_lock_lock(v18);
  v19 = *(_QWORD *)(v16 + 40);
  *(_QWORD *)(v16 + 40) = sub_1D46C5900;
  *(_QWORD *)(v16 + 48) = v17;
  sub_1D46A56B4(v19);
  v12 = 1;
  swift_beginAccess();
  v20 = *(void **)(v16 + 24);
  *(_QWORD *)(v16 + 24) = 0;
  v21 = *(_BYTE *)(v16 + 32);
  *(_BYTE *)(v16 + 32) = -1;
  swift_retain();
  sub_1D46C58B8(v20, v21);
  os_unfair_lock_unlock(v18);
  swift_release();
  os_unfair_lock_unlock(v9);
  return v12;
}

uint64_t sub_1D46C45D0(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  void (*v55)(uint64_t, unint64_t);
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  void *v71;
  NSObject *v72;
  os_log_type_t v73;
  _BOOL4 v74;
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  unint64_t v98;
  unint64_t v99;
  _OWORD *v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v121;
  char *v122;
  _WORD *v123;
  char *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  _OWORD v152[8];
  _OWORD v153[2];
  _OWORD v154[8];
  _OWORD v155[2];
  _BYTE v156[160];
  _BYTE v157[160];
  _QWORD v158[4];
  char v159;

  v147 = a6;
  v150 = a5;
  v141 = a3;
  v125 = a2;
  v136 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D7C0);
  MEMORY[0x1E0C80A78](v7);
  v143 = (char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v140 = *(_QWORD *)(v142 - 8);
  v9 = MEMORY[0x1E0C80A78](v142);
  v146 = (uint64_t)&v121 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v151 = (char *)&v121 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v139 = (uint64_t)&v121 - v14;
  MEMORY[0x1E0C80A78](v13);
  v149 = (uint64_t)&v121 - v15;
  v16 = sub_1D4922370();
  v129 = *(_QWORD *)(v16 - 8);
  v130 = v16;
  v17 = MEMORY[0x1E0C80A78](v16);
  v126 = (uint64_t)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v127 = (uint64_t)&v121 - v20;
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v121 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CE38);
  v24 = MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v121 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v145 = (uint64_t)&v121 - v27;
  v28 = type metadata accessor for Argos_Protos_Queryflow_SafetyConfig(0);
  v144 = *(_QWORD *)(v28 - 8);
  v29 = MEMORY[0x1E0C80A78](v28);
  v31 = (char *)&v121 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v33 = (char *)&v121 - v32;
  v34 = type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0);
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v121 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = *a4;
  v38 = a4[1];
  v148 = a4[2];
  v39 = a4[3];
  v131 = v38;
  v132 = v39;
  v40 = a4[5];
  v133 = a4[4];
  v134 = v40;
  v137 = a4[6];
  v138 = v37;
  v135 = a4[7];
  LOBYTE(a4) = sub_1D47136E0(v141);
  sub_1D469C304(v150, (uint64_t)v36, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  if ((a4 & 1) == 0)
  {
    sub_1D4697DE0((uint64_t)v36, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
LABEL_12:
    v62 = v136;
    v63 = v137;
    v64 = v138;
    v66 = v131;
    v65 = v132;
    *v136 = v138;
    v62[1] = v66;
    v62[2] = v148;
    v62[3] = v65;
    v67 = v134;
    v62[4] = v133;
    v62[5] = v67;
    v68 = v135;
    v62[6] = v63;
    v62[7] = v68;
    v69 = v141;
    swift_bridgeObjectRetain();
    sub_1D46B2ED8(v64);
    return v69;
  }
  v122 = v22;
  v123 = v31;
  v124 = v26;
  v41 = *(_QWORD *)&v36[*(int *)(v34 + 20)]
      + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__safetyConfig;
  swift_beginAccess();
  v42 = v145;
  sub_1D46C582C(v41, v145);
  v144 = *(_QWORD *)(v144 + 48);
  v43 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v144)(v42, 1, v28);
  v44 = MEMORY[0x1E0DEE9D8];
  v45 = v34;
  if (v43 == 1)
  {
    *(_WORD *)v33 = 0;
    *((_QWORD *)v33 + 1) = sub_1D47C3B60(v44);
    *((_QWORD *)v33 + 2) = sub_1D47C3F34(v44);
    *((_QWORD *)v33 + 3) = v44;
    *((_QWORD *)v33 + 4) = v44;
    *((_QWORD *)v33 + 5) = v44;
    sub_1D4922010();
    v46 = v28;
    v47 = &v33[*(int *)(v28 + 48)];
    v48 = type metadata accessor for Argos_Protos_Queryflow_SafetyConfig.CornerGlyphConfig(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v47, 1, 1, v48);
    sub_1D46992EC(v42, &qword_1ED98CE38);
  }
  else
  {
    v46 = v28;
    sub_1D469C630(v42, (uint64_t)v33, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig);
  }
  v49 = v150;
  v50 = v147;
  sub_1D4697DE0((uint64_t)v36, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  v51 = v33[1];
  sub_1D4697DE0((uint64_t)v33, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig);
  if ((v51 & 1) == 0)
    goto LABEL_12;
  v121 = v45;
  if (v138 == 1 || !v148)
  {
    sub_1D46C51C0(v50);
    v71 = v70;
    sub_1D470C76C(v126);
    v72 = sub_1D4922358();
    v73 = sub_1D4922910();
    v74 = os_log_type_enabled(v72, v73);
    v60 = v142;
    v59 = (uint64_t)v143;
    if (v74)
    {
      v75 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v75 = 0;
      _os_log_impl(&dword_1D467C000, v72, v73, "NSFWCheckerProcessor: run nsfw model", v75, 2u);
      MEMORY[0x1D82635B8](v75, -1, -1);
    }

    (*(void (**)(uint64_t, unint64_t))(v129 + 8))(v126, v130);
    sub_1D4713990(v125, v71, v147);
    v148 = v76;

    v61 = (uint64_t)v151;
  }
  else
  {
    swift_bridgeObjectRetain();
    v52 = (uint64_t)v122;
    sub_1D470C76C((uint64_t)v122);
    v53 = v127;
    sub_1D470C928(v127);
    v54 = v130;
    v55 = *(void (**)(uint64_t, unint64_t))(v129 + 8);
    v55(v52, v130);
    v56 = sub_1D4922358();
    v57 = sub_1D4922910();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v58 = 0;
      _os_log_impl(&dword_1D467C000, v56, v57, "NSFWCheckerProcessor: using nsfw passed through by framework adopter", v58, 2u);
      MEMORY[0x1D82635B8](v58, -1, -1);
    }

    v55(v53, v54);
    v60 = v142;
    v59 = (uint64_t)v143;
    v49 = v150;
    v61 = (uint64_t)v151;
  }
  v77 = v46;
  v158[0] = 0xD00000000000001DLL;
  v158[1] = 0x80000001D49404A0;
  v158[2] = "NSFW Model Postprocess Results";
  v158[3] = 30;
  v159 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  v78 = v147;
  swift_retain();
  v129 = sub_1D47C12D0((uint64_t)v158, v78);
  swift_release();
  v79 = *(_QWORD *)(v49 + *(int *)(v121 + 20))
      + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__safetyConfig;
  swift_beginAccess();
  v80 = (uint64_t)v124;
  sub_1D46C582C(v79, (uint64_t)v124);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v144)(v80, 1, v77) == 1)
  {
    v81 = v123;
    *v123 = 0;
    v82 = MEMORY[0x1E0DEE9D8];
    v81[1] = sub_1D47C3B60(MEMORY[0x1E0DEE9D8]);
    v81[2] = sub_1D47C3F34(v82);
    v81[3] = v82;
    v81[4] = v82;
    v81[5] = v82;
    sub_1D4922010();
    v83 = (char *)v81 + *(int *)(v77 + 48);
    v84 = type metadata accessor for Argos_Protos_Queryflow_SafetyConfig.CornerGlyphConfig(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v83, 1, 1, v84);
    sub_1D46992EC(v80, &qword_1ED98CE38);
  }
  else
  {
    v81 = v123;
    sub_1D469C630(v80, (uint64_t)v123, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig);
  }
  v69 = v141;
  v85 = v149;
  v86 = sub_1D4713E70(v148, (uint64_t)v81);
  swift_bridgeObjectRelease();
  sub_1D4697DE0((uint64_t)v81, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig);
  v128 = v86;
  if (v86[2])
  {
    v145 = *(_QWORD *)(v69 + 16);
    if (v145)
    {
      v87 = v140;
      v130 = (*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80);
      v144 = v69 + v130;
      v147 = *(_QWORD *)(v140 + 72);
      swift_bridgeObjectRetain();
      v88 = 0;
      v148 = MEMORY[0x1E0DEE9D8];
      do
      {
        v150 = v88;
        sub_1D469C304(v144 + v147 * v88, v85, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1D469C304(v85, v61, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        v89 = *(_QWORD *)(v85 + 40);
        v90 = *(_QWORD *)(v89 + 16);
        if (v90)
        {
          swift_bridgeObjectRetain();
          v91 = v90 - 1;
          v92 = 32;
          v93 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          while (1)
          {
            v94 = *(_OWORD *)(v89 + v92 + 112);
            v154[6] = *(_OWORD *)(v89 + v92 + 96);
            v154[7] = v94;
            v155[0] = *(_OWORD *)(v89 + v92 + 128);
            *(_OWORD *)((char *)v155 + 12) = *(_OWORD *)(v89 + v92 + 140);
            v95 = *(_OWORD *)(v89 + v92 + 48);
            v154[2] = *(_OWORD *)(v89 + v92 + 32);
            v154[3] = v95;
            v96 = *(_OWORD *)(v89 + v92 + 80);
            v154[4] = *(_OWORD *)(v89 + v92 + 64);
            v154[5] = v96;
            v97 = *(_OWORD *)(v89 + v92 + 16);
            v154[0] = *(_OWORD *)(v89 + v92);
            v154[1] = v97;
            sub_1D46C537C(v154, (CGFloat *)v61, (uint64_t)v152);
            sub_1D46A4760((uint64_t)v152, (uint64_t)v156);
            sub_1D46A4760((uint64_t)v156, (uint64_t)v157);
            if (sub_1D46A47A8((uint64_t)v157) != 1)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v93 = sub_1D48A84F8(0, v93[2] + 1, 1, v93);
              v99 = v93[2];
              v98 = v93[3];
              if (v99 >= v98 >> 1)
                v93 = sub_1D48A84F8((_QWORD *)(v98 > 1), v99 + 1, 1, v93);
              sub_1D46A4760((uint64_t)v156, (uint64_t)v152);
              v93[2] = v99 + 1;
              v100 = &v93[20 * v99];
              v101 = v152[1];
              v100[2] = v152[0];
              v100[3] = v101;
              v102 = v152[5];
              v104 = v152[2];
              v103 = v152[3];
              v100[6] = v152[4];
              v100[7] = v102;
              v100[4] = v104;
              v100[5] = v103;
              v105 = v152[7];
              v106 = v153[0];
              v107 = v152[6];
              *(_OWORD *)((char *)v100 + 172) = *(_OWORD *)((char *)v153 + 12);
              v100[9] = v105;
              v100[10] = v106;
              v100[8] = v107;
              v61 = (uint64_t)v151;
            }
            if (!v91)
              break;
            --v91;
            v92 += 160;
          }
          swift_bridgeObjectRelease();
          v60 = v142;
          v59 = (uint64_t)v143;
          v87 = v140;
        }
        else
        {
          v93 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        }
        swift_beginAccess();
        *(_QWORD *)(v61 + 40) = v93;
        *(_DWORD *)(v61 + 64) = 0;
        swift_bridgeObjectRelease();
        sub_1D469C304(v61, v59, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v87 + 56))(v59, 0, 1, v60);
        sub_1D4697DE0(v61, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        v85 = v149;
        sub_1D4697DE0(v149, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v59, 1, v60) == 1)
        {
          sub_1D46992EC(v59, &qword_1ED98D7C0);
        }
        else
        {
          v108 = v139;
          sub_1D469C630(v59, v139, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1D469C630(v108, v146, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v148 = sub_1D48A8614(0, *(_QWORD *)(v148 + 16) + 1, 1, v148);
          v110 = *(_QWORD *)(v148 + 16);
          v109 = *(_QWORD *)(v148 + 24);
          v111 = v146;
          if (v110 >= v109 >> 1)
          {
            v148 = sub_1D48A8614(v109 > 1, v110 + 1, 1, v148);
            v111 = v146;
          }
          v112 = v148;
          *(_QWORD *)(v148 + 16) = v110 + 1;
          sub_1D469C630(v111, v112 + v130 + v110 * v147, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          v85 = v149;
        }
        v88 = v150 + 1;
      }
      while (v150 + 1 != v145);
      swift_bridgeObjectRelease();
      v69 = v148;
    }
    else
    {
      v69 = MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v114 = v135;
  v113 = v136;
  v116 = v133;
  v115 = v134;
  v118 = v131;
  v117 = v132;
  v119 = v138;
  if (v138 == 1)
  {
    v114 = 0;
    v115 = 0;
    v137 = 0;
    v116 = 0;
    v117 = 0;
    v118 = 0;
    v119 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  sub_1D47C0B30();
  swift_release();
  *v113 = v119;
  v113[1] = v118;
  v113[2] = (uint64_t)v128;
  v113[3] = v117;
  v113[4] = v116;
  v113[5] = v115;
  v113[6] = v137;
  v113[7] = v114;
  return v69;
}

void sub_1D46C51C0(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  os_unfair_lock_s *v5;
  int v6;
  void (*v7)(void **__return_ptr, uint64_t);
  void *v8;
  unsigned __int8 v9;
  id v10;
  void *v11;
  id v12;
  _BYTE *v13;
  void *v14;
  void *v15;
  unsigned __int8 v16;
  void *v17;

  v3 = v1;
  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 80) + 16);
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  v6 = *(unsigned __int8 *)(v3 + 32);
  if (v6 != 255)
  {
    v11 = *(void **)(v3 + 24);
    if ((v6 & 1) == 0)
    {
      v11;
      os_unfair_lock_unlock(v5);
      return;
    }
    v17 = *(void **)(v3 + 24);
    v12 = v11;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98ECF0);
    swift_willThrowTypedImpl();
    goto LABEL_9;
  }
  v7 = *(void (**)(void **__return_ptr, uint64_t))(v3 + 56);
  if (!v7)
  {
    sub_1D46C5874();
    swift_allocError();
    *v13 = 1;
    swift_willThrow();
    goto LABEL_9;
  }
  swift_retain();
  v7(&v17, a1);
  if (v2)
  {
    v8 = *(void **)(v3 + 24);
    *(_QWORD *)(v3 + 24) = v2;
    v9 = *(_BYTE *)(v3 + 32);
    *(_BYTE *)(v3 + 32) = 1;
    v10 = v2;
    sub_1D46C58B8(v8, v9);
    swift_willThrow();
    sub_1D46A56B4((uint64_t)v7);
LABEL_9:
    os_unfair_lock_unlock(v5);
    return;
  }
  sub_1D46A56B4((uint64_t)v7);
  v14 = v17;
  v15 = *(void **)(v3 + 24);
  *(_QWORD *)(v3 + 24) = v17;
  v16 = *(_BYTE *)(v3 + 32);
  *(_BYTE *)(v3 + 32) = 0;
  v14;
  sub_1D46C58B8(v15, v16);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1D46C537C@<X0>(_OWORD *a1@<X0>, CGFloat *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  char *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  int v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint64_t v22;
  uint8_t *v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  uint64_t v28;
  CGFloat MinX;
  uint64_t v30;
  CGFloat MinY;
  CGFloat Width;
  CGFloat Height;
  uint64_t v34;
  unint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  _QWORD v39[3];
  uint8_t *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[5];
  char v65;
  _BYTE v66[7];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  __int16 v77;
  char v78;
  char v79;
  char v80;
  char v81;
  int v82;
  __int16 v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  int v87;
  __int16 v88;
  _BYTE v89[7];
  _OWORD v90[2];
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  _OWORD v97[3];
  uint64_t v98;
  CGRect v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;

  v46 = a3;
  v98 = sub_1D4922370();
  v62 = *(_QWORD *)(v98 - 8);
  MEMORY[0x1E0C80A78](v98);
  v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[7];
  v95 = a1[6];
  v96 = v8;
  v97[0] = a1[8];
  *(_OWORD *)((char *)v97 + 12) = *(_OWORD *)((char *)a1 + 140);
  v9 = a1[3];
  v91 = a1[2];
  v92 = v9;
  v10 = a1[5];
  v93 = a1[4];
  v94 = v10;
  v11 = a1[1];
  v90[0] = *a1;
  v90[1] = v11;
  v58 = LOBYTE(v90[0]);
  v12 = *((_QWORD *)&v90[0] + 1);
  v13 = v11;
  v56 = v91;
  v57 = *((_QWORD *)&v11 + 1);
  v55 = BYTE8(v91);
  v53 = *((_QWORD *)&v92 + 1);
  v54 = v92;
  v51 = *((_QWORD *)&v93 + 1);
  v52 = v93;
  v49 = *((_QWORD *)&v94 + 1);
  v50 = v94;
  v47 = *((_QWORD *)&v95 + 1);
  v48 = v95;
  v14 = *(_QWORD *)((char *)&v96 + 4);
  v15 = BYTE14(v96);
  LODWORD(v16) = HIBYTE(v96);
  v17 = v97[0];
  v61 = BYTE1(v97[0]);
  v59 = *(_QWORD *)&v97[1];
  v60 = *((_QWORD *)&v97[0] + 1);
  v18 = DWORD2(v97[1]);
  sub_1D46A47CC((uint64_t)v90);
  sub_1D470C76C((uint64_t)v7);
  v19 = sub_1D4922358();
  v20 = sub_1D4922910();
  v21 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    v44 = v16;
    v22 = swift_slowAlloc();
    v41 = v21;
    v23 = (uint8_t *)v22;
    v42 = swift_slowAlloc();
    v64[0] = v42;
    v45 = v3;
    *(_DWORD *)v23 = 136315138;
    v39[2] = v23 + 12;
    v40 = v23;
    v39[1] = v23 + 4;
    swift_beginAccess();
    v24 = *a2;
    v25 = a2[1];
    v43 = v12;
    v26 = a2[2];
    v27 = a2[3];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1D4927560;
    v99.origin.x = v24;
    v99.origin.y = v25;
    v99.size.width = v26;
    v99.size.height = v27;
    MinX = CGRectGetMinX(v99);
    v30 = MEMORY[0x1E0DEF040];
    *(_QWORD *)(v28 + 56) = MEMORY[0x1E0DEF040];
    v16 = sub_1D46A492C();
    *(_QWORD *)(v28 + 64) = v16;
    *(CGFloat *)(v28 + 32) = MinX;
    v100.origin.x = v24;
    v100.origin.y = v25;
    v100.size.width = v26;
    v100.size.height = v27;
    MinY = CGRectGetMinY(v100);
    *(_QWORD *)(v28 + 96) = v30;
    *(_QWORD *)(v28 + 104) = v16;
    *(CGFloat *)(v28 + 72) = MinY;
    v101.origin.x = v24;
    v101.origin.y = v25;
    v101.size.width = v26;
    v101.size.height = v27;
    Width = CGRectGetWidth(v101);
    *(_QWORD *)(v28 + 136) = v30;
    *(_QWORD *)(v28 + 144) = v16;
    *(CGFloat *)(v28 + 112) = Width;
    v102.origin.x = v24;
    v102.origin.y = v25;
    v102.size.width = v26;
    v102.size.height = v27;
    v12 = v43;
    Height = CGRectGetHeight(v102);
    *(_QWORD *)(v28 + 176) = v30;
    *(_QWORD *)(v28 + 184) = v16;
    LOBYTE(v16) = v44;
    *(CGFloat *)(v28 + 152) = Height;
    v34 = sub_1D4922640();
    v63 = sub_1D47F0250(v34, v35, v64);
    sub_1D4922A78();
    swift_bridgeObjectRelease();
    v36 = v40;
    _os_log_impl(&dword_1D467C000, v19, (os_log_type_t)v41, "Unselected (updatedDomainInfo.domain.rawValue) from region %s because of sensitive content.", v40, 0xCu);
    v37 = v42;
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v37, -1, -1);
    MEMORY[0x1D82635B8](v36, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v62 + 8))(v7, v98);
  *(_DWORD *)((char *)v64 + 1) = v63;
  HIDWORD(v64[0]) = *(_DWORD *)((char *)&v63 + 3);
  *(_DWORD *)v66 = *(_DWORD *)v89;
  *(_DWORD *)&v66[3] = *(_DWORD *)&v89[3];
  v82 = v87;
  v83 = v88;
  LOBYTE(v64[0]) = v58;
  v64[1] = v12;
  v64[2] = v13;
  v64[3] = v57;
  v64[4] = v56;
  v65 = v55;
  v67 = v54;
  v68 = v53;
  v69 = v52;
  v70 = v51;
  v71 = v50;
  v72 = v49;
  v73 = v48;
  v74 = v47;
  v75 = 0;
  v76 = v14;
  v77 = 0;
  v78 = v15;
  v79 = v16;
  v80 = v17;
  v81 = v61;
  v84 = v60;
  v85 = v59;
  v86 = v18;
  faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v64);
  return sub_1D46A4760((uint64_t)v64, v46);
}

uint64_t sub_1D46C57D8()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NSFWCheckerProcessor()
{
  return objc_opt_self();
}

uint64_t sub_1D46C582C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CE38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D46C5874()
{
  unint64_t result;

  result = qword_1EFEAA538;
  if (!qword_1EFEAA538)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4936E50, &type metadata for LazyLoaderError);
    atomic_store(result, (unint64_t *)&qword_1EFEAA538);
  }
  return result;
}

void sub_1D46C58B8(id a1, unsigned __int8 a2)
{
  if (a2 != 255)
    sub_1D46C58D0(a1);
}

void sub_1D46C58D0(id a1)
{

}

uint64_t sub_1D46C58DC()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

id sub_1D46C5900@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)VINSFWModelHandler), sel_initWithPreferredMetalDevice_, *(_QWORD *)(v1 + 16));
  *a1 = result;
  return result;
}

uint64_t sub_1D46C5950()
{
  return swift_deallocObject();
}

uint64_t sub_1D46C5960@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1D46C42FC(a1, a2);
}

uint64_t sub_1D46C5978(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    v8 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
    v9 = v7 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_1D492201C();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    *(_BYTE *)(v7 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v14 = v7 + v13;
    v15 = (uint64_t)a2 + v13;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
    *(_QWORD *)(v7 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1D46C5A64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
  v3 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D46C5AC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D492201C();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D46C5B8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = v13;
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D46C5C64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1D46C5D10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D46C5DD4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D46C5DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1D46C5E5C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D46C5E68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ObjectDetectionDomainAssignmentRule()
{
  uint64_t result;

  result = qword_1ED98CE40;
  if (!qword_1ED98CE40)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D46C5F1C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D46C5FA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  double *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  double *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  uint64_t v42;
  CGFloat v43;
  uint64_t v44;
  unint64_t v45;
  CGFloat v46;
  CGFloat v47;
  CGFloat v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void (*v52)(_BYTE *, uint64_t);
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double *v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  CGFloat v67;
  CGFloat v68;
  CGFloat v69;
  CGFloat v70;
  uint64_t v71;
  CGFloat MinX;
  uint64_t v73;
  unint64_t v74;
  CGFloat MinY;
  CGFloat Width;
  CGFloat Height;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned __int8 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  __int128 v88;
  __int128 v89;
  _BYTE v90[4];
  int v91;
  _BYTE *v92;
  _BYTE *v93;
  double *v94;
  _BYTE *v95;
  double *v96;
  _BYTE *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint8_t *v104;
  _OWORD v105[8];
  _OWORD v106[2];
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  _OWORD v115[2];
  _OWORD v116[8];
  _OWORD v117[2];
  _OWORD v118[3];
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  _OWORD v124[2];
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  _OWORD v133[2];
  _BYTE v134[176];
  CGRect v135;
  CGRect v136;
  CGRect v137;
  CGRect v138;
  CGRect v139;
  CGRect v140;
  CGRect v141;
  CGRect v142;

  v99 = a3;
  v103 = a1;
  v104 = (uint8_t *)a2;
  v102 = a4;
  v101 = type metadata accessor for ObjectDetectionDomainAssignmentRule();
  MEMORY[0x1E0C80A78](v101);
  v5 = &v90[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (double *)&v90[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v11 = (double *)&v90[-v10];
  v12 = sub_1D4922370();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = &v90[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = &v90[-v18];
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = &v90[-v21];
  MEMORY[0x1E0C80A78](v20);
  v24 = &v90[-v23];
  sub_1D46A4760(v103, (uint64_t)v134);
  if (v104[96] == 1)
  {
LABEL_9:
    sub_1D46A4760((uint64_t)v134, v102);
    return sub_1D46C6AE4((uint64_t)v134, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6A64);
  }
  v95 = v16;
  v96 = v11;
  v92 = v5;
  v93 = v24;
  v94 = v9;
  v97 = v22;
  v98 = v13;
  v103 = v12;
  v25 = v100;
  swift_bridgeObjectRetain();
  v26 = *(_QWORD *)v25;
  v27 = v101;
  *(_QWORD *)&v118[0] = *(_QWORD *)(v25 + *(int *)(v101 + 28));
  sub_1D46C6AE4((uint64_t)v134, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6A64);
  swift_bridgeObjectRetain();
  sub_1D4720740(v26, (uint64_t *)v118, (uint64_t)&v125);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = v128;
  if (!(_QWORD)v128)
  {
    sub_1D46C6AE4((uint64_t)v134, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6B50);
    sub_1D470C76C((uint64_t)v19);
    v51 = (uint64_t)v95;
    sub_1D470C928((uint64_t)v95);
    v52 = *(void (**)(_BYTE *, uint64_t))(v98 + 8);
    v53 = v103;
    v52(v19, v103);
    v54 = sub_1D4922358();
    v55 = sub_1D4922910();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v56 = 0;
      _os_log_impl(&dword_1D467C000, v54, v55, "No satisfied detector label", v56, 2u);
      MEMORY[0x1D82635B8](v56, -1, -1);
    }

    v52((_BYTE *)v51, v53);
    goto LABEL_9;
  }
  if (*(_BYTE *)(v25 + 8) != 1)
  {
    v91 = DWORD2(v129);
    v93 = (_BYTE *)v129;
    v95 = (_BYTE *)*((_QWORD *)&v127 + 1);
    v96 = (double *)*((_QWORD *)&v128 + 1);
    v99 = v128;
    v58 = v27;
    v59 = (uint64_t)v97;
    sub_1D470C76C((uint64_t)v97);
    v60 = (uint64_t)v92;
    sub_1D469C304(v25, (uint64_t)v92, (uint64_t (*)(_QWORD))type metadata accessor for ObjectDetectionDomainAssignmentRule);
    v61 = v94;
    sub_1D469C304((uint64_t)v104, (uint64_t)v94, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v62 = sub_1D4922358();
    v63 = sub_1D4922910();
    if (os_log_type_enabled(v62, v63))
    {
      v64 = swift_slowAlloc();
      v104 = (uint8_t *)swift_slowAlloc();
      *(_QWORD *)&v125 = v104;
      *(_DWORD *)v64 = 136315394;
      v65 = sub_1D46F8BC8(*(_BYTE *)(v60 + *(int *)(v58 + 20)));
      *(_QWORD *)&v118[0] = sub_1D47F0250(v65, v66, (uint64_t *)&v125);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      sub_1D4697DE0(v60, (uint64_t (*)(_QWORD))type metadata accessor for ObjectDetectionDomainAssignmentRule);
      *(_WORD *)(v64 + 12) = 2080;
      v92 = (_BYTE *)(v64 + 14);
      v67 = *v61;
      v68 = v61[1];
      v69 = v61[2];
      v70 = v61[3];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
      v71 = swift_allocObject();
      *(_OWORD *)(v71 + 16) = xmmword_1D4927560;
      v139.origin.x = v67;
      v139.origin.y = v68;
      v139.size.width = v69;
      v139.size.height = v70;
      MinX = CGRectGetMinX(v139);
      v73 = MEMORY[0x1E0DEF040];
      *(_QWORD *)(v71 + 56) = MEMORY[0x1E0DEF040];
      v74 = sub_1D46A492C();
      *(_QWORD *)(v71 + 64) = v74;
      *(CGFloat *)(v71 + 32) = MinX;
      v140.origin.x = v67;
      v140.origin.y = v68;
      v140.size.width = v69;
      v140.size.height = v70;
      MinY = CGRectGetMinY(v140);
      *(_QWORD *)(v71 + 96) = v73;
      *(_QWORD *)(v71 + 104) = v74;
      *(CGFloat *)(v71 + 72) = MinY;
      v141.origin.x = v67;
      v141.origin.y = v68;
      v141.size.width = v69;
      v141.size.height = v70;
      Width = CGRectGetWidth(v141);
      *(_QWORD *)(v71 + 136) = v73;
      *(_QWORD *)(v71 + 144) = v74;
      *(CGFloat *)(v71 + 112) = Width;
      v142.origin.x = v67;
      v142.origin.y = v68;
      v142.size.width = v69;
      v142.size.height = v70;
      Height = CGRectGetHeight(v142);
      *(_QWORD *)(v71 + 176) = v73;
      *(_QWORD *)(v71 + 184) = v74;
      *(CGFloat *)(v71 + 152) = Height;
      v78 = sub_1D4922640();
      *(_QWORD *)&v118[0] = sub_1D47F0250(v78, v79, (uint64_t *)&v125);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      sub_1D4697DE0((uint64_t)v61, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      v58 = v101;
      _os_log_impl(&dword_1D467C000, v62, v63, "Assign %s to region %s", (uint8_t *)v64, 0x16u);
      v80 = (uint64_t)v104;
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v80, -1, -1);
      MEMORY[0x1D82635B8](v64, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v98 + 8))(v97, v103);
    }
    else
    {
      sub_1D4697DE0(v60, (uint64_t (*)(_QWORD))type metadata accessor for ObjectDetectionDomainAssignmentRule);
      sub_1D4697DE0((uint64_t)v61, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);

      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v59, v103);
    }
    v82 = *(_BYTE *)(v25 + *(int *)(v58 + 20));
    LOBYTE(v118[0]) = v82;
    *(_OWORD *)((char *)v118 + 8) = 0u;
    *(_OWORD *)((char *)&v118[1] + 8) = 0u;
    BYTE8(v118[2]) = 0;
    v119 = 0u;
    v120 = 0u;
    *(_QWORD *)&v121 = v95;
    *((_QWORD *)&v121 + 1) = v99;
    *(_QWORD *)&v122 = v96;
    *((_QWORD *)&v122 + 1) = v93;
    LODWORD(v123) = 0;
    DWORD1(v123) = v91;
    *((_QWORD *)&v123 + 1) = 0;
    LOWORD(v124[0]) = 0;
    *(_QWORD *)&v124[1] = 0;
    *((_QWORD *)&v124[0] + 1) = 0;
    DWORD2(v124[1]) = 0;
    sub_1D46A4760((uint64_t)v134, (uint64_t)&v125);
    if (sub_1D46A47A8((uint64_t)&v125) != 1)
    {
      v83 = sub_1D46F8BC8(v125);
      v85 = v84;
      if (v83 == sub_1D46F8BC8(v82) && v85 == v86)
      {
        swift_bridgeObjectRelease_n();
LABEL_20:
        v116[6] = v131;
        v116[7] = v132;
        v117[0] = v133[0];
        *(_OWORD *)((char *)v117 + 12) = *(_OWORD *)((char *)v133 + 12);
        v116[2] = v127;
        v116[3] = v128;
        v116[4] = v129;
        v116[5] = v130;
        v116[0] = v125;
        v116[1] = v126;
        v113 = v122;
        v114 = v123;
        v115[0] = v124[0];
        *(_OWORD *)((char *)v115 + 12) = *(_OWORD *)((char *)v124 + 12);
        v109 = v118[2];
        v110 = v119;
        v111 = v120;
        v112 = v121;
        v107 = v118[0];
        v108 = v118[1];
        sub_1D482947C((uint64_t)v116, &v107, (uint64_t)v105);
        sub_1D46C6AE4((uint64_t)v134, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6B50);
        sub_1D46A48AC((uint64_t)v118);
        v113 = v105[6];
        v114 = v105[7];
        v115[0] = v106[0];
        *(_OWORD *)((char *)v115 + 12) = *(_OWORD *)((char *)v106 + 12);
        v109 = v105[2];
        v110 = v105[3];
        v111 = v105[4];
        v112 = v105[5];
        v88 = v105[0];
        v89 = v105[1];
LABEL_23:
        v107 = v88;
        v108 = v89;
        faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v107);
        sub_1D46A4760((uint64_t)&v107, (uint64_t)v116);
        return sub_1D46A4760((uint64_t)v116, v102);
      }
      v87 = sub_1D4922E38();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v87 & 1) != 0)
        goto LABEL_20;
      sub_1D46C6AE4((uint64_t)v134, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6B50);
    }
    v113 = v122;
    v114 = v123;
    v115[0] = v124[0];
    *(_OWORD *)((char *)v115 + 12) = *(_OWORD *)((char *)v124 + 12);
    v109 = v118[2];
    v110 = v119;
    v111 = v120;
    v112 = v121;
    v88 = v118[0];
    v89 = v118[1];
    goto LABEL_23;
  }
  v29 = *((_QWORD *)&v125 + 1);
  v101 = v125;
  v30 = v126;
  v31 = v127;
  sub_1D46C6AE4((uint64_t)v134, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6B50);
  sub_1D46A4970(v101, v29, v30, *((uint64_t *)&v30 + 1), v31, *((uint64_t *)&v31 + 1), v28);
  v32 = (uint64_t)v93;
  sub_1D470C76C((uint64_t)v93);
  v33 = v96;
  sub_1D469C304((uint64_t)v104, (uint64_t)v96, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  v34 = sub_1D4922358();
  v35 = sub_1D4922910();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    *(_DWORD *)v36 = 136315138;
    *(_QWORD *)&v125 = v37;
    v104 = v36 + 4;
    v38 = *v33;
    v39 = v33[1];
    v40 = v33[2];
    v41 = v33[3];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
    v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1D4927560;
    v135.origin.x = v38;
    v135.origin.y = v39;
    v135.size.width = v40;
    v135.size.height = v41;
    v43 = CGRectGetMinX(v135);
    v44 = MEMORY[0x1E0DEF040];
    *(_QWORD *)(v42 + 56) = MEMORY[0x1E0DEF040];
    v45 = sub_1D46A492C();
    *(_QWORD *)(v42 + 64) = v45;
    *(CGFloat *)(v42 + 32) = v43;
    v136.origin.x = v38;
    v136.origin.y = v39;
    v136.size.width = v40;
    v136.size.height = v41;
    v46 = CGRectGetMinY(v136);
    *(_QWORD *)(v42 + 96) = v44;
    *(_QWORD *)(v42 + 104) = v45;
    *(CGFloat *)(v42 + 72) = v46;
    v137.origin.x = v38;
    v137.origin.y = v39;
    v137.size.width = v40;
    v137.size.height = v41;
    v47 = CGRectGetWidth(v137);
    *(_QWORD *)(v42 + 136) = v44;
    *(_QWORD *)(v42 + 144) = v45;
    *(CGFloat *)(v42 + 112) = v47;
    v138.origin.x = v38;
    v138.origin.y = v39;
    v138.size.width = v40;
    v138.size.height = v41;
    v48 = CGRectGetHeight(v138);
    *(_QWORD *)(v42 + 176) = v44;
    *(_QWORD *)(v42 + 184) = v45;
    *(CGFloat *)(v42 + 152) = v48;
    v49 = sub_1D4922640();
    *(_QWORD *)&v118[0] = sub_1D47F0250(v49, v50, (uint64_t *)&v125);
    sub_1D4922A78();
    swift_bridgeObjectRelease();
    sub_1D4697DE0((uint64_t)v96, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    _os_log_impl(&dword_1D467C000, v34, v35, "Reject any domain to region %s", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v37, -1, -1);
    MEMORY[0x1D82635B8](v36, -1, -1);
  }
  else
  {
    sub_1D4697DE0((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  }

  (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v32, v103);
  v81 = v102;
  sub_1D46C6BD0((uint64_t)&v125);
  return sub_1D46A4760((uint64_t)&v125, v81);
}

uint64_t sub_1D46C6A44()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t sub_1D46C6A4C(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 24));
}

uint64_t sub_1D46C6A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t result;

  if (a5 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D46A484C(a11, a12);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D46C6AE4(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_DWORD *)(a1 + 152));
  return a1;
}

uint64_t sub_1D46C6B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t result;

  if (a5 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D46A487C(a11, a12);
    return swift_bridgeObjectRelease();
  }
  return result;
}

double sub_1D46C6BD0(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 32) = 1;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_DWORD *)(a1 + 152) = 0;
  return result;
}

uint64_t sub_1D46C6C04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA568);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_1D49214F4();
  v43 = *(_QWORD *)(v44 - 8);
  v6 = MEMORY[0x1E0C80A78](v44);
  v38 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v37 = (char *)&v36 - v8;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA590);
  v9 = MEMORY[0x1E0C80A78](v42);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v36 - v12;
  v14 = *(_QWORD *)(a1 + 64);
  v40 = a1 + 64;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v41 = (unint64_t)(v15 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v39 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v21 = v20 | (v19 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v19++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v19 >= v41)
      goto LABEL_32;
    v23 = *(_QWORD *)(v40 + 8 * v19);
    if (!v23)
      break;
LABEL_18:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_19:
    v25 = *(_QWORD *)(a1 + 48);
    v26 = sub_1D4921638();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v13, v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v21, v26);
    *(_QWORD *)&v13[*(int *)(v42 + 48)] = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v21);
    sub_1D46B3464((uint64_t)v13, (uint64_t)v11, &qword_1EFEAA590);
    swift_bridgeObjectRetain();
    sub_1D46CA02C((uint64_t)v11, v5);
    if (v1)
    {
      sub_1D46992EC((uint64_t)v11, &qword_1EFEAA590);
      v35 = v39;
      swift_bridgeObjectRelease();
LABEL_33:
      swift_release();
      return v35;
    }
    sub_1D46992EC((uint64_t)v11, &qword_1EFEAA590);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v5, 1, v44) == 1)
    {
      result = sub_1D46992EC((uint64_t)v5, &qword_1EFEAA568);
    }
    else
    {
      v27 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
      v28 = v44;
      v27(v37, v5, v44);
      v27(v38, v37, v28);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v39 = sub_1D48A9620(0, *(_QWORD *)(v39 + 16) + 1, 1, v39);
      v30 = *(_QWORD *)(v39 + 16);
      v29 = *(_QWORD *)(v39 + 24);
      v31 = v30 + 1;
      if (v30 >= v29 >> 1)
      {
        v36 = v30 + 1;
        v34 = sub_1D48A9620(v29 > 1, v30 + 1, 1, v39);
        v31 = v36;
        v39 = v34;
      }
      v32 = v38;
      v33 = v39;
      *(_QWORD *)(v39 + 16) = v31;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v27)(v33+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(_QWORD *)(v43 + 72) * v30, v32, v44);
    }
  }
  v24 = v19 + 1;
  if (v19 + 1 >= v41)
    goto LABEL_32;
  v23 = *(_QWORD *)(v40 + 8 * v24);
  if (v23)
    goto LABEL_17;
  v24 = v19 + 2;
  if (v19 + 2 >= v41)
    goto LABEL_32;
  v23 = *(_QWORD *)(v40 + 8 * v24);
  if (v23)
    goto LABEL_17;
  v24 = v19 + 3;
  if (v19 + 3 >= v41)
    goto LABEL_32;
  v23 = *(_QWORD *)(v40 + 8 * v24);
  if (v23)
    goto LABEL_17;
  v24 = v19 + 4;
  if (v19 + 4 >= v41)
  {
LABEL_32:
    v35 = v39;
    goto LABEL_33;
  }
  v23 = *(_QWORD *)(v40 + 8 * v24);
  if (v23)
  {
LABEL_17:
    v19 = v24;
    goto LABEL_18;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v41)
      goto LABEL_32;
    v23 = *(_QWORD *)(v40 + 8 * v19);
    ++v24;
    if (v23)
      goto LABEL_18;
  }
LABEL_35:
  __break(1u);
  return result;
}

unint64_t sub_1D46C7028@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1D46CB918(*a1);
  *a2 = result;
  return result;
}

void sub_1D46C7050(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_1D46C705C()
{
  sub_1D46CED68();
  sub_1D46CEDAC();
  return sub_1D4922ED4();
}

uint64_t sub_1D46C70A0@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;

  v52 = a4;
  v51 = a3;
  v50 = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA540);
  v8 = MEMORY[0x1E0C80A78](v7);
  v49 = (uint64_t)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v47 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v47 - v13;
  v15 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v47 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v47 - v23;
  v25 = a2 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0) + 32);
  sub_1D469C5EC(v25, (uint64_t)v14, &qword_1EFEAA540);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v27 = v26(v14, 1, v15);
  v28 = MEMORY[0x1E0DEE9D8];
  if (v27 == 1)
  {
    *(_QWORD *)v24 = sub_1D47C4054(MEMORY[0x1E0DEE9D8]);
    *((_QWORD *)v24 + 1) = v28;
    *((_DWORD *)v24 + 4) = 0;
    sub_1D4922010();
    sub_1D46992EC((uint64_t)v14, &qword_1EFEAA540);
  }
  else
  {
    sub_1D469C630((uint64_t)v14, (uint64_t)v24, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  }
  v48 = *((int *)v24 + 4);
  sub_1D4697DE0((uint64_t)v24, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  sub_1D469C5EC(v25, (uint64_t)v12, &qword_1EFEAA540);
  if (v26(v12, 1, v15) == 1)
  {
    v29 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)v22 = sub_1D47C4054(MEMORY[0x1E0DEE9D8]);
    *((_QWORD *)v22 + 1) = v29;
    *((_DWORD *)v22 + 4) = 0;
    sub_1D4922010();
    sub_1D46992EC((uint64_t)v12, &qword_1EFEAA540);
  }
  else
  {
    sub_1D469C630((uint64_t)v12, (uint64_t)v22, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  }
  v30 = a1[9];
  v61 = a1[8];
  v62 = v30;
  v63 = a1[10];
  v64 = *((_QWORD *)a1 + 22);
  v31 = a1[5];
  v57 = a1[4];
  v58 = v31;
  v32 = a1[7];
  v59 = a1[6];
  v60 = v32;
  v33 = a1[1];
  v53 = *a1;
  v54 = v33;
  v34 = a1[3];
  v55 = a1[2];
  v56 = v34;
  v35 = sub_1D4829664();
  MEMORY[0x1E0C80A78](v35);
  *(&v47 - 2) = (uint64_t)v22;
  v36 = sub_1D489BC98((void (*)(_QWORD *__return_ptr, _QWORD))sub_1D46CEDF0, (uint64_t)(&v47 - 4), v35);
  swift_bridgeObjectRelease();
  v37 = sub_1D4888954((uint64_t)v36);
  swift_bridgeObjectRelease();
  sub_1D4697DE0((uint64_t)v22, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  v38 = a1[9];
  v61 = a1[8];
  v62 = v38;
  v63 = a1[10];
  v64 = *((_QWORD *)a1 + 22);
  v39 = a1[5];
  v57 = a1[4];
  v58 = v39;
  v40 = a1[7];
  v59 = a1[6];
  v60 = v40;
  v41 = a1[1];
  v53 = *a1;
  v54 = v41;
  v42 = a1[3];
  v55 = a1[2];
  v56 = v42;
  v43 = v49;
  sub_1D469C5EC(v25, v49, &qword_1EFEAA540);
  if (v26((char *)v43, 1, v15) == 1)
  {
    v44 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)v19 = sub_1D47C4054(MEMORY[0x1E0DEE9D8]);
    *((_QWORD *)v19 + 1) = v44;
    *((_DWORD *)v19 + 4) = 0;
    sub_1D4922010();
    sub_1D46992EC(v43, &qword_1EFEAA540);
  }
  else
  {
    sub_1D469C630(v43, (uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  }
  if ((v37 & 0x100000000) != 0)
    v45 = 0;
  else
    v45 = (int)v37;
  sub_1D46C74EC((uint64_t)&v53, (uint64_t)v19, v51, v48, 0, v45, (v37 & 0x100000000) >> 32, v52);
  return sub_1D4697DE0((uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
}

uint64_t sub_1D46C74EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, void *a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  id v23;
  void (*v24)(unint64_t *, _QWORD);
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t *v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(unint64_t *, _QWORD);
  uint64_t *v36;
  uint64_t *v37;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _OWORD v47[11];
  uint64_t v48;

  v43 = a7;
  v42 = a6;
  v41 = a5;
  v40 = a4;
  v12 = sub_1D4921950();
  MEMORY[0x1E0C80A78](v12);
  v13 = sub_1D4921098();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_OWORD *)(a1 + 144);
  v47[8] = *(_OWORD *)(a1 + 128);
  v47[9] = v17;
  v47[10] = *(_OWORD *)(a1 + 160);
  v48 = *(_QWORD *)(a1 + 176);
  v18 = *(_OWORD *)(a1 + 80);
  v47[4] = *(_OWORD *)(a1 + 64);
  v47[5] = v18;
  v19 = *(_OWORD *)(a1 + 112);
  v47[6] = *(_OWORD *)(a1 + 96);
  v47[7] = v19;
  v20 = *(_OWORD *)(a1 + 16);
  v47[0] = *(_OWORD *)a1;
  v47[1] = v20;
  v21 = *(_OWORD *)(a1 + 48);
  v47[2] = *(_OWORD *)(a1 + 32);
  v47[3] = v21;
  sub_1D4921A94();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a3, v13);
  v22 = sub_1D4921A40();
  if (a8)
  {
    objc_msgSend(a8, sel_queryID);
    v22 = sub_1D4921A88();
  }
  MEMORY[0x1E0C80A78](v22);
  *(&v40 - 8) = (uint64_t)a8;
  *(&v40 - 7) = a2;
  *(&v40 - 6) = (uint64_t)v47;
  *(&v40 - 5) = v40;
  *((_BYTE *)&v40 - 32) = v41 & 1;
  *(&v40 - 3) = v42;
  *((_BYTE *)&v40 - 16) = v43 & 1;
  *(&v40 - 1) = 0;
  sub_1D4696EA4(&qword_1EFEAA550, (uint64_t (*)(uint64_t))MEMORY[0x1E0D6F688], MEMORY[0x1E0D6F680]);
  sub_1D49221FC();
  sub_1D4921A64();
  if (a8)
  {
    v23 = a8;
    objc_msgSend(v23, sel_uiScale);
    v24 = (void (*)(unint64_t *, _QWORD))sub_1D4921A28();
    sub_1D4921068();
    v24(&v45, 0);
    v25 = objc_msgSend(v23, sel_teamID);
    if (v25)
    {
      v26 = v25;
      sub_1D492261C();

      sub_1D4921A70();
    }
    v27 = objc_msgSend(v23, sel_catalogIDs, v40);
    if (v27)
    {
      v28 = v27;
      sub_1D4922820();

      sub_1D4921A7C();
    }

  }
  if ((sub_1D473117C() & 1) != 0)
  {
    if (qword_1EFEA9C20 != -1)
      swift_once();
    v29 = &qword_1EFEAA908;
  }
  else
  {
    if (qword_1ED98F3A8 != -1)
      swift_once();
    v29 = (uint64_t *)&off_1ED98F3F0;
  }
  v30 = *(void **)(*v29 + 32);
  swift_retain();
  v31 = (void *)sub_1D49225F8();
  v32 = objc_msgSend(v30, sel_stringForKey_, v31);

  if (!v32)
    return swift_release();
  sub_1D492261C();
  swift_release();

  v45 = 0xD000000000000030;
  v46 = 0x80000001D4940520;
  sub_1D492270C();
  swift_bridgeObjectRelease();
  v33 = v45;
  v34 = v46;
  v35 = (uint64_t (*)(unint64_t *, _QWORD))sub_1D4921A1C();
  v37 = v36;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v44 = *v37;
  *v37 = 0x8000000000000000;
  sub_1D47AA83C(v33, v34, 0xD000000000000011, 0x80000001D4940500, isUniquelyReferenced_nonNull_native);
  *v37 = v44;
  swift_bridgeObjectRelease();
  return v35(&v45, 0);
}

uint64_t sub_1D46C799C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  int v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;

  v54 = a4;
  v53 = a3;
  v52 = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA540);
  v8 = MEMORY[0x1E0C80A78](v7);
  v50 = (uint64_t)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v47 - v10;
  v49 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  v47 = *(_QWORD *)(v49 - 8);
  v12 = MEMORY[0x1E0C80A78](v49);
  v51 = (unint64_t *)((char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v47 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA548);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (int *)((char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  sub_1D469C5EC(a2 + *(int *)(v23 + 36), (uint64_t)v18, &qword_1EFEAA548);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    *v22 = 0;
    sub_1D4922010();
    sub_1D46992EC((uint64_t)v18, &qword_1EFEAA548);
  }
  else
  {
    sub_1D469C630((uint64_t)v18, (uint64_t)v22, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
  }
  v48 = *v22;
  sub_1D4697DE0((uint64_t)v22, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
  v24 = a2 + *(int *)(v23 + 32);
  sub_1D469C5EC(v24, (uint64_t)v11, &qword_1EFEAA540);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
  v26 = v49;
  v27 = v25(v11, 1, v49);
  v28 = MEMORY[0x1E0DEE9D8];
  if (v27 == 1)
  {
    *(_QWORD *)v15 = sub_1D47C4054(MEMORY[0x1E0DEE9D8]);
    *((_QWORD *)v15 + 1) = v28;
    *((_DWORD *)v15 + 4) = 0;
    sub_1D4922010();
    sub_1D46992EC((uint64_t)v11, &qword_1EFEAA540);
  }
  else
  {
    sub_1D469C630((uint64_t)v11, (uint64_t)v15, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  }
  v29 = a1[9];
  v63 = a1[8];
  v64 = v29;
  v65 = a1[10];
  v66 = *((_QWORD *)a1 + 22);
  v30 = a1[5];
  v59 = a1[4];
  v60 = v30;
  v31 = a1[7];
  v61 = a1[6];
  v62 = v31;
  v32 = a1[1];
  v55 = *a1;
  v56 = v32;
  v33 = a1[3];
  v57 = a1[2];
  v58 = v33;
  v34 = sub_1D4829664();
  MEMORY[0x1E0C80A78](v34);
  *(&v47 - 2) = (uint64_t)v15;
  v35 = sub_1D489BC98((void (*)(_QWORD *__return_ptr, _QWORD))sub_1D46CB6E0, (uint64_t)(&v47 - 4), v34);
  swift_bridgeObjectRelease();
  v36 = sub_1D4888954((uint64_t)v35);
  swift_bridgeObjectRelease();
  sub_1D4697DE0((uint64_t)v15, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  v37 = a1[9];
  v63 = a1[8];
  v64 = v37;
  v65 = a1[10];
  v66 = *((_QWORD *)a1 + 22);
  v38 = a1[5];
  v59 = a1[4];
  v60 = v38;
  v39 = a1[7];
  v61 = a1[6];
  v62 = v39;
  v40 = a1[1];
  v55 = *a1;
  v56 = v40;
  v41 = a1[3];
  v57 = a1[2];
  v58 = v41;
  v42 = v50;
  sub_1D469C5EC(v24, v50, &qword_1EFEAA540);
  if (v25((char *)v42, 1, v26) == 1)
  {
    v43 = sub_1D47C4054(v28);
    v44 = v51;
    *v51 = v43;
    v44[1] = v28;
    *((_DWORD *)v44 + 4) = 0;
    sub_1D4922010();
    sub_1D46992EC(v42, &qword_1EFEAA540);
  }
  else
  {
    v44 = v51;
    sub_1D469C630(v42, (uint64_t)v51, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  }
  if ((v36 & 0x100000000) != 0)
    v45 = 0;
  else
    v45 = (int)v36;
  sub_1D46C74EC((uint64_t)&v55, (uint64_t)v44, v53, v48, 0, v45, (v36 & 0x100000000) >> 32, v54);
  return sub_1D4697DE0((uint64_t)v44, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
}

uint64_t sub_1D46C7E48(uint64_t a1, void *a2, uint64_t a3, __int128 *a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v38;
  unint64_t v39;
  _OWORD *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  int v60;
  int v61;
  void *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  _BYTE v82[32];
  __int128 v83;
  uint64_t v84;
  uint64_t v85;

  v60 = a8;
  v61 = a6;
  v63 = a5;
  v62 = a2;
  v67 = a1;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA558);
  MEMORY[0x1E0C80A78](v11);
  v65 = sub_1D492153C();
  MEMORY[0x1E0C80A78](v65);
  v64 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D4921758();
  MEMORY[0x1E0C80A78](v13);
  v59 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a4[9];
  *(_OWORD *)v82 = a4[8];
  *(_OWORD *)&v82[16] = v15;
  v83 = a4[10];
  v84 = *((_QWORD *)a4 + 22);
  v16 = a4[5];
  v78 = a4[4];
  v79 = v16;
  v17 = a4[7];
  v80 = a4[6];
  v81 = v17;
  v18 = a4[1];
  v74 = *a4;
  v75 = v18;
  v19 = a4[2];
  v20 = a4[3];
  v66 = (uint64_t)a4;
  v76 = v19;
  v77 = v20;
  v21 = sub_1D4829664();
  v68 = *(_QWORD *)(v21 + 16);
  if (v68)
  {
    v58 = a7;
    v22 = 0;
    v23 = *(_QWORD *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
    v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    v57 = v21;
    v70 = v21 + v24 + 40;
    v69 = *(_QWORD *)(v23 + 72);
    while (1)
    {
      v71 = v22;
      v25 = *(_QWORD *)(v70 + v69 * v22);
      v26 = *(_QWORD *)(v25 + 16);
      if (v26)
      {
        swift_bridgeObjectRetain();
        v27 = v26 - 1;
        v28 = 32;
        v29 = MEMORY[0x1E0DEE9D8];
        while (1)
        {
          v30 = *(_OWORD *)(v25 + v28);
          v75 = *(_OWORD *)(v25 + v28 + 16);
          v74 = v30;
          v31 = *(_OWORD *)(v25 + v28 + 32);
          v32 = *(_OWORD *)(v25 + v28 + 48);
          v33 = *(_OWORD *)(v25 + v28 + 80);
          v78 = *(_OWORD *)(v25 + v28 + 64);
          v79 = v33;
          v76 = v31;
          v77 = v32;
          v34 = *(_OWORD *)(v25 + v28 + 96);
          v35 = *(_OWORD *)(v25 + v28 + 112);
          v36 = *(_OWORD *)(v25 + v28 + 128);
          *(_OWORD *)&v82[12] = *(_OWORD *)(v25 + v28 + 140);
          *(_OWORD *)v82 = v36;
          v80 = v34;
          v81 = v35;
          if (HIBYTE(v35) == 1)
          {
            sub_1D46A47CC((uint64_t)&v74);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v73 = v29;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1D48AB57C(0, *(_QWORD *)(v29 + 16) + 1, 1);
              v29 = v73;
            }
            v39 = *(_QWORD *)(v29 + 16);
            v38 = *(_QWORD *)(v29 + 24);
            if (v39 >= v38 >> 1)
            {
              sub_1D48AB57C(v38 > 1, v39 + 1, 1);
              v29 = v73;
            }
            *(_QWORD *)(v29 + 16) = v39 + 1;
            v40 = (_OWORD *)(v29 + 160 * v39);
            v41 = v75;
            v40[2] = v74;
            v40[3] = v41;
            v42 = v76;
            v43 = v77;
            v44 = v79;
            v40[6] = v78;
            v40[7] = v44;
            v40[4] = v42;
            v40[5] = v43;
            v45 = v80;
            v46 = v81;
            v47 = *(_OWORD *)v82;
            *(_OWORD *)((char *)v40 + 172) = *(_OWORD *)&v82[12];
            v40[9] = v46;
            v40[10] = v47;
            v40[8] = v45;
          }
          if (!v27)
            break;
          --v27;
          v28 += 160;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v29 = MEMORY[0x1E0DEE9D8];
      }
      *(_QWORD *)&v74 = v29;
      swift_retain();
      v48 = v72;
      sub_1D482A338((uint64_t *)&v74);
      v72 = v48;
      if (v48)
        break;
      swift_release();
      v49 = v74;
      if (*(_QWORD *)(v74 + 16))
      {
        swift_retain();
        v85 = v49;
        __asm { BR              X9 }
      }
      v22 = v71 + 1;
      swift_release();
      if (v22 == v68)
      {
        swift_bridgeObjectRelease();
        a7 = v58;
        goto LABEL_20;
      }
    }
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_20:
    v50 = v60 & 1;
    v51 = v61 & 1;
    v52 = type metadata accessor for ServerSearchProcessor();
    sub_1D4711608(v62, 0, v63, v51, a7, v50);
    v53 = sub_1D4921944();
    MEMORY[0x1E0C80A78](v53);
    v54 = v66;
    *(&v57 - 4) = v52;
    *(&v57 - 3) = v54;
    *(&v57 - 2) = v55;
    *(&v57 - 1) = a9;
    sub_1D4696EA4(&qword_1EFEAA560, (uint64_t (*)(uint64_t))MEMORY[0x1E0D6EAE8], MEMORY[0x1E0D6EAD0]);
    sub_1D49221FC();
    return sub_1D4921920();
  }
  return result;
}

uint64_t sub_1D46C87B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v25 = a2;
  v3 = sub_1D4921878();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = MEMORY[0x1E0DEE9D8];
  v27 = MEMORY[0x1E0DEE9D8];
  v9 = *(_QWORD *)(v7 + 16);
  if (!v9)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (v13)
      goto LABEL_5;
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  v10 = 64;
  do
  {
    v11 = swift_bridgeObjectRetain();
    sub_1D489566C(v11);
    v10 += 48;
    --v9;
  }
  while (v9);
  swift_bridgeObjectRelease();
  v12 = v27;
  v13 = *(_QWORD *)(v27 + 16);
  if (!v13)
    goto LABEL_13;
LABEL_5:
  v27 = v8;
  sub_1D48AC020(0, v13, 0);
  v14 = sub_1D4696EA4(&qword_1EFEAA5B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D6F2F8], MEMORY[0x1E0D6F2D8]);
  v24[0] = v12;
  v24[1] = v14;
  v15 = (uint64_t *)(v12 + 48);
  do
  {
    v16 = *(v15 - 2);
    v17 = *v15;
    MEMORY[0x1E0C80A78](v14);
    v24[-6] = v16;
    v24[-5] = v18;
    v19 = v26;
    v24[-4] = v17;
    v24[-3] = v19;
    v24[-2] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D49221FC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = v27;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D48AC020(0, *(_QWORD *)(v20 + 16) + 1, 1);
      v20 = v27;
    }
    v22 = *(_QWORD *)(v20 + 16);
    v21 = *(_QWORD *)(v20 + 24);
    if (v22 >= v21 >> 1)
    {
      sub_1D48AC020(v21 > 1, v22 + 1, 1);
      v20 = v27;
    }
    v15 += 3;
    *(_QWORD *)(v20 + 16) = v22 + 1;
    v14 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v4 + 32))(v20+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v22, v6, v3);
    v27 = v20;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1D46C8A10(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_bridgeObjectRetain();
  sub_1D4921860();
  sub_1D46CB928(a3, a4, a6);
  return sub_1D492135C();
}

_QWORD *sub_1D46C8A78(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;
  _DWORD *v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD v56[2];
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  _QWORD *v63;

  v60 = a2;
  v57 = a3;
  v58 = a4;
  v5 = sub_1D49218FC();
  v59 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[13];
  v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v63 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v10 = *(_QWORD *)(v8 + 16);
  if (v10)
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain_n();
    v12 = 72;
    do
    {
      v13 = swift_bridgeObjectRetain();
      sub_1D48957C4(v13);
      v12 += 48;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease_n();
    v14 = v63;
    v9 = v11;
  }
  else
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v62 = v7;
  v15 = a1[10];
  if (v15)
  {
    v16 = a1[9];
    v17 = a1[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v18 = sub_1D48A933C(0, v14[2] + 1, 1, v14);
    v20 = v18[2];
    v19 = v18[3];
    if (v20 >= v19 >> 1)
      v18 = sub_1D48A933C((_QWORD *)(v19 > 1), v20 + 1, 1, v18);
    v18[2] = v20 + 1;
    v21 = &v18[3 * v20];
    v21[4] = v16;
    v21[5] = v15;
    v21[6] = v17;
  }
  else
  {
    v18 = v14;
  }
  v22 = sub_1D46C8F78();
  if (v23)
  {
    v25 = v22;
    v26 = v23;
    v27 = v24;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v18 = sub_1D48A933C(0, v18[2] + 1, 1, v18);
    v29 = v18[2];
    v28 = v18[3];
    if (v29 >= v28 >> 1)
      v18 = sub_1D48A933C((_QWORD *)(v28 > 1), v29 + 1, 1, v18);
    v18[2] = v29 + 1;
    v30 = &v18[3 * v29];
    v30[4] = v25;
    v30[5] = v26;
    v30[6] = v27;
  }
  v31 = a1[6];
  v32 = *(_QWORD *)(v31 + 16);
  if (v32)
  {
    v56[1] = 0;
    v63 = v9;
    swift_bridgeObjectRetain();
    sub_1D48AB4F8(0, v32, 0);
    v33 = v63;
    v56[0] = v31;
    v34 = (_DWORD *)(v31 + 104);
    do
    {
      v35 = *((_QWORD *)v34 - 2);
      v36 = *((_QWORD *)v34 - 1);
      v37 = *v34;
      v63 = v33;
      v39 = v33[2];
      v38 = v33[3];
      swift_bridgeObjectRetain();
      if (v39 >= v38 >> 1)
      {
        sub_1D48AB4F8(v38 > 1, v39 + 1, 1);
        v33 = v63;
      }
      v33[2] = v39 + 1;
      v40 = &v33[3 * v39];
      v40[4] = v35;
      v40[5] = v36;
      *((_DWORD *)v40 + 12) = v37;
      v34 += 20;
      --v32;
    }
    while (v32);
    swift_bridgeObjectRelease();
    v41 = v58;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v18 = sub_1D48A933C(0, v18[2] + 1, 1, v18);
    v43 = v18[2];
    v42 = v18[3];
    v44 = v43 + 1;
    if (v43 >= v42 >> 1)
      v18 = sub_1D48A933C((_QWORD *)(v42 > 1), v43 + 1, 1, v18);
    v18[2] = v44;
    v45 = &v18[3 * v43];
    v45[4] = v57;
    v45[5] = v41;
    v45[6] = v33;
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v44 = v18[2];
    if (!v44)
    {
      swift_bridgeObjectRelease();
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
  }
  v63 = v9;
  swift_bridgeObjectRetain();
  sub_1D48AC04C(0, v44, 0);
  v46 = sub_1D4696EA4(&qword_1EFEAA5A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D6F640], MEMORY[0x1E0D6F630]);
  v58 = v18;
  v47 = v18 + 6;
  do
  {
    v48 = *(v47 - 1);
    v49 = *v47;
    MEMORY[0x1E0C80A78](v46);
    v56[-6] = v50;
    v56[-5] = v48;
    v51 = v61;
    v56[-4] = v49;
    v56[-3] = v51;
    v56[-2] = v60;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D49221FC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v52 = v63;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D48AC04C(0, v52[2] + 1, 1);
      v52 = v63;
    }
    v54 = v52[2];
    v53 = v52[3];
    if (v54 >= v53 >> 1)
    {
      sub_1D48AC04C(v53 > 1, v54 + 1, 1);
      v52 = v63;
    }
    v52[2] = v54 + 1;
    v46 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v59 + 32))((unint64_t)v52+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(_QWORD *)(v59 + 72) * v54, v62, v5);
    v63 = v52;
    v47 += 3;
    --v44;
  }
  while (v44);
  swift_bridgeObjectRelease_n();
  return v52;
}

unint64_t sub_1D46C8F78()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D48299EC();
  if (*(_QWORD *)(v0 + 16))
    __asm { BR              X9 }
  v1 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v1 + 16))
    return 0xD000000000000018;
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1D46C9308(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD v28[2];
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v32 = a2;
  v11 = sub_1D49218D8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a4 + 16);
  if (v16)
  {
    v29 = a3;
    v30 = a6;
    v34 = v6;
    v31 = a1;
    v35 = MEMORY[0x1E0DEE9D8];
    v17 = v13;
    swift_bridgeObjectRetain();
    sub_1D48AC078(0, v16, 0);
    v18 = sub_1D4696EA4(&qword_1EFEAA5B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D6F618], MEMORY[0x1E0D6F608]);
    v33 = v18;
    v28[1] = v17;
    v19 = v17 + 48;
    do
    {
      v20 = *(_QWORD *)(v19 - 8);
      MEMORY[0x1E0C80A78](v18);
      v28[-4] = v21;
      v28[-3] = v20;
      LODWORD(v28[-2]) = v22;
      swift_bridgeObjectRetain();
      v23 = v34;
      sub_1D49221FC();
      v34 = v23;
      swift_bridgeObjectRelease();
      v24 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D48AC078(0, *(_QWORD *)(v24 + 16) + 1, 1);
        v24 = v35;
      }
      v26 = *(_QWORD *)(v24 + 16);
      v25 = *(_QWORD *)(v24 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1D48AC078(v25 > 1, v26 + 1, 1);
        v24 = v35;
      }
      v19 += 24;
      *(_QWORD *)(v24 + 16) = v26 + 1;
      v18 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v12 + 32))(v24+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v26, v15, v11);
      v35 = v24;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    a6 = v30;
    a3 = v29;
  }
  sub_1D4921860();
  sub_1D46CB928(v32, a3, a6);
  return sub_1D492135C();
}

uint64_t sub_1D46C953C(uint64_t a1, double *a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;

  v10 = sub_1D4921638();
  MEMORY[0x1E0C80A78](v10);
  v11 = *a2;
  v12 = a2[1];
  v13 = a2[2];
  v14 = a2[3];
  sub_1D492162C();
  v20.origin.x = VIFlipOriginNormalizedRect(v11, v12, v13, v14);
  x = v20.origin.x;
  y = v20.origin.y;
  width = v20.size.width;
  height = v20.size.height;
  CGRectGetMinX(v20);
  sub_1D49215D8();
  v21.origin.x = x;
  v21.origin.y = y;
  v21.size.width = width;
  v21.size.height = height;
  CGRectGetMinY(v21);
  sub_1D49215F0();
  v22.origin.x = x;
  v22.origin.y = y;
  v22.size.width = width;
  v22.size.height = height;
  CGRectGetWidth(v22);
  sub_1D4921608();
  v23.origin.x = x;
  v23.origin.y = y;
  v23.size.width = width;
  v23.size.height = height;
  CGRectGetHeight(v23);
  sub_1D4921620();
  sub_1D4921488();
  sub_1D46C87B4((uint64_t)a2, a4);
  sub_1D492138C();
  sub_1D46C8A78(a2, a4, a5, a6);
  return sub_1D49214D0();
}

uint64_t sub_1D46C96AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[64];
  _OWORD v22[3];
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v4 = sub_1D49218B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D46B3464(a2 + 8, (uint64_t)v21, &qword_1ED98D7A8);
  sub_1D46B3464((uint64_t)v21, (uint64_t)v24, &qword_1ED98D7A8);
  if (v24[0] != 1)
  {
    v8 = v25;
    if (v25)
    {
      v9 = *(_QWORD *)(v25 + 16);
      if (v9)
      {
        v19 = a1;
        v26 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        v10 = sub_1D48AC0A4(0, v9, 0);
        v11 = 32;
        v20 = v8;
        do
        {
          v12 = *(_OWORD *)(v8 + v11);
          v13 = *(_OWORD *)(v8 + v11 + 16);
          v14 = *(_OWORD *)(v8 + v11 + 32);
          v23 = *(_QWORD *)(v8 + v11 + 48);
          v22[1] = v13;
          v22[2] = v14;
          v22[0] = v12;
          MEMORY[0x1E0C80A78](v10);
          *(&v19 - 2) = (uint64_t)v22;
          sub_1D46CCA88((uint64_t)v22);
          sub_1D4696EA4(&qword_1EFEAA588, (uint64_t (*)(uint64_t))MEMORY[0x1E0D6F330], MEMORY[0x1E0D6F318]);
          sub_1D49221FC();
          sub_1D46CCAB0((uint64_t)v22);
          v15 = v26;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1D48AC0A4(0, *(_QWORD *)(v15 + 16) + 1, 1);
            v15 = v26;
          }
          v17 = *(_QWORD *)(v15 + 16);
          v16 = *(_QWORD *)(v15 + 24);
          if (v17 >= v16 >> 1)
          {
            sub_1D48AC0A4(v16 > 1, v17 + 1, 1);
            v15 = v26;
          }
          *(_QWORD *)(v15 + 16) = v17 + 1;
          v10 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(v15+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v17, v7, v4);
          v26 = v15;
          v11 += 56;
          --v9;
          v8 = v20;
        }
        while (v9);
        swift_bridgeObjectRelease();
      }
    }
  }
  return sub_1D492138C();
}

uint64_t sub_1D46C991C(uint64_t a1, double *a2)
{
  uint64_t v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  id v12;
  id v13;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;

  v3 = sub_1D4921638();
  MEMORY[0x1E0C80A78](v3);
  sub_1D46CCA88((uint64_t)a2);
  sub_1D492135C();
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[6];
  sub_1D492162C();
  v15.origin.x = VIFlipOriginNormalizedRect(v4, v5, v6, v7);
  x = v15.origin.x;
  y = v15.origin.y;
  width = v15.size.width;
  height = v15.size.height;
  CGRectGetMinX(v15);
  sub_1D49215D8();
  v16.origin.x = x;
  v16.origin.y = y;
  v16.size.width = width;
  v16.size.height = height;
  CGRectGetMinY(v16);
  sub_1D49215F0();
  v17.origin.x = x;
  v17.origin.y = y;
  v17.size.width = width;
  v17.size.height = height;
  CGRectGetWidth(v17);
  sub_1D4921608();
  v18.origin.x = x;
  v18.origin.y = y;
  v18.size.width = width;
  v18.size.height = height;
  CGRectGetHeight(v18);
  sub_1D4921620();
  sub_1D4921884();
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3898]), sel_init);
  v13 = objc_msgSend(v12, sel_operatingSystemVersionString);

  sub_1D492261C();
  sub_1D49218A8();
  return sub_1D4921890();
}

uint64_t sub_1D46C9AC0@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  __int128 v7;
  __int128 v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int *v27;
  id v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  char v32;
  uint64_t v33;
  _BYTE v34[16];
  _OWORD v35[4];
  id v36;

  v3 = sub_1D4921374();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v34[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = v1[1];
  v35[0] = *v1;
  v35[1] = v7;
  v8 = v1[3];
  v35[2] = v1[2];
  v35[3] = v8;
  v9 = *(void **)&v35[0];
  v36 = *(id *)&v35[0];
  v10 = sub_1D492261C();
  v12 = v11;
  if (v10 == sub_1D492261C() && v12 == v13)
  {
    v28 = v9;
    sub_1D46CCB54(&v36);
    swift_bridgeObjectRelease_n();
    sub_1D46CCB7C(&v36);
    goto LABEL_15;
  }
  v15 = sub_1D4922E38();
  v16 = v9;
  sub_1D46CCB54(&v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D46CCB7C(&v36);
  if ((v15 & 1) != 0)
  {
LABEL_15:
    v27 = (unsigned int *)MEMORY[0x1E0D6E340];
    goto LABEL_16;
  }
  v17 = sub_1D492261C();
  v19 = v18;
  if (v17 == sub_1D492261C() && v19 == v20)
  {
    sub_1D46CCB54(&v36);
    swift_bridgeObjectRelease_n();
    sub_1D46CCB7C(&v36);
    goto LABEL_20;
  }
  v22 = sub_1D4922E38();
  sub_1D46CCB54(&v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D46CCB7C(&v36);
  if ((v22 & 1) != 0)
  {
LABEL_20:
    v27 = (unsigned int *)MEMORY[0x1E0D6E338];
    goto LABEL_16;
  }
  v23 = sub_1D492261C();
  v25 = v24;
  if (v23 == sub_1D492261C() && v25 == v26)
  {
    swift_bridgeObjectRelease_n();
    v27 = (unsigned int *)MEMORY[0x1E0D6E348];
LABEL_16:
    sub_1D46CCB7C(&v36);
    goto LABEL_17;
  }
  v32 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D46CCB7C(&v36);
  if ((v32 & 1) == 0)
  {
    v33 = sub_1D4921380();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(a1, 1, 1, v33);
  }
  v27 = (unsigned int *)MEMORY[0x1E0D6E348];
LABEL_17:
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v6, *v27, v3);
  v29 = sub_1D4921380();
  MEMORY[0x1E0C80A78](v29);
  *(_QWORD *)&v34[-16] = v6;
  *(_QWORD *)&v34[-8] = v35;
  sub_1D4696EA4(&qword_1EFEAA5A0, v30, MEMORY[0x1E0D6E318]);
  sub_1D49221FC();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a1, 0, 1, v29);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1D46C9DF4(uint64_t a1, double *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t (*v18)(_BYTE *, _QWORD);
  unint64_t *v19;
  unint64_t *v20;
  unint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  _BYTE v26[32];
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;

  v5 = sub_1D4921380();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1D4921638();
  MEMORY[0x1E0C80A78](v9);
  v10 = a2[4];
  v11 = a2[5];
  v12 = a2[6];
  v13 = a2[7];
  sub_1D492162C();
  v27.origin.x = VIFlipOriginNormalizedRect(v10, v11, v12, v13);
  x = v27.origin.x;
  y = v27.origin.y;
  width = v27.size.width;
  height = v27.size.height;
  CGRectGetMinX(v27);
  sub_1D49215D8();
  v28.origin.x = x;
  v28.origin.y = y;
  v28.size.width = width;
  v28.size.height = height;
  CGRectGetMinY(v28);
  sub_1D49215F0();
  v29.origin.x = x;
  v29.origin.y = y;
  v29.size.width = width;
  v29.size.height = height;
  CGRectGetWidth(v29);
  sub_1D4921608();
  v30.origin.x = x;
  v30.origin.y = y;
  v30.size.width = width;
  v30.size.height = height;
  CGRectGetHeight(v30);
  sub_1D4921620();
  sub_1D4921488();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
  v18 = (uint64_t (*)(_BYTE *, _QWORD))sub_1D49214DC();
  v20 = v19;
  v21 = *v19;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v20 = v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v21 = sub_1D48A9634(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
    *v20 = v21;
  }
  v24 = *(_QWORD *)(v21 + 16);
  v23 = *(_QWORD *)(v21 + 24);
  if (v24 >= v23 >> 1)
  {
    v21 = sub_1D48A9634(v23 > 1, v24 + 1, 1, v21);
    *v20 = v21;
  }
  *(_QWORD *)(v21 + 16) = v24 + 1;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v6 + 32))(v21+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v24, v8, v5);
  return v18(v26, 0);
}

uint64_t sub_1D46CA02C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(char *, uint64_t);
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  uint64_t v42;
  void (*v43)(_BYTE *, _QWORD);
  uint64_t v44;
  void (*v45)(_BYTE *, _QWORD);
  uint64_t v46;
  void (*v47)(_BYTE *, _QWORD);
  void (*v48)(char *, uint64_t);
  char *v49;
  char *v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  void (*v54)(char *, unint64_t, uint64_t);
  unint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  unint64_t v62;
  char *v63;
  _BYTE v64[32];
  uint64_t v65;

  v51 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA590);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v51 - v7;
  v9 = sub_1D49214F4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v57 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v56 = (char *)&v51 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v51 - v15;
  v62 = v3;
  v17 = *(int *)(v3 + 48);
  v18 = sub_1D4921638();
  v19 = *(_QWORD *)(v18 - 8);
  v60 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v60(v8, a1, v18);
  v61 = a1;
  v20 = *(_QWORD *)(a1 + v17);
  *(_QWORD *)&v8[v17] = v20;
  if (!*(_QWORD *)(v20 + 16))
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v18);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v51, 1, 1, v9);
  }
  v21 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v58 = v10;
  v54 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
  v55 = v21;
  v54(v16, v20 + v21, v9);
  v22 = *(void (**)(char *, uint64_t))(v19 + 8);
  v22(v8, v18);
  v24 = v61;
  v23 = v62;
  v25 = *(int *)(v62 + 48);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v60)(v6, v61, v18);
  v27 = *(_QWORD *)(v24 + v17);
  *(_QWORD *)&v6[v25] = v27;
  v28 = *(_QWORD *)(v27 + 16);
  if (!v28)
    goto LABEL_13;
  v29 = v23;
  v59 = v28;
  v22(v6, v18);
  if (v59 != 1)
  {
    v52 = v22;
    v53 = v17;
    v32 = 1;
    v65 = v18;
    v63 = v6;
    while (1)
    {
      v33 = v29;
      v34 = *(int *)(v29 + 48);
      v35 = v61;
      result = ((uint64_t (*)(char *, uint64_t, uint64_t))v60)(v6, v61, v65);
      v36 = *(_QWORD *)(v35 + v17);
      *(_QWORD *)&v6[v34] = v36;
      if (v32 >= *(_QWORD *)(v36 + 16))
        break;
      v62 = v32 + 1;
      v37 = v57;
      v38 = v58;
      v39 = v36 + v55 + *(_QWORD *)(v58 + 72) * v32;
      v40 = (void (*)(char *, char *, uint64_t))v54;
      v54(v57, v39, v9);
      v41 = v56;
      v40(v56, v16, v9);
      v42 = sub_1D49214A0();
      v43 = (void (*)(_BYTE *, _QWORD))sub_1D4921494();
      sub_1D4895A9C(v42);
      v43(v64, 0);
      v44 = sub_1D49214C4();
      v45 = (void (*)(_BYTE *, _QWORD))sub_1D49214B8();
      sub_1D4895A88(v44);
      v45(v64, 0);
      v46 = sub_1D49214E8();
      v47 = (void (*)(_BYTE *, _QWORD))sub_1D49214DC();
      sub_1D4895A74(v46);
      v47(v64, 0);
      v48 = *(void (**)(char *, uint64_t))(v38 + 8);
      v49 = v37;
      v17 = v53;
      v48(v49, v9);
      v48(v16, v9);
      v52(v63, v65);
      v31 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
      v6 = v63;
      v31(v16, v41, v9);
      v32 = v62;
      v29 = v33;
      if (v59 == v62)
      {
        v30 = v58;
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  v30 = v58;
  v31 = *(void (**)(char *, char *, uint64_t))(v58 + 32);
LABEL_10:
  v50 = v51;
  v31(v51, v16, v9);
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v50, 0, 1, v9);
}

uint64_t sub_1D46CA408(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 *v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  char v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  __int128 *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;

  v68 = a5;
  v76 = a4;
  v75 = a2;
  v71 = a1;
  v6 = sub_1D4921398();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA568);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_1D49214F4();
  v78 = *(_QWORD *)(v79 - 8);
  v12 = MEMORY[0x1E0C80A78](v79);
  v65 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v77 = (char *)&v63 - v14;
  v15 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v63 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v63 - v23;
  v25 = a3[9];
  v89 = a3[8];
  v90 = v25;
  v91 = a3[10];
  v92 = *((_QWORD *)a3 + 22);
  v26 = a3[5];
  v85 = a3[4];
  v86 = v26;
  v27 = a3[7];
  v87 = a3[6];
  v88 = v27;
  v28 = a3[1];
  v81 = *a3;
  v82 = v28;
  v29 = a3[2];
  v30 = a3[3];
  v69 = a3;
  v83 = v29;
  v84 = v30;
  v31 = sub_1D46CC41C((uint64_t *)&v81);
  v32 = *(_QWORD *)(v31 + 16);
  v70 = v8;
  if (!v32)
  {
    v39 = v69;
    v38 = v79;
LABEL_19:
    v48 = v68;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v44 = MEMORY[0x1E0DEE9D8];
    goto LABEL_20;
  }
  v64 = v11;
  v66 = v6;
  v33 = v72;
  v34 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v67 = v31;
  v35 = v31 + v34;
  v93 = *(_QWORD *)(v16 + 72);
  v36 = v31 + v34;
  while (1)
  {
    sub_1D469C304(v36, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    if (*((_QWORD *)v22 + 10))
      break;
    sub_1D4697DE0((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v36 += v93;
    if (!--v32)
    {
      v37 = 0x80000001D4940560;
      v73 = 0xD000000000000019;
      v38 = v79;
      goto LABEL_10;
    }
  }
  sub_1D469C630((uint64_t)v22, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  v37 = *((_QWORD *)v24 + 10);
  v73 = *((_QWORD *)v24 + 9);
  sub_1D46C1E20(v73, v37);
  sub_1D4697DE0((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  v38 = v79;
  if (v37)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v73 = 0xD000000000000019;
    v37 = 0x80000001D4940560;
  }
LABEL_10:
  v40 = *(_QWORD *)(v67 + 16);
  if (!v40)
  {
    v39 = v69;
    v11 = v64;
    goto LABEL_19;
  }
  v74 = v37;
  *(_QWORD *)&v81 = MEMORY[0x1E0DEE9D8];
  sub_1D48AC0D0(0, v40, 0);
  do
  {
    v41 = sub_1D469C304(v35, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    MEMORY[0x1E0C80A78](v41);
    v42 = v75;
    *(&v63 - 6) = (uint64_t)v19;
    *(&v63 - 5) = v42;
    v43 = v73;
    *(&v63 - 4) = v76;
    *(&v63 - 3) = v43;
    *(&v63 - 2) = v74;
    sub_1D4696EA4(&qword_1EFEAA570, (uint64_t (*)(uint64_t))MEMORY[0x1E0D6EAA8], MEMORY[0x1E0D6EA90]);
    sub_1D49221FC();
    sub_1D4697DE0((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v44 = v81;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D48AC0D0(0, *(_QWORD *)(v44 + 16) + 1, 1);
      v44 = v81;
    }
    v46 = *(_QWORD *)(v44 + 16);
    v45 = *(_QWORD *)(v44 + 24);
    v47 = v77;
    if (v46 >= v45 >> 1)
    {
      sub_1D48AC0D0(v45 > 1, v46 + 1, 1);
      v47 = v77;
      v44 = v81;
    }
    *(_QWORD *)(v44 + 16) = v46 + 1;
    v38 = v79;
    (*(void (**)(unint64_t, char *, uint64_t))(v78 + 32))(v44+ ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))+ *(_QWORD *)(v78 + 72) * v46, v47, v79);
    *(_QWORD *)&v81 = v44;
    v35 += v93;
    --v40;
  }
  while (v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v72 = v33;
  v39 = v69;
  v11 = v64;
  v48 = v68;
LABEL_20:
  v80 = v44;
  v49 = v39[9];
  v89 = v39[8];
  v90 = v49;
  v91 = v39[10];
  v92 = *((_QWORD *)v39 + 22);
  v50 = v39[5];
  v85 = v39[4];
  v86 = v50;
  v51 = v39[7];
  v87 = v39[6];
  v88 = v51;
  v52 = v39[1];
  v81 = *v39;
  v82 = v52;
  v53 = v39[3];
  v83 = v39[2];
  v84 = v53;
  v54 = sub_1D46CBC90((uint64_t)&v81);
  if (v54)
    sub_1D4895C2C(v54);
  if ((v48 & 1) != 0)
  {
    if (*(_QWORD *)(v80 + 16))
    {
      v56 = v78;
      (*(void (**)(char *, unint64_t, uint64_t))(v78 + 16))(v11, v80 + ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80)), v38);
      v57 = 0;
    }
    else
    {
      v57 = 1;
      v56 = v78;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56))(v11, v57, 1, v38);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v11, 1, v38) == 1)
    {
      v55 = sub_1D46992EC((uint64_t)v11, &qword_1EFEAA568);
    }
    else
    {
      v58 = v65;
      (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v65, v11, v38);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA580);
      v59 = v56;
      v60 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
      v61 = swift_allocObject();
      *(_OWORD *)(v61 + 16) = xmmword_1D49273C0;
      (*(void (**)(unint64_t, char *, uint64_t))(v59 + 16))(v61 + v60, v58, v38);
      sub_1D46CC0B8(v61);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      sub_1D492138C();
      v55 = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v58, v38);
    }
  }
  else
  {
    sub_1D46CC0B8(v80);
    swift_bridgeObjectRelease();
    v55 = sub_1D492138C();
  }
  MEMORY[0x1E0C80A78](v55);
  *(&v63 - 2) = (uint64_t)v39;
  sub_1D4696EA4(&qword_1EFEAA578, (uint64_t (*)(uint64_t))MEMORY[0x1E0D6E378], MEMORY[0x1E0D6E370]);
  sub_1D49221FC();
  return sub_1D4921530();
}

uint64_t sub_1D46CAC34(CGFloat *a1, uint64_t a2, _QWORD **a3, void *a4, void *a5, uint64_t *a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  unint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  uint64_t v34;
  float v35;
  CGFloat v36;
  float v37;
  CGFloat v38;
  float v39;
  CGFloat v40;
  float v41;
  double v42;
  double v43;
  CGFloat v44;
  double v45;
  CGFloat v46;
  double v47;
  CGFloat v48;
  double MinX;
  CGFloat v50;
  double v51;
  double v52;
  double v53;
  double v54;
  BOOL v55;
  double MinY;
  double v57;
  double Width;
  double v60;
  double Height;
  double v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t *v70;
  CGFloat *v71;
  __int128 *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  _QWORD **v85;
  id v86;
  _QWORD *v87;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  void *v93;
  uint64_t *v94;
  __int128 *v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  _QWORD v103[2];
  char *v104;
  void *v105;
  uint64_t v106;
  __int128 *v107;
  void *v108;
  _QWORD **v109;
  uint64_t v110;
  uint64_t *v111;
  CGFloat *v112;
  char *v113;
  double v114;
  double v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  CGFloat v119;
  CGFloat v120;
  CGFloat v121;
  uint64_t v122;
  unint64_t v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  _OWORD v132[3];
  uint64_t v133;
  CGRect v134;
  CGRect v135;
  CGRect v136;
  CGRect v137;
  CGRect v138;
  CGRect v139;
  CGRect v140;
  CGRect v141;

  v111 = a6;
  v108 = a4;
  v109 = a3;
  v10 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1E0C80A78](v10);
  v107 = (__int128 *)((char *)v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_1D4921638();
  v116 = *(_QWORD *)(v12 - 8);
  v117 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_1D4921D64();
  v15 = *(double *)(v118 - 8);
  v16 = MEMORY[0x1E0C80A78](v118);
  v18 = (char *)v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v103 - v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA600);
  v21 = MEMORY[0x1E0C80A78](a2);
  v110 = (uint64_t)v103 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)v103 - v24;
  v26 = *(_QWORD *)(a2 + 16);
  v112 = a1;
  v113 = (char *)v103 - v24;
  if (v26)
  {
    v104 = v20;
    v105 = a5;
    v106 = v6;
    v27 = a1[2];
    v28 = a1[3];
    v30 = *a1;
    v29 = a1[1];
    v31 = v23
        + ((*(unsigned __int8 *)(*(_QWORD *)&v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)&v15 + 80));
    v32 = *(_QWORD *)(*(_QWORD *)&v15 + 72);
    v33 = *(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)&v15 + 16);
    v103[1] = v23;
    swift_bridgeObjectRetain();
    v115 = -0.0001;
    v114 = 0.0001;
    v34 = v118;
    *(double *)&v133 = v27;
    v120 = v30;
    v121 = v29;
    do
    {
      v33(v18, v31, v34);
      sub_1D4921D40();
      sub_1D49215CC();
      v36 = v35;
      sub_1D49215E4();
      v38 = v37;
      sub_1D49215FC();
      v40 = v39;
      sub_1D4921614();
      v42 = VIFlipOriginNormalizedRect(v36, v38, v40, v41);
      v44 = v43;
      v46 = v45;
      v48 = v47;
      (*(void (**)(char *, uint64_t))(v116 + 8))(v14, v117);
      v134.origin.x = v30;
      v134.origin.y = v29;
      v134.size.width = v27;
      v134.size.height = v28;
      MinX = CGRectGetMinX(v134);
      v50 = v28;
      v51 = v115;
      v52 = MinX + v115;
      v119 = v42;
      v135.origin.x = v42;
      v135.origin.y = v44;
      v135.size.width = v46;
      v135.size.height = v48;
      v53 = CGRectGetMinX(v135);
      v54 = v114;
      v55 = v52 > v53;
      v28 = v50;
      v55 = v55 || v53 > MinX + v114;
      if (!v55)
      {
        v136.origin.x = v120;
        v136.origin.y = v121;
        *(_QWORD *)&v136.size.width = v133;
        v136.size.height = v50;
        MinY = CGRectGetMinY(v136);
        v137.origin.x = v119;
        v137.origin.y = v44;
        v137.size.width = v46;
        v137.size.height = v48;
        v57 = CGRectGetMinY(v137);
        v28 = v50;
        if (MinY + v51 <= v57 && v57 <= MinY + v54)
        {
          v138.origin.x = v120;
          v138.origin.y = v121;
          *(_QWORD *)&v138.size.width = v133;
          v138.size.height = v50;
          Width = CGRectGetWidth(v138);
          v139.origin.x = v119;
          v139.origin.y = v44;
          v139.size.width = v46;
          v139.size.height = v48;
          v60 = CGRectGetWidth(v139);
          v28 = v50;
          if (Width + v51 <= v60 && v60 <= Width + v54)
          {
            v140.origin.x = v120;
            v140.origin.y = v121;
            *(_QWORD *)&v140.size.width = v133;
            v140.size.height = v50;
            Height = CGRectGetHeight(v140);
            v141.origin.x = v119;
            v141.origin.y = v44;
            v141.size.width = v46;
            v141.size.height = v48;
            v63 = CGRectGetHeight(v141);
            if (Height + v51 <= v63 && v63 <= Height + v54)
            {
              swift_bridgeObjectRelease();
              v64 = (uint64_t)v113;
              v34 = v118;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)&v15 + 32))(v113, v18, v118);
              v25 = (char *)v64;
              v65 = 0;
              goto LABEL_20;
            }
          }
        }
      }
      v34 = v118;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)&v15 + 8))(v18, v118);
      v31 += v32;
      --v26;
      v27 = *(double *)&v133;
      v30 = v120;
      v29 = v121;
    }
    while (v26);
    swift_bridgeObjectRelease();
    v65 = 1;
    v25 = v113;
LABEL_20:
    v20 = v104;
    a5 = v105;
  }
  else
  {
    v65 = 1;
    v34 = v118;
  }
  v66 = v25;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)&v15 + 56))(v25, v65, 1, v34);
  v67 = (uint64_t)v66;
  v68 = v110;
  sub_1D469C5EC(v67, v110, &qword_1EFEAA600);
  v69 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)&v15 + 48))(v68, 1, v34);
  v70 = v111;
  v71 = v112;
  if (v69 == 1)
  {
    sub_1D46992EC(v68, &qword_1EFEAA600);
    v72 = v107;
    sub_1D469C304((uint64_t)v71, (uint64_t)v107, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v73 = v108;
    if (v108)
    {
      v74 = (uint64_t)v108;
    }
    else
    {
      v122 = 0;
      v123 = 0xE000000000000000;
      v81 = v72[1];
      v124 = *v72;
      v125 = v81;
      sub_1D4922C1C();
      v82 = v122;
      v83 = v123;
      sub_1D46CEC10();
      v74 = swift_allocError();
      *(_QWORD *)v84 = v82;
      *(_QWORD *)(v84 + 8) = v83;
      *(_BYTE *)(v84 + 16) = 1;
    }
    v85 = v109;
    v86 = v73;
    sub_1D4697DE0((uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v87 = *v85;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v85 = v87;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v87 = sub_1D48A9670(0, v87[2] + 1, 1, v87);
      *v85 = v87;
    }
    v90 = v87[2];
    v89 = v87[3];
    v91 = (uint64_t)v113;
    if (v90 >= v89 >> 1)
    {
      v87 = sub_1D48A9670((_QWORD *)(v89 > 1), v90 + 1, 1, v87);
      v91 = (uint64_t)v113;
      *v85 = v87;
    }
    v87[2] = v90 + 1;
    v87[v90 + 4] = v74;
    return sub_1D46992EC(v91, &qword_1EFEAA600);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)&v15 + 32))(v20, v68, v34);
    *(double *)&v133 = COERCE_DOUBLE(sub_1D48299EC());
    v75 = *(_QWORD *)(v133 + 16);
    if (v75)
    {
      v121 = v15;
      v76 = *(_OWORD *)(v133 + 144);
      v130 = *(_OWORD *)(v133 + 128);
      v131 = v76;
      v132[0] = *(_OWORD *)(v133 + 160);
      *(_OWORD *)((char *)v132 + 12) = *(_OWORD *)(v133 + 172);
      v77 = *(_OWORD *)(v133 + 80);
      v126 = *(_OWORD *)(v133 + 64);
      v127 = v77;
      v78 = *(_OWORD *)(v133 + 112);
      v128 = *(_OWORD *)(v133 + 96);
      v129 = v78;
      v79 = *(_OWORD *)(v133 + 48);
      v124 = *(_OWORD *)(v133 + 32);
      v125 = v79;
      sub_1D46A47CC((uint64_t)&v124);
      sub_1D46CB338((uint64_t)&v122, (uint64_t)v20, a5, v70, v71);
      sub_1D46A48AC((uint64_t)&v124);
      v80 = v75 - 1;
      if (v80)
      {
        v93 = a5;
        v94 = v70;
        v95 = (__int128 *)(v133 + 192);
        do
        {
          v96 = v95[1];
          v124 = *v95;
          v125 = v96;
          v97 = v95[2];
          v98 = v95[3];
          v99 = v95[5];
          v128 = v95[4];
          v129 = v99;
          v126 = v97;
          v127 = v98;
          v100 = v95[6];
          v101 = v95[7];
          v102 = v95[8];
          *(_OWORD *)((char *)v132 + 12) = *(__int128 *)((char *)v95 + 140);
          v131 = v101;
          v132[0] = v102;
          v130 = v100;
          sub_1D46A47CC((uint64_t)&v124);
          sub_1D46CB338((uint64_t)&v122, (uint64_t)v20, v93, v94, v71);
          sub_1D46A48AC((uint64_t)&v124);
          v95 += 10;
          --v80;
        }
        while (v80);
      }
      swift_bridgeObjectRelease();
      v15 = v121;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_1D46992EC((uint64_t)v113, &qword_1EFEAA600);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)&v15 + 8))(v20, v118);
  }
}

uint64_t sub_1D46CB338(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4, CGFloat *a5)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, uint64_t, uint64_t);
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  uint64_t v28;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA610);
  v7 = sub_1D4921D64();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1D49273C0;
  v11 = *(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 16);
  v11(v10 + v9, a2, v7);
  v12 = objc_msgSend(a3, sel_location);
  v26 = sub_1D472A13C(v10);

  swift_bridgeObjectRelease();
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1D49273C0;
  v11(v13 + v9, a2, v7);
  v14 = sub_1D472B508(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (a3)
    v15 = objc_msgSend(a3, sel_queryID);
  else
    v15 = 0;
  sub_1D484A9B0(v15, a3 == 0, v14);
  v16 = *a5;
  v17 = a5[1];
  v18 = a5[2];
  v19 = a5[3];
  if (!*(_QWORD *)(*a4 + 16) || (sub_1D47CA748(*a5, a5[1], a5[2], a5[3]), (v20 & 1) == 0))
  {
    if (qword_1EFEAA040 != -1)
      swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = swift_bridgeObjectRetain();
  sub_1D4895C4C(v21);
  v22 = swift_bridgeObjectRetain();
  sub_1D4895C40(v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v28 = *a4;
  *a4 = 0x8000000000000000;
  sub_1D47AAB04(v26, v14, isUniquelyReferenced_nonNull_native, v16, v17, v18, v19);
  *a4 = v28;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D46CB5F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_BYTE *, _QWORD);
  uint64_t (*v7)(_BYTE *, _QWORD);
  _BYTE v9[32];

  v3 = sub_1D4921374();
  MEMORY[0x1E0C80A78](v3);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 16))(&v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], a2);
  v6 = (void (*)(_BYTE *, _QWORD))sub_1D4921368();
  sub_1D4921350();
  v6(v9, 0);
  swift_bridgeObjectRetain();
  v7 = (uint64_t (*)(_BYTE *, _QWORD))sub_1D4921368();
  sub_1D492135C();
  return v7(v9, 0);
}

uint64_t sub_1D46CB6E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D4711D40(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1D46CB6F8(uint64_t a1)
{
  uint64_t v1;

  return sub_1D46C7E48(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(__int128 **)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(_QWORD *)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_1D46CB730(uint64_t a1)
{
  uint64_t v1;

  return sub_1D46CA408(a1, *(_QWORD *)(v1 + 16), *(__int128 **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1D46CB74C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  int64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v20 = v2;
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1D48AC120(0, v9, 0);
    v10 = v22;
    v11 = (unint64_t *)(a1 + 32);
    v21 = a2;
    v12 = *(_QWORD *)(a2 + 16);
    do
    {
      v14 = *v11++;
      v13 = v14;
      if (v12 && v13 < v12)
      {
        sub_1D469C304(v21+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v13, (uint64_t)v8, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
      }
      else
      {
        *v8 = 0;
        v8[1] = 0xE000000000000000;
        v8[2] = 0;
        v8[3] = 0xE000000000000000;
        v8[4] = 0;
        v8[5] = MEMORY[0x1E0DEE9D8];
        sub_1D4922010();
        v15 = (char *)v8 + *(int *)(v5 + 40);
        v16 = type metadata accessor for Com_Apple_Visualintelligence_LocationPoint(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
      }
      v22 = v10;
      v18 = *(_QWORD *)(v10 + 16);
      v17 = *(_QWORD *)(v10 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1D48AC120(v17 > 1, v18 + 1, 1);
        v10 = v22;
      }
      *(_QWORD *)(v10 + 16) = v18 + 1;
      sub_1D469C630((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v18, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
      --v9;
    }
    while (v9);
  }
  return v10;
}

unint64_t sub_1D46CB918(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

uint64_t sub_1D46CB928(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v6 = sub_1D4922370();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D6F8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a3 + 16);
  if (v13)
  {
    v31 = v6;
    v32 = v9;
    v30 = v7;
    v14 = a2;
    v15 = sub_1D4921008();
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
    swift_bridgeObjectRetain();
    v33 = a3;
    v17 = (unint64_t *)(a3 + 40);
    while (1)
    {
      v18 = *(v17 - 1);
      v19 = *v17;
      v20 = a1;
      v38 = a1;
      v39 = v14;
      v36 = v18;
      v37 = v19;
      v16(v12, 1, 1, v15);
      sub_1D4696FE8();
      swift_bridgeObjectRetain();
      sub_1D4922AB4();
      v22 = v21;
      sub_1D46992EC((uint64_t)v12, &qword_1ED98D6F8);
      swift_bridgeObjectRelease();
      if ((v22 & 1) == 0)
        break;
      v17 += 2;
      --v13;
      a1 = v20;
      if (!v13)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    v23 = (uint64_t)v32;
    sub_1D470C76C((uint64_t)v32);
    v24 = v14;
    swift_bridgeObjectRetain_n();
    v25 = sub_1D4922358();
    v26 = sub_1D4922910();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v38 = v28;
      *(_DWORD *)v27 = 136315138;
      swift_bridgeObjectRetain();
      v36 = sub_1D47F0250(v20, v24, &v38);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D467C000, v25, v26, "Remove model urn suffix for model %s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v28, -1, -1);
      MEMORY[0x1D82635B8](v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v31);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v23, v31);
    }
    v38 = v20;
    v39 = v24;
    v36 = 707673948;
    v37 = 0xE400000000000000;
    v34 = 0;
    v35 = 0xE000000000000000;
    return sub_1D4922A9C();
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t sub_1D46CBC90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  unint64_t v38;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  unint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  _OWORD v53[5];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA598);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D4921380();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v42 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA568);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D49214F4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v47 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v41 = (char *)&v40 - v15;
  v48 = 0;
  if (*(_QWORD *)(a1 + 8) != 1)
  {
    v16 = *(_QWORD *)(a1 + 40);
    if (v16)
    {
      v17 = *(_QWORD *)(v16 + 16);
      if (v17)
      {
        swift_bridgeObjectRetain();
        v44 = 0;
        v48 = MEMORY[0x1E0DEE9D8];
        v18 = 32;
        v46 = v6;
        v45 = v16;
        do
        {
          v19 = *(_OWORD *)(v16 + v18);
          v20 = *(_OWORD *)(v16 + v18 + 16);
          v21 = *(_OWORD *)(v16 + v18 + 48);
          v53[2] = *(_OWORD *)(v16 + v18 + 32);
          v53[3] = v21;
          v53[0] = v19;
          v53[1] = v20;
          v22 = *(_OWORD *)(v16 + v18 + 16);
          v49 = *(_OWORD *)(v16 + v18);
          v50 = v22;
          v23 = *(_OWORD *)(v16 + v18 + 48);
          v51 = *(_OWORD *)(v16 + v18 + 32);
          v52 = v23;
          sub_1D46CCAD8((id *)v53);
          sub_1D46C9AC0((uint64_t)v4);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
          {
            sub_1D46992EC((uint64_t)v4, &qword_1EFEAA598);
            v24 = 1;
          }
          else
          {
            v25 = v12;
            v26 = v10;
            v27 = v42;
            v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v42, v4, v5);
            v43 = &v40;
            MEMORY[0x1E0C80A78](v28);
            *(&v40 - 2) = (uint64_t)v53;
            *(&v40 - 1) = (uint64_t)v27;
            sub_1D4696EA4(&qword_1EFEAA570, (uint64_t (*)(uint64_t))MEMORY[0x1E0D6EAA8], MEMORY[0x1E0D6EA90]);
            v29 = v44;
            sub_1D49221FC();
            v44 = v29;
            v6 = v46;
            v30 = v27;
            v10 = v26;
            v12 = v25;
            (*(void (**)(char *, uint64_t))(v46 + 8))(v30, v5);
            v16 = v45;
            v24 = 0;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v24, 1, v11);
          sub_1D46CCB0C((void **)v53);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
          {
            sub_1D46992EC((uint64_t)v10, &qword_1EFEAA568);
          }
          else
          {
            v31 = v5;
            v32 = v4;
            v33 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
            v34 = v41;
            v33(v41, v10, v11);
            v33(v47, v34, v11);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v48 = sub_1D48A9620(0, *(_QWORD *)(v48 + 16) + 1, 1, v48);
            v36 = *(_QWORD *)(v48 + 16);
            v35 = *(_QWORD *)(v48 + 24);
            if (v36 >= v35 >> 1)
              v48 = sub_1D48A9620(v35 > 1, v36 + 1, 1, v48);
            v37 = v47;
            v38 = v48;
            *(_QWORD *)(v48 + 16) = v36 + 1;
            v33((char *)(v38+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v36), v37, v11);
            v4 = v32;
            v5 = v31;
            v6 = v46;
            v16 = v45;
          }
          v18 += 64;
          --v17;
        }
        while (v17);
        swift_bridgeObjectRelease();
      }
      else
      {
        return MEMORY[0x1E0DEE9D8];
      }
    }
  }
  return v48;
}

uint64_t sub_1D46CC0B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  unint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;

  v2 = sub_1D4921638();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v50 = (uint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D49214F4();
  v6 = MEMORY[0x1E0C80A78](v5);
  v48 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v49 = (char *)&v38 - v9;
  v10 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v51 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v12 = *(unsigned __int8 *)(v8 + 80);
    v13 = (v12 + 32) & ~v12;
    v14 = a1 + v13;
    v15 = *(_QWORD *)(v8 + 72);
    v45 = v13;
    v46 = v8;
    v41 = v12 | 7;
    v42 = v15 + v13;
    v47 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v38 = a1;
    swift_bridgeObjectRetain();
    v40 = xmmword_1D49273C0;
    v43 = v5;
    v44 = v3;
    v39 = v2;
    while (1)
    {
      v47(v49, v14, v5);
      v17 = v50;
      sub_1D492147C();
      v19 = sub_1D47CA880(v17);
      v20 = v10[2];
      v21 = (v18 & 1) == 0;
      v22 = v20 + v21;
      if (__OFADD__(v20, v21))
        break;
      v23 = v18;
      if (v10[3] < v22)
      {
        sub_1D47A4494(v22, 1);
        v10 = v51;
        v24 = sub_1D47CA880(v50);
        if ((v23 & 1) != (v25 & 1))
          goto LABEL_20;
        v19 = v24;
      }
      if ((v23 & 1) != 0)
      {
        (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v50, v2);
        v10 = v51;
        v26 = v51[7];
        v27 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
        v27(v48, v49, v5);
        v28 = *(_QWORD *)(v26 + 8 * v19);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v26 + 8 * v19) = v28;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v28 = sub_1D48A9620(0, *(_QWORD *)(v28 + 16) + 1, 1, v28);
          *(_QWORD *)(v26 + 8 * v19) = v28;
        }
        v31 = *(_QWORD *)(v28 + 16);
        v30 = *(_QWORD *)(v28 + 24);
        if (v31 >= v30 >> 1)
        {
          v28 = sub_1D48A9620(v30 > 1, v31 + 1, 1, v28);
          *(_QWORD *)(v26 + 8 * v19) = v28;
        }
        v2 = v39;
        *(_QWORD *)(v28 + 16) = v31 + 1;
        v16 = v28 + v45 + v31 * v15;
        v5 = v43;
        v27((char *)v16, v48, v43);
        v3 = v44;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA580);
        v32 = swift_allocObject();
        *(_OWORD *)(v32 + 16) = v40;
        (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v32 + v45, v49, v5);
        v10[(v19 >> 6) + 8] |= 1 << v19;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v10[6] + *(_QWORD *)(v3 + 72) * v19, v50, v2);
        *(_QWORD *)(v10[7] + 8 * v19) = v32;
        v33 = v10[2];
        v34 = __OFADD__(v33, 1);
        v35 = v33 + 1;
        if (v34)
          goto LABEL_19;
        v10[2] = v35;
      }
      v14 += v15;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    result = sub_1D4922E8C();
    __break(1u);
  }
  else
  {
LABEL_17:
    v36 = sub_1D46C6C04((uint64_t)v10);
    swift_release();
    return v36;
  }
  return result;
}

unint64_t sub_1D46CC41C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  __int128 v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;

  v2 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v70 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (unint64_t)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v56 - v7;
  v9 = MEMORY[0x1E0C80A78](v6);
  v66 = (uint64_t)&v56 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v67 = (uint64_t)&v56 - v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v56 - v13;
  v15 = *a1;
  v16 = a1[19];
  if (v16)
  {
    v17 = a1[20];
    v18 = a1[21];
    v19 = *(_OWORD **)(v15 + 16);
    v20 = &unk_1D4927000;
    v21 = MEMORY[0x1E0DEE9D8];
    v63 = v17;
    if (v19)
    {
      v58 = v2;
      v59 = v5;
      v2 = (uint64_t)&unk_1D4927000;
      *(_QWORD *)&v69 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
      v68 = v15 + v69;
      v64 = v18;
      v65 = v16;
      sub_1D46B2F58(v16);
      swift_bridgeObjectRetain();
      LODWORD(v62) = 0;
      v18 = 0;
      v20 = v19;
      v61 = (char *)v19 - 1;
      v60 = xmmword_1D49273C0;
      v16 = 0;
      do
      {
        while (1)
        {
          if (v16 >= *(_QWORD *)(v15 + 16))
          {
            __break(1u);
            goto LABEL_36;
          }
          v2 = *(_QWORD *)(v70 + 72);
          v18 = v16 + 1;
          sub_1D469C304(v68 + v2 * v16, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v14[96] != 1)
            break;
          v24 = v67;
          sub_1D469C304((uint64_t)v14, v67, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          v25 = *(_QWORD **)(v24 + 104);
          v26 = *(_QWORD *)v14;
          v27 = *((_QWORD *)v14 + 1);
          v28 = *((_QWORD *)v14 + 2);
          v29 = *((_QWORD *)v14 + 3);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EC38);
          v30 = swift_allocObject();
          *(_OWORD *)(v30 + 16) = v60;
          v31 = v63;
          *(_QWORD *)(v30 + 32) = v65;
          *(_QWORD *)(v30 + 40) = v31;
          v62 = v30;
          *(_QWORD *)(v30 + 48) = v64;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v33 = v25;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v42 = sub_1D48A8938(0, v25[2] + 1, 1, v25);
            v33 = v25;
            v25 = v42;
          }
          v35 = v25[2];
          v34 = v25[3];
          v36 = v35 + 1;
          if (v35 >= v34 >> 1)
          {
            v56 = v33;
            v57 = v35 + 1;
            v43 = v25;
            v44 = v35;
            v45 = sub_1D48A8938((_QWORD *)(v34 > 1), v35 + 1, 1, v43);
            v36 = v57;
            v35 = v44;
            v25 = v45;
          }
          v25[2] = v36;
          v37 = &v25[6 * v35];
          v37[4] = v26;
          v37[5] = v27;
          v37[6] = v28;
          v37[7] = v29;
          v37[8] = v62;
          v37[9] = MEMORY[0x1E0DEE9D8];
          swift_bridgeObjectRelease();
          v39 = v66;
          v38 = v67;
          *(_QWORD *)(v67 + 104) = v25;
          sub_1D469C304(v38, v39, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v21 = sub_1D48A8614(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
          v5 = *(_QWORD *)(v21 + 16);
          v40 = *(_QWORD *)(v21 + 24);
          v41 = v5 + 1;
          if (v5 >= v40 >> 1)
          {
            v62 = v5 + 1;
            v46 = sub_1D48A8614(v40 > 1, v5 + 1, 1, v21);
            v41 = v62;
            v21 = v46;
          }
          *(_QWORD *)(v21 + 16) = v41;
          sub_1D469C630(v66, v21 + v69 + v5 * v2, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1D4697DE0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1D4697DE0(v67, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
          LODWORD(v62) = 1;
          if (v61 == (char *)v16)
          {
            swift_bridgeObjectRelease();
LABEL_24:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v21;
          }
          ++v16;
        }
        sub_1D469C304((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v21 = sub_1D48A8614(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
        v23 = *(_QWORD *)(v21 + 16);
        v22 = *(_QWORD *)(v21 + 24);
        v5 = v23 + 1;
        if (v23 >= v22 >> 1)
          v21 = sub_1D48A8614(v22 > 1, v23 + 1, 1, v21);
        *(_QWORD *)(v21 + 16) = v5;
        sub_1D469C630((uint64_t)v8, v21 + v69 + v23 * v2, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1D4697DE0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
        v16 = v18;
      }
      while (v19 != (_OWORD *)v18);
      swift_bridgeObjectRelease();
      v2 = v58;
      v5 = v59;
      v18 = v64;
      v16 = v65;
      v20 = (_OWORD *)&unk_1D4927000;
      if ((v62 & 1) != 0)
        goto LABEL_24;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    if (qword_1ED98CC88 != -1)
LABEL_36:
      swift_once();
    v47 = xmmword_1ED98CC60;
    v48 = xmmword_1ED98CC70;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EC18);
    v49 = swift_allocObject();
    v69 = v20[60];
    *(_OWORD *)(v49 + 16) = v69;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EC38);
    v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = v69;
    v51 = v63;
    *(_QWORD *)(v50 + 32) = v16;
    *(_QWORD *)(v50 + 40) = v51;
    *(_QWORD *)(v50 + 48) = v18;
    *(_OWORD *)(v49 + 32) = v47;
    *(_OWORD *)(v49 + 48) = v48;
    *(_QWORD *)(v49 + 64) = v50;
    v52 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v49 + 72) = MEMORY[0x1E0DEE9D8];
    sub_1D4920FCC();
    *(_OWORD *)v5 = v47;
    *(_OWORD *)(v5 + 16) = v48;
    *(_QWORD *)(v5 + 32) = v52;
    *(_QWORD *)(v5 + 40) = v52;
    *(_QWORD *)(v5 + 48) = v52;
    *(_QWORD *)(v5 + 56) = v52;
    *(_OWORD *)(v5 + 64) = 0u;
    *(_OWORD *)(v5 + 80) = 0u;
    *(_BYTE *)(v5 + 96) = 1;
    *(_QWORD *)(v5 + 104) = v49;
    *(_BYTE *)(v5 + *(int *)(v2 + 60)) = 0;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v21 = sub_1D48A8614(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
    v54 = *(_QWORD *)(v21 + 16);
    v53 = *(_QWORD *)(v21 + 24);
    if (v54 >= v53 >> 1)
      v21 = sub_1D48A8614(v53 > 1, v54 + 1, 1, v21);
    *(_QWORD *)(v21 + 16) = v54 + 1;
    sub_1D469C630(v5, v21+ ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(_QWORD *)(v70 + 72) * v54, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    return v21;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v15;
}

uint64_t sub_1D46CCA38(uint64_t a1)
{
  uint64_t v1;

  return sub_1D46C953C(a1, *(double **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD **)(v1 + 48));
}

uint64_t sub_1D46CCA58(uint64_t a1)
{
  uint64_t v1;

  return sub_1D46C96AC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1D46CCA70(uint64_t a1)
{
  uint64_t v1;

  return sub_1D46C991C(a1, *(double **)(v1 + 16));
}

uint64_t sub_1D46CCA88(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D46CCAB0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

id *sub_1D46CCAD8(id *a1)
{
  id v2;

  v2 = *a1;
  swift_bridgeObjectRetain();
  return a1;
}

void **sub_1D46CCB0C(void **a1)
{
  void *v2;

  v2 = *a1;
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_1D46CCB3C(uint64_t a1)
{
  uint64_t v1;

  return sub_1D46C9DF4(a1, *(double **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

id *sub_1D46CCB54(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

id *sub_1D46CCB7C(id *a1)
{

  return a1;
}

uint64_t sub_1D46CCBA4(uint64_t a1)
{
  uint64_t v1;

  return sub_1D46CB5F4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1D46CCBBC(uint64_t a1)
{
  return sub_1D46CCC50(a1, sub_1D46C9308);
}

uint64_t sub_1D46CCBD8()
{
  swift_bridgeObjectRetain();
  sub_1D492135C();
  return sub_1D49218C0();
}

uint64_t sub_1D46CCC34(uint64_t a1)
{
  return sub_1D46CCC50(a1, sub_1D46C8A10);
}

uint64_t sub_1D46CCC50(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

unint64_t sub_1D46CCC74(uint64_t a1, void *a2, uint64_t *a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char v65;
  char *v66;
  void (*v67)(char *, uint64_t);
  void *v68;
  uint64_t ObjectType;
  char *v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v84;
  char *v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int64_t v92;
  unint64_t *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  BOOL v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  CGFloat *v118;
  CGFloat MinX;
  double v120;
  CGFloat Width;
  CGFloat Height;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  _QWORD *v127;
  id v128;
  unint64_t v129;
  unint64_t v130;
  _BYTE *v132;
  _BYTE *v133;
  uint64_t v134;
  uint64_t v135;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v137;
  uint64_t v138;
  char v139;
  _QWORD v140[2];
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t (*v156)(uint64_t, uint64_t, uint64_t);
  uint64_t v157;
  void (*v158)(char *, uint64_t);
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  _QWORD *v188;
  uint64_t v189;
  __int128 v190;
  __int128 v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  _QWORD *v195;
  CGRect v196;
  CGRect v197;
  CGRect v198;
  CGRect v199;

  v161 = a6;
  v167 = a5;
  v188 = a4;
  v149 = a2;
  v163 = a1;
  v145 = type metadata accessor for ObjectKnowledge();
  v146 = *(_QWORD *)(v145 - 8);
  MEMORY[0x1E0C80A78](v145);
  v150 = (char *)v140 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA5C0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v144 = (uint64_t)v140 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v151 = (char *)v140 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA5C8);
  MEMORY[0x1E0C80A78](v12);
  v183 = (uint64_t)v140 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = type metadata accessor for Com_Apple_Visualintelligence_AspireResult(0);
  MEMORY[0x1E0C80A78](v187);
  v185 = (char *)v140 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(0);
  v184 = *(_QWORD *)(v182 - 8);
  v15 = MEMORY[0x1E0C80A78](v182);
  v173 = (uint64_t)v140 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (_QWORD *)((char *)v140 - v17);
  v179 = sub_1D4922430();
  v178 = *(_QWORD *)(v179 - 8);
  v19 = MEMORY[0x1E0C80A78](v179);
  v172 = (char *)v140 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v177 = (char *)v140 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA5F8);
  v23 = MEMORY[0x1E0C80A78](v22);
  v164 = (char *)v140 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v165 = (char *)v140 - v25;
  v26 = sub_1D492204C();
  v27 = MEMORY[0x1E0C80A78](v26);
  v186 = (char *)v140 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v171 = (char *)v140 - v29;
  v176 = sub_1D4921FD4();
  v170 = *(_QWORD *)(v176 - 8);
  v30 = MEMORY[0x1E0C80A78](v176);
  v160 = (char *)v140 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v169 = (char *)v140 - v32;
  v175 = sub_1D4922418();
  v166 = *(_QWORD *)(v175 - 8);
  MEMORY[0x1E0C80A78](v175);
  v181 = (char *)v140 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1D4921DAC();
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v37 = (char *)v140 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA5D8);
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)v140 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1D49219EC();
  v42 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v44 = (char *)v140 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = *a3;
  v46 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v174 = sub_1D47C4208(MEMORY[0x1E0DEE9D8]);
  v195 = v46;
  if (v188[2])
  {
    v47 = swift_bridgeObjectRetain();
    sub_1D4895DEC(v47);
    return v174;
  }
  v142 = v45;
  v152 = v37;
  v155 = v40;
  v153 = v35;
  v154 = v34;
  v180 = v44;
  v168 = v42;
  v159 = v41;
  v193 = (uint64_t)v46;
  v194 = (uint64_t)v46;
  v49 = v163;
  v143 = *(_QWORD *)(v163 + 16);
  if (v143)
  {
    v50 = *(_QWORD *)(sub_1D4921DE8() - 8);
    v148 = v49 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
    v147 = *(_QWORD *)(v50 + 72);
    swift_bridgeObjectRetain();
    v51 = 0;
    v52 = 0;
    v53 = v159;
    v54 = v168;
    while (1)
    {
      v162 = v51;
      v57 = sub_1D4921D28();
      if (*(_QWORD *)(v57 + 16))
      {
        v58 = (uint64_t)v155;
        (*(void (**)(char *, unint64_t, uint64_t))(v54 + 16))(v155, v57 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80)), v53);
        v59 = 0;
        v60 = v178;
        v61 = v177;
      }
      else
      {
        v59 = 1;
        v60 = v178;
        v61 = v177;
        v58 = (uint64_t)v155;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v58, v59, 1, v53);
      swift_bridgeObjectRelease();
      v62 = v58;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v58, 1, v53) == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1D46992EC(v58, &qword_1EFEAA5D8);
        sub_1D46CEBCC();
        v68 = (void *)swift_allocError();
        *v132 = 0;
        swift_willThrow();
        goto LABEL_47;
      }
      v63 = v180;
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v180, v62, v53);
      v64 = v152;
      sub_1D49219E0();
      v65 = sub_1D4921DA0();
      (*(void (**)(char *, uint64_t))(v153 + 8))(v64, v154);
      if ((v65 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1D46CEBCC();
        v68 = (void *)swift_allocError();
        *v133 = 1;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v54 + 8))(v63, v53);
        goto LABEL_47;
      }
      v66 = v169;
      sub_1D49219D4();
      sub_1D4921FBC();
      v67 = *(void (**)(char *, uint64_t))(v170 + 8);
      v67(v66, v176);
      v192 = 0;
      v190 = 0u;
      v191 = 0u;
      sub_1D4922040();
      sub_1D4696EA4(&qword_1EFEAA430, (uint64_t (*)(uint64_t))MEMORY[0x1E0D10690], MEMORY[0x1E0D10688]);
      sub_1D49221C0();
      v68 = v52;
      if (v52)
        goto LABEL_46;
      if (v167)
      {
        ObjectType = swift_getObjectType();
        v70 = v160;
        sub_1D49219D4();
        v71 = sub_1D4921FBC();
        v73 = v72;
        v67(v70, v176);
        v74 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v161 + 40))(v71, v73, ObjectType);
        sub_1D4696F10(v71, v73);
        v60 = v178;
        v61 = v177;
        v75 = MEMORY[0x1E0DEE9D8];
      }
      else
      {
        v75 = MEMORY[0x1E0DEE9D8];
        v74 = MEMORY[0x1E0DEE9D8];
      }
      sub_1D492240C();
      v76 = sub_1D49223F4();
      v158 = *(void (**)(char *, uint64_t))(v60 + 8);
      v158(v61, v179);
      v77 = *(_QWORD *)(v76 + 16);
      v54 = v168;
      if (v77)
      {
        v78 = v77 - 1;
        v79 = sub_1D4922454();
        v80 = *(_QWORD *)(v79 - 8);
        v81 = v76
            + ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))
            + *(_QWORD *)(v80 + 72) * v78;
        v82 = (uint64_t)v165;
        (*(void (**)(char *, unint64_t, uint64_t))(v80 + 16))(v165, v81, v79);
        v83 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v80 + 56);
        v84 = v79;
        v83(v82, 0, 1, v79);
      }
      else
      {
        v84 = sub_1D4922454();
        v82 = (uint64_t)v165;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v165, 1, 1, v84);
      }
      v85 = v172;
      swift_bridgeObjectRelease();
      sub_1D4922454();
      v86 = *(_QWORD *)(v84 - 8);
      v156 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v86 + 48);
      v87 = v156(v82, 1, v84);
      v157 = v86;
      if (v87 != 1)
        break;
      sub_1D46992EC(v82, &qword_1EFEAA5F8);
      v88 = v75;
LABEL_37:
      sub_1D492240C();
      v108 = sub_1D49223F4();
      v158(v85, v179);
      v109 = *(_QWORD *)(v108 + 16);
      v110 = v157;
      if (v109)
      {
        v111 = (uint64_t)v164;
        (*(void (**)(char *, unint64_t, uint64_t))(v157 + 16))(v164, v108+ ((*(unsigned __int8 *)(v157 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v157 + 80))+ *(_QWORD *)(v157 + 72) * (v109 - 1), v84);
        v112 = 0;
      }
      else
      {
        v112 = 1;
        v111 = (uint64_t)v164;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56))(v111, v112, 1, v84);
      swift_bridgeObjectRelease();
      if (v156(v111, 1, v84) == 1)
      {
        sub_1D46992EC(v111, &qword_1EFEAA5F8);
        v55 = v75;
      }
      else
      {
        v55 = sub_1D4922448();
        (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v111, v84);
      }
      v51 = v162 + 1;
      swift_bridgeObjectRetain();
      v52 = v68;
      v56 = sub_1D46CB74C(v55, v88);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_1D4895930(v74);
      sub_1D4895C60(v56);
      (*(void (**)(char *, uint64_t))(v166 + 8))(v181, v175);
      v53 = v159;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v180, v159);
      if (v51 == v143)
      {
        swift_bridgeObjectRelease();
        v48 = v174;
        v113 = v149;
        goto LABEL_43;
      }
    }
    v89 = sub_1D492243C();
    v90 = v82;
    v91 = v89;
    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v90, v84);
    v92 = *(_QWORD *)(v91 + 16);
    if (!v92)
    {
      swift_bridgeObjectRelease();
      v88 = v75;
      v54 = v168;
      goto LABEL_37;
    }
    v140[0] = v84;
    v141 = v74;
    v189 = v75;
    sub_1D48AC120(0, v92, 0);
    v140[1] = v91;
    v93 = (unint64_t *)(v91 + 40);
    while (1)
    {
      v95 = *(v93 - 1);
      v94 = *v93;
      v192 = 0;
      v190 = 0u;
      v191 = 0u;
      sub_1D46A5708(v95, v94);
      sub_1D46A5708(v95, v94);
      sub_1D4922040();
      sub_1D4696EA4(&qword_1EFEAA5E8, type metadata accessor for Com_Apple_Visualintelligence_AspireResult, (uint64_t)&unk_1D492FB54);
      v96 = (uint64_t)v185;
      sub_1D49221C0();
      if (v68)
      {
        sub_1D4696F10(v95, v94);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        (*(void (**)(char *, uint64_t))(v166 + 8))(v181, v175);
LABEL_46:
        (*(void (**)(char *, uint64_t))(v168 + 8))(v180, v159);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_47:
        v48 = v174;
LABEL_52:
        v127 = v195;
        v128 = v68;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v127 = sub_1D48A9670(0, v127[2] + 1, 1, v127);
        v130 = v127[2];
        v129 = v127[3];
        if (v130 >= v129 >> 1)
          v127 = sub_1D48A9670((_QWORD *)(v129 > 1), v130 + 1, 1, v127);
        v127[2] = v130 + 1;
        v127[v130 + 4] = v68;

        v195 = v127;
        return v48;
      }
      v188 = 0;
      v97 = v183;
      sub_1D469C5EC(v96, v183, &qword_1EFEAA5C8);
      v98 = type metadata accessor for Com_Apple_Visualintelligence_AspireResult.OneOf_Snippet(0);
      v99 = v96;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 48))(v97, 1, v98) == 1)
        break;
      v101 = swift_getEnumCaseMultiPayload() == 1;
      v100 = v182;
      if (v101)
      {
        sub_1D4697DE0(v97, type metadata accessor for Com_Apple_Visualintelligence_AspireResult.OneOf_Snippet);
        goto LABEL_29;
      }
      v104 = v173;
      sub_1D469C630(v97, v173, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
      sub_1D469C630(v104, (uint64_t)v18, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
LABEL_30:
      v68 = v188;
      sub_1D4697DE0(v99, type metadata accessor for Com_Apple_Visualintelligence_AspireResult);
      sub_1D4696F10(v95, v94);
      v88 = v189;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D48AC120(0, *(_QWORD *)(v88 + 16) + 1, 1);
        v88 = v189;
      }
      v105 = v184;
      v107 = *(_QWORD *)(v88 + 16);
      v106 = *(_QWORD *)(v88 + 24);
      if (v107 >= v106 >> 1)
      {
        sub_1D48AC120(v106 > 1, v107 + 1, 1);
        v105 = v184;
        v88 = v189;
      }
      v93 += 2;
      *(_QWORD *)(v88 + 16) = v107 + 1;
      sub_1D469C630((uint64_t)v18, v88+ ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80))+ *(_QWORD *)(v105 + 72) * v107, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
      if (!--v92)
      {
        swift_bridgeObjectRelease();
        v85 = v172;
        v54 = v168;
        v75 = MEMORY[0x1E0DEE9D8];
        v74 = v141;
        v84 = v140[0];
        goto LABEL_37;
      }
    }
    sub_1D46992EC(v97, &qword_1EFEAA5C8);
    v100 = v182;
LABEL_29:
    *v18 = 0;
    v18[1] = 0xE000000000000000;
    v18[2] = 0;
    v18[3] = 0xE000000000000000;
    v18[4] = 0;
    v18[5] = MEMORY[0x1E0DEE9D8];
    sub_1D4922010();
    v102 = (char *)v18 + *(int *)(v100 + 40);
    v103 = type metadata accessor for Com_Apple_Visualintelligence_LocationPoint(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v102, 1, 1, v103);
    goto LABEL_30;
  }
  v52 = 0;
  v113 = v149;
  v48 = v174;
LABEL_43:
  v114 = v142;
  v115 = v151;
  v116 = (uint64_t)v150;
  if (*(_QWORD *)(v142 + 16))
  {
    v117 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8) + 80);
    v118 = (CGFloat *)(v114 + ((v117 + 32) & ~v117));
    MinX = *v118;
    v120 = v118[1];
    Width = v118[2];
    Height = v118[3];
  }
  else
  {
    v196.origin.x = 0.0;
    v196.origin.y = 0.0;
    v196.size.width = 1.0;
    v196.size.height = 1.0;
    MinX = CGRectGetMinX(v196);
    v197.origin.x = 0.0;
    v197.origin.y = 0.0;
    v197.size.width = 1.0;
    v197.size.height = 1.0;
    v120 = 1.0 - CGRectGetMaxY(v197);
    v198.origin.x = 0.0;
    v198.origin.y = 0.0;
    v198.size.width = 1.0;
    v198.size.height = 1.0;
    Width = CGRectGetWidth(v198);
    v199.origin.x = 0.0;
    v199.origin.y = 0.0;
    v199.size.width = 1.0;
    v199.size.height = 1.0;
    Height = CGRectGetHeight(v199);
  }
  type metadata accessor for Reranker();
  swift_allocObject();
  sub_1D47FC634();
  v68 = v52;
  if (v52)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_52;
  }
  v123 = v48;
  v125 = v193;
  v124 = v194;
  v126 = objc_msgSend(v113, sel_location);
  sub_1D47FE898(v125, v124, v126, v115);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v134 = v144;
  sub_1D469C5EC((uint64_t)v115, v144, &qword_1EFEAA5C0);
  v135 = v146;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v146 + 48))(v134, 1, v145) == 1)
  {
    sub_1D46992EC(v134, &qword_1EFEAA5C0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v190 = v123;
    sub_1D47AAB04(MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], isUniquelyReferenced_nonNull_native, MinX, v120, Width, Height);
    v48 = v190;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D469C630(v134, v116, (uint64_t (*)(_QWORD))type metadata accessor for ObjectKnowledge);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA5F0);
    v137 = (*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80);
    v138 = swift_allocObject();
    *(_OWORD *)(v138 + 16) = xmmword_1D49273C0;
    sub_1D469C304(v116, v138 + v137, (uint64_t (*)(_QWORD))type metadata accessor for ObjectKnowledge);
    v139 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v190 = v123;
    sub_1D47AAB04(v138, MEMORY[0x1E0DEE9D8], v139, MinX, v120, Width, Height);
    v48 = v190;
    swift_release();
    swift_bridgeObjectRelease();
    sub_1D4697DE0(v116, (uint64_t (*)(_QWORD))type metadata accessor for ObjectKnowledge);
  }
  sub_1D46992EC((uint64_t)v115, &qword_1EFEAA5C0);
  return v48;
}

unint64_t sub_1D46CDFB4(unint64_t a1, void *a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  id v38;
  id v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  void *v47;
  double v48;
  double v49;
  id v50;
  void *v51;
  double v52;
  double v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  void *v65;
  _BYTE *v66;
  id v67;
  _QWORD *v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t ObjectType;
  uint64_t v91;
  uint64_t v92;
  int EnumCaseMultiPayload;
  uint64_t v94;
  CGFloat *v95;
  CGFloat MinX;
  double v97;
  CGFloat Width;
  CGFloat Height;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  char *v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  unint64_t v131;
  id v132;
  _QWORD v133[5];
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  CGRect v154;
  CGRect v155;
  CGRect v156;
  CGRect v157;

  v128 = a6;
  v129 = a5;
  v132 = a4;
  v130 = a2;
  v127 = a1;
  v7 = type metadata accessor for ObjectKnowledge();
  v8 = *(_QWORD *)(v7 - 8);
  v120 = v7;
  v121 = v8;
  MEMORY[0x1E0C80A78](v7);
  v118 = (uint64_t)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA5C0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v119 = (uint64_t)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v122 = (uint64_t *)((char *)&v109 - v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA5C8);
  MEMORY[0x1E0C80A78](v14);
  v125 = (uint64_t)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontListSnippet(0);
  MEMORY[0x1E0C80A78](v123);
  v124 = (uint64_t *)((char *)&v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_1D492204C();
  MEMORY[0x1E0C80A78](v17);
  v126 = (char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Com_Apple_Visualintelligence_AspireResult(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v109 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1D4921FD4();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v109 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA5D0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v109 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA5D8);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v109 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *a3;
  v33 = *(_OWORD *)(a3 + 15);
  v34 = *(_OWORD *)(a3 + 19);
  v151 = *(_OWORD *)(a3 + 17);
  v152 = v34;
  v153 = *(_OWORD *)(a3 + 21);
  v35 = *(_OWORD *)(a3 + 7);
  v36 = *(_OWORD *)(a3 + 11);
  v147 = *(_OWORD *)(a3 + 9);
  v148 = v36;
  v149 = *(_OWORD *)(a3 + 13);
  v150 = v33;
  v37 = *(_OWORD *)(a3 + 3);
  v143 = *(_OWORD *)(a3 + 1);
  v144 = v37;
  v145 = *(_OWORD *)(a3 + 5);
  v146 = v35;
  v131 = sub_1D47C4208(MEMORY[0x1E0DEE9D8]);
  if (v132)
  {
    v38 = v132;
    v39 = v132;
    v40 = sub_1D48A9670(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v42 = v40[2];
    v41 = v40[3];
    if (v42 >= v41 >> 1)
      v40 = sub_1D48A9670((_QWORD *)(v41 > 1), v42 + 1, 1, v40);
    v43 = v131;
    v40[2] = v42 + 1;
    v40[v42 + 4] = v38;
    return v43;
  }
  v132 = v28;
  v113 = v31;
  v114 = v25;
  v115 = v23;
  v116 = v19;
  v112 = v32;
  v117 = v21;
  v44 = v129;
  v45 = v130;
  if (v130)
  {
    v46 = objc_msgSend(v130, sel_location);
    if (v46)
    {
      v47 = v46;
      objc_msgSend(v46, sel_coordinate);
      v49 = v48;

      v50 = objc_msgSend(v45, sel_location);
      if (v50)
      {
        v51 = v50;
        objc_msgSend(v50, sel_coordinate);
        v53 = v52;

        v54 = sub_1D477F78C(7, v49, v53);
        v56 = v55;
        if (v44)
        {
          v57 = v54;
          v58 = type metadata accessor for NetworkService.NetworkEncryptedSearchResponse(0);
          v59 = v132;
          sub_1D469C5EC(v127 + *(int *)(v58 + 20), (uint64_t)v132, &qword_1EFEAA5D0);
          v60 = sub_1D4921DE8();
          v61 = *(_QWORD *)(v60 - 8);
          if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60) == 1)
          {
            sub_1D46992EC((uint64_t)v59, &qword_1EFEAA5D0);
            v62 = 0;
            v63 = 0xC000000000000000;
            v64 = v128;
          }
          else
          {
            v111 = v57;
            v127 = v56;
            v73 = sub_1D4921D28();
            (*(void (**)(id, uint64_t))(v61 + 8))(v59, v60);
            v74 = *(_QWORD *)(v73 + 16);
            v75 = sub_1D49219EC();
            v76 = *(_QWORD *)(v75 - 8);
            v64 = v128;
            v110 = v22;
            if (v74)
            {
              v77 = (uint64_t)v113;
              (*(void (**)(char *, unint64_t, uint64_t))(v76 + 16))(v113, v73 + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80)), v75);
              v78 = 0;
              v79 = v114;
              v80 = v115;
            }
            else
            {
              v78 = 1;
              v79 = v114;
              v80 = v115;
              v77 = (uint64_t)v113;
            }
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(v77, v78, 1, v75);
            swift_bridgeObjectRelease();
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v77, 1, v75) == 1)
            {
              sub_1D46992EC(v77, &qword_1EFEAA5D8);
              v62 = 0;
              v63 = 0xC000000000000000;
            }
            else
            {
              sub_1D49219D4();
              (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v77, v75);
              v62 = sub_1D4921FBC();
              v63 = v89;
              (*(void (**)(char *, uint64_t))(v80 + 8))(v79, v110);
            }
            v56 = v127;
            v57 = v111;
          }
          ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v64 + 40))(v62, v63, v57, v56, ObjectType, v64);
          v92 = v91;
          swift_bridgeObjectRelease();
          sub_1D4696F10(v62, v63);
          __asm { BR              X10 }
        }
        swift_bridgeObjectRelease();
        v72 = (uint64_t)v117;
        memset(v133, 0, sizeof(v133));
        sub_1D46A5708(0, 0xC000000000000000);
        sub_1D4922040();
        sub_1D4696EA4(&qword_1EFEAA5E8, type metadata accessor for Com_Apple_Visualintelligence_AspireResult, (uint64_t)&unk_1D492FB54);
        sub_1D49221C0();
        v127 = 0xC000000000000000;
        v128 = 0;
        v129 = 0;
        v132 = (id)0xC000000000000000;
        v81 = v125;
        sub_1D469C5EC(v72, v125, &qword_1EFEAA5C8);
        v82 = type metadata accessor for Com_Apple_Visualintelligence_AspireResult.OneOf_Snippet(0);
        v83 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 48))(v81, 1, v82);
        v84 = v131;
        v85 = v72;
        if (v83 == 1)
        {
          sub_1D46992EC(v81, &qword_1EFEAA5C8);
          v86 = v124;
          v87 = v112;
          v88 = MEMORY[0x1E0DEE9D8];
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          v86 = v124;
          v88 = MEMORY[0x1E0DEE9D8];
          if (EnumCaseMultiPayload == 1)
          {
            sub_1D469C630(v81, (uint64_t)v124, type metadata accessor for Com_Apple_Visualintelligence_StorefrontListSnippet);
            v87 = v112;
LABEL_30:
            if (*(_QWORD *)(v87 + 16))
            {
              v94 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8)
                                       + 80);
              v95 = (CGFloat *)(v87 + ((v94 + 32) & ~v94));
              MinX = *v95;
              v97 = v95[1];
              Width = v95[2];
              Height = v95[3];
            }
            else
            {
              v154.origin.x = 0.0;
              v154.origin.y = 0.0;
              v154.size.width = 1.0;
              v154.size.height = 1.0;
              MinX = CGRectGetMinX(v154);
              v155.origin.x = 0.0;
              v155.origin.y = 0.0;
              v155.size.width = 1.0;
              v155.size.height = 1.0;
              v97 = 1.0 - CGRectGetMaxY(v155);
              v156.origin.x = 0.0;
              v156.origin.y = 0.0;
              v156.size.width = 1.0;
              v156.size.height = 1.0;
              Width = CGRectGetWidth(v156);
              v157.origin.x = 0.0;
              v157.origin.y = 0.0;
              v157.size.width = 1.0;
              v157.size.height = 1.0;
              Height = CGRectGetHeight(v157);
            }
            type metadata accessor for Reranker();
            swift_allocObject();
            sub_1D47FC634();
            v139 = v150;
            v140 = v151;
            v141 = v152;
            v142 = v153;
            v135 = v146;
            v136 = v147;
            v137 = v148;
            v138 = v149;
            *(_OWORD *)&v133[1] = v143;
            *(_OWORD *)&v133[3] = v144;
            v133[0] = v112;
            v134 = v145;
            v100 = objc_msgSend(v45, sel_location);
            v101 = v122;
            sub_1D47FF6DC(v86, (uint64_t)v133, v100, v122);

            v102 = v119;
            sub_1D469C5EC((uint64_t)v101, v119, &qword_1EFEAA5C0);
            v103 = v121;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v121 + 48))(v102, 1, v120) == 1)
            {
              sub_1D46992EC(v102, &qword_1EFEAA5C0);
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v133[0] = v84;
              sub_1D47AAB04(MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], isUniquelyReferenced_nonNull_native, MinX, v97, Width, Height);
              v43 = v133[0];
              swift_release();
              swift_bridgeObjectRelease();
              sub_1D4696F10(v129, (unint64_t)v132);
              sub_1D4696F10(v128, v127);
            }
            else
            {
              v105 = v118;
              sub_1D469C630(v102, v118, (uint64_t (*)(_QWORD))type metadata accessor for ObjectKnowledge);
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA5F0);
              v106 = (*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
              v107 = swift_allocObject();
              *(_OWORD *)(v107 + 16) = xmmword_1D49273C0;
              sub_1D469C304(v105, v107 + v106, (uint64_t (*)(_QWORD))type metadata accessor for ObjectKnowledge);
              v108 = swift_isUniquelyReferenced_nonNull_native();
              v133[0] = v84;
              sub_1D47AAB04(v107, MEMORY[0x1E0DEE9D8], v108, MinX, v97, Width, Height);
              v43 = v133[0];
              swift_release();
              swift_bridgeObjectRelease();
              sub_1D4696F10(v129, (unint64_t)v132);
              sub_1D4696F10(v128, v127);
              sub_1D4697DE0(v105, (uint64_t (*)(_QWORD))type metadata accessor for ObjectKnowledge);
            }
            sub_1D46992EC((uint64_t)v101, &qword_1EFEAA5C0);
            sub_1D4697DE0((uint64_t)v86, type metadata accessor for Com_Apple_Visualintelligence_StorefrontListSnippet);
            sub_1D4697DE0(v85, type metadata accessor for Com_Apple_Visualintelligence_AspireResult);
            return v43;
          }
          sub_1D4697DE0(v81, type metadata accessor for Com_Apple_Visualintelligence_AspireResult.OneOf_Snippet);
          v87 = v112;
        }
        *v86 = v88;
        sub_1D4922010();
        goto LABEL_30;
      }
    }
  }
  sub_1D46CEBCC();
  v65 = (void *)swift_allocError();
  *v66 = 2;
  swift_willThrow();
  v43 = v131;
  v67 = v65;
  v68 = sub_1D48A9670(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v70 = v68[2];
  v69 = v68[3];
  if (v70 >= v69 >> 1)
    v68 = sub_1D48A9670((_QWORD *)(v69 > 1), v70 + 1, 1, v68);
  v68[2] = v70 + 1;
  v68[v70 + 4] = v65;

  return v43;
}

unint64_t sub_1D46CEBCC()
{
  unint64_t result;

  result = qword_1EFEAA5E0;
  if (!qword_1EFEAA5E0)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4927FBC, &type metadata for ServerSearchProcessorError);
    atomic_store(result, (unint64_t *)&qword_1EFEAA5E0);
  }
  return result;
}

unint64_t sub_1D46CEC10()
{
  unint64_t result;

  result = qword_1EFEAA608;
  if (!qword_1EFEAA608)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4933500, &_s5ErrorON);
    atomic_store(result, (unint64_t *)&qword_1EFEAA608);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ServerSearchProcessorError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D46CECA0 + 4 * byte_1D4927EB9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D46CECD4 + 4 * byte_1D4927EB4[v4]))();
}

uint64_t sub_1D46CECD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46CECDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D46CECE4);
  return result;
}

uint64_t sub_1D46CECF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D46CECF8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D46CECFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46CED04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ServerSearchProcessorError()
{
  return &type metadata for ServerSearchProcessorError;
}

unint64_t sub_1D46CED24()
{
  unint64_t result;

  result = qword_1EFEAA618;
  if (!qword_1EFEAA618)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4927F94, &type metadata for ServerSearchProcessorError);
    atomic_store(result, (unint64_t *)&qword_1EFEAA618);
  }
  return result;
}

unint64_t sub_1D46CED68()
{
  unint64_t result;

  result = qword_1EFEAA620;
  if (!qword_1EFEAA620)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4927F1C, &type metadata for ServerSearchProcessorError);
    atomic_store(result, (unint64_t *)&qword_1EFEAA620);
  }
  return result;
}

unint64_t sub_1D46CEDAC()
{
  unint64_t result;

  result = qword_1ED98AE70;
  if (!qword_1ED98AE70)
  {
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0DEB470], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1ED98AE70);
  }
  return result;
}

uint64_t sub_1D46CEDF0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46CB6E0(a1);
}

uint64_t sub_1D46CEE04()
{
  return sub_1D4920D80() & 1;
}

uint64_t sub_1D46CEE34()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StringMatching()
{
  return objc_opt_self();
}

uint64_t sub_1D46CEE64(unint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t result;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  _QWORD *v41;
  uint64_t v42;
  BOOL v43;
  char v44;
  _BOOL8 v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  int64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  int64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v10 = sub_1D49226DC();
  v66 = (unint64_t)a3;
  v11 = sub_1D49226DC();
  if (__OFADD__(v11, 1))
    goto LABEL_108;
  v5 = v11;
  v12 = sub_1D48C3668(0, v11 + 1);
  if (__OFADD__(v10, 1))
    goto LABEL_109;
  v13 = sub_1D48C3840(v12, v10 + 1);
  if (v10 < 0)
    goto LABEL_110;
  v4 = v13;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_111;
  if (!*(_QWORD *)(v4 + 16))
    goto LABEL_112;
LABEL_6:
  v6 = v4 + 32;
  a3 = *(_QWORD **)(v4 + 32);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v4 + 32) = a3;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    if (a3[2])
      goto LABEL_8;
  }
  else
  {
    while (1)
    {
      a3 = sub_1D47DFA84(a3);
      if (!a3[2])
        break;
LABEL_8:
      v62 = a4;
      a3[4] = 0;
      *(_QWORD *)v6 = a3;
      if (!v10)
      {
LABEL_17:
        if (v5 < 0)
          goto LABEL_115;
        if (!*(_QWORD *)(v4 + 16))
          goto LABEL_116;
        a3 = *(_QWORD **)v6;
        result = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)v6 = a3;
        if ((result & 1) == 0)
          goto LABEL_117;
        goto LABEL_20;
      }
      v15 = 0;
      a4 = v4 + 40;
      while (1)
      {
        v16 = v15 + 1;
        if ((unint64_t)(v15 + 1) >= *(_QWORD *)(v4 + 16))
          break;
        a3 = *(_QWORD **)(a4 + 8 * v15);
        v17 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(a4 + 8 * v15) = a3;
        if ((v17 & 1) != 0)
        {
          if (!a3[2])
            goto LABEL_16;
        }
        else
        {
          a3 = sub_1D47DFA84(a3);
          *(_QWORD *)(a4 + 8 * v15) = a3;
          if (!a3[2])
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        a3[4] = v16;
        ++v15;
        if (v10 == v16)
          goto LABEL_17;
      }
LABEL_105:
      __break(1u);
LABEL_106:
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_107:
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      v4 = (unint64_t)sub_1D47DFAE8((_QWORD *)v4);
      if (*(_QWORD *)(v4 + 16))
        goto LABEL_6;
LABEL_112:
      __break(1u);
    }
  }
  __break(1u);
LABEL_115:
  __break(1u);
LABEL_116:
  __break(1u);
LABEL_117:
  result = (uint64_t)sub_1D47DFA84(a3);
  a3 = (_QWORD *)result;
LABEL_20:
  v19 = v62;
  if (!a3[2])
  {
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
    goto LABEL_121;
  }
  a3[4] = 0;
  *(_QWORD *)v6 = a3;
  if (v5)
  {
    a4 = 0;
    do
    {
      if (!*(_QWORD *)(v4 + 16))
      {
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
        goto LABEL_105;
      }
      result = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)v6 = a3;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1D47DFA84(a3);
        a3 = (_QWORD *)result;
      }
      v20 = a4 + 1;
      if (a4 + 1 >= a3[2])
        goto LABEL_104;
      a3[a4 + 5] = v20;
      *(_QWORD *)v6 = a3;
      ++a4;
    }
    while (v5 != v20);
    if (v10 >= 1 && v5 >= 1)
    {
      v64 = v6;
      v65 = v4;
      if ((a2 & 0x2000000000000000) != 0)
        v21 = HIBYTE(a2) & 0xF;
      else
        v21 = a1 & 0xFFFFFFFFFFFFLL;
      v22 = HIBYTE(v62) & 0xF;
      if ((v62 & 0x2000000000000000) == 0)
        v22 = v66 & 0xFFFFFFFFFFFFLL;
      v60 = v22;
      v61 = v21;
      v4 = 1;
      v59 = v10;
      v63 = v5;
      while (2)
      {
        v68 = v4 - 1;
        v10 = 1;
        do
        {
          swift_bridgeObjectRetain();
          v23 = sub_1D49226DC();
          if (v23)
          {
            v6 = v23;
            if (v23 < 1)
            {
              v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA648);
              v24 = (_QWORD *)swift_allocObject();
              v25 = _swift_stdlib_malloc_size(v24);
              v26 = v25 - 32;
              if (v25 < 32)
                v26 = v25 - 17;
              v24[2] = v6;
              v24[3] = 2 * (v26 >> 4);
            }
            v69 = a1;
            v70 = a2;
            a4 = v6 & ~(v6 >> 63);
            v71 = 0;
            v72 = v61;
            swift_bridgeObjectRetain();
            v27 = 4;
            while (a4)
            {
              a3 = &v69;
              v28 = sub_1D4922724();
              if (!v29)
                goto LABEL_106;
              v30 = &v24[v27];
              *v30 = v28;
              v30[1] = v29;
              --a4;
              v27 += 2;
              if (!--v6)
              {
                swift_bridgeObjectRelease();
                goto LABEL_50;
              }
            }
            __break(1u);
            goto LABEL_89;
          }
          v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_50:
          swift_bridgeObjectRelease();
          if (v4 > v24[2])
          {
            __break(1u);
LABEL_94:
            __break(1u);
LABEL_95:
            __break(1u);
LABEL_96:
            __break(1u);
LABEL_97:
            __break(1u);
LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
LABEL_100:
            __break(1u);
LABEL_101:
            __break(1u);
LABEL_102:
            __break(1u);
            goto LABEL_103;
          }
          v5 = a2;
          v31 = &v24[2 * v68];
          v6 = v31[4];
          a2 = v31[5];
          swift_bridgeObjectRetain();
          swift_release();
          swift_bridgeObjectRetain();
          v32 = sub_1D49226DC();
          if (v32)
          {
            v33 = v32;
            if (v32 < 1)
            {
              v34 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA648);
              v34 = (_QWORD *)swift_allocObject();
              v35 = _swift_stdlib_malloc_size(v34);
              v36 = v35 - 32;
              if (v35 < 32)
                v36 = v35 - 17;
              v34[2] = v33;
              v34[3] = 2 * (v36 >> 4);
            }
            v69 = v66;
            v70 = v19;
            a4 = v33 & ~(v33 >> 63);
            v71 = 0;
            v72 = v60;
            swift_bridgeObjectRetain();
            v37 = 4;
            while (a4)
            {
              a3 = &v69;
              v38 = sub_1D4922724();
              if (!v39)
                goto LABEL_107;
              v40 = &v34[v37];
              *v40 = v38;
              v40[1] = v39;
              --a4;
              v37 += 2;
              if (!--v33)
              {
                swift_bridgeObjectRelease();
                v19 = v62;
                goto LABEL_63;
              }
            }
LABEL_89:
            __break(1u);
            goto LABEL_90;
          }
          v34 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_63:
          swift_bridgeObjectRelease();
          a4 = v10 - 1;
          if ((unint64_t)(v10 - 1) >= v34[2])
            goto LABEL_94;
          v41 = &v34[2 * a4];
          v42 = v41[4];
          a3 = (_QWORD *)v41[5];
          swift_bridgeObjectRetain();
          swift_release();
          v43 = v6 == v42 && a2 == (_QWORD)a3;
          if (v43)
          {
            swift_bridgeObjectRelease_n();
            v45 = 0;
          }
          else
          {
            v44 = sub_1D4922E38();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v45 = (v44 & 1) == 0;
          }
          v6 = v64;
          v46 = *(_QWORD *)(v65 + 16);
          if (v4 > v46)
            goto LABEL_95;
          v47 = *(_QWORD *)(v64 + 8 * v68);
          if ((unint64_t)v10 >= *(_QWORD *)(v47 + 16))
            goto LABEL_96;
          v48 = v47 + 32;
          v49 = *(_QWORD *)(v47 + 32 + 8 * v10);
          v50 = __OFADD__(v49, 1);
          v51 = v49 + 1;
          if (v50)
            goto LABEL_97;
          if (v4 >= v46)
            goto LABEL_98;
          a3 = *(_QWORD **)(v64 + 8 * v4);
          if (a4 >= a3[2])
            goto LABEL_99;
          v52 = a3[a4 + 4];
          v50 = __OFADD__(v52, 1);
          v53 = v52 + 1;
          if (v50)
            goto LABEL_100;
          v54 = *(_QWORD *)(v48 + 8 * a4);
          v50 = __OFADD__(v54, v45);
          v55 = v54 + v45;
          if (v50)
            goto LABEL_101;
          a2 = v5;
          if (v53 < v51)
            v51 = v53;
          if (v55 >= v51)
            a4 = v51;
          else
            a4 = v55;
          v56 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v64 + 8 * v4) = a3;
          if ((v56 & 1) == 0)
          {
            a3 = sub_1D47DFA84(a3);
            *(_QWORD *)(v64 + 8 * v4) = a3;
          }
          v5 = v63;
          if ((unint64_t)v10 >= a3[2])
            goto LABEL_102;
          a3[v10 + 4] = a4;
          v43 = v10++ == v63;
        }
        while (!v43);
        v10 = v59;
        v43 = v4++ == v59;
        if (!v43)
          continue;
        break;
      }
LABEL_90:
      result = v65;
      if (v10 >= *(_QWORD *)(v65 + 16))
        goto LABEL_119;
      v57 = *(_QWORD *)(v6 + 8 * v10);
      if (v5 < *(_QWORD *)(v57 + 16))
      {
        v58 = *(_QWORD *)(v57 + 8 * v5 + 32);
        swift_bridgeObjectRelease();
        return v58;
      }
      goto LABEL_120;
    }
  }
LABEL_121:
  __break(1u);
  return result;
}

uint64_t sub_1D46CF49C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 16);
  if (v4 >= v3)
    v5 = a2;
  else
    v5 = a1;
  if (v4 >= v3)
    v6 = a1;
  else
    v6 = a2;
  v7 = *(_QWORD *)(v6 + 16);
  result = *(_QWORD *)(v5 + 16);
  if (!v7)
    return result;
  v9 = v7 - 1;
  if (v7 - 1 >= a3)
    v9 = a3;
  v10 = __OFADD__(v7, v9);
  v11 = v7 + v9;
  if (v10)
    goto LABEL_41;
  if (result < v11)
    v11 = *(_QWORD *)(v5 + 16);
  v24 = v11;
  if (v11 < v7)
    goto LABEL_42;
  v12 = (2 * v7) | 1;
  v25 = -result;
  v13 = *(_QWORD *)(v5 + 16);
  v23 = v13;
  while (2)
  {
    if (__OFSUB__(result, v7))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (result - v7 < 0)
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    v14 = 0;
    v26 = v12;
    while (1)
    {
      if ((uint64_t)(v7 + v14) < (uint64_t)v14)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      v15 = *(_QWORD *)(v5 + 16);
      if (v15 < v14 || (uint64_t)v15 < (uint64_t)(v7 + v14))
        goto LABEL_37;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA628);
      sub_1D46BF03C(&qword_1EFEAA630, &qword_1EFEAA628, MEMORY[0x1E0DEBF78]);
      v17 = (_QWORD *)sub_1D49227A8();
      v19 = v18;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA638);
      sub_1D46BF03C(&qword_1EFEAA640, &qword_1EFEAA638, MEMORY[0x1E0DEAF38]);
      v20 = sub_1D49227A8();
      v22 = sub_1D46CEE64(v20, v21, v17, v19);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (v22 < v13)
      {
        v13 = v22;
        if (!v22)
          return 0;
      }
      if (!(v25 + v7 + v14))
        break;
      ++v14;
      v12 += 2;
      if (__OFADD__(v14, v7))
        goto LABEL_38;
    }
    if (v7 != v24)
    {
      v12 = v26 + 2;
      v10 = __OFADD__(v7++, 1);
      result = v23;
      if (!v10)
        continue;
      __break(1u);
      return 0;
    }
    return v13;
  }
}

uint64_t type metadata accessor for GeoRerankingUtil()
{
  return objc_opt_self();
}

id sub_1D46CF6F8(void *a1, double a2)
{
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  __double2 v9;
  __double2 v10;
  __double2 v11;
  long double v12;
  long double v13;
  double v15;

  objc_msgSend(a1, sel_course);
  v5 = v4 * 3.14159265 / 180.0;
  objc_msgSend(a1, sel_coordinate);
  v7 = v6 * 3.14159265 / 180.0;
  objc_msgSend(a1, sel_coordinate);
  v15 = v8 * 3.14159265 / 180.0;
  v9 = __sincos_stret(v7);
  v10 = __sincos_stret(a2 / 6371000.0);
  v11 = __sincos_stret(v5);
  v12 = asin(v10.__cosval * v9.__sinval + v11.__cosval * (v10.__sinval * v9.__cosval));
  v13 = sin(v12);
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E3B8]), sel_initWithLatitude_longitude_, (double)(v12 * 180.0 / 3.14159265), (double)((atan2(v10.__sinval * v11.__sinval * v9.__cosval, v10.__cosval - v9.__sinval * v13) + v15)* 180.0/ 3.14159265));
}

uint64_t sub_1D46CF848(uint64_t *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  uint64_t result;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  int v46;
  double *v47;
  uint64_t v48;
  double *v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  id v55;
  id v56;
  double v57;
  long double v58;
  double v59;
  double v60;
  double v61;
  long double v62;
  double v63;
  double v64;
  long double v65;
  long double v66;
  double v67;
  long double v68;
  long double v69;
  long double v70;
  long double v71;
  unint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  unint64_t *v78;
  double *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  id v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA650);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v82 = (uint64_t)&v73 - v8;
  v9 = type metadata accessor for Com_Apple_Visualintelligence_LatLng(0);
  v81 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v79 = (double *)((char *)&v73 - v13);
  v80 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
  v75 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v89 = (uint64_t)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA658);
  v85 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v74 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA660);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (unint64_t *)((char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v21 = (uint64_t *)((char *)&v73 - v20);
  v22 = *a1;
  v23 = (_QWORD *)sub_1D48C3750(*(_QWORD *)(v22 + 16), 0.0);
  v84 = sub_1D46CF6F8(a2, 10.0);
  v24 = *(_QWORD *)(v22 + 16);
  v76 = v22;
  result = swift_bridgeObjectRetain();
  v26 = 0;
  v83 = v24;
  v78 = v19;
  v77 = v21;
  if (v24)
    goto LABEL_3;
LABEL_2:
  v27 = 1;
  v87 = v24;
  while (1)
  {
    v35 = v85;
    v36 = v88;
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v85 + 56))(v19, v27, 1, v88);
    sub_1D46D05A0((uint64_t)v19, (uint64_t)v21);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v35 + 48))(v21, 1, v36) == 1)
      goto LABEL_19;
    v37 = v12;
    v38 = (uint64_t)v7;
    v39 = *v21;
    v40 = v89;
    sub_1D469C630((uint64_t)v21 + *(int *)(v88 + 48), v89, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
    v41 = *(int *)(v80 + 20);
    v42 = *(_QWORD *)(v40 + v41)
        + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__location;
    swift_beginAccess();
    v43 = v42;
    v44 = v82;
    sub_1D46D05E8(v43, v82);
    v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v81 + 48);
    v46 = v45(v44, 1, v9);
    v86 = v39;
    if (v46 == 1)
    {
      v47 = v79;
      *v79 = 0.0;
      v47[1] = 0.0;
      sub_1D4922010();
      v48 = v44;
      v49 = v47;
      v24 = v83;
      sub_1D46D0630(v48);
    }
    else
    {
      v50 = v44;
      v49 = v79;
      sub_1D469C630(v50, (uint64_t)v79, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
    }
    v51 = *v49;
    sub_1D4697DE0((uint64_t)v49, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
    v52 = *(_QWORD *)(v89 + v41)
        + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__location;
    swift_beginAccess();
    v7 = (char *)v38;
    sub_1D46D05E8(v52, v38);
    if (v45(v38, 1, v9) == 1)
    {
      v12 = v37;
      *(_QWORD *)v37 = 0;
      *((_QWORD *)v37 + 1) = 0;
      sub_1D4922010();
      sub_1D46D0630((uint64_t)v7);
    }
    else
    {
      v53 = v38;
      v12 = v37;
      sub_1D469C630(v53, (uint64_t)v37, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
    }
    v19 = v78;
    v21 = v77;
    v54 = *((double *)v12 + 1);
    sub_1D4697DE0((uint64_t)v12, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
    v55 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E3B8]), sel_initWithLatitude_longitude_, v51, v54);
    v56 = v84;
    objc_msgSend(v84, sel_coordinate);
    v58 = v57 * 3.14159265 / 180.0;
    objc_msgSend(v56, sel_coordinate);
    v60 = v59 * 3.14159265 / 180.0;
    objc_msgSend(v55, sel_coordinate);
    v62 = v61 * 3.14159265 / 180.0;
    objc_msgSend(v55, sel_coordinate);
    v64 = v63 * 3.14159265 / 180.0 - v60;
    v65 = sin((v62 - v58) * 0.5);
    v66 = v65 * v65;
    v67 = cos(v58);
    v68 = v67 * cos(v62);
    v69 = sin(v64 * 0.5);
    v70 = atan2(sqrt(v66 + v69 * (v68 * v69)), sqrt(1.0 - (v66 + v69 * (v68 * v69))));
    v71 = exp(v70 * 12742000.0 * (v70 * 12742000.0) / -20000.0);
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) != 0)
    {
      v72 = v86;
      if ((v86 & 0x8000000000000000) != 0)
        goto LABEL_18;
    }
    else
    {
      result = (uint64_t)sub_1D47DFAD4(v23);
      v23 = (_QWORD *)result;
      v72 = v86;
      if ((v86 & 0x8000000000000000) != 0)
      {
LABEL_18:
        __break(1u);
LABEL_19:

        swift_bridgeObjectRelease();
        return (uint64_t)v23;
      }
    }
    if (v72 >= v23[2])
      break;
    *(long double *)&v23[v72 + 4] = v71;

    result = sub_1D4697DE0(v89, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
    v26 = v87;
    if (v87 == v24)
      goto LABEL_2;
LABEL_3:
    if (v26 >= *(_QWORD *)(v76 + 16))
      goto LABEL_21;
    v28 = v23;
    v29 = v26 + 1;
    v30 = v9;
    v31 = v26;
    v32 = v88;
    v33 = (uint64_t)&v74[*(int *)(v88 + 48)];
    sub_1D46D055C(v76+ ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))+ *(_QWORD *)(v75 + 72) * v26, v33);
    v34 = (uint64_t)v19 + *(int *)(v32 + 48);
    *v19 = v31;
    v9 = v30;
    sub_1D469C630(v33, v34, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
    v27 = 0;
    v87 = v29;
    v23 = v28;
    v24 = v83;
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1D46CFEC0(uint64_t *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t result;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t i;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, uint64_t);
  int v44;
  double *v45;
  uint64_t v46;
  double *v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double *v53;
  double *v54;
  void *v55;
  double v56;
  id v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  unint64_t v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  long double v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  _QWORD *v79;
  double *v80;
  void *v81;
  char *v82;
  double *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  _QWORD *v90;
  unint64_t v91;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA650);
  v5 = MEMORY[0x1E0C80A78](v4);
  v87 = (uint64_t)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v75 - v7;
  v9 = type metadata accessor for Com_Apple_Visualintelligence_LatLng(0);
  v85 = *(_QWORD *)(v9 - 8);
  v86 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (double *)((char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v83 = (double *)((char *)&v75 - v13);
  v84 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
  v77 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84);
  v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA658);
  v88 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v76 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA660);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (unint64_t *)((char *)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v19);
  v23 = (uint64_t *)((char *)&v75 - v22);
  v24 = *a1;
  v25 = sub_1D48C3750(*(_QWORD *)(v24 + 16), 0.0);
  objc_msgSend(a2, sel_course);
  if (v26 < 0.0)
    return v25;
  v82 = v8;
  v28 = *(_QWORD *)(v24 + 16);
  v75 = v24;
  result = swift_bridgeObjectRetain();
  v30 = v28;
  v31 = 0;
  v79 = v23;
  v27 = (_QWORD *)v25;
  v78 = v28;
  v81 = a2;
  v80 = v12;
  if (v28)
    goto LABEL_5;
LABEL_4:
  v32 = 1;
  for (i = v30; ; i = v31 + 1)
  {
    v36 = v88;
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v88 + 56))(v21, v32, 1, v16);
    sub_1D46D05A0((uint64_t)v21, (uint64_t)v23);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(v23, 1, v16) == 1)
      goto LABEL_23;
    v37 = *v23;
    v90 = v27;
    v91 = v37;
    sub_1D469C630((uint64_t)v23 + *(int *)(v16 + 48), (uint64_t)v15, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
    v38 = *(int *)(v84 + 20);
    v39 = *(_QWORD *)&v15[v38]
        + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__location;
    swift_beginAccess();
    v40 = v39;
    v41 = (uint64_t)v82;
    sub_1D46D05E8(v40, (uint64_t)v82);
    v42 = v86;
    v43 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
    v44 = v43(v41, 1, v86);
    v89 = i;
    if (v44 == 1)
    {
      v45 = v83;
      *v83 = 0.0;
      v45[1] = 0.0;
      sub_1D4922010();
      v46 = v41;
      v47 = v45;
      sub_1D46D0630(v46);
    }
    else
    {
      v48 = v41;
      v47 = v83;
      sub_1D469C630(v48, (uint64_t)v83, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
    }
    v49 = *v47;
    sub_1D4697DE0((uint64_t)v47, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
    v50 = *(_QWORD *)&v15[v38]
        + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__location;
    swift_beginAccess();
    v51 = v50;
    v52 = v87;
    sub_1D46D05E8(v51, v87);
    if (v43(v52, 1, v42) == 1)
    {
      v53 = v80;
      *v80 = 0.0;
      v53[1] = 0.0;
      v54 = v53;
      sub_1D4922010();
      sub_1D46D0630(v52);
    }
    else
    {
      v54 = v80;
      sub_1D469C630(v52, (uint64_t)v80, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
    }
    v55 = v81;
    v23 = v79;
    v27 = v90;
    v56 = v54[1];
    sub_1D4697DE0((uint64_t)v54, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
    v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E3B8]), sel_initWithLatitude_longitude_, v49, v56);
    objc_msgSend(v57, sel_coordinate);
    v59 = v58;
    objc_msgSend(v55, sel_coordinate);
    v61 = v59 - v60;
    objc_msgSend(v57, sel_coordinate);
    v63 = v62;
    objc_msgSend(v55, sel_coordinate);
    v65 = v63 - v64;
    v66 = sqrt(v61 * v61 + v65 * v65);
    if (v66 == 0.0)
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      v67 = 0.0;
      v31 = v89;
      if ((result & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      v69 = v65 / v66;
      v70 = v61 / v66;
      objc_msgSend(v55, sel_course);
      v72 = cos((90.0 - v71) * 3.14159265 / 180.0);
      objc_msgSend(v55, sel_course);
      v74 = sin((90.0 - v73) * 3.14159265 / 180.0);
      v67 = acos(v69 * v72 + v70 * v74) * 180.0 / 3.14159265;
      result = swift_isUniquelyReferenced_nonNull_native();
      v31 = v89;
      if ((result & 1) != 0)
      {
LABEL_16:
        v68 = v91;
        if ((v91 & 0x8000000000000000) != 0)
          goto LABEL_22;
        goto LABEL_17;
      }
    }
    result = (uint64_t)sub_1D47DFAD4(v27);
    v27 = (_QWORD *)result;
    v68 = v91;
    if ((v91 & 0x8000000000000000) != 0)
    {
LABEL_22:
      __break(1u);
LABEL_23:
      swift_bridgeObjectRelease();
      return (uint64_t)v27;
    }
LABEL_17:
    if (v68 >= v27[2])
      break;
    *(double *)&v27[v68 + 4] = v67 / -180.0 + 1.0;

    result = sub_1D4697DE0((uint64_t)v15, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
    v30 = v78;
    if (v31 == v78)
      goto LABEL_4;
LABEL_5:
    if (v31 >= *(_QWORD *)(v75 + 16))
      goto LABEL_26;
    v34 = (uint64_t)&v76[*(int *)(v16 + 48)];
    sub_1D46D055C(v75+ ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80))+ *(_QWORD *)(v77 + 72) * v31, v34);
    v35 = (uint64_t)v21 + *(int *)(v16 + 48);
    *v21 = v31;
    sub_1D469C630(v34, v35, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
    v32 = 0;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1D46D055C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D46D05A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D46D05E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA650);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D46D0630(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA650);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D46D0670@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD v31[5];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD v35[2];
  uint64_t v36;
  uint64_t v37;

  v6 = sub_1D4922370();
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v31 - v10;
  v12 = sub_1D492204C();
  MEMORY[0x1E0C80A78](v12);
  v34 = type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig();
  MEMORY[0x1E0C80A78](v34);
  v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v16 = (void *)sub_1D49225F8();
  v17 = objc_msgSend(v15, sel_contentsAtPath_, v16);

  if (v17)
  {
    v31[3] = v9;
    v31[4] = a1;
    v18 = sub_1D4920F6C();
    v20 = v19;

    sub_1D484D52C(v18, v20);
    v26 = v25;
    v27 = v18;
    v29 = v28;
    sub_1D4696F10(v27, v20);

    v36 = 0;
    memset(v35, 0, sizeof(v35));
    sub_1D46A5708(v26, v29);
    sub_1D4922040();
    sub_1D46D1C58();
    sub_1D49221C0();
    sub_1D4696F10(v26, v29);
    return sub_1D46D1CA0((uint64_t)v14, a3);
  }
  else
  {

    sub_1D470C76C((uint64_t)v11);
    swift_bridgeObjectRetain_n();
    v21 = sub_1D4922358();
    v22 = sub_1D492291C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      *(_QWORD *)&v35[0] = v24;
      *(_DWORD *)v23 = 136315138;
      swift_bridgeObjectRetain();
      v37 = sub_1D47F0250(a1, a2, (uint64_t *)v35);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D467C000, v21, v22, "Failed to load data at path %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v24, -1, -1);
      MEMORY[0x1D82635B8](v23, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v33);
    *(_QWORD *)a3 = MEMORY[0x1E0DEE9D8];
    *(_DWORD *)(a3 + 8) = 0;
    return sub_1D4922010();
  }
}

uint64_t sub_1D46D0C2C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  char v8;

  v4 = *(void **)(a2 + 16);
  v5 = (void *)sub_1D49225F8();
  v6 = objc_msgSend(v4, sel_nodeForName_, v5);

  if (!v6)
    return 0;
  v7 = *a3;
  swift_bridgeObjectRetain();
  v8 = sub_1D487C9D0((uint64_t)objc_msgSend(v6, sel_sceneClassId), v7);
  swift_bridgeObjectRelease();

  return v8 & 1;
}

uint64_t sub_1D46D0CD8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1D46D74E4(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1D46D0D40(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1D46D0D40(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  float v15;
  float v16;
  float *v17;
  float v18;
  float v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  float v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  char v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t i;
  float v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  char *v111;
  uint64_t v112;
  unint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  float *__dst;

  v3 = a1[1];
  result = sub_1D4922E08();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v98 = *a1;
      v99 = *a1 + 56;
      v100 = -1;
      for (i = 1; i != v3; ++i)
      {
        v102 = *(float *)(v98 + 56 * i + 16);
        v103 = v100;
        v104 = v99;
        do
        {
          if (*(float *)(v104 - 40) >= v102)
            break;
          if (!v98)
            goto LABEL_141;
          v105 = *(_QWORD *)v104;
          v106 = *(_QWORD *)(v104 + 8);
          v107 = *(_OWORD *)(v104 + 24);
          v108 = *(_OWORD *)(v104 + 40);
          v109 = *(_OWORD *)(v104 - 40);
          *(_OWORD *)v104 = *(_OWORD *)(v104 - 56);
          *(_OWORD *)(v104 + 16) = v109;
          *(_OWORD *)(v104 + 32) = *(_OWORD *)(v104 - 24);
          *(_QWORD *)(v104 + 48) = *(_QWORD *)(v104 - 8);
          *(_QWORD *)(v104 - 48) = v106;
          *(float *)(v104 - 40) = v102;
          *(_OWORD *)(v104 - 32) = v107;
          *(_OWORD *)(v104 - 16) = v108;
          *(_QWORD *)(v104 - 56) = v105;
          v104 -= 56;
        }
        while (!__CFADD__(v103++, 1));
        v99 += 56;
        --v100;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v120 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (float *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v111 = v12;
      v122 = v9;
      if (v13 >= 2)
      {
        v112 = *v120;
        do
        {
          v113 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v112)
            goto LABEL_145;
          v114 = v111;
          v115 = *(_QWORD *)&v111[16 * v113 + 32];
          v116 = *(_QWORD *)&v111[16 * v13 + 24];
          sub_1D46D14A0((float *)(v112 + 56 * v115), (float *)(v112 + 56 * *(_QWORD *)&v111[16 * v13 + 16]), v112 + 56 * v116, __dst);
          if (v1)
            break;
          if (v116 < v115)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v114 = sub_1D46D5B88((uint64_t)v114);
          if (v113 >= *((_QWORD *)v114 + 2))
            goto LABEL_134;
          v117 = &v114[16 * v113 + 32];
          *(_QWORD *)v117 = v115;
          *((_QWORD *)v117 + 1) = v116;
          v118 = *((_QWORD *)v114 + 2);
          if (v13 > v118)
            goto LABEL_135;
          memmove(&v114[16 * v13 + 16], &v114[16 * v13 + 32], 16 * (v118 - v13));
          v111 = v114;
          *((_QWORD *)v114 + 2) = v118 - 1;
          v13 = v118 - 1;
        }
        while (v118 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v122 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v122 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_1D4922850();
    *(_QWORD *)(v8 + 16) = v7;
    v122 = v8;
    __dst = (float *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v121 = *a1 + 128;
  v119 = *a1 + 40;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v123 = v6;
  v124 = v3;
  v125 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(float *)(v11 + 56 * v10 + 16);
      v16 = *(float *)(v11 + 56 * v14 + 16);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (float *)(v121 + 56 * v14);
        v18 = v15;
        while (1)
        {
          v19 = v18;
          v18 = *v17;
          if (v16 < v15 == v19 >= *v17)
            break;
          ++v10;
          v17 += 14;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v20 = 56 * v10;
          v21 = v10;
          v22 = v14;
          v23 = 56 * v14;
          do
          {
            if (v22 != --v21)
            {
              if (!v11)
                goto LABEL_144;
              v24 = v11 + v23;
              v25 = v11 + v20;
              v26 = *(_QWORD *)(v11 + v23);
              v27 = *(_QWORD *)(v11 + v23 + 8);
              v28 = *(_DWORD *)(v11 + v23 + 16);
              v29 = *(_OWORD *)(v11 + v23 + 24);
              v30 = *(_OWORD *)(v11 + v23 + 40);
              v31 = *(_OWORD *)(v11 + v20 - 40);
              v32 = *(_OWORD *)(v11 + v20 - 24);
              v33 = *(_OWORD *)(v11 + v20 - 56);
              *(_QWORD *)(v24 + 48) = *(_QWORD *)(v11 + v20 - 8);
              *(_OWORD *)(v24 + 16) = v31;
              *(_OWORD *)(v24 + 32) = v32;
              *(_OWORD *)v24 = v33;
              *(_QWORD *)(v25 - 56) = v26;
              *(_QWORD *)(v25 - 48) = v27;
              *(_DWORD *)(v25 - 40) = v28;
              *(_OWORD *)(v25 - 32) = v29;
              *(_OWORD *)(v25 - 16) = v30;
            }
            ++v22;
            v20 -= 56;
            v23 += 56;
          }
          while (v22 < v21);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v34 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v34 >= v3)
      v34 = v3;
    if (v34 < v14)
      break;
    if (v10 != v34)
    {
      v35 = v119 + 56 * v10;
      do
      {
        v36 = *(float *)(v11 + 56 * v10 + 16);
        v37 = v14;
        v38 = v35;
        do
        {
          if (*(float *)(v38 - 80) >= v36)
            break;
          if (!v11)
            goto LABEL_142;
          v39 = v38 - 40;
          v40 = (_OWORD *)(v38 - 96);
          v41 = *(_QWORD *)(v38 - 48);
          v43 = *(_OWORD *)(v38 - 80);
          v42 = *(_OWORD *)(v38 - 64);
          *(_OWORD *)(v38 - 56) = *(_OWORD *)v38;
          v38 -= 56;
          v44 = *(_QWORD *)(v38 + 16);
          v45 = *(_QWORD *)(v38 + 24);
          v46 = *(_OWORD *)(v38 + 40);
          *(_OWORD *)v39 = *v40;
          *(_OWORD *)(v39 + 16) = v43;
          *(_OWORD *)(v39 + 32) = v42;
          *(_QWORD *)(v39 + 48) = v41;
          *(_QWORD *)(v38 - 40) = v44;
          *(_QWORD *)(v38 - 32) = v45;
          *(float *)(v38 - 24) = v36;
          *(_OWORD *)(v38 - 16) = v46;
          ++v37;
        }
        while (v10 != v37);
        ++v10;
        v35 += 56;
      }
      while (v10 != v34);
      v10 = v34;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1D46D5278(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v48 = *((_QWORD *)v12 + 2);
    v47 = *((_QWORD *)v12 + 3);
    v13 = v48 + 1;
    v11 = v125;
    if (v48 >= v47 >> 1)
    {
      v97 = sub_1D46D5278((char *)(v47 > 1), v48 + 1, 1, v12);
      v11 = v125;
      v12 = v97;
    }
    *((_QWORD *)v12 + 2) = v13;
    v49 = v12 + 32;
    v50 = &v12[16 * v48 + 32];
    *(_QWORD *)v50 = v14;
    *((_QWORD *)v50 + 1) = v10;
    if (v48)
    {
      while (1)
      {
        v51 = v13 - 1;
        if (v13 >= 4)
        {
          v56 = &v49[16 * v13];
          v57 = *((_QWORD *)v56 - 8);
          v58 = *((_QWORD *)v56 - 7);
          v62 = __OFSUB__(v58, v57);
          v59 = v58 - v57;
          if (v62)
            goto LABEL_120;
          v61 = *((_QWORD *)v56 - 6);
          v60 = *((_QWORD *)v56 - 5);
          v62 = __OFSUB__(v60, v61);
          v54 = v60 - v61;
          v55 = v62;
          if (v62)
            goto LABEL_121;
          v63 = v13 - 2;
          v64 = &v49[16 * v13 - 32];
          v66 = *(_QWORD *)v64;
          v65 = *((_QWORD *)v64 + 1);
          v62 = __OFSUB__(v65, v66);
          v67 = v65 - v66;
          if (v62)
            goto LABEL_123;
          v62 = __OFADD__(v54, v67);
          v68 = v54 + v67;
          if (v62)
            goto LABEL_126;
          if (v68 >= v59)
          {
            v86 = &v49[16 * v51];
            v88 = *(_QWORD *)v86;
            v87 = *((_QWORD *)v86 + 1);
            v62 = __OFSUB__(v87, v88);
            v89 = v87 - v88;
            if (v62)
              goto LABEL_130;
            v79 = v54 < v89;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v80 = *((_QWORD *)v12 + 4);
            v81 = *((_QWORD *)v12 + 5);
            v62 = __OFSUB__(v81, v80);
            v73 = v81 - v80;
            v74 = v62;
            goto LABEL_77;
          }
          v53 = *((_QWORD *)v12 + 4);
          v52 = *((_QWORD *)v12 + 5);
          v62 = __OFSUB__(v52, v53);
          v54 = v52 - v53;
          v55 = v62;
        }
        if ((v55 & 1) != 0)
          goto LABEL_122;
        v63 = v13 - 2;
        v69 = &v49[16 * v13 - 32];
        v71 = *(_QWORD *)v69;
        v70 = *((_QWORD *)v69 + 1);
        v72 = __OFSUB__(v70, v71);
        v73 = v70 - v71;
        v74 = v72;
        if (v72)
          goto LABEL_125;
        v75 = &v49[16 * v51];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v62 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v62)
          goto LABEL_128;
        if (__OFADD__(v73, v78))
          goto LABEL_129;
        if (v73 + v78 >= v54)
        {
          v79 = v54 < v78;
LABEL_83:
          if (v79)
            v51 = v63;
          goto LABEL_85;
        }
LABEL_77:
        if ((v74 & 1) != 0)
          goto LABEL_124;
        v82 = &v49[16 * v51];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v62 = __OFSUB__(v83, v84);
        v85 = v83 - v84;
        if (v62)
          goto LABEL_127;
        if (v85 < v73)
          goto LABEL_15;
LABEL_85:
        v90 = v51 - 1;
        if (v51 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v91 = v12;
        v92 = &v49[16 * v90];
        v93 = *(_QWORD *)v92;
        v94 = &v49[16 * v51];
        v95 = *((_QWORD *)v94 + 1);
        sub_1D46D14A0((float *)(v11 + 56 * *(_QWORD *)v92), (float *)(v11 + 56 * *(_QWORD *)v94), v11 + 56 * v95, __dst);
        if (v1)
          goto LABEL_93;
        if (v95 < v93)
          goto LABEL_117;
        if (v51 > *((_QWORD *)v91 + 2))
          goto LABEL_118;
        *(_QWORD *)v92 = v93;
        *(_QWORD *)&v49[16 * v90 + 8] = v95;
        v96 = *((_QWORD *)v91 + 2);
        if (v51 >= v96)
          goto LABEL_119;
        v12 = v91;
        v13 = v96 - 1;
        memmove(&v49[16 * v51], v94 + 16, 16 * (v96 - 1 - v51));
        *((_QWORD *)v91 + 2) = v96 - 1;
        v11 = v125;
        if (v96 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v123;
    v3 = v124;
    if (v10 >= v124)
    {
      v9 = v122;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_1D4922C28();
  __break(1u);
  return result;
}

uint64_t sub_1D46D14A0(float *__src, float *a2, unint64_t a3, float *__dst)
{
  float *v4;
  float *v6;
  float *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  float *v12;
  float *v13;
  float *v14;
  float *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  float *v19;
  unint64_t v20;
  float *v21;
  float *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t result;
  char *v30;
  float *v31;
  float *v32;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = ((char *)a2 - (char *)__src) / 56;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 56;
  v32 = __src;
  v31 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -55)
    {
      if (__dst != a2 || &a2[14 * v11] <= __dst)
        memmove(__dst, a2, 56 * v11);
      v19 = &v4[14 * v11];
      v30 = (char *)v19;
      v32 = v6;
      if (v7 < v6 && v10 >= 56)
      {
        v20 = a3 - 56;
        do
        {
          v21 = (float *)(v20 + 56);
          if (*(v6 - 10) >= *(v19 - 10))
          {
            v30 = (char *)(v19 - 14);
            if (v21 < v19 || v20 >= (unint64_t)v19 || v21 != v19)
            {
              v26 = *(_OWORD *)(v19 - 14);
              v27 = *(_OWORD *)(v19 - 10);
              v28 = *(_OWORD *)(v19 - 6);
              *(_QWORD *)(v20 + 48) = *((_QWORD *)v19 - 1);
              *(_OWORD *)(v20 + 16) = v27;
              *(_OWORD *)(v20 + 32) = v28;
              *(_OWORD *)v20 = v26;
            }
            v22 = v6;
            v19 -= 14;
            if (v6 <= v7)
              break;
          }
          else
          {
            v22 = v6 - 14;
            if (v21 != v6 || v20 >= (unint64_t)v6)
            {
              v23 = *(_OWORD *)v22;
              v24 = *(_OWORD *)(v6 - 10);
              v25 = *(_OWORD *)(v6 - 6);
              *(_QWORD *)(v20 + 48) = *((_QWORD *)v6 - 1);
              *(_OWORD *)(v20 + 16) = v24;
              *(_OWORD *)(v20 + 32) = v25;
              *(_OWORD *)v20 = v23;
            }
            v32 = v6 - 14;
            if (v22 <= v7)
              break;
          }
          v20 -= 56;
          v6 = v22;
        }
        while (v19 > v4);
      }
LABEL_40:
      sub_1D46D5894((void **)&v32, (const void **)&v31, &v30);
      return 1;
    }
  }
  else if (v8 >= -55)
  {
    if (__dst != __src || &__src[14 * v9] <= __dst)
      memmove(__dst, __src, 56 * v9);
    v12 = &v4[14 * v9];
    v30 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 56)
    {
      v13 = v4;
      while (1)
      {
        if (v13[4] >= v6[4])
        {
          v4 = v13 + 14;
          v15 = v13;
          v14 = v6;
          if (v7 == v13)
          {
            v13 += 14;
            if (v7 < v4)
              goto LABEL_18;
          }
          else
          {
            v13 += 14;
          }
        }
        else
        {
          v14 = v6 + 14;
          v15 = v6;
          if (v7 == v6 && v7 < v14)
            goto LABEL_18;
        }
        v16 = *(_OWORD *)v15;
        v17 = *((_OWORD *)v15 + 1);
        v18 = *((_OWORD *)v15 + 2);
        *((_QWORD *)v7 + 6) = *((_QWORD *)v15 + 6);
        *((_OWORD *)v7 + 1) = v17;
        *((_OWORD *)v7 + 2) = v18;
        *(_OWORD *)v7 = v16;
LABEL_18:
        v7 += 14;
        if (v13 < v12)
        {
          v6 = v14;
          if ((unint64_t)v14 < a3)
            continue;
        }
        v31 = v4;
        v32 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  result = sub_1D4922C88();
  __break(1u);
  return result;
}

uint64_t sub_1D46D1778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint8_t *v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint8_t *v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v50[2];
  char *v51;
  uint64_t v52;
  uint64_t v53;

  v8 = type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D4922370();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v51 = (char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v50 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)v50 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)v50 - v21;
  if (!a1)
    return 0;
  v52 = a3;
  v23 = *(_QWORD *)(*(_QWORD *)a3 + 16);
  swift_bridgeObjectRetain();
  v50[1] = a2;
  if (v23)
  {
    sub_1D470C76C((uint64_t)v22);
    sub_1D470C928((uint64_t)v20);
    v24 = *(void (**)(char *, uint64_t))(v12 + 8);
    v24(v22, v11);
    v25 = sub_1D4922358();
    v26 = sub_1D4922910();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v50[0] = a4;
      v28 = v27;
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_1D467C000, v25, v26, "Filter scenenet labels", v27, 2u);
      v29 = v28;
      a4 = v50[0];
      MEMORY[0x1D82635B8](v29, -1, -1);
    }

    v30 = ((uint64_t (*)(char *, uint64_t))v24)(v20, v11);
    MEMORY[0x1E0C80A78](v30);
    v31 = v52;
    v50[-2] = a4;
    v50[-1] = v31;
    a1 = sub_1D46FB41C((uint64_t)sub_1D46D1BBC, (uint64_t)&v50[-4], a1);
  }
  v53 = a1;
  swift_bridgeObjectRetain();
  sub_1D46D0CD8(&v53);
  swift_bridgeObjectRelease();
  v33 = v52;
  v32 = v53;
  if (*(int *)(v52 + 8) > 0)
  {
    sub_1D470C76C((uint64_t)v17);
    sub_1D470C928((uint64_t)v51);
    v34 = *(void (**)(char *, uint64_t))(v12 + 8);
    v34(v17, v11);
    sub_1D46D1BD8(v33, (uint64_t)v10);
    v35 = sub_1D4922358();
    v36 = sub_1D4922910();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v37 = 134217984;
      v38 = *((int *)v10 + 2);
      sub_1D46D1C1C((uint64_t)v10);
      v53 = v38;
      sub_1D4922A78();
      _os_log_impl(&dword_1D467C000, v35, v36, "Limit scenenet labels to %ld", v37, 0xCu);
      v39 = v37;
      v33 = v52;
      MEMORY[0x1D82635B8](v39, -1, -1);
    }
    else
    {
      sub_1D46D1C1C((uint64_t)v10);
    }

    v34(v51, v11);
    v40 = sub_1D47D161C(*(int *)(v33 + 8), v32);
    v42 = v41;
    v44 = v43;
    v46 = v45;
    if ((v45 & 1) == 0)
      goto LABEL_12;
    sub_1D4922E5C();
    swift_unknownObjectRetain_n();
    v47 = swift_dynamicCastClass();
    if (!v47)
    {
      swift_unknownObjectRelease();
      v47 = MEMORY[0x1E0DEE9D8];
    }
    v48 = *(_QWORD *)(v47 + 16);
    swift_release();
    if (__OFSUB__(v46 >> 1, v44))
    {
      __break(1u);
    }
    else if (v48 == (v46 >> 1) - v44)
    {
      v32 = swift_dynamicCastClass();
      swift_unknownObjectRelease();
      if (!v32)
      {
        v32 = MEMORY[0x1E0DEE9D8];
        goto LABEL_19;
      }
      return v32;
    }
    swift_unknownObjectRelease();
LABEL_12:
    v32 = sub_1D4851FFC(v40, v42, v44, v46);
LABEL_19:
    swift_unknownObjectRelease();
  }
  return v32;
}

uint64_t sub_1D46D1BBC(uint64_t a1)
{
  uint64_t v1;

  return sub_1D46D0C2C(a1, *(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24)) & 1;
}

uint64_t sub_1D46D1BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D46D1C1C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D46D1C58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFEAA668;
  if (!qword_1EFEAA668)
  {
    v1 = type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig();
    result = MEMORY[0x1D82634E0](&unk_1D4932268, v1);
    atomic_store(result, (unint64_t *)&qword_1EFEAA668);
  }
  return result;
}

uint64_t sub_1D46D1CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void destroy for TextLookupQuery(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 80))
    __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  if (*(_QWORD *)(a1 + 96) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

}

uint64_t initializeWithCopy for TextLookupQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v7;
    *(_QWORD *)(a1 + 88) = v8;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 56, a2 + 56, v7);
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v9;
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  }
  v10 = *(_QWORD *)(a2 + 96);
  if (v10 == 1)
  {
    v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
    v12 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v12;
  }
  else
  {
    v13 = *(_QWORD *)(a2 + 104);
    v14 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 96) = v10;
    *(_QWORD *)(a1 + 104) = v13;
    v15 = *(_QWORD *)(a2 + 120);
    v16 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 112) = v14;
    *(_QWORD *)(a1 + 120) = v15;
    v18 = *(_QWORD *)(a2 + 136);
    v17 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 128) = v16;
    *(_QWORD *)(a1 + 136) = v18;
    v19 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = v17;
    *(_QWORD *)(a1 + 152) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v20 = *(void **)(a2 + 160);
  *(_QWORD *)(a1 + 160) = v20;
  v21 = v20;
  return a1;
}

uint64_t assignWithCopy for TextLookupQuery(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  _OWORD *v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  void *v21;
  void *v22;
  id v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D46D21F0(a1 + 16);
      v7 = *(_QWORD *)(a2 + 32);
      *v4 = *v5;
      *(_QWORD *)(a1 + 32) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *v4 = v8;
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80))
  {
    if (v9)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
      goto LABEL_15;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  }
  else if (v9)
  {
    *(_QWORD *)(a1 + 80) = v9;
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 56, a2 + 56);
    goto LABEL_15;
  }
  v10 = *(_OWORD *)(a2 + 56);
  v11 = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 56) = v10;
  *(_OWORD *)(a1 + 72) = v11;
LABEL_15:
  v12 = (_OWORD *)(a1 + 96);
  v14 = (__int128 *)(a2 + 96);
  v13 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96) == 1)
  {
    if (v13 == 1)
    {
      v15 = *v14;
      v16 = *(_OWORD *)(a2 + 112);
      v17 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v17;
      *v12 = v15;
      *(_OWORD *)(a1 + 112) = v16;
    }
    else
    {
      *(_QWORD *)(a1 + 96) = v13;
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v13 == 1)
  {
    sub_1D46D2220(a1 + 96);
    v18 = *(_OWORD *)(a2 + 144);
    v20 = *v14;
    v19 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v18;
    *v12 = v20;
    *(_OWORD *)(a1 + 112) = v19;
  }
  else
  {
    *(_QWORD *)(a1 + 96) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v21 = *(void **)(a1 + 160);
  v22 = *(void **)(a2 + 160);
  *(_QWORD *)(a1 + 160) = v22;
  v23 = v22;

  return a1;
}

uint64_t sub_1D46D21F0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D46D2220(uint64_t a1)
{
  destroy for VisualUnderstanding.Annotation();
  return a1;
}

__n128 __swift_memcpy168_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for TextLookupQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  _QWORD *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  void *v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24))
  {
    v5 = *(_QWORD *)(a2 + 24);
    if (v5)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D46D21F0(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
LABEL_6:
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 80))
    __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  v7 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v8 = (_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96) != 1)
  {
    if (*v8 != 1)
    {
      *(_QWORD *)(a1 + 96) = *v8;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    sub_1D46D2220(a1 + 96);
  }
  v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)v8;
  *(_OWORD *)(a1 + 112) = v9;
  v10 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v10;
LABEL_13:
  v12 = *(void **)(a1 + 160);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);

  return a1;
}

uint64_t getEnumTagSinglePayload for TextLookupQuery(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 168))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextLookupQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 168) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TextLookupQuery()
{
  return &type metadata for TextLookupQuery;
}

uint64_t destroy for ClassificationInfo()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s18VisualIntelligence18ClassificationInfoVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ClassificationInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ClassificationInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClassificationInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClassificationInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TextContext()
{
  return &type metadata for TextContext;
}

uint64_t sub_1D46D2684@<X0>(uint64_t *a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  _QWORD v53[8];
  _OWORD v54[2];
  uint64_t v55;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_textContext);
  v52 = v1;
  if (!v4)
  {
    v50 = 0;
    v51 = 0;
    v14 = 0;
    goto LABEL_16;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, sel_surroundingText);
  v7 = sub_1D492261C();
  v50 = v8;

  v9 = objc_msgSend(v5, sel_normalizedBoundingBoxes);
  sub_1D46D2A64();
  v10 = sub_1D4922820();

  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1D4922C4C();
    swift_bridgeObjectRelease();
    v51 = v7;
    if (v11)
      goto LABEL_4;
LABEL_15:

    swift_bridgeObjectRelease();
    v14 = MEMORY[0x1E0DEE9D8];
    goto LABEL_16;
  }
  v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  v51 = v7;
  if (!v11)
    goto LABEL_15;
LABEL_4:
  v53[0] = MEMORY[0x1E0DEE9D8];
  result = sub_1D48AC178(0, v11 & ~(v11 >> 63), 0);
  if (v11 < 0)
  {
    __break(1u);
    return result;
  }
  v13 = 0;
  v14 = v53[0];
  do
  {
    if ((v10 & 0xC000000000000001) != 0)
      v15 = (id)MEMORY[0x1D8261F20](v13, v10);
    else
      v15 = *(id *)(v10 + 8 * v13 + 32);
    v16 = v15;
    objc_msgSend(v15, sel_rectValue);
    v18 = v17;
    v20 = v19;
    v22 = v21;
    v24 = v23;

    v53[0] = v14;
    v26 = *(_QWORD *)(v14 + 16);
    v25 = *(_QWORD *)(v14 + 24);
    if (v26 >= v25 >> 1)
    {
      sub_1D48AC178(v25 > 1, v26 + 1, 1);
      v14 = v53[0];
    }
    ++v13;
    *(_QWORD *)(v14 + 16) = v26 + 1;
    v27 = (_QWORD *)(v14 + 32 * v26);
    v27[4] = v18;
    v27[5] = v20;
    v27[6] = v22;
    v27[7] = v24;
  }
  while (v11 != v13);

  swift_bridgeObjectRelease();
  v2 = v52;
LABEL_16:
  v28 = objc_msgSend(v2, sel_queryTerm);
  v29 = sub_1D492261C();
  v48 = v30;
  v49 = v29;

  v31 = objc_msgSend(v2, sel_hintDomain);
  if (v31)
  {
    v32 = v31;
    v46 = sub_1D492261C();
    v47 = v33;

  }
  else
  {
    v46 = 0;
    v47 = 0;
  }
  if (objc_msgSend(v2, sel_imageContext))
  {
    swift_getObjectType();
    sub_1D47BEC7C((uint64_t *)v54);
    swift_unknownObjectRelease();
  }
  else
  {
    v55 = 0;
    memset(v54, 0, sizeof(v54));
  }
  v34 = objc_msgSend(v2, sel_annotation);
  if (v34)
  {
    v35 = v34;
    sub_1D47BECD0(v53);

    v36 = v53[0];
    v37 = v53[2];
    v38 = v53[3];
    v39 = v53[4];
    v40 = v53[5];
    v42 = v53[6];
    v41 = v53[7];
    v43 = objc_msgSend(v52, sel_queryContext, v53[1]);
  }
  else
  {
    v37 = 0;
    v38 = 0;
    v39 = 0;
    v40 = 0;
    v42 = 0;
    v41 = 0;
    v36 = 1;
    v43 = objc_msgSend(v52, sel_queryContext, 0);
  }
  v44 = v43;
  *a1 = v49;
  a1[1] = v48;
  a1[2] = v51;
  a1[3] = v50;
  a1[4] = v14;
  a1[5] = v46;
  a1[6] = v47;
  result = sub_1D46D2A1C((uint64_t)v54, (uint64_t)(a1 + 7));
  a1[12] = v36;
  a1[13] = v45;
  a1[14] = v37;
  a1[15] = v38;
  a1[16] = v39;
  a1[17] = v40;
  a1[18] = v42;
  a1[19] = v41;
  a1[20] = (uint64_t)v44;
  return result;
}

uint64_t sub_1D46D2A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D46D2A64()
{
  unint64_t result;

  result = qword_1EFEAA670;
  if (!qword_1EFEAA670)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFEAA670);
  }
  return result;
}

uint64_t type metadata accessor for SignSymbolClassificationPostProcessor()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ApparelClassificationPostProcessor()
{
  return objc_opt_self();
}

uint64_t sub_1D46D2AE0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA680);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D46D9460();
  sub_1D4922F58();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D100);
  sub_1D46D9524();
  sub_1D4922DCC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1D46D2BE4()
{
  return 1;
}

uint64_t sub_1D46D2BEC()
{
  sub_1D4922EF8();
  sub_1D4922F04();
  return sub_1D4922F34();
}

uint64_t sub_1D46D2C2C()
{
  return sub_1D4922F04();
}

uint64_t sub_1D46D2C50()
{
  sub_1D4922EF8();
  sub_1D4922F04();
  return sub_1D4922F34();
}

uint64_t sub_1D46D2C8C()
{
  return 0x6769666E6F63;
}

uint64_t sub_1D46D2CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6769666E6F63 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D4922E38();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_1D46D2D2C(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1D46D2D38()
{
  sub_1D46D9460();
  return sub_1D4922F64();
}

uint64_t sub_1D46D2D60()
{
  sub_1D46D9460();
  return sub_1D4922F70();
}

_QWORD *sub_1D46D2D88@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1D46D76FC(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1D46D2DB0(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1D46D2AE0(a1, *v1);
}

uint64_t sub_1D46D2DC8(uint64_t a1)
{
  uint64_t result;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  int v6;
  int v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  if (!a1)
    return 1819042094;
  if (a1 == 1)
    return 0x64656C626169642ELL;
  v21 = 0x28656D6F732ELL;
  v22 = 0xE600000000000000;
  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1D48AB4A4(0, v2, 0);
    v4 = a1;
    v3 = v20;
    v5 = sub_1D46D755C(a1);
    v7 = v6;
    v9 = v8 & 1;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(v4 + 32))
    {
      if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
        goto LABEL_17;
      if (*(_DWORD *)(v4 + 36) != v7)
        goto LABEL_18;
      v10 = sub_1D46F8BC8(*(_BYTE *)(*(_QWORD *)(v4 + 48) + v5));
      v12 = v11;
      v20 = v3;
      v14 = *(_QWORD *)(v3 + 16);
      v13 = *(_QWORD *)(v3 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1D48AB4A4(v13 > 1, v14 + 1, 1);
        v4 = a1;
        v3 = v20;
      }
      *(_QWORD *)(v3 + 16) = v14 + 1;
      v15 = v3 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v10;
      *(_QWORD *)(v15 + 40) = v12;
      v16 = sub_1D46D75FC(v5, v7, v9 & 1, v4);
      v5 = v16;
      v7 = v17;
      v9 = v18 & 1;
      if (!--v2)
      {
        sub_1D46D76E0(v16, v17, v18 & 1);
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  else
  {
LABEL_15:
    v20 = v3;
    swift_bridgeObjectRetain();
    sub_1D46D3C50(&v20);
    swift_bridgeObjectRelease();
    MEMORY[0x1D8261B9C](v20, MEMORY[0x1E0DEA968]);
    sub_1D492270C();
    swift_release();
    swift_bridgeObjectRelease();
    return v21;
  }
  return result;
}

uint64_t sub_1D46D2FE0(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = *a2;
  if (!v2)
    return v3 == 0;
  if (v2 == 1)
    return v3 == 1;
  if (v3 >= 2)
    return sub_1D46D3CB8(v2, v3);
  return 0;
}

uint64_t sub_1D46D3020()
{
  uint64_t *v0;

  return sub_1D46D2DC8(*v0);
}

unint64_t sub_1D46D3028(char a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  void (*v35)(char *, uint64_t);
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint8_t *v39;
  unint64_t result;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  _BOOL4 v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  int v62;
  uint8_t *v63;
  int64_t v64;
  uint64_t v65;
  int64_t v66;
  int v67;
  int v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  int64_t v77;
  uint64_t v78;
  char v79;
  uint8_t *v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  os_log_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint8_t *v97;
  os_log_t v98;
  unint64_t v99;
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t Strong;
  uint64_t v106;
  uint64_t (*v107)(uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;

  v106 = a4;
  v107 = a3;
  v5 = sub_1D4922370();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v94 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v102 = (char *)&v94 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v101 = (uint64_t)&v94 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v103 = (char *)&v94 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v108 = (uint64_t)&v94 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v94 - v22;
  v24 = MEMORY[0x1E0C80A78](v21);
  v26 = (char *)&v94 - v25;
  v27 = MEMORY[0x1E0C80A78](v24);
  v29 = (char *)&v94 - v28;
  MEMORY[0x1E0C80A78](v27);
  v31 = (char *)&v94 - v30;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_1D470C76C((uint64_t)v31);
    sub_1D470C928((uint64_t)v29);
    v35 = *(void (**)(char *, uint64_t))(v6 + 8);
    v35(v31, v5);
    v36 = sub_1D4922358();
    v37 = sub_1D4922910();
    v38 = v5;
    if (os_log_type_enabled(v36, v37))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_1D467C000, v36, v37, "checkAvailableDomains(): checkEnableStatus: no self", v39, 2u);
      MEMORY[0x1D82635B8](v39, -1, -1);
    }

    v35(v29, v38);
    return v107(1);
  }
  v104 = v5;
  if ((a1 & 1) == 0)
  {
    sub_1D470C76C((uint64_t)v12);
    sub_1D470C928((uint64_t)v9);
    v41 = *(void (**)(char *, uint64_t))(v6 + 8);
    v42 = v104;
    v41(v12, v104);
    v43 = sub_1D4922358();
    v44 = sub_1D4922910();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v45 = 0;
      _os_log_impl(&dword_1D467C000, v43, v44, "checkAvailableDomains(): .disabled", v45, 2u);
      MEMORY[0x1D82635B8](v45, -1, -1);
    }

    v41(v9, v42);
    v107(1);
    return swift_release();
  }
  v32 = Strong;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(Strong + 40), *(_QWORD *)(Strong + 64));
  v33 = sub_1D477E2C4();
  v34 = *(_QWORD *)(v32 + 16);
  if (v34)
  {
    if (v34 == 1)
    {
      v99 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1D46D9440(v34);
      v46 = sub_1D46D5B9C(v34, v33);
      sub_1D46D76EC(v34);
      v99 = v46;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    v99 = v33;
  }
  sub_1D470C76C((uint64_t)v26);
  sub_1D470C928((uint64_t)v23);
  v47 = v26;
  v48 = *(void (**)(char *, uint64_t))(v6 + 8);
  v49 = v104;
  v48(v47, v104);
  swift_retain_n();
  v50 = sub_1D4922358();
  v51 = sub_1D4922910();
  v52 = os_log_type_enabled(v50, v51);
  v100 = v48;
  if (v52)
  {
    v53 = (uint8_t *)swift_slowAlloc();
    v54 = swift_slowAlloc();
    v110 = v54;
    *(_DWORD *)v53 = 136315138;
    v55 = sub_1D46D2DC8(*(_QWORD *)(v32 + 16));
    v109 = sub_1D47F0250(v55, v56, &v110);
    sub_1D4922A78();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D467C000, v50, v51, "checkAvailableDomains(): availableDomains: %s", v53, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v54, -1, -1);
    v57 = v53;
    v48 = v100;
    v49 = v104;
    MEMORY[0x1D82635B8](v57, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v48(v23, v49);
  v58 = (uint64_t)v102;
  v59 = v108;
  sub_1D470C76C(v108);
  v60 = (uint64_t)v103;
  sub_1D470C928((uint64_t)v103);
  v48((char *)v59, v49);
  swift_bridgeObjectRetain();
  v61 = sub_1D4922358();
  v62 = sub_1D4922910();
  if (!os_log_type_enabled(v61, (os_log_type_t)v62))
  {

    swift_bridgeObjectRelease_n();
    v48((char *)v60, v49);
LABEL_30:
    v86 = v101;
    sub_1D470C76C(v101);
    sub_1D470C928(v58);
    v48((char *)v86, v49);
    v87 = v99;
    sub_1D46D9440(v99);
    sub_1D46D9440(v87);
    v88 = sub_1D4922358();
    v89 = sub_1D4922910();
    if (os_log_type_enabled(v88, v89))
    {
      v90 = (uint8_t *)swift_slowAlloc();
      v91 = swift_slowAlloc();
      v110 = v91;
      *(_DWORD *)v90 = 136315138;
      v92 = sub_1D46D2DC8(v87);
      v109 = sub_1D47F0250(v92, v93, &v110);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      sub_1D46D76EC(v87);
      sub_1D46D76EC(v87);
      _os_log_impl(&dword_1D467C000, v88, v89, "checkAvailableDomains(): action(domains): %s", v90, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v91, -1, -1);
      MEMORY[0x1D82635B8](v90, -1, -1);

      v100((char *)v58, v49);
    }
    else
    {
      sub_1D46D76EC(v87);
      sub_1D46D76EC(v87);

      v48((char *)v58, v49);
    }
    v107(v87);
    swift_release();
    return sub_1D46D76EC(v87);
  }
  v96 = v62;
  v98 = v61;
  v63 = (uint8_t *)swift_slowAlloc();
  v95 = swift_slowAlloc();
  v110 = v95;
  v97 = v63;
  *(_DWORD *)v63 = 136315138;
  v64 = *(_QWORD *)(v33 + 16);
  v65 = MEMORY[0x1E0DEE9D8];
  if (!v64)
  {
LABEL_29:
    v109 = v65;
    swift_bridgeObjectRetain();
    sub_1D46D3C50(&v109);
    swift_bridgeObjectRelease();
    v80 = v97;
    v81 = MEMORY[0x1D8261B9C](v109, MEMORY[0x1E0DEA968]);
    v83 = v82;
    swift_release();
    v109 = sub_1D47F0250(v81, v83, &v110);
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v84 = v98;
    _os_log_impl(&dword_1D467C000, v98, (os_log_type_t)v96, "checkAvailableDomains(): fetchedDomains: %s", v80, 0xCu);
    v85 = v95;
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v85, -1, -1);
    MEMORY[0x1D82635B8](v80, -1, -1);

    v48(v103, v49);
    goto LABEL_30;
  }
  v109 = MEMORY[0x1E0DEE9D8];
  sub_1D48AB4A4(0, v64, 0);
  v65 = v109;
  v66 = sub_1D46D755C(v33);
  v68 = v67;
  v70 = v69 & 1;
  v108 = v33 + 56;
  while ((v66 & 0x8000000000000000) == 0 && v66 < 1 << *(_BYTE *)(v33 + 32))
  {
    if (((*(_QWORD *)(v108 + (((unint64_t)v66 >> 3) & 0xFFFFFFFFFFFFF8)) >> v66) & 1) == 0)
      goto LABEL_35;
    if (*(_DWORD *)(v33 + 36) != v68)
      goto LABEL_36;
    v71 = sub_1D46F8BC8(*(_BYTE *)(*(_QWORD *)(v33 + 48) + v66));
    v73 = v72;
    v109 = v65;
    v75 = *(_QWORD *)(v65 + 16);
    v74 = *(_QWORD *)(v65 + 24);
    if (v75 >= v74 >> 1)
    {
      sub_1D48AB4A4(v74 > 1, v75 + 1, 1);
      v65 = v109;
    }
    *(_QWORD *)(v65 + 16) = v75 + 1;
    v76 = v65 + 16 * v75;
    *(_QWORD *)(v76 + 32) = v71;
    *(_QWORD *)(v76 + 40) = v73;
    v77 = sub_1D46D75FC(v66, v68, v70 & 1, v33);
    v66 = v77;
    v68 = v78;
    v70 = v79 & 1;
    if (!--v64)
    {
      sub_1D46D76E0(v77, v78, v79 & 1);
      v49 = v104;
      v58 = (uint64_t)v102;
      v48 = v100;
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  swift_bridgeObjectRelease();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1D46D39BC()
{
  uint64_t v0;

  sub_1D46D76EC(*(_QWORD *)(v0 + 16));
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AvailableDomainManager()
{
  return objc_opt_self();
}

uint64_t *initializeBufferWithCopyOfBuffer for AvailableDomains(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v3 = swift_bridgeObjectRetain();
  *a1 = v3;
  return a1;
}

unint64_t destroy for AvailableDomains(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t *assignWithCopy for AvailableDomains(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF)
      swift_bridgeObjectRetain();
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

unint64_t *assignWithTake for AvailableDomains(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AvailableDomains(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AvailableDomains(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_1D46D3C08(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1D46D3C20(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for AvailableDomains()
{
  return &type metadata for AvailableDomains;
}

uint64_t sub_1D46D3C50(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1D46D7494(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1D46D482C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1D46D3CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  unint64_t v11;
  int64_t v13;

  if (a1 != a2)
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      return 0;
    v3 = *(_QWORD *)(a1 + 56);
    v4 = 1 << *(_BYTE *)(a1 + 32);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v13 = (unint64_t)(v4 + 63) >> 6;
    if ((v5 & v3) != 0)
    {
      v6 = __clz(__rbit64(v5 & v3));
      goto LABEL_23;
    }
    if ((unint64_t)(v4 + 63) >> 6 > 1)
    {
      v7 = *(_QWORD *)(a1 + 64);
      v8 = 1;
      if (v7)
        goto LABEL_22;
      v8 = 2;
      if (v13 <= 2)
        return 1;
      v7 = *(_QWORD *)(a1 + 72);
      if (v7)
        goto LABEL_22;
      v8 = 3;
      if (v13 <= 3)
        return 1;
      v7 = *(_QWORD *)(a1 + 80);
      if (v7)
        goto LABEL_22;
      v8 = 4;
      if (v13 <= 4)
        return 1;
      v7 = *(_QWORD *)(a1 + 88);
      if (v7)
      {
LABEL_22:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_23:
        v10 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v6);
        sub_1D4922EF8();
        sub_1D46F8BC8(v10);
        sub_1D49226D0();
        swift_bridgeObjectRelease();
        v11 = sub_1D4922F34() & ~(-1 << *(_BYTE *)(a2 + 32));
        if (((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
          __asm { BR              X9 }
        return 0;
      }
      v9 = 5;
      if (v13 > 5)
      {
        v7 = *(_QWORD *)(a1 + 96);
        if (v7)
        {
          v8 = 5;
          goto LABEL_22;
        }
        while (1)
        {
          v8 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            JUMPOUT(0x1D46D44BCLL);
          }
          if (v8 >= v13)
            break;
          v7 = *(_QWORD *)(a1 + 56 + 8 * v8);
          ++v9;
          if (v7)
            goto LABEL_22;
        }
      }
    }
  }
  return 1;
}

uint64_t sub_1D46D458C(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t i;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v29 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v30 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v31 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v30)
        return 1;
      v11 = *(_QWORD *)(v29 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v30)
          return 1;
        v11 = *(_QWORD *)(v29 + 8 * v12);
        if (!v11)
        {
          v12 = v3 + 4;
          if (v3 + 4 >= v30)
            return 1;
          v11 = *(_QWORD *)(v29 + 8 * v12);
          if (!v11)
            break;
        }
      }
    }
LABEL_25:
    v6 = (v11 - 1) & v11;
    v31 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    v14 = result;
    v15 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v9);
    v17 = *v15;
    v16 = v15[1];
    sub_1D4922EF8();
    swift_bridgeObjectRetain();
    sub_1D49226D0();
    v18 = sub_1D4922F34();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_41;
    v21 = *(_QWORD *)(a2 + 48);
    v22 = (_QWORD *)(v21 + 16 * v20);
    v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_1D4922E38() & 1) == 0)
    {
      v24 = ~v19;
      for (i = v20 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v21 + 16 * v26);
        v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_1D4922E38() & 1) != 0)
          goto LABEL_7;
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    result = v14;
    v3 = v31;
  }
  v13 = v3 + 5;
  if (v3 + 5 >= v30)
    return 1;
  v11 = *(_QWORD *)(v29 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_25;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1D46D482C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_1D4922E08();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_1D46D4F14(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_1D46D4FE0((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_1D46D5B88((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1D4922850();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_1D4922E38();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_1D4922E38()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1D46D5278(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_1D46D5278((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_1D46D4FE0((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1D4922E38() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_1D4922C28();
  __break(1u);
  return result;
}

uint64_t sub_1D46D4F14(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_1D4922E38(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1D46D4FE0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_1D4922E38() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_1D4922E38() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_1D46D55E8((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_1D4922C88();
  __break(1u);
  return result;
}

char *sub_1D46D5278(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA678);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1D46D5370(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = type metadata accessor for VisualUnderstanding.ImageRegion();
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_1D4922C88();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_1D46D547C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  size_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -80)
  {
    result = (char *)sub_1D4922C88();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = 80 * (v4 / 80);
    if (result != v3 || result >= &v3[v6])
      return (char *)memmove(result, v3, v6);
  }
  return result;
}

char *sub_1D46D5534(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  size_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -160)
  {
    result = (char *)sub_1D4922C88();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = 160 * (v4 / 160);
    if (result != v3 || result >= &v3[v6])
      return (char *)memmove(result, v3, v6);
  }
  return result;
}

char *sub_1D46D55E8(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_1D4922C88();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_1D46D5690(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  size_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -24)
  {
    result = (char *)sub_1D4922C88();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = 24 * (v4 / 24);
    if (result != v3 || result >= &v3[v6])
      return (char *)memmove(result, v3, v6);
  }
  return result;
}

char *sub_1D46D5748(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  size_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_1D4922C88();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = (v4 + (v4 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0;
    if (result != v3 || result >= &v3[v6])
      return (char *)memmove(result, v3, v6);
  }
  return result;
}

char *sub_1D46D57EC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_1D4922C88();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_1D46D5894(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -56)
  {
    result = (char *)sub_1D4922C88();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 56;
    if (result != v3 || result >= &v3[56 * v6])
      return (char *)memmove(result, v3, 56 * v6);
  }
  return result;
}

char *sub_1D46D5954(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -24)
  {
    result = (char *)sub_1D4922C88();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
      return (char *)memmove(result, v3, 24 * v6);
  }
  return result;
}

char *sub_1D46D5A10(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -48)
  {
    result = (char *)sub_1D4922C88();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 48;
    if (result != v3 || result >= &v3[48 * v6])
      return (char *)memmove(result, v3, 48 * v6);
  }
  return result;
}

char *sub_1D46D5ACC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -96)
  {
    result = (char *)sub_1D4922C88();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 96;
    if (result != v3 || result >= &v3[96 * v6])
      return (char *)memmove(result, v3, 96 * v6);
  }
  return result;
}

char *sub_1D46D5B88(uint64_t a1)
{
  return sub_1D46D5278(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D46D5B9C(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_1D46D5D1C((_QWORD *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, a2, v3);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_1D46D5D1C((unint64_t *)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x1D82635B8](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1D46D5D1C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v23;
  int64_t v25;

  if (*(_QWORD *)(a4 + 16) >= *(_QWORD *)(a3 + 16))
  {
    v13 = *(_QWORD *)(a3 + 56);
    v14 = 1 << *(_BYTE *)(a3 + 32);
    v15 = -1;
    if (v14 < 64)
      v15 = ~(-1 << v14);
    v23 = (unint64_t)(v14 + 63) >> 6;
    if ((v15 & v13) != 0)
    {
      v16 = __clz(__rbit64(v15 & v13));
    }
    else
    {
      if ((unint64_t)(v14 + 63) >> 6 <= 1)
        goto LABEL_38;
      v17 = *(_QWORD *)(a3 + 64);
      v18 = 1;
      if (!v17)
      {
        v18 = 2;
        if ((unint64_t)(v14 + 63) >> 6 <= 2)
          goto LABEL_38;
        v17 = *(_QWORD *)(a3 + 72);
        if (!v17)
        {
          v18 = 3;
          if ((unint64_t)(v14 + 63) >> 6 <= 3)
            goto LABEL_38;
          v17 = *(_QWORD *)(a3 + 80);
          if (!v17)
          {
            v19 = 4;
            if (v23 <= 4)
              goto LABEL_38;
            v17 = *(_QWORD *)(a3 + 88);
            if (!v17)
            {
              while (1)
              {
                v18 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_40;
                if (v18 >= v23)
                  goto LABEL_38;
                v17 = *(_QWORD *)(a3 + 56 + 8 * v18);
                ++v19;
                if (v17)
                  goto LABEL_36;
              }
            }
            v18 = 4;
          }
        }
      }
LABEL_36:
      v16 = __clz(__rbit64(v17)) + (v18 << 6);
    }
    v20 = *(unsigned __int8 *)(*(_QWORD *)(a3 + 48) + v16);
    sub_1D4922EF8();
    __asm { BR              X8 }
  }
  v5 = *(_QWORD *)(a4 + 56);
  v6 = 1 << *(_BYTE *)(a4 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v25 = (unint64_t)(v6 + 63) >> 6;
  if ((v7 & v5) != 0)
  {
    v8 = __clz(__rbit64(v7 & v5));
    goto LABEL_19;
  }
  if ((unint64_t)(v6 + 63) >> 6 > 1)
  {
    v9 = *(_QWORD *)(a4 + 64);
    v10 = 1;
    if (v9)
      goto LABEL_18;
    v10 = 2;
    if ((unint64_t)(v6 + 63) >> 6 <= 2)
      goto LABEL_38;
    v9 = *(_QWORD *)(a4 + 72);
    if (v9)
      goto LABEL_18;
    v10 = 3;
    if ((unint64_t)(v6 + 63) >> 6 <= 3)
      goto LABEL_38;
    v9 = *(_QWORD *)(a4 + 80);
    if (v9)
    {
LABEL_18:
      v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_19:
      v12 = *(unsigned __int8 *)(*(_QWORD *)(a4 + 48) + v8);
      sub_1D4922EF8();
      __asm { BR              X8 }
    }
    v11 = 4;
    if (v25 > 4)
    {
      v9 = *(_QWORD *)(a4 + 88);
      if (v9)
      {
        v10 = 4;
        goto LABEL_18;
      }
      while (1)
      {
        v10 = v11 + 1;
        if (__OFADD__(v11, 1))
          break;
        if (v10 >= v25)
          goto LABEL_38;
        v9 = *(_QWORD *)(a4 + 56 + 8 * v10);
        ++v11;
        if (v9)
          goto LABEL_18;
      }
      __break(1u);
LABEL_40:
      __break(1u);
      JUMPOUT(0x1D46D71D4);
    }
  }
LABEL_38:
  swift_retain();
  return sub_1D4882534(a1, a2, 0, a3);
}

uint64_t sub_1D46D7444(_QWORD *a1)
{
  return sub_1D48AEB90(0, a1[2], 0, a1);
}

uint64_t sub_1D46D7458(uint64_t a1)
{
  return sub_1D48AEA1C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_1D46D746C()
{
  JUMPOUT(0x1D826216CLL);
}

uint64_t sub_1D46D7480(uint64_t a1)
{
  return sub_1D48AED20(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D46D7494(uint64_t a1)
{
  return sub_1D48AE8B4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D46D74A8(_QWORD *a1)
{
  return sub_1D48AF038(0, a1[2], 0, a1);
}

uint64_t sub_1D46D74BC(uint64_t a1)
{
  return sub_1D48AF490(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D46D74D0(uint64_t a1)
{
  return sub_1D48AF5E8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D46D74E4(uint64_t a1)
{
  return sub_1D48AF744(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D46D74F8(uint64_t a1)
{
  return sub_1D48AF32C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D46D750C(uint64_t a1)
{
  return sub_1D48AED0C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D46D7520(uint64_t a1)
{
  return sub_1D48AFA40(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D46D7534(uint64_t a1)
{
  return sub_1D48AFBB8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D46D7548(uint64_t a1)
{
  return sub_1D48B0018(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D46D755C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_1D46D75FC(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1D46D76E0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1D46D76EC(unint64_t result)
{
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

_QWORD *sub_1D46D76FC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D318);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D46D9460();
  sub_1D4922F4C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D100);
    sub_1D46D94A4();
    sub_1D4922D30();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = (_QWORD *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_1D46D7828(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t Strong;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint8_t *v44;
  unint64_t result;
  void (*v46)(char *, uint64_t);
  char *v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  _BOOL4 v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  void (*v60)(_QWORD, _QWORD);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  int v68;
  uint8_t *v69;
  int64_t v70;
  uint64_t v71;
  int64_t v72;
  int v73;
  int v74;
  char v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  int64_t v83;
  uint64_t v84;
  char v85;
  uint8_t *v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  os_log_t v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  unint64_t v94;
  os_log_type_t v95;
  uint8_t *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  int v101;
  uint8_t *v102;
  os_log_t v103;
  void (*v104)(_QWORD, _QWORD);
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  void (*v111)(uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(_QWORD, _QWORD);

  v114 = a3;
  v115 = a7;
  v111 = a6;
  v112 = a5;
  v113 = a4;
  v8 = sub_1D4922370();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v110 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v107 = (uint64_t)&v100 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v109 = (uint64_t)&v100 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v116 = (uint64_t)&v100 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v100 - v19;
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v100 - v22;
  v24 = MEMORY[0x1E0C80A78](v21);
  v26 = (char *)&v100 - v25;
  v27 = MEMORY[0x1E0C80A78](v24);
  v29 = (char *)&v100 - v28;
  v30 = MEMORY[0x1E0C80A78](v27);
  v32 = (char *)&v100 - v31;
  MEMORY[0x1E0C80A78](v30);
  v34 = (char *)&v100 - v33;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_1D470C76C((uint64_t)v34);
    sub_1D470C928((uint64_t)v32);
    v40 = *(void (**)(char *, uint64_t))(v9 + 8);
    v40(v34, v8);
    v41 = sub_1D4922358();
    v42 = sub_1D4922910();
    v43 = v8;
    if (os_log_type_enabled(v41, v42))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v44 = 0;
      _os_log_impl(&dword_1D467C000, v41, v42, "checkAvailableDomains(): checkEnableStatus: no self", v44, 2u);
      MEMORY[0x1D82635B8](v44, -1, -1);
    }

    v40(v32, v43);
    return sub_1D47D51BC(1uLL, v114, v113, v112, v111, v115);
  }
  v36 = Strong;
  v108 = v8;
  if ((a1 & 1) == 0)
  {
    sub_1D470C76C((uint64_t)v29);
    sub_1D470C928((uint64_t)v26);
    v46 = *(void (**)(char *, uint64_t))(v9 + 8);
    v47 = v29;
    v48 = v108;
    v46(v47, v108);
    v49 = sub_1D4922358();
    v50 = sub_1D4922910();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_1D467C000, v49, v50, "checkAvailableDomains(): .disabled", v51, 2u);
      MEMORY[0x1D82635B8](v51, -1, -1);
    }

    v46(v26, v48);
    sub_1D47D51BC(1uLL, v114, v113, v112, v111, v115);
    return swift_release();
  }
  __swift_project_boxed_opaque_existential_1((_QWORD *)(Strong + 40), *(_QWORD *)(Strong + 64));
  v37 = sub_1D477E2C4();
  v38 = *(_QWORD *)(v36 + 16);
  if (v38)
  {
    if (v38 != 1)
    {
      swift_bridgeObjectRetain();
      sub_1D46D9440(v38);
      v39 = sub_1D46D5B9C(v38, v37);
      sub_1D46D76EC(v38);
      v38 = v39;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    v38 = v37;
  }
  sub_1D470C76C((uint64_t)v23);
  sub_1D470C928((uint64_t)v20);
  v52 = *(void (**)(char *, uint64_t))(v9 + 8);
  v53 = v108;
  v52(v23, v108);
  swift_retain_n();
  v54 = sub_1D4922358();
  v55 = sub_1D4922910();
  v56 = os_log_type_enabled(v54, v55);
  v105 = v38;
  v106 = v36;
  if (v56)
  {
    v57 = swift_slowAlloc();
    v104 = (void (*)(_QWORD, _QWORD))swift_slowAlloc();
    v118 = v104;
    *(_DWORD *)v57 = 136315138;
    v103 = (os_log_t)(v57 + 4);
    v58 = sub_1D46D2DC8(*(_QWORD *)(v36 + 16));
    v117 = sub_1D47F0250(v58, v59, (uint64_t *)&v118);
    sub_1D4922A78();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D467C000, v54, v55, "checkAvailableDomains(): availableDomains: %s", (uint8_t *)v57, 0xCu);
    v60 = v104;
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v60, -1, -1);
    v61 = v57;
    v38 = v105;
    MEMORY[0x1D82635B8](v61, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v52(v20, v53);
  v62 = v53;
  v63 = (uint64_t)v110;
  v64 = (void (*)(uint64_t, uint64_t))v52;
  v65 = v116;
  sub_1D470C76C(v116);
  v66 = v109;
  sub_1D470C928(v109);
  v52((char *)v65, v62);
  swift_bridgeObjectRetain();
  v67 = sub_1D4922358();
  v68 = sub_1D4922910();
  if (!os_log_type_enabled(v67, (os_log_type_t)v68))
  {

    swift_bridgeObjectRelease_n();
    v52((char *)v66, v62);
LABEL_29:
    v92 = v107;
    sub_1D470C76C(v107);
    sub_1D470C928(v63);
    v64(v92, v62);
    sub_1D46D9440(v38);
    sub_1D46D9440(v38);
    v93 = sub_1D4922358();
    v94 = v38;
    v95 = sub_1D4922910();
    if (os_log_type_enabled(v93, v95))
    {
      v96 = (uint8_t *)swift_slowAlloc();
      v97 = swift_slowAlloc();
      v118 = (void (*)(_QWORD, _QWORD))v97;
      *(_DWORD *)v96 = 136315138;
      v98 = sub_1D46D2DC8(v94);
      v104 = v64;
      v117 = sub_1D47F0250(v98, v99, (uint64_t *)&v118);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      sub_1D46D76EC(v94);
      sub_1D46D76EC(v94);
      _os_log_impl(&dword_1D467C000, v93, v95, "checkAvailableDomains(): action(domains): %s", v96, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v97, -1, -1);
      MEMORY[0x1D82635B8](v96, -1, -1);

      v104(v63, v62);
    }
    else
    {
      sub_1D46D76EC(v94);
      sub_1D46D76EC(v94);

      v64(v63, v62);
    }
    sub_1D47D51BC(v94, v114, v113, v112, v111, v115);
    swift_release();
    return sub_1D46D76EC(v94);
  }
  v101 = v68;
  v103 = v67;
  v69 = (uint8_t *)swift_slowAlloc();
  v100 = swift_slowAlloc();
  v118 = (void (*)(_QWORD, _QWORD))v100;
  v102 = v69;
  *(_DWORD *)v69 = 136315138;
  v70 = *(_QWORD *)(v37 + 16);
  v71 = MEMORY[0x1E0DEE9D8];
  if (!v70)
  {
LABEL_28:
    v117 = v71;
    swift_bridgeObjectRetain();
    sub_1D46D3C50(&v117);
    swift_bridgeObjectRelease();
    v86 = v102;
    v87 = MEMORY[0x1D8261B9C](v117, MEMORY[0x1E0DEA968]);
    v89 = v88;
    swift_release();
    v117 = sub_1D47F0250(v87, v89, (uint64_t *)&v118);
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v90 = v103;
    _os_log_impl(&dword_1D467C000, v103, (os_log_type_t)v101, "checkAvailableDomains(): fetchedDomains: %s", v86, 0xCu);
    v91 = v100;
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v91, -1, -1);
    MEMORY[0x1D82635B8](v86, -1, -1);

    v64(v66, v62);
    v38 = v105;
    goto LABEL_29;
  }
  v104 = (void (*)(_QWORD, _QWORD))v52;
  v117 = MEMORY[0x1E0DEE9D8];
  sub_1D48AB4A4(0, v70, 0);
  v71 = v117;
  v72 = sub_1D46D755C(v37);
  v74 = v73;
  v76 = v75 & 1;
  v116 = v37 + 56;
  while ((v72 & 0x8000000000000000) == 0 && v72 < 1 << *(_BYTE *)(v37 + 32))
  {
    if (((*(_QWORD *)(v116 + (((unint64_t)v72 >> 3) & 0xFFFFFFFFFFFFF8)) >> v72) & 1) == 0)
      goto LABEL_34;
    if (*(_DWORD *)(v37 + 36) != v74)
      goto LABEL_35;
    v77 = sub_1D46F8BC8(*(_BYTE *)(*(_QWORD *)(v37 + 48) + v72));
    v79 = v78;
    v117 = v71;
    v81 = *(_QWORD *)(v71 + 16);
    v80 = *(_QWORD *)(v71 + 24);
    if (v81 >= v80 >> 1)
    {
      sub_1D48AB4A4(v80 > 1, v81 + 1, 1);
      v71 = v117;
    }
    *(_QWORD *)(v71 + 16) = v81 + 1;
    v82 = v71 + 16 * v81;
    *(_QWORD *)(v82 + 32) = v77;
    *(_QWORD *)(v82 + 40) = v79;
    v83 = sub_1D46D75FC(v72, v74, v76 & 1, v37);
    v72 = v83;
    v74 = v84;
    v76 = v85 & 1;
    if (!--v70)
    {
      sub_1D46D76E0(v83, v84, v85 & 1);
      v62 = v108;
      v66 = v109;
      v63 = (uint64_t)v110;
      v64 = v104;
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1D46D8214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), _QWORD *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  void *v24;
  void *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t);
  uint64_t v45;

  v44 = a5;
  v11 = sub_1D4922370();
  v42 = *(_QWORD *)(v11 - 8);
  v43 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v41 = (uint64_t)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v40 - v14;
  v16 = sub_1D49224A8();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (uint64_t *)((char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = *(void **)(a1 + 32);
  *v19 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E0DEF740], v16);
  swift_retain();
  v45 = a3;
  swift_bridgeObjectRetain();
  v21 = a4;
  v22 = a6;
  swift_retain();
  swift_retain();
  v23 = v20;
  LOBYTE(v20) = sub_1D49224C0();
  (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_8;
  }
  v24 = (void *)objc_opt_self();
  v25 = (void *)sub_1D49225F8();
  LODWORD(v24) = objc_msgSend(v24, sel_BOOLForEntitlement_, v25);

  if ((_DWORD)v24)
  {
    sub_1D470C76C((uint64_t)v15);
    v26 = sub_1D4922358();
    v27 = sub_1D4922910();
    v17 = v21;
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1D467C000, v26, v27, "Process has bypass entitlement, all domains allowed", v28, 2u);
      MEMORY[0x1D82635B8](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v43);
    goto LABEL_16;
  }
  v17 = v21;
  if ((sub_1D473117C() & 1) == 0)
  {
    if (qword_1ED98F3A8 != -1)
      swift_once();
    v29 = (uint64_t *)&off_1ED98F3F0;
    goto LABEL_12;
  }
  if (qword_1EFEA9C20 != -1)
    goto LABEL_20;
LABEL_8:
  v29 = &qword_1EFEAA908;
LABEL_12:
  v30 = *(void **)(*v29 + 32);
  swift_retain();
  v31 = (void *)sub_1D49225F8();
  LODWORD(v30) = objc_msgSend(v30, sel_BOOLForKey_, v31);
  swift_release();

  if (!(_DWORD)v30)
  {
    v36 = *(_QWORD *)(a1 + 24);
    v37 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    v38 = v45;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1D47E5FA0(v36, v37, a2, v38, v17, v44, v22);
    swift_release();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release();
    goto LABEL_18;
  }
  v32 = v41;
  sub_1D470C76C(v41);
  v33 = sub_1D4922358();
  v34 = sub_1D4922910();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v35 = 0;
    _os_log_impl(&dword_1D467C000, v33, v34, "Availability checking is disabled", v35, 2u);
    MEMORY[0x1D82635B8](v35, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v32, v43);
LABEL_16:
  sub_1D47D51BC(0, a2, v45, v17, v44, (uint64_t)v22);
  swift_bridgeObjectRelease();
LABEL_18:
  swift_release();
  swift_release();
  return swift_release();
}

unint64_t sub_1D46D8688(char a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void (*v36)(char *, uint64_t);
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint8_t *v40;
  unint64_t result;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  int v61;
  _BOOL4 v62;
  unint64_t v63;
  uint8_t *v64;
  int64_t v65;
  uint64_t v66;
  int64_t v67;
  int v68;
  int v69;
  char v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  int64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint8_t *v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  os_log_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  int v98;
  uint8_t *v99;
  os_log_t v100;
  void (*v101)(uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t Strong;
  void (*v108)(_QWORD);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;

  v109 = a3;
  v110 = a5;
  v108 = a4;
  v6 = sub_1D4922370();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v103 = (uint64_t)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v104 = (uint64_t)&v97 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v105 = (uint64_t)&v97 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v111 = (uint64_t)&v97 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v97 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v97 - v20;
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v97 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v27 = (char *)&v97 - v26;
  v28 = MEMORY[0x1E0C80A78](v25);
  v30 = (char *)&v97 - v29;
  MEMORY[0x1E0C80A78](v28);
  v32 = (char *)&v97 - v31;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_1D470C76C((uint64_t)v32);
    sub_1D470C928((uint64_t)v30);
    v36 = *(void (**)(char *, uint64_t))(v7 + 8);
    v36(v32, v6);
    v37 = sub_1D4922358();
    v38 = sub_1D4922910();
    v39 = v6;
    if (os_log_type_enabled(v37, v38))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v40 = 0;
      _os_log_impl(&dword_1D467C000, v37, v38, "checkAvailableDomains(): checkEnableStatus: no self", v40, 2u);
      MEMORY[0x1D82635B8](v40, -1, -1);
    }

    v36(v30, v39);
    return sub_1D4858E64(1uLL, v109, v108, v110);
  }
  v106 = v6;
  if ((a1 & 1) == 0)
  {
    sub_1D470C76C((uint64_t)v27);
    sub_1D470C928((uint64_t)v24);
    v42 = *(void (**)(char *, uint64_t))(v7 + 8);
    v43 = v106;
    v42(v27, v106);
    v44 = sub_1D4922358();
    v45 = sub_1D4922910();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v46 = 0;
      _os_log_impl(&dword_1D467C000, v44, v45, "checkAvailableDomains(): .disabled", v46, 2u);
      MEMORY[0x1D82635B8](v46, -1, -1);
    }

    v42(v24, v43);
    sub_1D4858E64(1uLL, v109, v108, v110);
    return swift_release();
  }
  v33 = Strong;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(Strong + 40), *(_QWORD *)(Strong + 64));
  v34 = sub_1D477E2C4();
  v35 = *(_QWORD *)(v33 + 16);
  if (v35)
  {
    if (v35 == 1)
    {
      v102 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1D46D9440(v35);
      v47 = sub_1D46D5B9C(v35, v34);
      sub_1D46D76EC(v35);
      v102 = v47;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    v102 = v34;
  }
  sub_1D470C76C((uint64_t)v21);
  sub_1D470C928((uint64_t)v18);
  v48 = *(void (**)(char *, uint64_t))(v7 + 8);
  v49 = v21;
  v50 = v106;
  v48(v49, v106);
  swift_retain_n();
  v51 = sub_1D4922358();
  v52 = sub_1D4922910();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = swift_slowAlloc();
    v54 = swift_slowAlloc();
    v113 = v54;
    *(_DWORD *)v53 = 136315138;
    v100 = (os_log_t)(v53 + 4);
    v55 = sub_1D46D2DC8(*(_QWORD *)(v33 + 16));
    v112 = sub_1D47F0250(v55, v56, &v113);
    sub_1D4922A78();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D467C000, v51, v52, "checkAvailableDomains(): availableDomains: %s", (uint8_t *)v53, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v54, -1, -1);
    v57 = v53;
    v50 = v106;
    MEMORY[0x1D82635B8](v57, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v48(v18, v50);
  v58 = v111;
  sub_1D470C76C(v111);
  v59 = v105;
  sub_1D470C928(v105);
  v48((char *)v58, v50);
  swift_bridgeObjectRetain();
  v60 = sub_1D4922358();
  v61 = sub_1D4922910();
  v62 = os_log_type_enabled(v60, (os_log_type_t)v61);
  v63 = v102;
  v101 = (void (*)(uint64_t, uint64_t))v48;
  if (!v62)
  {

    swift_bridgeObjectRelease_n();
    v81 = v59;
    v82 = v50;
LABEL_30:
    v48((char *)v81, v82);
    v89 = v104;
    sub_1D470C76C(v104);
    v90 = v103;
    sub_1D470C928(v103);
    v48((char *)v89, v50);
    sub_1D46D9440(v63);
    sub_1D46D9440(v63);
    v91 = sub_1D4922358();
    v92 = sub_1D4922910();
    if (os_log_type_enabled(v91, v92))
    {
      v93 = (uint8_t *)swift_slowAlloc();
      v94 = swift_slowAlloc();
      v113 = v94;
      *(_DWORD *)v93 = 136315138;
      v95 = sub_1D46D2DC8(v63);
      v112 = sub_1D47F0250(v95, v96, &v113);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      sub_1D46D76EC(v63);
      sub_1D46D76EC(v63);
      _os_log_impl(&dword_1D467C000, v91, v92, "checkAvailableDomains(): action(domains): %s", v93, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v94, -1, -1);
      MEMORY[0x1D82635B8](v93, -1, -1);

      v101(v90, v50);
    }
    else
    {
      sub_1D46D76EC(v63);
      sub_1D46D76EC(v63);

      v48((char *)v90, v50);
    }
    sub_1D4858E64(v63, v109, v108, v110);
    swift_release();
    return sub_1D46D76EC(v63);
  }
  v98 = v61;
  v100 = v60;
  v64 = (uint8_t *)swift_slowAlloc();
  v97 = swift_slowAlloc();
  v113 = v97;
  v99 = v64;
  *(_DWORD *)v64 = 136315138;
  v65 = *(_QWORD *)(v34 + 16);
  v66 = MEMORY[0x1E0DEE9D8];
  if (!v65)
  {
LABEL_29:
    v112 = v66;
    swift_bridgeObjectRetain();
    sub_1D46D3C50(&v112);
    swift_bridgeObjectRelease();
    v83 = v99;
    v84 = MEMORY[0x1D8261B9C](v112, MEMORY[0x1E0DEA968]);
    v86 = v85;
    swift_release();
    v112 = sub_1D47F0250(v84, v86, &v113);
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v87 = v100;
    _os_log_impl(&dword_1D467C000, v100, (os_log_type_t)v98, "checkAvailableDomains(): fetchedDomains: %s", v83, 0xCu);
    v88 = v97;
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v88, -1, -1);
    MEMORY[0x1D82635B8](v83, -1, -1);

    v81 = v105;
    v82 = v50;
    v48 = (void (*)(char *, uint64_t))v101;
    goto LABEL_30;
  }
  v112 = MEMORY[0x1E0DEE9D8];
  sub_1D48AB4A4(0, v65, 0);
  v66 = v112;
  v67 = sub_1D46D755C(v34);
  v69 = v68;
  v71 = v70 & 1;
  v111 = v34 + 56;
  while ((v67 & 0x8000000000000000) == 0 && v67 < 1 << *(_BYTE *)(v34 + 32))
  {
    if (((*(_QWORD *)(v111 + (((unint64_t)v67 >> 3) & 0xFFFFFFFFFFFFF8)) >> v67) & 1) == 0)
      goto LABEL_35;
    if (*(_DWORD *)(v34 + 36) != v69)
      goto LABEL_36;
    v72 = sub_1D46F8BC8(*(_BYTE *)(*(_QWORD *)(v34 + 48) + v67));
    v74 = v73;
    v112 = v66;
    v76 = *(_QWORD *)(v66 + 16);
    v75 = *(_QWORD *)(v66 + 24);
    if (v76 >= v75 >> 1)
    {
      sub_1D48AB4A4(v75 > 1, v76 + 1, 1);
      v66 = v112;
    }
    *(_QWORD *)(v66 + 16) = v76 + 1;
    v77 = v66 + 16 * v76;
    *(_QWORD *)(v77 + 32) = v72;
    *(_QWORD *)(v77 + 40) = v74;
    v78 = sub_1D46D75FC(v67, v69, v71 & 1, v34);
    v67 = v78;
    v69 = v79;
    v71 = v80 & 1;
    if (!--v65)
    {
      sub_1D46D76E0(v78, v79, v80 & 1);
      v50 = v106;
      v63 = v102;
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1D46D902C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t *v24;
  void *v25;
  void *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  void (*v34)(_QWORD);

  v34 = a3;
  v33 = sub_1D4922370();
  v7 = *(_QWORD *)(v33 - 8);
  v8 = MEMORY[0x1E0C80A78](v33);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v33 - v11;
  v13 = sub_1D49224A8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)(a1 + 32);
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF740], v13);
  swift_retain();
  swift_retain();
  v18 = v17;
  LOBYTE(v17) = sub_1D49224C0();
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_8;
  }
  v19 = (void *)objc_opt_self();
  v20 = (void *)sub_1D49225F8();
  LODWORD(v19) = objc_msgSend(v19, sel_BOOLForEntitlement_, v20);

  if ((_DWORD)v19)
  {
    sub_1D470C76C((uint64_t)v12);
    v21 = sub_1D4922358();
    v22 = sub_1D4922910();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_1D467C000, v21, v22, "Process has bypass entitlement, all domains allowed", v23, 2u);
      MEMORY[0x1D82635B8](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v33);
    goto LABEL_16;
  }
  if ((sub_1D473117C() & 1) == 0)
  {
    if (qword_1ED98F3A8 != -1)
      swift_once();
    v24 = (uint64_t *)&off_1ED98F3F0;
    goto LABEL_12;
  }
  if (qword_1EFEA9C20 != -1)
    goto LABEL_20;
LABEL_8:
  v24 = &qword_1EFEAA908;
LABEL_12:
  v25 = *(void **)(*v24 + 32);
  swift_retain();
  v26 = (void *)sub_1D49225F8();
  LODWORD(v25) = objc_msgSend(v25, sel_BOOLForKey_, v26);
  swift_release();

  if (!(_DWORD)v25)
  {
    v30 = *(_QWORD *)(a1 + 24);
    v31 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1D47E6570(v30, v31, a2, v34, a4);
    swift_release();
    swift_release_n();
    goto LABEL_18;
  }
  sub_1D470C76C((uint64_t)v10);
  v27 = sub_1D4922358();
  v28 = sub_1D4922910();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v29 = 0;
    _os_log_impl(&dword_1D467C000, v27, v28, "Availability checking is disabled", v29, 2u);
    MEMORY[0x1D82635B8](v29, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v33);
LABEL_16:
  sub_1D4858E64(0, a2, v34, (uint64_t)a4);
LABEL_18:
  swift_release();
  return swift_release();
}

uint64_t sub_1D46D941C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

unint64_t sub_1D46D9440(unint64_t result)
{
  if (result >= 2)
    return swift_bridgeObjectRetain();
  return result;
}

ValueMetadata *type metadata accessor for WeakAvailabilityConfig()
{
  return &type metadata for WeakAvailabilityConfig;
}

unint64_t sub_1D46D9460()
{
  unint64_t result;

  result = qword_1ED98CD40;
  if (!qword_1ED98CD40)
  {
    result = MEMORY[0x1D82634E0](&unk_1D492829C, &type metadata for WeakAvailabilityConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED98CD40);
  }
  return result;
}

unint64_t sub_1D46D94A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED98D108;
  if (!qword_1ED98D108)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED98D100);
    v2[0] = MEMORY[0x1E0DEA9A0];
    v2[1] = sub_1D46D95A4(&qword_1ED98D210, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0DEA0D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED98D108);
  }
  return result;
}

unint64_t sub_1D46D9524()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFEAA688;
  if (!qword_1EFEAA688)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED98D100);
    v2[0] = MEMORY[0x1E0DEA970];
    v2[1] = sub_1D46D95A4(&qword_1EFEAA690, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFEAA688);
  }
  return result;
}

uint64_t sub_1D46D95A4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED98D200);
    v8 = a2;
    result = MEMORY[0x1D82634E0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WeakAvailabilityConfig.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for WeakAvailabilityConfig.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D46D9698 + 4 * asc_1D49280D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D46D96B8 + 4 * byte_1D49280D5[v4]))();
}

_BYTE *sub_1D46D9698(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D46D96B8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D46D96C0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D46D96C8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D46D96D0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D46D96D8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WeakAvailabilityConfig.CodingKeys()
{
  return &type metadata for WeakAvailabilityConfig.CodingKeys;
}

unint64_t sub_1D46D96F8()
{
  unint64_t result;

  result = qword_1EFEAA698;
  if (!qword_1EFEAA698)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4928274, &type metadata for WeakAvailabilityConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFEAA698);
  }
  return result;
}

unint64_t sub_1D46D9740()
{
  unint64_t result;

  result = qword_1ED98CD50;
  if (!qword_1ED98CD50)
  {
    result = MEMORY[0x1D82634E0](&unk_1D49281E4, &type metadata for WeakAvailabilityConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED98CD50);
  }
  return result;
}

unint64_t sub_1D46D9788()
{
  unint64_t result;

  result = qword_1ED98CD48;
  if (!qword_1ED98CD48)
  {
    result = MEMORY[0x1D82634E0](&unk_1D492820C, &type metadata for WeakAvailabilityConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED98CD48);
  }
  return result;
}

uint64_t sub_1D46D97D0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];
  char v12;
  char v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EC10);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D46DAA0C();
  sub_1D4922F58();
  v13 = 0;
  sub_1D4922DB4();
  if (!v3)
  {
    v11[1] = a3;
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EA38);
    sub_1D46DACF8(&qword_1ED98EA40, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB198], MEMORY[0x1E0DEA0B8]);
    sub_1D4922DCC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

BOOL sub_1D46D9930(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1D46D9948()
{
  _BYTE *v0;

  if (*v0)
    return 0x63536E69616D6F64;
  else
    return 0x6E6F697469736F70;
}

uint64_t sub_1D46D9990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D46DAA50(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D46D99B4(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1D46D99C0()
{
  sub_1D46DAA0C();
  return sub_1D4922F64();
}

uint64_t sub_1D46D99E8()
{
  sub_1D46DAA0C();
  return sub_1D4922F70();
}

uint64_t sub_1D46D9A10@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_1D46DAB64(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1D46D9A38(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1D46D97D0(a1, *v1, v1[1]);
}

uint64_t sub_1D46D9A50(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2)
    return sub_1D46EE850(a1[1], a2[1]);
  else
    return 0;
}

uint64_t sub_1D46D9A74(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char v40[9];

  v37 = a3;
  v36 = a2;
  v4 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D4922370();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DFC8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = a1;
  sub_1D48C4820((uint64_t)v13);
  v18 = v37;
  v19 = (uint64_t)v17;
  v20 = (uint64_t)v6;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1D46992EC((uint64_t)v13, &qword_1ED98DFC8);
    sub_1D470C76C((uint64_t)v10);
    v21 = sub_1D4922358();
    v22 = sub_1D492291C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_1D467C000, v21, v22, "DomainPredictionModel does not have modelDescription.", v23, 2u);
      MEMORY[0x1D82635B8](v23, -1, -1);
    }

    sub_1D4697DE0(v38, type metadata accessor for MLModelInfo);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    v26 = v19;
    sub_1D469C630((uint64_t)v13, v19, type metadata accessor for Argos_Protos_MLModel_ModelDescription);
    v27 = sub_1D46DAE1C(v19);
    v30 = v38;
    v24 = v39;
    if ((v31 & 1) == 0)
    {
      v32 = v27;
      v33 = v28;
      v34 = v29;
      sub_1D469C304(v38, v39 + OBJC_IVAR____TtC18VisualIntelligence19DomainPredictionNet_modelInfo, type metadata accessor for MLModelInfo);
      sub_1D469C304(v30, v20, type metadata accessor for MLModelInfo);
      type metadata accessor for DomainPredictionRequestProcessor();
      swift_allocObject();
      *(_QWORD *)(v24 + OBJC_IVAR____TtC18VisualIntelligence19DomainPredictionNet_requestProcessor) = sub_1D46C0360(v20, v32, v33, v34, 0x6165665F65646F6ELL, 0xEC00000065727574, 0x7474615F65676465, 0xE900000000000072);
      sub_1D469C304(v30, v20, type metadata accessor for MLModelInfo);
      type metadata accessor for DomainPredictionResponseProcessor();
      swift_allocObject();
      *(_QWORD *)(v24 + OBJC_IVAR____TtC18VisualIntelligence19DomainPredictionNet_responseProcessor) = sub_1D481BD00(v20, v32);
      v40[0] = 1;
      sub_1D469C304(v30, v20, type metadata accessor for MLModelInfo);
      type metadata accessor for CachedCoreMLModelProvider();
      swift_allocObject();
      v35 = sub_1D483F304(v40, v20, v36, v18 & 1, 0, 0);
      sub_1D4697DE0(v30, type metadata accessor for MLModelInfo);
      sub_1D4697DE0(v26, type metadata accessor for Argos_Protos_MLModel_ModelDescription);
      *(_QWORD *)(v24 + OBJC_IVAR____TtC18VisualIntelligence19DomainPredictionNet_coreMLModelProvider) = v35;
      return v24;
    }
    sub_1D4697DE0(v38, type metadata accessor for MLModelInfo);
    sub_1D4697DE0(v19, type metadata accessor for Argos_Protos_MLModel_ModelDescription);
  }
  type metadata accessor for DomainPredictionNet();
  swift_deallocPartialClassInstance();
  return 0;
}

void sub_1D46D9E98(uint64_t a1@<X8>)
{
  CVReturn v2;
  CVPixelBufferRef v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  CVPixelBufferRef v8[2];

  v8[1] = *(CVPixelBufferRef *)MEMORY[0x1E0C80C00];
  v8[0] = 0;
  v2 = CVPixelBufferCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], 1uLL, 1uLL, 0x42475241u, 0, v8);
  v3 = v8[0];
  if (v8[0])
    v4 = v2 == 0;
  else
    v4 = 0;
  if (v4)
  {
    *(_QWORD *)(a1 + 24) = &type metadata for EspressoRequestHandler;
    *(_QWORD *)(a1 + 32) = &off_1E98028B0;
    v5 = swift_allocObject();
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(v5 + 40) = &type metadata for PixelImage;
    *(_QWORD *)(v5 + 48) = &off_1E97FF320;
    *(_QWORD *)(v5 + 16) = v3;
    *(_DWORD *)(v5 + 24) = 1;
    v6 = type metadata accessor for ProcessInputImageEspresso();
    swift_allocObject();
    v3 = v3;
    sub_1D470D774();
    *(_QWORD *)(v5 + 80) = v6;
    *(_QWORD *)(v5 + 88) = &off_1E9803120;
    *(_QWORD *)(v5 + 56) = v7;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }

}

void sub_1D46D9FC8(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, void *);
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  __int128 *v44;
  void (**v45)(uint64_t, void *);
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  double v64[4];
  uint64_t v65[5];
  _BYTE v66[40];
  _QWORD v67[4];
  char v68;
  char *v69;

  v6 = v5;
  v58 = a4;
  v57 = a3;
  v60 = a2;
  v59 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D968);
  MEMORY[0x1E0C80A78](v8);
  *(_QWORD *)&v63 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for EspressoModel(0);
  v61 = *(_QWORD *)(v62 - 8);
  v10 = MEMORY[0x1E0C80A78](v62);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v51 - v13;
  v16 = *a1;
  v15 = a1[1];
  v18 = a1[2];
  v17 = a1[3];
  v19 = *((double *)a1 + 4);
  v20 = *((double *)a1 + 5);
  v21 = *((double *)a1 + 6);
  v22 = *((double *)a1 + 7);
  sub_1D483D748(a1[8]);
  v23 = (uint64_t)v69;
  sub_1D48C4C08((uint64_t)v66);
  if (v23)
    return;
  v52 = v17;
  v53 = v18;
  v54 = v15;
  v51 = 0;
  v55 = v16;
  v56 = v12;
  v24 = v60;
  v69 = v14;
  v25 = v6;
  v26 = *(_QWORD *)(v6 + OBJC_IVAR____TtC18VisualIntelligence19DomainPredictionNet_responseProcessor);
  sub_1D46AAF28((uint64_t)v66, (uint64_t)v65);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D830);
  v27 = v63;
  v28 = v62;
  v29 = swift_dynamicCast();
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56);
  if (!v29)
  {
    v30(v27, 1, 1, v28);
    sub_1D46992EC(v27, &qword_1ED98D968);
    sub_1D46AAFD4();
    swift_allocError();
    *(_QWORD *)v49 = 0xD00000000000001BLL;
    *(_QWORD *)(v49 + 8) = 0x80000001D49407D0;
    *(_BYTE *)(v49 + 16) = 3;
    swift_willThrow();
LABEL_11:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
    return;
  }
  v61 = v26;
  v30(v27, 0, 1, v28);
  v31 = (uint64_t)v69;
  sub_1D469C630(v27, (uint64_t)v69, type metadata accessor for EspressoModel);
  v67[0] = 0xD000000000000010;
  v67[1] = 0x80000001D493E970;
  v67[2] = "DomainPrediction Model Preprocess Input";
  v67[3] = 39;
  v68 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  v32 = sub_1D47C12D0((uint64_t)v67, v24);
  swift_release();
  v64[0] = v19;
  v64[1] = v20;
  v64[2] = v21;
  v64[3] = v22;
  sub_1D46C05D0(v55, v54, v53, v52, v64, v65);
  v34 = v65[0];
  v33 = v65[1];
  v36 = v65[2];
  v35 = v65[3];
  *(_QWORD *)&v63 = v65[4];
  sub_1D47C0B30();
  if (!v34)
  {
    sub_1D46DAD5C(v33, v36);
    swift_bridgeObjectRelease();
    sub_1D46AAFD4();
    swift_allocError();
    *(_QWORD *)v50 = 0xD000000000000019;
    *(_QWORD *)(v50 + 8) = 0x80000001D49407F0;
    *(_BYTE *)(v50 + 16) = 3;
    swift_willThrow();
    swift_release();
    sub_1D4697DE0(v31, type metadata accessor for EspressoModel);
    goto LABEL_11;
  }
  v62 = v32;
  sub_1D469C304(v31, (uint64_t)v56, type metadata accessor for EspressoModel);
  v37 = *(_QWORD *)(v34 + 16);
  v38 = (void (*)(uint64_t, void *))swift_allocObject();
  v39 = v58;
  *((_QWORD *)v38 + 2) = v57;
  *((_QWORD *)v38 + 3) = v39;
  *((_QWORD *)v38 + 4) = v25;
  *((_QWORD *)v38 + 5) = v24;
  *((_QWORD *)v38 + 6) = v61;
  *((_QWORD *)v38 + 7) = v33;
  *((_QWORD *)v38 + 8) = v36;
  *((_QWORD *)v38 + 9) = v35;
  *((_QWORD *)v38 + 10) = v63;
  v40 = qword_1ED98CC88;
  swift_retain_n();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v40 != -1)
    swift_once();
  v63 = xmmword_1ED98CC60;
  v41 = xmmword_1ED98CC70;
  type metadata accessor for EspressoRequest(0);
  v42 = swift_allocObject();
  v43 = (uint64_t)v56;
  sub_1D469C304((uint64_t)v56, v42 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_model, type metadata accessor for EspressoModel);
  *(_QWORD *)(v42 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_features) = v37;
  *(_QWORD *)(v42 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_vnScalingMode) = 0;
  v44 = (__int128 *)(v42 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_regionOfInterest);
  *v44 = v63;
  v44[1] = v41;
  *(_QWORD *)(v42 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_outputs) = 0;
  v45 = (void (**)(uint64_t, void *))(v42
                                              + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_completionHandler);
  *v45 = sub_1D46DADE4;
  v45[1] = v38;
  v46 = qword_1ED98D918;
  swift_retain();
  v47 = v59;
  if (v46 != -1)
    swift_once();
  v48 = qword_1ED9A4A78;
  swift_retain();
  swift_release();
  sub_1D4697DE0(v43, type metadata accessor for EspressoModel);
  *(_QWORD *)(v42 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_engineResult) = v48;
  *(_BYTE *)(v42 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_usesCPUOnly) = 1;
  *(_QWORD *)(v42 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_metricsBucket) = v24;
  v47[3] = (uint64_t)&type metadata for EspressoModelRequest;
  v47[4] = (uint64_t)&off_1E98024E0;
  swift_release_n();
  swift_release();
  *v47 = v42;
  sub_1D4697DE0((uint64_t)v69, type metadata accessor for EspressoModel);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
}

void sub_1D46DA65C(uint64_t a1, void *a2, void (*a3)(uint64_t *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _QWORD *a11)
{
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  char v25[40];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;

  if (a2)
  {
    sub_1D46AAFD4();
    v13 = (void *)swift_allocError();
    *(_QWORD *)v14 = a2;
    *(_QWORD *)(v14 + 8) = 0;
    *(_BYTE *)(v14 + 16) = 1;
    v26 = (uint64_t)v13;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 1;
    v15 = a2;
    a3(&v26);

  }
  else
  {
    v20 = a5 + OBJC_IVAR____TtC18VisualIntelligence19DomainPredictionNet_modelInfo;
    v21 = type metadata accessor for MLModelInfo(0);
    sub_1D469A744(*(_BYTE *)(v20 + *(int *)(v21 + 32)));
    type metadata accessor for DurationMeasurement();
    swift_allocObject();
    swift_retain();
    sub_1D47C12D0((uint64_t)v25, a6);
    swift_release();
    v22 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_engineResult) + 24);
    swift_bridgeObjectRetain();
    sub_1D46C1E20(a8, a9);
    v23 = sub_1D48C4E2C();
    v24 = sub_1D481BE88(v22, a11, (uint64_t)v23, *(_QWORD *)(a7 + 24));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26 = a8;
    v27 = a9;
    v28 = a10;
    v29 = v24;
    v30 = 0;
    a3(&v26);
    sub_1D46DAD5C(a8, a9);
    swift_bridgeObjectRelease();
    sub_1D47C0B30();
    swift_release();
  }
}

uint64_t sub_1D46DA850()
{
  uint64_t v0;

  sub_1D4697DE0(v0 + OBJC_IVAR____TtC18VisualIntelligence19DomainPredictionNet_modelInfo, type metadata accessor for MLModelInfo);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D46DA8B8()
{
  return type metadata accessor for DomainPredictionNet();
}

uint64_t type metadata accessor for DomainPredictionNet()
{
  uint64_t result;

  result = qword_1ED98F088;
  if (!qword_1ED98F088)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D46DA8FC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MLModelInfo(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DomainPredictionNet.PredictionResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DomainPredictionNet.PredictionResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DomainPredictionNet.PredictionResult()
{
  return &type metadata for DomainPredictionNet.PredictionResult;
}

unint64_t sub_1D46DAA0C()
{
  unint64_t result;

  result = qword_1ED98DA48;
  if (!qword_1ED98DA48)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4928480, &type metadata for DomainPredictionNet.PredictionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED98DA48);
  }
  return result;
}

uint64_t sub_1D46DAA50(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D4922E38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x63536E69616D6F64 && a2 == 0xEE0070614D65726FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D4922E38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D46DAB64(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[32];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA6A0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1D46DAA0C();
  sub_1D4922F4C();
  if (!v1)
  {
    v9[31] = 0;
    v7 = sub_1D4922D18();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EA38);
    v9[15] = 1;
    sub_1D46DACF8(&qword_1EFEAA6A8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB1C0], MEMORY[0x1E0DEA0D8]);
    sub_1D4922D30();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

uint64_t sub_1D46DACF8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED98EA38);
    v10[0] = a2;
    v10[1] = a3;
    result = MEMORY[0x1D82634E0](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D46DAD5C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D46DAD8C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 64))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1D46DADE4(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1D46DA65C(a1, a2, *(void (**)(uint64_t *))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD **)(v2 + 80));
}

uint64_t sub_1D46DAE1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t, uint64_t, uint64_t);
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t result;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;

  v2 = sub_1D4922370();
  v125 = *(_QWORD *)(v2 - 8);
  v126 = v2;
  v3 = MEMORY[0x1E0C80A78](v2);
  v121 = (uint64_t)&v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v113 = (uint64_t)&v105 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD40);
  v7 = MEMORY[0x1E0C80A78](v6);
  v107 = (uint64_t)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v109 = (uint64_t)&v105 - v10;
  MEMORY[0x1E0C80A78](v9);
  v114 = (uint64_t)&v105 - v11;
  v123 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
  v12 = MEMORY[0x1E0C80A78](v123);
  v108 = (uint64_t *)((char *)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x1E0C80A78](v12);
  v116 = (char *)&v105 - v15;
  MEMORY[0x1E0C80A78](v14);
  v115 = (char *)&v105 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98DD78);
  v18 = MEMORY[0x1E0C80A78](v17);
  v105 = (uint64_t)&v105 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v110 = (uint64_t)&v105 - v21;
  MEMORY[0x1E0C80A78](v20);
  v112 = (uint64_t)&v105 - v22;
  v118 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  v111 = *(_QWORD *)(v118 - 8);
  v23 = MEMORY[0x1E0C80A78](v118);
  v106 = (uint64_t)&v105 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v23);
  v117 = (uint64_t)&v105 - v26;
  MEMORY[0x1E0C80A78](v25);
  v122 = (uint64_t)&v105 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E010);
  v29 = MEMORY[0x1E0C80A78](v28);
  v119 = (uint64_t)&v105 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v127 = (uint64_t)&v105 - v31;
  v129 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  v32 = *(_QWORD *)(v129 - 8);
  v33 = MEMORY[0x1E0C80A78](v129);
  v35 = (uint64_t *)((char *)&v105 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v36 = MEMORY[0x1E0C80A78](v33);
  v124 = (uint64_t)&v105 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v40 = (uint64_t *)((char *)&v105 - v39);
  MEMORY[0x1E0C80A78](v38);
  v128 = (uint64_t)&v105 - v41;
  v120 = a1;
  v42 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v42)
  {
    v43 = *(_QWORD *)a1 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
    v44 = *(_QWORD *)(v32 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1D469C304(v43, (uint64_t)v40, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
      v45 = *v40 == 0x6165665F65646F6ELL && v40[1] == 0xEC00000065727574;
      if (v45 || (sub_1D4922E38() & 1) != 0)
        break;
      sub_1D4697DE0((uint64_t)v40, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
      v43 += v44;
      if (!--v42)
        goto LABEL_12;
    }
    v46 = v127;
    sub_1D469C630((uint64_t)v40, v127, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
    v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56);
    v48 = v46;
    v49 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_12:
    v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56);
    v46 = v127;
    v48 = v127;
    v49 = 1;
  }
  v50 = v129;
  v47(v48, v49, 1, v129);
  swift_bridgeObjectRelease();
  v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  if (v51(v46, 1, v50) == 1)
  {
    sub_1D46992EC(v46, &qword_1ED98E010);
    v52 = v121;
    sub_1D470C76C(v121);
    v53 = sub_1D4922358();
    v54 = sub_1D492291C();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v55 = 0;
      _os_log_impl(&dword_1D467C000, v53, v54, "Failed to get node feature shape from DomainPredictionModelDescription.", v55, 2u);
      MEMORY[0x1D82635B8](v55, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v52, v126);
    return 0;
  }
  sub_1D469C630(v46, v128, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
  v56 = *(_QWORD *)(*(_QWORD *)v120 + 16);
  if (v56)
  {
    v57 = *(_QWORD *)v120
        + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
    v58 = *(_QWORD *)(v32 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1D469C304(v57, (uint64_t)v35, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
      v59 = *v35 == 0x7474615F65676465 && v35[1] == 0xE900000000000072;
      if (v59 || (sub_1D4922E38() & 1) != 0)
        break;
      sub_1D4697DE0((uint64_t)v35, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
      v57 += v58;
      if (!--v56)
      {
        v60 = 1;
        v50 = v129;
        goto LABEL_28;
      }
    }
    v61 = v119;
    sub_1D469C630((uint64_t)v35, v119, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
    v60 = 0;
    v50 = v129;
  }
  else
  {
    swift_bridgeObjectRetain();
    v60 = 1;
LABEL_28:
    v61 = v119;
  }
  v47(v61, v60, 1, v50);
  swift_bridgeObjectRelease();
  v62 = v51(v61, 1, v50);
  v63 = v123;
  if (v62 == 1)
  {
    sub_1D46992EC(v61, &qword_1ED98E010);
    v64 = v113;
    sub_1D470C76C(v113);
    v65 = sub_1D4922358();
    v66 = sub_1D492291C();
    if (os_log_type_enabled(v65, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v67 = 0;
      _os_log_impl(&dword_1D467C000, v65, v66, "Failed to get edge attribute shape from DomainPredictionModelDescription.", v67, 2u);
      MEMORY[0x1D82635B8](v67, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v64, v126);
    sub_1D4697DE0(v128, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
    return 0;
  }
  sub_1D469C630(v61, v124, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
  v69 = v128 + *(int *)(v50 + 28);
  v70 = v112;
  sub_1D469C5EC(v69, v112, &qword_1ED98DD78);
  v71 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v111 + 48);
  v72 = v118;
  if (v71(v70, 1, v118) == 1)
  {
    v73 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
    v74 = v122;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v122, 1, 1, v73);
    *(_BYTE *)(v74 + *(int *)(v72 + 20)) = 0;
    sub_1D4922010();
    sub_1D46992EC(v70, &qword_1ED98DD78);
  }
  else
  {
    v74 = v122;
    sub_1D469C630(v70, v122, type metadata accessor for Argos_Protos_MLModel_FeatureType);
  }
  v76 = (uint64_t)v115;
  v75 = (uint64_t)v116;
  v77 = v114;
  sub_1D469C5EC(v74, v114, &qword_1ED98DD40);
  v78 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  v79 = *(_QWORD *)(v78 - 8);
  v80 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
  v81 = v80(v77, 1, v78);
  v82 = MEMORY[0x1E0DEE9D8];
  if (v81 == 1)
  {
    sub_1D46992EC(v77, &qword_1ED98DD40);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1D469C630(v77, v76, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
      goto LABEL_43;
    }
    sub_1D4697DE0(v77, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
  }
  *(_QWORD *)v76 = v82;
  *(_QWORD *)(v76 + 8) = 0;
  *(_BYTE *)(v76 + 16) = 1;
  v83 = v76 + *(int *)(v63 + 24);
  v84 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v83, 1, 1, v84);
  v85 = v76 + *(int *)(v63 + 28);
  *(_QWORD *)v85 = 0;
  *(_BYTE *)(v85 + 8) = -1;
  sub_1D4922010();
LABEL_43:
  sub_1D4697DE0(v122, type metadata accessor for Argos_Protos_MLModel_FeatureType);
  v86 = *(_QWORD *)v76;
  swift_bridgeObjectRetain();
  result = sub_1D4697DE0(v76, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
  if (*(_QWORD *)(v86 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_67;
  }
  v68 = *(_QWORD *)(v86 + 40);
  swift_bridgeObjectRelease();
  v88 = v110;
  sub_1D469C5EC(v69, v110, &qword_1ED98DD78);
  v89 = v118;
  if (v71(v88, 1, v118) == 1)
  {
    v90 = v117;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56))(v117, 1, 1, v78);
    *(_BYTE *)(v90 + *(int *)(v89 + 20)) = 0;
    sub_1D4922010();
    sub_1D46992EC(v88, &qword_1ED98DD78);
  }
  else
  {
    v90 = v117;
    sub_1D469C630(v88, v117, type metadata accessor for Argos_Protos_MLModel_FeatureType);
  }
  v91 = v109;
  sub_1D469C5EC(v90, v109, &qword_1ED98DD40);
  if (v80(v91, 1, v78) == 1)
  {
    sub_1D46992EC(v91, &qword_1ED98DD40);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1D469C630(v91, v75, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
      goto LABEL_53;
    }
    sub_1D4697DE0(v91, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
  }
  *(_QWORD *)v75 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v75 + 8) = 0;
  *(_BYTE *)(v75 + 16) = 1;
  v92 = v75 + *(int *)(v63 + 24);
  v93 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v92, 1, 1, v93);
  v94 = v75 + *(int *)(v63 + 28);
  *(_QWORD *)v94 = 0;
  *(_BYTE *)(v94 + 8) = -1;
  sub_1D4922010();
LABEL_53:
  sub_1D4697DE0(v117, type metadata accessor for Argos_Protos_MLModel_FeatureType);
  v95 = v75;
  v96 = *(_QWORD *)v75;
  swift_bridgeObjectRetain();
  result = sub_1D4697DE0(v95, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
  if (*(_QWORD *)(v96 + 16) < 3uLL)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  swift_bridgeObjectRelease();
  v97 = v105;
  sub_1D469C5EC(v124 + *(int *)(v129 + 28), v105, &qword_1ED98DD78);
  if (v71(v97, 1, v89) == 1)
  {
    v98 = v106;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56))(v106, 1, 1, v78);
    *(_BYTE *)(v98 + *(int *)(v89 + 20)) = 0;
    sub_1D4922010();
    sub_1D46992EC(v97, &qword_1ED98DD78);
  }
  else
  {
    v98 = v106;
    sub_1D469C630(v97, v106, type metadata accessor for Argos_Protos_MLModel_FeatureType);
  }
  v99 = v107;
  sub_1D469C5EC(v98, v107, &qword_1ED98DD40);
  if (v80(v99, 1, v78) == 1)
  {
    sub_1D46992EC(v99, &qword_1ED98DD40);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v100 = v108;
      sub_1D469C630(v99, (uint64_t)v108, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
      goto LABEL_63;
    }
    sub_1D4697DE0(v99, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
  }
  v100 = v108;
  *v108 = MEMORY[0x1E0DEE9D8];
  v100[1] = 0;
  *((_BYTE *)v100 + 16) = 1;
  v101 = (char *)v100 + *(int *)(v63 + 24);
  v102 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v101, 1, 1, v102);
  v103 = (char *)v100 + *(int *)(v63 + 28);
  *(_QWORD *)v103 = 0;
  v103[8] = -1;
  sub_1D4922010();
LABEL_63:
  sub_1D4697DE0(v98, type metadata accessor for Argos_Protos_MLModel_FeatureType);
  v104 = *v100;
  swift_bridgeObjectRetain();
  result = sub_1D4697DE0((uint64_t)v100, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
  if (*(_QWORD *)(v104 + 16) >= 4uLL)
  {
    swift_bridgeObjectRelease();
    sub_1D4697DE0(v124, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
    sub_1D4697DE0(v128, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
    return v68;
  }
LABEL_68:
  __break(1u);
  return result;
}

uint64_t sub_1D46DBB34()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  if (*(_QWORD *)(v0 + 80))
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_deallocObject();
}

uint64_t getEnumTagSinglePayload for TrialWrapper.ConfigSource(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DomainPredictionNet.PredictionResult.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D46DBC4C + 4 * byte_1D49282F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D46DBC80 + 4 * byte_1D49282F0[v4]))();
}

uint64_t sub_1D46DBC80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46DBC88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D46DBC90);
  return result;
}

uint64_t sub_1D46DBC9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D46DBCA4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D46DBCA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46DBCB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1D46DBCBC(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DomainPredictionNet.PredictionResult.CodingKeys()
{
  return &type metadata for DomainPredictionNet.PredictionResult.CodingKeys;
}

unint64_t sub_1D46DBCDC()
{
  unint64_t result;

  result = qword_1EFEAA6B0;
  if (!qword_1EFEAA6B0)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4928458, &type metadata for DomainPredictionNet.PredictionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFEAA6B0);
  }
  return result;
}

unint64_t sub_1D46DBD24()
{
  unint64_t result;

  result = qword_1ED98DA58;
  if (!qword_1ED98DA58)
  {
    result = MEMORY[0x1D82634E0](&unk_1D49283C8, &type metadata for DomainPredictionNet.PredictionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED98DA58);
  }
  return result;
}

unint64_t sub_1D46DBD6C()
{
  unint64_t result;

  result = qword_1ED98DA50;
  if (!qword_1ED98DA50)
  {
    result = MEMORY[0x1D82634E0](&unk_1D49283F0, &type metadata for DomainPredictionNet.PredictionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED98DA50);
  }
  return result;
}

uint64_t sub_1D46DBDB0@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  CGFloat MidX;
  CGFloat MidY;
  uint64_t v40;
  int v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t ObjCClassFromMetadata;
  id v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v87;
  unsigned int (*v88)(uint64_t, uint64_t, uint64_t);
  int v89;
  unsigned __int8 *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  uint64_t v99;
  int v100;
  unsigned __int8 *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  NSObject *v111;
  os_log_type_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  os_log_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD v133[2];
  int v134;
  os_log_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  uint64_t v144;
  uint64_t v145;
  __int128 v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  _OWORD v162[2];
  _OWORD v163[8];
  _OWORD v164[2];
  uint64_t v165;
  __int128 v166;
  uint64_t v167;
  uint64_t v168;
  char v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  __int128 v174;
  __int128 v175;
  uint64_t v176;
  int v177;
  char v178;
  char v179;
  char v180;
  __int16 v181;
  char v182;
  __int128 v183;
  int v184;
  char v185[8];
  CGFloat v186;
  CGFloat v187;
  uint64_t v188;
  uint64_t v189;
  char v190;
  __int128 v191;
  __int128 v192;
  uint64_t v193;
  uint64_t v194;
  __int128 v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  __int16 v199;
  char v200;
  char v201;
  char v202;
  char v203;
  uint64_t v204;
  uint64_t v205;
  int v206;
  _OWORD v207[2];
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  _BYTE v213[44];
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  _BYTE v221[44];
  uint64_t v222;
  CGRect v223;

  v152 = a5;
  v222 = a6;
  v11 = sub_1D4922370();
  v149 = *(_QWORD *)(v11 - 8);
  v150 = v11;
  MEMORY[0x1E0C80A78](v11);
  v153 = (uint64_t)v133 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CE90);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v133 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v151 = (uint64_t)v133 - v17;
  v18 = a1[7];
  v220 = a1[6];
  *(_OWORD *)v221 = v18;
  *(_OWORD *)&v221[16] = a1[8];
  *(_OWORD *)&v221[28] = *(__int128 *)((char *)a1 + 140);
  v19 = a1[3];
  v216 = a1[2];
  v217 = v19;
  v20 = a1[5];
  v218 = a1[4];
  v219 = v20;
  v21 = a1[1];
  v214 = *a1;
  v215 = v21;
  if (v221[12] != 1 || (v22 = v214, (sub_1D46DE6CC(v214, a2) & 1) == 0))
  {
    v47 = a1[7];
    v212 = a1[6];
    *(_OWORD *)v213 = v47;
    *(_OWORD *)&v213[16] = a1[8];
    *(_OWORD *)&v213[28] = *(__int128 *)((char *)a1 + 140);
    v48 = a1[3];
    v208 = a1[2];
    v209 = v48;
    v49 = a1[5];
    v210 = a1[4];
    v211 = v49;
    v50 = a1[1];
    v207[0] = *a1;
    v207[1] = v50;
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v207);
    sub_1D46A4760((uint64_t)v207, v222);
    return sub_1D46A47CC((uint64_t)&v214);
  }
  v139 = v16;
  v141 = a4;
  v142 = v6;
  v23 = v219;
  v24 = v220;
  v25 = *(_DWORD *)v221;
  v26 = *(_DWORD *)&v221[4];
  v27 = *(_DWORD *)&v221[8];
  v28 = *(_QWORD *)&v221[32];
  v29 = *(_DWORD *)&v221[40];
  v140 = *((_QWORD *)&v217 + 1);
  v30 = *((_QWORD *)&v218 + 1);
  LOBYTE(v207[0]) = v22;
  *((_QWORD *)&v207[1] + 1) = *((_QWORD *)&v215 + 1);
  v138 = v216;
  *(_QWORD *)&v208 = v216;
  BYTE8(v208) = BYTE8(v216);
  v135 = (os_log_t)v217;
  v136 = v218;
  v209 = v217;
  v210 = v218;
  v211 = v219;
  v212 = v220;
  *(_DWORD *)v213 = *(_DWORD *)v221;
  *(_DWORD *)&v213[4] = *(_DWORD *)&v221[4];
  *(_DWORD *)&v213[8] = *(_DWORD *)&v221[8];
  v213[12] = 1;
  LODWORD(v137) = v221[14];
  v213[14] = v221[14];
  v143 = v221[15];
  *(_WORD *)&v213[15] = *(_WORD *)&v221[15];
  v213[17] = v221[17];
  v144 = *(_QWORD *)&v221[24];
  *(_QWORD *)&v213[24] = *(_QWORD *)&v221[24];
  *(_QWORD *)&v213[32] = *(_QWORD *)&v221[32];
  *(_DWORD *)&v213[40] = *(_DWORD *)&v221[40];
  v213[13] = 1;
  v31 = *(double *)a3;
  v32 = *(double *)(a3 + 8);
  v33 = *(double *)(a3 + 16);
  v34 = *(double *)(a3 + 24);
  sub_1D46A484C(v219, *((uint64_t *)&v219 + 1));
  swift_bridgeObjectRetain();
  sub_1D46A484C(v23, *((uint64_t *)&v23 + 1));
  swift_bridgeObjectRetain();
  sub_1D46A484C(v23, *((uint64_t *)&v23 + 1));
  swift_bridgeObjectRetain();
  sub_1D46A484C(v23, *((uint64_t *)&v23 + 1));
  swift_bridgeObjectRetain();
  sub_1D46A484C(v23, *((uint64_t *)&v23 + 1));
  swift_bridgeObjectRetain();
  v147 = *((_QWORD *)&v23 + 1);
  v148 = v23;
  v35 = v30;
  v36 = v141;
  v146 = v24;
  sub_1D46A484C(v23, *((uint64_t *)&v23 + 1));
  v145 = v28;
  v37 = v140;
  swift_bridgeObjectRetain();
  sub_1D46A47CC((uint64_t)&v214);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v223.origin.x = v31;
  v223.origin.y = v32;
  v223.size.width = v33;
  v223.size.height = v34;
  MidX = CGRectGetMidX(v223);
  MidY = CGRectGetMidY(*(CGRect *)a3);
  *((CGFloat *)v207 + 1) = MidX;
  *(CGFloat *)&v207[1] = MidY;
  if (*(_QWORD *)(v36 + 16))
  {
    v40 = sub_1D47CA6C8(v22);
    v41 = v22;
    if ((v42 & 1) != 0)
    {
      v43 = *(_QWORD *)(v36 + 56) + 40 * v40;
      v44 = *(_QWORD *)v43;
      v45 = *(_QWORD *)(v43 + 8);
      v46 = *(_QWORD *)(v43 + 16);
      v134 = *(unsigned __int8 *)(v43 + 32);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)&v207[1] + 1) = v44;
      v141 = v45;
      *(_QWORD *)&v208 = v45;
      v133[1] = v46;
      if (v37)
      {
        swift_bridgeObjectRelease();
        *(_QWORD *)&v209 = v135;
        *((_QWORD *)&v209 + 1) = v37;
        if (v35)
        {
LABEL_7:
          swift_bridgeObjectRelease();
          *(_QWORD *)&v210 = v136;
          *((_QWORD *)&v210 + 1) = v35;
          goto LABEL_14;
        }
      }
      else
      {
        type metadata accessor for VisualIntelligenceService(0);
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        v55 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
        v56 = v41;
        v57 = sub_1D4920E28();
        v59 = v58;

        *(_QWORD *)&v209 = v57;
        v41 = v56;
        *((_QWORD *)&v209 + 1) = v59;
        if (v35)
          goto LABEL_7;
      }
      type metadata accessor for VisualIntelligenceService(0);
      v60 = swift_getObjCClassFromMetadata();
      v61 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v60);
      v62 = sub_1D4920E28();
      v64 = v63;

      v65 = sub_1D48B7EDC(v62, v64);
      v67 = v66;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v210 = v65;
      *((_QWORD *)&v210 + 1) = v67;
LABEL_14:
      v53 = v151;
      v52 = v152;
      if ((_DWORD)v137)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_18:
        v69 = 1;
LABEL_21:
        v213[14] = v69;
        goto LABEL_22;
      }
      if ((v134 & 1) != 0)
      {
        v68 = sub_1D4922E38();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v68 & 1) == 0)
          goto LABEL_18;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v69 = *(_BYTE *)(a3 + 96);
      goto LABEL_21;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v41 = v22;
  }
  v53 = v151;
  v52 = v152;
LABEL_22:
  v70 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20);
  v71 = *(_QWORD *)(v52 + v70);
  swift_beginAccess();
  v72 = *(_QWORD *)(v71 + 16);
  v73 = sub_1D46F8BC8(v41);
  v75 = v74;
  if (*(_QWORD *)(v72 + 16))
  {
    v76 = v73;
    swift_bridgeObjectRetain();
    v77 = sub_1D47CA4DC(v76, v75);
    if ((v78 & 1) != 0)
    {
      v79 = v77;
      v80 = *(_QWORD *)(v72 + 56);
      v81 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
      v82 = v41;
      v83 = v70;
      v84 = *(_QWORD *)(v81 - 8);
      v85 = v80 + *(_QWORD *)(v84 + 72) * v79;
      v53 = v151;
      sub_1D469C304(v85, v151, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
      v86 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v84 + 56);
      v70 = v83;
      v41 = v82;
      v52 = v152;
      v86(v53, 0, 1, v81);
    }
    else
    {
      v81 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v53, 1, 1, v81);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v81 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v53, 1, 1, v81);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
  v87 = *(_QWORD *)(v81 - 8);
  v88 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
  if (v88(v53, 1, v81) == 1)
  {
    sub_1D46DD284(v53);
    v89 = 0;
  }
  else
  {
    v90 = (unsigned __int8 *)(*(_QWORD *)(v53 + *(int *)(v81 + 20))
                            + OBJC_IVAR____TtCV18VisualIntelligence40Argos_Protos_Queryflow_DomainParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__searchRequireOcr);
    swift_beginAccess();
    v89 = *v90;
    sub_1D4697DE0(v53, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
  }
  LODWORD(v151) = v89;
  v213[16] = v89;
  v91 = *(_QWORD *)(v52 + v70);
  swift_beginAccess();
  v92 = *(_QWORD *)(v91 + 16);
  v93 = sub_1D46F8BC8(v41);
  v95 = v94;
  if (*(_QWORD *)(v92 + 16))
  {
    v96 = v93;
    swift_bridgeObjectRetain();
    v97 = sub_1D47CA4DC(v96, v95);
    v99 = (uint64_t)v139;
    if ((v98 & 1) != 0)
    {
      sub_1D469C304(*(_QWORD *)(v92 + 56) + *(_QWORD *)(v87 + 72) * v97, (uint64_t)v139, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v87 + 56))(v99, 0, 1, v81);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56))(v139, 1, 1, v81);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v99 = (uint64_t)v139;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56))(v139, 1, 1, v81);
  }
  swift_bridgeObjectRelease();
  if (v88(v99, 1, v81) == 1)
  {
    sub_1D46DD284(v99);
    v100 = 0;
  }
  else
  {
    v101 = (unsigned __int8 *)(*(_QWORD *)(v99 + *(int *)(v81 + 20))
                             + OBJC_IVAR____TtCV18VisualIntelligence40Argos_Protos_Queryflow_DomainParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__searchRequireBarcode);
    swift_beginAccess();
    v100 = *v101;
    sub_1D4697DE0(v99, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
  }
  v213[17] = v100;
  BYTE8(v208) = 1;
  sub_1D470C76C(v153);
  v102 = v208;
  v103 = *((_QWORD *)&v209 + 1);
  v104 = *((_QWORD *)&v210 + 1);
  v185[0] = v41;
  v186 = MidX;
  v187 = MidY;
  v138 = *((_QWORD *)&v207[1] + 1);
  v139 = (char *)v209;
  v188 = *((_QWORD *)&v207[1] + 1);
  v189 = v208;
  v190 = 1;
  v191 = v209;
  v140 = v210;
  v192 = v210;
  v105 = v147;
  v193 = v148;
  v194 = v147;
  v195 = v146;
  v196 = v25;
  v197 = v26;
  v198 = v27;
  v199 = 257;
  v200 = v213[14];
  v201 = v143;
  v202 = v151;
  LODWORD(v141) = v100;
  v203 = v100;
  v204 = v144;
  LODWORD(v152) = v41;
  v205 = v145;
  v206 = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D46A47CC((uint64_t)v185);
  swift_bridgeObjectRelease();
  v106 = v148;
  sub_1D46A487C(v148, v105);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D46A47CC((uint64_t)v185);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D46A47CC((uint64_t)v185);
  swift_bridgeObjectRelease();
  v107 = v105;
  sub_1D46A487C(v106, v105);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D46A47CC((uint64_t)v185);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D46A47CC((uint64_t)v185);
  swift_bridgeObjectRelease();
  v108 = v148;
  sub_1D46A487C(v148, v107);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D46A47CC((uint64_t)v185);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D46A47CC((uint64_t)v185);
  swift_bridgeObjectRelease();
  v109 = v147;
  sub_1D46A487C(v108, v147);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D46A47CC((uint64_t)v185);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D46A47CC((uint64_t)v185);
  v110 = v153;
  swift_bridgeObjectRelease();
  sub_1D46A487C(v108, v109);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D46A47CC((uint64_t)v185);
  v111 = sub_1D4922358();
  v112 = sub_1D4922910();
  v113 = v112;
  if (os_log_type_enabled(v111, v112))
  {
    v114 = swift_slowAlloc();
    LODWORD(v136) = v113;
    v115 = v114;
    v137 = swift_slowAlloc();
    *(_QWORD *)&v163[0] = v137;
    *(_DWORD *)v115 = 136316162;
    v116 = sub_1D46F8BC8(v152);
    v165 = sub_1D47F0250(v116, v117, (uint64_t *)v163);
    sub_1D4922A78();
    swift_bridgeObjectRelease();
    sub_1D46A48AC((uint64_t)v185);
    sub_1D46A48AC((uint64_t)v185);
    *(_WORD *)(v115 + 12) = 2080;
    v165 = *(_QWORD *)&MidX;
    *(CGFloat *)&v166 = MidY;
    type metadata accessor for CGPoint(0);
    v135 = v111;
    v118 = sub_1D4922670();
    v165 = sub_1D47F0250(v118, v119, (uint64_t *)v163);
    sub_1D4922A78();
    swift_bridgeObjectRelease();
    sub_1D46A48AC((uint64_t)v185);
    sub_1D46A48AC((uint64_t)v185);
    *(_WORD *)(v115 + 22) = 2080;
    v165 = v138;
    *(_QWORD *)&v166 = v102;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D140);
    v120 = sub_1D4922670();
    v165 = sub_1D47F0250(v120, v121, (uint64_t *)v163);
    sub_1D4922A78();
    swift_bridgeObjectRelease();
    sub_1D46A48AC((uint64_t)v185);
    sub_1D46A48AC((uint64_t)v185);
    *(_WORD *)(v115 + 32) = 2080;
    v165 = (uint64_t)v139;
    *(_QWORD *)&v166 = v103;
    swift_bridgeObjectRetain();
    v122 = sub_1D4922670();
    v165 = sub_1D47F0250(v122, v123, (uint64_t *)v163);
    sub_1D4922A78();
    swift_bridgeObjectRelease();
    sub_1D46A48AC((uint64_t)v185);
    sub_1D46A48AC((uint64_t)v185);
    *(_WORD *)(v115 + 42) = 2080;
    v165 = v140;
    *(_QWORD *)&v166 = v104;
    swift_bridgeObjectRetain();
    v124 = sub_1D4922670();
    v165 = sub_1D47F0250(v124, v125, (uint64_t *)v163);
    sub_1D4922A78();
    swift_bridgeObjectRelease();
    sub_1D46A48AC((uint64_t)v185);
    sub_1D46A48AC((uint64_t)v185);
    v126 = v135;
    _os_log_impl(&dword_1D467C000, v135, (os_log_type_t)v136, "Region (region.boundingBox.loggingDescription) triggers %s with focal point %s and glyph name %s, displayLabel %s, displayMessage %s", (uint8_t *)v115, 0x34u);
    v127 = v137;
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v127, -1, -1);
    MEMORY[0x1D82635B8](v115, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v149 + 8))(v153, v150);
  }
  else
  {
    sub_1D46A48AC((uint64_t)v185);
    sub_1D46A48AC((uint64_t)v185);
    sub_1D46A48AC((uint64_t)v185);
    sub_1D46A48AC((uint64_t)v185);
    sub_1D46A48AC((uint64_t)v185);
    sub_1D46A48AC((uint64_t)v185);
    sub_1D46A48AC((uint64_t)v185);
    sub_1D46A48AC((uint64_t)v185);
    sub_1D46A48AC((uint64_t)v185);
    sub_1D46A48AC((uint64_t)v185);

    (*(void (**)(uint64_t, uint64_t))(v149 + 8))(v110, v150);
  }
  swift_beginAccess();
  v128 = *((_QWORD *)&v207[1] + 1);
  v129 = v208;
  v149 = *((_QWORD *)&v209 + 1);
  v150 = v209;
  v130 = *((_QWORD *)&v210 + 1);
  v140 = v210;
  LODWORD(v153) = v213[14];
  LOBYTE(v154) = v152;
  *((CGFloat *)&v154 + 1) = MidX;
  *(CGFloat *)&v155 = MidY;
  *((_QWORD *)&v155 + 1) = *((_QWORD *)&v207[1] + 1);
  *(_QWORD *)&v156 = v208;
  BYTE8(v156) = 1;
  v157 = v209;
  v158 = v210;
  v132 = v147;
  v131 = v148;
  *(_QWORD *)&v159 = v148;
  *((_QWORD *)&v159 + 1) = v147;
  v160 = v146;
  *(_QWORD *)&v161 = __PAIR64__(v26, v25);
  DWORD2(v161) = v27;
  WORD6(v161) = 257;
  BYTE14(v161) = v213[14];
  HIBYTE(v161) = v143;
  LOBYTE(v162[0]) = v151;
  BYTE1(v162[0]) = v141;
  *((_QWORD *)&v162[0] + 1) = v144;
  *(_QWORD *)&v162[1] = v145;
  DWORD2(v162[1]) = v29;
  sub_1D46A47CC((uint64_t)&v154);
  swift_bridgeObjectRelease();
  sub_1D46A487C(v131, v132);
  v163[6] = v160;
  v163[7] = v161;
  v164[0] = v162[0];
  *(_OWORD *)((char *)v164 + 12) = *(_OWORD *)((char *)v162 + 12);
  v163[2] = v156;
  v163[3] = v157;
  v163[4] = v158;
  v163[5] = v159;
  v163[0] = v154;
  v163[1] = v155;
  faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v163);
  sub_1D46A4760((uint64_t)v163, v222);
  LOBYTE(v165) = v207[0];
  v166 = *(_OWORD *)((char *)v207 + 8);
  v167 = v128;
  v168 = v129;
  v169 = BYTE8(v208);
  v170 = v150;
  v171 = v149;
  v172 = v140;
  v173 = v130;
  v174 = v211;
  v175 = v212;
  v176 = *(_QWORD *)v213;
  v177 = *(_DWORD *)&v213[8];
  v178 = v213[12];
  v179 = v213[13];
  v180 = v153;
  v181 = *(_WORD *)&v213[15];
  v182 = v213[17];
  v183 = *(_OWORD *)&v213[24];
  v184 = *(_DWORD *)&v213[40];
  return sub_1D46A48AC((uint64_t)&v165);
}

uint64_t type metadata accessor for TriggeringPredictionProcessor()
{
  return objc_opt_self();
}

unint64_t sub_1D46DCEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  unint64_t v33;
  unint64_t v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _OWORD v68[8];
  _OWORD v69[2];
  __int128 v70[8];
  _OWORD v71[2];
  _OWORD v72[8];
  _OWORD v73[2];
  _BYTE v74[160];
  _BYTE v75[176];

  v65 = a2;
  v66 = a3;
  v6 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v55 - v11;
  v60 = *(_QWORD *)(a1 + 16);
  if (!v60)
    return MEMORY[0x1E0DEE9D8];
  v59 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v58 = a1 + v59;
  v13 = *(_QWORD *)(v10 + 72);
  v55 = a1;
  swift_bridgeObjectRetain();
  v14 = 0;
  v61 = MEMORY[0x1E0DEE9D8];
  v63 = a4;
  v64 = v12;
  v56 = v9;
  v57 = v13;
  do
  {
    v62 = v14;
    sub_1D469C304(v58 + v13 * v14, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v15 = *((_QWORD *)v12 + 5);
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v67 = v15;
      swift_bridgeObjectRetain();
      v17 = v67;
      v18 = v16 - 1;
      v19 = 32;
      v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v21 = (uint64_t)v64;
      while (1)
      {
        v22 = *(_OWORD *)(v17 + v19 + 16);
        v72[0] = *(_OWORD *)(v17 + v19);
        v72[1] = v22;
        v23 = *(_OWORD *)(v17 + v19 + 32);
        v24 = *(_OWORD *)(v17 + v19 + 48);
        v25 = *(_OWORD *)(v17 + v19 + 80);
        v72[4] = *(_OWORD *)(v17 + v19 + 64);
        v72[5] = v25;
        v72[2] = v23;
        v72[3] = v24;
        v26 = *(_OWORD *)(v17 + v19 + 96);
        v27 = *(_OWORD *)(v17 + v19 + 112);
        v28 = *(_OWORD *)(v17 + v19 + 128);
        *(_OWORD *)((char *)v73 + 12) = *(_OWORD *)(v17 + v19 + 140);
        v72[7] = v27;
        v73[0] = v28;
        v72[6] = v26;
        v29 = *(_OWORD *)(v17 + v19 + 112);
        v70[6] = *(_OWORD *)(v17 + v19 + 96);
        v70[7] = v29;
        v71[0] = *(_OWORD *)(v17 + v19 + 128);
        *(_OWORD *)((char *)v71 + 12) = *(_OWORD *)(v17 + v19 + 140);
        v30 = *(_OWORD *)(v17 + v19 + 48);
        v70[2] = *(_OWORD *)(v17 + v19 + 32);
        v70[3] = v30;
        v31 = *(_OWORD *)(v17 + v19 + 80);
        v70[4] = *(_OWORD *)(v17 + v19 + 64);
        v70[5] = v31;
        v32 = *(_OWORD *)(v17 + v19 + 16);
        v70[0] = *(_OWORD *)(v17 + v19);
        v70[1] = v32;
        sub_1D46A47CC((uint64_t)v72);
        sub_1D46DBDB0(v70, v65, v21, v66, a4, (uint64_t)v68);
        sub_1D46A48AC((uint64_t)v72);
        sub_1D46A4760((uint64_t)v68, (uint64_t)v74);
        sub_1D46A4760((uint64_t)v74, (uint64_t)v75);
        if (sub_1D46A47A8((uint64_t)v75) != 1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v20 = sub_1D48A84F8(0, v20[2] + 1, 1, v20);
          v34 = v20[2];
          v33 = v20[3];
          if (v34 >= v33 >> 1)
            v20 = sub_1D48A84F8((_QWORD *)(v33 > 1), v34 + 1, 1, v20);
          sub_1D46A4760((uint64_t)v74, (uint64_t)v68);
          v20[2] = v34 + 1;
          v35 = &v20[20 * v34];
          v36 = v68[1];
          v35[2] = v68[0];
          v35[3] = v36;
          v37 = v68[5];
          v39 = v68[2];
          v38 = v68[3];
          v35[6] = v68[4];
          v35[7] = v37;
          v35[4] = v39;
          v35[5] = v38;
          v40 = v69[0];
          v42 = v68[6];
          v41 = v68[7];
          *(_OWORD *)((char *)v35 + 172) = *(_OWORD *)((char *)v69 + 12);
          v35[9] = v41;
          v35[10] = v40;
          v35[8] = v42;
          a4 = v63;
          v21 = (uint64_t)v64;
        }
        v17 = v67;
        if (!v18)
          break;
        --v18;
        v19 += 160;
      }
      swift_bridgeObjectRelease_n();
      v9 = v56;
    }
    else
    {
      swift_bridgeObjectRelease();
      v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v21 = (uint64_t)v64;
    }
    *(_QWORD *)(v21 + 40) = v20;
    sub_1D469C304(v21, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v43 = v61;
    v44 = v9;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v43 = sub_1D48A8614(0, *(_QWORD *)(v43 + 16) + 1, 1, v43);
    v45 = v57;
    v47 = *(_QWORD *)(v43 + 16);
    v46 = *(_QWORD *)(v43 + 24);
    v48 = v62;
    if (v47 >= v46 >> 1)
    {
      v51 = v43;
      v52 = v57;
      v53 = sub_1D48A8614(v46 > 1, v47 + 1, 1, v51);
      v45 = v52;
      v48 = v62;
      v43 = v53;
    }
    v61 = v43;
    v62 = v48 + 1;
    *(_QWORD *)(v43 + 16) = v47 + 1;
    v49 = v43 + v59 + v47 * v45;
    v9 = v44;
    v50 = (uint64_t)v44;
    v13 = v45;
    sub_1D46A8594(v50, v49);
    v12 = v64;
    sub_1D4697DE0((uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v14 = v62;
  }
  while (v62 != v60);
  swift_bridgeObjectRelease();
  return v61;
}

uint64_t sub_1D46DD284(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CE90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OntologyNode.debugDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OntologyNode.knowledgeGraphID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OntologyNode.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1D49226D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D49226D0();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D46DD390()
{
  return 0xD000000000000010;
}

uint64_t sub_1D46DD3C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D46DDE14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D46DD3E4()
{
  sub_1D46DDA38();
  return sub_1D4922F64();
}

uint64_t sub_1D46DD40C()
{
  sub_1D46DDA38();
  return sub_1D4922F70();
}

uint64_t OntologyNode.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D348);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v9[1] = *(_QWORD *)(v1 + 24);
  v9[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D46DDA38();
  sub_1D4922F58();
  v12 = 0;
  sub_1D4922D84();
  if (!v2)
  {
    v11 = 1;
    sub_1D4922D84();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t OntologyNode.hashValue.getter()
{
  sub_1D4922EF8();
  sub_1D49226D0();
  sub_1D49226D0();
  return sub_1D4922F34();
}

uint64_t OntologyNode.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA6B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D46DDA38();
  sub_1D4922F4C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = 0;
  v9 = sub_1D4922CE8();
  v11 = v10;
  v19 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_1D4922CE8();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v16;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D46DD76C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return OntologyNode.init(from:)(a1, a2);
}

uint64_t sub_1D46DD780(_QWORD *a1)
{
  return OntologyNode.encode(to:)(a1);
}

uint64_t sub_1D46DD798()
{
  sub_1D4922EF8();
  sub_1D49226D0();
  sub_1D49226D0();
  return sub_1D4922F34();
}

uint64_t sub_1D46DD7FC()
{
  sub_1D49226D0();
  return sub_1D49226D0();
}

uint64_t sub_1D46DD838()
{
  sub_1D4922EF8();
  sub_1D49226D0();
  sub_1D49226D0();
  return sub_1D4922F34();
}

uint64_t sub_1D46DD898()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D46DD8C4()
{
  sub_1D4922B80();
  sub_1D492270C();
  swift_bridgeObjectRetain();
  sub_1D492270C();
  swift_bridgeObjectRelease();
  sub_1D492270C();
  swift_bridgeObjectRetain();
  sub_1D492270C();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t _s18VisualIntelligence12OntologyNodeV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1D4922E38(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_1D4922E38();
  }
  return result;
}

unint64_t sub_1D46DDA38()
{
  unint64_t result;

  result = qword_1ED98CC10;
  if (!qword_1ED98CC10)
  {
    result = MEMORY[0x1D82634E0](&unk_1D49286D4, &type metadata for OntologyNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED98CC10);
  }
  return result;
}

unint64_t sub_1D46DDA80()
{
  unint64_t result;

  result = qword_1EFEAA6C0;
  if (!qword_1EFEAA6C0)
  {
    result = MEMORY[0x1D82634E0](&protocol conformance descriptor for OntologyNode, &type metadata for OntologyNode);
    atomic_store(result, (unint64_t *)&qword_1EFEAA6C0);
  }
  return result;
}

uint64_t destroy for OntologyNode()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for OntologyNode(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for OntologyNode(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for OntologyNode(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DurationMetric(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DurationMetric(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OntologyNode()
{
  return &type metadata for OntologyNode;
}

uint64_t storeEnumTagSinglePayload for OntologyNode.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D46DDCBC + 4 * byte_1D49284F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D46DDCF0 + 4 * asc_1D49284F0[v4]))();
}

uint64_t sub_1D46DDCF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46DDCF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D46DDD00);
  return result;
}

uint64_t sub_1D46DDD0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D46DDD14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D46DDD18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46DDD20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OntologyNode.CodingKeys()
{
  return &type metadata for OntologyNode.CodingKeys;
}

unint64_t sub_1D46DDD40()
{
  unint64_t result;

  result = qword_1EFEAA6C8;
  if (!qword_1EFEAA6C8)
  {
    result = MEMORY[0x1D82634E0](&unk_1D49286AC, &type metadata for OntologyNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFEAA6C8);
  }
  return result;
}

unint64_t sub_1D46DDD88()
{
  unint64_t result;

  result = qword_1ED98CC20;
  if (!qword_1ED98CC20)
  {
    result = MEMORY[0x1D82634E0](&unk_1D492861C, &type metadata for OntologyNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED98CC20);
  }
  return result;
}

unint64_t sub_1D46DDDD0()
{
  unint64_t result;

  result = qword_1ED98CC18;
  if (!qword_1ED98CC18)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4928644, &type metadata for OntologyNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED98CC18);
  }
  return result;
}

uint64_t sub_1D46DDE14(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001D4940880 || (sub_1D4922E38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D49408A0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1D4922E38();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D46DDEFC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD v33[5];
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _OWORD v37[2];
  uint64_t v38;
  uint64_t v39;

  v36 = a3;
  v5 = sub_1D4922370();
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v33 - v9;
  v11 = sub_1D4922664();
  MEMORY[0x1E0C80A78](v11);
  v12 = type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v16 = (void *)sub_1D49225F8();
  v17 = objc_msgSend(v15, sel_contentsAtPath_, v16);

  if (v17)
  {
    v33[3] = v8;
    v33[4] = a1;
    v18 = sub_1D4920F6C();
    v20 = v19;

    sub_1D484D52C(v18, v20);
    v29 = v28;
    v31 = v30;
    sub_1D4696F10(v18, v20);

    sub_1D492264C();
    sub_1D4922634();
    sub_1D46DE50C();
    memset(v37, 0, sizeof(v37));
    v38 = 0;
    sub_1D49221E4();
    sub_1D4696F10(v29, v31);
    return sub_1D46DE554((uint64_t)v14, (uint64_t)v36);
  }
  else
  {

    sub_1D470C76C((uint64_t)v10);
    swift_bridgeObjectRetain_n();
    v21 = sub_1D4922358();
    v22 = sub_1D492291C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      *(_QWORD *)&v37[0] = v24;
      *(_DWORD *)v23 = 136315138;
      swift_bridgeObjectRetain();
      v39 = sub_1D47F0250(a1, a2, (uint64_t *)v37);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D467C000, v21, v22, "Failed to load SearchConfig at path %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v24, -1, -1);
      MEMORY[0x1D82635B8](v23, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v35);
    v25 = v36;
    *v36 = 0;
    sub_1D4922010();
    v26 = (char *)v25 + *(int *)(v12 + 28);
    v27 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  }
}

unint64_t sub_1D46DE50C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED98E128;
  if (!qword_1ED98E128)
  {
    v1 = type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig();
    result = MEMORY[0x1D82634E0](&unk_1D492733C, v1);
    atomic_store(result, (unint64_t *)&qword_1ED98E128);
  }
  return result;
}

uint64_t sub_1D46DE554(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D46DE598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1D4922EF8();
    sub_1D49226D0();
    v6 = sub_1D4922F34();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1D4922E38() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1D4922E38() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1D46DE6CC(unsigned __int8 a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1D4922EF8();
    sub_1D46F8BC8(a1);
    sub_1D49226D0();
    swift_bridgeObjectRelease();
    v4 = sub_1D4922F34() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_1D46DED70(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EC08);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D46E128C();
  sub_1D4922F58();
  v8[15] = 0;
  sub_1D4922D84();
  if (!v1)
  {
    v8[14] = 1;
    sub_1D4922DA8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1D46DEEA0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];
  char v12;
  char v13;

  v11[0] = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EC00);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D46DF2E8();
  sub_1D4922F58();
  v13 = 0;
  sub_1D4922D84();
  if (!v4)
  {
    v11[1] = v11[0];
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D1C0);
    sub_1D46DFA28(&qword_1ED98D1C8, (uint64_t (*)(void))sub_1D46DF32C, MEMORY[0x1E0DEAF10]);
    sub_1D4922DCC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1D46DF00C()
{
  _BYTE *v0;

  if (*v0)
    return 0x65726F6373;
  else
    return 0x6D614E7373616C63;
}

uint64_t sub_1D46DF048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D46DF4D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D46DF06C()
{
  sub_1D46E128C();
  return sub_1D4922F64();
}

uint64_t sub_1D46DF094()
{
  sub_1D46E128C();
  return sub_1D4922F70();
}

BOOL sub_1D46DF0BC(uint64_t a1, uint64_t a2)
{
  float v2;
  float v3;
  char v5;
  _BOOL8 result;

  v2 = *(float *)(a1 + 16);
  v3 = *(float *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 == v3;
  v5 = sub_1D4922E38();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

void sub_1D46DF118(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  float v6;

  v6 = sub_1D46DF5C4(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
    *(float *)(a2 + 16) = v6;
  }
}

uint64_t sub_1D46DF144(_QWORD *a1)
{
  return sub_1D46DED70(a1);
}

uint64_t sub_1D46DF160()
{
  _BYTE *v0;

  if (*v0)
    return 0x73657373616C63;
  else
    return 0x4E52556C65646F6DLL;
}

uint64_t sub_1D46DF19C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D46DF758(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D46DF1C0()
{
  sub_1D46DF2E8();
  return sub_1D4922F64();
}

uint64_t sub_1D46DF1E8()
{
  sub_1D46DF2E8();
  return sub_1D4922F70();
}

uint64_t sub_1D46DF210(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_1D4922E38() & 1) != 0)
    return sub_1D48A2904(v2, v3);
  else
    return 0;
}

uint64_t sub_1D46DF270@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1D46DF848(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1D46DF29C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1D46DEEA0(a1, *v1, v1[1], v1[2]);
}

uint64_t type metadata accessor for ClassificationTopKProcessor()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for ClassificationInfo()
{
  return &type metadata for ClassificationInfo;
}

unint64_t sub_1D46DF2E8()
{
  unint64_t result;

  result = qword_1ED98DA08;
  if (!qword_1ED98DA08)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4928994, &type metadata for ClassificationInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED98DA08);
  }
  return result;
}

unint64_t sub_1D46DF32C()
{
  unint64_t result;

  result = qword_1ED98CD18;
  if (!qword_1ED98CD18)
  {
    result = MEMORY[0x1D82634E0](&unk_1D492896C, &type metadata for ClassificationItem);
    atomic_store(result, (unint64_t *)&qword_1ED98CD18);
  }
  return result;
}

_QWORD *sub_1D46DF370(uint64_t a1, int64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  _QWORD *result;
  int64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)result || v10 > v5[3] >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    result = sub_1D48A8D8C(result, v13, 1, v5);
    v5 = result;
  }
  v14 = &v5[a1 + 4];
  if (!v9)
    goto LABEL_20;
  v15 = v5[2];
  v16 = __OFSUB__(v15, a2);
  v17 = v15 - a2;
  if (v16)
    goto LABEL_26;
  if ((v17 & 0x8000000000000000) == 0)
  {
    result = v14 + 1;
    v18 = &v5[a2 + 4];
    if (v14 + 1 != v18 || result >= &v18[v17])
      result = memmove(result, v18, 8 * v17);
    v19 = v5[2];
    v16 = __OFADD__(v19, v9);
    v20 = v19 + v9;
    if (!v16)
    {
      v5[2] = v20;
LABEL_20:
      *v14 = a3;
      *(_QWORD *)v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (_QWORD *)sub_1D4922C88();
  __break(1u);
  return result;
}

uint64_t sub_1D46DF4D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D614E7373616C63 && a2 == 0xE900000000000065;
  if (v2 || (sub_1D4922E38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D4922E38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

float sub_1D46DF5C4(_QWORD *a1)
{
  uint64_t v1;
  float v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  float v9;
  uint64_t v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA6F0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D46E128C();
  sub_1D4922F4C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v12 = 0;
    sub_1D4922CE8();
    v11 = 1;
    swift_bridgeObjectRetain();
    sub_1D4922D0C();
    v2 = v9;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1D46DF758(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4E52556C65646F6DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1D4922E38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73657373616C63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D4922E38();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D46DF848(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[32];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA6D0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D46DF2E8();
  sub_1D4922F4C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v9[31] = 0;
    v7 = sub_1D4922CE8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D1C0);
    v9[15] = 1;
    sub_1D46DFA28(&qword_1EFEAA6D8, (uint64_t (*)(void))sub_1D46DFA90, MEMORY[0x1E0DEAF40]);
    swift_bridgeObjectRetain();
    sub_1D4922D30();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1D46DFA28(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED98D1C0);
    v8 = a2();
    result = MEMORY[0x1D82634E0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D46DFA90()
{
  unint64_t result;

  result = qword_1EFEAA6E0;
  if (!qword_1EFEAA6E0)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4928944, &type metadata for ClassificationItem);
    atomic_store(result, (unint64_t *)&qword_1EFEAA6E0);
  }
  return result;
}

uint64_t sub_1D46DFAD4(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t a5)
{
  unint64_t *v6;
  char *v8;
  char *v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  char *v25;
  unint64_t v26;
  char *v27;
  uint64_t result;
  unint64_t *v29;
  unint64_t *v30;
  char *v31;

  v6 = (unint64_t *)__dst;
  v8 = a2;
  v9 = __src;
  v10 = a2 - __src;
  v11 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v11 = a2 - __src;
  v12 = v11 >> 3;
  v13 = a3 - (_QWORD)a2;
  v14 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v14 = a3 - (_QWORD)a2;
  v15 = v14 >> 3;
  v31 = __src;
  v30 = (unint64_t *)__dst;
  if (v12 >= v14 >> 3)
  {
    if (v13 >= -7)
    {
      if (__dst != a2 || &a2[8 * v15] <= __dst)
        memmove(__dst, a2, 8 * v15);
      v21 = &v6[v15];
      v29 = v21;
      v31 = v8;
      if (v9 < v8 && v13 >= 8)
      {
        v22 = *(_QWORD *)(a5 + 16);
        v23 = (unint64_t *)(a3 - 8);
        while (1)
        {
          v24 = *(v21 - 1);
          if (v24 >= v22)
            break;
          v25 = v8 - 8;
          v26 = *((_QWORD *)v8 - 1);
          if (v26 >= v22)
            goto LABEL_49;
          v27 = (char *)(v23 + 1);
          if (*(float *)(a5 + 32 + 4 * v26) >= *(float *)(a5 + 32 + 4 * v24))
          {
            v29 = v21 - 1;
            if (v27 < (char *)v21 || v23 >= v21 || v27 != (char *)v21)
              *v23 = *(v21 - 1);
            --v21;
            if (v8 <= v9)
              goto LABEL_47;
          }
          else
          {
            if (v27 != v8 || v23 >= (unint64_t *)v8)
              *v23 = v26;
            v31 = v8 - 8;
            v8 -= 8;
            if (v25 <= v9)
              goto LABEL_47;
          }
          --v23;
          if (v21 <= v6)
            goto LABEL_47;
        }
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
LABEL_47:
      sub_1D46D57EC((void **)&v31, (const void **)&v30, &v29);
      return 1;
    }
  }
  else if (v10 >= -7)
  {
    if (__dst != __src || &__src[8 * v12] <= __dst)
      memmove(__dst, __src, 8 * v12);
    v16 = &v6[v12];
    v29 = v16;
    if ((unint64_t)v8 < a3 && v10 >= 8)
    {
      v17 = *(_QWORD *)(a5 + 16);
      while (1)
      {
        v18 = *(_QWORD *)v8;
        if (*(_QWORD *)v8 >= v17)
          break;
        v19 = *v6;
        if (*v6 >= v17)
          goto LABEL_51;
        if (*(float *)(a5 + 32 + 4 * v19) >= *(float *)(a5 + 32 + 4 * v18))
        {
          if (v9 != (char *)v6)
            *(_QWORD *)v9 = v19;
          v30 = ++v6;
          v20 = v8;
        }
        else
        {
          v20 = v8 + 8;
          if (v9 < v8 || v9 >= v20 || v9 != v8)
            *(_QWORD *)v9 = v18;
        }
        v9 += 8;
        if (v6 < v16)
        {
          v8 = v20;
          if ((unint64_t)v20 < a3)
            continue;
        }
        v31 = v9;
        goto LABEL_47;
      }
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    goto LABEL_47;
  }
LABEL_52:
  swift_bridgeObjectRelease();
  result = sub_1D4922C88();
  __break(1u);
  return result;
}

uint64_t sub_1D46DFD9C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  if (a3 != a2)
  {
    v5 = *a4;
    v6 = *(_QWORD *)(a5 + 16);
    v7 = *a4 + 8 * a3 - 8;
LABEL_5:
    v8 = *(_QWORD *)(v5 + 8 * a3);
    v9 = result;
    v10 = (unint64_t *)v7;
    while (v8 < v6)
    {
      v11 = *v10;
      if (*v10 >= v6)
        goto LABEL_13;
      if (*(float *)(a5 + 32 + 4 * v11) < *(float *)(a5 + 32 + 4 * v8))
      {
        if (!v5)
          goto LABEL_14;
        *v10 = v8;
        v10[1] = v11;
        --v10;
        if (a3 != ++v9)
          continue;
      }
      ++a3;
      v7 += 8;
      if (a3 == a2)
        return result;
      goto LABEL_5;
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  return result;
}

uint64_t sub_1D46DFE24(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  float v18;
  float v19;
  float v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  unint64_t v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  unint64_t v93;
  char *v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *__dst;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;

  v4 = a1[1];
  swift_bridgeObjectRetain_n();
  v5 = sub_1D4922E08();
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_150;
    if (!v4)
      return swift_bridgeObjectRelease_n();
    swift_bridgeObjectRetain();
    sub_1D46DFD9C(0, v4, 1, a1, a2);
    if (!v111)
      return swift_bridgeObjectRelease_n();
    goto LABEL_121;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_158;
  v106 = a2;
  v102 = v4;
  v100 = v5;
  v98 = a1;
  if (v4 < 2)
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v99 = MEMORY[0x1E0DEE9D8];
    if (v4 == 1)
      goto LABEL_13;
    v34 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_106:
    if (v34 >= 2)
    {
      v87 = *v98;
      v110 = *v98;
      while (1)
      {
        v88 = v34 - 2;
        if (v34 < 2)
          break;
        if (!v87)
          goto LABEL_157;
        v108 = v10;
        v89 = *(_QWORD *)&v10[16 * v88 + 32];
        v90 = *(_QWORD *)&v10[16 * v34 + 24];
        v91 = (char *)(v87 + 8 * v89);
        v92 = (char *)(v87 + 8 * *(_QWORD *)&v10[16 * v34 + 16]);
        v93 = v87 + 8 * v90;
        swift_bridgeObjectRetain();
        sub_1D46DFAD4(v91, v92, v93, __dst, v106);
        if (v111)
          goto LABEL_118;
        swift_bridgeObjectRelease();
        if (v90 < v89)
          goto LABEL_142;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v108 = sub_1D46D5B88((uint64_t)v108);
        v10 = v108;
        if (v88 >= *((_QWORD *)v108 + 2))
          goto LABEL_143;
        v94 = &v108[16 * v88 + 32];
        *(_QWORD *)v94 = v89;
        *((_QWORD *)v94 + 1) = v90;
        v95 = *((_QWORD *)v108 + 2);
        if (v34 > v95)
          goto LABEL_144;
        memmove(&v108[16 * v34 + 16], &v108[16 * v34 + 32], 16 * (v95 - v34));
        *((_QWORD *)v108 + 2) = v95 - 1;
        v34 = v95 - 1;
        v87 = v110;
        if (v95 <= 2)
          goto LABEL_119;
      }
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
      goto LABEL_153;
    }
LABEL_119:
    swift_bridgeObjectRelease();
    v96 = v99;
LABEL_120:
    *(_QWORD *)(v96 + 16) = 0;
LABEL_121:
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  v7 = v6 >> 1;
  v8 = sub_1D4922850();
  *(_QWORD *)(v8 + 16) = v7;
  v99 = v8;
  __dst = (char *)(v8 + 32);
LABEL_13:
  v11 = 0;
  v12 = *a1;
  v101 = a2 + 32;
  v97 = *a1 - 8;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v13 = v4;
  v104 = *a1;
  while (1)
  {
    v14 = v11 + 1;
    if (v11 + 1 >= v13)
      goto LABEL_35;
    v15 = *(_QWORD *)(v12 + 8 * v14);
    if ((v15 & 0x8000000000000000) != 0)
      goto LABEL_146;
    v16 = *(_QWORD *)(a2 + 16);
    if (v15 >= v16)
      goto LABEL_147;
    v17 = *(_QWORD *)(v12 + 8 * v11);
    if (v17 >= v16)
      goto LABEL_148;
    v18 = *(float *)(v101 + 4 * v15);
    v19 = *(float *)(v101 + 4 * v17);
    v14 = v11 + 2;
    if (v11 + 2 >= v13)
      goto LABEL_25;
    v20 = *(float *)(v101 + 4 * v15);
    do
    {
      v21 = *(_QWORD *)(v12 + 8 * v14);
      if (v21 >= v16)
        goto LABEL_128;
      if (v15 >= v16)
      {
LABEL_129:
        __break(1u);
LABEL_130:
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
        goto LABEL_141;
      }
      if (v19 < v18 == v20 >= *(float *)(v101 + 4 * v21))
        goto LABEL_25;
      ++v14;
      v20 = *(float *)(v101 + 4 * v21);
      v15 = v21;
    }
    while (v13 != v14);
    v14 = v13;
LABEL_25:
    if (v19 < v18)
      break;
LABEL_35:
    if (v14 < v13)
    {
      if (__OFSUB__(v14, v11))
        goto LABEL_149;
      if (v14 - v11 < v100)
      {
        v25 = v11 + v100;
        if (__OFADD__(v11, v100))
          goto LABEL_151;
        if (v25 >= v13)
          v25 = v13;
        if (v25 < v11)
          goto LABEL_152;
        if (v14 != v25)
        {
          v26 = *(_QWORD *)(a2 + 16);
          v27 = (unint64_t *)(v97 + 8 * v14);
          do
          {
            v28 = *(_QWORD *)(v12 + 8 * v14);
            v29 = v11;
            v30 = v27;
            do
            {
              if (v28 >= v26)
              {
                __break(1u);
LABEL_123:
                __break(1u);
LABEL_124:
                __break(1u);
LABEL_125:
                __break(1u);
LABEL_126:
                __break(1u);
LABEL_127:
                __break(1u);
LABEL_128:
                __break(1u);
                goto LABEL_129;
              }
              v31 = *v30;
              if (*v30 >= v26)
                goto LABEL_123;
              if (*(float *)(v101 + 4 * v31) >= *(float *)(v101 + 4 * v28))
                break;
              if (!v12)
                goto LABEL_154;
              *v30 = v28;
              v30[1] = v31;
              --v30;
              ++v29;
            }
            while (v14 != v29);
            ++v14;
            ++v27;
          }
          while (v14 != v25);
          v14 = v25;
        }
      }
    }
    if (v14 < v11)
      goto LABEL_145;
    v103 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1D46D5278(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v33 = *((_QWORD *)v10 + 2);
    v32 = *((_QWORD *)v10 + 3);
    v107 = v10;
    v34 = v33 + 1;
    v12 = v104;
    if (v33 >= v32 >> 1)
    {
      v86 = sub_1D46D5278((char *)(v32 > 1), v33 + 1, 1, v10);
      v12 = v104;
      v107 = v86;
    }
    *((_QWORD *)v107 + 2) = v34;
    v35 = v107 + 32;
    v36 = &v107[16 * v33 + 32];
    *(_QWORD *)v36 = v11;
    *((_QWORD *)v36 + 1) = v14;
    if (v33)
    {
      v10 = v107;
      while (1)
      {
        v37 = v34 - 1;
        if (v34 >= 4)
        {
          v42 = &v35[16 * v34];
          v43 = *((_QWORD *)v42 - 8);
          v44 = *((_QWORD *)v42 - 7);
          v48 = __OFSUB__(v44, v43);
          v45 = v44 - v43;
          if (v48)
            goto LABEL_130;
          v47 = *((_QWORD *)v42 - 6);
          v46 = *((_QWORD *)v42 - 5);
          v48 = __OFSUB__(v46, v47);
          v40 = v46 - v47;
          v41 = v48;
          if (v48)
            goto LABEL_131;
          v49 = v34 - 2;
          v50 = &v35[16 * v34 - 32];
          v52 = *(_QWORD *)v50;
          v51 = *((_QWORD *)v50 + 1);
          v48 = __OFSUB__(v51, v52);
          v53 = v51 - v52;
          if (v48)
            goto LABEL_133;
          v48 = __OFADD__(v40, v53);
          v54 = v40 + v53;
          if (v48)
            goto LABEL_136;
          if (v54 >= v45)
          {
            v72 = &v35[16 * v37];
            v74 = *(_QWORD *)v72;
            v73 = *((_QWORD *)v72 + 1);
            v48 = __OFSUB__(v73, v74);
            v75 = v73 - v74;
            if (v48)
              goto LABEL_140;
            v65 = v40 < v75;
            goto LABEL_91;
          }
        }
        else
        {
          if (v34 != 3)
          {
            v66 = *((_QWORD *)v10 + 4);
            v67 = *((_QWORD *)v10 + 5);
            v48 = __OFSUB__(v67, v66);
            v59 = v67 - v66;
            v60 = v48;
            goto LABEL_85;
          }
          v39 = *((_QWORD *)v10 + 4);
          v38 = *((_QWORD *)v10 + 5);
          v48 = __OFSUB__(v38, v39);
          v40 = v38 - v39;
          v41 = v48;
        }
        if ((v41 & 1) != 0)
          goto LABEL_132;
        v49 = v34 - 2;
        v55 = &v35[16 * v34 - 32];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v58 = __OFSUB__(v56, v57);
        v59 = v56 - v57;
        v60 = v58;
        if (v58)
          goto LABEL_135;
        v61 = &v35[16 * v37];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        v48 = __OFSUB__(v62, v63);
        v64 = v62 - v63;
        if (v48)
          goto LABEL_138;
        if (__OFADD__(v59, v64))
          goto LABEL_139;
        if (v59 + v64 >= v40)
        {
          v65 = v40 < v64;
LABEL_91:
          if (v65)
            v37 = v49;
          goto LABEL_93;
        }
LABEL_85:
        if ((v60 & 1) != 0)
          goto LABEL_134;
        v68 = &v35[16 * v37];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v48 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v48)
          goto LABEL_137;
        if (v71 < v59)
          goto LABEL_102;
LABEL_93:
        v76 = v37 - 1;
        if (v37 - 1 >= v34)
          goto LABEL_124;
        if (!v12)
          goto LABEL_155;
        v77 = &v35[16 * v76];
        v78 = v35;
        v79 = *(_QWORD *)v77;
        v80 = v37;
        v81 = &v78[16 * v37];
        v82 = *((_QWORD *)v81 + 1);
        v109 = (char *)(v12 + 8 * *(_QWORD *)v77);
        v83 = (char *)(v12 + 8 * *(_QWORD *)v81);
        v84 = v12 + 8 * v82;
        a2 = v106;
        swift_bridgeObjectRetain();
        sub_1D46DFAD4(v109, v83, v84, __dst, v106);
        if (v111)
        {
LABEL_118:
          v96 = v99;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_120;
        }
        swift_bridgeObjectRelease();
        if (v82 < v79)
          goto LABEL_125;
        v10 = v107;
        if (v80 > *((_QWORD *)v107 + 2))
          goto LABEL_126;
        *(_QWORD *)v77 = v79;
        v35 = v107 + 32;
        *(_QWORD *)&v107[16 * v76 + 40] = v82;
        v85 = *((_QWORD *)v107 + 2);
        if (v80 >= v85)
          goto LABEL_127;
        v34 = v85 - 1;
        memmove(v81, v81 + 16, 16 * (v85 - 1 - v80));
        *((_QWORD *)v107 + 2) = v85 - 1;
        v12 = v104;
        if (v85 <= 2)
          goto LABEL_102;
      }
    }
    v34 = 1;
    v10 = v107;
LABEL_102:
    v13 = v102;
    v11 = v103;
    if (v103 >= v102)
      goto LABEL_106;
  }
  if (v14 >= v11)
  {
    if (v11 < v14)
    {
      v22 = v14 - 1;
      v23 = v11;
      while (1)
      {
        if (v23 != v22)
        {
          if (!v12)
            goto LABEL_156;
          v24 = *(_QWORD *)(v12 + 8 * v23);
          *(_QWORD *)(v12 + 8 * v23) = *(_QWORD *)(v12 + 8 * v22);
          *(_QWORD *)(v12 + 8 * v22) = v24;
        }
        v65 = ++v23 < v22--;
        if (!v65)
          goto LABEL_35;
      }
    }
    goto LABEL_35;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_155:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_156:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_157:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_158:
  swift_bridgeObjectRelease_n();
  result = sub_1D4922C28();
  __break(1u);
  return result;
}

uint64_t sub_1D46E05E4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v4 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_1D46D74F8(v4);
  v5 = *(_QWORD *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  sub_1D46DFE24(v7, a2);
  swift_bridgeObjectRelease();
  *a1 = v4;
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1D46E0684(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  float v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;

  if ((a3 & 1) != 0)
  {
    v19 = *(_QWORD *)(a1 + 16);
    if (!v19)
      goto LABEL_43;
    v21 = (_QWORD *)sub_1D485218C(0, v19 - 1);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1D46E05E4((uint64_t *)&v21, a1);
    swift_release();
    swift_bridgeObjectRelease();
    return (uint64_t)v21;
  }
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    return (uint64_t)v4;
  v7 = 0;
  v8 = a1 + 32;
  while (1)
  {
    v9 = v4[2];
    if (!v9)
      goto LABEL_16;
    v10 = v4[4];
    if (v10 >= v5)
      goto LABEL_40;
    v11 = *(float *)(v8 + 4 * v7);
    if (*(float *)(v8 + 4 * v10) >= v11)
      break;
    v12 = 0;
LABEL_9:
    sub_1D46DF370(v12, v12, v7);
    v4 = v21;
    v9 = v21[2];
LABEL_22:
    if (v9 > a2)
    {
      while (v9)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
          v18 = v4[2];
          if (!v18)
            goto LABEL_37;
        }
        else
        {
          v4 = sub_1D47DFA84(v4);
          v18 = v4[2];
          if (!v18)
            goto LABEL_37;
        }
        v9 = v18 - 1;
        v4[2] = v18 - 1;
        if (v18 - 1 <= a2)
        {
          v21 = v4;
          goto LABEL_4;
        }
      }
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
LABEL_4:
    if (++v7 == v5)
      return (uint64_t)v4;
  }
  if (v9 == 1)
  {
LABEL_16:
    if (v9 < a2)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_1D48A8D8C(0, v9 + 1, 1, v4);
      v17 = v4[2];
      v16 = v4[3];
      v9 = v17 + 1;
      if (v17 >= v16 >> 1)
        v4 = sub_1D48A8D8C((_QWORD *)(v16 > 1), v17 + 1, 1, v4);
      v4[2] = v9;
      v4[v17 + 4] = v7;
      v21 = v4;
    }
    goto LABEL_22;
  }
  v13 = 5;
  while (1)
  {
    v14 = v4[v13];
    if (v14 >= v5)
      break;
    v12 = v13 - 4;
    if (*(float *)(v8 + 4 * v14) < v11)
    {
      if (v9 < v12)
        goto LABEL_41;
      if ((v12 & 0x8000000000000000) == 0)
        goto LABEL_9;
      goto LABEL_42;
    }
    v15 = v13 - 3;
    if (__OFADD__(v12, 1))
      goto LABEL_39;
    ++v13;
    if (v15 == v9)
      goto LABEL_16;
  }
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  swift_bridgeObjectRelease();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1D46E08D0(void *a1, uint64_t a2, char a3)
{
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  int v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = objc_msgSend(a1, sel_numberArray);
  sub_1D46C2548();
  v6 = sub_1D4922820();

  if (!(v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    v17 = sub_1D46E0684(v10, a2, a3 & 1);
    swift_bridgeObjectRelease();
    return v17;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1D4922C4C();
  swift_bridgeObjectRelease();
  if (!v7)
    goto LABEL_13;
LABEL_3:
  v18 = MEMORY[0x1E0DEE9D8];
  result = sub_1D48AC004(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v9 = 0;
    v10 = v18;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        v11 = (id)MEMORY[0x1D8261F20](v9, v6);
      else
        v11 = *(id *)(v6 + 8 * v9 + 32);
      v12 = v11;
      objc_msgSend(v11, sel_floatValue);
      v14 = v13;

      v16 = *(_QWORD *)(v18 + 16);
      v15 = *(_QWORD *)(v18 + 24);
      if (v16 >= v15 >> 1)
        sub_1D48AC004(v15 > 1, v16 + 1, 1);
      ++v9;
      *(_QWORD *)(v18 + 16) = v16 + 1;
      *(_DWORD *)(v18 + 4 * v16 + 32) = v14;
    }
    while (v7 != v9);
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1D46E0A8C(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(uint64_t, id, uint64_t), uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *result;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  _QWORD *v29;
  BOOL v30;
  id v31;
  int v32;
  int v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  char *v42;
  uint8_t *v43;
  uint8_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  id v53;
  uint64_t (*v54)(uint64_t, id, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v54 = a4;
  v55 = a5;
  v53 = a2;
  v7 = sub_1D4922370();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1D48A9474(0, a1 & ~(a1 >> 63), 0, MEMORY[0x1E0DEE9D8]);
  v57 = MEMORY[0x1E0DEE9E8];
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v12 = result;
    if (a1)
    {
      v13 = *(_QWORD *)(a3 + 16);
      if (v13)
      {
        v46 = v10;
        v47 = v8;
        v48 = v7;
        v14 = 0;
        v49 = v13;
        v50 = a3 + 32;
        v15 = 1;
        v16 = v53;
        v51 = a3;
        while (1)
        {
          v17 = v54(v14, v16, a3);
          if (v18)
          {
            v19 = v17;
            v20 = v18;
            v21 = v57;
            if (!*(_QWORD *)(v57 + 16))
              goto LABEL_23;
            v52 = v12;
            sub_1D4922EF8();
            swift_bridgeObjectRetain();
            sub_1D49226D0();
            v22 = sub_1D4922F34();
            v23 = -1 << *(_BYTE *)(v21 + 32);
            v24 = v22 & ~v23;
            if (((*(_QWORD *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
              goto LABEL_22;
            v25 = *(_QWORD *)(v21 + 48);
            v26 = (_QWORD *)(v25 + 16 * v24);
            v27 = *v26 == v19 && v20 == v26[1];
            if (!v27 && (sub_1D4922E38() & 1) == 0)
            {
              v28 = ~v23;
              while (1)
              {
                v24 = (v24 + 1) & v28;
                if (((*(_QWORD *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
                  break;
                v29 = (_QWORD *)(v25 + 16 * v24);
                v30 = *v29 == v19 && v20 == v29[1];
                if (v30 || (sub_1D4922E38() & 1) != 0)
                  goto LABEL_13;
              }
LABEL_22:
              swift_bridgeObjectRelease();
              v12 = v52;
              v13 = v49;
LABEL_23:
              swift_bridgeObjectRetain();
              sub_1D47CC84C(&v56, v19, v20);
              swift_bridgeObjectRelease();
              v16 = v53;
              v31 = objc_msgSend(v53, sel_objectAtIndexedSubscript_, *(_QWORD *)(v50 + 8 * v14));
              objc_msgSend(v31, sel_floatValue);
              v33 = v32;

              v35 = v12[2];
              v34 = v12[3];
              v36 = v35 + 1;
              if (v35 >= v34 >> 1)
                v12 = sub_1D48A9474((_QWORD *)(v34 > 1), v35 + 1, 1, v12);
              v12[2] = v36;
              v37 = &v12[3 * v35];
              v37[4] = v19;
              v37[5] = v20;
              *((_DWORD *)v37 + 12) = v33;
              if (v36 == a1)
                goto LABEL_33;
              a3 = v51;
              goto LABEL_27;
            }
LABEL_13:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a3 = v51;
            v12 = v52;
            v13 = v49;
            v16 = v53;
          }
LABEL_27:
          if (v15 == a1)
            goto LABEL_33;
          v14 = v15;
          v27 = v15++ == v13;
          if (v27)
          {
            v8 = v47;
            v7 = v48;
            v10 = v46;
            break;
          }
        }
      }
      swift_bridgeObjectRelease();
      sub_1D470C76C((uint64_t)v10);
      v38 = sub_1D4922358();
      v39 = sub_1D4922910();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        v41 = v13;
        v42 = v10;
        v43 = v40;
        *(_DWORD *)v40 = 134217984;
        v56 = v41;
        sub_1D4922A78();
        _os_log_impl(&dword_1D467C000, v38, v39, "Invalid index %ld", v43, 0xCu);
        v44 = v43;
        v10 = v42;
        MEMORY[0x1D82635B8](v44, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
LABEL_33:
      swift_bridgeObjectRelease();
    }
    return v12;
  }
  return result;
}

uint64_t sub_1D46E0E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t (*a7)(uint64_t, id, uint64_t), uint64_t a8)
{
  uint64_t v10;
  unint64_t v16;
  char v17;
  int v18;
  id v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v10 = *(_QWORD *)(a1 + 24);
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_7;
  swift_bridgeObjectRetain();
  v16 = sub_1D47CA4DC(a2, a3);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    sub_1D4922B80();
    swift_bridgeObjectRelease();
    sub_1D492270C();
    sub_1D46AAFD4();
    swift_allocError();
    *(_QWORD *)v22 = 0xD00000000000001BLL;
    *(_QWORD *)(v22 + 8) = 0x80000001D4940940;
    *(_BYTE *)(v22 + 16) = 4;
    return swift_willThrow();
  }
  v18 = a6 & 1;
  v19 = *(id *)(*(_QWORD *)(v10 + 56) + 8 * v16);
  swift_bridgeObjectRelease();
  v20 = sub_1D46E08D0(v19, a5, v18);
  if (v18)
    a5 = *(_QWORD *)(v20 + 16);
  sub_1D46E0A8C(a5, v19, v20, a7, a8);
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(a4 + *(int *)(type metadata accessor for MLModelInfo(0) + 24));
  swift_bridgeObjectRetain();
  sub_1D492270C();

  return v23;
}

ValueMetadata *type metadata accessor for ClassificationInfo.CodingKeys()
{
  return &type metadata for ClassificationInfo.CodingKeys;
}

uint64_t sub_1D46E1044(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClassificationItem(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy20_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ClassificationItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClassificationItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 20))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClassificationItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 20) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 20) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassificationItem()
{
  return &type metadata for ClassificationItem;
}

unint64_t sub_1D46E11B8()
{
  unint64_t result;

  result = qword_1EFEAA6E8;
  if (!qword_1EFEAA6E8)
  {
    result = MEMORY[0x1D82634E0](&unk_1D492891C, &type metadata for ClassificationInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFEAA6E8);
  }
  return result;
}

unint64_t sub_1D46E1200()
{
  unint64_t result;

  result = qword_1ED98DA18;
  if (!qword_1ED98DA18)
  {
    result = MEMORY[0x1D82634E0](&unk_1D492888C, &type metadata for ClassificationInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED98DA18);
  }
  return result;
}

unint64_t sub_1D46E1248()
{
  unint64_t result;

  result = qword_1ED98DA10;
  if (!qword_1ED98DA10)
  {
    result = MEMORY[0x1D82634E0](&unk_1D49288B4, &type metadata for ClassificationInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED98DA10);
  }
  return result;
}

unint64_t sub_1D46E128C()
{
  unint64_t result;

  result = qword_1ED98DA20;
  if (!qword_1ED98DA20)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4928A9C, &type metadata for ClassificationItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED98DA20);
  }
  return result;
}

uint64_t _s18VisualIntelligence18ClassificationInfoV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D46E131C + 4 * byte_1D4928769[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D46E1350 + 4 * byte_1D4928764[v4]))();
}

uint64_t sub_1D46E1350(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46E1358(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D46E1360);
  return result;
}

uint64_t sub_1D46E136C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D46E1374);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D46E1378(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46E1380(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClassificationItem.CodingKeys()
{
  return &type metadata for ClassificationItem.CodingKeys;
}

unint64_t sub_1D46E13A0()
{
  unint64_t result;

  result = qword_1EFEAA6F8;
  if (!qword_1EFEAA6F8)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4928A74, &type metadata for ClassificationItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFEAA6F8);
  }
  return result;
}

unint64_t sub_1D46E13E8()
{
  unint64_t result;

  result = qword_1ED98DA30;
  if (!qword_1ED98DA30)
  {
    result = MEMORY[0x1D82634E0](&unk_1D49289E4, &type metadata for ClassificationItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED98DA30);
  }
  return result;
}

unint64_t sub_1D46E1430()
{
  unint64_t result;

  result = qword_1ED98DA28;
  if (!qword_1ED98DA28)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4928A0C, &type metadata for ClassificationItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED98DA28);
  }
  return result;
}

uint64_t sub_1D46E1484(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char *v59;
  uint64_t v60;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v59 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v59 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v59 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v59 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v59 - v16;
  sub_1D46C2AA4(a1, v2 + OBJC_IVAR____TtC18VisualIntelligence38ClassificationNatureworldPostProcessor_modelInfo);
  v18 = *(int *)(type metadata accessor for MLModelInfo(0) + 36);
  v60 = a1;
  v19 = *(_QWORD *)(a1 + v18);
  if (*(_QWORD *)(v19 + 16) && (v20 = sub_1D47CA6B4(7), (v21 & 1) != 0))
  {
    v22 = v20;
    v23 = *(_QWORD *)(v19 + 56);
    v24 = sub_1D4920F18();
    v25 = *(_QWORD *)(v24 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v17, v23 + *(_QWORD *)(v25 + 72) * v22, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v17, 0, 1, v24);
  }
  else
  {
    v26 = sub_1D4920F18();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v17, 1, 1, v26);
  }
  type metadata accessor for FileMapper();
  swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_1D47E2F48((uint64_t)v17);
  if (*(_QWORD *)(v19 + 16) && (v27 = sub_1D47CA6B4(8), (v28 & 1) != 0))
  {
    v29 = v27;
    v30 = *(_QWORD *)(v19 + 56);
    v31 = sub_1D4920F18();
    v32 = *(_QWORD *)(v31 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v15, v30 + *(_QWORD *)(v32 + 72) * v29, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v15, 0, 1, v31);
  }
  else
  {
    v33 = sub_1D4920F18();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v15, 1, 1, v33);
  }
  swift_allocObject();
  *(_QWORD *)(v2 + 24) = sub_1D47E2F48((uint64_t)v15);
  if (*(_QWORD *)(v19 + 16) && (v34 = sub_1D47CA6B4(3), (v35 & 1) != 0))
  {
    v36 = v34;
    v37 = *(_QWORD *)(v19 + 56);
    v38 = sub_1D4920F18();
    v39 = *(_QWORD *)(v38 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v12, v37 + *(_QWORD *)(v39 + 72) * v36, v38);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v12, 0, 1, v38);
  }
  else
  {
    v40 = sub_1D4920F18();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v12, 1, 1, v40);
  }
  swift_allocObject();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC18VisualIntelligence38ClassificationNatureworldPostProcessor_catMapper) = sub_1D47E2F48((uint64_t)v12);
  if (*(_QWORD *)(v19 + 16) && (v41 = sub_1D47CA6B4(4), (v42 & 1) != 0))
  {
    v43 = v41;
    v44 = *(_QWORD *)(v19 + 56);
    v45 = sub_1D4920F18();
    v46 = *(_QWORD *)(v45 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v9, v44 + *(_QWORD *)(v46 + 72) * v43, v45);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v9, 0, 1, v45);
  }
  else
  {
    v47 = sub_1D4920F18();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v9, 1, 1, v47);
  }
  swift_allocObject();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC18VisualIntelligence38ClassificationNatureworldPostProcessor_dogMapper) = sub_1D47E2F48((uint64_t)v9);
  if (*(_QWORD *)(v19 + 16) && (v48 = sub_1D47CA6B4(5), (v49 & 1) != 0))
  {
    v50 = v48;
    v51 = *(_QWORD *)(v19 + 56);
    v52 = sub_1D4920F18();
    v53 = *(_QWORD *)(v52 - 8);
    v54 = v51 + *(_QWORD *)(v53 + 72) * v50;
    v55 = (uint64_t)v59;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v59, v54, v52);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v55, 0, 1, v52);
  }
  else
  {
    v56 = sub_1D4920F18();
    v55 = (uint64_t)v59;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v59, 1, 1, v56);
  }
  swift_allocObject();
  v57 = sub_1D47E2F48(v55);
  sub_1D46C35F0(v60);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC18VisualIntelligence38ClassificationNatureworldPostProcessor_catCoatMapper) = v57;
  return v2;
}

uint64_t sub_1D46E190C(_QWORD *a1, uint64_t a2, _BYTE *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[160];
  uint64_t v44;

  v40 = sub_1D4922370();
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v41 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a3[104];
  if (sub_1D46F8BC8(v10) == 1937006947 && v11 == 0xE400000000000000)
    goto LABEL_8;
  v13 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
    goto LABEL_9;
  if (sub_1D46F8BC8(v10) == 1936158564 && v14 == 0xE400000000000000)
    goto LABEL_8;
  v20 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
    goto LABEL_9;
  if (sub_1D46F8BC8(v10) == 0x736C616D696E61 && v21 == 0xE700000000000000)
    goto LABEL_8;
  v22 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  if ((v22 & 1) != 0)
    goto LABEL_9;
  if (sub_1D46F8BC8(v10) == 0x7364726962 && v23 == 0xE500000000000000)
    goto LABEL_8;
  v24 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  if ((v24 & 1) != 0)
    goto LABEL_9;
  if (sub_1D46F8BC8(v10) == 0x73746365736E69 && v25 == 0xE700000000000000)
    goto LABEL_8;
  v26 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  if ((v26 & 1) != 0)
    goto LABEL_9;
  if (sub_1D46F8BC8(v10) == 0x73656C6974706572 && v27 == 0xE800000000000000)
    goto LABEL_8;
  v28 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  if ((v28 & 1) != 0)
    goto LABEL_9;
  if (sub_1D46F8BC8(v10) == 0x736C616D6D616DLL && v29 == 0xE700000000000000)
    goto LABEL_8;
  v30 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  if ((v30 & 1) != 0)
    goto LABEL_9;
  if (sub_1D46F8BC8(v10) == 0x65727574616ELL && v31 == 0xE600000000000000)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v15 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
LABEL_9:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EC50);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1D49273C0;
    v16 = sub_1D46E1E94(a1, a3, a4, a2);
    if (v4)
    {
      *(_QWORD *)(v15 + 16) = 0;
      swift_release();
    }
    else
    {
      *(_QWORD *)(v15 + 32) = v16;
      *(_QWORD *)(v15 + 40) = v17;
      *(_QWORD *)(v15 + 48) = v18;
    }
    return v15;
  }
  sub_1D470C76C(v41);
  sub_1D46E3084((uint64_t)a3, (uint64_t)v43);
  v32 = sub_1D4922358();
  v33 = sub_1D492291C();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    v44 = v35;
    *(_DWORD *)v34 = 136315138;
    v15 = (uint64_t)(v34 + 12);
    v36 = sub_1D46F8BC8(v43[104]);
    v42 = sub_1D47F0250(v36, v37, &v44);
    sub_1D4922A78();
    swift_bridgeObjectRelease();
    sub_1D46B2A28((uint64_t)v43);
    _os_log_impl(&dword_1D467C000, v32, v33, "Invalid domain for natureworld: %s", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v35, -1, -1);
    MEMORY[0x1D82635B8](v34, -1, -1);
  }
  else
  {
    sub_1D46B2A28((uint64_t)v43);
  }

  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v40);
  sub_1D46AAFD4();
  swift_allocError();
  *(_QWORD *)v38 = 0xD00000000000001ALL;
  *(_QWORD *)(v38 + 8) = 0x80000001D49409F0;
  *(_BYTE *)(v38 + 16) = 3;
  swift_willThrow();
  return v15;
}

uint64_t sub_1D46E1E94(_QWORD *a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  const char *v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, id, uint64_t);
  uint64_t v52;
  _BYTE *v53;
  char v54;
  uint64_t v55;
  char v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  uint64_t v89;
  char v90;
  char v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  NSObject *v99;
  os_log_type_t v100;
  uint8_t *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  NSObject *v106;
  os_log_type_t v107;
  uint8_t *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _BYTE *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unsigned __int8 v127;
  _QWORD *v128;

  v121 = a3;
  v122 = a2;
  v6 = sub_1D4922370();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v113 - v11;
  if (a4 <= 2)
    v13 = 2;
  else
    v13 = a4;
  v15 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v16 = v123;
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v15, v14);
  if (v16)
    return v13;
  v117 = 0;
  v116 = v12;
  v18 = v121;
  v119 = v13;
  v113 = v10;
  v118 = a1;
  v114 = v7;
  v115 = v6;
  v123 = v17;
  v19 = v122[104];
  if (sub_1D46F8BC8(v19) == 0x65727574616ELL && v20 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    v24 = *(_QWORD *)(v123 + 24);
    if (*(_QWORD *)(v24 + 16))
    {
      v25 = sub_1D47CA4DC(0x73746E616C70, 0xE600000000000000);
      if ((v26 & 1) != 0)
      {
        v27 = *(void **)(*(_QWORD *)(v24 + 56) + 8 * v25);
        if (v18)
        {
          v28 = *(_QWORD *)(v18 + 16);
          v13 = v27;
          v29 = v119;
          if (v28)
          {
            v30 = 0x73746E616C70;
            v31 = 0xE600000000000000;
            goto LABEL_35;
          }
LABEL_44:
          v121 = 0;
          goto LABEL_45;
        }
        goto LABEL_41;
      }
    }
    sub_1D46AAFD4();
    swift_allocError();
    v33 = 0xD000000000000016;
    v34 = "invalid nature results";
    goto LABEL_38;
  }
  v22 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  if ((v22 & 1) != 0)
    goto LABEL_14;
  if (sub_1D46F8BC8(v19) != 0x736C616D6D616DLL || v23 != 0xE700000000000000)
  {
    v35 = sub_1D4922E38();
    swift_bridgeObjectRelease();
    if ((v35 & 1) != 0)
      goto LABEL_30;
    if (sub_1D46F8BC8(v19) != 0x7364726962 || v36 != 0xE500000000000000)
    {
      v37 = sub_1D4922E38();
      swift_bridgeObjectRelease();
      if ((v37 & 1) != 0)
        goto LABEL_30;
      if (sub_1D46F8BC8(v19) != 0x73746365736E69 || v38 != 0xE700000000000000)
      {
        v39 = sub_1D4922E38();
        swift_bridgeObjectRelease();
        if ((v39 & 1) != 0)
          goto LABEL_30;
        if (sub_1D46F8BC8(v19) != 0x73656C6974706572 || v40 != 0xE800000000000000)
        {
          v41 = sub_1D4922E38();
          swift_bridgeObjectRelease();
          if ((v41 & 1) != 0)
            goto LABEL_30;
          if (sub_1D46F8BC8(v19) == 1937006947 && v80 == 0xE400000000000000)
          {
            swift_bridgeObjectRelease();
            goto LABEL_96;
          }
          v81 = sub_1D4922E38();
          swift_bridgeObjectRelease();
          if ((v81 & 1) != 0)
          {
LABEL_96:
            v82 = *(_QWORD *)(v123 + 24);
            if (!*(_QWORD *)(v82 + 16) || (v83 = sub_1D47CA4DC(7627107, 0xE300000000000000), (v84 & 1) == 0))
            {
              sub_1D46AAFD4();
              swift_allocError();
              v33 = 0xD000000000000013;
              v34 = "invalid cat results";
              goto LABEL_38;
            }
            v27 = *(void **)(*(_QWORD *)(v82 + 56) + 8 * v83);
            if (!v18)
              goto LABEL_41;
            v85 = *(_QWORD *)(v18 + 16);
            v13 = v27;
            if (!v85)
              goto LABEL_42;
            v86 = 7627107;
LABEL_101:
            v87 = sub_1D47CA4DC(v86, 0xE300000000000000);
            if ((v88 & 1) != 0)
            {
              v121 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 16 * v87);
              swift_bridgeObjectRetain();
              goto LABEL_43;
            }
LABEL_42:
            v121 = 0;
LABEL_43:
            v29 = v119;
            goto LABEL_45;
          }
          if (sub_1D46F8BC8(v19) == 1936158564 && v89 == 0xE400000000000000)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            v91 = sub_1D4922E38();
            swift_bridgeObjectRelease();
            if ((v91 & 1) == 0)
            {
              sub_1D470C76C((uint64_t)v116);
              sub_1D46E3084((uint64_t)v122, (uint64_t)&v125);
              v99 = sub_1D4922358();
              v100 = sub_1D492291C();
              if (os_log_type_enabled(v99, v100))
              {
                v101 = (uint8_t *)swift_slowAlloc();
                v102 = swift_slowAlloc();
                v128 = (_QWORD *)v102;
                *(_DWORD *)v101 = 136315138;
                v103 = sub_1D46F8BC8(v127);
                v124 = sub_1D47F0250(v103, v104, (uint64_t *)&v128);
                sub_1D4922A78();
                swift_bridgeObjectRelease();
                sub_1D46B2A28((uint64_t)&v125);
                _os_log_impl(&dword_1D467C000, v99, v100, "Invalid domain for natureworld: %s", v101, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1D82635B8](v102, -1, -1);
                MEMORY[0x1D82635B8](v101, -1, -1);
              }
              else
              {
                sub_1D46B2A28((uint64_t)&v125);
              }

              (*(void (**)(char *, uint64_t))(v114 + 8))(v116, v115);
              sub_1D46AAFD4();
              swift_allocError();
              *(_QWORD *)v96 = 0xD00000000000001ALL;
              *(_QWORD *)(v96 + 8) = 0x80000001D49409F0;
              v97 = 3;
              goto LABEL_126;
            }
          }
          v92 = *(_QWORD *)(v123 + 24);
          if (*(_QWORD *)(v92 + 16))
          {
            v93 = sub_1D47CA4DC(6778724, 0xE300000000000000);
            if ((v94 & 1) != 0)
            {
              v27 = *(void **)(*(_QWORD *)(v92 + 56) + 8 * v93);
              if (!v18)
                goto LABEL_41;
              v95 = *(_QWORD *)(v18 + 16);
              v13 = v27;
              if (!v95)
                goto LABEL_42;
              v86 = 6778724;
              goto LABEL_101;
            }
          }
          sub_1D46AAFD4();
          swift_allocError();
          *(_QWORD *)v96 = 0xD000000000000013;
          *(_QWORD *)(v96 + 8) = 0x80000001D4940A10;
          v97 = 4;
LABEL_126:
          *(_BYTE *)(v96 + 16) = v97;
          swift_willThrow();
          goto LABEL_39;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_30:
  v42 = *(_QWORD *)(v123 + 24);
  if (!*(_QWORD *)(v42 + 16) || (v43 = sub_1D47CA4DC(0x736C616D696E61, 0xE700000000000000), (v44 & 1) == 0))
  {
    sub_1D46AAFD4();
    swift_allocError();
    v33 = 0xD000000000000016;
    v34 = "invalid animal results";
LABEL_38:
    *(_QWORD *)v32 = v33;
    *(_QWORD *)(v32 + 8) = (unint64_t)(v34 - 32) | 0x8000000000000000;
    *(_BYTE *)(v32 + 16) = 4;
    swift_willThrow();
LABEL_39:
    swift_release();
    return v13;
  }
  v27 = *(void **)(*(_QWORD *)(v42 + 56) + 8 * v43);
  if (!v18)
  {
LABEL_41:
    v13 = v27;
    goto LABEL_42;
  }
  v45 = *(_QWORD *)(v18 + 16);
  v13 = v27;
  v29 = v119;
  if (!v45)
    goto LABEL_44;
  v30 = 0x736C616D696E61;
  v31 = 0xE700000000000000;
LABEL_35:
  v46 = sub_1D47CA4DC(v30, v31);
  if ((v47 & 1) == 0)
    goto LABEL_44;
  v121 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 16 * v46);
  swift_bridgeObjectRetain();
LABEL_45:

  v49 = sub_1D46E08D0((void *)v13, v29, 0);
  if (sub_1D46F8BC8(v19) != 0x65727574616ELL || v50 != 0xE600000000000000)
  {
    v54 = sub_1D4922E38();
    swift_bridgeObjectRelease();
    v53 = v122;
    if ((v54 & 1) != 0)
    {
      v51 = (uint64_t (*)(uint64_t, id, uint64_t))sub_1D46E3744;
LABEL_58:
      v52 = v120;
LABEL_59:
      v29 = v119;
      goto LABEL_60;
    }
    if (sub_1D46F8BC8(v19) == 0x736C616D6D616DLL && v55 == 0xE700000000000000)
      goto LABEL_52;
    v56 = sub_1D4922E38();
    swift_bridgeObjectRelease();
    if ((v56 & 1) == 0)
    {
      if (sub_1D46F8BC8(v19) == 0x7364726962 && v73 == 0xE500000000000000)
        goto LABEL_52;
      v74 = sub_1D4922E38();
      swift_bridgeObjectRelease();
      if ((v74 & 1) != 0)
        goto LABEL_57;
      if (sub_1D46F8BC8(v19) == 0x73746365736E69 && v75 == 0xE700000000000000)
        goto LABEL_52;
      v76 = sub_1D4922E38();
      swift_bridgeObjectRelease();
      if ((v76 & 1) != 0)
        goto LABEL_57;
      if (sub_1D46F8BC8(v19) == 0x73656C6974706572 && v77 == 0xE800000000000000)
      {
LABEL_52:
        v51 = (uint64_t (*)(uint64_t, id, uint64_t))sub_1D46E3730;
        goto LABEL_53;
      }
      v78 = sub_1D4922E38();
      swift_bridgeObjectRelease();
      if ((v78 & 1) == 0)
      {
        if (sub_1D46F8BC8(v19) != 1937006947 || v79 != 0xE400000000000000)
        {
          v90 = sub_1D4922E38();
          swift_bridgeObjectRelease();
          if ((v90 & 1) != 0)
          {
            v51 = (uint64_t (*)(uint64_t, id, uint64_t))sub_1D46E3714;
          }
          else
          {
            if (sub_1D46F8BC8(v19) == 1936158564 && v98 == 0xE400000000000000)
            {
              v51 = (uint64_t (*)(uint64_t, id, uint64_t))sub_1D46E30C0;
              v52 = v120;
              v53 = v122;
              goto LABEL_54;
            }
            v105 = sub_1D4922E38();
            swift_bridgeObjectRelease();
            if ((v105 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1D470C76C((uint64_t)v113);
              sub_1D46E3084((uint64_t)v122, (uint64_t)&v125);
              v106 = sub_1D4922358();
              v107 = sub_1D492291C();
              if (os_log_type_enabled(v106, v107))
              {
                v108 = (uint8_t *)swift_slowAlloc();
                v109 = swift_slowAlloc();
                v128 = (_QWORD *)v109;
                *(_DWORD *)v108 = 136315138;
                v110 = sub_1D46F8BC8(v127);
                v124 = sub_1D47F0250(v110, v111, (uint64_t *)&v128);
                sub_1D4922A78();
                swift_bridgeObjectRelease();
                sub_1D46B2A28((uint64_t)&v125);
                _os_log_impl(&dword_1D467C000, v106, v107, "Invalid domain for natureworld: %s", v108, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1D82635B8](v109, -1, -1);
                MEMORY[0x1D82635B8](v108, -1, -1);
              }
              else
              {
                sub_1D46B2A28((uint64_t)&v125);
              }

              (*(void (**)(char *, uint64_t))(v114 + 8))(v113, v115);
              sub_1D46AAFD4();
              swift_allocError();
              *(_QWORD *)v112 = 0xD00000000000001ALL;
              *(_QWORD *)(v112 + 8) = 0x80000001D49409F0;
              *(_BYTE *)(v112 + 16) = 3;
              swift_willThrow();
              swift_release();

              return v13;
            }
            v51 = (uint64_t (*)(uint64_t, id, uint64_t))sub_1D46E30C0;
          }
          v52 = v120;
          v53 = v122;
          goto LABEL_59;
        }
        v51 = (uint64_t (*)(uint64_t, id, uint64_t))sub_1D46E3714;
LABEL_53:
        v52 = v120;
LABEL_54:
        v29 = v119;
        goto LABEL_55;
      }
    }
LABEL_57:
    v51 = (uint64_t (*)(uint64_t, id, uint64_t))sub_1D46E3730;
    goto LABEL_58;
  }
  v51 = (uint64_t (*)(uint64_t, id, uint64_t))sub_1D46E3744;
  v52 = v120;
  v53 = v122;
LABEL_55:
  swift_bridgeObjectRelease();
LABEL_60:
  swift_retain();
  v122 = (_BYTE *)v13;
  v57 = sub_1D46E0A8C(v29, (void *)v13, v49, v51, v52);
  swift_bridgeObjectRelease();
  v58 = v52 + OBJC_IVAR____TtC18VisualIntelligence38ClassificationNatureworldPostProcessor_modelInfo;
  v59 = (uint64_t *)(v58 + *(int *)(type metadata accessor for MLModelInfo(0) + 24));
  v60 = v59[1];
  v125 = *v59;
  v126 = v60;
  swift_bridgeObjectRetain();
  sub_1D492270C();
  swift_bridgeObjectRelease();
  v13 = v125;
  v61 = v126;
  if (sub_1D46F8BC8(v53[104]) == 1936158564 && v62 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    sub_1D46E3084((uint64_t)v53, (uint64_t)&v125);
LABEL_67:
    sub_1D46B2A28((uint64_t)&v125);
LABEL_68:
    v13 = sub_1D4829FC4(1, v13, v61, (uint64_t)v57, 0.125);
    v66 = v65;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v57 = v66;
    goto LABEL_69;
  }
  v63 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  sub_1D46E3084((uint64_t)v53, (uint64_t)&v125);
  if ((v63 & 1) != 0)
    goto LABEL_67;
  if (sub_1D46F8BC8(v127) == 1937006947 && v64 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_67;
  }
  v72 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  sub_1D46B2A28((uint64_t)&v125);
  if ((v72 & 1) != 0)
    goto LABEL_68;
LABEL_69:
  if (sub_1D46F8BC8(v53[104]) == 1937006947 && v67 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v68 = v118;
  }
  else
  {
    v69 = sub_1D4922E38();
    swift_bridgeObjectRelease();
    v68 = v118;
    if ((v69 & 1) == 0)
    {
      swift_release();

      swift_release();
      return v13;
    }
  }
  v70 = v117;
  sub_1D46E30DC(v68);
  if (v70)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v128 = v57;
    swift_bridgeObjectRetain();
    v71 = swift_bridgeObjectRetain();
    sub_1D4896090(v71);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }

  return v13;
}

uint64_t sub_1D46E2F50()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_1D46C35F0(v0 + OBJC_IVAR____TtC18VisualIntelligence38ClassificationNatureworldPostProcessor_modelInfo);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D46E2FC0()
{
  return type metadata accessor for ClassificationNatureworldPostProcessor();
}

uint64_t type metadata accessor for ClassificationNatureworldPostProcessor()
{
  uint64_t result;

  result = qword_1ED98DFD8;
  if (!qword_1ED98DFD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D46E3004()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MLModelInfo(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D46E3084(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for DomainModelRequestFactory.Input(a2, a1);
  return a2;
}

uint64_t sub_1D46E30C0(unint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1D46E3758(*(_QWORD *)(v3 + OBJC_IVAR____TtC18VisualIntelligence38ClassificationNatureworldPostProcessor_dogMapper), a1, a2, a3);
}

void sub_1D46E30DC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  int v18;
  _BOOL4 v19;
  _QWORD *v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  os_unfair_lock_s *v30;
  int v31;
  _QWORD *v32;
  uint64_t v33;
  void (*v34)(uint64_t *__return_ptr, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void *v37;
  unsigned __int8 v38;
  _QWORD *v39;
  _QWORD *v40;
  objc_class *v41;
  objc_class *v42;
  id v43;
  int v44;
  int v45;
  NSObject *v46;
  unint64_t v47;
  unint64_t isa;
  NSObject *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  NSObject *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  NSObject *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v3 = v1;
  v5 = sub_1D4922370();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  if (v2)
    return;
  v12 = *(_QWORD *)(v11 + 24);
  if (!*(_QWORD *)(v12 + 16) || (v13 = sub_1D47CA4DC(0x7461705F74616F63, 0xEC0000006E726574), (v14 & 1) == 0))
  {
    swift_release();
    sub_1D46AAFD4();
    swift_allocError();
    *(_QWORD *)v22 = 0xD000000000000014;
    *(_QWORD *)(v22 + 8) = 0x80000001D4940A90;
    *(_BYTE *)(v22 + 16) = 4;
    swift_willThrow();
    return;
  }
  v15 = *(id *)(*(_QWORD *)(v12 + 56) + 8 * v13);
  swift_release();
  v60 = v15;
  v16 = sub_1D46E08D0(v15, 4, 0);
  sub_1D470C76C((uint64_t)v8);
  swift_retain_n();
  v17 = sub_1D4922358();
  v18 = sub_1D4922910();
  v19 = os_log_type_enabled(v17, (os_log_type_t)v18);
  v20 = &unk_1ED9A4000;
  v59 = v16;
  if (!v19)
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v23 = *(_QWORD *)(v16 + 16);
    if (!v23)
      goto LABEL_32;
    goto LABEL_9;
  }
  LODWORD(v61) = v18;
  v21 = (uint8_t *)swift_slowAlloc();
  v58 = swift_slowAlloc();
  v63 = v58;
  *(_DWORD *)v21 = 136315138;
  v50 = sub_1D48C4E2C();
  v62 = v17;
  if (v50[2])
  {
    v52 = v50[4];
    v51 = v50[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    v52 = 0;
    v51 = 0;
  }
  swift_bridgeObjectRelease();
  v64 = v52;
  v65 = v51;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D140);
  v53 = sub_1D4922670();
  v64 = sub_1D47F0250(v53, v54, &v63);
  sub_1D4922A78();
  swift_release_n();
  swift_bridgeObjectRelease();
  v55 = v62;
  _os_log_impl(&dword_1D467C000, v62, (os_log_type_t)v61, "Debug log first element of coat mapping: %s", v21, 0xCu);
  v56 = v58;
  swift_arrayDestroy();
  MEMORY[0x1D82635B8](v56, -1, -1);
  MEMORY[0x1D82635B8](v21, -1, -1);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v16 = v59;
  v20 = (_QWORD *)&unk_1ED9A4000;
  v23 = *(_QWORD *)(v59 + 16);
  if (v23)
  {
LABEL_9:
    v24 = *(_QWORD *)(v3 + v20[371]);
    v25 = (unint64_t *)(v16 + 32);
    v61 = v24;
    v62 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v28 = *v25++;
      v27 = v28;
      v29 = *(_QWORD *)(v24 + 16);
      v30 = (os_unfair_lock_s *)(*(_QWORD *)(v29 + 80) + 16);
      os_unfair_lock_lock(v30);
      swift_beginAccess();
      v31 = *(unsigned __int8 *)(v29 + 32);
      if (v31 == 255)
      {
        v34 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v29 + 40);
        if (!v34)
        {
          os_unfair_lock_unlock(v30);
          goto LABEL_11;
        }
        v35 = swift_retain();
        v34(&v63, v35);
        sub_1D46A56B4((uint64_t)v34);
        v36 = v63;
        v37 = *(void **)(v29 + 24);
        *(_QWORD *)(v29 + 24) = v63;
        v38 = *(_BYTE *)(v29 + 32);
        *(_BYTE *)(v29 + 32) = 0;
        swift_bridgeObjectRetain();
        sub_1D46E3BF4(v37, v38);
        os_unfair_lock_unlock(v30);
        v33 = *(_QWORD *)(v36 + 16);
        swift_bridgeObjectRelease();
        if ((v27 & 0x8000000000000000) != 0)
          goto LABEL_11;
      }
      else
      {
        v32 = *(_QWORD **)(v29 + 24);
        if ((v31 & 1) != 0)
        {
          v63 = *(_QWORD *)(v29 + 24);
          v26 = v32;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98ECF0);
          swift_willThrowTypedImpl();
          os_unfair_lock_unlock(v30);
          sub_1D46E3BF4(v32, v31);
          goto LABEL_11;
        }
        swift_bridgeObjectRetain();
        os_unfair_lock_unlock(v30);
        v33 = v32[2];
        sub_1D46E3BF4(v32, v31);
        if ((v27 & 0x8000000000000000) != 0)
          goto LABEL_11;
      }
      if ((uint64_t)v27 < v33)
      {
        v39 = sub_1D48C4E2C();
        if (v27 >= v39[2])
        {
          __break(1u);
          return;
        }
        v40 = &v39[2 * v27];
        v42 = (objc_class *)v40[4];
        v41 = (objc_class *)v40[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v43 = objc_msgSend(v60, sel_objectAtIndexedSubscript_, v27);
        objc_msgSend(v43, sel_floatValue);
        v45 = v44;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v46 = v62;
        else
          v46 = sub_1D48A9474(0, (int64_t)v62[2].isa + 1, 1, v62);
        isa = (unint64_t)v46[2].isa;
        v47 = (unint64_t)v46[3].isa;
        if (isa >= v47 >> 1)
          v46 = sub_1D48A9474((_QWORD *)(v47 > 1), isa + 1, 1, v46);
        v46[2].isa = (Class)(isa + 1);
        v62 = v46;
        v49 = &v46[3 * isa];
        v49[4].isa = v42;
        v49[5].isa = v41;
        LODWORD(v49[6].isa) = v45;
        v24 = v61;
      }
LABEL_11:
      if (!--v23)
        goto LABEL_33;
    }
  }
LABEL_32:
  v62 = MEMORY[0x1E0DEE9D8];
LABEL_33:

  swift_bridgeObjectRelease();
}

uint64_t sub_1D46E3714(unint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1D46E3758(*(_QWORD *)(v3 + OBJC_IVAR____TtC18VisualIntelligence38ClassificationNatureworldPostProcessor_catMapper), a1, a2, a3);
}

uint64_t sub_1D46E3730(unint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1D46E3758(*(_QWORD *)(v3 + 16), a1, a2, a3);
}

uint64_t sub_1D46E3744(unint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1D46E3758(*(_QWORD *)(v3 + 24), a1, a2, a3);
}

uint64_t sub_1D46E3758(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  float v22;
  id v23;
  float v24;
  float v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  double v44;
  uint64_t v45[2];

  v7 = sub_1D4922370();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v39 - v13;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (*(_QWORD *)(a4 + 16) <= a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v15 = a4 + 32;
  v16 = sub_1D47E30B8(*(_QWORD *)(a4 + 32 + 8 * a2));
  v18 = (uint64_t)v16;
  v19 = v17;
  if (!v17)
    return v18;
  v43 = a3;
  v45[0] = (uint64_t)v16;
  v45[1] = v17;
  sub_1D4696FE8();
  v20 = (_QWORD *)sub_1D4922ACC();
  if (v20[2] <= 1uLL)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return v18;
  }
  v40 = v14;
  v41 = v8;
  v42 = v7;
  swift_bridgeObjectRetain();
  v21 = sub_1D49228BC();
  if ((v21 & 0x100000000) != 0)
  {
    sub_1D470C76C((uint64_t)v11);
    swift_bridgeObjectRetain();
    v31 = sub_1D4922358();
    v32 = sub_1D4922910();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v45[0] = v34;
      *(_DWORD *)v33 = 136315138;
      swift_bridgeObjectRetain();
      v44 = COERCE_DOUBLE(sub_1D47F0250(v18, v19, v45));
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D467C000, v31, v32, "Can't parse min confidence: %s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v34, -1, -1);
      MEMORY[0x1D82635B8](v33, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v11, v42);
  }
  else
  {
    v22 = *(float *)&v21;
    v23 = objc_msgSend(v43, sel_objectAtIndexedSubscript_, *(_QWORD *)(v15 + 8 * a2));
    objc_msgSend(v23, sel_floatValue);
    v25 = v24;

    if (v25 < v22)
    {
      swift_bridgeObjectRelease();
      v26 = (uint64_t)v40;
      sub_1D470C76C((uint64_t)v40);
      swift_bridgeObjectRetain();
      v27 = sub_1D4922358();
      v28 = sub_1D4922910();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = swift_slowAlloc();
        v30 = swift_slowAlloc();
        v45[0] = v30;
        *(_DWORD *)v29 = 134218242;
        v44 = v25;
        sub_1D4922A78();
        *(_WORD *)(v29 + 12) = 2080;
        swift_bridgeObjectRetain();
        v44 = COERCE_DOUBLE(sub_1D47F0250(v18, v19, v45));
        sub_1D4922A78();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1D467C000, v27, v28, "Confidence %f too small, skipping %s", (uint8_t *)v29, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D82635B8](v30, -1, -1);
        MEMORY[0x1D82635B8](v29, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v26, v42);
      return 0x657669746167656ELL;
    }
    result = swift_bridgeObjectRelease();
  }
  if (v20[2])
  {
    v35 = v20[4];
    v36 = v20[5];
    v37 = v20[6];
    v38 = v20[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x1D8261A1C](v35, v36, v37, v38);
    goto LABEL_16;
  }
LABEL_22:
  __break(1u);
  return result;
}

void sub_1D46E3BF4(void *a1, unsigned __int8 a2)
{
  if (a2 != 255)
    sub_1D46B2DDC(a1, a2 & 1);
}

uint64_t sub_1D46E3C0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_1D4922328();
  __swift_allocate_value_buffer(v0, qword_1EFEC2CE0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EFEC2CE0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D4927560;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "visual_search_request_blob";
  *(_QWORD *)(v7 + 8) = 26;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF20];
  v9 = sub_1D4922304();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "parse_flow_intermediate_results_blob";
  *(_QWORD *)(v11 + 8) = 36;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "nsfw_confidence";
  *((_QWORD *)v13 + 1) = 15;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "device_info";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  return sub_1D4922310();
}

uint64_t sub_1D46E3DCC()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1D49220AC();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          sub_1D4922100();
          break;
        case 3:
          sub_1D492210C();
          break;
        case 4:
          sub_1D492216C();
          break;
        default:
          break;
      }
      result = sub_1D49220AC();
    }
  }
  return result;
}

void sub_1D46E3EB0()
{
  __asm { BR              X10 }
}

uint64_t sub_1D46E3EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((a2 & 0xFF000000000000) == 0 || (result = sub_1D4922280(), !v2))
    __asm { BR              X10 }
  return result;
}

uint64_t sub_1D46E4054@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1D4928B40;
  *(_OWORD *)(a1 + 16) = xmmword_1D4928B40;
  *(_DWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0xE000000000000000;
  return sub_1D4922010();
}

unint64_t sub_1D46E4088()
{
  return 0xD000000000000035;
}

uint64_t sub_1D46E40A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 32);
  v5 = sub_1D492201C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1D46E40E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 32);
  v5 = sub_1D492201C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

void (*sub_1D46E4124())(faiss::NormalizationTransform *__hidden this)
{
  return faiss::NormalizationTransform::~NormalizationTransform;
}

uint64_t sub_1D46E4138()
{
  return sub_1D46E3DCC();
}

void sub_1D46E414C()
{
  sub_1D46E3EB0();
}

uint64_t sub_1D46E4160()
{
  sub_1D4696EA4(&qword_1EFEAA720, (uint64_t (*)(uint64_t))type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals, (uint64_t)&unk_1D4928C14);
  return sub_1D4922070();
}

uint64_t sub_1D46E41B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EFEA9C00 != -1)
    swift_once();
  v2 = sub_1D4922328();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFEC2CE0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1D46E4220()
{
  sub_1D4696EA4(&qword_1EFEAA708, (uint64_t (*)(uint64_t))type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals, (uint64_t)&unk_1D4928C4C);
  return sub_1D49221D8();
}

uint64_t sub_1D46E4260()
{
  sub_1D4696EA4(&qword_1EFEAA708, (uint64_t (*)(uint64_t))type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals, (uint64_t)&unk_1D4928C4C);
  return sub_1D49221F0();
}

uint64_t sub_1D46E42B4()
{
  return sub_1D4696EA4(&qword_1EFEAA700, (uint64_t (*)(uint64_t))type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals, (uint64_t)&unk_1D4928B5C);
}

uint64_t type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals()
{
  uint64_t result;

  result = qword_1EFEAA728;
  if (!qword_1EFEAA728)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D46E431C()
{
  return sub_1D4696EA4(&qword_1EFEAA708, (uint64_t (*)(uint64_t))type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals, (uint64_t)&unk_1D4928C4C);
}

uint64_t sub_1D46E4348()
{
  return sub_1D4696EA4(&qword_1EFEAA710, (uint64_t (*)(uint64_t))type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals, (uint64_t)&unk_1D4928B84);
}

uint64_t sub_1D46E4374()
{
  return sub_1D4696EA4(&qword_1EFEAA718, (uint64_t (*)(uint64_t))type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals, (uint64_t)&unk_1D4928BC4);
}

void sub_1D46E43A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1D46E4400(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x1D46E45E4);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_1D46E4608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_1D46E43A0((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_1D46E46DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_1D4920DC8();
  v11 = result;
  if (result)
  {
    result = sub_1D4920DE0();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_1D4920DD4();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_1D46E43A0(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_1D46E4790(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1D46E47DC()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_1D46E4810 + *((int *)qword_1D46E49E8 + (v0 >> 62))))();
}

uint64_t sub_1D46E4820@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_1D46E4A08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_1D492201C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v19 - v9;
  sub_1D46E4790(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  if ((v11 & 1) != 0
    && (sub_1D46E4790(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24)), (v12 & 1) != 0)
    && *(float *)(a1 + 32) == *(float *)(a2 + 32))
  {
    if (*(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40) && *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48)
      || (v13 = 0, (sub_1D4922E38() & 1) != 0))
    {
      v14 = type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals();
      v15 = a1 + *(int *)(v14 + 32);
      v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v16(v10, v15, v4);
      v16(v8, a2 + *(int *)(v14 + 32), v4);
      sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
      v13 = sub_1D49225E0();
      v17 = *(void (**)(char *, uint64_t))(v5 + 8);
      v17(v8, v4);
      v17(v10, v4);
    }
  }
  else
  {
    v13 = 0;
  }
  return v13 & 1;
}

unint64_t sub_1D46E4B84(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    sub_1D46A5708(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    sub_1D46A5708(v9, v10);
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    v11 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v11;
    v12 = *(int *)(a3 + 32);
    v13 = a1 + v12;
    v14 = a2 + v12;
    v15 = sub_1D492201C();
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_1D46E4C58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1D4696F10(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  sub_1D4696F10(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_1D492201C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1D46E4CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  sub_1D46A5708(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  sub_1D46A5708(v8, v9);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v10;
  v11 = *(int *)(a3 + 32);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1D492201C();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  return a1;
}

uint64_t sub_1D46E4D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  sub_1D46A5708(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  sub_1D4696F10(v8, v9);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  sub_1D46A5708(v10, v11);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v11;
  sub_1D4696F10(v12, v13);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = *(int *)(a3 + 32);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t sub_1D46E4E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(int *)(a3 + 32);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_1D46E4E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1D4696F10(v6, v7);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_1D4696F10(v8, v9);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v10;
  swift_bridgeObjectRelease();
  v11 = *(int *)(a3 + 32);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_1D46E4F24()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D46E4F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D492201C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_1D46E4FAC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D46E4FB8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 48) = (a2 - 1);
  }
  else
  {
    v7 = sub_1D492201C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1D46E502C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D492201C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t VisualSearchResult.visualUnderstanding.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[2];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v2 = v1[9];
  v3 = v1[7];
  v24 = v1[8];
  v25 = v2;
  v4 = v1[9];
  v26 = v1[10];
  v5 = v1[5];
  v7 = v1[3];
  v20 = v1[4];
  v6 = v20;
  v21 = v5;
  v8 = v1[5];
  v9 = v1[7];
  v22 = v1[6];
  v10 = v22;
  v23 = v9;
  v11 = v1[1];
  v17[0] = *v1;
  v17[1] = v11;
  v12 = v1[3];
  v14 = *v1;
  v13 = v1[1];
  v18 = v1[2];
  v15 = v18;
  v19 = v12;
  *(_OWORD *)(a1 + 128) = v24;
  *(_OWORD *)(a1 + 144) = v4;
  *(_OWORD *)(a1 + 160) = v1[10];
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v8;
  *(_OWORD *)(a1 + 96) = v10;
  *(_OWORD *)(a1 + 112) = v3;
  *(_OWORD *)a1 = v14;
  *(_OWORD *)(a1 + 16) = v13;
  v27 = *((_QWORD *)v1 + 22);
  *(_QWORD *)(a1 + 176) = *((_QWORD *)v1 + 22);
  *(_OWORD *)(a1 + 32) = v15;
  *(_OWORD *)(a1 + 48) = v7;
  return sub_1D46B2E18((uint64_t)v17);
}

uint64_t VisualSearchResult.regionResults.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VisualSearchResult.userFeedbackPayload.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 192);
  sub_1D46E5180(v1, *(_QWORD *)(v0 + 200));
  return v1;
}

uint64_t sub_1D46E5180(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1D46A5708(a1, a2);
  return a1;
}

uint64_t sub_1D46E5194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD v45[11];
  uint64_t v46;

  v44 = sub_1D4922370();
  v43 = *(_QWORD *)(v44 - 8);
  v1 = MEMORY[0x1E0C80A78](v44);
  v42 = (uint64_t)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x1E0C80A78](v1);
  v39 = (uint64_t)&v38 - v4;
  MEMORY[0x1E0C80A78](v3);
  v40 = (char *)&v38 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA780);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D4921D1C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v41 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA788);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D4921AA0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for VisualSearchResultInternal(0);
  sub_1D469C5EC(v0 + *(int *)(v19 + 24), (uint64_t)v14, &qword_1EFEAA788);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1D46992EC((uint64_t)v14, &qword_1EFEAA788);
    v20 = v42;
    sub_1D470C76C(v42);
    v21 = sub_1D4922358();
    v22 = sub_1D492291C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_1D467C000, v21, v22, "VisualSearchResult.userFeedbackPayload(): userFeedbackSearchRequest was nil", v23, 2u);
      MEMORY[0x1D82635B8](v23, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v20, v44);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  sub_1D469C5EC(v0 + *(int *)(v19 + 28), (uint64_t)v8, &qword_1EFEAA780);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1D46992EC((uint64_t)v8, &qword_1EFEAA780);
    v24 = v39;
    sub_1D470C76C(v39);
    v25 = sub_1D4922358();
    v26 = sub_1D492291C();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_1D467C000, v25, v26, "VisualSearchResult.userFeedbackPayload(): userFeedbackParseFlowIntermediateResults was nil", v27, 2u);
      MEMORY[0x1D82635B8](v27, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v24, v44);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    return 0;
  }
  v28 = v10;
  v29 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v30 = (uint64_t)v41;
  v29(v41, v8, v9);
  v31 = *(_OWORD *)(v0 + 144);
  v45[8] = *(_OWORD *)(v0 + 128);
  v45[9] = v31;
  v45[10] = *(_OWORD *)(v0 + 160);
  v46 = *(_QWORD *)(v0 + 176);
  v32 = *(_OWORD *)(v0 + 80);
  v45[4] = *(_OWORD *)(v0 + 64);
  v45[5] = v32;
  v33 = *(_OWORD *)(v0 + 112);
  v45[6] = *(_OWORD *)(v0 + 96);
  v45[7] = v33;
  v34 = *(_OWORD *)(v0 + 16);
  v45[0] = *(_OWORD *)v0;
  v45[1] = v34;
  v35 = *(_OWORD *)(v0 + 48);
  v45[2] = *(_OWORD *)(v0 + 32);
  v45[3] = v35;
  v36 = sub_1D48BA690((uint64_t)v45, (uint64_t)v18, v30);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v9);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  return v36;
}

void RegionSearchResult.ResultItem.domain.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t RegionSearchResult.ResultItem.ontology.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1D46A484C(v2, v3);
}

uint64_t RegionSearchResult.ResultItem.knowledge.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RegionSearchResult.ResultItem(0);
  return sub_1D469C5EC(v1 + *(int *)(v3 + 24), a1, &qword_1EFEAA5C0);
}

uint64_t type metadata accessor for RegionSearchResult.ResultItem(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1EFEAA738);
}

__n128 RegionSearchResult.boundingBox.getter@<Q0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)v1;
  v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

uint64_t RegionSearchResult.resultItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RegionSearchResult.resultSection.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D46E5850(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  char v11[16];
  _BYTE v12[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA750);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D46E8A80();
  sub_1D4922F58();
  v11[0] = 0;
  sub_1D4922D84();
  if (!v2)
  {
    v11[0] = 1;
    sub_1D4922D60();
    v11[0] = 2;
    sub_1D4922D60();
    sub_1D46E8AC4(v3 + 48, (uint64_t)v12);
    sub_1D46E8AC4((uint64_t)v12, (uint64_t)v11);
    v10[15] = 3;
    sub_1D46E8B0C();
    sub_1D4922D78();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t destroy for VisualSearchResult(_QWORD *a1)
{
  uint64_t result;
  unint64_t v3;

  swift_bridgeObjectRelease();
  if (a1[1] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[19])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v3 = a1[25];
  if (v3 >> 60 != 15)
    return sub_1D4696F10(a1[24], v3);
  return result;
}

uint64_t initializeWithCopy for VisualSearchResult(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v6 = (_OWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  if (v5 == 1)
  {
    v7 = v6[1];
    *v4 = *v6;
    *(_OWORD *)(a1 + 24) = v7;
    v8 = v6[3];
    *(_OWORD *)(a1 + 40) = v6[2];
    *(_OWORD *)(a1 + 56) = v8;
  }
  else
  {
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = v9;
    v11 = *(_QWORD *)(a2 + 32);
    v12 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = v11;
    v14 = *(_QWORD *)(a2 + 48);
    v13 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 40) = v12;
    *(_QWORD *)(a1 + 48) = v14;
    v15 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v13;
    *(_QWORD *)(a1 + 64) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v16 = *(_QWORD *)(a2 + 152);
  v17 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v17;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v18 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v18;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  if (v16)
  {
    v19 = *(_QWORD *)(a2 + 160);
    v20 = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 152) = v16;
    *(_QWORD *)(a1 + 160) = v19;
    *(_QWORD *)(a1 + 168) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  }
  v21 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v21;
  v22 = (uint64_t *)(a2 + 192);
  v23 = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 192) = *(_OWORD *)v22;
  }
  else
  {
    v24 = *v22;
    sub_1D46A5708(*v22, v23);
    *(_QWORD *)(a1 + 192) = v24;
    *(_QWORD *)(a1 + 200) = v23;
  }
  return a1;
}

uint64_t assignWithCopy for VisualSearchResult(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  __int128 *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  uint64_t v18;
  __int128 v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 8);
  v6 = (__int128 *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) == 1)
  {
    if (v5 == 1)
    {
      v7 = *v6;
      v8 = *(_OWORD *)(a2 + 24);
      v9 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v9;
      *v4 = v7;
      *(_OWORD *)(a1 + 24) = v8;
    }
    else
    {
      *(_QWORD *)(a1 + 8) = v5;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v5 == 1)
  {
    sub_1D46D2220(a1 + 8);
    v10 = *(_OWORD *)(a2 + 56);
    v12 = *v6;
    v11 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v10;
    *v4 = v12;
    *(_OWORD *)(a1 + 24) = v11;
  }
  else
  {
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v13 = *(_OWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v13;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = (_OWORD *)(a1 + 152);
  v15 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v17 = (_OWORD *)(a2 + 152);
  v16 = *(_QWORD *)(a2 + 152);
  if (v15)
  {
    if (v16)
    {
      *(_QWORD *)(a1 + 152) = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D46E5F84(a1 + 152);
      v18 = *(_QWORD *)(a2 + 168);
      *v14 = *v17;
      *(_QWORD *)(a1 + 168) = v18;
    }
  }
  else if (v16)
  {
    *(_QWORD *)(a1 + 152) = v16;
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *v17;
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *v14 = v19;
  }
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = (uint64_t *)(a2 + 192);
  v21 = *(_QWORD *)(a2 + 200);
  if (*(_QWORD *)(a1 + 200) >> 60 != 15)
  {
    if (v21 >> 60 != 15)
    {
      v23 = *v20;
      sub_1D46A5708(*v20, v21);
      v24 = *(_QWORD *)(a1 + 192);
      v25 = *(_QWORD *)(a1 + 200);
      *(_QWORD *)(a1 + 192) = v23;
      *(_QWORD *)(a1 + 200) = v21;
      sub_1D4696F10(v24, v25);
      return a1;
    }
    sub_1D46E5FB8(a1 + 192);
    goto LABEL_20;
  }
  if (v21 >> 60 == 15)
  {
LABEL_20:
    *(_OWORD *)(a1 + 192) = *(_OWORD *)v20;
    return a1;
  }
  v22 = *v20;
  sub_1D46A5708(*v20, v21);
  *(_QWORD *)(a1 + 192) = v22;
  *(_QWORD *)(a1 + 200) = v21;
  return a1;
}

uint64_t sub_1D46E5F84(uint64_t a1)
{
  destroy for EmbeddingInfo();
  return a1;
}

uint64_t sub_1D46E5FB8(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CB0338] - 8) + 8))();
  return a1;
}

__n128 __swift_memcpy208_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t assignWithTake for VisualSearchResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) == 1)
    goto LABEL_4;
  if (v4 == 1)
  {
    sub_1D46D2220(a1 + 8);
LABEL_4:
    v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v5;
    v6 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v6;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v8 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 152);
  v10 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  if (v10)
  {
    if (v9)
    {
      *(_QWORD *)(a1 + 152) = v9;
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D46E5F84(a1 + 152);
  }
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
LABEL_11:
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)(a2 + 192);
  v13 = *(_QWORD *)(a1 + 200);
  if (v13 >> 60 != 15)
  {
    v14 = *(_QWORD *)(a2 + 200);
    if (v14 >> 60 != 15)
    {
      v15 = *(_QWORD *)(a1 + 192);
      *(_QWORD *)(a1 + 192) = *v12;
      *(_QWORD *)(a1 + 200) = v14;
      sub_1D4696F10(v15, v13);
      return a1;
    }
    sub_1D46E5FB8(a1 + 192);
  }
  *(_OWORD *)(a1 + 192) = *(_OWORD *)v12;
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualSearchResult(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 208))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisualSearchResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 208) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 208) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualSearchResult()
{
  return &type metadata for VisualSearchResult;
}

uint64_t destroy for VisualUnderstanding.Signal()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VisualUnderstanding.Signal(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for VisualUnderstanding.Signal(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for VisualUnderstanding.Signal(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualUnderstanding.Signal(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisualUnderstanding.Signal(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RegionSearchResult()
{
  return &type metadata for RegionSearchResult;
}

_QWORD *initializeBufferWithCopyOfBuffer for RegionSearchResult.ResultItem(_BYTE *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  unint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  void (*v71)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v73;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a1 + 8;
    v8 = a2[2];
    if (v8)
    {
      v4[1] = a2[1];
      v4[2] = v8;
      v9 = a2[4];
      v4[3] = a2[3];
      v4[4] = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v11 = *(_OWORD *)(a2 + 3);
      *v7 = *(_OWORD *)(a2 + 1);
      *(_OWORD *)(v4 + 3) = v11;
    }
    v12 = *(int *)(a3 + 24);
    v13 = (_QWORD *)((char *)v4 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    v15 = (int *)type metadata accessor for ObjectKnowledge();
    v16 = *((_QWORD *)v15 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA5C0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v18 = v14[1];
      *v13 = *v14;
      v13[1] = v18;
      v19 = v14[3];
      v13[2] = v14[2];
      v13[3] = v19;
      v20 = v15[6];
      v73 = v16;
      __dst = (char *)v13 + v20;
      v21 = (char *)v14 + v20;
      v22 = sub_1D4920F18();
      v23 = *(_QWORD *)(v22 - 8);
      v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
      swift_bridgeObjectRetain();
      v25 = v24;
      swift_bridgeObjectRetain();
      if (v24(v21, 1, v22))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
        memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(__dst, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
      }
      v27 = v23;
      *(_DWORD *)((char *)v13 + v15[7]) = *(_DWORD *)((char *)v14 + v15[7]);
      v28 = v15[8];
      v29 = (_QWORD *)((char *)v13 + v28);
      v30 = (_QWORD *)((char *)v14 + v28);
      v31 = v30[1];
      *v29 = *v30;
      v29[1] = v31;
      v32 = v15[9];
      v33 = (_QWORD *)((char *)v13 + v32);
      v34 = (_QWORD *)((char *)v14 + v32);
      v35 = v34[1];
      *v33 = *v34;
      v33[1] = v35;
      v36 = v15[10];
      v37 = (char *)v13 + v36;
      v38 = (char *)v14 + v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v25(v38, 1, v22))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v37, v38, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v37, 0, 1, v22);
      }
      *(_QWORD *)((char *)v13 + v15[11]) = *(_QWORD *)((char *)v14 + v15[11]);
      v40 = v15[12];
      v41 = (char *)v13 + v40;
      v42 = (_QWORD *)((char *)v14 + v40);
      v43 = *(_QWORD *)((char *)v14 + v40 + 8);
      swift_bridgeObjectRetain();
      if (v43)
      {
        *(_QWORD *)v41 = *v42;
        *((_QWORD *)v41 + 1) = v43;
        v44 = v42[3];
        *((_QWORD *)v41 + 2) = v42[2];
        *((_QWORD *)v41 + 3) = v44;
        v45 = v42[5];
        *((_QWORD *)v41 + 4) = v42[4];
        *((_QWORD *)v41 + 5) = v45;
        v46 = v42 + 6;
        v47 = v42[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v47 >> 60 == 15)
        {
          *((_OWORD *)v41 + 3) = *(_OWORD *)v46;
        }
        else
        {
          v50 = *v46;
          sub_1D46A5708(*v46, v47);
          *((_QWORD *)v41 + 6) = v50;
          *((_QWORD *)v41 + 7) = v47;
        }
      }
      else
      {
        v48 = *((_OWORD *)v42 + 1);
        *(_OWORD *)v41 = *(_OWORD *)v42;
        *((_OWORD *)v41 + 1) = v48;
        v49 = *((_OWORD *)v42 + 3);
        *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
        *((_OWORD *)v41 + 3) = v49;
      }
      v51 = v15[13];
      v52 = (char *)v13 + v51;
      v53 = (char *)v14 + v51;
      *(_QWORD *)v52 = *(_QWORD *)v53;
      v52[8] = v53[8];
      v54 = v15[14];
      v55 = (char *)v13 + v54;
      v56 = (char *)v14 + v54;
      v57 = *((_QWORD *)v56 + 1);
      if (v57 >> 60 == 15)
      {
        *(_OWORD *)v55 = *(_OWORD *)v56;
      }
      else
      {
        v58 = *(_QWORD *)v56;
        sub_1D46A5708(*(_QWORD *)v56, *((_QWORD *)v56 + 1));
        *(_QWORD *)v55 = v58;
        *((_QWORD *)v55 + 1) = v57;
      }
      *(_QWORD *)((char *)v13 + v15[15]) = *(_QWORD *)((char *)v14 + v15[15]);
      *(_WORD *)((char *)v13 + v15[16]) = *(_WORD *)((char *)v14 + v15[16]);
      v59 = v15[17];
      v60 = (_QWORD *)((char *)v13 + v59);
      v61 = (_QWORD *)((char *)v14 + v59);
      v62 = v61[1];
      *v60 = *v61;
      v60[1] = v62;
      *(_QWORD *)((char *)v13 + v15[18]) = *(_QWORD *)((char *)v14 + v15[18]);
      *(_QWORD *)((char *)v13 + v15[19]) = *(_QWORD *)((char *)v14 + v15[19]);
      *((_BYTE *)v13 + v15[20]) = *((_BYTE *)v14 + v15[20]);
      v63 = v15[21];
      v64 = (_QWORD *)((char *)v13 + v63);
      v65 = (_QWORD *)((char *)v14 + v63);
      v66 = v65[1];
      *v64 = *v65;
      v64[1] = v66;
      v67 = v15[22];
      v68 = (_QWORD *)((char *)v13 + v67);
      v69 = (_QWORD *)((char *)v14 + v67);
      v70 = v69[1];
      *v68 = *v69;
      v68[1] = v70;
      *(_QWORD *)((char *)v13 + v15[23]) = *(_QWORD *)((char *)v14 + v15[23]);
      *(_QWORD *)((char *)v13 + v15[24]) = *(_QWORD *)((char *)v14 + v15[24]);
      *(_QWORD *)((char *)v13 + v15[25]) = *(_QWORD *)((char *)v14 + v15[25]);
      *(_DWORD *)((char *)v13 + v15[26]) = *(_DWORD *)((char *)v14 + v15[26]);
      v71 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v73 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v71(v13, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t destroy for RegionSearchResult.ResultItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t *v14;
  unint64_t v15;

  if (*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = a1 + *(int *)(a2 + 24);
  v5 = (int *)type metadata accessor for ObjectKnowledge();
  result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v4 + v5[6];
    v8 = sub_1D4920F18();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v10(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 = v4 + v5[10];
    if (!v10(v11, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
    swift_bridgeObjectRelease();
    v12 = (_QWORD *)(v4 + v5[12]);
    if (v12[1])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = v12[7];
      if (v13 >> 60 != 15)
        sub_1D4696F10(v12[6], v13);
    }
    v14 = (uint64_t *)(v4 + v5[14]);
    v15 = v14[1];
    if (v15 >> 60 != 15)
      sub_1D4696F10(*v14, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for RegionSearchResult.ResultItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  unint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  void (*v69)(_QWORD *, _QWORD, uint64_t, int *);
  char *__dst;
  uint64_t v72;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = (_OWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  if (v7)
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v7;
    v8 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 24);
    *v6 = *(_OWORD *)(a2 + 8);
    v6[1] = v9;
  }
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = (int *)type metadata accessor for ObjectKnowledge();
  v14 = *((_QWORD *)v13 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA5C0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = v12[1];
    *v11 = *v12;
    v11[1] = v16;
    v17 = v12[3];
    v11[2] = v12[2];
    v11[3] = v17;
    v18 = v13[6];
    __dst = (char *)v11 + v18;
    v72 = v14;
    v19 = (char *)v12 + v18;
    v20 = sub_1D4920F18();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    swift_bridgeObjectRetain();
    v23 = v22;
    swift_bridgeObjectRetain();
    if (v22(v19, 1, v20))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
      memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(__dst, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
    }
    v25 = v21;
    *(_DWORD *)((char *)v11 + v13[7]) = *(_DWORD *)((char *)v12 + v13[7]);
    v26 = v13[8];
    v27 = (_QWORD *)((char *)v11 + v26);
    v28 = (_QWORD *)((char *)v12 + v26);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = v13[9];
    v31 = (_QWORD *)((char *)v11 + v30);
    v32 = (_QWORD *)((char *)v12 + v30);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    v34 = v13[10];
    v35 = (char *)v11 + v34;
    v36 = (char *)v12 + v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23(v36, 1, v20))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v35, v36, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v35, 0, 1, v20);
    }
    *(_QWORD *)((char *)v11 + v13[11]) = *(_QWORD *)((char *)v12 + v13[11]);
    v38 = v13[12];
    v39 = (char *)v11 + v38;
    v40 = (_QWORD *)((char *)v12 + v38);
    v41 = *(_QWORD *)((char *)v12 + v38 + 8);
    swift_bridgeObjectRetain();
    if (v41)
    {
      *(_QWORD *)v39 = *v40;
      *((_QWORD *)v39 + 1) = v41;
      v42 = v40[3];
      *((_QWORD *)v39 + 2) = v40[2];
      *((_QWORD *)v39 + 3) = v42;
      v43 = v40[5];
      *((_QWORD *)v39 + 4) = v40[4];
      *((_QWORD *)v39 + 5) = v43;
      v44 = v40 + 6;
      v45 = v40[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v45 >> 60 == 15)
      {
        *((_OWORD *)v39 + 3) = *(_OWORD *)v44;
      }
      else
      {
        v48 = *v44;
        sub_1D46A5708(*v44, v45);
        *((_QWORD *)v39 + 6) = v48;
        *((_QWORD *)v39 + 7) = v45;
      }
    }
    else
    {
      v46 = *((_OWORD *)v40 + 1);
      *(_OWORD *)v39 = *(_OWORD *)v40;
      *((_OWORD *)v39 + 1) = v46;
      v47 = *((_OWORD *)v40 + 3);
      *((_OWORD *)v39 + 2) = *((_OWORD *)v40 + 2);
      *((_OWORD *)v39 + 3) = v47;
    }
    v49 = v13[13];
    v50 = (char *)v11 + v49;
    v51 = (char *)v12 + v49;
    *(_QWORD *)v50 = *(_QWORD *)v51;
    v50[8] = v51[8];
    v52 = v13[14];
    v53 = (char *)v11 + v52;
    v54 = (char *)v12 + v52;
    v55 = *((_QWORD *)v54 + 1);
    if (v55 >> 60 == 15)
    {
      *(_OWORD *)v53 = *(_OWORD *)v54;
    }
    else
    {
      v56 = *(_QWORD *)v54;
      sub_1D46A5708(*(_QWORD *)v54, *((_QWORD *)v54 + 1));
      *(_QWORD *)v53 = v56;
      *((_QWORD *)v53 + 1) = v55;
    }
    *(_QWORD *)((char *)v11 + v13[15]) = *(_QWORD *)((char *)v12 + v13[15]);
    *(_WORD *)((char *)v11 + v13[16]) = *(_WORD *)((char *)v12 + v13[16]);
    v57 = v13[17];
    v58 = (_QWORD *)((char *)v11 + v57);
    v59 = (_QWORD *)((char *)v12 + v57);
    v60 = v59[1];
    *v58 = *v59;
    v58[1] = v60;
    *(_QWORD *)((char *)v11 + v13[18]) = *(_QWORD *)((char *)v12 + v13[18]);
    *(_QWORD *)((char *)v11 + v13[19]) = *(_QWORD *)((char *)v12 + v13[19]);
    *((_BYTE *)v11 + v13[20]) = *((_BYTE *)v12 + v13[20]);
    v61 = v13[21];
    v62 = (_QWORD *)((char *)v11 + v61);
    v63 = (_QWORD *)((char *)v12 + v61);
    v64 = v63[1];
    *v62 = *v63;
    v62[1] = v64;
    v65 = v13[22];
    v66 = (_QWORD *)((char *)v11 + v65);
    v67 = (_QWORD *)((char *)v12 + v65);
    v68 = v67[1];
    *v66 = *v67;
    v66[1] = v68;
    *(_QWORD *)((char *)v11 + v13[23]) = *(_QWORD *)((char *)v12 + v13[23]);
    *(_QWORD *)((char *)v11 + v13[24]) = *(_QWORD *)((char *)v12 + v13[24]);
    *(_QWORD *)((char *)v11 + v13[25]) = *(_QWORD *)((char *)v12 + v13[25]);
    *(_DWORD *)((char *)v11 + v13[26]) = *(_DWORD *)((char *)v12 + v13[26]);
    v69 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v72 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v69(v11, 0, 1, v13);
  }
  return a1;
}

uint64_t assignWithCopy for RegionSearchResult.ResultItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, int *);
  int v17;
  int v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t *v49;
  unint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  void (*v73)(char *, _QWORD, uint64_t, int *);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  int v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  unint64_t v93;
  uint64_t v94;
  _OWORD *v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t *v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  char *__dst;
  uint64_t v128;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = (_OWORD *)(a1 + 8);
  v7 = (_OWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16))
  {
    if (v8)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D46E796C(a1 + 8);
      v9 = v7[1];
      *v6 = *v7;
      v6[1] = v9;
    }
  }
  else if (v8)
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 24);
    *v6 = *v7;
    *(_OWORD *)(a1 + 24) = v10;
  }
  v11 = *(int *)(a3 + 24);
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  v14 = (int *)type metadata accessor for ObjectKnowledge();
  v15 = *((_QWORD *)v14 - 1);
  v16 = *(uint64_t (**)(char *, uint64_t, int *))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (v18)
    {
      sub_1D46E79CC((uint64_t)v12);
      goto LABEL_14;
    }
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
    *((_QWORD *)v12 + 3) = *((_QWORD *)v13 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v27 = v14[6];
    v28 = &v12[v27];
    v29 = &v13[v27];
    v30 = sub_1D4920F18();
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
    v33 = v32(v28, 1, v30);
    v34 = v32(v29, 1, v30);
    if (v33)
    {
      if (!v34)
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
        goto LABEL_34;
      }
    }
    else
    {
      if (!v34)
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 24))(v28, v29, v30);
LABEL_34:
        *(_DWORD *)&v12[v14[7]] = *(_DWORD *)&v13[v14[7]];
        v75 = v14[8];
        v76 = &v12[v75];
        v77 = &v13[v75];
        *(_QWORD *)v76 = *v77;
        *((_QWORD *)v76 + 1) = v77[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v78 = v14[9];
        v79 = &v12[v78];
        v80 = &v13[v78];
        *(_QWORD *)v79 = *v80;
        *((_QWORD *)v79 + 1) = v80[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v81 = v14[10];
        v82 = &v12[v81];
        v83 = &v13[v81];
        v84 = v32(&v12[v81], 1, v30);
        v85 = v32(v83, 1, v30);
        if (v84)
        {
          if (!v85)
          {
            (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v82, v83, v30);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v82, 0, 1, v30);
            goto LABEL_40;
          }
        }
        else
        {
          if (!v85)
          {
            (*(void (**)(char *, char *, uint64_t))(v31 + 24))(v82, v83, v30);
LABEL_40:
            *(_QWORD *)&v12[v14[11]] = *(_QWORD *)&v13[v14[11]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v87 = v14[12];
            v88 = (uint64_t)&v12[v87];
            v89 = &v13[v87];
            v90 = *(_QWORD *)&v12[v87 + 8];
            v91 = *(_QWORD *)&v13[v87 + 8];
            if (v90)
            {
              if (!v91)
              {
                sub_1D46E79A0(v88);
                v96 = *((_OWORD *)v89 + 3);
                v98 = *(_OWORD *)v89;
                v97 = *((_OWORD *)v89 + 1);
                *(_OWORD *)(v88 + 32) = *((_OWORD *)v89 + 2);
                *(_OWORD *)(v88 + 48) = v96;
                *(_OWORD *)v88 = v98;
                *(_OWORD *)(v88 + 16) = v97;
                goto LABEL_58;
              }
              *(_QWORD *)v88 = *(_QWORD *)v89;
              *(_QWORD *)(v88 + 8) = *((_QWORD *)v89 + 1);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(_QWORD *)(v88 + 16) = *((_QWORD *)v89 + 2);
              *(_QWORD *)(v88 + 24) = *((_QWORD *)v89 + 3);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(_QWORD *)(v88 + 32) = *((_QWORD *)v89 + 4);
              *(_QWORD *)(v88 + 40) = *((_QWORD *)v89 + 5);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              v92 = (uint64_t *)(v89 + 48);
              v93 = *((_QWORD *)v89 + 7);
              if (*(_QWORD *)(v88 + 56) >> 60 == 15)
              {
                if (v93 >> 60 != 15)
                {
                  v94 = *v92;
LABEL_56:
                  sub_1D46A5708(v94, v93);
                  *(_QWORD *)(v88 + 48) = v94;
                  *(_QWORD *)(v88 + 56) = v93;
                  goto LABEL_58;
                }
              }
              else
              {
                if (v93 >> 60 != 15)
                {
                  v102 = *v92;
                  sub_1D46A5708(*v92, *((_QWORD *)v89 + 7));
                  v103 = *(_QWORD *)(v88 + 48);
                  v104 = *(_QWORD *)(v88 + 56);
                  *(_QWORD *)(v88 + 48) = v102;
                  *(_QWORD *)(v88 + 56) = v93;
                  sub_1D4696F10(v103, v104);
LABEL_58:
                  v105 = v14[13];
                  v106 = &v12[v105];
                  v107 = &v13[v105];
                  v108 = *(_QWORD *)v107;
                  v106[8] = v107[8];
                  *(_QWORD *)v106 = v108;
                  v109 = v14[14];
                  v110 = (uint64_t *)&v12[v109];
                  v111 = (uint64_t *)&v13[v109];
                  v112 = *(_QWORD *)&v13[v109 + 8];
                  if (*(_QWORD *)&v12[v109 + 8] >> 60 == 15)
                  {
                    if (v112 >> 60 != 15)
                    {
                      v113 = *v111;
                      sub_1D46A5708(v113, v112);
                      *v110 = v113;
                      v110[1] = v112;
LABEL_65:
                      *(_QWORD *)&v12[v14[15]] = *(_QWORD *)&v13[v14[15]];
                      *(_WORD *)&v12[v14[16]] = *(_WORD *)&v13[v14[16]];
                      v117 = v14[17];
                      v118 = &v12[v117];
                      v119 = &v13[v117];
                      *(_QWORD *)v118 = *v119;
                      *((_QWORD *)v118 + 1) = v119[1];
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(_QWORD *)&v12[v14[18]] = *(_QWORD *)&v13[v14[18]];
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(_QWORD *)&v12[v14[19]] = *(_QWORD *)&v13[v14[19]];
                      v12[v14[20]] = v13[v14[20]];
                      v120 = v14[21];
                      v121 = &v12[v120];
                      v122 = &v13[v120];
                      *(_QWORD *)v121 = *v122;
                      *((_QWORD *)v121 + 1) = v122[1];
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      v123 = v14[22];
                      v124 = &v12[v123];
                      v125 = &v13[v123];
                      *(_QWORD *)v124 = *v125;
                      *((_QWORD *)v124 + 1) = v125[1];
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(_QWORD *)&v12[v14[23]] = *(_QWORD *)&v13[v14[23]];
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(_QWORD *)&v12[v14[24]] = *(_QWORD *)&v13[v14[24]];
                      *(_QWORD *)&v12[v14[25]] = *(_QWORD *)&v13[v14[25]];
                      *(_DWORD *)&v12[v14[26]] = *(_DWORD *)&v13[v14[26]];
                      return a1;
                    }
                  }
                  else
                  {
                    if (v112 >> 60 != 15)
                    {
                      v114 = *v111;
                      sub_1D46A5708(v114, v112);
                      v115 = *v110;
                      v116 = v110[1];
                      *v110 = v114;
                      v110[1] = v112;
                      sub_1D4696F10(v115, v116);
                      goto LABEL_65;
                    }
                    sub_1D46E5FB8((uint64_t)v110);
                  }
                  *(_OWORD *)v110 = *(_OWORD *)v111;
                  goto LABEL_65;
                }
                sub_1D46E5FB8(v88 + 48);
              }
              *(_OWORD *)(v88 + 48) = *(_OWORD *)v92;
              goto LABEL_58;
            }
            if (!v91)
            {
              v99 = *(_OWORD *)v89;
              v100 = *((_OWORD *)v89 + 1);
              v101 = *((_OWORD *)v89 + 3);
              *(_OWORD *)(v88 + 32) = *((_OWORD *)v89 + 2);
              *(_OWORD *)(v88 + 48) = v101;
              *(_OWORD *)v88 = v99;
              *(_OWORD *)(v88 + 16) = v100;
              goto LABEL_58;
            }
            *(_QWORD *)v88 = *(_QWORD *)v89;
            *(_QWORD *)(v88 + 8) = *((_QWORD *)v89 + 1);
            *(_QWORD *)(v88 + 16) = *((_QWORD *)v89 + 2);
            *(_QWORD *)(v88 + 24) = *((_QWORD *)v89 + 3);
            *(_QWORD *)(v88 + 32) = *((_QWORD *)v89 + 4);
            *(_QWORD *)(v88 + 40) = *((_QWORD *)v89 + 5);
            v95 = v89 + 48;
            v93 = *((_QWORD *)v89 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v93 >> 60 == 15)
            {
              *(_OWORD *)(v88 + 48) = *v95;
              goto LABEL_58;
            }
            v94 = *(_QWORD *)v95;
            goto LABEL_56;
          }
          (*(void (**)(char *, uint64_t))(v31 + 8))(v82, v30);
        }
        v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
        memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        goto LABEL_40;
      }
      (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
    }
    v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    goto LABEL_34;
  }
  if (v18)
  {
LABEL_14:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA5C0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
  *((_QWORD *)v12 + 3) = *((_QWORD *)v13 + 3);
  v19 = v14[6];
  __dst = &v12[v19];
  v128 = v15;
  v20 = &v13[v19];
  v21 = sub_1D4920F18();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  v24 = v23;
  swift_bridgeObjectRetain();
  if (v23(v20, 1, v21))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
    memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
  }
  *(_DWORD *)&v12[v14[7]] = *(_DWORD *)&v13[v14[7]];
  v35 = v14[8];
  v36 = &v12[v35];
  v37 = &v13[v35];
  *(_QWORD *)v36 = *v37;
  *((_QWORD *)v36 + 1) = v37[1];
  v38 = v14[9];
  v39 = &v12[v38];
  v40 = &v13[v38];
  *(_QWORD *)v39 = *v40;
  *((_QWORD *)v39 + 1) = v40[1];
  v41 = v14[10];
  v42 = &v12[v41];
  v43 = &v13[v41];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24(v43, 1, v21))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v42, v43, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v42, 0, 1, v21);
  }
  *(_QWORD *)&v12[v14[11]] = *(_QWORD *)&v13[v14[11]];
  v45 = v14[12];
  v46 = &v12[v45];
  v47 = &v13[v45];
  v48 = *(_QWORD *)&v13[v45 + 8];
  swift_bridgeObjectRetain();
  if (v48)
  {
    *(_QWORD *)v46 = *v47;
    *((_QWORD *)v46 + 1) = v47[1];
    *((_QWORD *)v46 + 2) = v47[2];
    *((_QWORD *)v46 + 3) = v47[3];
    *((_QWORD *)v46 + 4) = v47[4];
    *((_QWORD *)v46 + 5) = v47[5];
    v49 = v47 + 6;
    v50 = v47[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v50 >> 60 == 15)
    {
      *((_OWORD *)v46 + 3) = *(_OWORD *)v49;
    }
    else
    {
      v54 = *v49;
      sub_1D46A5708(*v49, v50);
      *((_QWORD *)v46 + 6) = v54;
      *((_QWORD *)v46 + 7) = v50;
    }
  }
  else
  {
    v51 = *(_OWORD *)v47;
    v52 = *((_OWORD *)v47 + 1);
    v53 = *((_OWORD *)v47 + 3);
    *((_OWORD *)v46 + 2) = *((_OWORD *)v47 + 2);
    *((_OWORD *)v46 + 3) = v53;
    *(_OWORD *)v46 = v51;
    *((_OWORD *)v46 + 1) = v52;
  }
  v55 = v14[13];
  v56 = &v12[v55];
  v57 = &v13[v55];
  v58 = *(_QWORD *)v57;
  v56[8] = v57[8];
  *(_QWORD *)v56 = v58;
  v59 = v14[14];
  v60 = &v12[v59];
  v61 = &v13[v59];
  v62 = *((_QWORD *)v61 + 1);
  if (v62 >> 60 == 15)
  {
    *(_OWORD *)v60 = *(_OWORD *)v61;
  }
  else
  {
    v63 = *(_QWORD *)v61;
    sub_1D46A5708(*(_QWORD *)v61, *((_QWORD *)v61 + 1));
    *(_QWORD *)v60 = v63;
    *((_QWORD *)v60 + 1) = v62;
  }
  *(_QWORD *)&v12[v14[15]] = *(_QWORD *)&v13[v14[15]];
  *(_WORD *)&v12[v14[16]] = *(_WORD *)&v13[v14[16]];
  v64 = v14[17];
  v65 = &v12[v64];
  v66 = &v13[v64];
  *(_QWORD *)v65 = *v66;
  *((_QWORD *)v65 + 1) = v66[1];
  *(_QWORD *)&v12[v14[18]] = *(_QWORD *)&v13[v14[18]];
  *(_QWORD *)&v12[v14[19]] = *(_QWORD *)&v13[v14[19]];
  v12[v14[20]] = v13[v14[20]];
  v67 = v14[21];
  v68 = &v12[v67];
  v69 = &v13[v67];
  *(_QWORD *)v68 = *v69;
  *((_QWORD *)v68 + 1) = v69[1];
  v70 = v14[22];
  v71 = &v12[v70];
  v72 = &v13[v70];
  *(_QWORD *)v71 = *v72;
  *((_QWORD *)v71 + 1) = v72[1];
  *(_QWORD *)&v12[v14[23]] = *(_QWORD *)&v13[v14[23]];
  *(_QWORD *)&v12[v14[24]] = *(_QWORD *)&v13[v14[24]];
  *(_QWORD *)&v12[v14[25]] = *(_QWORD *)&v13[v14[25]];
  *(_DWORD *)&v12[v14[26]] = *(_DWORD *)&v13[v14[26]];
  v73 = *(void (**)(char *, _QWORD, uint64_t, int *))(v128 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v73(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1D46E796C(uint64_t a1)
{
  destroy for OntologyNode();
  return a1;
}

uint64_t sub_1D46E79A0(uint64_t a1)
{
  destroy for ThirdPartyObject(a1);
  return a1;
}

uint64_t sub_1D46E79CC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ObjectKnowledge();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for RegionSearchResult.ResultItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = (_OWORD *)(a1 + v4);
  v6 = (_OWORD *)(a2 + v4);
  v7 = (int *)type metadata accessor for ObjectKnowledge();
  v8 = *((_QWORD *)v7 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA5C0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = v6[1];
    *v5 = *v6;
    v5[1] = v10;
    v11 = v7[6];
    v12 = (char *)v5 + v11;
    v13 = (char *)v6 + v11;
    v14 = sub_1D4920F18();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    if (v16(v13, 1, v14))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    *(_DWORD *)((char *)v5 + v7[7]) = *(_DWORD *)((char *)v6 + v7[7]);
    *(_OWORD *)((char *)v5 + v7[8]) = *(_OWORD *)((char *)v6 + v7[8]);
    *(_OWORD *)((char *)v5 + v7[9]) = *(_OWORD *)((char *)v6 + v7[9]);
    v18 = v7[10];
    v19 = (char *)v5 + v18;
    v20 = (char *)v6 + v18;
    if (v16((char *)v6 + v18, 1, v14))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v20, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
    }
    *(_QWORD *)((char *)v5 + v7[11]) = *(_QWORD *)((char *)v6 + v7[11]);
    v22 = v7[12];
    v23 = (_OWORD *)((char *)v5 + v22);
    v24 = (_OWORD *)((char *)v6 + v22);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = v24[3];
    v23[2] = v24[2];
    v23[3] = v26;
    v27 = v7[13];
    v28 = (char *)v5 + v27;
    v29 = (char *)v6 + v27;
    *(_QWORD *)v28 = *(_QWORD *)v29;
    v28[8] = v29[8];
    *(_OWORD *)((char *)v5 + v7[14]) = *(_OWORD *)((char *)v6 + v7[14]);
    *(_QWORD *)((char *)v5 + v7[15]) = *(_QWORD *)((char *)v6 + v7[15]);
    *(_WORD *)((char *)v5 + v7[16]) = *(_WORD *)((char *)v6 + v7[16]);
    *(_OWORD *)((char *)v5 + v7[17]) = *(_OWORD *)((char *)v6 + v7[17]);
    *(_QWORD *)((char *)v5 + v7[18]) = *(_QWORD *)((char *)v6 + v7[18]);
    *(_QWORD *)((char *)v5 + v7[19]) = *(_QWORD *)((char *)v6 + v7[19]);
    *((_BYTE *)v5 + v7[20]) = *((_BYTE *)v6 + v7[20]);
    *(_OWORD *)((char *)v5 + v7[21]) = *(_OWORD *)((char *)v6 + v7[21]);
    *(_OWORD *)((char *)v5 + v7[22]) = *(_OWORD *)((char *)v6 + v7[22]);
    *(_QWORD *)((char *)v5 + v7[23]) = *(_QWORD *)((char *)v6 + v7[23]);
    *(_QWORD *)((char *)v5 + v7[24]) = *(_QWORD *)((char *)v6 + v7[24]);
    *(_QWORD *)((char *)v5 + v7[25]) = *(_QWORD *)((char *)v6 + v7[25]);
    *(_DWORD *)((char *)v5 + v7[26]) = *(_DWORD *)((char *)v6 + v7[26]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for RegionSearchResult.ResultItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, int *);
  int v17;
  int v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _OWORD *v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _OWORD *v73;
  unint64_t v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v103;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = (_OWORD *)(a1 + 8);
  v7 = (_OWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 16))
  {
    v8 = *(_QWORD *)(a2 + 16);
    if (v8)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = v8;
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v9;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D46E796C((uint64_t)v6);
  }
  v10 = v7[1];
  *v6 = *v7;
  v6[1] = v10;
LABEL_6:
  v11 = *(int *)(a3 + 24);
  v12 = (char *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = (int *)type metadata accessor for ObjectKnowledge();
  v15 = *((_QWORD *)v14 - 1);
  v16 = *(uint64_t (**)(char *, uint64_t, int *))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16((char *)v13, 1, v14);
  if (!v17)
  {
    if (v18)
    {
      sub_1D46E79CC((uint64_t)v12);
      goto LABEL_12;
    }
    v28 = v13[1];
    *(_QWORD *)v12 = *v13;
    *((_QWORD *)v12 + 1) = v28;
    swift_bridgeObjectRelease();
    v29 = v13[3];
    *((_QWORD *)v12 + 2) = v13[2];
    *((_QWORD *)v12 + 3) = v29;
    swift_bridgeObjectRelease();
    v30 = v14[6];
    v31 = &v12[v30];
    v32 = (char *)v13 + v30;
    v33 = sub_1D4920F18();
    v34 = *(_QWORD *)(v33 - 8);
    v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
    v36 = v35(v31, 1, v33);
    v37 = v35(v32, 1, v33);
    if (v36)
    {
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
        goto LABEL_24;
      }
    }
    else
    {
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v31, v32, v33);
LABEL_24:
        *(_DWORD *)&v12[v14[7]] = *(_DWORD *)((char *)v13 + v14[7]);
        v51 = v14[8];
        v52 = &v12[v51];
        v53 = (_QWORD *)((char *)v13 + v51);
        v55 = *v53;
        v54 = v53[1];
        *(_QWORD *)v52 = v55;
        *((_QWORD *)v52 + 1) = v54;
        swift_bridgeObjectRelease();
        v56 = v14[9];
        v57 = &v12[v56];
        v58 = (_QWORD *)((char *)v13 + v56);
        v60 = *v58;
        v59 = v58[1];
        *(_QWORD *)v57 = v60;
        *((_QWORD *)v57 + 1) = v59;
        swift_bridgeObjectRelease();
        v61 = v14[10];
        v62 = &v12[v61];
        v63 = (char *)v13 + v61;
        v64 = v35(&v12[v61], 1, v33);
        v65 = v35(v63, 1, v33);
        if (v64)
        {
          if (!v65)
          {
            (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v62, v63, v33);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v62, 0, 1, v33);
            goto LABEL_30;
          }
        }
        else
        {
          if (!v65)
          {
            (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v62, v63, v33);
LABEL_30:
            *(_QWORD *)&v12[v14[11]] = *(_QWORD *)((char *)v13 + v14[11]);
            swift_bridgeObjectRelease();
            v67 = v14[12];
            v68 = (uint64_t)&v12[v67];
            v69 = (char *)v13 + v67;
            if (*(_QWORD *)&v12[v67 + 8])
            {
              v70 = *((_QWORD *)v69 + 1);
              if (v70)
              {
                *(_QWORD *)v68 = *(_QWORD *)v69;
                *(_QWORD *)(v68 + 8) = v70;
                swift_bridgeObjectRelease();
                v71 = *((_QWORD *)v69 + 3);
                *(_QWORD *)(v68 + 16) = *((_QWORD *)v69 + 2);
                *(_QWORD *)(v68 + 24) = v71;
                swift_bridgeObjectRelease();
                v72 = *((_QWORD *)v69 + 5);
                *(_QWORD *)(v68 + 32) = *((_QWORD *)v69 + 4);
                *(_QWORD *)(v68 + 40) = v72;
                swift_bridgeObjectRelease();
                v73 = v69 + 48;
                v74 = *(_QWORD *)(v68 + 56);
                if (v74 >> 60 == 15)
                {
LABEL_35:
                  *(_OWORD *)(v68 + 48) = *v73;
                  goto LABEL_38;
                }
                v75 = *((_QWORD *)v69 + 7);
                if (v75 >> 60 == 15)
                {
                  sub_1D46E5FB8(v68 + 48);
                  goto LABEL_35;
                }
                v103 = *(_QWORD *)(v68 + 48);
                *(_QWORD *)(v68 + 48) = *(_QWORD *)v73;
                *(_QWORD *)(v68 + 56) = v75;
                sub_1D4696F10(v103, v74);
LABEL_38:
                v78 = v14[13];
                v79 = &v12[v78];
                v80 = (char *)v13 + v78;
                *(_QWORD *)v79 = *(_QWORD *)v80;
                v79[8] = v80[8];
                v81 = v14[14];
                v82 = (uint64_t *)&v12[v81];
                v83 = (_QWORD *)((char *)v13 + v81);
                v84 = *(_QWORD *)&v12[v81 + 8];
                if (v84 >> 60 != 15)
                {
                  v85 = v83[1];
                  if (v85 >> 60 != 15)
                  {
                    v86 = *v82;
                    *v82 = *v83;
                    v82[1] = v85;
                    sub_1D4696F10(v86, v84);
                    goto LABEL_43;
                  }
                  sub_1D46E5FB8((uint64_t)v82);
                }
                *(_OWORD *)v82 = *(_OWORD *)v83;
LABEL_43:
                *(_QWORD *)&v12[v14[15]] = *(_QWORD *)((char *)v13 + v14[15]);
                *(_WORD *)&v12[v14[16]] = *(_WORD *)((char *)v13 + v14[16]);
                v87 = v14[17];
                v88 = &v12[v87];
                v89 = (_QWORD *)((char *)v13 + v87);
                v91 = *v89;
                v90 = v89[1];
                *(_QWORD *)v88 = v91;
                *((_QWORD *)v88 + 1) = v90;
                swift_bridgeObjectRelease();
                *(_QWORD *)&v12[v14[18]] = *(_QWORD *)((char *)v13 + v14[18]);
                swift_bridgeObjectRelease();
                *(_QWORD *)&v12[v14[19]] = *(_QWORD *)((char *)v13 + v14[19]);
                v12[v14[20]] = *((_BYTE *)v13 + v14[20]);
                v92 = v14[21];
                v93 = &v12[v92];
                v94 = (_QWORD *)((char *)v13 + v92);
                v96 = *v94;
                v95 = v94[1];
                *(_QWORD *)v93 = v96;
                *((_QWORD *)v93 + 1) = v95;
                swift_bridgeObjectRelease();
                v97 = v14[22];
                v98 = &v12[v97];
                v99 = (_QWORD *)((char *)v13 + v97);
                v101 = *v99;
                v100 = v99[1];
                *(_QWORD *)v98 = v101;
                *((_QWORD *)v98 + 1) = v100;
                swift_bridgeObjectRelease();
                *(_QWORD *)&v12[v14[23]] = *(_QWORD *)((char *)v13 + v14[23]);
                swift_bridgeObjectRelease();
                *(_QWORD *)&v12[v14[24]] = *(_QWORD *)((char *)v13 + v14[24]);
                *(_QWORD *)&v12[v14[25]] = *(_QWORD *)((char *)v13 + v14[25]);
                *(_DWORD *)&v12[v14[26]] = *(_DWORD *)((char *)v13 + v14[26]);
                return a1;
              }
              sub_1D46E79A0(v68);
            }
            v76 = *((_OWORD *)v69 + 1);
            *(_OWORD *)v68 = *(_OWORD *)v69;
            *(_OWORD *)(v68 + 16) = v76;
            v77 = *((_OWORD *)v69 + 3);
            *(_OWORD *)(v68 + 32) = *((_OWORD *)v69 + 2);
            *(_OWORD *)(v68 + 48) = v77;
            goto LABEL_38;
          }
          (*(void (**)(char *, uint64_t))(v34 + 8))(v62, v33);
        }
        v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        goto LABEL_30;
      }
      (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
    }
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_24;
  }
  if (v18)
  {
LABEL_12:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA5C0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    return a1;
  }
  v19 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v19;
  v20 = v14[6];
  v21 = &v12[v20];
  v22 = (char *)v13 + v20;
  v23 = sub_1D4920F18();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v22, 1, v23))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  *(_DWORD *)&v12[v14[7]] = *(_DWORD *)((char *)v13 + v14[7]);
  *(_OWORD *)&v12[v14[8]] = *(_OWORD *)((char *)v13 + v14[8]);
  *(_OWORD *)&v12[v14[9]] = *(_OWORD *)((char *)v13 + v14[9]);
  v38 = v14[10];
  v39 = &v12[v38];
  v40 = (char *)v13 + v38;
  if (v25((char *)v13 + v38, 1, v23))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v39, v40, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v39, 0, 1, v23);
  }
  *(_QWORD *)&v12[v14[11]] = *(_QWORD *)((char *)v13 + v14[11]);
  v42 = v14[12];
  v43 = &v12[v42];
  v44 = (_OWORD *)((char *)v13 + v42);
  v45 = v44[1];
  *(_OWORD *)v43 = *v44;
  *((_OWORD *)v43 + 1) = v45;
  v46 = v44[3];
  *((_OWORD *)v43 + 2) = v44[2];
  *((_OWORD *)v43 + 3) = v46;
  v47 = v14[13];
  v48 = &v12[v47];
  v49 = (char *)v13 + v47;
  *(_QWORD *)v48 = *(_QWORD *)v49;
  v48[8] = v49[8];
  *(_OWORD *)&v12[v14[14]] = *(_OWORD *)((char *)v13 + v14[14]);
  *(_QWORD *)&v12[v14[15]] = *(_QWORD *)((char *)v13 + v14[15]);
  *(_WORD *)&v12[v14[16]] = *(_WORD *)((char *)v13 + v14[16]);
  *(_OWORD *)&v12[v14[17]] = *(_OWORD *)((char *)v13 + v14[17]);
  *(_QWORD *)&v12[v14[18]] = *(_QWORD *)((char *)v13 + v14[18]);
  *(_QWORD *)&v12[v14[19]] = *(_QWORD *)((char *)v13 + v14[19]);
  v12[v14[20]] = *((_BYTE *)v13 + v14[20]);
  *(_OWORD *)&v12[v14[21]] = *(_OWORD *)((char *)v13 + v14[21]);
  *(_OWORD *)&v12[v14[22]] = *(_OWORD *)((char *)v13 + v14[22]);
  *(_QWORD *)&v12[v14[23]] = *(_QWORD *)((char *)v13 + v14[23]);
  *(_QWORD *)&v12[v14[24]] = *(_QWORD *)((char *)v13 + v14[24]);
  *(_QWORD *)&v12[v14[25]] = *(_QWORD *)((char *)v13 + v14[25]);
  *(_DWORD *)&v12[v14[26]] = *(_DWORD *)((char *)v13 + v14[26]);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for RegionSearchResult.ResultItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D46E83EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA5C0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for RegionSearchResult.ResultItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D46E8484(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 16) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA5C0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_1D46E84FC()
{
  unint64_t v0;

  sub_1D46EA3B0(319, &qword_1EFEAA748, (void (*)(uint64_t))type metadata accessor for ObjectKnowledge);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t destroy for ThirdPartyObject(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(a1 + 56);
  if (v3 >> 60 != 15)
    return sub_1D4696F10(*(_QWORD *)(a1 + 48), v3);
  return result;
}

uint64_t initializeWithCopy for ThirdPartyObject(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;

  v3 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v4;
  v5 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v5;
  v6 = a2 + 6;
  v7 = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v6;
  }
  else
  {
    v8 = *v6;
    sub_1D46A5708(*v6, v7);
    *(_QWORD *)(a1 + 48) = v8;
    *(_QWORD *)(a1 + 56) = v7;
  }
  return a1;
}

_QWORD *assignWithCopy for ThirdPartyObject(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2 + 6;
  v5 = a2[7];
  if (a1[7] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      v7 = *v4;
      sub_1D46A5708(*v4, v5);
      v8 = a1[6];
      v9 = a1[7];
      a1[6] = v7;
      a1[7] = v5;
      sub_1D4696F10(v8, v9);
      return a1;
    }
    sub_1D46E5FB8((uint64_t)(a1 + 6));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 3) = *(_OWORD *)v4;
    return a1;
  }
  v6 = *v4;
  sub_1D46A5708(*v4, v5);
  a1[6] = v6;
  a1[7] = v5;
  return a1;
}

_QWORD *assignWithTake for ThirdPartyObject(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2 + 6;
  v8 = a1[7];
  if (v8 >> 60 != 15)
  {
    v9 = a2[7];
    if (v9 >> 60 != 15)
    {
      v10 = a1[6];
      a1[6] = *v7;
      a1[7] = v9;
      sub_1D4696F10(v10, v8);
      return a1;
    }
    sub_1D46E5FB8((uint64_t)(a1 + 6));
  }
  *((_OWORD *)a1 + 3) = *(_OWORD *)v7;
  return a1;
}

uint64_t _s8PropertyVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s8PropertyVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ThirdPartyObject()
{
  return &type metadata for ThirdPartyObject;
}

uint64_t sub_1D46E88C8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D46E88FC + 4 * byte_1D4928D40[*v0]))(0xD000000000000010, 0x80000001D4940B60);
}

uint64_t sub_1D46E88FC()
{
  return 0x4C52556567616D69;
}

uint64_t sub_1D46E8914()
{
  return 0x69616E626D756874;
}

uint64_t sub_1D46E8934()
{
  return 0x617461646174656DLL;
}

uint64_t sub_1D46E894C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D46E8CEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D46E8970()
{
  sub_1D46E8A80();
  return sub_1D4922F64();
}

uint64_t sub_1D46E8998()
{
  sub_1D46E8A80();
  return sub_1D4922F70();
}

BOOL sub_1D46E89C0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_1D46E8B50(v7, v8);
}

double sub_1D46E8A08@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_1D46E8EB8(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1D46E8A48(_QWORD *a1)
{
  return sub_1D46E5850(a1);
}

unint64_t sub_1D46E8A80()
{
  unint64_t result;

  result = qword_1EFEAA758;
  if (!qword_1EFEAA758)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4928F8C, &type metadata for ThirdPartyObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFEAA758);
  }
  return result;
}

uint64_t sub_1D46E8AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D46E8B0C()
{
  unint64_t result;

  result = qword_1EFEAA768;
  if (!qword_1EFEAA768)
  {
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EFEAA768);
  }
  return result;
}

BOOL sub_1D46E8B50(_QWORD *a1, _QWORD *a2)
{
  char v5;
  _BOOL8 result;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  if (*a1 != *a2 || a1[1] != a2[1])
  {
    v5 = sub_1D4922E38();
    result = 0;
    if ((v5 & 1) == 0)
      return result;
  }
  v7 = a1[3];
  v8 = a2[3];
  if (!v7)
  {
    if (v8)
      return 0;
    goto LABEL_15;
  }
  if (!v8)
    return 0;
  v9 = a1[2] == a2[2] && v7 == v8;
  if (v9 || (v10 = sub_1D4922E38(), result = 0, (v10 & 1) != 0))
  {
LABEL_15:
    v11 = a1[5];
    v12 = a2[5];
    if (v11)
    {
      if (!v12)
        return 0;
      if (a1[4] != a2[4] || v11 != v12)
      {
        v13 = sub_1D4922E38();
        result = 0;
        if ((v13 & 1) == 0)
          return result;
      }
    }
    else if (v12)
    {
      return 0;
    }
    v15 = a1[6];
    v14 = a1[7];
    v17 = a2[6];
    v16 = a2[7];
    if (v14 >> 60 == 15)
    {
      if (v16 >> 60 == 15)
        return 1;
      goto LABEL_26;
    }
    if (v16 >> 60 == 15)
    {
LABEL_26:
      sub_1D46E5180(v15, v14);
      sub_1D46E5180(v17, v16);
      sub_1D46AA1F0(v15, v14);
      sub_1D46AA1F0(v17, v16);
      return 0;
    }
    sub_1D46E5180(v15, v14);
    sub_1D46E5180(v17, v16);
    sub_1D46E4790(v15, v14);
    v19 = v18;
    sub_1D46AA1F0(v17, v16);
    sub_1D46AA1F0(v15, v14);
    return (v19 & 1) != 0;
  }
  return result;
}

uint64_t sub_1D46E8CEC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001D4940B60 || (sub_1D4922E38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C52556567616D69 && a2 == 0xE800000000000000 || (sub_1D4922E38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69616E626D756874 && a2 == 0xEC0000004C52556CLL || (sub_1D4922E38() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_1D4922E38();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1D46E8EB8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA770);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D46E8A80();
  sub_1D4922F4C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v28) = 0;
  v9 = sub_1D4922CE8();
  v11 = v10;
  v26 = v9;
  LOBYTE(v28) = 1;
  swift_bridgeObjectRetain();
  v12 = sub_1D4922CAC();
  v27 = v13;
  v24 = v12;
  v25 = v11;
  LOBYTE(v28) = 2;
  swift_bridgeObjectRetain();
  v22 = sub_1D4922CAC();
  v30 = 3;
  v15 = v14;
  sub_1D46E91DC();
  v23 = v15;
  swift_bridgeObjectRetain();
  sub_1D4922CDC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v16 = v28;
  v17 = v29;
  v18 = v25;
  swift_bridgeObjectRetain();
  v19 = v27;
  swift_bridgeObjectRetain();
  v20 = v23;
  swift_bridgeObjectRetain();
  sub_1D46E5180(v16, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_1D46AA1F0(v16, v17);
  *a2 = v26;
  a2[1] = v18;
  a2[2] = v24;
  a2[3] = v19;
  a2[4] = v22;
  a2[5] = v20;
  a2[6] = v16;
  a2[7] = v17;
  return result;
}

unint64_t sub_1D46E91DC()
{
  unint64_t result;

  result = qword_1EFEAA778;
  if (!qword_1EFEAA778)
  {
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EFEAA778);
  }
  return result;
}

uint64_t type metadata accessor for VisualSearchResultInternal(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1EFEAA790);
}

uint64_t sub_1D46E9234(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(const void *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v9 = a2 + 1;
    v8 = a2[1];
    swift_bridgeObjectRetain();
    if (v8 == 1)
    {
      v10 = v9[1];
      *(_OWORD *)(a1 + 8) = *v9;
      *(_OWORD *)(a1 + 24) = v10;
      v11 = v9[3];
      *(_OWORD *)(a1 + 40) = v9[2];
      *(_OWORD *)(a1 + 56) = v11;
    }
    else
    {
      v12 = a2[2];
      v13 = a2[3];
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v12;
      v14 = a2[4];
      v15 = a2[5];
      *(_QWORD *)(a1 + 24) = v13;
      *(_QWORD *)(a1 + 32) = v14;
      v17 = a2[6];
      v16 = a2[7];
      *(_QWORD *)(a1 + 40) = v15;
      *(_QWORD *)(a1 + 48) = v17;
      v18 = a2[8];
      *(_QWORD *)(a1 + 56) = v16;
      *(_QWORD *)(a1 + 64) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v19 = a2[19];
    v20 = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(a1 + 88) = v20;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
    *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
    v21 = a2[17];
    *(_QWORD *)(a1 + 128) = a2[16];
    *(_QWORD *)(a1 + 136) = v21;
    *(_QWORD *)(a1 + 144) = a2[18];
    swift_bridgeObjectRetain();
    if (v19)
    {
      v22 = a2[20];
      v23 = a2[21];
      *(_QWORD *)(a1 + 152) = v19;
      *(_QWORD *)(a1 + 160) = v22;
      *(_QWORD *)(a1 + 168) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 19);
      *(_QWORD *)(a1 + 168) = a2[21];
    }
    v24 = a2[23];
    *(_QWORD *)(a1 + 176) = a2[22];
    *(_QWORD *)(a1 + 184) = v24;
    v25 = *(int *)(a3 + 24);
    v26 = (void *)(a1 + v25);
    v27 = (char *)a2 + v25;
    v28 = sub_1D4921AA0();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30(v27, 1, v28))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA788);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    v32 = *(int *)(a3 + 28);
    v33 = (void *)(a1 + v32);
    v34 = (char *)a2 + v32;
    v35 = sub_1D4921D1C();
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA780);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
  }
  return a1;
}

uint64_t sub_1D46E94BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 152))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1D4921AA0();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + *(int *)(a2 + 28);
  v8 = sub_1D4921D1C();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  return result;
}

uint64_t sub_1D46E95F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  uint64_t v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(const void *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = (_OWORD *)(a1 + 8);
  v8 = (_OWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  if (v7 == 1)
  {
    v9 = v8[1];
    *v6 = *v8;
    *(_OWORD *)(a1 + 24) = v9;
    v10 = v8[3];
    *(_OWORD *)(a1 + 40) = v8[2];
    *(_OWORD *)(a1 + 56) = v10;
  }
  else
  {
    v11 = *(_QWORD *)(a2 + 16);
    v12 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v11;
    v13 = *(_QWORD *)(a2 + 32);
    v14 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 24) = v12;
    *(_QWORD *)(a1 + 32) = v13;
    v16 = *(_QWORD *)(a2 + 48);
    v15 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 40) = v14;
    *(_QWORD *)(a1 + 48) = v16;
    v17 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v15;
    *(_QWORD *)(a1 + 64) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v18 = *(_QWORD *)(a2 + 152);
  v19 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v19;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v20 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v20;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  if (v18)
  {
    v21 = *(_QWORD *)(a2 + 160);
    v22 = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 152) = v18;
    *(_QWORD *)(a1 + 160) = v21;
    *(_QWORD *)(a1 + 168) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  }
  v23 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v23;
  v24 = *(int *)(a3 + 24);
  v25 = (void *)(a1 + v24);
  v26 = (const void *)(a2 + v24);
  v27 = sub_1D4921AA0();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29(v26, 1, v27))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA788);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(v25, v26, v27);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  v31 = *(int *)(a3 + 28);
  v32 = (void *)(a1 + v31);
  v33 = (const void *)(a2 + v31);
  v34 = sub_1D4921D1C();
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA780);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v35 + 16))(v32, v33, v34);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  return a1;
}

uint64_t sub_1D46E9854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  uint64_t v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 8);
  v8 = (__int128 *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) == 1)
  {
    if (v7 == 1)
    {
      v9 = *v8;
      v10 = *(_OWORD *)(a2 + 24);
      v11 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v11;
      *v6 = v9;
      *(_OWORD *)(a1 + 24) = v10;
    }
    else
    {
      *(_QWORD *)(a1 + 8) = v7;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 1)
  {
    sub_1D46D2220(a1 + 8);
    v12 = *(_OWORD *)(a2 + 56);
    v14 = *v8;
    v13 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v12;
    *v6 = v14;
    *(_OWORD *)(a1 + 24) = v13;
  }
  else
  {
    *(_QWORD *)(a1 + 8) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v15 = *(_OWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v15;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = (_OWORD *)(a1 + 152);
  v17 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v19 = (_OWORD *)(a2 + 152);
  v18 = *(_QWORD *)(a2 + 152);
  if (v17)
  {
    if (v18)
    {
      *(_QWORD *)(a1 + 152) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D46E5F84(a1 + 152);
      v20 = *(_QWORD *)(a2 + 168);
      *v16 = *v19;
      *(_QWORD *)(a1 + 168) = v20;
    }
  }
  else if (v18)
  {
    *(_QWORD *)(a1 + 152) = v18;
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *v19;
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *v16 = v21;
  }
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = *(int *)(a3 + 24);
  v23 = (void *)(a1 + v22);
  v24 = (void *)(a2 + v22);
  v25 = sub_1D4921AA0();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v29)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
LABEL_20:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA788);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 24))(v23, v24, v25);
LABEL_21:
  v31 = *(int *)(a3 + 28);
  v32 = (void *)(a1 + v31);
  v33 = (void *)(a2 + v31);
  v34 = sub_1D4921D1C();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 1, v34);
  v38 = v36(v33, 1, v34);
  if (!v37)
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v35 + 24))(v32, v33, v34);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v35 + 8))(v32, v34);
    goto LABEL_26;
  }
  if (v38)
  {
LABEL_26:
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA780);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v35 + 16))(v32, v33, v34);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  return a1;
}

uint64_t sub_1D46E9CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  v10 = *(_OWORD *)(a2 + 32);
  v11 = *(_OWORD *)(a2 + 48);
  v12 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v12;
  v13 = *(int *)(a3 + 24);
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v11;
  v16 = sub_1D4921AA0();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA788);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v19 = *(int *)(a3 + 28);
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = sub_1D4921D1C();
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA780);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  return a1;
}

uint64_t sub_1D46E9E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) == 1)
    goto LABEL_4;
  if (v6 == 1)
  {
    sub_1D46D2220(a1 + 8);
LABEL_4:
    v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v7;
    v8 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v8;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v10 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 152);
  v12 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  if (v12)
  {
    if (v11)
    {
      *(_QWORD *)(a1 + 152) = v11;
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = v13;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1D46E5F84(a1 + 152);
  }
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
LABEL_11:
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  v14 = *(int *)(a3 + 24);
  v15 = (void *)(a1 + v14);
  v16 = (void *)(a2 + v14);
  v17 = sub_1D4921AA0();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_16:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA788);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v15, v16, v17);
LABEL_17:
  v23 = *(int *)(a3 + 28);
  v24 = (void *)(a1 + v23);
  v25 = (void *)(a2 + v23);
  v26 = sub_1D4921D1C();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 40))(v24, v25, v26);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_22;
  }
  if (v30)
  {
LABEL_22:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA780);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v27 + 32))(v24, v25, v26);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  return a1;
}

uint64_t sub_1D46EA190()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D46EA19C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA788);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA780);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1D46EA244()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D46EA250(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA788);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA780);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1D46EA2F4()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D46EA3B0(319, (unint64_t *)&qword_1EFEAA7A0, (void (*)(uint64_t))MEMORY[0x1E0D6FDC0]);
  if (v0 <= 0x3F)
  {
    sub_1D46EA3B0(319, &qword_1EFEAA7A8, (void (*)(uint64_t))MEMORY[0x1E0D703A0]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1D46EA3B0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1D4922A60();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t storeEnumTagSinglePayload for ThirdPartyObject.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D46EA448 + 4 * byte_1D4928D49[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D46EA47C + 4 * byte_1D4928D44[v4]))();
}

uint64_t sub_1D46EA47C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46EA484(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D46EA48CLL);
  return result;
}

uint64_t sub_1D46EA498(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D46EA4A0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D46EA4A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46EA4AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ThirdPartyObject.CodingKeys()
{
  return &type metadata for ThirdPartyObject.CodingKeys;
}

unint64_t sub_1D46EA4CC()
{
  unint64_t result;

  result = qword_1EFEAA7B0;
  if (!qword_1EFEAA7B0)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4928F64, &type metadata for ThirdPartyObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFEAA7B0);
  }
  return result;
}

unint64_t sub_1D46EA514()
{
  unint64_t result;

  result = qword_1EFEAA7B8;
  if (!qword_1EFEAA7B8)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4928ED4, &type metadata for ThirdPartyObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFEAA7B8);
  }
  return result;
}

unint64_t sub_1D46EA55C()
{
  unint64_t result;

  result = qword_1EFEAA7C0;
  if (!qword_1EFEAA7C0)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4928EFC, &type metadata for ThirdPartyObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFEAA7C0);
  }
  return result;
}

uint64_t sub_1D46EA5A4(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  _DWORD *v24;
  _DWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v30)(uint64_t, uint64_t, uint64_t);

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    v8 = a3[7];
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_1D492201C();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[8];
    v14 = (_QWORD *)(v7 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA540);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v30 = v12;
      v19 = v15[1];
      *v14 = *v15;
      v14[1] = v19;
      *((_DWORD *)v14 + 4) = *((_DWORD *)v15 + 4);
      v20 = *(int *)(v16 + 28);
      v21 = (char *)v14 + v20;
      v22 = (char *)v15 + v20;
      swift_bridgeObjectRetain();
      v12 = v30;
      swift_bridgeObjectRetain();
      v30((uint64_t)v21, (uint64_t)v22, v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v23 = a3[9];
    v24 = (_DWORD *)(v7 + v23);
    v25 = (_DWORD *)((char *)a2 + v23);
    v26 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA548);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      *v24 = *v25;
      v12((uint64_t)v24 + *(int *)(v26 + 20), (uint64_t)v25 + *(int *)(v26 + 20), v11);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
  }
  return v7;
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98F240);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98F258);
}

uint64_t sub_1D46EA7C8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  void (*v11)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  v5 = sub_1D492201C();
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v11(v4, v5);
  v6 = a1 + a2[8];
  v7 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11(v6 + *(int *)(v7 + 28), v5);
  }
  v8 = a1 + a2[9];
  v9 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v8 + *(int *)(v9 + 20), v5);
  return result;
}

uint64_t sub_1D46EA8E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  _DWORD *v22;
  _DWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v28)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D492201C();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[8];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA540);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v28 = v10;
    v17 = v13[1];
    *v12 = *v13;
    v12[1] = v17;
    *((_DWORD *)v12 + 4) = *((_DWORD *)v13 + 4);
    v18 = *(int *)(v14 + 28);
    v19 = (char *)v12 + v18;
    v20 = (char *)v13 + v18;
    swift_bridgeObjectRetain();
    v10 = v28;
    swift_bridgeObjectRetain();
    v28((uint64_t)v19, (uint64_t)v20, v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v21 = a3[9];
  v22 = (_DWORD *)(a1 + v21);
  v23 = (_DWORD *)(a2 + v21);
  v24 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA548);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    *v22 = *v23;
    v10((uint64_t)v22 + *(int *)(v24 + 20), (uint64_t)v23 + *(int *)(v24 + 20), v9);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  return a1;
}

uint64_t sub_1D46EAAB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  _DWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_DWORD *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D492201C();
  v34 = *(_QWORD *)(v9 - 8);
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 24);
  v33(v7, v8, v9);
  v10 = a3[8];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_QWORD *)v11 = *(_QWORD *)v12;
      *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
      *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
      v18 = *(int *)(v13 + 28);
      v19 = v11 + v18;
      v20 = v12 + v18;
      v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32(v19, v20, v9);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1D4697DE0(v11, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA540);
    memcpy((void *)v11, (const void *)v12, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v11 = *(_QWORD *)v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
  v33(v11 + *(int *)(v13 + 28), v12 + *(int *)(v13 + 28), v9);
LABEL_7:
  v22 = a3[9];
  v23 = (_DWORD *)(a1 + v22);
  v24 = (_DWORD *)(a2 + v22);
  v25 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      *v23 = *v24;
      v33((uint64_t)v23 + *(int *)(v25 + 20), (uint64_t)v24 + *(int *)(v25 + 20), v9);
      return a1;
    }
    sub_1D4697DE0((uint64_t)v23, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA548);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    return a1;
  }
  *v23 = *v24;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))((char *)v23 + *(int *)(v25 + 20), (char *)v24 + *(int *)(v25 + 20), v9);
  (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  return a1;
}

uint64_t sub_1D46EAD88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v6 = a3[7];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_1D492201C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[8];
  v12 = (_DWORD *)(a1 + v11);
  v13 = (_DWORD *)(a2 + v11);
  v14 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA540);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
    v12[4] = v13[4];
    v10((char *)v12 + *(int *)(v14 + 28), (char *)v13 + *(int *)(v14 + 28), v9);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = a3[9];
  v18 = (_DWORD *)(a1 + v17);
  v19 = (_DWORD *)(a2 + v17);
  v20 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA548);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    *v18 = *v19;
    v10((char *)v18 + *(int *)(v20 + 20), (char *)v19 + *(int *)(v20 + 20), v9);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_1D46EAF30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_DWORD *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D492201C();
  v30 = *(_QWORD *)(v9 - 8);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 40);
  v29(v7, v8, v9);
  v10 = a3[8];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
      *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v11 + *(int *)(v13 + 28), v12 + *(int *)(v13 + 28), v9);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1D4697DE0(v11, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA540);
    memcpy((void *)v11, (const void *)v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v11 = *(_QWORD *)v12;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
  v29(v11 + *(int *)(v13 + 28), v12 + *(int *)(v13 + 28), v9);
LABEL_7:
  v19 = a3[9];
  v20 = (_DWORD *)(a1 + v19);
  v21 = (_DWORD *)(a2 + v19);
  v22 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      *v20 = *v21;
      v29((uint64_t)v20 + *(int *)(v22 + 20), (uint64_t)v21 + *(int *)(v22 + 20), v9);
      return a1;
    }
    sub_1D4697DE0((uint64_t)v20, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA548);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    return a1;
  }
  *v20 = *v21;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))((char *)v20 + *(int *)(v22 + 20), (char *)v21 + *(int *)(v22 + 20), v9);
  (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  return a1;
}

uint64_t sub_1D46EB1C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D46EB1D4(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D492201C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[7];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA540);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[8];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA548);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[9];
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1D46EB2A0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D46EB2AC(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_1D492201C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[7];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA540);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[8];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA548);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[9];
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_SearchConfig(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98F178);
}

void sub_1D46EB388()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D492201C();
  if (v0 <= 0x3F)
  {
    sub_1D46EA3B0(319, &qword_1ED98F250, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
    if (v1 <= 0x3F)
    {
      sub_1D46EA3B0(319, &qword_1ED98F268, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *sub_1D46EB464(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1D492201C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1D46EB4EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1D492201C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_DWORD *sub_1D46EB524(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1D492201C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_DWORD *sub_1D46EB580(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1D492201C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_DWORD *sub_1D46EB5DC(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1D492201C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_DWORD *sub_1D46EB638(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1D492201C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1D46EB694()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D46EB6A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = sub_1D492201C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_1D46EB6E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D46EB6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = sub_1D492201C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_1D46EB730()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D492201C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D46EB7A8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a1;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    v6 = *(int *)(a3 + 28);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_1D492201C();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_1D46EB860(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_1D492201C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1D46EB8B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v5 = *(int *)(a3 + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1D492201C();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_1D46EB938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1D46EB9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1D46EBA30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1D46EBAB4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D46EBAC0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D492201C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_1D46EBB3C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D46EBB48(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1D492201C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1D46EBBBC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D492201C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D46EBC44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_1D4922328();
  __swift_allocate_value_buffer(v0, qword_1ED9A4B38);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED9A4B38);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D4928FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "domain_configs";
  *(_QWORD *)(v7 + 8) = 14;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF20];
  v9 = sub_1D4922304();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "allow_ocr";
  *(_QWORD *)(v11 + 8) = 9;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "enable_visual_fingerprint";
  *((_QWORD *)v13 + 1) = 25;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "server_search_config";
  *((_QWORD *)v15 + 1) = 20;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 5;
  *(_QWORD *)v16 = "user_feedback_config";
  *(_QWORD *)(v16 + 8) = 20;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_1D4922310();
}

uint64_t sub_1D46EBE44()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1D49220AC();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_1D46EBF48();
          break;
        case 2:
        case 4:
          sub_1D49220C4();
          break;
        case 3:
          sub_1D46EC018();
          break;
        case 5:
          sub_1D46EC0AC();
          break;
        default:
          break;
      }
      result = sub_1D49220AC();
    }
  }
  return result;
}

uint64_t sub_1D46EBF48()
{
  sub_1D4921FF8();
  type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig(0);
  sub_1D4696EA4(&qword_1ED98E0C8, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig, (uint64_t)&unk_1D49295C4);
  sub_1D4696EA4(&qword_1ED98E0D0, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig, (uint64_t)&unk_1D49294FC);
  return sub_1D4922094();
}

uint64_t sub_1D46EC018()
{
  type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  sub_1D4696EA4(&qword_1ED98E1A0, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig, (uint64_t)&unk_1D492945C);
  return sub_1D492219C();
}

uint64_t sub_1D46EC0AC()
{
  type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  sub_1D4696EA4(&qword_1ED98E1B8, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig, (uint64_t)&unk_1D492918C);
  return sub_1D492219C();
}

uint64_t sub_1D46EC140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v3 + 16)
    || (sub_1D4921FF8(),
        type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig(0),
        sub_1D4696EA4(&qword_1ED98E0C8, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig, (uint64_t)&unk_1D49295C4), sub_1D4696EA4(&qword_1ED98E0D0, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig, (uint64_t)&unk_1D49294FC), result = sub_1D4922214(), !v4))
  {
    if (v3[8] != 1 || (result = sub_1D4922268(), !v4))
    {
      result = sub_1D46EC314((uint64_t)v3, a1, a2, a3);
      if (!v4)
      {
        if (v3[9] == 1)
          sub_1D4922268();
        sub_1D46EC488((uint64_t)v3, a1, a2, a3);
        type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
        return sub_1D4922004();
      }
    }
  }
  return result;
}

uint64_t sub_1D46EC314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA540);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  sub_1D469C5EC(a1 + *(int *)(v12 + 32), (uint64_t)v7, &qword_1EFEAA540);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_1D46992EC((uint64_t)v7, &qword_1EFEAA540);
  sub_1D469C630((uint64_t)v7, (uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  sub_1D4696EA4(&qword_1ED98E1A0, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig, (uint64_t)&unk_1D492945C);
  sub_1D49222F8();
  return sub_1D4697DE0((uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
}

uint64_t sub_1D46EC488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA548);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  sub_1D469C5EC(a1 + *(int *)(v12 + 36), (uint64_t)v7, &qword_1EFEAA548);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_1D46992EC((uint64_t)v7, &qword_1EFEAA548);
  sub_1D469C630((uint64_t)v7, (uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
  sub_1D4696EA4(&qword_1ED98E1B8, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig, (uint64_t)&unk_1D492918C);
  sub_1D49222F8();
  return sub_1D4697DE0((uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
}

uint64_t sub_1D46EC5FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a2 = sub_1D47C48B8(MEMORY[0x1E0DEE9D8]);
  *(_WORD *)(a2 + 8) = 0;
  sub_1D4922010();
  v4 = a2 + *(int *)(a1 + 32);
  v5 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = a2 + *(int *)(a1 + 36);
  v7 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
}

unint64_t sub_1D46EC698()
{
  return 0xD000000000000023;
}

void (*sub_1D46EC6BC())(faiss::NormalizationTransform *__hidden this)
{
  return faiss::NormalizationTransform::~NormalizationTransform;
}

uint64_t sub_1D46EC6D0()
{
  return sub_1D46EBE44();
}

uint64_t sub_1D46EC6E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D46EC140(a1, a2, a3);
}

uint64_t sub_1D46EC6F8()
{
  sub_1D4696EA4(&qword_1EFEAA7F8, type metadata accessor for Argos_Protos_Queryflow_SearchConfig, (uint64_t)&unk_1D49296F4);
  return sub_1D4922070();
}

uint64_t sub_1D46EC748@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1ED98DE48, (uint64_t)qword_1ED9A4B38, a1);
}

uint64_t sub_1D46EC764()
{
  sub_1D4696EA4((unint64_t *)&qword_1ED98DE50, type metadata accessor for Argos_Protos_Queryflow_SearchConfig, (uint64_t)&unk_1D492972C);
  return sub_1D49221D8();
}

uint64_t sub_1D46EC7A8()
{
  sub_1D4696EA4((unint64_t *)&qword_1ED98DE50, type metadata accessor for Argos_Protos_Queryflow_SearchConfig, (uint64_t)&unk_1D492972C);
  return sub_1D49221F0();
}

uint64_t sub_1D46EC800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1D4922328();
  __swift_allocate_value_buffer(v0, qword_1ED9A4C00);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED9A4C00);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D4927B00;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "should_perform_ocr";
  *(_QWORD *)(v7 + 8) = 18;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF20];
  v9 = sub_1D4922304();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "should_perform_barcode";
  *((_QWORD *)v11 + 1) = 22;
  v11[16] = 2;
  v10();
  return sub_1D4922310();
}

uint64_t sub_1D46EC950()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1D49220AC();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1)
        sub_1D49220C4();
      result = sub_1D49220AC();
    }
  }
  return result;
}

uint64_t sub_1D46EC9E0()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t result;

  if (*v0 != 1 || (result = sub_1D4922268(), !v1))
  {
    if (v0[1] != 1 || (result = sub_1D4922268(), !v1))
    {
      type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig(0);
      return sub_1D4922004();
    }
  }
  return result;
}

uint64_t sub_1D46ECAA8@<X0>(_WORD *a1@<X8>)
{
  *a1 = 0;
  return sub_1D4922010();
}

unint64_t sub_1D46ECAC8()
{
  return 0xD000000000000029;
}

uint64_t sub_1D46ECAEC()
{
  return sub_1D46EC950();
}

uint64_t sub_1D46ECB00()
{
  return sub_1D46EC9E0();
}

uint64_t sub_1D46ECB14()
{
  sub_1D4696EA4(&qword_1EFEAA830, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig, (uint64_t)&unk_1D492958C);
  return sub_1D4922070();
}

uint64_t sub_1D46ECB64@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1ED98E0C0, (uint64_t)qword_1ED9A4C00, a1);
}

uint64_t sub_1D46ECB80@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1D4922328();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_1D46ECBEC()
{
  sub_1D4696EA4(&qword_1ED98E0C8, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig, (uint64_t)&unk_1D49295C4);
  return sub_1D49221D8();
}

uint64_t sub_1D46ECC2C()
{
  sub_1D4696EA4(&qword_1ED98E0C8, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig, (uint64_t)&unk_1D49295C4);
  return sub_1D49221F0();
}

uint64_t sub_1D46ECC80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_1D4922328();
  __swift_allocate_value_buffer(v0, qword_1ED9A4C60);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED9A4C60);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D4927210;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 2;
  *(_QWORD *)v7 = "domain_configs";
  *(_QWORD *)(v7 + 8) = 14;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF20];
  v9 = sub_1D4922304();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 3;
  *(_QWORD *)v11 = "remove_model_urn_suffix_patterns";
  *((_QWORD *)v11 + 1) = 32;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 4;
  *(_QWORD *)v12 = "location_significant_digits";
  *(_QWORD *)(v12 + 8) = 27;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_1D4922310();
}

uint64_t sub_1D46ECE14()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1D49220AC();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 4:
          sub_1D4922118();
          break;
        case 3:
          sub_1D4922130();
          break;
        case 2:
          sub_1D46ECEDC();
          break;
      }
      result = sub_1D49220AC();
    }
  }
  return result;
}

uint64_t sub_1D46ECEDC()
{
  sub_1D4921FF8();
  type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig(0);
  sub_1D4696EA4(&qword_1ED98E160, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig, (uint64_t)&unk_1D49292F4);
  sub_1D4696EA4(&qword_1ED98E168, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig, (uint64_t)&unk_1D492922C);
  return sub_1D4922094();
}

uint64_t sub_1D46ECFAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16)
    || (sub_1D4921FF8(),
        type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig(0),
        sub_1D4696EA4(&qword_1ED98E160, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig, (uint64_t)&unk_1D49292F4), sub_1D4696EA4(&qword_1ED98E168, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig, (uint64_t)&unk_1D492922C), result = sub_1D4922214(), !v1))
  {
    if (!*(_QWORD *)(*(_QWORD *)(v0 + 8) + 16) || (result = sub_1D49222B0(), !v1))
    {
      if (!*(_DWORD *)(v0 + 16) || (result = sub_1D4922298(), !v1))
      {
        type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
        return sub_1D4922004();
      }
    }
  }
  return result;
}

uint64_t sub_1D46ED134@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)a1 = sub_1D47C4054(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = 0;
  return sub_1D4922010();
}

unint64_t sub_1D46ED180()
{
  return 0xD000000000000029;
}

uint64_t sub_1D46ED19C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = sub_1D492201C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1D46ED1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 28);
  v5 = sub_1D492201C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_1D46ED21C()
{
  return sub_1D46ECE14();
}

uint64_t sub_1D46ED230()
{
  return sub_1D46ECFAC();
}

uint64_t sub_1D46ED244()
{
  sub_1D4696EA4(&qword_1EFEAA838, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig, (uint64_t)&unk_1D4929424);
  return sub_1D4922070();
}

uint64_t sub_1D46ED294@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1ED98E198, (uint64_t)qword_1ED9A4C60, a1);
}

uint64_t sub_1D46ED2B0()
{
  sub_1D4696EA4(&qword_1ED98E1A0, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig, (uint64_t)&unk_1D492945C);
  return sub_1D49221D8();
}

uint64_t sub_1D46ED2F0()
{
  sub_1D4696EA4(&qword_1ED98E1A0, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig, (uint64_t)&unk_1D492945C);
  return sub_1D49221F0();
}

uint64_t sub_1D46ED344()
{
  uint64_t result;

  result = sub_1D492270C();
  qword_1EFEC2CF8 = 0xD000000000000029;
  unk_1EFEC2D00 = 0x80000001D4940C90;
  return result;
}

uint64_t sub_1D46ED3B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1D4922328();
  __swift_allocate_value_buffer(v0, qword_1ED9A4C48);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED9A4C48);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D4927B00;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "s2_cell_level";
  *(_QWORD *)(v7 + 8) = 13;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF20];
  v9 = sub_1D4922304();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "require_location";
  *((_QWORD *)v11 + 1) = 16;
  v11[16] = 2;
  v10();
  return sub_1D4922310();
}

uint64_t sub_1D46ED508()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1D49220AC();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_1D49220C4();
      }
      else if (result == 1)
      {
        sub_1D4922118();
      }
      result = sub_1D49220AC();
    }
  }
  return result;
}

uint64_t sub_1D46ED5A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_DWORD *)v0 || (result = sub_1D4922298(), !v1))
  {
    if (*(_BYTE *)(v0 + 4) != 1 || (result = sub_1D4922268(), !v1))
    {
      type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig(0);
      return sub_1D4922004();
    }
  }
  return result;
}

uint64_t sub_1D46ED668@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(_BYTE *)(a1 + 4) = 0;
  return sub_1D4922010();
}

uint64_t sub_1D46ED68C()
{
  uint64_t v0;

  if (qword_1EFEA9C10 != -1)
    swift_once();
  v0 = qword_1EFEC2CF8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1D46ED6E8()
{
  return sub_1D46ED508();
}

uint64_t sub_1D46ED6FC()
{
  return sub_1D46ED5A8();
}

uint64_t sub_1D46ED710()
{
  sub_1D4696EA4(&qword_1EFEAA840, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig, (uint64_t)&unk_1D49292BC);
  return sub_1D4922070();
}

uint64_t sub_1D46ED760@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1ED98E158, (uint64_t)qword_1ED9A4C48, a1);
}

uint64_t sub_1D46ED77C()
{
  sub_1D4696EA4(&qword_1ED98E160, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig, (uint64_t)&unk_1D49292F4);
  return sub_1D49221D8();
}

uint64_t sub_1D46ED7BC()
{
  sub_1D4696EA4(&qword_1ED98E160, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig, (uint64_t)&unk_1D49292F4);
  return sub_1D49221F0();
}

uint64_t sub_1D46ED810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_1D4922328();
  __swift_allocate_value_buffer(v0, qword_1ED9A4C78);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED9A4C78);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1D49273C0;
  v5 = v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v4 + v3) = 1;
  *(_QWORD *)v5 = "location_significant_digits";
  *(_QWORD *)(v5 + 8) = 27;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x1E0D3EF20];
  v7 = sub_1D4922304();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  return sub_1D4922310();
}

uint64_t sub_1D46ED914()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_1D49220AC();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 1)
      sub_1D4922118();
  }
  return result;
}

uint64_t sub_1D46ED980()
{
  _DWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (!*v0 || (result = sub_1D4922298(), !v1))
  {
    type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
    return sub_1D4922004();
  }
  return result;
}

uint64_t sub_1D46EDA10@<X0>(_DWORD *a1@<X8>)
{
  *a1 = 0;
  return sub_1D4922010();
}

unint64_t sub_1D46EDA30()
{
  return 0xD000000000000029;
}

uint64_t sub_1D46EDA4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_1D492201C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1D46EDA8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 20);
  v5 = sub_1D492201C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

void (*sub_1D46EDACC())(faiss::NormalizationTransform *__hidden this)
{
  return faiss::NormalizationTransform::~NormalizationTransform;
}

uint64_t sub_1D46EDAE0()
{
  return sub_1D46ED914();
}

uint64_t sub_1D46EDAF4()
{
  return sub_1D46ED980();
}

uint64_t sub_1D46EDB08()
{
  sub_1D4696EA4(&qword_1EFEAA848, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig, (uint64_t)&unk_1D4929154);
  return sub_1D4922070();
}

uint64_t sub_1D46EDB58@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1ED98E1B0, (uint64_t)qword_1ED9A4C78, a1);
}

uint64_t sub_1D46EDB74()
{
  sub_1D4696EA4(&qword_1ED98E1B8, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig, (uint64_t)&unk_1D492918C);
  return sub_1D49221D8();
}

uint64_t sub_1D46EDBB4()
{
  sub_1D4696EA4(&qword_1ED98E1B8, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig, (uint64_t)&unk_1D492918C);
  return sub_1D49221F0();
}

uint64_t sub_1D46EDC08()
{
  return sub_1D4696EA4(&qword_1EFEAA7C8, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig, (uint64_t)&unk_1D492909C);
}

uint64_t sub_1D46EDC34()
{
  return sub_1D4696EA4(&qword_1ED98E1B8, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig, (uint64_t)&unk_1D492918C);
}

uint64_t sub_1D46EDC60()
{
  return sub_1D4696EA4(&qword_1EFEAA7D0, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig, (uint64_t)&unk_1D49290C4);
}

uint64_t sub_1D46EDC8C()
{
  return sub_1D4696EA4(&qword_1ED98E1C0, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig, (uint64_t)&unk_1D4929104);
}

uint64_t sub_1D46EDCB8()
{
  return sub_1D4696EA4(&qword_1ED98E170, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig, (uint64_t)&unk_1D4929204);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig(uint64_t a1)
{
  return sub_1D469C2D0(a1, qword_1ED98E180);
}

uint64_t sub_1D46EDCF8()
{
  return sub_1D4696EA4(&qword_1ED98E160, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig, (uint64_t)&unk_1D49292F4);
}

uint64_t sub_1D46EDD24()
{
  return sub_1D4696EA4(&qword_1ED98E168, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig, (uint64_t)&unk_1D492922C);
}

uint64_t sub_1D46EDD50()
{
  return sub_1D4696EA4(&qword_1ED98E178, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig, (uint64_t)&unk_1D492926C);
}

uint64_t sub_1D46EDD7C()
{
  return sub_1D4696EA4(&qword_1EFEAA7D8, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig, (uint64_t)&unk_1D492936C);
}

uint64_t sub_1D46EDDA8()
{
  return sub_1D4696EA4(&qword_1ED98E1A0, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig, (uint64_t)&unk_1D492945C);
}

uint64_t sub_1D46EDDD4()
{
  return sub_1D4696EA4(&qword_1EFEAA7E0, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig, (uint64_t)&unk_1D4929394);
}

uint64_t sub_1D46EDE00()
{
  return sub_1D4696EA4(&qword_1ED98E1A8, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig, (uint64_t)&unk_1D49293D4);
}

uint64_t sub_1D46EDE2C()
{
  return sub_1D4696EA4(&qword_1ED98E0D8, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig, (uint64_t)&unk_1D49294D4);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98E0E8);
}

uint64_t sub_1D46EDE6C()
{
  return sub_1D4696EA4(&qword_1ED98E0C8, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig, (uint64_t)&unk_1D49295C4);
}

uint64_t sub_1D46EDE98()
{
  return sub_1D4696EA4(&qword_1ED98E0D0, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig, (uint64_t)&unk_1D49294FC);
}

uint64_t sub_1D46EDEC4()
{
  return sub_1D4696EA4(&qword_1ED98E0E0, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig, (uint64_t)&unk_1D492953C);
}

uint64_t sub_1D46EDEF0()
{
  return sub_1D4696EA4(&qword_1EFEAA7E8, type metadata accessor for Argos_Protos_Queryflow_SearchConfig, (uint64_t)&unk_1D492963C);
}

uint64_t sub_1D46EDF1C()
{
  return sub_1D4696EA4((unint64_t *)&qword_1ED98DE50, type metadata accessor for Argos_Protos_Queryflow_SearchConfig, (uint64_t)&unk_1D492972C);
}

uint64_t sub_1D46EDF48()
{
  return sub_1D4696EA4(&qword_1EFEAA7F0, type metadata accessor for Argos_Protos_Queryflow_SearchConfig, (uint64_t)&unk_1D4929664);
}

uint64_t sub_1D46EDF74()
{
  return sub_1D4696EA4((unint64_t *)&unk_1ED98DE58, type metadata accessor for Argos_Protos_Queryflow_SearchConfig, (uint64_t)&unk_1D49296A4);
}

uint64_t sub_1D46EDFA0(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  char v26;
  int64_t v27;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v27)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v27)
        return 1;
      v12 = *(_QWORD *)(v5 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v27)
          return 1;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (!v12)
          break;
      }
    }
LABEL_22:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    v14 = 16 * v10;
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + v14);
    v16 = *v15;
    v17 = v15[1];
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 56) + v14);
    v20 = *v18;
    v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_1D47CA4DC(v16, v17);
    v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v24 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v26 = sub_1D4922E38();
      result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
        return 0;
    }
  }
  v13 = v11 + 3;
  if (v13 >= v27)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v27)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1D46EE1A4(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  char v20;
  char v21;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
          break;
      }
    }
LABEL_21:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(_DWORD *)(*(_QWORD *)(v3 + 56) + 4 * v11);
    swift_bridgeObjectRetain();
    v19 = sub_1D47CA4DC(v16, v17);
    v21 = v20;
    result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || *(_DWORD *)(*(_QWORD *)(a2 + 56) + 4 * v19) != v18)
      return 0;
  }
  v14 = v12 + 3;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1D46EE338(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  _BOOL8 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  BOOL v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  uint64_t *v62;
  uint64_t v63;

  v60 = type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels(0);
  v63 = *(_QWORD *)(v60 - 8);
  v4 = MEMORY[0x1E0C80A78](v60);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v54 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA850);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x1E0C80A78](v10);
  v62 = (uint64_t *)((char *)&v54 - v14);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v58 = a1;
  v59 = a2;
  v61 = 0;
  v17 = *(_QWORD *)(a1 + 64);
  v16 = a1 + 64;
  v15 = v17;
  v18 = 1 << *(_BYTE *)(v16 - 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v15;
  v56 = v16;
  v57 = (unint64_t)(v18 + 63) >> 6;
  v55 = v57 - 1;
  while (1)
  {
    if (v20)
    {
      v22 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v23 = v62;
      v24 = v22 | (v61 << 6);
LABEL_9:
      v25 = (uint64_t *)(*(_QWORD *)(v58 + 48) + 16 * v24);
      v27 = *v25;
      v26 = v25[1];
      v28 = *(_QWORD *)(v58 + 56) + *(_QWORD *)(v63 + 72) * v24;
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB5E0);
      sub_1D469C304(v28, (uint64_t)v12 + *(int *)(v29 + 48), type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels);
      *v12 = v27;
      v12[1] = v26;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v12, 0, 1, v29);
      swift_bridgeObjectRetain();
      goto LABEL_28;
    }
    v23 = v62;
    v30 = v61 + 1;
    if (__OFADD__(v61, 1))
    {
      __break(1u);
      goto LABEL_54;
    }
    if (v30 < v57)
    {
      v31 = *(_QWORD *)(v56 + 8 * v30);
      if (v31)
        goto LABEL_13;
      v32 = v61 + 2;
      ++v61;
      if (v30 + 1 < v57)
      {
        v31 = *(_QWORD *)(v56 + 8 * v32);
        if (v31)
          goto LABEL_16;
        v61 = v30 + 1;
        if (v30 + 2 < v57)
        {
          v31 = *(_QWORD *)(v56 + 8 * (v30 + 2));
          if (v31)
          {
            v30 += 2;
            goto LABEL_13;
          }
          v32 = v30 + 3;
          v61 = v30 + 2;
          if (v30 + 3 < v57)
            break;
        }
      }
    }
LABEL_27:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB5E0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v12, 1, 1, v33);
    v20 = 0;
LABEL_28:
    sub_1D46B3464((uint64_t)v12, (uint64_t)v23, &qword_1EFEAA850);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAB5E0);
    v35 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v23, 1, v34);
    v36 = v35 == 1;
    if (v35 == 1)
      return v36;
    v37 = (uint64_t)v6;
    v38 = (uint64_t)v23 + *(int *)(v34 + 48);
    v39 = *v23;
    v40 = v23[1];
    sub_1D469C630(v38, (uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels);
    v41 = v39;
    v42 = v59;
    v43 = sub_1D47CA4DC(v41, v40);
    v45 = v44;
    swift_bridgeObjectRelease();
    if ((v45 & 1) == 0)
      goto LABEL_49;
    v46 = *(_QWORD *)(v42 + 56) + *(_QWORD *)(v63 + 72) * v43;
    v6 = (char *)v37;
    sub_1D469C304(v46, v37, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels);
    v47 = *(_QWORD **)v37;
    v48 = *(_QWORD **)v8;
    v49 = *(_QWORD *)(*(_QWORD *)v37 + 16);
    if (v49 != *(_QWORD *)(*(_QWORD *)v8 + 16))
      goto LABEL_48;
    if (v49 && v47 != v48)
    {
      if ((v47[4] != v48[4] || v47[5] != v48[5]) && (sub_1D4922E38() & 1) == 0)
        goto LABEL_48;
      if (v49 != 1)
      {
        if ((v47[6] != v48[6] || v47[7] != v48[7]) && (sub_1D4922E38() & 1) == 0)
          goto LABEL_48;
        v50 = v49 - 2;
        if (v50)
        {
          v51 = v48 + 9;
          v52 = v47 + 9;
          while (1)
          {
            v53 = *(v52 - 1) == *(v51 - 1) && *v52 == *v51;
            if (!v53 && (sub_1D4922E38() & 1) == 0)
              break;
            v51 += 2;
            v52 += 2;
            if (!--v50)
              goto LABEL_6;
          }
LABEL_48:
          sub_1D4697DE0(v37, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels);
LABEL_49:
          sub_1D4697DE0((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels);
          return 0;
        }
      }
    }
LABEL_6:
    sub_1D492201C();
    sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v21 = sub_1D49225E0();
    sub_1D4697DE0(v37, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels);
    result = sub_1D4697DE0((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels);
    if ((v21 & 1) == 0)
      return v36;
  }
  v31 = *(_QWORD *)(v56 + 8 * v32);
  if (v31)
  {
LABEL_16:
    v30 = v32;
LABEL_13:
    v20 = (v31 - 1) & v31;
    v24 = __clz(__rbit64(v31)) + (v30 << 6);
    v61 = v30;
    goto LABEL_9;
  }
  while (1)
  {
    v30 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v30 >= v57)
    {
      v61 = v55;
      goto LABEL_27;
    }
    v31 = *(_QWORD *)(v56 + 8 * v30);
    ++v32;
    if (v31)
      goto LABEL_13;
  }
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_1D46EE850(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  float v18;
  unint64_t v19;
  char v20;
  char v21;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
          break;
      }
    }
LABEL_21:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(float *)(*(_QWORD *)(v3 + 56) + 4 * v11);
    swift_bridgeObjectRetain();
    v19 = sub_1D47CA4DC(v16, v17);
    v21 = v20;
    result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || *(float *)(*(_QWORD *)(a2 + 56) + 4 * v19) != v18)
      return 0;
  }
  v14 = v12 + 3;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1D46EE9EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  _BOOL8 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t *v55;
  uint64_t v56;

  v53 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig(0);
  v56 = *(_QWORD *)(v53 - 8);
  v4 = MEMORY[0x1E0C80A78](v53);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v47 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA810);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x1E0C80A78](v10);
  v55 = (uint64_t *)((char *)&v47 - v14);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v51 = a1;
  v52 = a2;
  v54 = 0;
  v17 = *(_QWORD *)(a1 + 64);
  v16 = a1 + 64;
  v15 = v17;
  v18 = 1 << *(_BYTE *)(v16 - 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v15;
  v49 = v16;
  v50 = (unint64_t)(v18 + 63) >> 6;
  v48 = v50 - 1;
  while (1)
  {
    if (v20)
    {
      v21 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v22 = v55;
      v23 = v21 | (v54 << 6);
LABEL_8:
      v24 = (uint64_t *)(*(_QWORD *)(v51 + 48) + 16 * v23);
      v26 = *v24;
      v25 = v24[1];
      v27 = *(_QWORD *)(v51 + 56) + *(_QWORD *)(v56 + 72) * v23;
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA818);
      sub_1D469C304(v27, (uint64_t)v12 + *(int *)(v28 + 48), type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
      *v12 = v26;
      v12[1] = v25;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v12, 0, 1, v28);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    v22 = v55;
    v29 = v54 + 1;
    if (__OFADD__(v54, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v29 < v50)
    {
      v30 = *(_QWORD *)(v49 + 8 * v29);
      if (v30)
        goto LABEL_12;
      v31 = v54 + 2;
      ++v54;
      if (v29 + 1 < v50)
      {
        v30 = *(_QWORD *)(v49 + 8 * v31);
        if (v30)
          goto LABEL_15;
        v54 = v29 + 1;
        if (v29 + 2 < v50)
        {
          v30 = *(_QWORD *)(v49 + 8 * (v29 + 2));
          if (v30)
          {
            v29 += 2;
            goto LABEL_12;
          }
          v31 = v29 + 3;
          v54 = v29 + 2;
          if (v29 + 3 < v50)
            break;
        }
      }
    }
LABEL_26:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA818);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v12, 1, 1, v32);
    v20 = 0;
LABEL_27:
    sub_1D46B3464((uint64_t)v12, (uint64_t)v22, &qword_1EFEAA810);
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA818);
    v34 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v22, 1, v33);
    v35 = v34 == 1;
    if (v34 == 1)
      return v35;
    v36 = (uint64_t)v6;
    v37 = (uint64_t)v22 + *(int *)(v33 + 48);
    v38 = *v22;
    v39 = v22[1];
    sub_1D469C630(v37, (uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
    v40 = v38;
    v41 = v52;
    v42 = sub_1D47CA4DC(v40, v39);
    v44 = v43;
    swift_bridgeObjectRelease();
    if ((v44 & 1) == 0)
      goto LABEL_35;
    v45 = *(_QWORD *)(v41 + 56) + *(_QWORD *)(v56 + 72) * v42;
    v6 = (char *)v36;
    sub_1D469C304(v45, v36, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
    if (*(_DWORD *)v36 != *(_DWORD *)v8 || *(unsigned __int8 *)(v36 + 4) != v8[4])
    {
      sub_1D4697DE0(v36, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
LABEL_35:
      sub_1D4697DE0((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
      return 0;
    }
    sub_1D492201C();
    sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v46 = sub_1D49225E0();
    sub_1D4697DE0(v36, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
    result = sub_1D4697DE0((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
    if ((v46 & 1) == 0)
      return v35;
  }
  v30 = *(_QWORD *)(v49 + 8 * v31);
  if (v30)
  {
LABEL_15:
    v29 = v31;
LABEL_12:
    v20 = (v30 - 1) & v30;
    v23 = __clz(__rbit64(v30)) + (v29 << 6);
    v54 = v29;
    goto LABEL_8;
  }
  while (1)
  {
    v29 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v29 >= v50)
    {
      v54 = v48;
      goto LABEL_26;
    }
    v30 = *(_QWORD *)(v49 + 8 * v29);
    ++v31;
    if (v30)
      goto LABEL_12;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1D46EEE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  _BOOL8 v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t *v55;
  uint64_t v56;

  v53 = type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig(0);
  v56 = *(_QWORD *)(v53 - 8);
  v4 = MEMORY[0x1E0C80A78](v53);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (unsigned __int8 *)&v47 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA820);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x1E0C80A78](v10);
  v55 = (uint64_t *)((char *)&v47 - v14);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v51 = a1;
  v52 = a2;
  v54 = 0;
  v17 = *(_QWORD *)(a1 + 64);
  v16 = a1 + 64;
  v15 = v17;
  v18 = 1 << *(_BYTE *)(v16 - 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v15;
  v49 = v16;
  v50 = (unint64_t)(v18 + 63) >> 6;
  v48 = v50 - 1;
  while (1)
  {
    if (v20)
    {
      v21 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v22 = v55;
      v23 = v21 | (v54 << 6);
LABEL_8:
      v24 = (uint64_t *)(*(_QWORD *)(v51 + 48) + 16 * v23);
      v26 = *v24;
      v25 = v24[1];
      v27 = *(_QWORD *)(v51 + 56) + *(_QWORD *)(v56 + 72) * v23;
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA828);
      sub_1D469C304(v27, (uint64_t)v12 + *(int *)(v28 + 48), type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
      *v12 = v26;
      v12[1] = v25;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v12, 0, 1, v28);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    v22 = v55;
    v29 = v54 + 1;
    if (__OFADD__(v54, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v29 < v50)
    {
      v30 = *(_QWORD *)(v49 + 8 * v29);
      if (v30)
        goto LABEL_12;
      v31 = v54 + 2;
      ++v54;
      if (v29 + 1 < v50)
      {
        v30 = *(_QWORD *)(v49 + 8 * v31);
        if (v30)
          goto LABEL_15;
        v54 = v29 + 1;
        if (v29 + 2 < v50)
        {
          v30 = *(_QWORD *)(v49 + 8 * (v29 + 2));
          if (v30)
          {
            v29 += 2;
            goto LABEL_12;
          }
          v31 = v29 + 3;
          v54 = v29 + 2;
          if (v29 + 3 < v50)
            break;
        }
      }
    }
LABEL_26:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA828);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v12, 1, 1, v32);
    v20 = 0;
LABEL_27:
    sub_1D46B3464((uint64_t)v12, (uint64_t)v22, &qword_1EFEAA820);
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA828);
    v34 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v22, 1, v33);
    v35 = v34 == 1;
    if (v34 == 1)
      return v35;
    v36 = v6;
    v37 = (uint64_t)v22 + *(int *)(v33 + 48);
    v38 = *v22;
    v39 = v22[1];
    sub_1D469C630(v37, (uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
    v40 = v38;
    v41 = v52;
    v42 = sub_1D47CA4DC(v40, v39);
    v44 = v43;
    swift_bridgeObjectRelease();
    if ((v44 & 1) == 0)
      goto LABEL_35;
    v45 = *(_QWORD *)(v41 + 56) + *(_QWORD *)(v56 + 72) * v42;
    v6 = v36;
    sub_1D469C304(v45, (uint64_t)v36, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
    if (*v36 != *v8 || v36[1] != v8[1])
    {
      sub_1D4697DE0((uint64_t)v36, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
LABEL_35:
      sub_1D4697DE0((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
      return 0;
    }
    sub_1D492201C();
    sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v46 = sub_1D49225E0();
    sub_1D4697DE0((uint64_t)v36, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
    result = sub_1D4697DE0((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
    if ((v46 & 1) == 0)
      return v35;
  }
  v30 = *(_QWORD *)(v49 + 8 * v31);
  if (v30)
  {
LABEL_15:
    v29 = v31;
LABEL_12:
    v20 = (v30 - 1) & v30;
    v23 = __clz(__rbit64(v30)) + (v29 << 6);
    v54 = v29;
    goto LABEL_8;
  }
  while (1)
  {
    v29 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v29 >= v50)
    {
      v54 = v48;
      goto LABEL_26;
    }
    v30 = *(_QWORD *)(v49 + 8 * v29);
    ++v31;
    if (v30)
      goto LABEL_12;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1D46EF2CC(uint64_t a1, uint64_t a2)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unint64_t v21;
  char v22;
  char v23;
  int64_t v25;

  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v4 = 0;
    v5 = a1 + 64;
    v6 = 1 << *(_BYTE *)(a1 + 32);
    v7 = -1;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    v8 = v7 & *(_QWORD *)(a1 + 64);
    v25 = (unint64_t)(v6 + 63) >> 6;
    while (1)
    {
      if (v8)
      {
        v9 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v10 = v9 | (v4 << 6);
      }
      else
      {
        v11 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          goto LABEL_29;
        }
        if (v11 >= v25)
          return 1;
        v12 = *(_QWORD *)(v5 + 8 * v11);
        ++v4;
        if (!v12)
        {
          v4 = v11 + 1;
          if (v11 + 1 >= v25)
            return 1;
          v12 = *(_QWORD *)(v5 + 8 * v4);
          if (!v12)
          {
            v4 = v11 + 2;
            if (v11 + 2 >= v25)
              return 1;
            v12 = *(_QWORD *)(v5 + 8 * v4);
            if (!v12)
            {
              v13 = v11 + 3;
              if (v13 >= v25)
                return 1;
              v12 = *(_QWORD *)(v5 + 8 * v13);
              if (!v12)
              {
                while (1)
                {
                  v4 = v13 + 1;
                  if (__OFADD__(v13, 1))
                    break;
                  if (v4 >= v25)
                    return 1;
                  v12 = *(_QWORD *)(v5 + 8 * v4);
                  ++v13;
                  if (v12)
                    goto LABEL_22;
                }
LABEL_29:
                __break(1u);
                JUMPOUT(0x1D46EF4D8);
              }
              v4 = v13;
            }
          }
        }
LABEL_22:
        v8 = (v12 - 1) & v12;
        v10 = __clz(__rbit64(v12)) + (v4 << 6);
      }
      v14 = 16 * v10;
      v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + v14);
      v16 = *v15;
      v17 = v15[1];
      v18 = *(_QWORD *)(a1 + 56) + v14;
      v19 = *(_QWORD *)v18;
      v20 = *(unsigned __int8 *)(v18 + 8);
      swift_bridgeObjectRetain();
      v21 = sub_1D47CA4DC(v16, v17);
      v23 = v22;
      swift_bridgeObjectRelease();
      if ((v23 & 1) != 0)
      {
        if (v20)
          __asm { BR              X9 }
        if (*(_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v21) == v19)
          continue;
      }
      return 0;
    }
  }
  return 0;
}

uint64_t sub_1D46EF4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  _QWORD *v44;
  char v46;
  int64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  char *v51;
  int64_t v52;
  _BOOL4 v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v4 = sub_1D4921008();
  v55 = *(_QWORD *)(v4 - 8);
  v56 = v4;
  MEMORY[0x1E0C80A78](v4);
  v51 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA868);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v47 - v11;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v52 = 0;
  v50 = a1;
  v15 = *(_QWORD *)(a1 + 64);
  v14 = a1 + 64;
  v13 = v15;
  v16 = 1 << *(_BYTE *)(v14 - 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v13;
  v48 = v14;
  v49 = (unint64_t)(v16 + 63) >> 6;
  v47 = v49 - 1;
  v19 = (uint64_t)v51;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v21 = (v18 - 1) & v18;
      v22 = v20 | (v52 << 6);
LABEL_9:
      v23 = v50;
      (*(void (**)(char *, unint64_t, uint64_t))(v55 + 16))(v9, *(_QWORD *)(v50 + 48) + *(_QWORD *)(v55 + 72) * v22, v56);
      v24 = (uint64_t *)(*(_QWORD *)(v23 + 56) + 16 * v22);
      v25 = *v24;
      v26 = v24[1];
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA870);
      v28 = &v9[*(int *)(v27 + 48)];
      *(_QWORD *)v28 = v25;
      *((_QWORD *)v28 + 1) = v26;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v9, 0, 1, v27);
      swift_bridgeObjectRetain();
      goto LABEL_28;
    }
    v29 = v52 + 1;
    if (__OFADD__(v52, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v29 < v49)
    {
      v30 = *(_QWORD *)(v48 + 8 * v29);
      if (v30)
        goto LABEL_13;
      v31 = v52 + 2;
      ++v52;
      if (v29 + 1 < v49)
      {
        v30 = *(_QWORD *)(v48 + 8 * v31);
        if (v30)
          goto LABEL_16;
        v52 = v29 + 1;
        if (v29 + 2 < v49)
        {
          v30 = *(_QWORD *)(v48 + 8 * (v29 + 2));
          if (v30)
          {
            v29 += 2;
            goto LABEL_13;
          }
          v31 = v29 + 3;
          v52 = v29 + 2;
          if (v29 + 3 < v49)
            break;
        }
      }
    }
LABEL_27:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA870);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v9, 1, 1, v32);
    v21 = 0;
LABEL_28:
    sub_1D46B3464((uint64_t)v9, (uint64_t)v12, &qword_1EFEAA868);
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA870);
    v34 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v12, 1, v33) == 1;
    result = v34;
    if (v34)
      return result;
    v53 = v34;
    v54 = v21;
    v35 = v9;
    v36 = &v12[*(int *)(v33 + 48)];
    v38 = v55;
    v37 = v56;
    v39 = v12;
    (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v19, v12, v56);
    v40 = *(_QWORD *)v36;
    v41 = *((_QWORD *)v36 + 1);
    v42 = sub_1D47CA540(v19);
    LOBYTE(v36) = v43;
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v19, v37);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v44 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v42);
    if (*v44 == v40 && v44[1] == v41)
    {
      result = swift_bridgeObjectRelease();
      v9 = v35;
      v12 = v39;
      v18 = v54;
    }
    else
    {
      v46 = sub_1D4922E38();
      swift_bridgeObjectRelease();
      v9 = v35;
      v12 = v39;
      v18 = v54;
      result = v53;
      if ((v46 & 1) == 0)
        return result;
    }
  }
  v30 = *(_QWORD *)(v48 + 8 * v31);
  if (v30)
  {
LABEL_16:
    v29 = v31;
LABEL_13:
    v21 = (v30 - 1) & v30;
    v22 = __clz(__rbit64(v30)) + (v29 << 6);
    v52 = v29;
    goto LABEL_9;
  }
  while (1)
  {
    v29 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v29 >= v49)
    {
      v52 = v47;
      goto LABEL_27;
    }
    v30 = *(_QWORD *)(v48 + 8 * v29);
    ++v31;
    if (v30)
      goto LABEL_13;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D46EF8DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  int64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int64_t v46;
  _BOOL4 v47;
  uint64_t v48;
  uint64_t v49;

  v4 = sub_1D4921008();
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  MEMORY[0x1E0C80A78](v4);
  v45 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA858);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v7);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v43 = a1;
  v44 = (char *)&v40 - v11;
  v46 = 0;
  v14 = *(_QWORD *)(a1 + 64);
  v13 = a1 + 64;
  v12 = v14;
  v15 = 1 << *(_BYTE *)(v13 - 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v12;
  v41 = v13;
  v42 = (unint64_t)(v15 + 63) >> 6;
  v40 = v42 - 1;
  v18 = (uint64_t *)&unk_1EFEAA860;
  v19 = v48;
  v20 = (uint64_t)v45;
  while (1)
  {
    if (v17)
    {
      v21 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v22 = v21 | (v46 << 6);
LABEL_8:
      v23 = v43;
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v9, *(_QWORD *)(v43 + 48) + *(_QWORD *)(v48 + 72) * v22, v49);
      v24 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v22);
      v25 = __swift_instantiateConcreteTypeFromMangledName(v18);
      *(_QWORD *)&v9[*(int *)(v25 + 48)] = v24;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v9, 0, 1, v25);
      swift_bridgeObjectRetain();
      v26 = (uint64_t)v44;
      goto LABEL_27;
    }
    v27 = v46 + 1;
    if (__OFADD__(v46, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    v26 = (uint64_t)v44;
    if (v27 < v42)
    {
      v28 = *(_QWORD *)(v41 + 8 * v27);
      if (v28)
        goto LABEL_12;
      v29 = v46 + 2;
      ++v46;
      if (v27 + 1 < v42)
      {
        v28 = *(_QWORD *)(v41 + 8 * v29);
        if (v28)
          goto LABEL_15;
        v46 = v27 + 1;
        if (v27 + 2 < v42)
        {
          v28 = *(_QWORD *)(v41 + 8 * (v27 + 2));
          if (v28)
          {
            v27 += 2;
            goto LABEL_12;
          }
          v29 = v27 + 3;
          v46 = v27 + 2;
          if (v27 + 3 < v42)
            break;
        }
      }
    }
LABEL_26:
    v30 = __swift_instantiateConcreteTypeFromMangledName(v18);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v9, 1, 1, v30);
    v17 = 0;
LABEL_27:
    sub_1D46B3464((uint64_t)v9, v26, &qword_1EFEAA858);
    v31 = __swift_instantiateConcreteTypeFromMangledName(v18);
    v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v26, 1, v31);
    v47 = v32 == 1;
    if (v32 == 1)
      return v47;
    v33 = v18;
    v34 = *(int *)(v31 + 48);
    v35 = v49;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v20, v26, v49);
    v36 = *(_QWORD *)(v26 + v34);
    sub_1D47CA540(v20);
    LOBYTE(v34) = v37;
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v35);
    if ((v34 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v38 = swift_bridgeObjectRetain();
    v39 = sub_1D46D458C(v38, v36);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v18 = v33;
    if ((v39 & 1) == 0)
      return v47;
  }
  v28 = *(_QWORD *)(v41 + 8 * v29);
  if (v28)
  {
LABEL_15:
    v27 = v29;
LABEL_12:
    v17 = (v28 - 1) & v28;
    v22 = __clz(__rbit64(v28)) + (v27 << 6);
    v46 = v27;
    goto LABEL_8;
  }
  while (1)
  {
    v27 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v27 >= v42)
    {
      v46 = v40;
      goto LABEL_26;
    }
    v28 = *(_QWORD *)(v41 + 8 * v27);
    ++v29;
    if (v28)
      goto LABEL_12;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1D46EFC94(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;

  if (result == a2)
    return 1;
  v2 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_24;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v11 >= v8)
      return 1;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        return 1;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          return 1;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            return 1;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_24:
    v14 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v15 = *v14;
    v16 = v14[1];
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D47CA4DC(v15, v16);
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v20 = swift_bridgeObjectRetain();
    v21 = sub_1D46EDFA0(v20, v17);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
      return 0;
  }
  v13 = v11 + 4;
  if (v13 >= v8)
    return 1;
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      return 1;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1D46EFE70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  int64_t v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  _BOOL4 v62;
  uint64_t *v63;
  uint64_t v64;

  v60 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
  v64 = *(_QWORD *)(v60 - 8);
  v4 = MEMORY[0x1E0C80A78](v60);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v55 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D138);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (int64_t *)((char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x1E0C80A78](v10);
  v15 = (int64_t *)((char *)&v55 - v14);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v58 = a1;
  v59 = a2;
  v61 = 0;
  v18 = *(_QWORD *)(a1 + 64);
  v17 = a1 + 64;
  v16 = v18;
  v19 = 1 << *(_BYTE *)(v17 - 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v16;
  v56 = v17;
  v57 = (unint64_t)(v19 + 63) >> 6;
  v55 = v57 - 1;
  v22 = (uint64_t *)&unk_1ED98D130;
  v63 = (int64_t *)((char *)&v55 - v14);
  while (1)
  {
    if (v21)
    {
      v24 = __clz(__rbit64(v21));
      v25 = (v21 - 1) & v21;
      v26 = v24 | (v61 << 6);
      v27 = v58;
LABEL_9:
      v28 = *(_QWORD *)(v27 + 56);
      v29 = (_QWORD *)(*(_QWORD *)(v27 + 48) + 16 * v26);
      v30 = v29[1];
      *v12 = *v29;
      v12[1] = v30;
      v31 = v28 + *(_QWORD *)(v64 + 72) * v26;
      v32 = __swift_instantiateConcreteTypeFromMangledName(v22);
      sub_1D469C304(v31, (uint64_t)v12 + *(int *)(v32 + 48), type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v12, 0, 1, v32);
      swift_bridgeObjectRetain();
      v15 = v63;
      goto LABEL_33;
    }
    v33 = v61 + 1;
    if (__OFADD__(v61, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v33 < v57)
    {
      v34 = *(_QWORD *)(v56 + 8 * v33);
      if (v34)
        goto LABEL_13;
      v35 = v61 + 2;
      ++v61;
      if (v33 + 1 < v57)
      {
        v34 = *(_QWORD *)(v56 + 8 * v35);
        if (v34)
          goto LABEL_17;
        v61 = v33 + 1;
        if (v33 + 2 < v57)
        {
          v34 = *(_QWORD *)(v56 + 8 * (v33 + 2));
          if (v34)
          {
            v33 += 2;
            goto LABEL_13;
          }
          v61 = v33 + 2;
          if (v33 + 3 < v57)
          {
            v34 = *(_QWORD *)(v56 + 8 * (v33 + 3));
            if (v34)
            {
              v33 += 3;
LABEL_13:
              v27 = v58;
LABEL_14:
              v25 = (v34 - 1) & v34;
              v26 = __clz(__rbit64(v34)) + (v33 << 6);
              v61 = v33;
              goto LABEL_9;
            }
            v35 = v33 + 4;
            v61 = v33 + 3;
            if (v33 + 4 < v57)
              break;
          }
        }
      }
    }
LABEL_32:
    v36 = __swift_instantiateConcreteTypeFromMangledName(v22);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v12, 1, 1, v36);
    v25 = 0;
LABEL_33:
    sub_1D46B3464((uint64_t)v12, (uint64_t)v15, &qword_1ED98D138);
    v37 = __swift_instantiateConcreteTypeFromMangledName(v22);
    v38 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v15, 1, v37);
    v62 = v38 == 1;
    if (v38 == 1)
      return v62;
    v39 = v25;
    v40 = (uint64_t)v6;
    v41 = v22;
    v42 = (uint64_t)v15 + *(int *)(v37 + 48);
    v43 = *v15;
    v44 = v15[1];
    sub_1D469C630(v42, (uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
    v45 = v43;
    v46 = v59;
    v47 = sub_1D47CA4DC(v45, v44);
    v49 = v48;
    swift_bridgeObjectRelease();
    if ((v49 & 1) == 0)
      goto LABEL_38;
    v50 = *(_QWORD *)(v46 + 56) + *(_QWORD *)(v64 + 72) * v47;
    v6 = (char *)v40;
    sub_1D469C304(v50, v40, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
    v51 = *(int *)(v60 + 20);
    v52 = *(_QWORD *)(v40 + v51);
    v53 = *(_QWORD *)&v8[v51];
    if (v52 != v53)
    {
      swift_retain();
      swift_retain();
      v54 = sub_1D473B2E4(v52, v53);
      swift_release();
      swift_release();
      if ((v54 & 1) == 0)
      {
        sub_1D4697DE0(v40, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
LABEL_38:
        sub_1D4697DE0((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
        return 0;
      }
    }
    sub_1D492201C();
    sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v23 = sub_1D49225E0();
    sub_1D4697DE0(v40, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
    result = sub_1D4697DE0((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
    v22 = v41;
    v15 = v63;
    v21 = v39;
    if ((v23 & 1) == 0)
      return v62;
  }
  v34 = *(_QWORD *)(v56 + 8 * v35);
  if (v34)
  {
LABEL_17:
    v33 = v35;
    goto LABEL_13;
  }
  v27 = v58;
  while (1)
  {
    v33 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v33 >= v57)
    {
      v61 = v55;
      goto LABEL_32;
    }
    v34 = *(_QWORD *)(v56 + 8 * v33);
    ++v35;
    if (v34)
      goto LABEL_14;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1D46F0334(_DWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_1D492201C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - v9;
  if (*a1 == *(_DWORD *)a2)
  {
    v11 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
    v12 = (char *)a1 + *(int *)(v11 + 20);
    v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, &a2[*(int *)(v11 + 20)], v4);
    sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v14 = sub_1D49225E0();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_1D46F0468(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_1D492201C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - v9;
  if ((sub_1D46EE9EC(*(_QWORD *)a1, *(_QWORD *)a2) & 1) != 0
    && (sub_1D489D780(*(_QWORD **)(a1 + 8), *(_QWORD **)(a2 + 8)) & 1) != 0
    && *(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16))
  {
    v11 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
    v12 = a1 + *(int *)(v11 + 28);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, a2 + *(int *)(v11 + 28), v4);
    sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v14 = sub_1D49225E0();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_1D46F05BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_1D492201C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - v9;
  if (*(_DWORD *)a1 == *(_DWORD *)a2 && *(unsigned __int8 *)(a1 + 4) == *(unsigned __int8 *)(a2 + 4))
  {
    v12 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig(0);
    v13 = a1 + *(int *)(v12 + 24);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v14(v10, v13, v4);
    v14(v8, a2 + *(int *)(v12 + 24), v4);
    sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v11 = sub_1D49225E0();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_1D46F0700(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  unsigned __int8 *v13;
  void (*v14)(char *, unsigned __int8 *, uint64_t);
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_1D492201C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - v9;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    v12 = type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig(0);
    v13 = &a1[*(int *)(v12 + 24)];
    v14 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
    v14(v10, v13, v4);
    v14(v8, &a2[*(int *)(v12 + 24)], v4);
    sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v11 = sub_1D49225E0();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_1D46F0844(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  char *v51;
  char v52;
  void (*v53)(char *, uint64_t);
  _DWORD *v54;
  _DWORD *v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _DWORD *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  _DWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v4 = sub_1D492201C();
  v65 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v64 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v63 = (char *)&v58 - v7;
  v71 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  v68 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v62 = (_DWORD *)((char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA800);
  MEMORY[0x1E0C80A78](v67);
  v72 = (uint64_t)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA548);
  v11 = MEMORY[0x1E0C80A78](v10);
  v66 = (_DWORD *)((char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x1E0C80A78](v11);
  v69 = (uint64_t)&v58 - v14;
  MEMORY[0x1E0C80A78](v13);
  v70 = (uint64_t)&v58 - v15;
  v16 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA808);
  MEMORY[0x1E0C80A78](v20);
  v73 = (uint64_t)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA540);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)&v58 - v27;
  MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v58 - v29;
  if ((sub_1D46EEE5C(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0
    || *(unsigned __int8 *)(a1 + 8) != *(unsigned __int8 *)(a2 + 8)
    || *(unsigned __int8 *)(a1 + 9) != *(unsigned __int8 *)(a2 + 9))
  {
    goto LABEL_19;
  }
  v58 = v4;
  v31 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  v32 = *(int *)(v31 + 32);
  v60 = a1;
  sub_1D469C5EC(a1 + v32, (uint64_t)v30, &qword_1EFEAA540);
  v59 = v31;
  v33 = *(int *)(v31 + 32);
  v61 = a2;
  sub_1D469C5EC(a2 + v33, (uint64_t)v28, &qword_1EFEAA540);
  v34 = v73;
  v35 = v73 + *(int *)(v20 + 48);
  sub_1D469C5EC((uint64_t)v30, v73, &qword_1EFEAA540);
  sub_1D469C5EC((uint64_t)v28, v35, &qword_1EFEAA540);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (v36(v34, 1, v16) == 1)
  {
    sub_1D46992EC((uint64_t)v28, &qword_1EFEAA540);
    sub_1D46992EC((uint64_t)v30, &qword_1EFEAA540);
    if (v36(v35, 1, v16) == 1)
    {
      sub_1D46992EC(v34, &qword_1EFEAA540);
      goto LABEL_11;
    }
LABEL_9:
    v37 = &qword_1EFEAA808;
    v38 = v34;
LABEL_18:
    sub_1D46992EC(v38, v37);
    goto LABEL_19;
  }
  sub_1D469C5EC(v34, (uint64_t)v25, &qword_1EFEAA540);
  if (v36(v35, 1, v16) == 1)
  {
    sub_1D46992EC((uint64_t)v28, &qword_1EFEAA540);
    sub_1D46992EC((uint64_t)v30, &qword_1EFEAA540);
    sub_1D4697DE0((uint64_t)v25, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
    goto LABEL_9;
  }
  sub_1D469C630(v35, (uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  v39 = sub_1D46F0468((uint64_t)v25, (uint64_t)v19);
  sub_1D4697DE0((uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  sub_1D46992EC((uint64_t)v28, &qword_1EFEAA540);
  sub_1D46992EC((uint64_t)v30, &qword_1EFEAA540);
  sub_1D4697DE0((uint64_t)v25, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  sub_1D46992EC(v34, &qword_1EFEAA540);
  if ((v39 & 1) == 0)
    goto LABEL_19;
LABEL_11:
  v40 = v59;
  v41 = v70;
  sub_1D469C5EC(v60 + *(int *)(v59 + 36), v70, &qword_1EFEAA548);
  v42 = v69;
  sub_1D469C5EC(v61 + *(int *)(v40 + 36), v69, &qword_1EFEAA548);
  v43 = v72;
  v44 = v72 + *(int *)(v67 + 48);
  sub_1D469C5EC(v41, v72, &qword_1EFEAA548);
  sub_1D469C5EC(v42, v44, &qword_1EFEAA548);
  v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
  v46 = v71;
  if (v45(v43, 1, v71) != 1)
  {
    v54 = v66;
    sub_1D469C5EC(v43, (uint64_t)v66, &qword_1EFEAA548);
    if (v45(v44, 1, v46) == 1)
    {
      sub_1D46992EC(v42, &qword_1EFEAA548);
      sub_1D46992EC(v41, &qword_1EFEAA548);
      sub_1D4697DE0((uint64_t)v54, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
      goto LABEL_17;
    }
    v56 = v62;
    sub_1D469C630(v44, (uint64_t)v62, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
    if (*v54 != *v56)
    {
      sub_1D4697DE0((uint64_t)v56, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
      sub_1D46992EC(v42, &qword_1EFEAA548);
      sub_1D46992EC(v41, &qword_1EFEAA548);
      sub_1D4697DE0((uint64_t)v54, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
      v38 = v43;
      v37 = &qword_1EFEAA548;
      goto LABEL_18;
    }
    sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v47 = v58;
    v57 = sub_1D49225E0();
    sub_1D4697DE0((uint64_t)v56, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
    sub_1D46992EC(v42, &qword_1EFEAA548);
    sub_1D46992EC(v41, &qword_1EFEAA548);
    sub_1D4697DE0((uint64_t)v54, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
    sub_1D46992EC(v43, &qword_1EFEAA548);
    if ((v57 & 1) != 0)
      goto LABEL_14;
LABEL_19:
    v52 = 0;
    return v52 & 1;
  }
  sub_1D46992EC(v42, &qword_1EFEAA548);
  sub_1D46992EC(v41, &qword_1EFEAA548);
  if (v45(v44, 1, v46) != 1)
  {
LABEL_17:
    v37 = &qword_1EFEAA800;
    v38 = v43;
    goto LABEL_18;
  }
  sub_1D46992EC(v43, &qword_1EFEAA548);
  v47 = v58;
LABEL_14:
  v48 = v65;
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 16);
  v50 = v63;
  v49(v63, v60 + *(int *)(v40 + 28), v47);
  v51 = v64;
  v49(v64, v61 + *(int *)(v40 + 28), v47);
  sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
  v52 = sub_1D49225E0();
  v53 = *(void (**)(char *, uint64_t))(v48 + 8);
  v53(v51, v47);
  v53(v50, v47);
  return v52 & 1;
}

uint64_t *sub_1D46F0FBC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    v5 = *(int *)(a3 + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1D492201C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

_WORD *sub_1D46F1048(_WORD *a1, _WORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1D492201C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *sub_1D46F10A4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 24);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1D492201C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_WORD *sub_1D46F1108(_WORD *a1, _WORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1D492201C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *sub_1D46F1164(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 24);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1D492201C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1D46F11C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D46F11D4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_1D492201C();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v10);
  }
}

uint64_t sub_1D46F1250()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_1D46F125C(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = sub_1D492201C();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1D46F12CC()
{
  return sub_1D46F1644();
}

_QWORD *sub_1D46F12D8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
    v5 = *(int *)(a3 + 24);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_1D492201C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1D46F1368(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_1D492201C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_1D46F13A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t sub_1D46F1404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t sub_1D46F1468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1D46F14CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1D46F1530()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D46F153C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 4);
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_1D492201C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v10);
  }
}

uint64_t sub_1D46F15B8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D46F15C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 4) = a2 + 1;
  }
  else
  {
    v7 = sub_1D492201C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1D46F1634()
{
  return sub_1D46F1644();
}

uint64_t sub_1D46F1644()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D492201C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1D46F16B8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char *v33;
  uint64_t v35;
  id v36;
  unint64_t v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  int v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v12 = v10;
  v55 = a5;
  v56 = a7;
  v59 = a6;
  v60 = a4;
  v54 = a3;
  v61 = a10;
  v57 = *v10;
  v16 = sub_1D4922370();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = objc_allocWithZone((Class)VIFaissIndex);
  swift_bridgeObjectRetain();
  v58 = a2;
  v21 = sub_1D46F2CEC();
  if (v11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_13:
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return v12;
  }
  v22 = v21;
  v49 = a1;
  v50 = v19;
  v51 = v17;
  v52 = v16;
  v53 = 0;
  v23 = v60;
  v12[4] = v54;
  v12[5] = v23;
  v24 = v59;
  v12[6] = v55;
  v12[7] = v24;
  v12[8] = v56;
  v12[9] = a8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA8A0);
  v25 = swift_allocObject();
  *(_DWORD *)(v25 + 24) = 0;
  *(_QWORD *)(v25 + 16) = v22;
  v12[2] = v25;
  v26 = v22;
  v27 = sub_1D46F1AE8();
  v29 = v28;
  v31 = v30;
  swift_bridgeObjectRelease();
  if (!v31)
  {
    v32 = 4;
LABEL_12:
    swift_bridgeObjectRelease();
    sub_1D46F2704();
    swift_allocError();
    *v33 = v32;
    swift_willThrow();

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (!*(_QWORD *)(v31 + 16))
  {
    v32 = 4;
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v29 != objc_msgSend(v26, sel_embeddingLength))
  {
    v32 = 0;
    goto LABEL_11;
  }
  v12[10] = v27;
  v12[11] = v29;
  v12[12] = v31;
  if ((uint64_t)objc_msgSend(v26, sel_numberOfIndexedEmbeddings) < 101)
  {
    *((_BYTE *)v12 + 24) = 0;
    v35 = (uint64_t)v50;
    sub_1D470C76C((uint64_t)v50);
    v36 = v26;
    v37 = v58;
    swift_bridgeObjectRetain();
    v38 = v36;
    v39 = sub_1D4922358();
    v40 = sub_1D492291C();
    v41 = v40;
    v42 = os_log_type_enabled(v39, v40);
    v44 = v51;
    v43 = v52;
    if (v42)
    {
      v45 = swift_slowAlloc();
      LODWORD(v61) = v41;
      v46 = v45;
      v63 = swift_slowAlloc();
      v47 = v63;
      *(_DWORD *)v46 = 136315394;
      swift_bridgeObjectRetain();
      v62 = sub_1D47F0250(v49, v37, &v63);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v46 + 12) = 2048;
      v48 = objc_msgSend(v38, sel_numberOfIndexedEmbeddings);

      v62 = (uint64_t)v48;
      sub_1D4922A78();

      _os_log_impl(&dword_1D467C000, v39, (os_log_type_t)v61, "FaissCodebook is using codebook in path%s\nwith size %ld", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v47, -1, -1);
      MEMORY[0x1D82635B8](v46, -1, -1);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v52);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v35, v43);
    }
  }
  else
  {

    swift_bridgeObjectRelease();
    *((_BYTE *)v12 + 24) = 1;
  }
  return v12;
}

uint64_t sub_1D46F1AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD v23[2];

  v0 = sub_1D4920E70();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D4920F18();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAFD78], v0);
  swift_bridgeObjectRetain();
  sub_1D4920F0C();
  v11 = sub_1D4920F24();
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1D4920D38();
  swift_allocObject();
  sub_1D4920D2C();
  sub_1D46F2DEC();
  sub_1D4920D20();
  swift_release();
  v15 = v23[0];
  v16 = *(_QWORD *)(v23[0] + 16);
  if (v16)
  {
    v23[0] = MEMORY[0x1E0DEE9D8];
    sub_1D48AC194(0, v16, 0);
    v17 = 0;
    v18 = v23[0];
    do
    {
      v19 = *(_QWORD *)(v15 + 8 * v17 + 32);
      v23[0] = v18;
      v20 = *(_QWORD *)(v18 + 16);
      v21 = *(_QWORD *)(v18 + 24);
      swift_bridgeObjectRetain();
      if (v20 >= v21 >> 1)
      {
        sub_1D48AC194(v21 > 1, v20 + 1, 1);
        v18 = v23[0];
      }
      ++v17;
      *(_QWORD *)(v18 + 16) = v20 + 1;
      *(_QWORD *)(v18 + 8 * v20 + 32) = v19;
    }
    while (v16 != v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x1E0DEE9D8];
  }
  v22 = sub_1D46F2C04(v18);
  sub_1D4696F10(v11, v13);
  return v22;
}

void sub_1D46F1DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  id *v19;
  uint64_t v20;
  char *v21;
  id v22;
  id *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char *v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  id v42;
  char *v43;
  void *v44;
  char **v45;
  void *v46;
  int64_t v47;
  id v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  id v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  id v66;
  char **v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;

  v71 = sub_1D4921878();
  v6 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA878);
  v10 = MEMORY[0x1E0C80A78](v9);
  v11 = MEMORY[0x1E0C80A78](v10);
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
    return;
  v64 = v8;
  v65 = v6;
  v66 = v14;
  v67 = (char **)a2;
  v68 = (char *)&v63 - v12;
  v69 = v13;
  v70 = v11;
  v16 = (char *)(a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));
  v74 = a1;
  v75 = v2;
  v17 = *(_QWORD *)(v2 + 16);
  v18 = (os_unfair_lock_s *)(v17 + 24);
  v19 = (id *)(v17 + 16);
  v20 = *(_QWORD *)(v6 + 72);
  swift_bridgeObjectRetain();
  v21 = v16;
  v72 = v15;
  while (1)
  {
    v22 = *(id *)(sub_1D49214E8() + 16);
    swift_bridgeObjectRelease();
    os_unfair_lock_lock(v18);
    v23 = v19;
    v24 = objc_msgSend(*v19, sel_embeddingLength);
    if (v3)
      goto LABEL_54;
    v25 = v24;
    os_unfair_lock_unlock(v18);
    if (v22 != v25)
      break;
    v21 += v20;
    --v15;
    v19 = v23;
    if (!v15)
    {
      v63 = (char *)v18;
      v73 = 0;
      swift_bridgeObjectRelease();
      v27 = *(_QWORD *)(v75 + 64);
      v26 = *(_QWORD *)(v75 + 72);
      swift_bridgeObjectRetain();
      v28 = v16;
      v29 = v72;
      do
      {
        if (sub_1D492183C() == v27 && v31 == v26)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v30 = sub_1D4922E38();
          swift_bridgeObjectRelease();
          if ((v30 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            sub_1D46F2704();
            swift_allocError();
            v33 = 1;
            goto LABEL_19;
          }
        }
        v28 += v20;
        --v29;
      }
      while (v29);
      swift_bridgeObjectRelease();
      v76 = MEMORY[0x1E0DEE9D8];
      v34 = v65;
      v75 = *(_QWORD *)(v65 + 16);
      swift_bridgeObjectRetain();
      v36 = v71;
      v35 = v72;
      v37 = v64;
      do
      {
        ((void (*)(char *, char *, uint64_t))v75)(v37, v16, v36);
        v38 = sub_1D49214E8();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v36);
        sub_1D4895930(v38);
        v16 += v20;
        --v35;
      }
      while (v35);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D3D8);
      v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_1D4927B00;
      *(_QWORD *)(v39 + 32) = v72;
      v16 = v63;
      os_unfair_lock_lock((os_unfair_lock_t)v63);
      v40 = objc_msgSend(*v23, sel_embeddingLength);
      v41 = v73;
      if (!v73)
      {
        v42 = v40;
        os_unfair_lock_unlock((os_unfair_lock_t)v16);
        *(_QWORD *)(v39 + 40) = v42;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EAA8);
        sub_1D46BF03C(&qword_1EFEAA888, &qword_1ED98EAA8, MEMORY[0x1E0DEAF38]);
        v43 = v68;
        sub_1D4922388();
        sub_1D46F2DB4(0, &qword_1ED98D570);
        (*(void (**)(id, char *, uint64_t))(v69 + 16))(v66, v43, v70);
        sub_1D46BF03C(&qword_1EFEAA890, &qword_1EFEAA878, MEMORY[0x1E0C9E6C8]);
        v44 = (void *)sub_1D4922904();
        os_unfair_lock_lock((os_unfair_lock_t)v16);
        v45 = v67;
        sub_1D46F25A8(v23, (uint64_t)v44, (uint64_t)v67, (uint64_t *)&v76);
        os_unfair_lock_unlock((os_unfair_lock_t)v16);
        v66 = v44;
        v46 = (void *)v76;
        if (v76 >> 62)
          goto LABEL_51;
        v47 = *(_QWORD *)((v76 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_22:
        v48 = v66;
        v18 = (os_unfair_lock_s *)MEMORY[0x1E0DEE9D8];
        if (v45)
        {
          v49 = sub_1D46F29D4(0, v47, (uint64_t)v45, (unint64_t)v46, (uint64_t)v45);
          v50 = *(_QWORD *)(v49 + 16);
          if (v50)
          {
            v76 = (unint64_t)v18;
            v51 = v49;
            sub_1D48AC1C0(0, v50, 0);
            v52 = 0;
            v53 = v76;
            v67 = (char **)v51;
            v72 = v51 + 32;
            v73 = v41;
            v45 = &selRef_getPort_description_;
            v71 = v50;
            while (1)
            {
              v74 = v52;
              v54 = *(_QWORD *)(v72 + 8 * v52);
              if (v54 >> 62)
              {
                swift_bridgeObjectRetain_n();
                v41 = sub_1D4922C4C();
                swift_bridgeObjectRelease();
                v75 = v53;
                if (v41)
                {
LABEL_27:
                  v55 = 4;
                  v16 = (char *)v18;
                  while (1)
                  {
                    v18 = (os_unfair_lock_s *)(v55 - 4);
                    v56 = (v54 & 0xC000000000000001) != 0
                        ? (id)MEMORY[0x1D8261F20](v55 - 4, v54)
                        : *(id *)(v54 + 8 * v55);
                    v46 = v56;
                    v57 = v55 - 3;
                    if (__OFADD__(v18, 1))
                      break;
                    if ((objc_msgSend(v56, v45[88]) & 1) != 0)
                    {
                      v58 = objc_msgSend(v46, sel_identifier);
                      if (((unint64_t)v58 & 0x8000000000000000) != 0)
                        goto LABEL_53;
                      v18 = (os_unfair_lock_s *)v58;
                      if ((unint64_t)v58 >> 32)
                        goto LABEL_53;

                      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                        v16 = sub_1D48A9FB8(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
                      v60 = *((_QWORD *)v16 + 2);
                      v59 = *((_QWORD *)v16 + 3);
                      if (v60 >= v59 >> 1)
                        v16 = sub_1D48A9FB8((char *)(v59 > 1), v60 + 1, 1, v16);
                      *((_QWORD *)v16 + 2) = v60 + 1;
                      *(_DWORD *)&v16[4 * v60 + 32] = (_DWORD)v18;
                      v45 = &selRef_getPort_description_;
                    }
                    else
                    {

                    }
                    ++v55;
                    if (v57 == v41)
                      goto LABEL_44;
                  }
                  __break(1u);
LABEL_51:
                  swift_bridgeObjectRetain();
                  v47 = sub_1D4922C4C();
                  swift_bridgeObjectRelease();
                  goto LABEL_22;
                }
              }
              else
              {
                v41 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
                swift_bridgeObjectRetain_n();
                v75 = v53;
                if (v41)
                  goto LABEL_27;
              }
              v16 = (char *)v18;
LABEL_44:
              swift_bridgeObjectRelease_n();
              v53 = v75;
              v76 = v75;
              v62 = *(_QWORD *)(v75 + 16);
              v61 = *(_QWORD *)(v75 + 24);
              if (v62 >= v61 >> 1)
              {
                sub_1D48AC1C0(v61 > 1, v62 + 1, 1);
                v53 = v76;
              }
              v52 = v74 + 1;
              *(_QWORD *)(v53 + 16) = v62 + 1;
              *(_QWORD *)(v53 + 8 * v62 + 32) = v16;
              v18 = (os_unfair_lock_s *)MEMORY[0x1E0DEE9D8];
              if (v52 == v71)
              {
                swift_bridgeObjectRelease();

                goto LABEL_49;
              }
            }
          }
          swift_bridgeObjectRelease();

LABEL_49:
          (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v70);
          return;
        }
        __break(1u);
LABEL_53:
        sub_1D4922C28();
        __break(1u);
LABEL_54:
        os_unfair_lock_unlock(v18);
        __break(1u);
      }
      os_unfair_lock_unlock((os_unfair_lock_t)v16);
      __break(1u);
      return;
    }
  }
  swift_bridgeObjectRelease();
  sub_1D46F2704();
  swift_allocError();
  v33 = 2;
LABEL_19:
  *v32 = v33;
  swift_willThrow();
}

void sub_1D46F25A8(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  void *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = *a1;
  v12[0] = 0;
  v6 = objc_msgSend(v5, sel_searchWithQuery_numberOfNearestNeighbors_options_error_, a2, a3, 1, v12);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    sub_1D46F2DB4(0, (unint64_t *)&qword_1EFEAA898);
    v9 = sub_1D4922820();
    v10 = v7;

    *a4 = v9;
  }
  else
  {
    v11 = v12[0];
    sub_1D4920E64();

    swift_willThrow();
  }
}

uint64_t sub_1D46F26A0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FaissCodebook()
{
  return objc_opt_self();
}

unint64_t sub_1D46F2704()
{
  unint64_t result;

  result = qword_1EFEAA880;
  if (!qword_1EFEAA880)
  {
    result = MEMORY[0x1D82634E0](&unk_1D49298C4, &type metadata for FaissCodebook.Error);
    atomic_store(result, (unint64_t *)&qword_1EFEAA880);
  }
  return result;
}

uint64_t sub_1D46F2748(int64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = a1 + a3;
  if (__OFADD__(a1, a3))
  {
    __break(1u);
LABEL_32:
    if (v4 < 0)
      v7 = v4;
    else
      v7 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = sub_1D4922C4C();
    swift_bridgeObjectRelease();
    if (v8 >= v6)
      v8 = v6;
    if (v8 < v3)
      goto LABEL_43;
    swift_bridgeObjectRetain();
    v7 = sub_1D4922C4C();
    swift_bridgeObjectRelease();
    if (v7 >= v3)
      goto LABEL_8;
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v4 = a2;
  v3 = a1;
  v5 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_32;
  v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7 >= v6)
    v8 = a1 + a3;
  else
    v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v8 < a1)
    goto LABEL_43;
  if (v7 < a1)
    goto LABEL_39;
LABEL_8:
  if (v3 < 0)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v5)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1D4922C4C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v7 < v8)
    goto LABEL_41;
  if (v8 < 0)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if ((v4 & 0xC000000000000001) != 0 && v8 != v3)
  {
    if (v8 > (unint64_t)v3)
    {
      sub_1D46F2DB4(0, (unint64_t *)&qword_1EFEAA898);
      v9 = v3;
      do
      {
        v10 = v9 + 1;
        sub_1D4922BA4();
        v9 = v10;
      }
      while (v8 != v10);
      goto LABEL_19;
    }
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
LABEL_19:
  if (v5)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1D4922C58();
    v5 = v11;
    v3 = v12;
    v8 = v13;
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
      goto LABEL_24;
LABEL_23:
    v14 = sub_1D485235C(v7, v5, v3, v8);
    goto LABEL_30;
  }
  v7 = v4 & 0xFFFFFFFFFFFFFF8;
  v5 = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
  v8 = (2 * v8) | 1;
  swift_bridgeObjectRetain();
  if ((v8 & 1) == 0)
    goto LABEL_23;
LABEL_24:
  sub_1D4922E5C();
  swift_unknownObjectRetain_n();
  v15 = swift_dynamicCastClass();
  if (!v15)
  {
    swift_unknownObjectRelease();
    v15 = MEMORY[0x1E0DEE9D8];
  }
  v16 = *(_QWORD *)(v15 + 16);
  swift_release();
  if (__OFSUB__((unint64_t)v8 >> 1, v3))
    goto LABEL_45;
  if (v16 != ((unint64_t)v8 >> 1) - v3)
  {
LABEL_46:
    swift_unknownObjectRelease();
    goto LABEL_23;
  }
  v14 = swift_dynamicCastClass();
  if (!v14)
  {
    swift_unknownObjectRelease();
    v14 = MEMORY[0x1E0DEE9D8];
  }
LABEL_30:
  swift_unknownObjectRelease();
  return v14;
}

uint64_t sub_1D46F29D4(int64_t a1, int64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  int64_t v9;
  int64_t v10;
  int64_t v11;
  _BOOL4 v12;
  BOOL v13;
  uint64_t result;
  BOOL v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  BOOL v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v29;

  v6 = v5;
  v9 = a1;
  v10 = 0;
  v11 = a1;
  while (1)
  {
    v12 = v11 <= a2;
    if (a3 > 0)
      v12 = v11 >= a2;
    if (v12)
      break;
    v13 = __OFADD__(v11, a3);
    v11 += a3;
    if (v13)
      v11 = (v11 >> 63) ^ 0x8000000000000000;
    v13 = __OFADD__(v10++, 1);
    if (v13)
    {
      __break(1u);
      break;
    }
  }
  v29 = MEMORY[0x1E0DEE9D8];
  result = sub_1D48AC1EC(0, v10, 0);
  if (v10)
  {
    while (1)
    {
      v15 = v9 <= a2;
      if (a3 > 0)
        v15 = v9 >= a2;
      if (v15)
        break;
      if (__OFADD__(v9, a3))
        v16 = ((v9 + a3) >> 63) ^ 0x8000000000000000;
      else
        v16 = v9 + a3;
      result = sub_1D46F2748(v9, a4, a5);
      if (v6)
        goto LABEL_37;
      v17 = result;
      v6 = 0;
      v19 = *(_QWORD *)(v29 + 16);
      v18 = *(_QWORD *)(v29 + 24);
      if (v19 >= v18 >> 1)
        result = sub_1D48AC1EC(v18 > 1, v19 + 1, 1);
      *(_QWORD *)(v29 + 16) = v19 + 1;
      *(_QWORD *)(v29 + 8 * v19 + 32) = v17;
      v9 = v16;
      if (!--v10)
        goto LABEL_23;
    }
    __break(1u);
  }
  else
  {
    v16 = v9;
LABEL_23:
    v20 = v16 <= a2;
    if (a3 > 0)
      v20 = v16 >= a2;
    if (v20)
    {
LABEL_26:
      swift_bridgeObjectRelease();
    }
    else
    {
      while (1)
      {
        v21 = __OFADD__(v16, a3) ? ((v16 + a3) >> 63) ^ 0x8000000000000000 : v16 + a3;
        v22 = sub_1D46F2748(v16, a4, a5);
        if (v6)
          break;
        v23 = v22;
        v6 = 0;
        v25 = *(_QWORD *)(v29 + 16);
        v24 = *(_QWORD *)(v29 + 24);
        if (v25 >= v24 >> 1)
          sub_1D48AC1EC(v24 > 1, v25 + 1, 1);
        *(_QWORD *)(v29 + 16) = v25 + 1;
        *(_QWORD *)(v29 + 8 * v25 + 32) = v23;
        v26 = v21 <= a2;
        if (a3 > 0)
          v26 = v21 >= a2;
        v16 = v21;
        if (v26)
          goto LABEL_26;
      }
LABEL_37:
      swift_bridgeObjectRelease();
      swift_release();
    }
    return v29;
  }
  return result;
}

uint64_t sub_1D46F2C04(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
  {
    swift_bridgeObjectRelease();
    return v1;
  }
  if (v1 == 1)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    for (i = 0; i != v1; ++i)
    {
      v5 = swift_bridgeObjectRetain();
      sub_1D4895930(v5);
    }
    swift_bridgeObjectRelease_n();
    return v1;
  }
  v2 = 5;
  while (1)
  {
    v3 = v2 - 3;
    if (__OFADD__(v2 - 4, 1))
      break;
    if (*(_QWORD *)(*(_QWORD *)(result + 8 * v2) + 16) != *(_QWORD *)(*(_QWORD *)(result + 32) + 16))
      goto LABEL_13;
    ++v2;
    if (v3 == v1)
      goto LABEL_7;
  }
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

id sub_1D46F2CEC()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_1D49225F8();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initWithContentsOfFile_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_1D4920E64();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1D46F2DB4(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_1D46F2DEC()
{
  unint64_t result;

  result = qword_1EFEAA8A8;
  if (!qword_1EFEAA8A8)
  {
    result = MEMORY[0x1D82634E0](&unk_1D49300DC, &type metadata for LSHProjectionMatrix);
    atomic_store(result, (unint64_t *)&qword_1EFEAA8A8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TrialWrapper.NamespaceName(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FaissCodebook.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D46F2F0C + 4 * byte_1D49297F5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D46F2F40 + 4 * asc_1D49297F0[v4]))();
}

uint64_t sub_1D46F2F40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46F2F48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D46F2F50);
  return result;
}

uint64_t sub_1D46F2F5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D46F2F64);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D46F2F68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46F2F70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FaissCodebook.Error()
{
  return &type metadata for FaissCodebook.Error;
}

unint64_t sub_1D46F2F90()
{
  unint64_t result;

  result = qword_1EFEAA8B0;
  if (!qword_1EFEAA8B0)
  {
    result = MEMORY[0x1D82634E0](&unk_1D492989C, &type metadata for FaissCodebook.Error);
    atomic_store(result, (unint64_t *)&qword_1EFEAA8B0);
  }
  return result;
}

void *sub_1D46F2FD4()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  id v6;

  v1 = v0[1];
  v2 = v0[2];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = v1 & 0xFFFFFFFFFFFFLL;
  if (!v3)
    return 0;
  v4 = (void *)v0[3];
  if (v1 == 0xD000000000000019 && v2 == 0x80000001D4940E40)
    return 0;
  if ((sub_1D4922E38() & 1) != 0)
    return 0;
  v6 = v4;
  return v4;
}

uint64_t sub_1D46F305C()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void *sub_1D46F3068()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  id v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = v1 & 0xFFFFFFFFFFFFLL;
  if (!v3)
    return 0;
  v4 = *(void **)v0;
  if (v1 == 0xD000000000000019 && v2 == 0x80000001D4940E40)
    return 0;
  if ((sub_1D4922E38() & 1) != 0)
    return 0;
  v6 = v4;
  return v4;
}

uint64_t sub_1D46F30F0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_1D46F30FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D46F3128()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 41);
}

void *sub_1D46F3130()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

uint64_t sub_1D46F3154()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D46F3180()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

void sub_1D46F3188(id a1@<X0>, uint64_t a2@<X8>)
{
  id v2;
  id v4;
  id v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  id v10;
  void *v11;

  v2 = a1;
  if (!a1)
  {
    v4 = 0;
LABEL_6:
    v8 = 0xE000000000000000;
    goto LABEL_7;
  }
  v4 = objc_msgSend(a1, sel_queryID);
  v5 = objc_msgSend(v2, sel_applicationIdentifier);
  if (!v5)
  {
    v2 = 0;
    goto LABEL_6;
  }
  v6 = v5;
  v2 = (id)sub_1D492261C();
  v8 = v7;

LABEL_7:
  v9 = objc_allocWithZone(MEMORY[0x1E0D8C738]);
  swift_bridgeObjectRetain();
  v10 = objc_msgSend(v9, sel_initWithInput_triggerEvent_queryId_, 0, 21, v4);
  v11 = (void *)sub_1D49225F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setOriginatingApp_, v11);

  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 24) = v10;
  *(_BYTE *)(a2 + 32) = 0;
}

void sub_1D46F3294(void *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  char *v44;
  void *v45;
  uint64_t v46;
  id v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;

  v6 = sub_1D4920FD8();
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  MEMORY[0x1E0C80A78](v6);
  v56 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D7C0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v59 = (uint64_t)&v50 - v16;
  v17 = a2[9];
  v18 = a2[7];
  v80 = a2[8];
  v81 = v17;
  v19 = a2[9];
  v82 = a2[10];
  v20 = a2[5];
  v21 = a2[3];
  v76 = a2[4];
  v77 = v20;
  v22 = a2[5];
  v23 = a2[7];
  v78 = a2[6];
  v79 = v23;
  v24 = a2[1];
  v72 = *a2;
  v73 = v24;
  v25 = a2[3];
  v27 = *a2;
  v26 = a2[1];
  v74 = a2[2];
  v75 = v25;
  v68 = v80;
  v69 = v19;
  v70 = a2[10];
  v64 = v76;
  v65 = v22;
  v66 = v78;
  v67 = v18;
  v60 = v27;
  v61 = v26;
  v83 = *((_QWORD *)a2 + 22);
  v71 = *((_QWORD *)a2 + 22);
  v62 = v74;
  v63 = v21;
  v28 = VisualUnderstanding.imageRegions.getter();
  v29 = *(_QWORD *)(v28 + 16);
  if (v29)
  {
    v52 = v11;
    v53 = v10;
    v54 = a1;
    v55 = a3;
    *(_QWORD *)&v60 = MEMORY[0x1E0DEE9D8];
    sub_1D4922BF8();
    v30 = v28 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v51 = v12;
    v31 = *(_QWORD *)(v12 + 72);
    do
    {
      sub_1D46A8550(v30, (uint64_t)v15);
      sub_1D4890E98(CFSTR("glyph"));
      sub_1D46F3760((uint64_t)v15);
      sub_1D4922BE0();
      sub_1D4922C04();
      sub_1D4922C10();
      sub_1D4922BEC();
      v30 += v31;
      --v29;
    }
    while (v29);
    v32 = v60;
    swift_bridgeObjectRelease();
    a1 = v54;
    a3 = v55;
    v11 = v52;
    v10 = v53;
    v12 = v51;
  }
  else
  {
    swift_bridgeObjectRelease();
    v32 = MEMORY[0x1E0DEE9D8];
  }
  v68 = v80;
  v69 = v81;
  v70 = v82;
  v71 = v83;
  v64 = v76;
  v65 = v77;
  v66 = v78;
  v67 = v79;
  v60 = v72;
  v61 = v73;
  v62 = v74;
  v63 = v75;
  v33 = VisualUnderstanding.imageRegions.getter();
  sub_1D46B34D0((uint64_t)&v72);
  if (*(_QWORD *)(v33 + 16))
  {
    sub_1D46A8550(v33 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v10);
    v34 = 0;
  }
  else
  {
    v34 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v34, 1, v11);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1D46A8620((uint64_t)v10);
    v35 = MEMORY[0x1E0DEE9D8];
    if (a1)
      goto LABEL_11;
LABEL_14:
    v39 = 0;
    v36 = 0;
LABEL_16:
    v41 = 0xE000000000000000;
    goto LABEL_17;
  }
  v42 = v59;
  sub_1D46A8594((uint64_t)v10, v59);
  v43 = sub_1D4890E98(CFSTR("infoPanel"));
  v44 = v56;
  sub_1D4920FCC();
  sub_1D4920FC0();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v44, v58);
  v45 = (void *)sub_1D49225F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v43, sel_setIdentifier_, v45);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98ECE8);
  v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1D4929910;
  *(_QWORD *)(v46 + 32) = v43;
  *(_QWORD *)&v60 = v46;
  sub_1D4922838();
  v35 = v60;
  sub_1D46F3760(v42);
  if (!a1)
    goto LABEL_14;
LABEL_11:
  v36 = objc_msgSend(a1, sel_queryID);
  v37 = objc_msgSend(a1, sel_applicationIdentifier);
  if (!v37)
  {
    v39 = 0;
    goto LABEL_16;
  }
  v38 = v37;
  v39 = sub_1D492261C();
  v41 = v40;

LABEL_17:
  *(_QWORD *)&v60 = v35;
  sub_1D48961E8(v32);
  v47 = objc_allocWithZone(MEMORY[0x1E0D8C838]);
  sub_1D46F379C();
  v48 = (void *)sub_1D4922814();
  swift_bridgeObjectRelease();
  v49 = objc_msgSend(v47, sel_initWithSuggestions_, v48);

  *(_QWORD *)a3 = v36;
  *(_QWORD *)(a3 + 8) = v39;
  *(_QWORD *)(a3 + 16) = v41;
  *(_QWORD *)(a3 + 24) = v49;
  *(_BYTE *)(a3 + 32) = 0;
}

uint64_t sub_1D46F3760(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for VisualUnderstanding.ImageRegion();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D46F379C()
{
  unint64_t result;

  result = qword_1ED98D260;
  if (!qword_1ED98D260)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED98D260);
  }
  return result;
}

uint64_t assignWithCopy for OnDeviceFlowStartEvent(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 24);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  v6 = v4;

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ParseStartEvent()
{
  return &type metadata for ParseStartEvent;
}

void destroy for OnDeviceFlowStartEvent(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

ValueMetadata *type metadata accessor for DurationEvent()
{
  return &type metadata for DurationEvent;
}

uint64_t initializeWithCopy for OnDeviceFlowStartEvent(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for ResultEvent(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 24);
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = v5;

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for OnDeviceFlowStartEvent(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnDeviceFlowStartEvent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnDeviceFlowStartEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ParseResultEvent()
{
  return &type metadata for ParseResultEvent;
}

void destroy for OnDeviceFlowEndEvent(id *a1)
{

  swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for OnDeviceFlowEndEvent(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  v5 = v3;
  swift_bridgeObjectRetain();
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for OnDeviceFlowEndEvent(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(void **)(a2 + 32);
  v8 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v7;
  v9 = v7;

  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  return a1;
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for OnDeviceFlowEndEvent(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnDeviceFlowEndEvent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 42))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnDeviceFlowEndEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 42) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ParseEndEvent()
{
  return &type metadata for ParseEndEvent;
}

uint64_t sub_1D46F3C90(char *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t result;
  char v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  _BOOL4 v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;

  v97 = a5;
  v101 = a1;
  v102 = (char *)a4;
  v94 = a2;
  v90 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement(0);
  v96 = *(_QWORD *)(v90 - 8);
  v6 = MEMORY[0x1E0C80A78](v90);
  v91 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v92 = (uint64_t)&v89 - v9;
  MEMORY[0x1E0C80A78](v8);
  v95 = (uint64_t *)((char *)&v89 - v10);
  v11 = sub_1D4922370();
  v99 = *(void (**)(char *, uint64_t))(v11 - 8);
  v100 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v98 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v89 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v93 = (char *)&v89 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v89 - v20;
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v89 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v27 = (char *)&v89 - v26;
  MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v89 - v28;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E290);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v89 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig(0);
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v36 = (char *)&v89 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = *a3;
  sub_1D469C5EC((uint64_t)v102, (uint64_t)v32, &qword_1ED98E290);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33) == 1)
  {
    sub_1D46992EC((uint64_t)v32, &qword_1ED98E290);
LABEL_10:
    sub_1D470C76C((uint64_t)v16);
    v50 = (uint64_t)v98;
    sub_1D470C928((uint64_t)v98);
    v51 = v100;
    v52 = (void (*)(char *, uint64_t))*((_QWORD *)v99 + 1);
    v52(v16, v100);
    v53 = sub_1D4922358();
    v54 = sub_1D4922910();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v55 = 0;
      _os_log_impl(&dword_1D467C000, v53, v54, "Not enabled. Return true.", v55, 2u);
      MEMORY[0x1D82635B8](v55, -1, -1);
    }

    v52((char *)v50, v51);
LABEL_13:
    result = 1;
    goto LABEL_14;
  }
  v102 = v24;
  v38 = v96;
  v39 = v97;
  v89 = v21;
  v40 = v95;
  sub_1D469C630((uint64_t)v32, (uint64_t)v36, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
  v41 = (uint64_t)v36;
  if (*v36 != 1)
  {
    sub_1D4697DE0((uint64_t)v36, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
    goto LABEL_10;
  }
  v42 = *((_QWORD *)v36 + 2);
  v43 = *(_QWORD *)(v42 + 16);
  if (!v43)
  {
    sub_1D470C76C((uint64_t)v29);
    v58 = v27;
    sub_1D470C928((uint64_t)v27);
    v59 = v100;
    v60 = (void (*)(char *, uint64_t))*((_QWORD *)v99 + 1);
    v60(v29, v100);
    v61 = sub_1D4922358();
    v62 = sub_1D4922910();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v63 = 0;
      _os_log_impl(&dword_1D467C000, v61, v62, "No requirements is specificed. Always keep the domain.", v63, 2u);
      MEMORY[0x1D82635B8](v63, -1, -1);
    }

    v60(v58, v59);
    sub_1D4697DE0(v41, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
    goto LABEL_13;
  }
  v98 = v36;
  v44 = v42 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
  v45 = *(_QWORD *)(v38 + 72);
  swift_bridgeObjectRetain();
  v46 = v40;
  v47 = v39;
  v48 = v94;
  v49 = (uint64_t)v102;
  while (1)
  {
    sub_1D469C304(v44, (uint64_t)v46, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
    LOBYTE(v104) = v37;
    if ((sub_1D46F56C8(v48, (unsigned __int8 *)&v104, v46, v47) & 1) == 0)
      break;
    sub_1D4697DE0((uint64_t)v46, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
    v44 += v45;
    if (!--v43)
    {
      swift_bridgeObjectRelease();
      sub_1D4697DE0((uint64_t)v98, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease();
  sub_1D470C76C(v49);
  v64 = (uint64_t)v89;
  sub_1D470C928((uint64_t)v89);
  v65 = v100;
  v66 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v99 + 1);
  v66(v49, v100);
  v67 = v92;
  sub_1D469C304((uint64_t)v46, v92, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
  v68 = sub_1D4922358();
  v69 = sub_1D4922910();
  v70 = os_log_type_enabled(v68, v69);
  v99 = (void (*)(char *, uint64_t))v66;
  if (v70)
  {
    v71 = (uint8_t *)swift_slowAlloc();
    v72 = swift_slowAlloc();
    v104 = v72;
    *(_DWORD *)v71 = 136315138;
    sub_1D46F712C();
    v73 = sub_1D4922E14();
    v103 = sub_1D47F0250(v73, v74, &v104);
    sub_1D4922A78();
    swift_bridgeObjectRelease();
    sub_1D4697DE0(v67, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
    _os_log_impl(&dword_1D467C000, v68, v69, "Failed to satisfy requirement: %s", v71, 0xCu);
    swift_arrayDestroy();
    v75 = v72;
    v65 = v100;
    MEMORY[0x1D82635B8](v75, -1, -1);
    MEMORY[0x1D82635B8](v71, -1, -1);

    v76 = (uint64_t)v89;
  }
  else
  {
    sub_1D4697DE0(v67, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);

    v76 = v64;
  }
  v66(v76, v65);
  v77 = (uint64_t)v93;
  v78 = (uint64_t)v91;
  v79 = v46[7];
  v80 = HIBYTE(v79) & 0xF;
  if ((v79 & 0x2000000000000000) == 0)
    v80 = v46[6] & 0xFFFFFFFFFFFFLL;
  if (v80)
  {
    swift_bridgeObjectRetain();
    v81 = sub_1D46F9314();
    if (v81 != 26)
    {
      v57 = v81;
      sub_1D4697DE0((uint64_t)v46, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
      sub_1D4697DE0((uint64_t)v98, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
      result = 0;
      goto LABEL_15;
    }
    sub_1D470C76C(v77);
    sub_1D469C304((uint64_t)v46, v78, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
    v82 = sub_1D4922358();
    v83 = sub_1D492291C();
    if (os_log_type_enabled(v82, v83))
    {
      v84 = (uint8_t *)swift_slowAlloc();
      v85 = swift_slowAlloc();
      v104 = v85;
      *(_DWORD *)v84 = 136315138;
      v86 = *(_QWORD *)(v78 + 48);
      v87 = *(_QWORD *)(v78 + 56);
      swift_bridgeObjectRetain();
      v103 = sub_1D47F0250(v86, v87, &v104);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      sub_1D4697DE0(v78, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
      _os_log_impl(&dword_1D467C000, v82, v83, "Failed to parse new_domain_if_not_meet_requirement: %s", v84, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v85, -1, -1);
      MEMORY[0x1D82635B8](v84, -1, -1);

      v99(v93, v100);
    }
    else
    {

      sub_1D4697DE0(v78, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
      v99((char *)v77, v65);
    }
    v88 = (uint64_t)v46;
  }
  else
  {
    v88 = (uint64_t)v46;
  }
  sub_1D4697DE0(v88, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
  sub_1D4697DE0((uint64_t)v98, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
  result = 0;
LABEL_14:
  v57 = 26;
LABEL_15:
  *v101 = v57;
  return result;
}

uint64_t sub_1D46F44F8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  if ((result & 0x8000000000000000) == 0)
  {
    v2 = a2;
    if (result)
    {
      v3 = *(_QWORD *)(a2 + 16);
      if (v3)
      {
        v4 = 0;
        v5 = 0;
        v6 = (_DWORD *)(a2 + 48);
        v7 = v3 - 1;
        v8 = MEMORY[0x1E0DEE9D8];
        v9 = MEMORY[0x1E0DEE9D8];
        v28 = result;
        v26 = v3 - 1;
        do
        {
          v11 = *((_QWORD *)v6 - 2);
          v10 = *((_QWORD *)v6 - 1);
          v12 = *v6;
          v13 = *(_QWORD *)(v8 + 16);
          v29 = v5;
          if (v13 >= result)
          {
            if (v5 >= v13)
              goto LABEL_30;
            v27 = 24 * v5;
            v17 = v8 + 24 * v5;
            v18 = *(_QWORD *)(v17 + 32);
            v19 = *(_QWORD *)(v17 + 40);
            v20 = *(_DWORD *)(v17 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1D48AB4F8(0, *(_QWORD *)(v9 + 16) + 1, 1);
              v7 = v26;
            }
            v22 = *(_QWORD *)(v9 + 16);
            v21 = *(_QWORD *)(v9 + 24);
            if (v22 >= v21 >> 1)
            {
              sub_1D48AB4F8(v21 > 1, v22 + 1, 1);
              v7 = v26;
            }
            *(_QWORD *)(v9 + 16) = v22 + 1;
            v23 = v9 + 24 * v22;
            *(_QWORD *)(v23 + 32) = v18;
            *(_QWORD *)(v23 + 40) = v19;
            *(_DWORD *)(v23 + 48) = v20;
            result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              result = sub_1D46D750C(v8);
              v8 = result;
            }
            if (v29 >= *(_QWORD *)(v8 + 16))
              goto LABEL_31;
            v24 = v8 + v27;
            swift_bridgeObjectRelease();
            result = v28;
            *(_QWORD *)(v24 + 32) = v11;
            *(_QWORD *)(v24 + 40) = v10;
            *(_DWORD *)(v24 + 48) = v12;
            v5 = v29 + 1;
            if ((uint64_t)(v29 + 1) < v28)
            {
              v2 = a2;
              if (v7 == v4)
                goto LABEL_28;
            }
            else
            {
              v2 = a2;
              if (v7 == v4)
                goto LABEL_28;
              v5 = 0;
            }
          }
          else
          {
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1D48AB4F8(0, v13 + 1, 1);
              v7 = v26;
            }
            v15 = *(_QWORD *)(v8 + 16);
            v14 = *(_QWORD *)(v8 + 24);
            if (v15 >= v14 >> 1)
            {
              sub_1D48AB4F8(v14 > 1, v15 + 1, 1);
              v7 = v26;
            }
            *(_QWORD *)(v8 + 16) = v15 + 1;
            v16 = v8 + 24 * v15;
            *(_QWORD *)(v16 + 32) = v11;
            *(_QWORD *)(v16 + 40) = v10;
            *(_DWORD *)(v16 + 48) = v12;
            result = v28;
            if (v7 == v4)
              goto LABEL_28;
          }
          ++v4;
          v6 += 6;
        }
        while (v4 < *(_QWORD *)(v2 + 16));
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      v9 = MEMORY[0x1E0DEE9D8];
LABEL_28:
      swift_bridgeObjectRelease();
      swift_release();
      return v9;
    }
    return v2;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1D46F478C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  char v19;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v29[9];
  int v30;
  uint64_t v31;

  v4 = v3;
  v26 = *(_QWORD *)(result + 16);
  if (v26)
  {
    v5 = 0;
    v6 = 0;
    v7 = MEMORY[0x1E0DEE9D8];
    v25 = result;
    while (v6 < *(_QWORD *)(result + 16))
    {
      v8 = *(_QWORD *)(result + v5 + 32);
      v9 = *(_QWORD *)(result + v5 + 40);
      v10 = *(_QWORD *)(result + v5 + 48);
      v11 = *(_QWORD *)(result + v5 + 56);
      v12 = *(_QWORD *)(result + v5 + 64);
      v13 = *(_QWORD *)(result + v5 + 72);
      v14 = *(_QWORD *)(result + v5 + 80);
      v16 = *(_QWORD *)(result + v5 + 88);
      v15 = *(_QWORD *)(result + v5 + 96);
      v17 = *(_DWORD *)(result + v5 + 104);
      v29[0] = v8;
      v29[1] = v9;
      v29[2] = v10;
      v29[3] = v11;
      v29[4] = v12;
      v29[5] = v13;
      v29[6] = v14;
      v29[7] = v16;
      v29[8] = v15;
      v30 = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18 = v4;
      v19 = sub_1D4720FB8((uint64_t)v29, a2, a3);
      if (v4)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      if ((v19 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v31 = v7;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1D48AB4C0(0, *(_QWORD *)(v7 + 16) + 1, 1);
          v7 = v31;
        }
        v22 = *(_QWORD *)(v7 + 16);
        v21 = *(_QWORD *)(v7 + 24);
        v23 = v22 + 1;
        if (v22 >= v21 >> 1)
        {
          sub_1D48AB4C0(v21 > 1, v22 + 1, 1);
          v23 = v22 + 1;
          v7 = v31;
        }
        *(_QWORD *)(v7 + 16) = v23;
        v24 = v7 + 80 * v22;
        *(_QWORD *)(v24 + 32) = v8;
        *(_QWORD *)(v24 + 40) = v9;
        *(_QWORD *)(v24 + 48) = v10;
        *(_QWORD *)(v24 + 56) = v11;
        *(_QWORD *)(v24 + 64) = v12;
        *(_QWORD *)(v24 + 72) = v13;
        *(_QWORD *)(v24 + 80) = v14;
        *(_QWORD *)(v24 + 88) = v16;
        *(_QWORD *)(v24 + 96) = v15;
        *(_DWORD *)(v24 + 104) = v17;
        v4 = v18;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      ++v6;
      v5 += 80;
      result = v25;
      if (v26 == v6)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
    v7 = MEMORY[0x1E0DEE9D8];
LABEL_15:
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t sub_1D46F496C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  int v58;
  NSObject *v59;
  os_log_type_t v60;
  int v61;
  uint64_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  os_log_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _DWORD v81[4];
  uint8_t *v82;
  uint8_t *v83;
  uint8_t *v84;
  uint64_t v85;
  int v86;
  os_log_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  NSObject *v101;
  int v102;
  uint64_t v103[3];

  v10 = sub_1D4922370();
  v93 = *(_QWORD *)(v10 - 8);
  v94 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v91 = (uint64_t)v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v81 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v92 = (char *)v81 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v81 - v19;
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)v81 - v22;
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)v81 - v24;
  v26 = *a5;
  if (*(_QWORD *)(*a6 + 16))
    v27 = a3 == 0;
  else
    v27 = 1;
  if (v27 || (v28 = sub_1D47208E8(*a6), !v29))
  {
    v39 = a6[1];
    if (*(_QWORD *)(v39 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v40 = swift_bridgeObjectRetain();
      v41 = sub_1D46F478C(v40, v39, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v41 + 16))
      {
        sub_1D470C76C((uint64_t)v20);
        v42 = (uint64_t)v92;
        sub_1D470C928((uint64_t)v92);
        v43 = v94;
        v44 = *(void (**)(char *, uint64_t))(v93 + 8);
        v44(v20, v94);
        swift_bridgeObjectRetain();
        v45 = sub_1D4922358();
        v46 = sub_1D4922910();
        if (os_log_type_enabled(v45, v46))
        {
          v47 = (uint8_t *)swift_slowAlloc();
          v48 = swift_slowAlloc();
          *(_QWORD *)&v95 = v48;
          *(_DWORD *)v47 = 136315138;
          v49 = swift_bridgeObjectRetain();
          v50 = MEMORY[0x1D8261B9C](v49, &_s14DetectedResultVN);
          v52 = v51;
          swift_bridgeObjectRelease();
          v103[0] = sub_1D47F0250(v50, v52, (uint64_t *)&v95);
          sub_1D4922A78();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1D467C000, v45, v46, "Satisfied detector label %s", v47, 0xCu);
          v38 = 1;
          swift_arrayDestroy();
          MEMORY[0x1D82635B8](v48, -1, -1);
          MEMORY[0x1D82635B8](v47, -1, -1);

          v44(v92, v94);
          return v38;
        }

        swift_bridgeObjectRelease_n();
        v44((char *)v42, v43);
        return 1;
      }
      swift_bridgeObjectRelease();
    }
    v53 = a6[2];
    if (!*(_QWORD *)(v53 + 16))
      return 0;
    sub_1D4720A18(v53, *(_QWORD *)(a1 + 48), *(_QWORD **)(a1 + 56), &v95);
    v54 = v100;
    if (!v100)
      return 0;
    v55 = *((_QWORD *)&v95 + 1);
    v92 = (char *)v95;
    v56 = v96;
    v89 = v98;
    v90 = v97;
    v88 = v99;
    v57 = v101;
    v58 = v102;
    sub_1D470C76C((uint64_t)v15);
    sub_1D470C928(v91);
    v93 = *(_QWORD *)(v93 + 8);
    ((void (*)(char *, uint64_t))v93)(v15, v94);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59 = sub_1D4922358();
    v60 = sub_1D4922910();
    v61 = v60;
    if (os_log_type_enabled(v59, v60))
    {
      v87 = v59;
      v62 = swift_slowAlloc();
      v86 = v61;
      v63 = (uint8_t *)v62;
      v64 = swift_slowAlloc();
      v85 = v64;
      v84 = v63;
      *(_DWORD *)v63 = 136315138;
      v83 = v63 + 12;
      v103[0] = v64;
      v82 = v63 + 4;
      *(_QWORD *)&v95 = 0;
      *((_QWORD *)&v95 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D4922B80();
      sub_1D492270C();
      swift_bridgeObjectRetain();
      v81[3] = v58;
      sub_1D492270C();
      swift_bridgeObjectRelease();
      sub_1D492270C();
      swift_bridgeObjectRetain();
      v65 = v88;
      sub_1D492270C();
      swift_bridgeObjectRelease();
      v66 = (uint64_t)v92;
      v67 = v55;
      v68 = v55;
      v69 = v56;
      v70 = v56;
      v71 = v89;
      v72 = v90;
      sub_1D46A4970((uint64_t)v92, v68, v70, v90, v89, v65, v54);
      *(_QWORD *)&v95 = sub_1D47F0250(v95, *((unint64_t *)&v95 + 1), v103);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      sub_1D46A4970(v66, v67, v69, v72, v71, v65, v54);
      sub_1D46A4970(v66, v67, v69, v72, v71, v65, v54);
      v73 = v87;
      v74 = v84;
      _os_log_impl(&dword_1D467C000, v87, (os_log_type_t)v86, "Satisfied detector result with DPN %s", v84, 0xCu);
      v38 = 1;
      v75 = v85;
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v75, -1, -1);
      MEMORY[0x1D82635B8](v74, -1, -1);

      ((void (*)(uint64_t, uint64_t))v93)(v91, v94);
      return v38;
    }
    v76 = (uint64_t)v92;
    v87 = v57;
    v77 = v89;
    v78 = v90;
    v79 = v88;
    sub_1D46A4970((uint64_t)v92, v55, v56, v90, v89, v88, v54);
    sub_1D46A4970(v76, v55, v56, v78, v77, v79, v54);

    ((void (*)(uint64_t, uint64_t))v93)(v91, v94);
    return 1;
  }
  v30 = v28;
  v31 = v29;
  sub_1D470C76C((uint64_t)v25);
  sub_1D470C928((uint64_t)v23);
  v32 = v94;
  v33 = *(void (**)(char *, uint64_t))(v93 + 8);
  v33(v25, v94);
  swift_bridgeObjectRetain();
  v34 = sub_1D4922358();
  v35 = sub_1D4922910();
  if (!os_log_type_enabled(v34, v35))
  {

    swift_bridgeObjectRelease_n();
    v33(v23, v32);
    return 1;
  }
  v36 = (uint8_t *)swift_slowAlloc();
  v37 = swift_slowAlloc();
  *(_QWORD *)&v95 = v37;
  *(_DWORD *)v36 = 136315138;
  swift_bridgeObjectRetain();
  v103[0] = sub_1D47F0250(v30, v31, (uint64_t *)&v95);
  sub_1D4922A78();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_1D467C000, v34, v35, "Satisfied coarse label %s", v36, 0xCu);
  v38 = 1;
  swift_arrayDestroy();
  MEMORY[0x1D82635B8](v37, -1, -1);
  MEMORY[0x1D82635B8](v36, -1, -1);

  v33(v23, v94);
  return v38;
}

uint64_t sub_1D46F51E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, int a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v71 = a8;
  v72 = a1;
  v67 = a7;
  v63 = a6;
  v65 = a3;
  v66 = a4;
  v73 = a2;
  v9 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Prerequisite(0);
  v64 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_1D4922370();
  v69 = *(_QWORD *)(v12 - 8);
  v70 = v12;
  v13 = MEMORY[0x1E0C80A78](v12);
  v68 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v61 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v61 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v61 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E290);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v61 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v32 = (char *)&v61 - v31;
  v33 = *a5;
  sub_1D469C5EC(v71, (uint64_t)v25, &qword_1ED98E290);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    sub_1D46992EC((uint64_t)v25, &qword_1ED98E290);
LABEL_9:
    v42 = v69;
    v43 = v70;
    v44 = (uint64_t)v68;
    sub_1D470C76C((uint64_t)v17);
    sub_1D470C928(v44);
    v45 = *(void (**)(char *, uint64_t))(v42 + 8);
    v45(v17, v43);
    v46 = sub_1D4922358();
    v47 = sub_1D4922910();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      _os_log_impl(&dword_1D467C000, v46, v47, "No domain config. Skip.", v48, 2u);
      MEMORY[0x1D82635B8](v48, -1, -1);
    }

    v45((char *)v44, v43);
    return 0;
  }
  v71 = v33;
  v61 = v20;
  v62 = v22;
  v34 = v67;
  v36 = v65;
  v35 = v66;
  sub_1D469C630((uint64_t)v25, (uint64_t)v32, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
  if (*v32 != 1)
  {
    sub_1D4697DE0((uint64_t)v32, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
    goto LABEL_9;
  }
  v37 = *((_QWORD *)v32 + 4);
  sub_1D469C304((uint64_t)v32, (uint64_t)v30, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
  if (!v37)
  {
    sub_1D4697DE0((uint64_t)v30, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
    v40 = v73;
    v39 = v64;
    v41 = (uint64_t)v62;
    goto LABEL_14;
  }
  v38 = *((_QWORD *)v30 + 4);
  sub_1D4697DE0((uint64_t)v30, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
  if ((v34 & 1) != 0)
  {
    v40 = v73;
    v39 = v64;
    v41 = (uint64_t)v62;
    if (v63)
    {
      if (v63 == 1)
      {
        if (v38 != 1)
          goto LABEL_31;
        goto LABEL_14;
      }
      if (v38 == 2)
        goto LABEL_14;
    }
    else if (!v38)
    {
      goto LABEL_14;
    }
LABEL_31:
    sub_1D4697DE0((uint64_t)v32, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
    return 0;
  }
  v39 = v64;
  v40 = v73;
  v41 = (uint64_t)v62;
  if (v38 != v63)
    goto LABEL_31;
LABEL_14:
  v50 = *((_QWORD *)v32 + 1);
  v51 = *(_QWORD *)(v50 + 16);
  if (v51)
  {
    v52 = v50 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
    v53 = *(_QWORD *)(v39 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1D469C304(v52, (uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Prerequisite);
      v74 = v71;
      v54 = sub_1D46F496C(v72, v40, v36, v35, &v74, v11);
      sub_1D4697DE0((uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Prerequisite);
      if ((v54 & 1) == 0)
        break;
      v52 += v53;
      --v51;
      v40 = v73;
      if (!v51)
      {
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  sub_1D470C76C(v41);
  v55 = (uint64_t)v61;
  sub_1D470C928((uint64_t)v61);
  v56 = v70;
  v57 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
  v57(v41, v70);
  v58 = sub_1D4922358();
  v59 = sub_1D4922910();
  if (os_log_type_enabled(v58, v59))
  {
    v60 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v60 = 0;
    _os_log_impl(&dword_1D467C000, v58, v59, "No prerequisite is specificed. Always extract domain signals.", v60, 2u);
    MEMORY[0x1D82635B8](v60, -1, -1);
  }

  v57(v55, v56);
LABEL_26:
  sub_1D4697DE0((uint64_t)v32, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
  return 1;
}

uint64_t sub_1D46F56C8(uint64_t a1, unsigned __int8 *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  NSObject *v66;
  os_log_type_t v67;
  _BOOL4 v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  unint64_t v73;
  void (*v74)(char *, uint64_t);
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  uint64_t result;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  uint8_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  NSObject *v108;
  os_log_type_t v109;
  uint8_t *v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  float v120;
  _DWORD *v121;
  unint64_t v122;
  float v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  NSObject *v130;
  os_log_type_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  char *v137;
  uint64_t v138;
  NSObject *v139;
  os_log_type_t v140;
  uint8_t *v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  unsigned __int8 v148;
  uint64_t v149;
  NSObject *v150;
  os_log_type_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char v162;
  uint64_t v163;
  NSObject *v164;
  os_log_type_t v165;
  uint8_t *v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  NSObject *v171;
  os_log_type_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t *v178;
  char *v179;
  char *v180;
  int v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint8_t *v196;
  char *v197;
  unint64_t v198;
  uint64_t v199;
  void (*v200)(char *, uint64_t);
  uint64_t *v201;
  uint64_t v202;
  uint64_t v203[2];

  v183 = a4;
  v201 = a3;
  v6 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v195 = (uint64_t)&v179 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v191 = (char *)&v179 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v186 = (uint64_t *)((char *)&v179 - v12);
  MEMORY[0x1E0C80A78](v11);
  v190 = (uint64_t)&v179 - v13;
  v14 = sub_1D4922370();
  v200 = *(void (**)(char *, uint64_t))(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v198 = (unint64_t)&v179 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v179 - v18;
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v179 - v21;
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)&v179 - v24;
  v26 = MEMORY[0x1E0C80A78](v23);
  v182 = (uint64_t)&v179 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v187 = (uint64_t)&v179 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v194 = (char *)&v179 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v188 = (uint64_t)&v179 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v193 = (char *)&v179 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v185 = (uint64_t)&v179 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v189 = (uint64_t)&v179 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v184 = (uint64_t)&v179 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v197 = (char *)&v179 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v192 = (uint64_t)&v179 - v45;
  v46 = MEMORY[0x1E0C80A78](v44);
  v196 = (uint8_t *)&v179 - v47;
  MEMORY[0x1E0C80A78](v46);
  v49 = (char *)&v179 - v48;
  v50 = *a2;
  v51 = MEMORY[0x1E0DEE9D8];
  v203[0] = MEMORY[0x1E0DEE9D8];
  v52 = *(_QWORD *)(a1 + 16);
  if (v52)
  {
    swift_bridgeObjectRetain();
    v53 = 72;
    do
    {
      v54 = swift_bridgeObjectRetain();
      sub_1D48957C4(v54);
      v53 += 48;
      --v52;
    }
    while (v52);
    swift_bridgeObjectRelease();
    v51 = v203[0];
  }
  v55 = *(_QWORD *)(v51 + 16);
  if (!v55)
  {
    swift_bridgeObjectRelease();
LABEL_21:
    v72 = v200;
    sub_1D470C76C((uint64_t)v19);
    v73 = v198;
    sub_1D470C928(v198);
    v74 = (void (*)(char *, uint64_t))*((_QWORD *)v72 + 1);
    v74(v19, v14);
    v75 = sub_1D4922358();
    v76 = sub_1D4922910();
    if (os_log_type_enabled(v75, v76))
    {
      v77 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v77 = 0;
      _os_log_impl(&dword_1D467C000, v75, v76, "Missing classification result. Consider as satisfied to be conservative.", v77, 2u);
      MEMORY[0x1D82635B8](v77, -1, -1);
    }

    v74((char *)v73, v14);
    return 1;
  }
  v181 = v50;
  v180 = v22;
  v179 = v25;
  v199 = v14;
  v57 = *v201;
  v56 = v201[1];
  v58 = (uint64_t *)(v51 + 48);
  while (1)
  {
    v59 = *(v58 - 2);
    v60 = *(v58 - 1);
    v61 = *v58;
    if (v59 == v57 && v60 == v56)
      break;
    if ((sub_1D4922E38() & 1) != 0)
      goto LABEL_16;
    v58 += 3;
    if (!--v55)
      goto LABEL_20;
  }
  v59 = v57;
  v60 = v56;
LABEL_16:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v61 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_20:
    swift_bridgeObjectRelease();
    v14 = v199;
    goto LABEL_21;
  }
  v198 = *(_QWORD *)(v61 + 16);
  sub_1D470C76C((uint64_t)v49);
  v63 = (uint64_t)v196;
  sub_1D470C928((uint64_t)v196);
  v64 = v199;
  v65 = (void (*)(char *, uint64_t))*((_QWORD *)v200 + 1);
  v65(v49, v199);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v66 = sub_1D4922358();
  v67 = sub_1D4922910();
  v68 = os_log_type_enabled(v66, v67);
  v200 = v65;
  if (v68)
  {
    v69 = (uint8_t *)swift_slowAlloc();
    v70 = swift_slowAlloc();
    v203[0] = v70;
    *(_DWORD *)v69 = 136315138;
    swift_bridgeObjectRetain();
    v202 = sub_1D47F0250(v59, v60, v203);
    v64 = v199;
    v65 = v200;
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D467C000, v66, v67, "ClassificationInfo ModelURN: %s", v69, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v70, -1, -1);
    MEMORY[0x1D82635B8](v69, -1, -1);

    v71 = (uint64_t)v196;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v71 = v63;
  }
  v65((char *)v71, v64);
  v80 = (uint64_t)v197;
  v81 = v192;
  sub_1D470C76C(v192);
  sub_1D470C928(v80);
  v65((char *)v81, v64);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v82 = sub_1D4922358();
  v83 = sub_1D4922910();
  if (os_log_type_enabled(v82, v83))
  {
    v84 = (uint8_t *)swift_slowAlloc();
    v85 = swift_slowAlloc();
    v203[0] = v85;
    *(_DWORD *)v84 = 136315138;
    v196 = v84 + 4;
    v86 = swift_bridgeObjectRetain();
    v87 = MEMORY[0x1D8261B9C](v86, &type metadata for ClassificationItem);
    v89 = v88;
    swift_bridgeObjectRelease();
    v202 = sub_1D47F0250(v87, v89, v203);
    v65 = v200;
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v64 = v199;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D467C000, v82, v83, "ClassificationInfo Results: %s", v84, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v85, -1, -1);
    MEMORY[0x1D82635B8](v84, -1, -1);

    v90 = v197;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v90 = (char *)v80;
  }
  v65(v90, v64);
  v91 = (uint64_t)v201;
  v92 = (uint64_t)v193;
  result = v201[2];
  if (!*(_QWORD *)(result + 16))
    goto LABEL_38;
  if ((sub_1D4720D90(result, v59, v60, v61) & 1) == 0)
  {
    v106 = v185;
    sub_1D470C76C(v185);
    sub_1D470C928(v92);
    v65((char *)v106, v64);
    v107 = v186;
    sub_1D469C304(v91, (uint64_t)v186, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
    v108 = sub_1D4922358();
    v109 = sub_1D4922910();
    if (os_log_type_enabled(v108, v109))
    {
      v110 = (uint8_t *)swift_slowAlloc();
      v111 = swift_slowAlloc();
      v203[0] = v111;
      *(_DWORD *)v110 = 136315138;
      v197 = (char *)(v110 + 4);
      v112 = *v107;
      v113 = v107[1];
      swift_bridgeObjectRetain();
      v202 = sub_1D47F0250(v112, v113, v203);
      v65 = v200;
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      sub_1D4697DE0((uint64_t)v107, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
      _os_log_impl(&dword_1D467C000, v108, v109, "No satisfied labels for %s", v110, 0xCu);
      swift_arrayDestroy();
      v114 = v111;
      v91 = (uint64_t)v201;
      MEMORY[0x1D82635B8](v114, -1, -1);
      MEMORY[0x1D82635B8](v110, -1, -1);

      result = ((uint64_t (*)(char *, uint64_t))v65)(v193, v199);
    }
    else
    {
      sub_1D4697DE0((uint64_t)v107, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);

      result = ((uint64_t (*)(uint64_t, uint64_t))v65)(v92, v64);
    }
LABEL_38:
    v78 = 0;
    goto LABEL_39;
  }
  v93 = v184;
  sub_1D470C76C(v184);
  v94 = v189;
  sub_1D470C928(v189);
  v65((char *)v93, v64);
  v95 = v190;
  sub_1D469C304(v91, v190, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
  v96 = sub_1D4922358();
  v97 = sub_1D4922910();
  if (os_log_type_enabled(v96, v97))
  {
    v98 = (uint8_t *)swift_slowAlloc();
    v99 = swift_slowAlloc();
    v203[0] = v99;
    *(_DWORD *)v98 = 136315138;
    v197 = (char *)(v98 + 4);
    v100 = type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold(0);
    v101 = swift_bridgeObjectRetain();
    v102 = MEMORY[0x1D8261B9C](v101, v100);
    v104 = v103;
    swift_bridgeObjectRelease();
    v202 = sub_1D47F0250(v102, v104, v203);
    v65 = v200;
    sub_1D4922A78();
    swift_bridgeObjectRelease();
    sub_1D4697DE0(v190, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
    _os_log_impl(&dword_1D467C000, v96, v97, "Has satisfied label for %s ", v98, 0xCu);
    v78 = 1;
    swift_arrayDestroy();
    v105 = v99;
    v91 = (uint64_t)v201;
    MEMORY[0x1D82635B8](v105, -1, -1);
    MEMORY[0x1D82635B8](v98, -1, -1);

    result = ((uint64_t (*)(uint64_t, uint64_t))v65)(v189, v199);
  }
  else
  {
    sub_1D4697DE0(v95, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);

    result = ((uint64_t (*)(uint64_t, uint64_t))v65)(v94, v64);
    v78 = 1;
  }
LABEL_39:
  v115 = (uint64_t)v194;
  v116 = *(_QWORD *)(v61 + 16);
  if (!v116)
  {
    __break(1u);
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  v117 = *(_QWORD *)(v61 + 32);
  v118 = *(_QWORD *)(v61 + 40);
  v119 = v198 - 1;
  if (v198 == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_49;
  }
  if (v116 < 2)
    goto LABEL_98;
  if (v198 <= v116)
  {
    v120 = *(float *)(v61 + 48);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v121 = (_DWORD *)(v61 + 72);
    v122 = v118;
    do
    {
      v123 = *(float *)v121;
      if (v120 < *(float *)v121)
      {
        v117 = *((_QWORD *)v121 - 2);
        v122 = *((_QWORD *)v121 - 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v120 = v123;
      }
      v121 += 6;
      --v119;
    }
    while (v119);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v118 = v122;
    v91 = (uint64_t)v201;
LABEL_49:
    swift_bridgeObjectRelease();
    v124 = *(_QWORD *)(v91 + 24);
    v125 = *(_QWORD *)(v91 + 32);
    v126 = HIBYTE(v125) & 0xF;
    if ((v125 & 0x2000000000000000) == 0)
      v126 = v124 & 0xFFFFFFFFFFFFLL;
    v127 = (uint64_t)v191;
    if (v126)
    {
      v128 = v195;
      if (v124 == v117 && v125 == v118 || (sub_1D4922E38() & 1) != 0)
      {
        swift_bridgeObjectRetain();
        v129 = v188;
        sub_1D470C76C(v188);
        sub_1D470C928(v115);
        v65((char *)v129, v199);
        sub_1D469C304(v91, v127, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
        swift_bridgeObjectRetain();
        v130 = sub_1D4922358();
        v131 = sub_1D4922910();
        if (os_log_type_enabled(v130, v131))
        {
          v132 = swift_slowAlloc();
          v198 = swift_slowAlloc();
          v203[0] = v198;
          *(_DWORD *)v132 = 136315394;
          swift_bridgeObjectRetain();
          v202 = sub_1D47F0250(v117, v118, v203);
          sub_1D4922A78();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v132 + 12) = 2080;
          v133 = v127;
          v134 = *(_QWORD *)(v127 + 24);
          v135 = *(_QWORD *)(v127 + 32);
          swift_bridgeObjectRetain();
          v202 = sub_1D47F0250(v134, v135, v203);
          v65 = v200;
          v91 = (uint64_t)v201;
          sub_1D4922A78();
          swift_bridgeObjectRelease();
          sub_1D4697DE0(v133, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
          _os_log_impl(&dword_1D467C000, v130, v131, "Most confident item is %s required %s", (uint8_t *)v132, 0x16u);
          v136 = v198;
          swift_arrayDestroy();
          v128 = v195;
          MEMORY[0x1D82635B8](v136, -1, -1);
          MEMORY[0x1D82635B8](v132, -1, -1);

          v137 = v194;
        }
        else
        {
          swift_bridgeObjectRelease_n();
          sub_1D4697DE0(v127, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);

          v137 = (char *)v115;
        }
        v65(v137, v199);
        v138 = v187;
        if ((*(_BYTE *)(v91 + 40) & 1) != 0)
        {
          sub_1D470C76C(v187);
          v139 = sub_1D4922358();
          v140 = sub_1D4922910();
          if (os_log_type_enabled(v139, v140))
          {
            v141 = (uint8_t *)swift_slowAlloc();
            v142 = swift_slowAlloc();
            v203[0] = v142;
            *(_DWORD *)v141 = 136315138;
            v143 = sub_1D46F8BC8(v181);
            v202 = sub_1D47F0250(v143, v144, v203);
            v65 = v200;
            v91 = (uint64_t)v201;
            sub_1D4922A78();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1D467C000, v139, v140, "Reject %s because it meets requirements but reject_domain is set.", v141, 0xCu);
            swift_arrayDestroy();
            v145 = v142;
            v128 = v195;
            MEMORY[0x1D82635B8](v145, -1, -1);
            MEMORY[0x1D82635B8](v141, -1, -1);
          }

          v65((char *)v138, v199);
          goto LABEL_74;
        }
        v78 = 1;
LABEL_75:
        sub_1D469C304(v91, v128, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
        goto LABEL_76;
      }
      if (*(_BYTE *)(v91 + 40) != 1)
      {
LABEL_74:
        v78 = 0;
        goto LABEL_75;
      }
      sub_1D469C304(v91, v128, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
    }
    else
    {
      v128 = v195;
      if (*(_BYTE *)(v91 + 40) != 1)
        goto LABEL_75;
      sub_1D469C304(v91, v195, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
      if (!(_DWORD)v78)
      {
LABEL_76:
        sub_1D4697DE0(v128, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
        if ((*(_BYTE *)(v91 + 64) & 1) != 0)
        {
          if ((v78 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            return 0;
          }
LABEL_78:
          swift_bridgeObjectRetain();
          sub_1D4826598(v117, v118, (char *)v203);
          swift_bridgeObjectRelease();
          v148 = v203[0];
          if (LOBYTE(v203[0]) == 26)
          {
            v149 = (uint64_t)v180;
            sub_1D470C76C((uint64_t)v180);
            swift_bridgeObjectRetain();
            v150 = sub_1D4922358();
            v151 = sub_1D4922910();
            if (os_log_type_enabled(v150, v151))
            {
              v152 = swift_slowAlloc();
              v153 = swift_slowAlloc();
              v203[0] = v153;
              *(_DWORD *)v152 = 136315394;
              v154 = sub_1D46F8BC8(v181);
              v202 = sub_1D47F0250(v154, v155, v203);
              sub_1D4922A78();
              swift_bridgeObjectRelease();
              *(_WORD *)(v152 + 12) = 2080;
              swift_bridgeObjectRetain();
              v202 = sub_1D47F0250(v117, v118, v203);
              sub_1D4922A78();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1D467C000, v150, v151, "Reject %s because most confident item %s failed to map to a valid domain.", (uint8_t *)v152, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x1D82635B8](v153, -1, -1);
              MEMORY[0x1D82635B8](v152, -1, -1);

              v156 = v149;
LABEL_81:
              v200((char *)v156, v199);
              return 0;
            }

            swift_bridgeObjectRelease_n();
            v161 = v149;
            goto LABEL_96;
          }
          v157 = sub_1D46F8BC8(v203[0]);
          v159 = v158;
          if (v157 == sub_1D46F8BC8(v181) && v159 == v160)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
          }
          else
          {
            v162 = sub_1D4922E38();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v162 & 1) == 0)
            {
              v170 = (uint64_t)v179;
              sub_1D470C76C((uint64_t)v179);
              swift_bridgeObjectRetain();
              v171 = sub_1D4922358();
              v172 = sub_1D4922910();
              if (os_log_type_enabled(v171, v172))
              {
                v173 = swift_slowAlloc();
                v201 = (uint64_t *)swift_slowAlloc();
                v203[0] = (uint64_t)v201;
                *(_DWORD *)v173 = 136315650;
                v174 = sub_1D46F8BC8(v181);
                v202 = sub_1D47F0250(v174, v175, v203);
                sub_1D4922A78();
                swift_bridgeObjectRelease();
                *(_WORD *)(v173 + 12) = 2080;
                swift_bridgeObjectRetain();
                v202 = sub_1D47F0250(v117, v118, v203);
                sub_1D4922A78();
                swift_bridgeObjectRelease_n();
                *(_WORD *)(v173 + 22) = 2080;
                v176 = sub_1D46F8BC8(v148);
                v202 = sub_1D47F0250(v176, v177, v203);
                sub_1D4922A78();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_1D467C000, v171, v172, "Reject %s because most confident item %s is mapped to %s", (uint8_t *)v173, 0x20u);
                v178 = v201;
                swift_arrayDestroy();
                MEMORY[0x1D82635B8](v178, -1, -1);
                MEMORY[0x1D82635B8](v173, -1, -1);

                v156 = v170;
                goto LABEL_81;
              }

              swift_bridgeObjectRelease_n();
              v161 = v170;
LABEL_96:
              v65((char *)v161, v199);
              return 0;
            }
            swift_bridgeObjectRelease();
          }
          return 1;
        }
LABEL_82:
        swift_bridgeObjectRelease();
        return v78;
      }
    }
    v146 = *(_QWORD *)(v128 + 32);
    if ((v146 & 0x2000000000000000) != 0)
      v147 = HIBYTE(v146) & 0xF;
    else
      v147 = *(_QWORD *)(v128 + 24) & 0xFFFFFFFFFFFFLL;
    sub_1D4697DE0(v128, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
    if (!v147)
    {
      swift_bridgeObjectRelease();
      v163 = v182;
      sub_1D470C76C(v182);
      v164 = sub_1D4922358();
      v165 = sub_1D4922910();
      if (os_log_type_enabled(v164, v165))
      {
        v166 = (uint8_t *)swift_slowAlloc();
        v167 = swift_slowAlloc();
        v203[0] = v167;
        *(_DWORD *)v166 = 136315138;
        v168 = sub_1D46F8BC8(v181);
        v202 = sub_1D47F0250(v168, v169, v203);
        sub_1D4922A78();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D467C000, v164, v165, "Reject %s because it meets requirements but reject_domain is set.", v166, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D82635B8](v167, -1, -1);
        MEMORY[0x1D82635B8](v166, -1, -1);

        v65((char *)v163, v199);
        return 0;
      }

      v161 = v163;
      goto LABEL_96;
    }
    if ((*(_BYTE *)(v91 + 64) & 1) != 0)
      goto LABEL_78;
    v78 = 1;
    goto LABEL_82;
  }
LABEL_99:
  __break(1u);
  return result;
}

float sub_1D46F6C60(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  float v39;
  uint64_t v40;
  _DWORD *v41;
  unint64_t v42;
  float v43;
  uint64_t v44;
  uint64_t v45;
  float v46;
  unint64_t v47;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v57 = a4;
  v58 = a2;
  v6 = sub_1D4922370();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v54 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E210);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.RichLabelConfig(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a3;
  sub_1D469C5EC(v58, (uint64_t)v15, &qword_1ED98E210);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
  {
    v54 = v10;
    v55 = v12;
    v58 = v7;
    sub_1D469C630((uint64_t)v15, (uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.RichLabelConfig);
    v21 = MEMORY[0x1E0DEE9D8];
    v59 = MEMORY[0x1E0DEE9D8];
    v22 = *(_QWORD *)(a1 + 16);
    v56 = v6;
    if (v22)
    {
      swift_bridgeObjectRetain();
      v23 = 72;
      do
      {
        v24 = swift_bridgeObjectRetain();
        sub_1D48957C4(v24);
        v23 += 48;
        --v22;
      }
      while (v22);
      swift_bridgeObjectRelease();
      v21 = v59;
    }
    v25 = v20;
    v26 = *(_QWORD *)(v21 + 16);
    if (!v26)
      goto LABEL_34;
    v28 = *((_QWORD *)v19 + 1);
    v27 = *((_QWORD *)v19 + 2);
    v29 = (uint64_t *)(v21 + 48);
    while (1)
    {
      v30 = *v29;
      v31 = *(v29 - 2) == v28 && *(v29 - 1) == v27;
      if (v31 || (sub_1D4922E38() & 1) != 0)
        break;
      v29 += 3;
      if (!--v26)
        goto LABEL_34;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (sub_1D46F8BC8(v25) == 1937006947 && v32 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      v33 = v56;
    }
    else
    {
      v34 = sub_1D4922E38();
      swift_bridgeObjectRelease();
      v33 = v56;
      if ((v34 & 1) == 0)
        goto LABEL_23;
    }
    if (*(_QWORD *)(v30 + 16) > 4uLL)
    {
      v35 = sub_1D46F44F8(4, v30);
      swift_bridgeObjectRelease();
      v30 = v35;
      v36 = *(_QWORD *)(v35 + 16);
      if (!v36)
        goto LABEL_34;
      goto LABEL_24;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    v36 = *(_QWORD *)(v30 + 16);
    if (!v36)
      goto LABEL_34;
LABEL_24:
    v37 = *(_QWORD *)(v30 + 32);
    v38 = *(_QWORD *)(v30 + 40);
    v39 = *(float *)(v30 + 48);
    v40 = v36 - 1;
    if (v36 == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v41 = (_DWORD *)(v30 + 72);
      v42 = v38;
      do
      {
        v43 = *(float *)v41;
        if (v39 < *(float *)v41)
        {
          v37 = *((_QWORD *)v41 - 2);
          v42 = *((_QWORD *)v41 - 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v39 = v43;
        }
        v41 += 6;
        --v40;
      }
      while (v40);
      swift_bridgeObjectRelease_n();
      v38 = v42;
    }
    v44 = v58;
    v45 = (uint64_t)v55;
    if (!v57
      || (v46 = *((float *)v19 + 8),
          swift_bridgeObjectRetain(),
          v47 = sub_1D46A4F58(v37, v38, v46),
          swift_bridgeObjectRelease(),
          (v47 & 0x100000000) != 0))
    {
      swift_bridgeObjectRelease();
      sub_1D470C76C(v45);
      v49 = (uint64_t)v54;
      sub_1D470C928((uint64_t)v54);
      v50 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v50(v45, v33);
      v51 = sub_1D4922358();
      v52 = sub_1D4922910();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v53 = 0;
        _os_log_impl(&dword_1D467C000, v51, v52, "Error getting threshold", v53, 2u);
        MEMORY[0x1D82635B8](v53, -1, -1);
        swift_bridgeObjectRelease();

      }
      else
      {

        swift_bridgeObjectRelease();
      }
      v50(v49, v33);
      goto LABEL_35;
    }
    swift_bridgeObjectRelease();
    if (v39 >= *(float *)&v47)
    {
      sub_1D4697DE0((uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.RichLabelConfig);
      return v39;
    }
LABEL_34:
    swift_bridgeObjectRelease();
LABEL_35:
    sub_1D4697DE0((uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.RichLabelConfig);
    return 0.0;
  }
  sub_1D46992EC((uint64_t)v15, &qword_1ED98E210);
  return 0.0;
}

unint64_t sub_1D46F712C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED98E228;
  if (!qword_1ED98E228)
  {
    v1 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement(255);
    result = MEMORY[0x1D82634E0](&unk_1D492C5E4, v1);
    atomic_store(result, (unint64_t *)&qword_1ED98E228);
  }
  return result;
}

id sub_1D46F7174()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  float v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void *v27;
  void *v28;
  double v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  int v38;
  id v39;
  uint64_t v41;
  void *v42;
  int v43;
  void *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  __int128 v59;
  __int128 v60;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v41 - v5;
  v7 = v0[1];
  v57 = *v0;
  v8 = v0[3];
  v54 = v0[2];
  v9 = (int *)type metadata accessor for ObjectKnowledge();
  v10 = (uint64_t)v0 + v9[6];
  v58 = v6;
  sub_1D469C5EC(v10, (uint64_t)v6, &qword_1ED98CAF0);
  v11 = *(float *)((char *)v0 + v9[7]);
  v12 = (uint64_t *)((char *)v0 + v9[8]);
  v13 = v12[1];
  v52 = *v12;
  v14 = v9[10];
  v15 = (uint64_t *)((char *)v0 + v9[9]);
  v16 = v15[1];
  v50 = *v15;
  v56 = v4;
  sub_1D469C5EC((uint64_t)v0 + v14, (uint64_t)v4, &qword_1ED98CAF0);
  v17 = *(uint64_t *)((char *)v0 + v9[11]);
  v55 = v7;
  swift_bridgeObjectRetain();
  v53 = v8;
  swift_bridgeObjectRetain();
  v51 = v13;
  swift_bridgeObjectRetain();
  v49 = v16;
  swift_bridgeObjectRetain();
  v48 = sub_1D46F7474(v17);
  v18 = (char *)v0 + v9[13];
  v19 = *(_QWORD *)v18;
  v20 = v18[8];
  v21 = (uint64_t *)((char *)v0 + v9[14]);
  v23 = *v21;
  v22 = v21[1];
  if (v22 >> 60 == 15)
  {
    v59 = 0u;
    v60 = 0u;
  }
  else
  {
    *((_QWORD *)&v60 + 1) = MEMORY[0x1E0CB0338];
    *(_QWORD *)&v59 = v23;
    *((_QWORD *)&v59 + 1) = v22;
  }
  v24 = v9[16];
  v46 = *(uint64_t *)((char *)v0 + v9[15]);
  v45 = *(unsigned __int16 *)((char *)v0 + v24);
  if (v20)
    v19 = 0;
  v47 = v19;
  v25 = v9[18];
  v26 = (char *)v0 + v9[17];
  v27 = (void *)*((_QWORD *)v26 + 1);
  v44 = *(void **)v26;
  v28 = *(void **)((char *)v0 + v25);
  v29 = *(double *)((char *)v0 + v9[19]);
  v43 = *((unsigned __int8 *)v0 + v9[20]);
  v30 = v9[22];
  v31 = (char *)v0 + v9[21];
  v32 = *((_QWORD *)v31 + 1);
  v42 = *(void **)v31;
  v34 = *(uint64_t *)((char *)v0 + v30);
  v33 = *(uint64_t *)((char *)v0 + v30 + 8);
  v35 = *(uint64_t *)((char *)v0 + v9[23]);
  v36 = *(double *)((char *)v0 + v9[24]);
  v37 = *(double *)((char *)v0 + v9[25]);
  v38 = *(_DWORD *)((char *)v0 + v9[26]);
  v39 = objc_allocWithZone((Class)VIObjectKnowledge);
  sub_1D46E5180(v23, v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1D46F8548(v11, v29, v36, v37, v57, v55, v54, v53, (uint64_t)v58, v52, v51, v50, v49, (uint64_t)v56, v48, v47, &v59, v46, v45,
           v44,
           v27,
           v28,
           v43,
           v42,
           v32,
           v34,
           v33,
           v35,
           v38);
}

uint64_t sub_1D46F7474(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    sub_1D4922BF8();
    v4 = a1 + 48;
    do
    {
      v5 = objc_allocWithZone((Class)VIObjectKnowledgeProperty);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v6 = (void *)sub_1D49225F8();
      swift_bridgeObjectRelease();
      v7 = (void *)sub_1D49225F8();
      swift_bridgeObjectRelease();
      objc_msgSend(v5, sel_initWithName_value_, v6, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1D4922BE0();
      sub_1D4922C04();
      sub_1D4922C10();
      sub_1D4922BEC();
      v4 += 64;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

id sub_1D46F75DC()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v29;
  double *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[28];
  uint64_t v42;

  v1 = VisualUnderstanding.ImageRegion.domainInfo.getter();
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  v30 = v0;
  v42 = MEMORY[0x1E0DEE9D8];
  sub_1D4922BF8();
  v3 = v2 - 1;
  v4 = 32;
  v31 = v1;
  while (1)
  {
    v5 = *(_OWORD *)(v1 + v4 + 16);
    v33 = *(_OWORD *)(v1 + v4);
    v34 = v5;
    v6 = *(_OWORD *)(v1 + v4 + 32);
    v7 = *(_OWORD *)(v1 + v4 + 48);
    v8 = *(_OWORD *)(v1 + v4 + 80);
    v37 = *(_OWORD *)(v1 + v4 + 64);
    v38 = v8;
    v35 = v6;
    v36 = v7;
    v9 = *(_OWORD *)(v1 + v4 + 96);
    v10 = *(_OWORD *)(v1 + v4 + 112);
    v11 = *(_OWORD *)(v1 + v4 + 128);
    *(_OWORD *)&v41[12] = *(_OWORD *)(v1 + v4 + 140);
    *(_OWORD *)v41 = v11;
    v39 = v9;
    v40 = v10;
    v12 = *((_QWORD *)&v8 + 1);
    VisualDomain.mappedDomainKey.getter();
    v32 = v4;
    if (v12)
      swift_bridgeObjectRetain();
    v13 = *((_QWORD *)&v37 + 1);
    v14 = *((_QWORD *)&v36 + 1);
    v15 = v35;
    sub_1D46A47CC((uint64_t)&v33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = (void *)sub_1D49225F8();
    swift_bridgeObjectRelease();
    if (v12)
    {
      v17 = (void *)sub_1D49225F8();
      swift_bridgeObjectRelease();
      if (v15)
        goto LABEL_7;
    }
    else
    {
      v17 = 0;
      if (v15)
      {
LABEL_7:
        v18 = (void *)sub_1D49225F8();
        swift_bridgeObjectRelease();
        v1 = v31;
        if (v14)
          goto LABEL_8;
        goto LABEL_12;
      }
    }
    v18 = 0;
    v1 = v31;
    if (v14)
    {
LABEL_8:
      v19 = (void *)sub_1D49225F8();
      swift_bridgeObjectRelease();
      if (v13)
        goto LABEL_9;
      goto LABEL_13;
    }
LABEL_12:
    v19 = 0;
    if (v13)
    {
LABEL_9:
      v20 = (void *)sub_1D49225F8();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
LABEL_13:
    v20 = 0;
LABEL_14:
    BYTE4(v29) = BYTE8(v35);
    BYTE3(v29) = 0;
    BYTE2(v29) = v41[1];
    BYTE1(v29) = v41[0];
    LOBYTE(v29) = BYTE14(v40);
    objc_msgSend(objc_allocWithZone((Class)VIImageRegionDomainInfo), sel_initWithDomainKey_labelName_glyphName_displayLabel_displayMessage_hasFocalPoint_focalPoint_isCornerGlyph_ocrResultsRequired_barcodeResultsRequired_isLowConfidence_shouldShowDynamicGlyph_, v16, v17, v18, v19, v20, 1, *((double *)&v33 + 1), *(double *)&v34, v29);

    sub_1D46A48AC((uint64_t)&v33);
    sub_1D4922BE0();
    sub_1D4922C04();
    sub_1D4922C10();
    sub_1D4922BEC();
    if (!v3)
      break;
    --v3;
    v4 = v32 + 160;
  }
  swift_bridgeObjectRelease();
  v0 = v30;
LABEL_18:
  v21 = *v0;
  v22 = v0[1];
  v23 = v0[2];
  v24 = v0[3];
  v25 = objc_allocWithZone((Class)VIImageRegion);
  sub_1D46F2DB4(0, (unint64_t *)&unk_1ED98D270);
  v26 = (void *)sub_1D4922814();
  swift_bridgeObjectRelease();
  v27 = objc_msgSend(v25, sel_initWithRegionOfInterest_domainInfo_, v26, v21, v22, v23, v24);

  return v27;
}

id sub_1D46F790C()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;

  v1 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0[9];
  v6 = v0[7];
  v50 = v0[8];
  v51 = v5;
  v7 = v0[9];
  v52 = v0[10];
  v8 = v0[5];
  v9 = v0[3];
  v46 = v0[4];
  v47 = v8;
  v10 = v0[5];
  v11 = v0[7];
  v48 = v0[6];
  v49 = v11;
  v12 = v0[1];
  v42 = *v0;
  v43 = v12;
  v13 = v0[3];
  v15 = *v0;
  v14 = v0[1];
  v44 = v0[2];
  v45 = v13;
  v38 = v50;
  v39 = v7;
  v40 = v0[10];
  v34 = v46;
  v35 = v10;
  v36 = v48;
  v37 = v6;
  v30 = v15;
  v31 = v14;
  v53 = *((_QWORD *)v0 + 22);
  v41 = *((_QWORD *)v0 + 22);
  v32 = v44;
  v33 = v9;
  v16 = VisualUnderstanding.imageRegions.getter();
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    *(_QWORD *)&v30 = MEMORY[0x1E0DEE9D8];
    sub_1D4922BF8();
    v18 = *(unsigned __int8 *)(v2 + 80);
    v29 = v16;
    v19 = v16 + ((v18 + 32) & ~v18);
    v20 = *(_QWORD *)(v2 + 72);
    do
    {
      sub_1D469C304(v19, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1D46F75DC();
      sub_1D4697DE0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1D4922BE0();
      sub_1D4922C04();
      sub_1D4922C10();
      sub_1D4922BEC();
      v19 += v20;
      --v17;
    }
    while (v17);
  }
  swift_bridgeObjectRelease();
  sub_1D4920D5C();
  swift_allocObject();
  sub_1D46B2E18((uint64_t)&v42);
  sub_1D4920D50();
  v38 = v50;
  v39 = v51;
  v40 = v52;
  v41 = v53;
  v34 = v46;
  v35 = v47;
  v36 = v48;
  v37 = v49;
  v30 = v42;
  v31 = v43;
  v32 = v44;
  v33 = v45;
  sub_1D46F8B58();
  v21 = sub_1D4920D44();
  v23 = v22;
  swift_release();
  sub_1D46B34D0((uint64_t)&v42);
  v24 = objc_allocWithZone((Class)VIVisualUnderstanding);
  sub_1D46F2DB4(0, &qword_1ED98D238);
  v25 = (void *)sub_1D4922814();
  swift_bridgeObjectRelease();
  v26 = (void *)sub_1D4920F60();
  sub_1D4696F10(v21, v23);
  v27 = objc_msgSend(v24, sel_initWithImageRegions_payload_, v25, v26);

  return v27;
}

id sub_1D46F7C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  void *v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;

  v1 = v0;
  v2 = type metadata accessor for RegionSearchResult.ResultItem(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA5C0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v55 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v55 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v55 - v15;
  v63 = v1 + *(int *)(v2 + 24);
  sub_1D469C5EC(v63, (uint64_t)&v55 - v15, &qword_1EFEAA5C0);
  v17 = type metadata accessor for ObjectKnowledge();
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48);
  if (v18(v16, 1, v17) == 1)
  {
    sub_1D46F84B0((uint64_t)v16);
  }
  else
  {
    v19 = *((_QWORD *)v16 + 1);
    swift_bridgeObjectRetain();
    sub_1D4697DE0((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ObjectKnowledge);
    if (v19)
    {
      swift_bridgeObjectRelease();
      sub_1D469C304(v1, (uint64_t)v4, type metadata accessor for RegionSearchResult.ResultItem);
      sub_1D4697DE0((uint64_t)v4, type metadata accessor for RegionSearchResult.ResultItem);
      goto LABEL_10;
    }
  }
  sub_1D469C304(v1, (uint64_t)v4, type metadata accessor for RegionSearchResult.ResultItem);
  sub_1D469C5EC((uint64_t)&v4[*(int *)(v2 + 24)], (uint64_t)v14, &qword_1EFEAA5C0);
  sub_1D4697DE0((uint64_t)v4, type metadata accessor for RegionSearchResult.ResultItem);
  if (v18(v14, 1, v17) == 1)
  {
    sub_1D46F84B0((uint64_t)v14);
    return 0;
  }
  v20 = (uint64_t *)&v14[*(int *)(v17 + 56)];
  v21 = *v20;
  v22 = v20[1];
  sub_1D46E5180(*v20, v22);
  sub_1D4697DE0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ObjectKnowledge);
  if (v22 >> 60 == 15)
    return 0;
  sub_1D46AA1F0(v21, v22);
LABEL_10:
  v64 = *(_BYTE *)v1;
  v61 = VisualDomain.mappedDomainKey.getter();
  v25 = v24;
  sub_1D469C5EC(v63, (uint64_t)v11, &qword_1EFEAA5C0);
  v26 = v18(v11, 1, v17);
  v62 = v25;
  if (v26 != 1)
  {
    v58 = v8;
    v32 = &v11[*(int *)(v17 + 48)];
    v33 = *((_QWORD *)v32 + 1);
    v34 = *((_QWORD *)v32 + 2);
    v35 = *((_QWORD *)v32 + 3);
    v36 = *((_QWORD *)v32 + 4);
    v37 = *((_QWORD *)v32 + 5);
    v38 = *((_QWORD *)v32 + 6);
    v39 = *((_QWORD *)v32 + 7);
    v60 = *(id *)v32;
    v56 = v36;
    v57 = v34;
    v40 = v35;
    v41 = v37;
    v42 = v38;
    v43 = v39;
    sub_1D46F84F0((uint64_t)v60, v33, v34, v35, v36, v37, v38, v39);
    sub_1D4697DE0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ObjectKnowledge);
    if (v33)
    {
      v59 = objc_allocWithZone((Class)VIThirdPartyObject);
      v44 = v41;
      v55 = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45 = v42;
      v46 = v43;
      sub_1D46E5180(v42, v43);
      v48 = v56;
      v47 = v57;
      v59 = sub_1D46F89A4((uint64_t)v60, v33, v57, v40, v56, v44, v45, v46);
      sub_1D46F8AB8((uint64_t)v60, v33, v47, v40, v48, v55, v45, v46);
    }
    else
    {
      v59 = 0;
    }
    v8 = v58;
    v27 = *(_QWORD *)(v1 + 16);
    if (v27)
      goto LABEL_12;
LABEL_17:
    v60 = 0;
    goto LABEL_18;
  }
  sub_1D46F84B0((uint64_t)v11);
  v59 = 0;
  v27 = *(_QWORD *)(v1 + 16);
  if (!v27)
    goto LABEL_17;
LABEL_12:
  v28 = *(_QWORD *)(v1 + 8);
  v60 = objc_allocWithZone((Class)VIOntologyNode);
  sub_1D46A484C(v28, v27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = (void *)sub_1D49225F8();
  swift_bridgeObjectRelease();
  v30 = v8;
  v31 = (void *)sub_1D49225F8();
  swift_bridgeObjectRelease();
  v60 = objc_msgSend(v60, sel_initWithKnowledgeGraphID_labelDebugDescription_, v29, v31);

  v8 = v30;
  sub_1D46A487C(v28, v27);
LABEL_18:
  sub_1D469C5EC(v63, (uint64_t)v8, &qword_1EFEAA5C0);
  if (v18(v8, 1, v17) == 1)
  {
    sub_1D46F84B0((uint64_t)v8);
    v49 = 0;
  }
  else
  {
    v49 = sub_1D46F7174();
    sub_1D4697DE0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ObjectKnowledge);
  }
  v50 = objc_allocWithZone((Class)VIRegionOfInterestResultItem);
  v51 = (void *)sub_1D49225F8();
  swift_bridgeObjectRelease();
  v53 = v59;
  v52 = v60;
  v23 = objc_msgSend(v50, sel_initWithDomain_thirdPartyObject_ontologyNode_objectKnowledge_, v51, v59, v60, v49);

  return v23;
}

id sub_1D46F812C()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v20;
  uint64_t v21;

  v1 = type metadata accessor for RegionSearchResult.ResultItem(0);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  v6 = v0[1];
  v7 = v0[2];
  v8 = v0[3];
  v9 = *((_QWORD *)v0 + 4);
  v21 = MEMORY[0x1E0DEE9D8];
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = v9 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v12 = *(_QWORD *)(v2 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1D469C304(v11, (uint64_t)v4, type metadata accessor for RegionSearchResult.ResultItem);
      v13 = sub_1D46F7C08();
      v14 = sub_1D4697DE0((uint64_t)v4, type metadata accessor for RegionSearchResult.ResultItem);
      if (v13)
      {
        MEMORY[0x1D8261B78](v14);
        if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1D4922844();
        sub_1D492285C();
        sub_1D4922838();
      }
      v11 += v12;
      --v10;
    }
    while (v10);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v15 = objc_allocWithZone((Class)VIRegionOfInterestResult);
  sub_1D46F2DB4(0, &qword_1EFEAA8C0);
  swift_bridgeObjectRetain();
  v16 = (void *)sub_1D4922814();
  swift_bridgeObjectRelease();
  sub_1D46F2DB4(0, (unint64_t *)&qword_1EFEAA8C8);
  v17 = (void *)sub_1D4922814();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v15, sel_initWithNormalizedBoundingBox_resultItems_searchSections_, v16, v17, v5, v6, v7, v8);

  return v18;
}

id sub_1D46F8348()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v2 = v0[23];
  v1 = v0[24];
  v3 = v0[25];
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_1D4922BF8();
    v5 = v2 + 64;
    do
    {
      v5 += 48;
      sub_1D46F812C();
      sub_1D4922BE0();
      sub_1D4922C04();
      sub_1D4922C10();
      sub_1D4922BEC();
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  sub_1D46E5180(v1, v3);
  sub_1D46F2DB4(0, &qword_1EFEAA8B8);
  v6 = (void *)sub_1D4922814();
  swift_bridgeObjectRelease();
  v7 = 0;
  if (v3 >> 60 != 15)
  {
    v7 = (void *)sub_1D4920F60();
    sub_1D46AA1F0(v1, v3);
  }
  v8 = objc_msgSend(objc_allocWithZone((Class)VISearchResult), sel_initWithRegionOfInterestResults_userFeedbackPayload_, v6, v7);

  return v8;
}

uint64_t sub_1D46F84B0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA5C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D46F84F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1D46E5180(a7, a8);
  }
  return result;
}

id sub_1D46F8548(float a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, unsigned __int16 a19, void *a20,void *a21,void *a22,unsigned __int8 a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29)
{
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  double v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  id v77;
  uint64_t v78;
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  id v87;

  if (a6)
  {
    v86 = sub_1D49225F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v86 = 0;
  }
  v85 = sub_1D49225F8();
  swift_bridgeObjectRelease();
  v35 = sub_1D4920F18();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  v38 = 0;
  if (v37(a9, 1, v35) != 1)
  {
    v38 = sub_1D4920EB8();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(a9, v35);
  }
  if (a11)
  {
    v83 = sub_1D49225F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v83 = 0;
  }
  v84 = (void *)v38;
  if (a13)
  {
    v82 = sub_1D49225F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v82 = 0;
  }
  v76 = a22;
  v77 = a24;
  v72 = a20;
  v73 = a21;
  v81 = a27;
  v74 = a26;
  if (v37(a14, 1, v35) == 1)
  {
    v69 = 0;
  }
  else
  {
    v69 = sub_1D4920EB8();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(a14, v35);
  }
  v70 = a29;
  v79 = a19;
  v80 = a23;
  v78 = a18;
  v39 = a16;
  sub_1D46F2DB4(0, &qword_1EFEAA8D0);
  v71 = sub_1D4922814();
  swift_bridgeObjectRelease();
  v40 = a17[3];
  if (v40)
  {
    v41 = __swift_project_boxed_opaque_existential_1(a17, a17[3]);
    v42 = *(_QWORD *)(v40 - 8);
    MEMORY[0x1E0C80A78](v41);
    v44 = (char *)&v68 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v42 + 16))(v44);
    v75 = sub_1D4922E2C();
    v45 = *(void (**)(char *, uint64_t))(v42 + 8);
    v39 = a16;
    v45(v44, v40);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a17);
  }
  else
  {
    v75 = 0;
  }
  v46 = (void *)sub_1D49225F8();
  v72 = v46;
  swift_bridgeObjectRelease();
  sub_1D4921008();
  sub_1D46F8B10();
  v47 = (void *)sub_1D4922538();
  v73 = v47;
  swift_bridgeObjectRelease();
  v48 = (void *)sub_1D49225F8();
  v76 = v48;
  swift_bridgeObjectRelease();
  v49 = (void *)sub_1D49225F8();
  v77 = v49;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA8E0);
  v50 = (void *)sub_1D4922538();
  swift_bridgeObjectRelease();
  LODWORD(v67) = v70;
  v66 = v49;
  LOBYTE(v65) = v80 & 1;
  v63 = v46;
  v64 = v47;
  LOWORD(v62) = v79;
  v61 = v39;
  v51 = (void *)v71;
  *(float *)&v52 = a1;
  v53 = (void *)v86;
  v54 = v84;
  v55 = (void *)v85;
  v57 = (void *)v82;
  v56 = (void *)v83;
  v58 = (void *)v69;
  v59 = objc_msgSend(v87, sel_initWithKnowledgeGraphID_title_thumbnailURL_thumbnailAspectRatio_shortDescription_detailedDescription_webURL_knowledgeProperties_serializedDomainType_serializedDomainResponse_csuQid_csuIdType_csuLocalizedLabel_csuLocalizedLabelDictionary_csuConfidence_csuSensitiveLocation_csuCategory_csuVertical_csuLocalizedSynonyms_csuLongitute_csuLatitute_csuVersion_, v86, v85, v84, v83, v82, v69, v52, a2, a3, a4, v71, v61, v75, v78, v62, v63, v64,
          v65,
          v48,
          v66,
          v50,
          v67);

  swift_unknownObjectRelease();
  return v59;
}

id sub_1D46F89A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  void *v8;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;

  v13 = (void *)sub_1D49225F8();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v14 = (void *)sub_1D49225F8();
    swift_bridgeObjectRelease();
    if (a6)
    {
LABEL_3:
      v15 = (void *)sub_1D49225F8();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    v14 = 0;
    if (a6)
      goto LABEL_3;
  }
  v15 = 0;
LABEL_6:
  if (a8 >> 60 == 15)
  {
    v16 = 0;
  }
  else
  {
    v16 = (void *)sub_1D4920F60();
    sub_1D46AA1F0(a7, a8);
  }
  v17 = objc_msgSend(v8, sel_initWithObjectIdentifier_imageURL_thumbnailURL_metadata_, v13, v14, v15, v16);

  return v17;
}

uint64_t sub_1D46F8AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1D46AA1F0(a7, a8);
  }
  return result;
}

unint64_t sub_1D46F8B10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFEAA8D8;
  if (!qword_1EFEAA8D8)
  {
    v1 = sub_1D4921008();
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0CB0E58], v1);
    atomic_store(result, (unint64_t *)&qword_1EFEAA8D8);
  }
  return result;
}

unint64_t sub_1D46F8B58()
{
  unint64_t result;

  result = qword_1ED98CBB8;
  if (!qword_1ED98CBB8)
  {
    result = MEMORY[0x1D82634E0](&protocol conformance descriptor for VisualUnderstanding, &type metadata for VisualUnderstanding);
    atomic_store(result, (unint64_t *)&qword_1ED98CBB8);
  }
  return result;
}

uint64_t VisualDomain.rawValue.getter()
{
  unsigned __int8 *v0;

  return sub_1D46F8BC8(*v0);
}

VisualIntelligence::VisualDomain_optional __swiftcall VisualDomain.init(rawValue:)(Swift::String rawValue)
{
  VisualIntelligence::VisualDomain_optional *v1;
  VisualIntelligence::VisualDomain_optional *v2;
  VisualIntelligence::VisualDomain_optional result;

  v2 = v1;
  result.value.domain = sub_1D46F9314();
  v2->value.domain = result.value.domain;
  return result;
}

uint64_t sub_1D46F8BC8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D46F8BF4 + 4 * byte_1D4929A20[a1]))(7631457, 0xE300000000000000);
}

uint64_t sub_1D46F8BF4()
{
  return 0x65727574616ELL;
}

uint64_t sub_1D46F8C08()
{
  return 0x6B72616D646E616CLL;
}

uint64_t sub_1D46F8C20()
{
  return 0x4C6C61727574616ELL;
}

uint64_t sub_1D46F8C44()
{
  return 0x616964656DLL;
}

uint64_t sub_1D46F8C58()
{
  return 1802465122;
}

uint64_t sub_1D46F8C68()
{
  return 0x6D75626C61;
}

uint64_t sub_1D46F8C7C()
{
  return 1937006947;
}

uint64_t sub_1D46F8C8C()
{
  return 1936158564;
}

uint64_t sub_1D46F8C9C()
{
  return 0x736C616D696E61;
}

uint64_t sub_1D46F8D08()
{
  return 0x6C657261707061;
}

uint64_t sub_1D46F8D20()
{
  return 0x726F737365636361;
}

uint64_t sub_1D46F8D40()
{
  return 1685024614;
}

uint64_t sub_1D46F8D50()
{
  return 0x6F726665726F7473;
}

uint64_t sub_1D46F8D70()
{
  return 0x626D79536E676973;
}

uint64_t sub_1D46F8DB4()
{
  return 0x676F4C646E617262;
}

uint64_t sub_1D46F8DD8()
{
  return 0x65646F63726162;
}

uint64_t sub_1D46F8DF0()
{
  return 0x727574706C756373;
}

uint64_t sub_1D46F8E0C()
{
  return 0x656E696C796B73;
}

uint64_t sub_1D46F8E24()
{
  return 0x44327463656A626FLL;
}

uint64_t sub_1D46F8E4C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D46F9314();
  *a1 = result;
  return result;
}

uint64_t sub_1D46F8E78@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1D46F8BC8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D46F8EA0()
{
  sub_1D46F95B8();
  return sub_1D49227FC();
}

uint64_t sub_1D46F8EFC()
{
  sub_1D46F95B8();
  return sub_1D49227F0();
}

void sub_1D46F8F48(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E97FB3F0;
}

void static VisualDomain.art.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void static VisualDomain.nature.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void static VisualDomain.landmark.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

void static VisualDomain.naturalLandmark.getter(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

void static VisualDomain.apparel.getter(_BYTE *a1@<X8>)
{
  *a1 = 14;
}

void static VisualDomain.accessories.getter(_BYTE *a1@<X8>)
{
  *a1 = 15;
}

void static VisualDomain.food.getter(_BYTE *a1@<X8>)
{
  *a1 = 16;
}

void static VisualDomain.storefront.getter(_BYTE *a1@<X8>)
{
  *a1 = 17;
}

void static VisualDomain.signSymbol.getter(_BYTE *a1@<X8>)
{
  *a1 = 18;
}

void static VisualDomain.cats.getter(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

void static VisualDomain.dogs.getter(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

void static VisualDomain.animals.getter(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

void static VisualDomain.birds.getter(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

void static VisualDomain.insects.getter(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

void static VisualDomain.reptiles.getter(_BYTE *a1@<X8>)
{
  *a1 = 12;
}

void static VisualDomain.mammals.getter(_BYTE *a1@<X8>)
{
  *a1 = 13;
}

void static VisualDomain.media.getter(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

void static VisualDomain.book.getter(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

void static VisualDomain.album.getter(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

void static VisualDomain.object2D.getter(_BYTE *a1@<X8>)
{
  *a1 = 25;
}

void static VisualDomain.barcode.getter(_BYTE *a1@<X8>)
{
  *a1 = 22;
}

void static VisualDomain.sculpture.getter(_BYTE *a1@<X8>)
{
  *a1 = 23;
}

void static VisualDomain.skyline.getter(_BYTE *a1@<X8>)
{
  *a1 = 24;
}

void static VisualDomain.laundryCareSymbol.getter(_BYTE *a1@<X8>)
{
  *a1 = 19;
}

void static VisualDomain.autoSymbol.getter(_BYTE *a1@<X8>)
{
  *a1 = 20;
}

void static VisualDomain.brandLogoSymbol.getter(_BYTE *a1@<X8>)
{
  *a1 = 21;
}

uint64_t sub_1D46F908C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1D46F8BC8(*a1);
  v5 = v4;
  if (v3 == sub_1D46F8BC8(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D46F9114()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1D4922EF8();
  sub_1D46F8BC8(v1);
  sub_1D49226D0();
  swift_bridgeObjectRelease();
  return sub_1D4922F34();
}

uint64_t sub_1D46F9174()
{
  unsigned __int8 *v0;

  sub_1D46F8BC8(*v0);
  sub_1D49226D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D46F91B4()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1D4922EF8();
  sub_1D46F8BC8(v1);
  sub_1D49226D0();
  swift_bridgeObjectRelease();
  return sub_1D4922F34();
}

uint64_t sub_1D46F9210()
{
  sub_1D46F95FC();
  return sub_1D49227FC();
}

uint64_t sub_1D46F926C()
{
  sub_1D46F95FC();
  return sub_1D49227F0();
}

uint64_t static VisualDomain.allVisualSearchDomains.getter()
{
  id v0;
  uint64_t v1;
  uint64_t v2;

  v0 = VIAllVisualSearchDomains();
  v1 = sub_1D49228D4();

  v2 = sub_1D4854F50(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1D46F9314()
{
  unint64_t v0;

  v0 = sub_1D4922E68();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1A)
    return 26;
  else
    return v0;
}

unint64_t sub_1D46F9368()
{
  unint64_t result;

  result = qword_1ED98CBD0;
  if (!qword_1ED98CBD0)
  {
    result = MEMORY[0x1D82634E0](&protocol conformance descriptor for VisualDomain, &type metadata for VisualDomain);
    atomic_store(result, (unint64_t *)&qword_1ED98CBD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualDomain()
{
  return &type metadata for VisualDomain;
}

uint64_t _s18VisualIntelligence12VisualDomainV6DomainOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE7)
    goto LABEL_17;
  if (a2 + 25 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 25) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 25;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 25;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 25;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1A;
  v8 = v6 - 26;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s18VisualIntelligence12VisualDomainV6DomainOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 25 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 25) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE6)
    return ((uint64_t (*)(void))((char *)&loc_1D46F94A0 + 4 * byte_1D4929A3F[v4]))();
  *a1 = a2 + 25;
  return ((uint64_t (*)(void))((char *)sub_1D46F94D4 + 4 * byte_1D4929A3A[v4]))();
}

uint64_t sub_1D46F94D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46F94DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D46F94E4);
  return result;
}

uint64_t sub_1D46F94F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D46F94F8);
  *(_BYTE *)result = a2 + 25;
  return result;
}

uint64_t sub_1D46F94FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46F9504(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisualDomain.Domain()
{
  return &type metadata for VisualDomain.Domain;
}

unint64_t sub_1D46F9524()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFEAA8E8;
  if (!qword_1EFEAA8E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFEAA8F0);
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EFEAA8E8);
  }
  return result;
}

unint64_t sub_1D46F9574()
{
  unint64_t result;

  result = qword_1EFEAA8F8;
  if (!qword_1EFEAA8F8)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4929C58, &type metadata for VisualDomain.Domain);
    atomic_store(result, (unint64_t *)&qword_1EFEAA8F8);
  }
  return result;
}

unint64_t sub_1D46F95B8()
{
  unint64_t result;

  result = qword_1EFEAA900;
  if (!qword_1EFEAA900)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4929BE0, &type metadata for VisualDomain.Domain);
    atomic_store(result, (unint64_t *)&qword_1EFEAA900);
  }
  return result;
}

unint64_t sub_1D46F95FC()
{
  unint64_t result;

  result = qword_1ED98CBD8;
  if (!qword_1ED98CBD8)
  {
    result = MEMORY[0x1D82634E0](&protocol conformance descriptor for VisualDomain, &type metadata for VisualDomain);
    atomic_store(result, (unint64_t *)&qword_1ED98CBD8);
  }
  return result;
}

uint64_t sub_1D46F9644(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D46F9684 + 4 * byte_1D4929C80[a1]))(0x746E696F70646E65, 0xEE0079654B4C5255);
}

unint64_t sub_1D46F9684()
{
  return 0xD000000000000012;
}

uint64_t sub_1D46F96AC()
{
  return 0x646E49616964656DLL;
}

uint64_t sub_1D46F96C8()
{
  return 0x4C65736F62726576;
}

uint64_t sub_1D46F96EC()
{
  return 0x626173694452434FLL;
}

unint64_t sub_1D46F970C()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1D46F9774(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1D46F9644(*a1);
  v5 = v4;
  if (v3 == sub_1D46F9644(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D46F97FC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1D4922EF8();
  sub_1D46F9644(v1);
  sub_1D49226D0();
  swift_bridgeObjectRelease();
  return sub_1D4922F34();
}

uint64_t sub_1D46F985C()
{
  unsigned __int8 *v0;

  sub_1D46F9644(*v0);
  sub_1D49226D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D46F989C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1D4922EF8();
  sub_1D46F9644(v1);
  sub_1D49226D0();
  swift_bridgeObjectRelease();
  return sub_1D4922F34();
}

uint64_t sub_1D46F98F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D46FB040();
  *a1 = result;
  return result;
}

uint64_t sub_1D46F9924@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1D46F9644(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1D46F994C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E97FCA40;
}

void sub_1D46F995C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  _QWORD v26[3];

  v1 = *(void **)(v0 + 32);
  v2 = (void *)sub_1D49225F8();
  v3 = objc_msgSend(v1, sel_stringForKey_, v2);

  if (v3)
  {
    v4 = sub_1D492261C();
    v6 = v5;

    v7 = HIBYTE(v6) & 0xF;
    v8 = v4 & 0xFFFFFFFFFFFFLL;
    if ((v6 & 0x2000000000000000) != 0)
      v9 = HIBYTE(v6) & 0xF;
    else
      v9 = v4 & 0xFFFFFFFFFFFFLL;
    if (v9)
    {
      if ((v6 & 0x1000000000000000) != 0)
      {
        sub_1D46FA708(v4, v6, 10);
LABEL_44:
        swift_bridgeObjectRelease();
        return;
      }
      if ((v6 & 0x2000000000000000) == 0)
      {
        if ((v4 & 0x1000000000000000) != 0)
          v10 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
        else
          v10 = (unsigned __int8 *)sub_1D4922BC8();
        sub_1D46FA8CC(v10, v8, 10);
        goto LABEL_44;
      }
      v26[0] = v4;
      v26[1] = v6 & 0xFFFFFFFFFFFFFFLL;
      if (v4 == 43)
      {
        if (v7)
        {
          if (v7 != 1 && (BYTE1(v4) - 48) <= 9u && v7 != 2 && (BYTE2(v4) - 48) <= 9u)
          {
            v11 = 10 * (BYTE1(v4) - 48) + (BYTE2(v4) - 48);
            v12 = v7 - 3;
            if (v12)
            {
              v13 = (unsigned __int8 *)v26 + 3;
              do
              {
                v14 = *v13 - 48;
                if (v14 > 9)
                  break;
                v15 = 10 * v11;
                if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63)
                  break;
                v11 = v15 + v14;
                if (__OFADD__(v15, v14))
                  break;
                ++v13;
                --v12;
              }
              while (v12);
            }
          }
          goto LABEL_44;
        }
      }
      else
      {
        if (v4 != 45)
        {
          if (v7)
          {
            if ((v4 - 48) <= 9u && v7 != 1 && (BYTE1(v4) - 48) <= 9u)
            {
              v16 = 10 * (v4 - 48) + (BYTE1(v4) - 48);
              v17 = v7 - 2;
              if (v17)
              {
                v18 = (unsigned __int8 *)v26 + 2;
                do
                {
                  v19 = *v18 - 48;
                  if (v19 > 9)
                    break;
                  v20 = 10 * v16;
                  if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63)
                    break;
                  v16 = v20 + v19;
                  if (__OFADD__(v20, v19))
                    break;
                  ++v18;
                  --v17;
                }
                while (v17);
              }
            }
          }
          goto LABEL_44;
        }
        if (v7)
        {
          if (v7 != 1 && (BYTE1(v4) - 48) <= 9u && v7 != 2 && (BYTE2(v4) - 48) <= 9u)
          {
            v21 = -10 * (BYTE1(v4) - 48) - (BYTE2(v4) - 48);
            v22 = v7 - 3;
            if (v22)
            {
              v23 = (unsigned __int8 *)v26 + 3;
              do
              {
                v24 = *v23 - 48;
                if (v24 > 9)
                  break;
                v25 = 10 * v21;
                if ((unsigned __int128)(v21 * (__int128)10) >> 64 != (10 * v21) >> 63)
                  break;
                v21 = v25 - v24;
                if (__OFSUB__(v25, v24))
                  break;
                ++v23;
                --v22;
              }
              while (v22);
            }
          }
          goto LABEL_44;
        }
        __break(1u);
      }
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1D46F9C8C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;

  if (!os_variant_has_internal_ui())
    return 0;
  v1 = *(void **)(v0 + 32);
  v2 = (void *)sub_1D49225F8();
  v3 = objc_msgSend(v1, sel_stringForKey_, v2);

  if (!v3)
    return 0;
  v4 = sub_1D492261C();

  return v4;
}

uint64_t sub_1D46F9D30(uint64_t a1)
{
  return sub_1D46F9D78(a1, 0xD00000000000001CLL, 0x80000001D4940F70, (uint64_t *)&off_1ED98F3F0);
}

uint64_t sub_1D46F9D54(uint64_t a1)
{
  return sub_1D46F9D78(a1, 0xD000000000000024, 0x80000001D4940ED0, &qword_1EFEAA908);
}

uint64_t sub_1D46F9D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t result;

  type metadata accessor for InternalSettings();
  swift_allocObject();
  result = sub_1D46F9DCC(a2, a3);
  *a4 = result;
  return result;
}

uint64_t sub_1D46F9DCC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t result;
  uint64_t *v14;
  void *v15;
  void *v16;
  uint64_t *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;

  v5 = sub_1D4922370();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  swift_bridgeObjectRetain();
  v10 = (void *)sub_1D49225F8();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithSuiteName_, v10);

  if (v11)
  {
    v2[2] = a1;
    v2[3] = a2;
    v2[4] = v11;
    v12 = v11;
    sub_1D46FA0F0();

    return (uint64_t)v2;
  }
  else
  {
    if (qword_1ED98F398 != -1)
      swift_once();
    if (byte_1ED98F388 != 1)
      goto LABEL_17;
    if ((sub_1D473117C() & 1) != 0)
    {
      if (qword_1EFEA9C20 != -1)
        swift_once();
      v14 = &qword_1EFEAA908;
    }
    else
    {
      if (qword_1ED98F3A8 != -1)
        swift_once();
      v14 = (uint64_t *)&off_1ED98F3F0;
    }
    v15 = *(void **)(*v14 + 32);
    swift_retain();
    v16 = (void *)sub_1D49225F8();
    LODWORD(v15) = objc_msgSend(v15, sel_BOOLForKey_, v16);
    swift_release();

    if ((_DWORD)v15)
    {
      if (qword_1EFEA9C78 != -1)
        swift_once();
      v17 = qword_1EFEAAA30;
    }
    else
    {
LABEL_17:
      if (qword_1ED98F3D0 != -1)
        swift_once();
      v17 = qword_1ED98F3B0;
    }
    v18 = __swift_project_value_buffer(v5, (uint64_t)v17);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v18, v5);
    v19 = sub_1D4922358();
    v20 = sub_1D492291C();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_1D467C000, v19, v20, "NSUserDefaults.init(suiteName:) unexpectedly returned nil", v21, 2u);
      MEMORY[0x1D82635B8](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    result = sub_1D4922C34();
    __break(1u);
  }
  return result;
}

uint64_t sub_1D46FA0F0()
{
  uint64_t inited;
  uint64_t v1;
  unint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98F408);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D4927210;
  *(_BYTE *)(inited + 32) = 2;
  v1 = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 40) = 0;
  *(_BYTE *)(inited + 72) = 4;
  *(_QWORD *)(inited + 104) = v1;
  *(_BYTE *)(inited + 80) = 0;
  *(_BYTE *)(inited + 112) = 5;
  *(_QWORD *)(inited + 144) = v1;
  *(_BYTE *)(inited + 120) = 0;
  v2 = sub_1D47C34D0(inited);
  sub_1D46FA180(v2);
  return swift_bridgeObjectRelease();
}

void sub_1D46FA180(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  id v11;
  int64_t v12;
  __int128 v13;

  sub_1D47C339C(MEMORY[0x1E0DEE9D8]);
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v12 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  if (v4)
  {
    v5 = __clz(__rbit64(v4));
    goto LABEL_22;
  }
  if (v12 > 1)
  {
    v6 = *(_QWORD *)(a1 + 72);
    v7 = 1;
    if (v6)
      goto LABEL_21;
    v7 = 2;
    if (v12 <= 2)
      goto LABEL_23;
    v6 = *(_QWORD *)(a1 + 80);
    if (v6)
      goto LABEL_21;
    v7 = 3;
    if (v12 <= 3)
      goto LABEL_23;
    v6 = *(_QWORD *)(a1 + 88);
    if (v6)
      goto LABEL_21;
    v7 = 4;
    if (v12 <= 4)
      goto LABEL_23;
    v6 = *(_QWORD *)(a1 + 96);
    if (v6)
      goto LABEL_21;
    v7 = 5;
    if (v12 <= 5)
      goto LABEL_23;
    v6 = *(_QWORD *)(a1 + 104);
    if (v6)
    {
LABEL_21:
      v5 = __clz(__rbit64(v6)) + (v7 << 6);
LABEL_22:
      v9 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v5);
      sub_1D4696FAC(*(_QWORD *)(a1 + 56) + 32 * v5, (uint64_t)&v13 + 8);
      __asm { BR              X9 }
    }
    v8 = 6;
    if (v12 > 6)
    {
      v6 = *(_QWORD *)(a1 + 112);
      if (v6)
      {
        v7 = 6;
        goto LABEL_21;
      }
      while (1)
      {
        v7 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          JUMPOUT(0x1D46FA670);
        }
        if (v7 >= v12)
          break;
        v6 = *(_QWORD *)(a1 + 64 + 8 * v7);
        ++v8;
        if (v6)
          goto LABEL_21;
      }
    }
  }
LABEL_23:
  swift_release();
  v10 = (void *)sub_1D4922538();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_registerDefaults_, v10);

}

uint64_t sub_1D46FA6A8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InternalSettings()
{
  return objc_opt_self();
}

unsigned __int8 *sub_1D46FA6F4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1D46FAB48(a1, a2, a3);
}

unsigned __int8 *sub_1D46FA708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1D49227B4();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1D46BD518();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1D4922BC8();
  }
LABEL_7:
  v11 = sub_1D46FA8CC(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1D46FA7EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int16 v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1D49227B4();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1D46BD518();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1D4922BC8();
  }
LABEL_7:
  v11 = (unsigned __int16)sub_1D46FAB48(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 & 0x1FF;
}

unsigned __int8 *sub_1D46FA8CC(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_1D46FAB48(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned __int8 v12;
  int v13;
  int v14;
  char v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  int v23;
  char v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  int v28;
  unsigned int v29;
  char v30;
  int v31;
  char v32;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v16 = a2 - 1;
      if (a2 != 1)
      {
        v17 = a3 + 87;
        if (a3 > 10)
        {
          v18 = a3 + 55;
        }
        else
        {
          v17 = 97;
          v18 = 65;
        }
        if (a3 <= 10)
          v19 = a3 + 48;
        else
          v19 = 58;
        if (result)
        {
          LOBYTE(v8) = 0;
          v20 = result + 1;
          do
          {
            v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                v12 = 0;
                v13 = 1;
                if (v21 < 0x61 || v21 >= v17)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v22 = -87;
              }
              else
              {
                v22 = -55;
              }
            }
            else
            {
              v22 = -48;
            }
            v23 = (char)v8 * (char)a3;
            v24 = v23;
            if ((char)v23 != v23)
              goto LABEL_72;
            v8 = (char)v23 + (char)(v21 + v22);
            if ((char)(v24 + v21 + v22) != v8)
              goto LABEL_72;
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 8));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v26 = a3 + 55;
        }
        else
        {
          v25 = 97;
          v26 = 65;
        }
        if (a3 <= 10)
          v27 = a3 + 48;
        else
          v27 = 58;
        if (result)
        {
          LOBYTE(v28) = 0;
          do
          {
            v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                v12 = 0;
                v13 = 1;
                if (v29 < 0x61 || v29 >= v25)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v30 = -87;
              }
              else
              {
                v30 = -55;
              }
            }
            else
            {
              v30 = -48;
            }
            v31 = (char)v28 * (char)a3;
            v32 = v31;
            if ((char)v31 != v31)
              goto LABEL_72;
            v28 = (char)v31 + (char)(v29 + v30);
            if ((char)(v32 + v29 + v30) != v28)
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v28;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          LOBYTE(v8) = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            v14 = (char)v8 * (char)a3;
            v15 = v14;
            if ((char)v14 != v14)
              goto LABEL_72;
            v8 = (char)v14 - (char)(v10 + v11);
            if ((char)(v15 - (v10 + v11)) != v8)
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 8));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

_OWORD *sub_1D46FADFC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1D46FAE0C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98F3D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for InternalSettings.Key(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for InternalSettings.Key(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1D46FAF28 + 4 * byte_1D4929C8F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1D46FAF5C + 4 * byte_1D4929C8A[v4]))();
}

uint64_t sub_1D46FAF5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46FAF64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D46FAF6CLL);
  return result;
}

uint64_t sub_1D46FAF78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D46FAF80);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1D46FAF84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D46FAF8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InternalSettings.Key()
{
  return &type metadata for InternalSettings.Key;
}

unint64_t sub_1D46FAFAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFEAA910;
  if (!qword_1EFEAA910)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFEAA918);
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EFEAA910);
  }
  return result;
}

unint64_t sub_1D46FAFFC()
{
  unint64_t result;

  result = qword_1ED98F3E0;
  if (!qword_1ED98F3E0)
  {
    result = MEMORY[0x1D82634E0](&unk_1D4929D78, &type metadata for InternalSettings.Key);
    atomic_store(result, (unint64_t *)&qword_1ED98F3E0);
  }
  return result;
}

uint64_t sub_1D46FB040()
{
  unint64_t v0;

  v0 = sub_1D4922CA0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

uint64_t sub_1D46FB088(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD *);
  uint64_t v24;
  _QWORD v25[9];
  int v26;
  uint64_t v27;

  v23 = (uint64_t (*)(_QWORD *))result;
  v22 = *(_QWORD *)(a3 + 16);
  if (v22)
  {
    v4 = 0;
    v5 = 0;
    v24 = MEMORY[0x1E0DEE9D8];
    v21 = a3;
    while (v5 < *(_QWORD *)(a3 + 16))
    {
      v6 = *(_QWORD *)(a3 + v4 + 32);
      v7 = *(_QWORD *)(a3 + v4 + 40);
      v8 = *(_QWORD *)(a3 + v4 + 48);
      v9 = *(_QWORD *)(a3 + v4 + 56);
      v10 = *(_QWORD *)(a3 + v4 + 64);
      v11 = *(_QWORD *)(a3 + v4 + 72);
      v12 = *(_QWORD *)(a3 + v4 + 80);
      v14 = *(_QWORD *)(a3 + v4 + 88);
      v13 = *(_QWORD *)(a3 + v4 + 96);
      v15 = *(_DWORD *)(a3 + v4 + 104);
      v25[0] = v6;
      v25[1] = v7;
      v25[2] = v8;
      v25[3] = v9;
      v25[4] = v10;
      v25[5] = v11;
      v25[6] = v12;
      v25[7] = v14;
      v25[8] = v13;
      v26 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16 = v23(v25);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if ((v16 & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v27 = v24;
        if ((result & 1) == 0)
        {
          result = sub_1D48AB4C0(0, *(_QWORD *)(v24 + 16) + 1, 1);
          v24 = v27;
        }
        v18 = *(_QWORD *)(v24 + 16);
        v17 = *(_QWORD *)(v24 + 24);
        v19 = v18 + 1;
        if (v18 >= v17 >> 1)
        {
          result = sub_1D48AB4C0(v17 > 1, v18 + 1, 1);
          v19 = v18 + 1;
          v24 = v27;
        }
        *(_QWORD *)(v24 + 16) = v19;
        v20 = v24 + 80 * v18;
        *(_QWORD *)(v20 + 32) = v6;
        *(_QWORD *)(v20 + 40) = v7;
        *(_QWORD *)(v20 + 48) = v8;
        *(_QWORD *)(v20 + 56) = v9;
        *(_QWORD *)(v20 + 64) = v10;
        *(_QWORD *)(v20 + 72) = v11;
        *(_QWORD *)(v20 + 80) = v12;
        *(_QWORD *)(v20 + 88) = v14;
        *(_QWORD *)(v20 + 96) = v13;
        *(_DWORD *)(v20 + 104) = v15;
        v3 = 0;
      }
      else
      {
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        v3 = 0;
      }
      ++v5;
      v4 += 80;
      a3 = v21;
      if (v22 == v5)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
    v24 = MEMORY[0x1E0DEE9D8];
LABEL_16:
    swift_bridgeObjectRelease();
    return v24;
  }
  return result;
}

uint64_t sub_1D46FB294(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  unint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD *);
  uint64_t v18;
  _QWORD v19[2];
  int v20;
  uint64_t v21;

  v4 = a3;
  v18 = *(_QWORD *)(a3 + 16);
  if (v18)
  {
    v5 = (uint64_t (*)(_QWORD *))result;
    v6 = 0;
    v7 = (_DWORD *)(a3 + 48);
    v8 = MEMORY[0x1E0DEE9D8];
    v16 = (uint64_t (*)(_QWORD *))result;
    while (v6 < *(_QWORD *)(v4 + 16))
    {
      v10 = *((_QWORD *)v7 - 2);
      v9 = *((_QWORD *)v7 - 1);
      v11 = *v7;
      v19[0] = v10;
      v19[1] = v9;
      v20 = v11;
      swift_bridgeObjectRetain();
      v12 = v5(v19);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if ((v12 & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v21 = v8;
        if ((result & 1) == 0)
        {
          result = sub_1D48AB4F8(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v8 = v21;
        }
        v14 = *(_QWORD *)(v8 + 16);
        v13 = *(_QWORD *)(v8 + 24);
        if (v14 >= v13 >> 1)
        {
          result = sub_1D48AB4F8(v13 > 1, v14 + 1, 1);
          v8 = v21;
        }
        *(_QWORD *)(v8 + 16) = v14 + 1;
        v15 = v8 + 24 * v14;
        *(_QWORD *)(v15 + 32) = v10;
        *(_QWORD *)(v15 + 40) = v9;
        *(_DWORD *)(v15 + 48) = v11;
        v4 = a3;
        v5 = v16;
      }
      else
      {
        result = swift_bridgeObjectRelease();
      }
      ++v6;
      v7 += 6;
      if (v18 == v6)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_16:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t sub_1D46FB41C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD *);
  uint64_t v22;
  _QWORD v23[2];
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = a3;
  v22 = *(_QWORD *)(a3 + 16);
  if (v22)
  {
    v5 = (uint64_t (*)(_QWORD *))result;
    v6 = 0;
    v7 = (_QWORD *)(a3 + 80);
    v8 = MEMORY[0x1E0DEE9D8];
    v20 = (uint64_t (*)(_QWORD *))result;
    while (v6 < *(_QWORD *)(v4 + 16))
    {
      v10 = *(v7 - 6);
      v9 = *(v7 - 5);
      v11 = *((_DWORD *)v7 - 8);
      v12 = *(v7 - 3);
      v13 = *(v7 - 2);
      v14 = *(v7 - 1);
      v15 = *v7;
      v23[0] = v10;
      v23[1] = v9;
      v24 = v11;
      v25 = v12;
      v26 = v13;
      v27 = v14;
      v28 = v15;
      swift_bridgeObjectRetain();
      v16 = v5(v23);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if ((v16 & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v29 = v8;
        if ((result & 1) == 0)
        {
          result = sub_1D48AC14C(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v8 = v29;
        }
        v18 = *(_QWORD *)(v8 + 16);
        v17 = *(_QWORD *)(v8 + 24);
        if (v18 >= v17 >> 1)
        {
          result = sub_1D48AC14C(v17 > 1, v18 + 1, 1);
          v8 = v29;
        }
        *(_QWORD *)(v8 + 16) = v18 + 1;
        v19 = v8 + 56 * v18;
        *(_QWORD *)(v19 + 32) = v10;
        *(_QWORD *)(v19 + 40) = v9;
        *(_DWORD *)(v19 + 48) = v11;
        *(_QWORD *)(v19 + 56) = v12;
        *(_QWORD *)(v19 + 64) = v13;
        *(_QWORD *)(v19 + 72) = v14;
        *(_QWORD *)(v19 + 80) = v15;
        v4 = a3;
        v5 = v20;
      }
      else
      {
        result = swift_bridgeObjectRelease();
      }
      ++v6;
      v7 += 7;
      if (v22 == v6)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_16:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

void sub_1D46FB5CC()
{
  uint64_t v1;

  v1 = sub_1D4922370();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X9 }
}

uint64_t sub_1D46FB650()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v6 = sub_1D472E71C(5u);
  if (*(_QWORD *)(v1 + 16) && (v8 = sub_1D47CA4DC(v6, v7), (v9 & 1) != 0))
  {
    v10 = *(_QWORD **)(*(_QWORD *)(v1 + 56) + 8 * v8);
    v12 = v10[2];
    v11 = v10[3];
    v14 = v10[4];
    v13 = v10[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    *v0 = v12;
    v0[1] = v11;
    v0[2] = v14;
    v0[3] = v13;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1D470C76C(v3);
    v16 = sub_1D4922358();
    v17 = sub_1D492291C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_QWORD *)(v5 - 104) = v4;
      v20 = v19;
      *(_QWORD *)(v5 - 88) = v19;
      *(_DWORD *)v18 = 136315138;
      v21 = sub_1D472E71C(5u);
      *(_QWORD *)(v5 - 96) = sub_1D47F0250(v21, v22, (uint64_t *)(v5 - 88));
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D467C000, v16, v17, "trying to access node with kgid %s not present in default ontology graph", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v20, -1, -1);
      MEMORY[0x1D82635B8](v18, -1, -1);

      result = (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 8))(v3, *(_QWORD *)(v5 - 104));
    }
    else
    {

      result = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
    }
    *(_OWORD *)v0 = 0u;
    *((_OWORD *)v0 + 1) = 0u;
  }
  return result;
}

_QWORD *sub_1D46FB8B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  unsigned __int8 v14;
  char v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  char v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _OWORD v37[3];

  *(_QWORD *)&v29 = a1;
  swift_bridgeObjectRetain();
  sub_1D46FBDC8((uint64_t *)&v29);
  v1 = v29;
  v2 = *(_QWORD *)(v29 + 16);
  if (!v2)
  {
    swift_release();
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_14;
  }
  v3 = v2 - 1;
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v5 = MEMORY[0x1E0DEE9E8];
  for (i = 32; ; i += 160)
  {
    v7 = *(_OWORD *)(v1 + i + 16);
    v29 = *(_OWORD *)(v1 + i);
    v30 = v7;
    v8 = *(_OWORD *)(v1 + i + 32);
    v9 = *(_OWORD *)(v1 + i + 48);
    v10 = *(_OWORD *)(v1 + i + 80);
    v33 = *(_OWORD *)(v1 + i + 64);
    v34 = v10;
    v31 = v8;
    v32 = v9;
    v11 = *(_OWORD *)(v1 + i + 96);
    v12 = *(_OWORD *)(v1 + i + 112);
    v13 = *(_OWORD *)(v1 + i + 128);
    *(_OWORD *)((char *)v37 + 12) = *(_OWORD *)(v1 + i + 140);
    v36 = v12;
    v37[0] = v13;
    v35 = v11;
    v14 = v29;
    sub_1D46A47CC((uint64_t)&v29);
    swift_bridgeObjectRetain();
    v15 = sub_1D46DE6CC(v14, v5);
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
      break;
    sub_1D46A48AC((uint64_t)&v29);
    if (!v3)
      goto LABEL_12;
LABEL_11:
    --v3;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D46FC9C8(v14, isUniquelyReferenced_nonNull_native, &v28);
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_1D48A84F8(0, v4[2] + 1, 1, v4);
  v18 = v4[2];
  v17 = v4[3];
  if (v18 >= v17 >> 1)
    v4 = sub_1D48A84F8((_QWORD *)(v17 > 1), v18 + 1, 1, v4);
  v4[2] = v18 + 1;
  v19 = &v4[20 * v18];
  v20 = v30;
  v19[2] = v29;
  v19[3] = v20;
  v21 = v31;
  v22 = v32;
  v23 = v34;
  v19[6] = v33;
  v19[7] = v23;
  v19[4] = v21;
  v19[5] = v22;
  v24 = v35;
  v25 = v36;
  v26 = v37[0];
  *(_OWORD *)((char *)v19 + 172) = *(_OWORD *)((char *)v37 + 12);
  v19[9] = v25;
  v19[10] = v26;
  v19[8] = v24;
  if (v3)
    goto LABEL_11;
LABEL_12:
  swift_release();
LABEL_14:
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1D46FBABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _DWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  float v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    swift_bridgeObjectRetain();
    v6 = (_DWORD *)(a3 + 48);
    v7 = MEMORY[0x1E0DEE9D8];
    do
    {
      v11 = *(float *)v6;
      if (*(float *)v6 >= 0.01)
      {
        v13 = *((_QWORD *)v6 - 2);
        v12 = *((_QWORD *)v6 - 1);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1D48AB4F8(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v9 = *(_QWORD *)(v7 + 16);
        v8 = *(_QWORD *)(v7 + 24);
        if (v9 >= v8 >> 1)
          sub_1D48AB4F8(v8 > 1, v9 + 1, 1);
        *(_QWORD *)(v7 + 16) = v9 + 1;
        v10 = v7 + 24 * v9;
        *(_QWORD *)(v10 + 32) = v13;
        *(_QWORD *)(v10 + 40) = v12;
        *(float *)(v10 + 48) = v11;
      }
      v6 += 6;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    v4 = MEMORY[0x1E0DEE9D8];
    v14 = *(_QWORD *)(v7 + 16);
    if (v14)
      goto LABEL_11;
LABEL_17:
    swift_release();
    v15 = MEMORY[0x1E0DEE9D8];
    goto LABEL_18;
  }
  v7 = MEMORY[0x1E0DEE9D8];
  v14 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  if (!v14)
    goto LABEL_17;
LABEL_11:
  v29 = v4;
  sub_1D48AB4A4(0, v14, 0);
  v15 = v29;
  v16 = (_DWORD *)(v7 + 48);
  v17 = MEMORY[0x1E0DEB1E8];
  do
  {
    v19 = *((_QWORD *)v16 - 2);
    v18 = *((_QWORD *)v16 - 1);
    v20 = *v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1D4927B00;
    *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v21 + 64) = sub_1D46FBE30();
    *(_QWORD *)(v21 + 32) = v19;
    *(_QWORD *)(v21 + 40) = v18;
    *(_QWORD *)(v21 + 96) = MEMORY[0x1E0DEB188];
    *(_QWORD *)(v21 + 104) = v17;
    *(_DWORD *)(v21 + 72) = v20;
    swift_bridgeObjectRetain_n();
    v22 = sub_1D4922640();
    v24 = v23;
    swift_bridgeObjectRelease();
    v26 = *(_QWORD *)(v29 + 16);
    v25 = *(_QWORD *)(v29 + 24);
    if (v26 >= v25 >> 1)
      sub_1D48AB4A4(v25 > 1, v26 + 1, 1);
    v16 += 6;
    *(_QWORD *)(v29 + 16) = v26 + 1;
    v27 = v29 + 16 * v26;
    *(_QWORD *)(v27 + 32) = v22;
    *(_QWORD *)(v27 + 40) = v24;
    --v14;
  }
  while (v14);
  swift_release();
LABEL_18:
  sub_1D4922B80();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D492270C();
  swift_bridgeObjectRelease();
  sub_1D492270C();
  MEMORY[0x1D8261B9C](v15, MEMORY[0x1E0DEA968]);
  sub_1D492270C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x4E52556C65646F6DLL;
}

uint64_t sub_1D46FBDC8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1D46D7480(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1D46FBE74(v5);
  *a1 = v2;
  return result;
}

unint64_t sub_1D46FBE30()
{
  unint64_t result;

  result = qword_1ED98D0D0;
  if (!qword_1ED98D0D0)
  {
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED98D0D0);
  }
  return result;
}

uint64_t sub_1D46FBE74(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  float v14;
  float v15;
  float *v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  float *v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  _BYTE v114[28];
  _BYTE v115[28];

  v3 = a1[1];
  result = sub_1D4922E08();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_131;
    if (v3)
      return sub_1D46FC60C(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_139;
  v94 = result;
  v91 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    v96 = (float *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_97:
      v82 = v11;
      v93 = v8;
      if (v12 >= 2)
      {
        v83 = *v91;
        do
        {
          v84 = v12 - 2;
          if (v12 < 2)
            goto LABEL_126;
          if (!v83)
            goto LABEL_138;
          v85 = v82;
          v86 = *(_QWORD *)&v82[16 * v84 + 32];
          v87 = *(_QWORD *)&v82[16 * v12 + 24];
          sub_1D46FC70C((float *)(v83 + 160 * v86), (float *)(v83 + 160 * *(_QWORD *)&v82[16 * v12 + 16]), v83 + 160 * v87, v96);
          if (v1)
            break;
          if (v87 < v86)
            goto LABEL_127;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v85 = sub_1D46D5B88((uint64_t)v85);
          if (v84 >= *((_QWORD *)v85 + 2))
            goto LABEL_128;
          v88 = &v85[16 * v84 + 32];
          *(_QWORD *)v88 = v86;
          *((_QWORD *)v88 + 1) = v87;
          v89 = *((_QWORD *)v85 + 2);
          if (v12 > v89)
            goto LABEL_129;
          memmove(&v85[16 * v12 + 16], &v85[16 * v12 + 32], 16 * (v89 - v12));
          v82 = v85;
          *((_QWORD *)v85 + 2) = v89 - 1;
          v12 = v89 - 1;
        }
        while (v89 > 2);
      }
LABEL_94:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v93 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v93 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1D4922850();
    *(_QWORD *)(v7 + 16) = v6;
    v93 = v7;
    v96 = (float *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v92 = *a1 + 440;
  v90 = *a1 - 160;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v95 = v3;
  v97 = v10;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(float *)(v10 + 160 * v9 + 116) + *(float *)(v10 + 160 * v9 + 120);
      v15 = *(float *)(v10 + 160 * v13 + 116) + *(float *)(v10 + 160 * v13 + 120);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = (float *)(v92 + 160 * v13);
        while (v15 < v14 != (float)(*(v16 - 41) + *(v16 - 40)) >= (float)(*(v16 - 1) + *v16))
        {
          ++v9;
          v16 += 40;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v15 < v14)
      {
        if (v9 < v13)
          goto LABEL_132;
        if (v13 < v9)
        {
          v17 = (_OWORD *)(v90 + 160 * v9);
          v18 = v9;
          v19 = v13;
          v20 = (__int128 *)(v10 + 160 * v13);
          do
          {
            if (v19 != --v18)
            {
              if (!v10)
                goto LABEL_137;
              v110 = v20[6];
              v112 = v20[7];
              *(_OWORD *)v114 = v20[8];
              *(_OWORD *)&v114[12] = *(__int128 *)((char *)v20 + 140);
              v102 = v20[2];
              v104 = v20[3];
              v106 = v20[4];
              v108 = v20[5];
              v98 = *v20;
              v100 = v20[1];
              memmove(v20, v17, 0xA0uLL);
              v17[6] = v110;
              v17[7] = v112;
              v17[8] = *(_OWORD *)v114;
              *(_OWORD *)((char *)v17 + 140) = *(_OWORD *)&v114[12];
              v17[2] = v102;
              v17[3] = v104;
              v17[4] = v106;
              v17[5] = v108;
              *v17 = v98;
              v17[1] = v100;
              v10 = v97;
            }
            ++v19;
            v17 -= 10;
            v20 += 10;
          }
          while (v19 < v18);
          v3 = v95;
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_47;
    if (__OFSUB__(v9, v13))
      goto LABEL_130;
    if (v9 - v13 >= v94)
      goto LABEL_47;
    v21 = v13 + v94;
    if (__OFADD__(v13, v94))
      goto LABEL_133;
    if (v21 >= v3)
      v21 = v3;
    if (v21 < v13)
      break;
    if (v9 != v21)
    {
      v22 = v10 + 160 * v9;
      do
      {
        v23 = v13;
        v24 = v22;
        do
        {
          if ((float)(*(float *)(v24 - 44) + *(float *)(v24 - 40)) >= (float)(*(float *)(v24 + 116)
                                                                             + *(float *)(v24 + 120)))
            break;
          if (!v10)
            goto LABEL_135;
          v25 = (_OWORD *)(v24 - 160);
          v111 = *(_OWORD *)(v24 + 96);
          v113 = *(_OWORD *)(v24 + 112);
          *(_OWORD *)v115 = *(_OWORD *)(v24 + 128);
          *(_OWORD *)&v115[12] = *(_OWORD *)(v24 + 140);
          v103 = *(_OWORD *)(v24 + 32);
          v105 = *(_OWORD *)(v24 + 48);
          v107 = *(_OWORD *)(v24 + 64);
          v109 = *(_OWORD *)(v24 + 80);
          v99 = *(_OWORD *)v24;
          v101 = *(_OWORD *)(v24 + 16);
          v26 = *(_OWORD *)(v24 - 48);
          *(_OWORD *)(v24 + 96) = *(_OWORD *)(v24 - 64);
          *(_OWORD *)(v24 + 112) = v26;
          v27 = *(_OWORD *)(v24 - 16);
          *(_OWORD *)(v24 + 128) = *(_OWORD *)(v24 - 32);
          *(_OWORD *)(v24 + 144) = v27;
          v28 = *(_OWORD *)(v24 - 112);
          *(_OWORD *)(v24 + 32) = *(_OWORD *)(v24 - 128);
          *(_OWORD *)(v24 + 48) = v28;
          v29 = *(_OWORD *)(v24 - 80);
          *(_OWORD *)(v24 + 64) = *(_OWORD *)(v24 - 96);
          *(_OWORD *)(v24 + 80) = v29;
          v30 = *(_OWORD *)(v24 - 144);
          *(_OWORD *)v24 = *(_OWORD *)(v24 - 160);
          *(_OWORD *)(v24 + 16) = v30;
          v25[6] = v111;
          v25[7] = v113;
          v25[8] = *(_OWORD *)v115;
          *(_OWORD *)((char *)v25 + 140) = *(_OWORD *)&v115[12];
          v25[2] = v103;
          v25[3] = v105;
          v25[4] = v107;
          v25[5] = v109;
          ++v23;
          v24 -= 160;
          *v25 = v99;
          v25[1] = v101;
        }
        while (v9 != v23);
        ++v9;
        v22 += 160;
      }
      while (v9 != v21);
      v9 = v21;
    }
LABEL_47:
    if (v9 < v13)
      goto LABEL_125;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1D46D5278(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v32 = *((_QWORD *)v11 + 2);
    v31 = *((_QWORD *)v11 + 3);
    v12 = v32 + 1;
    v10 = v97;
    if (v32 >= v31 >> 1)
    {
      v81 = sub_1D46D5278((char *)(v31 > 1), v32 + 1, 1, v11);
      v10 = v97;
      v11 = v81;
    }
    *((_QWORD *)v11 + 2) = v12;
    v33 = v11 + 32;
    v34 = &v11[16 * v32 + 32];
    *(_QWORD *)v34 = v13;
    *((_QWORD *)v34 + 1) = v9;
    if (v32)
    {
      while (1)
      {
        v35 = v12 - 1;
        if (v12 >= 4)
        {
          v40 = &v33[16 * v12];
          v41 = *((_QWORD *)v40 - 8);
          v42 = *((_QWORD *)v40 - 7);
          v46 = __OFSUB__(v42, v41);
          v43 = v42 - v41;
          if (v46)
            goto LABEL_114;
          v45 = *((_QWORD *)v40 - 6);
          v44 = *((_QWORD *)v40 - 5);
          v46 = __OFSUB__(v44, v45);
          v38 = v44 - v45;
          v39 = v46;
          if (v46)
            goto LABEL_115;
          v47 = v12 - 2;
          v48 = &v33[16 * v12 - 32];
          v50 = *(_QWORD *)v48;
          v49 = *((_QWORD *)v48 + 1);
          v46 = __OFSUB__(v49, v50);
          v51 = v49 - v50;
          if (v46)
            goto LABEL_117;
          v46 = __OFADD__(v38, v51);
          v52 = v38 + v51;
          if (v46)
            goto LABEL_120;
          if (v52 >= v43)
          {
            v70 = &v33[16 * v35];
            v72 = *(_QWORD *)v70;
            v71 = *((_QWORD *)v70 + 1);
            v46 = __OFSUB__(v71, v72);
            v73 = v71 - v72;
            if (v46)
              goto LABEL_124;
            v63 = v38 < v73;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v64 = *((_QWORD *)v11 + 4);
            v65 = *((_QWORD *)v11 + 5);
            v46 = __OFSUB__(v65, v64);
            v57 = v65 - v64;
            v58 = v46;
            goto LABEL_78;
          }
          v37 = *((_QWORD *)v11 + 4);
          v36 = *((_QWORD *)v11 + 5);
          v46 = __OFSUB__(v36, v37);
          v38 = v36 - v37;
          v39 = v46;
        }
        if ((v39 & 1) != 0)
          goto LABEL_116;
        v47 = v12 - 2;
        v53 = &v33[16 * v12 - 32];
        v55 = *(_QWORD *)v53;
        v54 = *((_QWORD *)v53 + 1);
        v56 = __OFSUB__(v54, v55);
        v57 = v54 - v55;
        v58 = v56;
        if (v56)
          goto LABEL_119;
        v59 = &v33[16 * v35];
        v61 = *(_QWORD *)v59;
        v60 = *((_QWORD *)v59 + 1);
        v46 = __OFSUB__(v60, v61);
        v62 = v60 - v61;
        if (v46)
          goto LABEL_122;
        if (__OFADD__(v57, v62))
          goto LABEL_123;
        if (v57 + v62 >= v38)
        {
          v63 = v38 < v62;
LABEL_84:
          if (v63)
            v35 = v47;
          goto LABEL_86;
        }
LABEL_78:
        if ((v58 & 1) != 0)
          goto LABEL_118;
        v66 = &v33[16 * v35];
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        v46 = __OFSUB__(v67, v68);
        v69 = v67 - v68;
        if (v46)
          goto LABEL_121;
        if (v69 < v57)
          goto LABEL_15;
LABEL_86:
        v74 = v35 - 1;
        if (v35 - 1 >= v12)
        {
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
          goto LABEL_134;
        }
        if (!v10)
          goto LABEL_136;
        v75 = v11;
        v76 = &v33[16 * v74];
        v77 = *(_QWORD *)v76;
        v78 = &v33[16 * v35];
        v79 = *((_QWORD *)v78 + 1);
        sub_1D46FC70C((float *)(v10 + 160 * *(_QWORD *)v76), (float *)(v10 + 160 * *(_QWORD *)v78), v10 + 160 * v79, v96);
        if (v1)
          goto LABEL_94;
        if (v79 < v77)
          goto LABEL_111;
        if (v35 > *((_QWORD *)v75 + 2))
          goto LABEL_112;
        *(_QWORD *)v76 = v77;
        *(_QWORD *)&v33[16 * v74 + 8] = v79;
        v80 = *((_QWORD *)v75 + 2);
        if (v35 >= v80)
          goto LABEL_113;
        v11 = v75;
        v12 = v80 - 1;
        memmove(&v33[16 * v35], v78 + 16, 16 * (v80 - 1 - v35));
        *((_QWORD *)v75 + 2) = v80 - 1;
        v10 = v97;
        if (v80 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v95;
    if (v9 >= v95)
    {
      v8 = v93;
      goto LABEL_97;
    }
  }
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  result = sub_1D4922C28();
  __break(1u);
  return result;
}

uint64_t sub_1D46FC60C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[28];

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 160 * a3;
LABEL_5:
    v6 = result;
    v7 = v5;
    while (1)
    {
      if ((float)(*(float *)(v7 - 44) + *(float *)(v7 - 40)) >= (float)(*(float *)(v7 + 116) + *(float *)(v7 + 120)))
      {
LABEL_4:
        ++a3;
        v5 += 160;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v4)
        break;
      v8 = (_OWORD *)(v7 - 160);
      v20 = *(_OWORD *)(v7 + 96);
      v21 = *(_OWORD *)(v7 + 112);
      *(_OWORD *)v22 = *(_OWORD *)(v7 + 128);
      *(_OWORD *)&v22[12] = *(_OWORD *)(v7 + 140);
      v16 = *(_OWORD *)(v7 + 32);
      v17 = *(_OWORD *)(v7 + 48);
      v18 = *(_OWORD *)(v7 + 64);
      v19 = *(_OWORD *)(v7 + 80);
      v14 = *(_OWORD *)v7;
      v15 = *(_OWORD *)(v7 + 16);
      v9 = *(_OWORD *)(v7 - 48);
      *(_OWORD *)(v7 + 96) = *(_OWORD *)(v7 - 64);
      *(_OWORD *)(v7 + 112) = v9;
      v10 = *(_OWORD *)(v7 - 16);
      *(_OWORD *)(v7 + 128) = *(_OWORD *)(v7 - 32);
      *(_OWORD *)(v7 + 144) = v10;
      v11 = *(_OWORD *)(v7 - 112);
      *(_OWORD *)(v7 + 32) = *(_OWORD *)(v7 - 128);
      *(_OWORD *)(v7 + 48) = v11;
      v12 = *(_OWORD *)(v7 - 80);
      *(_OWORD *)(v7 + 64) = *(_OWORD *)(v7 - 96);
      *(_OWORD *)(v7 + 80) = v12;
      v13 = *(_OWORD *)(v7 - 144);
      *(_OWORD *)v7 = *(_OWORD *)(v7 - 160);
      *(_OWORD *)(v7 + 16) = v13;
      v8[6] = v20;
      v8[7] = v21;
      v8[8] = *(_OWORD *)v22;
      *(_OWORD *)((char *)v8 + 140) = *(_OWORD *)&v22[12];
      v8[2] = v16;
      v8[3] = v17;
      v8[4] = v18;
      v8[5] = v19;
      ++v6;
      v7 -= 160;
      *v8 = v14;
      v8[1] = v15;
      if (a3 == v6)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1D46FC70C(float *__dst, float *__src, unint64_t a3, float *a4)
{
  float *v4;
  float *v6;
  float *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  float *v13;
  float *v14;
  float *v15;
  float *v16;
  uint64_t v17;
  float *v18;
  float *v19;
  float *v20;
  float *v21;
  uint64_t result;
  char *v23;
  float *v24;
  float *v25;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = (char *)__src - (char *)__dst;
  v9 = ((char *)__src - (char *)__dst) / 160;
  v10 = a3 - (_QWORD)__src;
  v11 = (uint64_t)(a3 - (_QWORD)__src) / 160;
  v25 = __dst;
  v24 = a4;
  if (v9 >= v11)
  {
    if (v10 >= -159)
    {
      v17 = 40 * v11;
      if (a4 != __src || &__src[v17] <= a4)
        memmove(a4, __src, 160 * v11);
      v18 = &v4[v17];
      v23 = (char *)&v4[v17];
      v25 = v6;
      if (v7 < v6 && v10 >= 160)
      {
        v19 = (float *)(a3 - 160);
        do
        {
          v20 = v19 + 40;
          if ((float)(*(v6 - 11) + *(v6 - 10)) >= (float)(*(v18 - 11) + *(v18 - 10)))
          {
            v23 = (char *)(v18 - 40);
            if (v20 < v18 || v19 >= v18 || v20 != v18)
              memmove(v19, v18 - 40, 0xA0uLL);
            v21 = v6;
            v18 -= 40;
            if (v6 <= v7)
              break;
          }
          else
          {
            v21 = v6 - 40;
            if (v20 != v6 || v19 >= v6)
              memmove(v19, v6 - 40, 0xA0uLL);
            v25 = v6 - 40;
            if (v21 <= v7)
              break;
          }
          v19 -= 40;
          v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_40:
      sub_1D46D5534((void **)&v25, (const void **)&v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -159)
  {
    v12 = 40 * v9;
    if (a4 != __dst || &__dst[v12] <= a4)
      memmove(a4, __dst, v12 * 4);
    v13 = &v4[v12];
    v23 = (char *)v13;
    if ((unint64_t)v6 < a3 && v8 >= 160)
    {
      v14 = v4;
      while (1)
      {
        if ((float)(v14[29] + v14[30]) >= (float)(v6[29] + v6[30]))
        {
          v4 = v14 + 40;
          v16 = v14;
          v15 = v6;
          if (v7 == v14)
          {
            v14 += 40;
            if (v7 < v4)
              goto LABEL_18;
          }
          else
          {
            v14 += 40;
          }
        }
        else
        {
          v15 = v6 + 40;
          v16 = v6;
          if (v7 == v6 && v7 < v15)
            goto LABEL_18;
        }
        memmove(v7, v16, 0xA0uLL);
LABEL_18:
        v7 += 40;
        if (v14 < v13)
        {
          v6 = v15;
          if ((unint64_t)v15 < a3)
            continue;
        }
        v24 = v4;
        v25 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  result = sub_1D4922C88();
  __break(1u);
  return result;
}

uint64_t sub_1D46FC9C8@<X0>(unsigned __int8 a1@<W0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v7 = *v3;
  sub_1D4922EF8();
  sub_1D46F8BC8(a1);
  sub_1D49226D0();
  swift_bridgeObjectRelease();
  v8 = sub_1D4922F34() & ~(-1 << *(_BYTE *)(v7 + 32));
  if (((*(_QWORD *)(v7 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    __asm { BR              X9 }
  v9 = *(_QWORD *)(v7 + 16);
  result = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_17;
  }
  v11 = *(_QWORD *)(v7 + 24);
  if (v11 >= result && (a2 & 1) != 0)
    goto LABEL_6;
  if ((a2 & 1) != 0)
  {
    sub_1D47CDA04();
  }
  else
  {
    if (v11 >= result)
    {
      result = (uint64_t)sub_1D47CF65C();
LABEL_6:
      v12 = v8 >> 6;
      v13 = 1 << v8;
      goto LABEL_14;
    }
    sub_1D47D01D8();
  }
  v14 = *v3;
  sub_1D4922EF8();
  sub_1D46F8BC8(a1);
  sub_1D49226D0();
  swift_bridgeObjectRelease();
  result = sub_1D4922F34();
  v8 = result & ~(-1 << *(_BYTE *)(v14 + 32));
  v12 = v8 >> 6;
  v13 = 1 << v8;
  if (((1 << v8) & *(_QWORD *)(v14 + 56 + 8 * (v8 >> 6))) != 0)
    __asm { BR              X9 }
LABEL_14:
  v15 = *v3;
  *(_QWORD *)(*v3 + 8 * v12 + 56) |= v13;
  *(_BYTE *)(*(_QWORD *)(v15 + 48) + v8) = a1;
  v16 = *(_QWORD *)(v15 + 16);
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
  {
LABEL_17:
    __break(1u);
    sub_1D4922E80();
    __break(1u);
    JUMPOUT(0x1D46FD7B0);
  }
  *(_QWORD *)(v15 + 16) = v18;
  *a3 = 26;
  return result;
}

uint64_t sub_1D46FD950@<X0>(unsigned __int8 a1@<W0>, char a2@<W1>, _QWORD *a3@<X8>, float a4@<S0>)
{
  uint64_t *v4;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t *v22;

  v9 = *v4;
  sub_1D4922EF8();
  sub_1D46F8BC8(a1);
  sub_1D49226D0();
  swift_bridgeObjectRelease();
  sub_1D4922F1C();
  v10 = sub_1D4922F34() & ~(-1 << *(_BYTE *)(v9 + 32));
  if (((*(_QWORD *)(v9 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
    __asm { BR              X9 }
  v11 = *(_QWORD *)(v9 + 16);
  result = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_17;
  }
  v13 = *(_QWORD *)(v9 + 24);
  if (v13 >= result && (a2 & 1) != 0)
    goto LABEL_6;
  if ((a2 & 1) != 0)
  {
    sub_1D47CE290();
  }
  else
  {
    if (v13 >= result)
    {
      result = (uint64_t)sub_1D47CFB28();
LABEL_6:
      v14 = v10 >> 6;
      v15 = 1 << v10;
      goto LABEL_14;
    }
    sub_1D47D09CC();
  }
  v16 = *v22;
  sub_1D4922EF8();
  sub_1D46F8BC8(a1);
  sub_1D49226D0();
  swift_bridgeObjectRelease();
  sub_1D4922F1C();
  result = sub_1D4922F34();
  v10 = result & ~(-1 << *(_BYTE *)(v16 + 32));
  v14 = v10 >> 6;
  v15 = 1 << v10;
  if (((1 << v10) & *(_QWORD *)(v16 + 56 + 8 * (v10 >> 6))) != 0)
    __asm { BR              X9 }
LABEL_14:
  v17 = *v22;
  *(_QWORD *)(*v22 + 8 * v14 + 56) |= v15;
  v18 = *(_QWORD *)(v17 + 48) + 8 * v10;
  *(_BYTE *)v18 = a1;
  *(float *)(v18 + 4) = a4;
  v19 = *(_QWORD *)(v17 + 16);
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (v20)
  {
LABEL_17:
    __break(1u);
    sub_1D4922E80();
    __break(1u);
    JUMPOUT(0x1D46FE7B0);
  }
  *(_QWORD *)(v17 + 16) = v21;
  *a3 = 26;
  return result;
}

BOOL sub_1D46FE950(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  if (!a1 || (v1 = objc_msgSend(a1, sel_featureIdentifier)) == 0)
  {
    sub_1D492261C();
    goto LABEL_11;
  }
  v2 = v1;
  v3 = sub_1D492261C();
  v5 = v4;

  v6 = sub_1D492261C();
  if (!v5)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v3 != v6 || v5 != v7)
  {
    v9 = sub_1D4922E38();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (v9 & 1) != 0;
  }
  swift_bridgeObjectRelease_n();
  return 1;
}

unint64_t sub_1D46FEA2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;

  v2 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v32 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v29 - v7;
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v29 - v10;
  v12 = *(_BYTE *)(a1 + *(int *)(v9 + 60));
  v33 = a1;
  sub_1D46A8550(a1, (uint64_t)&v29 - v10);
  if ((v12 & 1) == 0)
  {
    sub_1D46F3760((uint64_t)v11);
    goto LABEL_12;
  }
  v13 = *(_QWORD *)(*((_QWORD *)v11 + 13) + 16);
  sub_1D46F3760((uint64_t)v11);
  if (!v13)
  {
LABEL_12:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D370);
    v27 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1D49273C0;
    sub_1D46A8550(v33, v15 + v27);
    return v15;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v33 + 104) + 16);
  v15 = MEMORY[0x1E0DEE9D8];
  if (v14)
  {
    v30 = swift_bridgeObjectRetain();
    v16 = (uint64_t *)(v30 + 72);
    v31 = xmmword_1D49273C0;
    do
    {
      v17 = *(v16 - 5);
      v18 = *(v16 - 4);
      v19 = *(v16 - 3);
      v20 = *(v16 - 2);
      v21 = *(v16 - 1);
      v22 = *v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D4920FCC();
      *(_QWORD *)v8 = v17;
      *((_QWORD *)v8 + 1) = v18;
      *((_QWORD *)v8 + 2) = v19;
      *((_QWORD *)v8 + 3) = v20;
      v23 = MEMORY[0x1E0DEE9D8];
      *((_QWORD *)v8 + 4) = MEMORY[0x1E0DEE9D8];
      *((_QWORD *)v8 + 6) = v23;
      *((_QWORD *)v8 + 7) = v23;
      *((_OWORD *)v8 + 4) = 0u;
      *((_OWORD *)v8 + 5) = 0u;
      v8[96] = 0;
      v8[*(int *)(v2 + 60)] = 0;
      *((_QWORD *)v8 + 5) = *(_QWORD *)(v33 + 40);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EC18);
      v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = v31;
      *(_QWORD *)(v24 + 32) = v17;
      *(_QWORD *)(v24 + 40) = v18;
      *(_QWORD *)(v24 + 48) = v19;
      *(_QWORD *)(v24 + 56) = v20;
      *(_QWORD *)(v24 + 64) = v21;
      *(_QWORD *)(v24 + 72) = v22;
      *((_QWORD *)v8 + 13) = v24;
      sub_1D46A8550((uint64_t)v8, (uint64_t)v5);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v15 = sub_1D48A8614(0, *(_QWORD *)(v15 + 16) + 1, 1, v15);
      v26 = *(_QWORD *)(v15 + 16);
      v25 = *(_QWORD *)(v15 + 24);
      if (v26 >= v25 >> 1)
        v15 = sub_1D48A8614(v25 > 1, v26 + 1, 1, v15);
      *(_QWORD *)(v15 + 16) = v26 + 1;
      sub_1D46A8594((uint64_t)v5, v15+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v32 + 72) * v26);
      sub_1D46F3760((uint64_t)v8);
      v16 += 6;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  return v15;
}

uint64_t *sub_1D46FECFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = *(int *)(a3 + 28);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1D492201C();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = *(int *)(a3 + 32);
    v15 = (uint64_t *)((char *)v7 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED98E3F8);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      *v15 = *v16;
      v20 = *(int *)(v17 + 20);
      v21 = (char *)v15 + v20;
      v22 = (char *)v16 + v20;
      swift_bridgeObjectRetain();
      v13(v21, v22, v12);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  return v7;
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98F2D0);
}

uint64_t sub_1D46FEE70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_1D492201C();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v9(v4, v5);
  v6 = a1 + *(int *)(a2 + 32);
  v7 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v6 + *(int *)(v7 + 20), v5);
  }
  return result;
}

_QWORD *sub_1D46FEF40(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D492201C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 32);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED98E3F8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v18 = *(int *)(v15 + 20);
    v19 = (char *)v13 + v18;
    v20 = (char *)v14 + v18;
    swift_bridgeObjectRetain();
    v11(v19, v20, v10);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

_QWORD *sub_1D46FF078(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D492201C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 32);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v11(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v9);
      return a1;
    }
    sub_1D4697DE0((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v23 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED98E3F8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v19 = *(int *)(v15 + 20);
  v20 = &v13[v19];
  v21 = &v14[v19];
  v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  swift_bridgeObjectRetain();
  v22(v20, v21, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_1D46FF230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 28);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_1D492201C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 32);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED98E3F8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_QWORD *sub_1D46FF33C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D492201C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 32);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      swift_bridgeObjectRelease();
      v11(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v9);
      return a1;
    }
    sub_1D4697DE0((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED98E3F8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v13 = *(_QWORD *)v14;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_1D46FF4C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D46FF4D4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D492201C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED98E3F8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1D46FF578()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D46FF584(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_1D492201C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED98E3F8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98F218);
}

void sub_1D46FF638()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D492201C();
  if (v0 <= 0x3F)
  {
    sub_1D46EA3B0(319, (unint64_t *)&unk_1ED98F2E0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1D46FF6F8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D46FF708()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D46FF724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_1D4922328();
  __swift_allocate_value_buffer(v0, qword_1ED9A4C18);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED9A4C18);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D4927560;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "object_detector_thresholds";
  *(_QWORD *)(v7 + 8) = 26;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF20];
  v9 = sub_1D4922304();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "coarse_classifier_thresholds";
  *(_QWORD *)(v11 + 8) = 28;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "domain_prediction_net_thresholds";
  *((_QWORD *)v13 + 1) = 32;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "domain_signals_caching_config";
  *((_QWORD *)v15 + 1) = 29;
  v15[16] = 2;
  v10();
  return sub_1D4922310();
}

uint64_t sub_1D46FF8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t (*v11)(void);

  v5 = v3;
  result = sub_1D49220AC();
  if (!v4)
  {
    v11 = MEMORY[0x1E0D3E900];
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_1D47020E4(a1, v5, a2, a3, (void (*)(_QWORD))v11);
          break;
        case 2:
          sub_1D46FF9F4();
          break;
        case 3:
          sub_1D46FFA70();
          break;
        case 4:
          sub_1D46FFAEC();
          break;
        default:
          break;
      }
      result = sub_1D49220AC();
    }
  }
  return result;
}

uint64_t sub_1D46FF9F4()
{
  sub_1D4921FF8();
  sub_1D4921FE0();
  return sub_1D49220A0();
}

uint64_t sub_1D46FFA70()
{
  sub_1D4921FF8();
  sub_1D4921FE0();
  return sub_1D49220A0();
}

uint64_t sub_1D46FFAEC()
{
  type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig(0);
  type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
  sub_1D4696EA4(&qword_1ED98E3E8, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig, (uint64_t)&unk_1D492A4C4);
  return sub_1D492219C();
}

uint64_t sub_1D46FFB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;

  v5 = v3;
  if (!*(_QWORD *)(*v5 + 16) || (sub_1D4921FF8(), sub_1D4921FE0(), result = sub_1D4922220(), !v4))
  {
    if (!*(_QWORD *)(v5[1] + 16) || (sub_1D4921FF8(), sub_1D4921FE0(), result = sub_1D4922220(), !v4))
    {
      if (!*(_QWORD *)(v5[2] + 16) || (sub_1D4921FF8(), sub_1D4921FE0(), result = sub_1D4922220(), !v4))
      {
        result = sub_1D46FFD1C((uint64_t)v5, a1, a2, a3);
        if (!v4)
        {
          type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig(0);
          return sub_1D4922004();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1D46FFD1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED98E3F8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig(0);
  sub_1D469C5EC(a1 + *(int *)(v12 + 32), (uint64_t)v7, qword_1ED98E3F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_1D46992EC((uint64_t)v7, qword_1ED98E3F8);
  sub_1D469C630((uint64_t)v7, (uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig);
  sub_1D4696EA4(&qword_1ED98E3E8, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig, (uint64_t)&unk_1D492A4C4);
  sub_1D49222F8();
  return sub_1D4697DE0((uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig);
}

uint64_t sub_1D46FFE90@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v4 = MEMORY[0x1E0DEE9D8];
  *a2 = sub_1D47C3B60(MEMORY[0x1E0DEE9D8]);
  a2[1] = sub_1D47C3B60(v4);
  a2[2] = sub_1D47C3B60(v4);
  sub_1D4922010();
  v5 = (char *)a2 + *(int *)(a1 + 32);
  v6 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
}

unint64_t sub_1D46FFF18()
{
  return 0xD000000000000029;
}

uint64_t sub_1D46FFF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D46FF8E4(a1, a2, a3);
}

uint64_t sub_1D46FFF48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D46FFB80(a1, a2, a3);
}

uint64_t sub_1D46FFF5C()
{
  sub_1D4696EA4(&qword_1EFEAA980, type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig, (uint64_t)&unk_1D492A5F4);
  return sub_1D4922070();
}

uint64_t sub_1D46FFFAC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1ED98E0F8, (uint64_t)qword_1ED9A4C18, a1);
}

uint64_t sub_1D46FFFC8()
{
  sub_1D4696EA4(&qword_1ED98E100, type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig, (uint64_t)&unk_1D492A62C);
  return sub_1D49221D8();
}

uint64_t sub_1D4700008()
{
  sub_1D4696EA4(&qword_1ED98E100, type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig, (uint64_t)&unk_1D492A62C);
  return sub_1D49221F0();
}

uint64_t sub_1D470005C(uint64_t a1)
{
  return sub_1D4701F44(a1, qword_1ED9A4D98, (uint64_t)"model_configs", 13);
}

uint64_t sub_1D4700074()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1D49220AC();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 1)
      {
        type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig(0);
        sub_1D4696EA4(&qword_1ED98E3B8, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig, (uint64_t)&unk_1D492A35C);
        sub_1D4922190();
      }
      result = sub_1D49220AC();
    }
  }
  return result;
}

uint64_t sub_1D4700158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16)
    || (type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig(0),
        sub_1D4696EA4(&qword_1ED98E3B8, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig, (uint64_t)&unk_1D492A35C), result = sub_1D49222EC(), !v1))
  {
    type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
    return sub_1D4922004();
  }
  return result;
}

uint64_t sub_1D4700228@<X0>(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x1E0DEE9D8];
  return sub_1D4922010();
}

unint64_t sub_1D4700250()
{
  return 0xD000000000000031;
}

uint64_t sub_1D4700274()
{
  return sub_1D4700074();
}

uint64_t sub_1D4700288()
{
  return sub_1D4700158();
}

uint64_t sub_1D470029C()
{
  sub_1D4696EA4(&qword_1EFEAA9A0, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig, (uint64_t)&unk_1D492A48C);
  return sub_1D4922070();
}

uint64_t sub_1D47002EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1ED98E3E0, (uint64_t)qword_1ED9A4D98, a1);
}

uint64_t sub_1D4700308()
{
  sub_1D4696EA4(&qword_1ED98E3E8, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig, (uint64_t)&unk_1D492A4C4);
  return sub_1D49221D8();
}

uint64_t sub_1D4700348()
{
  sub_1D4696EA4(&qword_1ED98E3E8, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig, (uint64_t)&unk_1D492A4C4);
  return sub_1D49221F0();
}

uint64_t sub_1D4700398(_QWORD *a1, char *a2)
{
  return sub_1D4702860(a1, a2, sub_1D48A1900, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig) & 1;
}

uint64_t sub_1D47003C0()
{
  uint64_t result;

  result = sub_1D492270C();
  qword_1EFEC2D08 = 0xD000000000000031;
  unk_1EFEC2D10 = 0x80000001D4941050;
  return result;
}

uint64_t sub_1D4700430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1D4922328();
  __swift_allocate_value_buffer(v0, qword_1ED9A4D80);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED9A4D80);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D4927B00;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "model_urn";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF20];
  v9 = sub_1D4922304();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 3;
  *(_QWORD *)v11 = "label_converter_config";
  *((_QWORD *)v11 + 1) = 22;
  v11[16] = 2;
  v10();
  return sub_1D4922310();
}

uint64_t sub_1D4700584()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_1D49220AC();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 3)
    {
      sub_1D4700610();
    }
    else if (result == 1)
    {
      sub_1D492216C();
    }
  }
  return result;
}

uint64_t sub_1D4700610()
{
  type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig(0);
  type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig(0);
  sub_1D4696EA4(&qword_1ED98E580, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig, (uint64_t)&unk_1D492A1F4);
  return sub_1D492219C();
}

uint64_t sub_1D47006A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = v3[1];
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = *v3 & 0xFFFFFFFFFFFFLL;
  if (!v9 || (result = sub_1D49222C8(), !v4))
  {
    result = sub_1D4700764((uint64_t)v3, a1, a2, a3);
    if (!v4)
    {
      type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig(0);
      return sub_1D4922004();
    }
  }
  return result;
}

uint64_t sub_1D4700764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D520);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig(0);
  sub_1D469C5EC(a1 + *(int *)(v12 + 24), (uint64_t)v7, (uint64_t *)&unk_1ED98D520);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_1D46992EC((uint64_t)v7, (uint64_t *)&unk_1ED98D520);
  sub_1D469C630((uint64_t)v7, (uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig);
  sub_1D4696EA4(&qword_1ED98E580, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig, (uint64_t)&unk_1D492A1F4);
  sub_1D49222F8();
  return sub_1D4697DE0((uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig);
}

uint64_t sub_1D47008D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;

  *a2 = 0;
  a2[1] = 0xE000000000000000;
  sub_1D4922010();
  v4 = (char *)a2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
}

uint64_t sub_1D4700934(uint64_t a1, uint64_t a2)
{
  return sub_1D4701D64(a1, a2, &qword_1EFEA9C28, &qword_1EFEC2D08);
}

uint64_t sub_1D4700954()
{
  return sub_1D4700584();
}

uint64_t sub_1D4700968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D47006A4(a1, a2, a3);
}

uint64_t sub_1D470097C()
{
  sub_1D4696EA4(&qword_1EFEAA9A8, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig, (uint64_t)&unk_1D492A324);
  return sub_1D4922070();
}

uint64_t sub_1D47009CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1ED98E3B0, (uint64_t)qword_1ED9A4D80, a1);
}

uint64_t sub_1D47009E8()
{
  sub_1D4696EA4(&qword_1ED98E3B8, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig, (uint64_t)&unk_1D492A35C);
  return sub_1D49221D8();
}

uint64_t sub_1D4700A28()
{
  sub_1D4696EA4(&qword_1ED98E3B8, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig, (uint64_t)&unk_1D492A35C);
  return sub_1D49221F0();
}

uint64_t sub_1D4700A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1D4922328();
  __swift_allocate_value_buffer(v0, qword_1ED9A4DE0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED9A4DE0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D4927B00;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "qid_converter_config";
  *(_QWORD *)(v7 + 8) = 20;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF20];
  v9 = sub_1D4922304();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "sign_symbol_converter_config";
  *((_QWORD *)v11 + 1) = 28;
  v11[16] = 2;
  v10();
  return sub_1D4922310();
}

uint64_t sub_1D4700BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  while (1)
  {
    result = sub_1D49220AC();
    if (v4 || (v10 & 1) != 0)
      break;
    if (result == 2)
    {
      sub_1D47010A0(v5, a1, a2, a3);
    }
    else if (result == 1)
    {
      sub_1D4700C5C(v5, a1, a2, a3);
    }
  }
  return result;
}

uint64_t sub_1D4700C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E568);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E550);
  v21 = MEMORY[0x1E0C80A78](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_1D469C5EC(a1, (uint64_t)v12, &qword_1ED98E568);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_1D46992EC((uint64_t)v12, &qword_1ED98E568);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_1D469C630((uint64_t)v12, (uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
    sub_1D469C630((uint64_t)v19, (uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1D4697DE0((uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_1D46992EC((uint64_t)v24, &qword_1ED98E550);
      sub_1D469C630((uint64_t)v17, v31, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig);
      sub_1D469C630(v31, (uint64_t)v24, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_1D4696EA4(&qword_1ED98E530, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig, (uint64_t)&unk_1D492A08C);
  sub_1D492219C();
  if (v29)
    return sub_1D46992EC((uint64_t)v24, &qword_1ED98E550);
  v33 = v41;
  sub_1D469C5EC((uint64_t)v24, (uint64_t)v41, &qword_1ED98E550);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_1D46992EC((uint64_t)v24, &qword_1ED98E550);
    return sub_1D46992EC((uint64_t)v33, &qword_1ED98E550);
  }
  else
  {
    v34 = v40;
    sub_1D469C630((uint64_t)v33, (uint64_t)v40, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig);
    if (v27 != 1)
      sub_1D49220B8();
    sub_1D46992EC((uint64_t)v24, &qword_1ED98E550);
    v35 = v39;
    sub_1D46992EC(v39, &qword_1ED98E568);
    sub_1D469C630((uint64_t)v34, v35, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_1D47010A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E568);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E520);
  v21 = MEMORY[0x1E0C80A78](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_1D469C5EC(a1, (uint64_t)v12, &qword_1ED98E568);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_1D46992EC((uint64_t)v12, &qword_1ED98E568);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_1D469C630((uint64_t)v12, (uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
    sub_1D469C630((uint64_t)v19, (uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1D46992EC((uint64_t)v24, &qword_1ED98E520);
      sub_1D469C630((uint64_t)v17, v31, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig);
      sub_1D469C630(v31, (uint64_t)v24, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_1D4697DE0((uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_1D4696EA4(&qword_1ED98E500, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig, (uint64_t)&unk_1D4929F24);
  sub_1D492219C();
  if (v29)
    return sub_1D46992EC((uint64_t)v24, &qword_1ED98E520);
  v33 = v41;
  sub_1D469C5EC((uint64_t)v24, (uint64_t)v41, &qword_1ED98E520);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_1D46992EC((uint64_t)v24, &qword_1ED98E520);
    return sub_1D46992EC((uint64_t)v33, &qword_1ED98E520);
  }
  else
  {
    v34 = v40;
    sub_1D469C630((uint64_t)v33, (uint64_t)v40, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig);
    if (v27 != 1)
      sub_1D49220B8();
    sub_1D46992EC((uint64_t)v24, &qword_1ED98E520);
    v35 = v39;
    sub_1D46992EC(v39, &qword_1ED98E568);
    sub_1D469C630((uint64_t)v34, v35, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_1D47014E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E568);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D469C5EC(v0, (uint64_t)v4, &qword_1ED98E568);
  v5 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
    goto LABEL_6;
  if (swift_getEnumCaseMultiPayload() == 1)
    sub_1D47017D0(v0);
  else
    sub_1D4701630(v0);
  result = sub_1D4697DE0((uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
  if (!v1)
  {
LABEL_6:
    type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig(0);
    return sub_1D4922004();
  }
  return result;
}

uint64_t sub_1D4701630(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E568);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D469C5EC(a1, (uint64_t)v4, &qword_1ED98E568);
  v8 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_1D46992EC((uint64_t)v4, &qword_1ED98E568);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1D469C630((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig);
    sub_1D4696EA4(&qword_1ED98E530, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig, (uint64_t)&unk_1D492A08C);
    sub_1D49222F8();
    return sub_1D4697DE0((uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig);
  }
  result = sub_1D4697DE0((uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
  __break(1u);
  return result;
}

uint64_t sub_1D47017D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E568);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D469C5EC(a1, (uint64_t)v4, &qword_1ED98E568);
  v8 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_1D46992EC((uint64_t)v4, &qword_1ED98E568);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1D469C630((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig);
    sub_1D4696EA4(&qword_1ED98E500, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig, (uint64_t)&unk_1D4929F24);
    sub_1D49222F8();
    return sub_1D4697DE0((uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig);
  }
  result = sub_1D4697DE0((uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
  __break(1u);
  return result;
}

uint64_t sub_1D4701974@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  return sub_1D4922010();
}

unint64_t sub_1D47019C4()
{
  return 0xD000000000000032;
}

uint64_t sub_1D47019E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D4700BCC(a1, a2, a3);
}

uint64_t sub_1D47019F4()
{
  return sub_1D47014E4();
}

uint64_t sub_1D4701A08()
{
  sub_1D4696EA4(&qword_1EFEAA9B8, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig, (uint64_t)&unk_1D492A1BC);
  return sub_1D4922070();
}

uint64_t sub_1D4701A58@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1ED98E578, (uint64_t)qword_1ED9A4DE0, a1);
}

uint64_t sub_1D4701A74()
{
  sub_1D4696EA4(&qword_1ED98E580, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig, (uint64_t)&unk_1D492A1F4);
  return sub_1D49221D8();
}

uint64_t sub_1D4701AB4()
{
  sub_1D4696EA4(&qword_1ED98E580, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig, (uint64_t)&unk_1D492A1F4);
  return sub_1D49221F0();
}

uint64_t sub_1D4701B08(uint64_t a1)
{
  return sub_1D4701B30(a1, 0xD000000000000013, 0x80000001D4941140, qword_1EFEC2D18, &qword_1EFEC2D18[1]);
}

uint64_t sub_1D4701B30(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _QWORD *a5)
{
  uint64_t result;

  result = sub_1D492270C();
  *a4 = 0xD000000000000032;
  *a5 = 0x80000001D49410C0;
  return result;
}

uint64_t sub_1D4701B98(uint64_t a1)
{
  return sub_1D4701F44(a1, qword_1ED9A4DC8, (uint64_t)"label_mapping", 13);
}

uint64_t sub_1D4701BB0()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1D49220AC();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 1)
      {
        sub_1D4921FF8();
        sub_1D49220A0();
      }
      result = sub_1D49220AC();
    }
  }
  return result;
}

uint64_t sub_1D4701C78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16) || (sub_1D4921FF8(), result = sub_1D4922220(), !v1))
  {
    type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0);
    return sub_1D4922004();
  }
  return result;
}

uint64_t sub_1D4701D38@<X0>(_QWORD *a1@<X8>)
{
  return sub_1D4702248((uint64_t (*)(_QWORD))sub_1D47C3734, a1);
}

uint64_t sub_1D4701D44(uint64_t a1, uint64_t a2)
{
  return sub_1D4701D64(a1, a2, qword_1EFEA9C30, qword_1EFEC2D18);
}

uint64_t sub_1D4701D64(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v5;

  if (*a3 != -1)
    swift_once();
  v5 = *a4;
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_1D4701DB8()
{
  return sub_1D4701BB0();
}

uint64_t sub_1D4701DCC()
{
  return sub_1D4701C78();
}

uint64_t sub_1D4701DE0()
{
  sub_1D4696EA4(&qword_1EFEAA9C0, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig, (uint64_t)&unk_1D492A054);
  return sub_1D4922070();
}

uint64_t sub_1D4701E30@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1ED98E528, (uint64_t)qword_1ED9A4DC8, a1);
}

uint64_t sub_1D4701E4C()
{
  sub_1D4696EA4(&qword_1ED98E530, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig, (uint64_t)&unk_1D492A08C);
  return sub_1D49221D8();
}

uint64_t sub_1D4701E8C()
{
  sub_1D4696EA4(&qword_1ED98E530, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig, (uint64_t)&unk_1D492A08C);
  return sub_1D49221F0();
}

uint64_t sub_1D4701EDC(_QWORD *a1, char *a2)
{
  return sub_1D4702860(a1, a2, sub_1D46EDFA0, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig) & 1;
}

uint64_t sub_1D4701F04(uint64_t a1)
{
  return sub_1D4701B30(a1, 0xD00000000000001ALL, 0x80000001D4941170, qword_1EFEC2D28, &qword_1EFEC2D28[1]);
}

uint64_t sub_1D4701F2C(uint64_t a1)
{
  return sub_1D4701F44(a1, qword_1ED9A4DB0, (uint64_t)"prefix_mapping", 14);
}

uint64_t sub_1D4701F44(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = sub_1D4922328();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1D49273C0;
  v12 = v11 + v10 + *(int *)(v8 + 48);
  *(_QWORD *)(v11 + v10) = 1;
  *(_QWORD *)v12 = a3;
  *(_QWORD *)(v12 + 8) = a4;
  *(_BYTE *)(v12 + 16) = 2;
  v13 = *MEMORY[0x1E0D3EF20];
  v14 = sub_1D4922304();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  return sub_1D4922310();
}

uint64_t sub_1D4702048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t (*v11)(void);

  v5 = v3;
  result = sub_1D49220AC();
  if (!v4)
  {
    v11 = MEMORY[0x1E0D3E918];
    while ((v10 & 1) == 0)
    {
      if (result == 1)
        sub_1D47020E4(a1, v5, a2, a3, (void (*)(_QWORD))v11);
      result = sub_1D49220AC();
    }
  }
  return result;
}

uint64_t sub_1D47020E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  sub_1D4921FF8();
  a5(0);
  return sub_1D49220A0();
}

uint64_t sub_1D4702170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16) || (sub_1D4921FF8(), sub_1D4921FEC(), result = sub_1D4922220(), !v1))
  {
    type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0);
    return sub_1D4922004();
  }
  return result;
}

uint64_t sub_1D470223C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1D4702248((uint64_t (*)(_QWORD))sub_1D47C49E4, a1);
}

uint64_t sub_1D4702248@<X0>(uint64_t (*a1)(_QWORD)@<X2>, _QWORD *a2@<X8>)
{
  *a2 = a1(MEMORY[0x1E0DEE9D8]);
  return sub_1D4922010();
}

uint64_t sub_1D4702284(uint64_t a1, uint64_t a2)
{
  return sub_1D4701D64(a1, a2, qword_1EFEA9C40, qword_1EFEC2D28);
}

uint64_t sub_1D47022A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D4702048(a1, a2, a3);
}

uint64_t sub_1D47022B8()
{
  return sub_1D4702170();
}

uint64_t sub_1D47022CC()
{
  sub_1D4696EA4(&qword_1EFEAA9C8, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig, (uint64_t)&unk_1D4929EEC);
  return sub_1D4922070();
}

uint64_t sub_1D470231C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1ED98E4F8, (uint64_t)qword_1ED9A4DB0, a1);
}

uint64_t sub_1D4702338()
{
  sub_1D4696EA4(&qword_1ED98E500, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig, (uint64_t)&unk_1D4929F24);
  return sub_1D49221D8();
}

uint64_t sub_1D4702378()
{
  sub_1D4696EA4(&qword_1ED98E500, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig, (uint64_t)&unk_1D4929F24);
  return sub_1D49221F0();
}

uint64_t sub_1D47023C8(_QWORD *a1, char *a2)
{
  return sub_1D4702860(a1, a2, sub_1D46EE1A4, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig) & 1;
}

uint64_t sub_1D47023F0()
{
  return sub_1D4696EA4(&qword_1EFEAA920, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig, (uint64_t)&unk_1D4929E34);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98E510);
}

uint64_t sub_1D4702430()
{
  return sub_1D4696EA4(&qword_1ED98E500, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig, (uint64_t)&unk_1D4929F24);
}

uint64_t sub_1D470245C()
{
  return sub_1D4696EA4(&qword_1EFEAA928, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig, (uint64_t)&unk_1D4929E5C);
}

uint64_t sub_1D4702488()
{
  return sub_1D4696EA4(&qword_1ED98E508, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig, (uint64_t)&unk_1D4929E9C);
}

uint64_t sub_1D47024B4()
{
  return sub_1D4696EA4(&qword_1EFEAA930, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig, (uint64_t)&unk_1D4929F9C);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98E540);
}

uint64_t sub_1D47024F4()
{
  return sub_1D4696EA4(&qword_1ED98E530, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig, (uint64_t)&unk_1D492A08C);
}

uint64_t sub_1D4702520()
{
  return sub_1D4696EA4(&qword_1EFEAA938, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig, (uint64_t)&unk_1D4929FC4);
}

uint64_t sub_1D470254C()
{
  return sub_1D4696EA4(&qword_1ED98E538, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig, (uint64_t)&unk_1D492A004);
}

uint64_t sub_1D4702578()
{
  return sub_1D4696EA4(&qword_1EFEAA940, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig, (uint64_t)&unk_1D492A104);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98E590);
}

uint64_t sub_1D47025B8()
{
  return sub_1D4696EA4(&qword_1ED98E580, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig, (uint64_t)&unk_1D492A1F4);
}

uint64_t sub_1D47025E4()
{
  return sub_1D4696EA4(&qword_1EFEAA948, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig, (uint64_t)&unk_1D492A12C);
}

uint64_t sub_1D4702610()
{
  return sub_1D4696EA4(&qword_1ED98E588, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig, (uint64_t)&unk_1D492A16C);
}

uint64_t sub_1D470263C()
{
  return sub_1D4696EA4(&qword_1EFEAA950, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig, (uint64_t)&unk_1D492A26C);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig(uint64_t a1)
{
  return sub_1D469C2D0(a1, qword_1ED98E3C8);
}

uint64_t sub_1D470267C()
{
  return sub_1D4696EA4(&qword_1ED98E3B8, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig, (uint64_t)&unk_1D492A35C);
}

uint64_t sub_1D47026A8()
{
  return sub_1D4696EA4(&qword_1EFEAA958, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig, (uint64_t)&unk_1D492A294);
}

uint64_t sub_1D47026D4()
{
  return sub_1D4696EA4(&qword_1ED98E3C0, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig, (uint64_t)&unk_1D492A2D4);
}

uint64_t sub_1D4702700()
{
  return sub_1D4696EA4(&qword_1EFEAA960, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig, (uint64_t)&unk_1D492A3D4);
}

uint64_t sub_1D470272C()
{
  return sub_1D4696EA4(&qword_1ED98E3E8, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig, (uint64_t)&unk_1D492A4C4);
}

uint64_t sub_1D4702758()
{
  return sub_1D4696EA4(&qword_1EFEAA968, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig, (uint64_t)&unk_1D492A3FC);
}

uint64_t sub_1D4702784()
{
  return sub_1D4696EA4(&qword_1ED98E3F0, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig, (uint64_t)&unk_1D492A43C);
}

uint64_t sub_1D47027B0()
{
  return sub_1D4696EA4(&qword_1EFEAA970, type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig, (uint64_t)&unk_1D492A53C);
}

uint64_t sub_1D47027DC()
{
  return sub_1D4696EA4(&qword_1ED98E100, type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig, (uint64_t)&unk_1D492A62C);
}

uint64_t sub_1D4702808()
{
  return sub_1D4696EA4(&qword_1EFEAA978, type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig, (uint64_t)&unk_1D492A564);
}

uint64_t sub_1D4702834()
{
  return sub_1D4696EA4(&qword_1ED98E108, type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig, (uint64_t)&unk_1D492A5A4);
}

uint64_t sub_1D4702860(_QWORD *a1, char *a2, uint64_t (*a3)(_QWORD, _QWORD), uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v8 = sub_1D492201C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - v13;
  if ((a3(*a1, *(_QWORD *)a2) & 1) != 0)
  {
    v15 = a4(0);
    v16 = (char *)a1 + *(int *)(v15 + 20);
    v17 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v17(v14, v16, v8);
    v17(v12, &a2[*(int *)(v15 + 20)], v8);
    sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v18 = sub_1D49225E0();
    v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v12, v8);
    v19(v14, v8);
  }
  else
  {
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_1D470299C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_1D492201C();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x1E0C80A78](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA998);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E568);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_1D469C5EC(a1, (uint64_t)&v35 - v20, &qword_1ED98E568);
  v39 = a2;
  sub_1D469C5EC(a2, (uint64_t)v19, &qword_1ED98E568);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_1D469C5EC((uint64_t)v21, (uint64_t)v12, &qword_1ED98E568);
  sub_1D469C5EC((uint64_t)v19, v22, &qword_1ED98E568);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_1D469C5EC((uint64_t)v12, (uint64_t)v16, &qword_1ED98E568);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_1D469C630(v22, v36, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
      v25 = sub_1D4703168((uint64_t)v16, v24);
      sub_1D4697DE0(v24, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
      sub_1D46992EC((uint64_t)v19, &qword_1ED98E568);
      sub_1D46992EC((uint64_t)v21, &qword_1ED98E568);
      sub_1D4697DE0((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
      sub_1D46992EC((uint64_t)v12, &qword_1ED98E568);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_1D46992EC((uint64_t)v19, &qword_1ED98E568);
    sub_1D46992EC((uint64_t)v21, &qword_1ED98E568);
    sub_1D4697DE0((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
LABEL_6:
    sub_1D46992EC((uint64_t)v12, &qword_1EFEAA998);
    goto LABEL_9;
  }
  sub_1D46992EC((uint64_t)v19, &qword_1ED98E568);
  sub_1D46992EC((uint64_t)v21, &qword_1ED98E568);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_1D46992EC((uint64_t)v12, &qword_1ED98E568);
LABEL_8:
  v26 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
  v32 = sub_1D49225E0();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t sub_1D4702D64(uint64_t *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  char v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;

  v4 = sub_1D492201C();
  v44 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v43 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v42 = (char *)&v40 - v7;
  v8 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v41 = (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA9B0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D520);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v40 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v40 - v21;
  v23 = *a1;
  v24 = a1[1];
  v25 = *(_QWORD *)a2;
  v26 = *((_QWORD *)a2 + 1);
  v45 = a2;
  if (v23 == v25 && v24 == v26 || (v27 = 0, (sub_1D4922E38() & 1) != 0))
  {
    v40 = v4;
    v28 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig(0);
    sub_1D469C5EC((uint64_t)a1 + *(int *)(v28 + 24), (uint64_t)v22, (uint64_t *)&unk_1ED98D520);
    sub_1D469C5EC((uint64_t)&v45[*(int *)(v28 + 24)], (uint64_t)v20, (uint64_t *)&unk_1ED98D520);
    v29 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_1D469C5EC((uint64_t)v22, (uint64_t)v13, (uint64_t *)&unk_1ED98D520);
    sub_1D469C5EC((uint64_t)v20, v29, (uint64_t *)&unk_1ED98D520);
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v30((uint64_t)v13, 1, v8) == 1)
    {
      sub_1D46992EC((uint64_t)v20, (uint64_t *)&unk_1ED98D520);
      sub_1D46992EC((uint64_t)v22, (uint64_t *)&unk_1ED98D520);
      if (v30(v29, 1, v8) == 1)
      {
        sub_1D46992EC((uint64_t)v13, (uint64_t *)&unk_1ED98D520);
LABEL_11:
        v33 = v44;
        v34 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
        v35 = v42;
        v36 = v40;
        v34(v42, (char *)a1 + *(int *)(v28 + 20), v40);
        v37 = v43;
        v34(v43, &v45[*(int *)(v28 + 20)], v36);
        sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
        v27 = sub_1D49225E0();
        v38 = *(void (**)(char *, uint64_t))(v33 + 8);
        v38(v37, v36);
        v38(v35, v36);
        return v27 & 1;
      }
    }
    else
    {
      sub_1D469C5EC((uint64_t)v13, (uint64_t)v17, (uint64_t *)&unk_1ED98D520);
      if (v30(v29, 1, v8) != 1)
      {
        v31 = v41;
        sub_1D469C630(v29, v41, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig);
        v32 = sub_1D470299C((uint64_t)v17, v31);
        sub_1D4697DE0(v31, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig);
        sub_1D46992EC((uint64_t)v20, (uint64_t *)&unk_1ED98D520);
        sub_1D46992EC((uint64_t)v22, (uint64_t *)&unk_1ED98D520);
        sub_1D4697DE0((uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig);
        sub_1D46992EC((uint64_t)v13, (uint64_t *)&unk_1ED98D520);
        if ((v32 & 1) != 0)
          goto LABEL_11;
LABEL_12:
        v27 = 0;
        return v27 & 1;
      }
      sub_1D46992EC((uint64_t)v20, (uint64_t *)&unk_1ED98D520);
      sub_1D46992EC((uint64_t)v22, (uint64_t *)&unk_1ED98D520);
      sub_1D4697DE0((uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig);
    }
    sub_1D46992EC((uint64_t)v13, &qword_1EFEAA9B0);
    goto LABEL_12;
  }
  return v27 & 1;
}

uint64_t sub_1D4703168(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a2;
  v3 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (uint64_t *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v14 = (uint64_t *)((char *)&v27 - v13);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA990);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_1D47039C4(a1, (uint64_t)v18);
  sub_1D47039C4(v28, v19);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1D47039C4((uint64_t)v18, (uint64_t)v12);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1D469C630(v19, (uint64_t)v5, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig);
      if ((sub_1D46EE1A4(*v12, *v5) & 1) != 0)
      {
        sub_1D492201C();
        sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
        if ((sub_1D49225E0() & 1) != 0)
        {
          v20 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig;
          sub_1D4697DE0((uint64_t)v5, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig);
          v21 = (uint64_t)v12;
LABEL_13:
          sub_1D4697DE0(v21, v20);
          sub_1D4697DE0((uint64_t)v18, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
          return 1;
        }
      }
      v25 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig;
      sub_1D4697DE0((uint64_t)v5, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig);
      v26 = (uint64_t)v12;
LABEL_16:
      sub_1D4697DE0(v26, v25);
      sub_1D4697DE0((uint64_t)v18, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
      return 0;
    }
    v22 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig;
    v23 = (uint64_t)v12;
  }
  else
  {
    sub_1D47039C4((uint64_t)v18, (uint64_t)v14);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1D469C630(v19, (uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig);
      if ((sub_1D46EDFA0(*v14, *v8) & 1) != 0)
      {
        sub_1D492201C();
        sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
        if ((sub_1D49225E0() & 1) != 0)
        {
          v20 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig;
          sub_1D4697DE0((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig);
          v21 = (uint64_t)v14;
          goto LABEL_13;
        }
      }
      v25 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig;
      sub_1D4697DE0((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig);
      v26 = (uint64_t)v14;
      goto LABEL_16;
    }
    v22 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig;
    v23 = (uint64_t)v14;
  }
  sub_1D4697DE0(v23, v22);
  sub_1D46992EC((uint64_t)v18, &qword_1EFEAA990);
  return 0;
}

uint64_t sub_1D47034E4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  char *v39;
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t *v47;
  char v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;

  v60 = a2;
  v3 = sub_1D492201C();
  v58 = *(_QWORD *)(v3 - 8);
  v59 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v57 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v56 = (char *)&v49 - v6;
  v7 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA988);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED98E3F8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v49 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v49 - v21;
  v23 = a1;
  v24 = *a1;
  v25 = v60;
  if ((sub_1D46EE850(v24, *v60) & 1) == 0)
    goto LABEL_12;
  v52 = v11;
  v53 = v22;
  v54 = v13;
  v55 = v20;
  v50 = v10;
  v51 = v17;
  if ((sub_1D46EE850(v23[1], v25[1]) & 1) == 0)
    goto LABEL_12;
  v26 = v23;
  if ((sub_1D46EE850(v23[2], v25[2]) & 1) == 0)
    goto LABEL_12;
  v27 = type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig(0);
  v28 = (uint64_t)v53;
  sub_1D469C5EC((uint64_t)v23 + *(int *)(v27 + 32), (uint64_t)v53, qword_1ED98E3F8);
  v49 = v27;
  v29 = (uint64_t)v55;
  sub_1D469C5EC((uint64_t)v25 + *(int *)(v27 + 32), (uint64_t)v55, qword_1ED98E3F8);
  v30 = (uint64_t)v54;
  v31 = (uint64_t)&v54[*(int *)(v52 + 48)];
  sub_1D469C5EC(v28, (uint64_t)v54, qword_1ED98E3F8);
  sub_1D469C5EC(v29, v31, qword_1ED98E3F8);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v32(v30, 1, v7) != 1)
  {
    v42 = v51;
    sub_1D469C5EC(v30, (uint64_t)v51, qword_1ED98E3F8);
    if (v32(v31, 1, v7) != 1)
    {
      v46 = v31;
      v47 = v50;
      sub_1D469C630(v46, (uint64_t)v50, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig);
      if ((sub_1D48A1900(*v42, *v47) & 1) != 0)
      {
        sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
        v48 = sub_1D49225E0();
        sub_1D4697DE0((uint64_t)v47, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig);
        sub_1D46992EC((uint64_t)v55, qword_1ED98E3F8);
        sub_1D46992EC(v28, qword_1ED98E3F8);
        sub_1D4697DE0((uint64_t)v42, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig);
        sub_1D46992EC(v30, qword_1ED98E3F8);
        if ((v48 & 1) != 0)
          goto LABEL_7;
LABEL_12:
        v40 = 0;
        return v40 & 1;
      }
      sub_1D4697DE0((uint64_t)v47, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig);
      sub_1D46992EC((uint64_t)v55, qword_1ED98E3F8);
      sub_1D46992EC(v28, qword_1ED98E3F8);
      sub_1D4697DE0((uint64_t)v42, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig);
      v44 = v30;
      v43 = qword_1ED98E3F8;
LABEL_11:
      sub_1D46992EC(v44, v43);
      goto LABEL_12;
    }
    sub_1D46992EC((uint64_t)v55, qword_1ED98E3F8);
    sub_1D46992EC(v28, qword_1ED98E3F8);
    sub_1D4697DE0((uint64_t)v42, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig);
LABEL_10:
    v43 = &qword_1EFEAA988;
    v44 = v30;
    goto LABEL_11;
  }
  sub_1D46992EC(v29, qword_1ED98E3F8);
  sub_1D46992EC(v28, qword_1ED98E3F8);
  if (v32(v31, 1, v7) != 1)
    goto LABEL_10;
  sub_1D46992EC(v30, qword_1ED98E3F8);
LABEL_7:
  v33 = v49;
  v34 = (uint64_t)v26 + *(int *)(v49 + 28);
  v36 = v58;
  v35 = v59;
  v37 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
  v38 = v56;
  v37(v56, v34, v59);
  v39 = v57;
  v37(v57, (uint64_t)v25 + *(int *)(v33 + 28), v35);
  sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
  v40 = sub_1D49225E0();
  v41 = *(void (**)(char *, uint64_t))(v36 + 8);
  v41(v39, v35);
  v41(v38, v35);
  return v40 & 1;
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98E558);
}

uint64_t sub_1D47039C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1D4703A08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v7 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0)
                  + 20);
    else
      v7 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0)
                  + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1D492201C();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D4703B30(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
    v3 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0);
  else
    v3 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0);
  v4 = a1 + *(int *)(v3 + 20);
  v5 = sub_1D492201C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1D4703B98(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
    v5 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0)
                + 20);
  else
    v5 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0)
                + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1D492201C();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1D4703C8C(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_1D4697DE0((uint64_t)a1, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v5 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0)
                  + 20);
    else
      v5 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0)
                  + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1D492201C();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_1D4703D98(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
    v5 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0)
                + 20);
  else
    v5 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0)
                + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1D492201C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1D4703E64(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1D4697DE0((uint64_t)a1, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v5 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0)
                  + 20);
    else
      v5 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0)
                  + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1D492201C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D4703F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_1D4703F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1D4703F64()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1D4703F74()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1D4703FF4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E568);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v12 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0)
                     + 20);
      else
        v12 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0)
                     + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_1D492201C();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v17 = *(int *)(a3 + 20);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_1D492201C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return a1;
}

uint64_t sub_1D47041AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload == 1)
      v6 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0);
    else
      v6 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0);
    v7 = a1 + *(int *)(v6 + 20);
    v8 = sub_1D492201C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v9 = a1 + *(int *)(a2 + 20);
  v10 = sub_1D492201C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *sub_1D4704274(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E568);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v10 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0)
                   + 20);
    else
      v10 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0)
                   + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_1D492201C();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v15 = *(int *)(a3 + 20);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_1D492201C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

_QWORD *sub_1D4704400(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v6 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v12 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0)
                     + 20);
      else
        v12 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0)
                     + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_1D492201C();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_14;
    }
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E568);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_14;
  }
  if (v10)
  {
    sub_1D4697DE0((uint64_t)a1, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_1D4697DE0((uint64_t)a1, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
    v18 = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (v18 == 1)
      v19 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0)
                   + 20);
    else
      v19 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0)
                   + 20);
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_1D492201C();
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    v23(v20, v21, v22);
    swift_storeEnumTagMultiPayload();
  }
LABEL_14:
  v24 = *(int *)(a3 + 20);
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_1D492201C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  return a1;
}

_QWORD *sub_1D4704694(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E568);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v10 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0)
                   + 20);
    else
      v10 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0)
                   + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_1D492201C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 20);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1D492201C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

_QWORD *sub_1D4704800(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v12 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0)
                     + 20);
      else
        v12 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0)
                     + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_1D492201C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_14;
    }
LABEL_7:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E568);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_14;
  }
  if (v10)
  {
    sub_1D4697DE0((uint64_t)a1, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_1D4697DE0((uint64_t)a1, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
    v17 = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (v17 == 1)
      v18 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0)
                   + 20);
    else
      v18 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0)
                   + 20);
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_1D492201C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    swift_storeEnumTagMultiPayload();
  }
LABEL_14:
  v22 = *(int *)(a3 + 20);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_1D492201C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
  return a1;
}

uint64_t sub_1D4704A5C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D4704A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E568);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_1D492201C();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1D4704AE0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D4704AEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E568);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_1D492201C();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D4704B6C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D46EA3B0(319, &qword_1ED98E570, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
  if (v0 <= 0x3F)
  {
    sub_1D492201C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1D4704C00()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D4704C10()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *sub_1D4704C20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1D492201C();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_1D4704CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1D492201C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1D4704D00(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1D492201C();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *sub_1D4704D70(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D492201C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *sub_1D4704DE4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1D492201C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1D4704E40(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D492201C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1D4704EAC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_1Tm(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D492201C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1D4704F38()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *__swift_store_extra_inhabitant_index_2Tm(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1D492201C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1D4704FBC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D492201C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D4705034(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v28;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D492201C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (uint64_t *)((char *)v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D520);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v20 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48))(v15, 1, v20))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E568);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *v14 = *v15;
        if (EnumCaseMultiPayload == 1)
          v24 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0);
        else
          v24 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0);
        v25 = *(int *)(v24 + 20);
        v28 = (char *)v14 + v25;
        v26 = (char *)v15 + v25;
        swift_bridgeObjectRetain();
        v12(v28, v26, v11);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v14, 0, 1, v20);
      }
      v12((char *)v14 + *(int *)(v16 + 20), (char *)v15 + *(int *)(v16 + 20), v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v4;
}

uint64_t sub_1D4705250(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1D492201C();
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v12(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    v9 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v6, 1, v9))
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      swift_bridgeObjectRelease();
      if (EnumCaseMultiPayload == 1)
        v11 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0);
      else
        v11 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0);
      v12(v6 + *(int *)(v11 + 20), v5);
    }
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v6 + *(int *)(v7 + 20), v5);
  }
  return result;
}

_QWORD *sub_1D4705378(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D492201C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D520);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v14, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E568);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v13 = *v14;
      if (EnumCaseMultiPayload == 1)
        v22 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0);
      else
        v22 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0);
      v23 = *(int *)(v22 + 20);
      v26 = (char *)v13 + v23;
      v24 = (char *)v14 + v23;
      swift_bridgeObjectRetain();
      v11(v26, v24, v10);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
    }
    v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v10);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

_QWORD *sub_1D4705568(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  int EnumCaseMultiPayload;
  uint64_t v30;
  int v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  BOOL v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  int v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  char *v49;
  void (*v50)(char *, char *);
  char *v51;
  uint64_t v52;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D492201C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *))(v10 + 24);
  v52 = v9;
  v11(v7, v8);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    v50 = v11;
    if (v19)
    {
      sub_1D4697DE0((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig);
      goto LABEL_7;
    }
    v24 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
    v27 = v26(v13, 1, v24);
    v28 = v26(v14, 1, v24);
    if (v27)
    {
      if (!v28)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *(_QWORD *)v13 = *(_QWORD *)v14;
        if (EnumCaseMultiPayload == 1)
          v30 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0);
        else
          v30 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0);
        v43 = *(int *)(v30 + 20);
        v44 = &v13[v43];
        v45 = &v14[v43];
        v46 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
        swift_bridgeObjectRetain();
        v47 = v45;
        v38 = v52;
        v46(v44, v47, v52);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v13, 0, 1, v24);
        v37 = (void (*)(char *, char *, uint64_t))v50;
        goto LABEL_26;
      }
    }
    else
    {
      if (!v28)
      {
        v36 = a1 == a2;
        v37 = (void (*)(char *, char *, uint64_t))v50;
        v38 = v52;
        if (!v36)
        {
          sub_1D4697DE0((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
          v39 = swift_getEnumCaseMultiPayload();
          *(_QWORD *)v13 = *(_QWORD *)v14;
          if (v39 == 1)
            v40 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0)
                         + 20);
          else
            v40 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0)
                         + 20);
          v41 = &v13[v40];
          v49 = &v14[v40];
          v42 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
          swift_bridgeObjectRetain();
          v42(v41, v49, v52);
          swift_storeEnumTagMultiPayload();
          ((void (*)(char *, char *, uint64_t))v50)(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v52);
          return a1;
        }
LABEL_26:
        v37(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v38);
        return a1;
      }
      sub_1D4697DE0((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
    }
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E568);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    ((void (*)(char *, char *, uint64_t))v50)(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v52);
    return a1;
  }
  if (v19)
  {
LABEL_7:
    v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D520);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  v20 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v14, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E568);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v52);
  }
  else
  {
    v31 = swift_getEnumCaseMultiPayload();
    *(_QWORD *)v13 = *(_QWORD *)v14;
    if (v31 == 1)
      v32 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0)
                   + 20);
    else
      v32 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0)
                   + 20);
    v33 = &v13[v32];
    v51 = &v14[v32];
    v34 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    swift_bridgeObjectRetain();
    v34(v33, v51, v52);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v13, 0, 1, v20);
    v34(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v52);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

_OWORD *sub_1D47059C0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D492201C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D520);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(v13, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E568);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v12 = *v13;
      if (EnumCaseMultiPayload == 1)
        v21 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0);
      else
        v21 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0);
      v10((char *)v12 + *(int *)(v21 + 20), (char *)v13 + *(int *)(v21 + 20), v9);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v12, 0, 1, v17);
    }
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_QWORD *sub_1D4705B84(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  int EnumCaseMultiPayload;
  uint64_t v32;
  int v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  BOOL v37;
  void (*v38)(char *, char *, uint64_t);
  int v39;
  uint64_t v40;
  uint64_t v41;
  void (*v43)(char *, char *);
  uint64_t v44;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D492201C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *))(v11 + 40);
  v44 = v10;
  v12(v8, v9);
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    v43 = v12;
    if (v20)
    {
      sub_1D4697DE0((uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig);
      goto LABEL_7;
    }
    v25 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    v28 = v27(v14, 1, v25);
    v29 = v27(v15, 1, v25);
    if (v28)
    {
      if (!v29)
      {
        v30 = v26;
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *(_QWORD *)v14 = *(_QWORD *)v15;
        v32 = v44;
        if (EnumCaseMultiPayload == 1)
          v41 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0);
        else
          v41 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0);
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v14[*(int *)(v41 + 20)], &v15[*(int *)(v41 + 20)], v44);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v14, 0, 1, v25);
        v38 = (void (*)(char *, char *, uint64_t))v43;
LABEL_26:
        v38(&v14[*(int *)(v16 + 20)], &v15[*(int *)(v16 + 20)], v32);
        return a1;
      }
    }
    else
    {
      if (!v29)
      {
        v37 = a1 == a2;
        v38 = (void (*)(char *, char *, uint64_t))v43;
        v32 = v44;
        if (!v37)
        {
          sub_1D4697DE0((uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
          v39 = swift_getEnumCaseMultiPayload();
          *(_QWORD *)v14 = *(_QWORD *)v15;
          if (v39 == 1)
            v40 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0);
          else
            v40 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0);
          (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v14[*(int *)(v40 + 20)], &v15[*(int *)(v40 + 20)], v44);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_26;
      }
      sub_1D4697DE0((uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
    }
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E568);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    ((void (*)(char *, char *, uint64_t))v43)(&v14[*(int *)(v16 + 20)], &v15[*(int *)(v16 + 20)], v44);
    return a1;
  }
  if (v20)
  {
LABEL_7:
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D520);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  v21 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v15, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E568);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v14[*(int *)(v16 + 20)], &v15[*(int *)(v16 + 20)], v44);
  }
  else
  {
    v33 = swift_getEnumCaseMultiPayload();
    *(_QWORD *)v14 = *(_QWORD *)v15;
    if (v33 == 1)
      v34 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0);
    else
      v34 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.QIDConverterConfig(0);
    v35 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v35(&v14[*(int *)(v34 + 20)], &v15[*(int *)(v34 + 20)], v44);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v14, 0, 1, v21);
    v35(&v14[*(int *)(v16 + 20)], &v15[*(int *)(v16 + 20)], v44);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  return a1;
}

uint64_t sub_1D4705F64()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D4705F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D492201C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D520);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1D4706014()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D4706020(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1D492201C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D520);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1D47060C0()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D492201C();
  if (v0 <= 0x3F)
  {
    sub_1D46EA3B0(319, &qword_1ED98E5A0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for OntologyGraph()
{
  return &type metadata for OntologyGraph;
}

uint64_t sub_1D4706170(uint64_t *a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[2];
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;

  v5 = sub_1D4922370();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[2];
  v10 = a1[3];
  v34 = *a1;
  v35 = v9;
  v11 = *a2;
  v12 = a2[3];
  v36 = a2[2];
  v13 = *v2;
  if (*(_QWORD *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    v14 = sub_1D47CA4DC(v36, v12);
    if ((v15 & 1) == 0)
    {
LABEL_9:
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    v16 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v14);
    swift_retain();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v13 + 16))
    {
      swift_bridgeObjectRetain();
      v17 = sub_1D47CA4DC(v35, v10);
      if ((v18 & 1) != 0)
      {
        v19 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v17);
        swift_retain();
        swift_bridgeObjectRelease();
        v37 = v13;
        v20 = sub_1D4706620(v16, v19);
        swift_release();
        swift_release();
        return v20 & 1;
      }
      swift_release();
      goto LABEL_9;
    }
    swift_release();
  }
LABEL_10:
  v33 = v11;
  sub_1D470C76C((uint64_t)v8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v21 = sub_1D4922358();
  v22 = sub_1D492291C();
  v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    v24 = swift_slowAlloc();
    v32 = v5;
    v25 = v24;
    v26 = swift_slowAlloc();
    v31 = v26;
    *(_DWORD *)v25 = 136315394;
    v29[0] = v25 + 4;
    v37 = 0;
    v38 = 0xE000000000000000;
    v39 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D4922B80();
    v29[1] = 0xD00000000000001FLL;
    v30 = v23;
    sub_1D492270C();
    swift_bridgeObjectRetain();
    sub_1D492270C();
    swift_bridgeObjectRelease();
    v35 = v6;
    sub_1D492270C();
    swift_bridgeObjectRetain();
    sub_1D492270C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v37 = sub_1D47F0250(v37, v38, &v39);
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    v37 = 0;
    v38 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D4922B80();
    sub_1D492270C();
    swift_bridgeObjectRetain();
    sub_1D492270C();
    swift_bridgeObjectRelease();
    sub_1D492270C();
    swift_bridgeObjectRetain();
    sub_1D492270C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v37 = sub_1D47F0250(v37, v38, &v39);
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D467C000, v21, (os_log_type_t)v30, "Invalid input nodes: %s %s", (uint8_t *)v25, 0x16u);
    v27 = v31;
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v27, -1, -1);
    MEMORY[0x1D82635B8](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v32);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v20 = 0;
  return v20 & 1;
}

uint64_t sub_1D4706620(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char v6;
  uint64_t Strong;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  v5 = v3 == *(_QWORD *)(a1 + 32) && v4 == *(_QWORD *)(a1 + 40);
  if (v5 || (sub_1D4922E38() & 1) != 0)
  {
    v6 = 1;
  }
  else
  {
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v6 = sub_1D4706620(a1, Strong);
      swift_release();
    }
    else
    {
      v6 = 0;
    }
  }
  return v6 & 1;
}

uint64_t sub_1D47066B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OntologyGraph.Node()
{
  return objc_opt_self();
}

uint64_t sub_1D4706720@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  _QWORD *v12;
  unint64_t v13;
  char v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *i;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *j;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _OWORD *v58;
  uint64_t v59;
  _QWORD *v60;

  v5 = *v3;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_14;
  v7 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(result + 16);
  v9 = *(_QWORD *)(result + 24);
  swift_bridgeObjectRetain();
  v10 = sub_1D47CA4DC(v8, v9);
  if ((v11 & 1) == 0)
    goto LABEL_13;
  v12 = *(_QWORD **)(*(_QWORD *)(v5 + 56) + 8 * v10);
  swift_retain();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v5 + 16))
  {
    result = swift_release();
LABEL_14:
    *a3 = 0u;
    a3[1] = 0u;
    return result;
  }
  swift_bridgeObjectRetain();
  v13 = sub_1D47CA4DC(v7, v6);
  if ((v14 & 1) == 0)
  {
    swift_release();
LABEL_13:
    result = swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v58 = a3;
  v60 = *(_QWORD **)(*(_QWORD *)(v5 + 56) + 8 * v13);
  swift_retain();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D378);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D49273C0;
  v16 = v12[3];
  v17 = v12[4];
  v18 = v12[5];
  *(_QWORD *)(inited + 32) = v12[2];
  *(_QWORD *)(inited + 40) = v16;
  *(_QWORD *)(inited + 48) = v17;
  *(_QWORD *)(inited + 56) = v18;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (i = (_QWORD *)swift_weakLoadStrong(); i; i = (_QWORD *)swift_weakLoadStrong())
  {
    v20 = i[2];
    v21 = i[3];
    v22 = i[4];
    v23 = i[5];
    v25 = *(_QWORD *)(inited + 16);
    v24 = *(_QWORD *)(inited + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v25 >= v24 >> 1)
      inited = (uint64_t)sub_1D48A8A58((_QWORD *)(v24 > 1), v25 + 1, 1, (_QWORD *)inited);
    *(_QWORD *)(inited + 16) = v25 + 1;
    v26 = (_QWORD *)(inited + 32 * v25);
    v26[4] = v20;
    v26[5] = v21;
    v26[6] = v22;
    v26[7] = v23;
    swift_release();
  }
  v59 = inited;
  swift_release();
  v27 = swift_initStackObject();
  *(_OWORD *)(v27 + 16) = xmmword_1D49273C0;
  v28 = v60[3];
  v29 = v60[4];
  v30 = v60[5];
  *(_QWORD *)(v27 + 32) = v60[2];
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = v29;
  *(_QWORD *)(v27 + 56) = v30;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (j = (_QWORD *)swift_weakLoadStrong(); j; j = (_QWORD *)swift_weakLoadStrong())
  {
    v32 = j[2];
    v33 = j[3];
    v34 = j[4];
    v35 = j[5];
    v36 = *(_QWORD *)(v27 + 16);
    v37 = *(_QWORD *)(v27 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v36 >= v37 >> 1)
      v27 = (uint64_t)sub_1D48A8A58((_QWORD *)(v37 > 1), v36 + 1, 1, (_QWORD *)v27);
    *(_QWORD *)(v27 + 16) = v36 + 1;
    v38 = (_QWORD *)(v27 + 32 * v36);
    v38[4] = v32;
    v38[5] = v33;
    v38[6] = v34;
    v38[7] = v35;
    swift_release();
  }
  swift_release();
  v39 = *(_QWORD *)(v59 + 16);
  if (!v39 || (v40 = *(_QWORD *)(v27 + 16)) == 0)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    result = swift_release();
    *v58 = 0u;
    v58[1] = 0u;
    return result;
  }
  v41 = 0;
  v42 = 0;
  while (1)
  {
    v43 = v39 - v42;
    if (__OFSUB__(v39, v42))
    {
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
    }
    v44 = v40 - v41;
    if (__OFSUB__(v40, v41))
      goto LABEL_44;
    if (v44 < v43)
    {
      if (__OFADD__(v42++, 1))
        goto LABEL_45;
      goto LABEL_39;
    }
    if (v43 >= v44)
      break;
LABEL_38:
    ++v41;
LABEL_39:
    if (v42 >= v39 || (uint64_t)v41 >= (uint64_t)v40)
      goto LABEL_41;
  }
  if (v42 < 0)
    goto LABEL_46;
  if (v41 >= v40)
    goto LABEL_47;
  v46 = (uint64_t *)(v59 + 32 + 32 * v42);
  v47 = v46[2];
  v48 = v46[3];
  v49 = (_QWORD *)(v27 + 32 + 32 * v41);
  v50 = v49[2];
  v51 = v49[3];
  if ((*v46 != *v49 || v46[1] != v49[1]) && (v52 = v46[3], v53 = sub_1D4922E38(), v48 = v52, (v53 & 1) == 0)
    || (v47 != v50 || v48 != v51) && (sub_1D4922E38() & 1) == 0)
  {
    ++v42;
    goto LABEL_38;
  }
  swift_bridgeObjectRelease();
  v54 = *v46;
  v55 = v46[1];
  v56 = v46[2];
  v57 = v46[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_release();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)v58 = v54;
  *((_QWORD *)v58 + 1) = v55;
  *((_QWORD *)v58 + 2) = v56;
  *((_QWORD *)v58 + 3) = v57;
  return result;
}

uint64_t sub_1D4706B98(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    v9 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0) + 40);
    v17 = v7 + v9;
    v10 = (uint64_t)a2 + v9;
    v11 = sub_1D492201C();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v17, v10, v11);
    v13 = a3[6];
    *(_BYTE *)(v7 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v14 = v7 + v13;
    v15 = (uint64_t)a2 + v13;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
    *(_QWORD *)(v7 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1D4706CC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0) + 40);
  v3 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4706D3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v8 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0) + 40);
  v16 = a1 + v8;
  v9 = a2 + v8;
  v10 = sub_1D492201C();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v16, v9, v10);
  v12 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D4706E34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0) + 40);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = v13;
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D4706F54(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v7 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0) + 40);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1D4707000(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0) + 40);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D47070F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D4707100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t matched;
  uint64_t v7;
  unint64_t v9;

  matched = type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0);
  v7 = *(_QWORD *)(matched - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, matched);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1D470717C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D4707188(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for URLMatchDomainAssignmentRule()
{
  uint64_t result;

  result = qword_1EFEAA9D0;
  if (!qword_1EFEAA9D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D470723C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D47072C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  uint64_t v21;
  uint64_t v22;
  double *v23;
  uint64_t v24;
  char *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  CGFloat v42;
  CGFloat v43;
  CGFloat v44;
  CGFloat v45;
  uint64_t v46;
  CGFloat MinX;
  uint64_t v48;
  unint64_t v49;
  CGFloat MinY;
  CGFloat Width;
  CGFloat Height;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  CGFloat v62;
  CGFloat v63;
  CGFloat v64;
  CGFloat v65;
  uint64_t v66;
  CGFloat v67;
  uint64_t v68;
  unint64_t v69;
  CGFloat v70;
  CGFloat v71;
  CGFloat v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unsigned __int8 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unsigned int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _OWORD v135[8];
  _OWORD v136[2];
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  _OWORD v145[2];
  _OWORD v146[8];
  _OWORD v147[2];
  _OWORD v148[3];
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  _OWORD v154[2];
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  _OWORD v163[2];
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _BYTE v168[176];
  CGRect v169;
  CGRect v170;
  CGRect v171;
  CGRect v172;
  CGRect v173;
  CGRect v174;
  CGRect v175;
  CGRect v176;

  v5 = v4;
  v134 = a4;
  v133 = type metadata accessor for URLMatchDomainAssignmentRule();
  v9 = MEMORY[0x1E0C80A78](v133);
  v128 = (uint64_t)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v115 - v11;
  v13 = sub_1D4922370();
  v131 = *(_QWORD *)(v13 - 8);
  v132 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v130 = (uint64_t)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v129 = (uint64_t)&v115 - v16;
  v17 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (double *)((char *)&v115 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (double *)((char *)&v115 - v22);
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v115 - v24;
  sub_1D46A4760(a1, (uint64_t)v168);
  LOBYTE(a1) = *(_BYTE *)(v5 + 32);
  sub_1D469C304(a2, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  if ((a1 & 1) != 0)
  {
    v26 = v25[96];
    sub_1D4697DE0((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    if (v26 != 1)
      goto LABEL_9;
  }
  else
  {
    sub_1D4697DE0((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  }
  if ((sub_1D4707EC0(a3) & 1) == 0)
    goto LABEL_9;
  v27 = *(_QWORD *)(v5 + 16);
  if (*(_QWORD *)(v27 + 16))
  {
    sub_1D46A86A4(v27);
    if (v28)
    {
      v30 = v28;
      v118 = v29;
      goto LABEL_11;
    }
LABEL_9:
    sub_1D46A4760((uint64_t)v168, v134);
    return sub_1D46C6AE4((uint64_t)v168, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6A64);
  }
  v30 = 0;
  v118 = 0;
LABEL_11:
  v32 = *(_QWORD *)(v5 + 24);
  if (*(_QWORD *)(v32 + 16))
  {
    *(_QWORD *)&v148[0] = *(_QWORD *)(v5 + *(int *)(v133 + 28));
    swift_bridgeObjectRetain();
    sub_1D4720740(v32, (uint64_t *)v148, (uint64_t)&v155);
    swift_bridgeObjectRelease();
    v33 = v158;
    if (!(_QWORD)v158)
    {
      sub_1D46C6AE4((uint64_t)v168, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6A64);
      swift_bridgeObjectRelease();
      return sub_1D46A4760((uint64_t)v168, v134);
    }
    v121 = *((_QWORD *)&v155 + 1);
    v122 = v155;
    v34 = v156;
    v119 = v157;
    v120 = *((_QWORD *)&v156 + 1);
    v123 = *((_QWORD *)&v157 + 1);
    v126 = v159;
    v127 = *((_QWORD *)&v158 + 1);
    v125 = DWORD2(v159);
  }
  else
  {
    v121 = 0;
    v122 = 0;
    v34 = 0;
    v119 = 0;
    v120 = 0;
    v123 = 0;
    v33 = 0;
    v126 = 0;
    v127 = 0;
    v125 = 0;
  }
  v35 = *(unsigned __int8 *)(v5 + 33);
  v124 = v34;
  if (v35 == 1)
  {
    v36 = v129;
    sub_1D470C76C(v129);
    sub_1D469C304(a2, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v37 = sub_1D4922358();
    v38 = sub_1D4922910();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      v116 = v33;
      v41 = v40;
      v117 = v30;
      *(_DWORD *)v39 = 136315138;
      *(_QWORD *)&v155 = v40;
      v133 = (uint64_t)(v39 + 4);
      v42 = *v23;
      v43 = v23[1];
      v44 = v23[2];
      v45 = v23[3];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
      v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_1D4927560;
      v169.origin.x = v42;
      v169.origin.y = v43;
      v169.size.width = v44;
      v169.size.height = v45;
      MinX = CGRectGetMinX(v169);
      v48 = MEMORY[0x1E0DEF040];
      *(_QWORD *)(v46 + 56) = MEMORY[0x1E0DEF040];
      v49 = sub_1D46A492C();
      *(_QWORD *)(v46 + 64) = v49;
      *(CGFloat *)(v46 + 32) = MinX;
      v170.origin.x = v42;
      v170.origin.y = v43;
      v170.size.width = v44;
      v170.size.height = v45;
      MinY = CGRectGetMinY(v170);
      *(_QWORD *)(v46 + 96) = v48;
      *(_QWORD *)(v46 + 104) = v49;
      *(CGFloat *)(v46 + 72) = MinY;
      v171.origin.x = v42;
      v171.origin.y = v43;
      v171.size.width = v44;
      v171.size.height = v45;
      Width = CGRectGetWidth(v171);
      *(_QWORD *)(v46 + 136) = v48;
      *(_QWORD *)(v46 + 144) = v49;
      *(CGFloat *)(v46 + 112) = Width;
      v172.origin.x = v42;
      v172.origin.y = v43;
      v172.size.width = v44;
      v172.size.height = v45;
      Height = CGRectGetHeight(v172);
      *(_QWORD *)(v46 + 176) = v48;
      *(_QWORD *)(v46 + 184) = v49;
      *(CGFloat *)(v46 + 152) = Height;
      v53 = sub_1D4922640();
      *(_QWORD *)&v148[0] = sub_1D47F0250(v53, v54, (uint64_t *)&v155);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      sub_1D4697DE0((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      _os_log_impl(&dword_1D467C000, v37, v38, "Reject domain (String(describing: curDomainInfo?.domain.name)) for region %s", v39, 0xCu);
      swift_arrayDestroy();
      v55 = v41;
      v33 = v116;
      MEMORY[0x1D82635B8](v55, -1, -1);
      MEMORY[0x1D82635B8](v39, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v129, v132);
    }
    else
    {
      sub_1D4697DE0((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);

      (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v36, v132);
    }
    v78 = v134;
    v80 = v121;
    v79 = v122;
    v82 = v119;
    v81 = v120;
    v83 = v123;
    sub_1D46C6BD0((uint64_t)&v155);
    sub_1D46A4760((uint64_t)&v155, v78);
    v84 = v79;
    v85 = v80;
    v86 = v124;
    v87 = v81;
    v88 = v82;
    v89 = v83;
    v90 = v33;
    goto LABEL_38;
  }
  v56 = v130;
  sub_1D470C76C(v130);
  sub_1D469C304(v5, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for URLMatchDomainAssignmentRule);
  sub_1D469C304(a2, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
  v57 = sub_1D4922358();
  v58 = sub_1D4922910();
  if (os_log_type_enabled(v57, v58))
  {
    v59 = swift_slowAlloc();
    v129 = swift_slowAlloc();
    *(_QWORD *)&v155 = v129;
    *(_DWORD *)v59 = 136315394;
    v117 = v30;
    v60 = sub_1D46F8BC8(v12[*(int *)(v133 + 20)]);
    *(_QWORD *)&v148[0] = sub_1D47F0250(v60, v61, (uint64_t *)&v155);
    v116 = v33;
    sub_1D4922A78();
    swift_bridgeObjectRelease();
    sub_1D4697DE0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for URLMatchDomainAssignmentRule);
    *(_WORD *)(v59 + 12) = 2080;
    v115 = v59 + 14;
    v62 = *v20;
    v63 = v20[1];
    v64 = v20[2];
    v65 = v20[3];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
    v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = xmmword_1D4927560;
    v173.origin.x = v62;
    v173.origin.y = v63;
    v173.size.width = v64;
    v173.size.height = v65;
    v67 = CGRectGetMinX(v173);
    v68 = MEMORY[0x1E0DEF040];
    *(_QWORD *)(v66 + 56) = MEMORY[0x1E0DEF040];
    v69 = sub_1D46A492C();
    *(_QWORD *)(v66 + 64) = v69;
    *(CGFloat *)(v66 + 32) = v67;
    v174.origin.x = v62;
    v174.origin.y = v63;
    v174.size.width = v64;
    v174.size.height = v65;
    v70 = CGRectGetMinY(v174);
    *(_QWORD *)(v66 + 96) = v68;
    *(_QWORD *)(v66 + 104) = v69;
    *(CGFloat *)(v66 + 72) = v70;
    v175.origin.x = v62;
    v175.origin.y = v63;
    v175.size.width = v64;
    v175.size.height = v65;
    v71 = CGRectGetWidth(v175);
    *(_QWORD *)(v66 + 136) = v68;
    *(_QWORD *)(v66 + 144) = v69;
    *(CGFloat *)(v66 + 112) = v71;
    v176.origin.x = v62;
    v176.origin.y = v63;
    v176.size.width = v64;
    v176.size.height = v65;
    v72 = CGRectGetHeight(v176);
    *(_QWORD *)(v66 + 176) = v68;
    *(_QWORD *)(v66 + 184) = v69;
    *(CGFloat *)(v66 + 152) = v72;
    v73 = sub_1D4922640();
    *(_QWORD *)&v148[0] = sub_1D47F0250(v73, v74, (uint64_t *)&v155);
    v33 = v116;
    sub_1D4922A78();
    v30 = v117;
    swift_bridgeObjectRelease();
    sub_1D4697DE0((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    _os_log_impl(&dword_1D467C000, v57, v58, "Assign %s to region %s", (uint8_t *)v59, 0x16u);
    v75 = v129;
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v75, -1, -1);
    MEMORY[0x1D82635B8](v59, -1, -1);

    v76 = v133;
    (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v130, v132);
    v77 = v123;
  }
  else
  {
    sub_1D4697DE0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for URLMatchDomainAssignmentRule);
    sub_1D4697DE0((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);

    (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v56, v132);
    v77 = v123;
    v76 = v133;
  }
  v91 = *(_BYTE *)(v5 + *(int *)(v76 + 20));
  if (v33)
  {
    swift_bridgeObjectRetain();
    v92 = v126;
    swift_bridgeObjectRetain();
    v93 = v5;
    v94 = v128;
    sub_1D469C304(v93, v128, (uint64_t (*)(_QWORD))type metadata accessor for URLMatchDomainAssignmentRule);
    sub_1D46C6AE4((uint64_t)v168, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6A64);
    sub_1D4697DE0(v94, (uint64_t (*)(_QWORD))type metadata accessor for URLMatchDomainAssignmentRule);
    v164 = v77;
    v165 = v33;
    v95 = v92;
    v96 = v127;
    v97 = v33;
    v98 = v77;
    v99 = v125;
    v166 = v127;
    v167 = v92;
    if (!v30)
    {
      v100 = 0;
      v95 = v126;
      v96 = v127;
      v97 = v33;
      v98 = v77;
      v101 = v125;
      goto LABEL_29;
    }
  }
  else
  {
    v102 = v5;
    v103 = v128;
    sub_1D469C304(v102, v128, (uint64_t (*)(_QWORD))type metadata accessor for URLMatchDomainAssignmentRule);
    LOBYTE(v148[0]) = *(_BYTE *)(v103 + *(int *)(v76 + 20));
    *(_QWORD *)&v155 = *(_QWORD *)(v103 + *(int *)(v76 + 28));
    sub_1D46C6AE4((uint64_t)v168, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6A64);
    sub_1D46FB5CC();
    sub_1D4697DE0(v103, (uint64_t (*)(_QWORD))type metadata accessor for URLMatchDomainAssignmentRule);
    v99 = 0;
    v100 = 0;
    v101 = 0;
    v98 = v164;
    v97 = v165;
    v96 = v166;
    v95 = v167;
    if (!v30)
      goto LABEL_29;
  }
  v100 = v118;
  v101 = v99;
LABEL_29:
  LOBYTE(v148[0]) = v91;
  *(_OWORD *)((char *)v148 + 8) = 0u;
  *(_OWORD *)((char *)&v148[1] + 8) = 0u;
  BYTE8(v148[2]) = 0;
  v149 = 0u;
  v150 = 0u;
  *(_QWORD *)&v151 = v98;
  *((_QWORD *)&v151 + 1) = v97;
  *(_QWORD *)&v152 = v96;
  *((_QWORD *)&v152 + 1) = v95;
  LODWORD(v153) = 0;
  *(_QWORD *)((char *)&v153 + 4) = __PAIR64__(v100, v101);
  HIDWORD(v153) = 0;
  LOWORD(v154[0]) = 0;
  *(_QWORD *)&v154[1] = 0;
  *((_QWORD *)&v154[0] + 1) = 0;
  DWORD2(v154[1]) = 0;
  sub_1D46A4760((uint64_t)v168, (uint64_t)&v155);
  if (sub_1D46A47A8((uint64_t)&v155) == 1)
    goto LABEL_36;
  v104 = sub_1D46F8BC8(v155);
  v106 = v105;
  if (v104 != sub_1D46F8BC8(v91) || v106 != v107)
  {
    v108 = sub_1D4922E38();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v108 & 1) != 0)
      goto LABEL_34;
    sub_1D46C6AE4((uint64_t)v168, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6B50);
LABEL_36:
    v143 = v152;
    v144 = v153;
    v145[0] = v154[0];
    *(_OWORD *)((char *)v145 + 12) = *(_OWORD *)((char *)v154 + 12);
    v139 = v148[2];
    v140 = v149;
    v141 = v150;
    v142 = v151;
    v109 = v148[0];
    v110 = v148[1];
    goto LABEL_37;
  }
  swift_bridgeObjectRelease_n();
LABEL_34:
  v146[6] = v161;
  v146[7] = v162;
  v147[0] = v163[0];
  *(_OWORD *)((char *)v147 + 12) = *(_OWORD *)((char *)v163 + 12);
  v146[2] = v157;
  v146[3] = v158;
  v146[4] = v159;
  v146[5] = v160;
  v146[0] = v155;
  v146[1] = v156;
  v143 = v152;
  v144 = v153;
  v145[0] = v154[0];
  *(_OWORD *)((char *)v145 + 12) = *(_OWORD *)((char *)v154 + 12);
  v139 = v148[2];
  v140 = v149;
  v141 = v150;
  v142 = v151;
  v137 = v148[0];
  v138 = v148[1];
  sub_1D482947C((uint64_t)v146, &v137, (uint64_t)v135);
  sub_1D46C6AE4((uint64_t)v168, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_1D46C6B50);
  sub_1D46A48AC((uint64_t)v148);
  v143 = v135[6];
  v144 = v135[7];
  v145[0] = v136[0];
  *(_OWORD *)((char *)v145 + 12) = *(_OWORD *)((char *)v136 + 12);
  v139 = v135[2];
  v140 = v135[3];
  v141 = v135[4];
  v142 = v135[5];
  v109 = v135[0];
  v110 = v135[1];
LABEL_37:
  v137 = v109;
  v138 = v110;
  faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v137);
  sub_1D46A4760((uint64_t)&v137, (uint64_t)v146);
  v112 = v121;
  v111 = v122;
  v114 = v119;
  v113 = v120;
  sub_1D46A4760((uint64_t)v146, v134);
  v84 = v111;
  v85 = v112;
  v86 = v124;
  v87 = v113;
  v88 = v114;
  v89 = v77;
  v90 = v33;
LABEL_38:
  sub_1D46A4970(v84, v85, v86, v87, v88, v89, v90);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4707EC0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(_QWORD, _QWORD, _QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  unsigned int (*v50)(_QWORD, _QWORD, _QWORD);
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D6F8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v50 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CD70);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DomainAssignmentSignals.ImageMetadata(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for DomainAssignmentSignals(0);
  sub_1D469C5EC(a1 + *(int *)(v20 + 24), (uint64_t)v15, &qword_1ED98CD70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1D46992EC((uint64_t)v15, &qword_1ED98CD70);
    return 0;
  }
  sub_1D470837C((uint64_t)v15, (uint64_t)v19);
  sub_1D469C5EC((uint64_t)v19, (uint64_t)v12, &qword_1ED98CAF0);
  v21 = sub_1D4920F18();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v22 + 48);
  if (v23(v12, 1, v21) == 1)
  {
    sub_1D46992EC((uint64_t)v12, &qword_1ED98CAF0);
  }
  else
  {
    v55 = v16;
    v56 = v10;
    v24 = sub_1D4920E88();
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v21);
    v27 = *v2;
    v28 = *(_QWORD *)(*v2 + 16);
    if (v28)
    {
      v50 = v23;
      v51 = v22;
      v52 = v21;
      v53 = v2;
      v57 = v19;
      v29 = sub_1D4921008();
      v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
      swift_bridgeObjectRetain();
      v54 = v27;
      v31 = (uint64_t *)(v27 + 40);
      while (1)
      {
        v32 = *(v31 - 1);
        v33 = *v31;
        v60 = v24;
        v61 = v26;
        v58 = v32;
        v59 = v33;
        v30(v6, 1, 1, v29);
        sub_1D4696FE8();
        swift_bridgeObjectRetain();
        sub_1D4922AB4();
        v35 = v34;
        sub_1D46992EC((uint64_t)v6, &qword_1ED98D6F8);
        swift_bridgeObjectRelease();
        if ((v35 & 1) == 0)
          goto LABEL_22;
        v31 += 2;
        if (!--v28)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v10 = v56;
          v19 = v57;
          v21 = v52;
          v2 = v53;
          v16 = v55;
          v23 = v50;
          v22 = v51;
          goto LABEL_11;
        }
      }
    }
    swift_bridgeObjectRelease();
    v16 = v55;
    v10 = v56;
  }
LABEL_11:
  sub_1D469C5EC((uint64_t)&v19[*(int *)(v16 + 20)], (uint64_t)v10, &qword_1ED98CAF0);
  if (v23(v10, 1, v21) == 1)
  {
    sub_1D46992EC((uint64_t)v10, &qword_1ED98CAF0);
LABEL_20:
    sub_1D4697DE0((uint64_t)v19, type metadata accessor for DomainAssignmentSignals.ImageMetadata);
    return 0;
  }
  v36 = sub_1D4920E88();
  v37 = v2;
  v39 = v38;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v21);
  v40 = (char *)v37[1];
  v41 = *((_QWORD *)v40 + 2);
  if (!v41)
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v57 = v19;
  v42 = sub_1D4921008();
  v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56);
  swift_bridgeObjectRetain();
  v56 = v40;
  v44 = (uint64_t *)(v40 + 40);
  while (1)
  {
    v45 = *(v44 - 1);
    v46 = *v44;
    v60 = v36;
    v61 = v39;
    v58 = v45;
    v59 = v46;
    v43(v6, 1, 1, v42);
    sub_1D4696FE8();
    swift_bridgeObjectRetain();
    sub_1D4922AB4();
    v48 = v47;
    sub_1D46992EC((uint64_t)v6, &qword_1ED98D6F8);
    swift_bridgeObjectRelease();
    if ((v48 & 1) == 0)
      break;
    v44 += 2;
    if (!--v41)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = v57;
      goto LABEL_20;
    }
  }
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D4697DE0((uint64_t)v57, type metadata accessor for DomainAssignmentSignals.ImageMetadata);
  return 1;
}

uint64_t sub_1D4708370()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t sub_1D470837C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DomainAssignmentSignals.ImageMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D47083C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

void sub_1D47083E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  void *v10;

  v10 = (void *)MEMORY[0x1D82629A0]();
  a5(a1, a2, a3, a4);
  objc_autoreleasePoolPop(v10);
}

uint64_t sub_1D4708448(id a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  id v31;
  void *v32;
  char v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  void (*v43)(_QWORD, _QWORD, _QWORD);
  void (*v44)(char *, uint64_t);
  NSObject *v45;
  os_log_type_t v46;
  _BOOL4 v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  void (*v53)(_QWORD, _QWORD, _QWORD);
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t result;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  int64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  unint64_t v77;
  int64_t v78;
  unint64_t v79;
  int64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t *v93;
  void *v94;
  void *v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  id v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t *v105;
  void *v106;
  void *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  NSObject *v111;
  os_log_type_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  unint64_t v121;
  unint64_t v122;
  char v123;
  id v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  uint64_t *v135;
  void *v136;
  void *v137;
  uint64_t *v138;
  char *v139;
  uint64_t v140;
  NSObject *v141;
  os_log_type_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t *v146;
  void *v147;
  void *v148;
  uint64_t *v149;
  uint64_t v150;
  char *v151;
  NSObject *v152;
  os_log_type_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  unint64_t v158;
  char *v159;
  uint64_t *v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v165;
  NSObject *v166;
  os_log_type_t v167;
  int v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  unint64_t v173;
  uint64_t v174;
  unint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  unint64_t v180;
  unint64_t v181;
  __int128 v182;
  uint64_t v183;
  __int128 v184;
  void (*v185)(char *, uint64_t);
  uint64_t v186;
  int64_t v187;
  uint64_t v188;
  unint64_t v189;
  uint64_t v190;
  id v191;
  char *v192;
  char *v193;
  char *v194;
  uint64_t v195;
  int64_t v196;
  char *v197;
  uint64_t v198;
  _QWORD *v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;

  v2 = sub_1D4922370();
  v200 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v178 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v193 = (char *)&v178 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v194 = (char *)&v178 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v197 = (char *)&v178 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v192 = (char *)&v178 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v190 = (uint64_t)&v178 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v201 = (char *)&v178 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v199 = (uint64_t *)((char *)&v178 - v19);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v178 - v21;
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)&v178 - v24;
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)&v178 - v27;
  MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v178 - v29;
  v31 = objc_msgSend(a1, sel_bundleIdentifier);
  if (!v31
    || (v32 = v31,
        sub_1D492261C(),
        v191 = a1,
        v32,
        v33 = sub_1D4922778(),
        a1 = v191,
        swift_bridgeObjectRelease(),
        (v33 & 1) == 0))
  {
    sub_1D470C76C((uint64_t)v5);
    v54 = sub_1D4922358();
    v55 = sub_1D492291C();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v56 = 0;
      _os_log_impl(&dword_1D467C000, v54, v55, "Models bundle has inappropriate Bundle ID", v56, 2u);
      MEMORY[0x1D82635B8](v56, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v200 + 8))(v5, v2);
    return 0;
  }
  v34 = objc_msgSend(a1, sel_infoDictionary);
  if (!v34)
  {
    sub_1D470C76C((uint64_t)v30);
    v58 = sub_1D4922358();
    v59 = sub_1D492291C();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v60 = 0;
      _os_log_impl(&dword_1D467C000, v58, v59, "Cannot access MLModels Meta bundle Info.plist", v60, 2u);
      MEMORY[0x1D82635B8](v60, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v200 + 8))(v30, v2);
    return 0;
  }
  v35 = v34;
  v36 = MEMORY[0x1E0DEE9B8];
  v37 = sub_1D4922544();

  v38 = sub_1D47C4AF4(MEMORY[0x1E0DEE9D8]);
  v39 = *(_QWORD *)(v37 + 16);
  v181 = v38;
  if (!v39)
  {
    v203 = 0u;
    v204 = 0u;
    swift_bridgeObjectRetain();
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  v40 = sub_1D47CA4DC(0x63617073656D614ELL, 0xEF736C65646F4D65);
  if ((v41 & 1) == 0)
  {
    v203 = 0u;
    v204 = 0u;
    goto LABEL_19;
  }
  sub_1D4696FAC(*(_QWORD *)(v37 + 56) + 32 * v40, (uint64_t)&v203);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v204 + 1))
  {
LABEL_20:
    swift_bridgeObjectRelease();
    sub_1D4709F54((uint64_t)&v203);
    sub_1D470C76C((uint64_t)v28);
    v61 = sub_1D4922358();
    v62 = sub_1D492291C();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc();
      v64 = swift_slowAlloc();
      *(_QWORD *)&v205 = v64;
      *(_DWORD *)v63 = 136315138;
      *(_QWORD *)&v203 = sub_1D47F0250(0x63617073656D614ELL, 0xEF736C65646F4D65, (uint64_t *)&v205);
      sub_1D4922A78();
      _os_log_impl(&dword_1D467C000, v61, v62, "The %s key is missing", v63, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v64, -1, -1);
      MEMORY[0x1D82635B8](v63, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v200 + 8))(v28, v2);
    goto LABEL_23;
  }
  sub_1D46FADFC(&v203, &v205);
  sub_1D4696FAC((uint64_t)&v205, (uint64_t)&v203);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D0F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1D470C76C((uint64_t)v25);
    v65 = sub_1D4922358();
    v66 = sub_1D492291C();
    if (os_log_type_enabled(v65, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc();
      v68 = swift_slowAlloc();
      *(_QWORD *)&v203 = v68;
      *(_DWORD *)v67 = 136315138;
      v202 = sub_1D47F0250(0x63617073656D614ELL, 0xEF736C65646F4D65, (uint64_t *)&v203);
      sub_1D4922A78();
      _os_log_impl(&dword_1D467C000, v65, v66, "The %s key has invalid data", v67, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v68, -1, -1);
      MEMORY[0x1D82635B8](v67, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v200 + 8))(v25, v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v205);
LABEL_23:
    swift_bridgeObjectRelease();
    return 0;
  }
  v42 = v202;
  v179 = sub_1D47C4C8C(MEMORY[0x1E0DEE9D8]);
  sub_1D470C76C((uint64_t)v22);
  v43 = (void (*)(_QWORD, _QWORD, _QWORD))v199;
  sub_1D470C928((uint64_t)v199);
  v44 = *(void (**)(char *, uint64_t))(v200 + 8);
  v44(v22, v2);
  swift_bridgeObjectRetain_n();
  v45 = sub_1D4922358();
  v46 = sub_1D4922910();
  v47 = os_log_type_enabled(v45, v46);
  v185 = v44;
  if (v47)
  {
    v48 = (uint8_t *)swift_slowAlloc();
    v49 = swift_slowAlloc();
    *(_QWORD *)&v203 = v49;
    *(_DWORD *)v48 = 136315138;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D0E0);
    v50 = sub_1D4922550();
    v52 = v51;
    swift_bridgeObjectRelease();
    v202 = sub_1D47F0250(v50, v52, (uint64_t *)&v203);
    v36 = MEMORY[0x1E0DEE9B8];
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    v44 = v185;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D467C000, v45, v46, "MLModelsMetaBundle.init(): namespaceDict = %s", v48, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v49, -1, -1);
    MEMORY[0x1D82635B8](v48, -1, -1);

    v53 = (void (*)(_QWORD, _QWORD, _QWORD))v199;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v53 = v43;
  }
  result = ((uint64_t (*)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t))v44)(v53, v2);
  v70 = (uint64_t)v192;
  v71 = 0;
  v72 = *(_QWORD *)(v42 + 64);
  v186 = v42 + 64;
  v73 = 1 << *(_BYTE *)(v42 + 32);
  v74 = -1;
  if (v73 < 64)
    v74 = ~(-1 << v73);
  v75 = v74 & v72;
  v187 = (unint64_t)(v73 + 63) >> 6;
  v189 = (unint64_t)"neric";
  v180 = 0x80000001D493F830;
  *(_QWORD *)&v69 = 136315394;
  v184 = v69;
  v183 = v36 + 8;
  *(_QWORD *)&v69 = 136315138;
  v182 = v69;
  v188 = v42;
  while (1)
  {
    if (v75)
    {
      v195 = (v75 - 1) & v75;
      v196 = v71;
      v77 = __clz(__rbit64(v75)) | (v71 << 6);
      goto LABEL_50;
    }
    v78 = v71 + 1;
    if (__OFADD__(v71, 1))
    {
      __break(1u);
LABEL_136:
      __break(1u);
      return result;
    }
    if (v78 >= v187)
      goto LABEL_131;
    v79 = *(_QWORD *)(v186 + 8 * v78);
    v80 = v71 + 1;
    if (!v79)
    {
      v80 = v71 + 2;
      if (v71 + 2 >= v187)
        goto LABEL_131;
      v79 = *(_QWORD *)(v186 + 8 * v80);
      if (!v79)
      {
        v80 = v71 + 3;
        if (v71 + 3 >= v187)
          goto LABEL_131;
        v79 = *(_QWORD *)(v186 + 8 * v80);
        if (!v79)
          break;
      }
    }
LABEL_49:
    v195 = (v79 - 1) & v79;
    v196 = v80;
    v77 = __clz(__rbit64(v79)) + (v80 << 6);
LABEL_50:
    v82 = (uint64_t *)(*(_QWORD *)(v42 + 48) + 16 * v77);
    v83 = *v82;
    v84 = v82[1];
    v85 = *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v77);
    v86 = qword_1ED98F398;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v86 != -1)
      swift_once();
    v198 = v83;
    if ((byte_1ED98F388 & 1) == 0)
      goto LABEL_66;
    v87 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v88 = objc_msgSend(v87, sel_bundleIdentifier);

    if (v88)
    {
      v89 = sub_1D492261C();
      v91 = v90;

      if (v89 == 0xD00000000000002BLL && v91 == v180)
      {
        swift_bridgeObjectRelease();
LABEL_58:
        v93 = &qword_1EFEAA908;
        if (qword_1EFEA9C20 != -1)
        {
          swift_once();
          v93 = &qword_1EFEAA908;
        }
        goto LABEL_62;
      }
      v92 = sub_1D4922E38();
      swift_bridgeObjectRelease();
      if ((v92 & 1) != 0)
        goto LABEL_58;
    }
    v93 = (uint64_t *)&off_1ED98F3F0;
    if (qword_1ED98F3A8 != -1)
    {
      swift_once();
      v93 = (uint64_t *)&off_1ED98F3F0;
    }
LABEL_62:
    v94 = *(void **)(*v93 + 32);
    swift_retain();
    v95 = (void *)sub_1D49225F8();
    LODWORD(v94) = objc_msgSend(v94, sel_BOOLForKey_, v95);
    swift_release();

    v83 = v198;
    if ((_DWORD)v94)
    {
      if (qword_1EFEA9C78 != -1)
        swift_once();
      v96 = v2;
      v97 = qword_1EFEAAA30;
      goto LABEL_69;
    }
LABEL_66:
    if (qword_1ED98F3D0 != -1)
      swift_once();
    v96 = v2;
    v97 = qword_1ED98F3B0;
LABEL_69:
    v98 = __swift_project_value_buffer(v96, (uint64_t)v97);
    v199 = *(_QWORD **)(v200 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v199)(v201, v98, v2);
    if ((byte_1ED98F388 & 1) == 0)
      goto LABEL_81;
    v99 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v100 = objc_msgSend(v99, sel_bundleIdentifier);

    if (v100)
    {
      v101 = sub_1D492261C();
      v103 = v102;

      if (v101 == 0xD00000000000002BLL && v103 == (v189 | 0x8000000000000000))
      {
        swift_bridgeObjectRelease();
LABEL_75:
        v105 = &qword_1EFEAA908;
        if (qword_1EFEA9C20 != -1)
        {
          swift_once();
          v105 = &qword_1EFEAA908;
        }
        goto LABEL_79;
      }
      v104 = sub_1D4922E38();
      swift_bridgeObjectRelease();
      if ((v104 & 1) != 0)
        goto LABEL_75;
    }
    v105 = (uint64_t *)&off_1ED98F3F0;
    if (qword_1ED98F3A8 != -1)
    {
      swift_once();
      v105 = (uint64_t *)&off_1ED98F3F0;
    }
LABEL_79:
    v106 = *(void **)(*v105 + 32);
    swift_retain();
    v107 = (void *)sub_1D49225F8();
    LODWORD(v106) = objc_msgSend(v106, sel_BOOLForKey_, v107);
    swift_release();

    v83 = v198;
    if ((_DWORD)v106)
    {
      v108 = v197;
      v109 = v197;
      v110 = (uint64_t)v201;
      goto LABEL_84;
    }
LABEL_81:
    if (qword_1ED98F3D0 != -1)
      swift_once();
    v110 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED98F3B0);
    v108 = v197;
    v109 = v197;
LABEL_84:
    ((void (*)(char *, uint64_t, uint64_t))v199)(v109, v110, v2);
    v44(v201, v2);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v111 = sub_1D4922358();
    v112 = sub_1D4922910();
    if (os_log_type_enabled(v111, v112))
    {
      v113 = swift_slowAlloc();
      v114 = swift_slowAlloc();
      *(_QWORD *)&v203 = v114;
      *(_DWORD *)v113 = v184;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v113 + 4) = sub_1D47F0250(v83, v84, (uint64_t *)&v203);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v113 + 12) = 2080;
      swift_bridgeObjectRetain();
      v115 = sub_1D4922550();
      v117 = v116;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v113 + 14) = sub_1D47F0250(v115, v117, (uint64_t *)&v203);
      swift_bridgeObjectRelease_n();
      v44 = v185;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D467C000, v111, v112, "MLModelsMetaBundle.init(): loading trial role %s %s", (uint8_t *)v113, 0x16u);
      swift_arrayDestroy();
      v118 = v114;
      v70 = (uint64_t)v192;
      MEMORY[0x1D82635B8](v118, -1, -1);
      MEMORY[0x1D82635B8](v113, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v44(v108, v2);
    swift_bridgeObjectRetain();
    v119 = sub_1D4922CA0();
    swift_bridgeObjectRelease();
    if (v119 < 7)
    {
      swift_bridgeObjectRelease();
      if (!*(_QWORD *)(v85 + 16)
        || (sub_1D47CA4DC(0x63617073656D616ELL, 0xE900000000000065), (v120 & 1) == 0)
        || (swift_bridgeObjectRetain(), v121 = sub_1D4922CA0(), swift_bridgeObjectRelease(), v121 > 4)
        || !*(_QWORD *)(v85 + 16)
        || (v122 = sub_1D47CA4DC(0x6D614E6C65646F6DLL, 0xE900000000000065), (v123 & 1) == 0))
      {
        if (byte_1ED98F388 != 1)
          goto LABEL_123;
        v124 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
        v125 = objc_msgSend(v124, sel_bundleIdentifier);

        if (v125)
        {
          v126 = sub_1D492261C();
          v128 = v127;

          if (v126 == 0xD00000000000002BLL && v128 == (v189 | 0x8000000000000000))
          {
            swift_bridgeObjectRelease();
LABEL_116:
            v146 = &qword_1EFEAA908;
            if (qword_1EFEA9C20 != -1)
            {
              swift_once();
              v146 = &qword_1EFEAA908;
            }
LABEL_120:
            v147 = *(void **)(*v146 + 32);
            swift_retain();
            v148 = (void *)sub_1D49225F8();
            LODWORD(v147) = objc_msgSend(v147, sel_BOOLForKey_, v148);
            swift_release();

            if ((_DWORD)v147)
            {
              v149 = qword_1EFEAAA30;
              if (qword_1EFEA9C78 != -1)
              {
                swift_once();
                v149 = qword_1EFEAAA30;
              }
              goto LABEL_125;
            }
LABEL_123:
            v149 = qword_1ED98F3B0;
            if (qword_1ED98F3D0 != -1)
            {
              swift_once();
              v149 = qword_1ED98F3B0;
            }
LABEL_125:
            v150 = __swift_project_value_buffer(v2, (uint64_t)v149);
            v151 = v193;
            ((void (*)(char *, uint64_t, uint64_t))v199)(v193, v150, v2);
            swift_bridgeObjectRetain();
            v152 = sub_1D4922358();
            v153 = sub_1D492291C();
            if (os_log_type_enabled(v152, v153))
            {
              v154 = swift_slowAlloc();
              v155 = swift_slowAlloc();
              *(_QWORD *)&v203 = v155;
              *(_DWORD *)v154 = v182;
              swift_bridgeObjectRetain();
              v156 = sub_1D4922550();
              v158 = v157;
              swift_bridgeObjectRelease();
              *(_QWORD *)(v154 + 4) = sub_1D47F0250(v156, v158, (uint64_t *)&v203);
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1D467C000, v152, v153, "Malformed trial identifiers: %s", (uint8_t *)v154, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1D82635B8](v155, -1, -1);
              MEMORY[0x1D82635B8](v154, -1, -1);

              v159 = v193;
            }
            else
            {

              swift_bridgeObjectRelease_n();
              v159 = v151;
            }
            result = ((uint64_t (*)(char *, uint64_t))v44)(v159, v2);
LABEL_129:
            v42 = v188;
            goto LABEL_33;
          }
          v145 = sub_1D4922E38();
          swift_bridgeObjectRelease();
          if ((v145 & 1) != 0)
            goto LABEL_116;
        }
        v146 = (uint64_t *)&off_1ED98F3F0;
        if (qword_1ED98F3A8 != -1)
        {
          swift_once();
          v146 = (uint64_t *)&off_1ED98F3F0;
        }
        goto LABEL_120;
      }
      v160 = (uint64_t *)(*(_QWORD *)(v85 + 56) + 16 * v122);
      v161 = *v160;
      v162 = v160[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v163 = v179;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v203 = v163;
      sub_1D47AADA8(v161, v162, v121, v119, isUniquelyReferenced_nonNull_native);
      v179 = v203;
      result = swift_bridgeObjectRelease();
      goto LABEL_129;
    }
    swift_bridgeObjectRelease();
    v42 = v188;
    if (byte_1ED98F388 != 1)
    {
LABEL_111:
      v138 = qword_1ED98F3B0;
      v139 = v194;
      if (qword_1ED98F3D0 != -1)
      {
        swift_once();
        v138 = qword_1ED98F3B0;
      }
      goto LABEL_113;
    }
    v129 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v130 = objc_msgSend(v129, sel_bundleIdentifier);

    if (v130)
    {
      v131 = sub_1D492261C();
      v133 = v132;

      if (v131 == 0xD00000000000002BLL && v133 == (v189 | 0x8000000000000000))
      {
        swift_bridgeObjectRelease();
LABEL_104:
        v135 = &qword_1EFEAA908;
        if (qword_1EFEA9C20 != -1)
        {
          swift_once();
          v135 = &qword_1EFEAA908;
        }
        goto LABEL_108;
      }
      v134 = sub_1D4922E38();
      swift_bridgeObjectRelease();
      if ((v134 & 1) != 0)
        goto LABEL_104;
    }
    v135 = (uint64_t *)&off_1ED98F3F0;
    if (qword_1ED98F3A8 != -1)
    {
      swift_once();
      v135 = (uint64_t *)&off_1ED98F3F0;
    }
LABEL_108:
    v136 = *(void **)(*v135 + 32);
    swift_retain();
    v137 = (void *)sub_1D49225F8();
    LODWORD(v136) = objc_msgSend(v136, sel_BOOLForKey_, v137);
    swift_release();

    if (!(_DWORD)v136)
      goto LABEL_111;
    v138 = qword_1EFEAAA30;
    v139 = v194;
    if (qword_1EFEA9C78 != -1)
    {
      swift_once();
      v138 = qword_1EFEAAA30;
    }
LABEL_113:
    v140 = __swift_project_value_buffer(v2, (uint64_t)v138);
    ((void (*)(char *, uint64_t, uint64_t))v199)(v139, v140, v2);
    swift_bridgeObjectRetain();
    v141 = sub_1D4922358();
    v142 = sub_1D492291C();
    if (os_log_type_enabled(v141, v142))
    {
      v143 = swift_slowAlloc();
      v144 = swift_slowAlloc();
      *(_QWORD *)&v203 = v144;
      *(_DWORD *)v143 = v182;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v143 + 4) = sub_1D47F0250(v198, v84, (uint64_t *)&v203);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D467C000, v141, v142, "Unknown role: %s", (uint8_t *)v143, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v144, -1, -1);
      MEMORY[0x1D82635B8](v143, -1, -1);

      v76 = v194;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v76 = v139;
    }
    result = ((uint64_t (*)(char *, uint64_t))v44)(v76, v2);
LABEL_33:
    v75 = v195;
    v71 = v196;
  }
  v81 = v71 + 4;
  if (v71 + 4 < v187)
  {
    v79 = *(_QWORD *)(v186 + 8 * v81);
    if (!v79)
    {
      while (1)
      {
        v80 = v81 + 1;
        if (__OFADD__(v81, 1))
          goto LABEL_136;
        if (v80 >= v187)
          goto LABEL_131;
        v79 = *(_QWORD *)(v186 + 8 * v80);
        ++v81;
        if (v79)
          goto LABEL_49;
      }
    }
    v80 = v71 + 4;
    goto LABEL_49;
  }
LABEL_131:
  swift_release();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v165 = v190;
  sub_1D470C76C(v190);
  sub_1D470C928(v70);
  v44((char *)v165, v2);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v166 = sub_1D4922358();
  v167 = sub_1D4922910();
  v168 = v167;
  if (os_log_type_enabled(v166, v167))
  {
    v169 = swift_slowAlloc();
    LODWORD(v201) = v168;
    v170 = v169;
    v200 = swift_slowAlloc();
    *(_QWORD *)&v203 = v200;
    *(_DWORD *)v170 = v184;
    sub_1D4920F18();
    sub_1D4709F94();
    swift_bridgeObjectRetain();
    v171 = sub_1D4922550();
    v173 = v172;
    swift_bridgeObjectRelease();
    v202 = sub_1D47F0250(v171, v173, (uint64_t *)&v203);
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v170 + 12) = 2080;
    swift_bridgeObjectRetain();
    v174 = sub_1D4922550();
    v176 = v175;
    swift_bridgeObjectRelease();
    v202 = sub_1D47F0250(v174, v176, (uint64_t *)&v203);
    sub_1D4922A78();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D467C000, v166, (os_log_type_t)v201, "MLModelsMetaBundle.init(): %s %s", (uint8_t *)v170, 0x16u);
    v177 = v200;
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v177, -1, -1);
    MEMORY[0x1D82635B8](v170, -1, -1);

    v185(v192, v2);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    v44((char *)v70, v2);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v205);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v181;
}

uint64_t sub_1D4709F54(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABDD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D4709F94()
{
  unint64_t result;

  result = qword_1ED98ED70;
  if (!qword_1ED98ED70)
  {
    result = MEMORY[0x1D82634E0](&unk_1D49333BC, &type metadata for MLModelRole);
    atomic_store(result, (unint64_t *)&qword_1ED98ED70);
  }
  return result;
}

uint64_t *sub_1D4709FD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 32);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    a1[4] = a2[4];
    v10 = sub_1D492201C();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_1D470A0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_1D492201C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1D470A10C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D492201C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *sub_1D470A1B4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D492201C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1D470A278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 32);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *sub_1D470A2DC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D492201C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1D470A378()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D470A384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D492201C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_1D470A400()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D470A40C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1D492201C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98D430);
}

uint64_t sub_1D470A494()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D492201C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1D470A518(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

unint64_t sub_1D470A528@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

_QWORD *sub_1D470A540@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;
  char v3;

  v2 = *result >= 3uLL;
  *(_QWORD *)a2 = *result;
  v3 = !v2;
  *(_BYTE *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_1D470A55C()
{
  sub_1D4922EF8();
  sub_1D49225B0();
  return sub_1D4922F34();
}

uint64_t sub_1D470A5C4()
{
  sub_1D470BCA8();
  return sub_1D492207C();
}

uint64_t sub_1D470A5FC()
{
  sub_1D4922EF8();
  sub_1D49225B0();
  return sub_1D4922F34();
}

void sub_1D470A660()
{
  qword_1EFEC2D38 = (uint64_t)&unk_1E97FD940;
}

uint64_t sub_1D470A674@<X0>(_QWORD *a1@<X8>)
{
  if (qword_1EFEA9C50 != -1)
    swift_once();
  *a1 = qword_1EFEC2D38;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D470A6C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_1D4922328();
  __swift_allocate_value_buffer(v0, qword_1ED9A4988);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED9A4988);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D4927560;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "finger_print_model_name";
  *(_QWORD *)(v7 + 8) = 23;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF20];
  v9 = sub_1D4922304();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "parse_flow_domin_model_mapper";
  *(_QWORD *)(v11 + 8) = 29;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "search_flow_domin_model_mapper";
  *((_QWORD *)v13 + 1) = 30;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "search_victoria_domin_model_mapper";
  *((_QWORD *)v15 + 1) = 34;
  v15[16] = 2;
  v10();
  return sub_1D4922310();
}

uint64_t sub_1D470A884()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1D49220AC();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_1D492216C();
          break;
        case 2:
          sub_1D470A970();
          break;
        case 3:
          sub_1D470AA3C();
          break;
        case 4:
          sub_1D470AB08();
          break;
        default:
          break;
      }
      result = sub_1D49220AC();
    }
  }
  return result;
}

uint64_t sub_1D470A970()
{
  sub_1D4921FF8();
  type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels(0);
  sub_1D4696EA4(&qword_1ED98D668, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels, (uint64_t)&unk_1D492A978);
  sub_1D4696EA4(&qword_1ED98D670, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels, (uint64_t)&unk_1D492A8B0);
  return sub_1D4922094();
}

uint64_t sub_1D470AA3C()
{
  sub_1D4921FF8();
  type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels(0);
  sub_1D4696EA4(&qword_1ED98D668, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels, (uint64_t)&unk_1D492A978);
  sub_1D4696EA4(&qword_1ED98D670, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels, (uint64_t)&unk_1D492A8B0);
  return sub_1D4922094();
}

uint64_t sub_1D470AB08()
{
  sub_1D4921FF8();
  type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels(0);
  sub_1D4696EA4(&qword_1ED98D668, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels, (uint64_t)&unk_1D492A978);
  sub_1D4696EA4(&qword_1ED98D670, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels, (uint64_t)&unk_1D492A8B0);
  return sub_1D4922094();
}

uint64_t sub_1D470ABD4()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_1D49222C8(), !v1))
  {
    if (!*(_QWORD *)(v0[2] + 16)
      || (sub_1D4921FF8(),
          type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels(0),
          sub_1D4696EA4(&qword_1ED98D668, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels, (uint64_t)&unk_1D492A978), sub_1D4696EA4(&qword_1ED98D670, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels, (uint64_t)&unk_1D492A8B0), result = sub_1D4922214(), !v1))
    {
      if (!*(_QWORD *)(v0[3] + 16)
        || (sub_1D4921FF8(),
            type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels(0),
            sub_1D4696EA4(&qword_1ED98D668, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels, (uint64_t)&unk_1D492A978), sub_1D4696EA4(&qword_1ED98D670, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels, (uint64_t)&unk_1D492A8B0), result = sub_1D4922214(), !v1))
      {
        if (!*(_QWORD *)(v0[4] + 16)
          || (sub_1D4921FF8(),
              type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels(0),
              sub_1D4696EA4(&qword_1ED98D668, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels, (uint64_t)&unk_1D492A978), sub_1D4696EA4(&qword_1ED98D670, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels, (uint64_t)&unk_1D492A8B0), result = sub_1D4922214(), !v1))
        {
          type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig(0);
          return sub_1D4922004();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1D470AE54@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  *a1 = 0;
  a1[1] = 0xE000000000000000;
  v2 = MEMORY[0x1E0DEE9D8];
  a1[2] = sub_1D47C3B44(MEMORY[0x1E0DEE9D8]);
  a1[3] = sub_1D47C3B44(v2);
  a1[4] = sub_1D47C3B44(v2);
  return sub_1D4922010();
}

unint64_t sub_1D470AEBC()
{
  return 0xD00000000000002FLL;
}

uint64_t sub_1D470AED8()
{
  return sub_1D470A884();
}

uint64_t sub_1D470AEEC()
{
  return sub_1D470ABD4();
}

uint64_t sub_1D470AF00()
{
  sub_1D4696EA4(&qword_1EFEAAA00, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig, (uint64_t)&unk_1D492AAD0);
  return sub_1D4922070();
}

uint64_t sub_1D470AF50@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1ED98D428, (uint64_t)qword_1ED9A4988, a1);
}

uint64_t sub_1D470AF6C()
{
  sub_1D4696EA4((unint64_t *)&qword_1ED98D698, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig, (uint64_t)&unk_1D492AB08);
  return sub_1D49221D8();
}

uint64_t sub_1D470AFAC()
{
  sub_1D4696EA4((unint64_t *)&qword_1ED98D698, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig, (uint64_t)&unk_1D492AB08);
  return sub_1D49221F0();
}

uint64_t sub_1D470B000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_1D4922328();
  __swift_allocate_value_buffer(v0, qword_1EFEC2D40);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EFEC2D40);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D4927210;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "PARSE";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1D4922304();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "SEARCH";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "SEARCH_VICTORIA";
  *(_QWORD *)(v12 + 8) = 15;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_1D4922310();
}

uint64_t sub_1D470B190@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1EFEA9C60, (uint64_t)qword_1EFEC2D40, a1);
}

uint64_t sub_1D470B1AC()
{
  uint64_t result;

  result = sub_1D492270C();
  qword_1EFEC2D58 = 0xD00000000000002FLL;
  unk_1EFEC2D60 = 0x80000001D4941220;
  return result;
}

uint64_t sub_1D470B220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_1D4922328();
  __swift_allocate_value_buffer(v0, qword_1ED9A4A28);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED9A4A28);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D3E0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D230);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1D49273C0;
  v5 = v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v4 + v3) = 1;
  *(_QWORD *)v5 = "domain_model_names";
  *(_QWORD *)(v5 + 8) = 18;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x1E0D3EF20];
  v7 = sub_1D4922304();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  return sub_1D4922310();
}

uint64_t sub_1D470B324()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_1D49220AC();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 1)
      sub_1D4922130();
  }
  return result;
}

uint64_t sub_1D470B390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16) || (result = sub_1D49222B0(), !v1))
  {
    type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels(0);
    return sub_1D4922004();
  }
  return result;
}

uint64_t sub_1D470B424()
{
  uint64_t v0;

  if (qword_1EFEA9C68 != -1)
    swift_once();
  v0 = qword_1EFEC2D58;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1D470B480()
{
  return sub_1D470B324();
}

uint64_t sub_1D470B494()
{
  return sub_1D470B390();
}

uint64_t sub_1D470B4A8()
{
  sub_1D4696EA4(&qword_1EFEAAA08, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels, (uint64_t)&unk_1D492A940);
  return sub_1D4922070();
}

uint64_t sub_1D470B4F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D46ECB80(&qword_1ED98D660, (uint64_t)qword_1ED9A4A28, a1);
}

uint64_t sub_1D470B514()
{
  sub_1D4696EA4(&qword_1ED98D668, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels, (uint64_t)&unk_1D492A978);
  return sub_1D49221D8();
}

uint64_t sub_1D470B554()
{
  sub_1D4696EA4(&qword_1ED98D668, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels, (uint64_t)&unk_1D492A978);
  return sub_1D49221F0();
}

uint64_t sub_1D470B5A8()
{
  return sub_1D4696EA4(&qword_1ED98D678, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels, (uint64_t)&unk_1D492A888);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels(uint64_t a1)
{
  return sub_1D469C2D0(a1, (uint64_t *)&unk_1ED98D688);
}

uint64_t sub_1D470B5E8()
{
  return sub_1D4696EA4(&qword_1ED98D668, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels, (uint64_t)&unk_1D492A978);
}

uint64_t sub_1D470B614()
{
  return sub_1D4696EA4(&qword_1ED98D670, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels, (uint64_t)&unk_1D492A8B0);
}

uint64_t sub_1D470B640()
{
  return sub_1D4696EA4(&qword_1ED98D680, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels, (uint64_t)&unk_1D492A8F0);
}

uint64_t sub_1D470B66C()
{
  return sub_1D4696EA4(&qword_1EFEAA9E0, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig, (uint64_t)&unk_1D492AA18);
}

uint64_t sub_1D470B698()
{
  return sub_1D4696EA4((unint64_t *)&qword_1ED98D698, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig, (uint64_t)&unk_1D492AB08);
}

uint64_t sub_1D470B6C4()
{
  return sub_1D4696EA4(&qword_1EFEAA9E8, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig, (uint64_t)&unk_1D492AA40);
}

uint64_t sub_1D470B6F0()
{
  return sub_1D4696EA4((unint64_t *)&unk_1ED98D6A0, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig, (uint64_t)&unk_1D492AA80);
}

unint64_t sub_1D470B720()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFEAA9F0;
  if (!qword_1EFEAA9F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFEAA9F8);
    result = MEMORY[0x1D82634E0](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EFEAA9F0);
  }
  return result;
}

uint64_t sub_1D470B76C(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_1D492201C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v18 - v9;
  v11 = *a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1);
  if (v11 || (v12 = 0, (sub_1D4922E38() & 1) != 0))
  {
    if ((sub_1D46EE338(a1[2], *((_QWORD *)a2 + 2)) & 1) != 0
      && (sub_1D46EE338(a1[3], *((_QWORD *)a2 + 3)) & 1) != 0
      && (sub_1D46EE338(a1[4], *((_QWORD *)a2 + 4)) & 1) != 0)
    {
      v13 = type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig(0);
      v14 = (char *)a1 + *(int *)(v13 + 32);
      v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v15(v10, v14, v4);
      v15(v8, &a2[*(int *)(v13 + 32)], v4);
      sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
      v12 = sub_1D49225E0();
      v16 = *(void (**)(char *, uint64_t))(v5 + 8);
      v16(v8, v4);
      v16(v10, v4);
    }
    else
    {
      v12 = 0;
    }
  }
  return v12 & 1;
}

uint64_t sub_1D470B8E4(_QWORD **a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_1D492201C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - v9;
  if ((sub_1D489D780(*a1, *(_QWORD **)a2) & 1) != 0)
  {
    v11 = type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels(0);
    v12 = (char *)a1 + *(int *)(v11 + 20);
    v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, &a2[*(int *)(v11 + 20)], v4);
    sub_1D4696EA4(&qword_1EFEAA420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v14 = sub_1D49225E0();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Argos_Protos_MLModel_ArrayFeatureType.ArrayDataType(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Argos_Protos_MLModel_ArrayFeatureType.ArrayDataType(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_1D470BA7C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1D470BA98(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.FlowType()
{
  return &type metadata for Argos_Protos_Queryflow_DomainModelMappingConfig.FlowType;
}

uint64_t sub_1D470BAC8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D470BAD4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D492201C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1D470BB50()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D470BB5C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1D492201C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

unint64_t sub_1D470BBD4()
{
  unint64_t result;

  result = qword_1EFEAAA10;
  if (!qword_1EFEAAA10)
  {
    result = MEMORY[0x1D82634E0](&unk_1D492ABD0, &type metadata for Argos_Protos_Queryflow_DomainModelMappingConfig.FlowType);
    atomic_store(result, (unint64_t *)&qword_1EFEAAA10);
  }
  return result;
}

unint64_t sub_1D470BC1C()
{
  unint64_t result;

  result = qword_1EFEAAA18;
  if (!qword_1EFEAAA18)
  {
    result = MEMORY[0x1D82634E0](&unk_1D492ABF8, &type metadata for Argos_Protos_Queryflow_DomainModelMappingConfig.FlowType);
    atomic_store(result, (unint64_t *)&qword_1EFEAAA18);
  }
  return result;
}

unint64_t sub_1D470BC64()
{
  unint64_t result;

  result = qword_1EFEAAA20;
  if (!qword_1EFEAAA20)
  {
    result = MEMORY[0x1D82634E0](&unk_1D492AC38, &type metadata for Argos_Protos_Queryflow_DomainModelMappingConfig.FlowType);
    atomic_store(result, (unint64_t *)&qword_1EFEAAA20);
  }
  return result;
}

unint64_t sub_1D470BCA8()
{
  unint64_t result;

  result = qword_1EFEAAA28;
  if (!qword_1EFEAAA28)
  {
    result = MEMORY[0x1D82634E0](&unk_1D492AC70, &type metadata for Argos_Protos_Queryflow_DomainModelMappingConfig.FlowType);
    atomic_store(result, (unint64_t *)&qword_1EFEAAA28);
  }
  return result;
}

uint64_t sub_1D470BCEC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  uint64_t *v33;
  void *v34;
  void *v35;
  void (*v36)(char *, uint64_t);
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  NSObject *v46;
  uint64_t v47;
  uint8_t *v48;
  uint64_t v49;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t *v57;
  void *v58;
  void *v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _OWORD v75[2];
  uint64_t v76;
  uint64_t v77;

  v72 = a3;
  v5 = sub_1D4922664();
  MEMORY[0x1E0C80A78](v5);
  v71 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D4922370();
  v73 = *(_QWORD *)(v7 - 8);
  v74 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v65 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v68 = (uint64_t)&v65 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v67 = (uint64_t)&v65 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v65 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v65 - v21;
  v23 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  v24 = MEMORY[0x1E0C80A78](v23);
  v70 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v65 - v26;
  *(_QWORD *)v27 = sub_1D47C48B8(MEMORY[0x1E0DEE9D8]);
  *((_WORD *)v27 + 4) = 0;
  sub_1D4922010();
  v28 = &v27[*(int *)(v23 + 32)];
  v29 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  v30 = &v27[*(int *)(v23 + 36)];
  v31 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
  v32 = sub_1D473117C();
  v69 = v10;
  if ((v32 & 1) != 0)
  {
    if (qword_1EFEA9C20 != -1)
      swift_once();
    v33 = &qword_1EFEAA908;
  }
  else
  {
    if (qword_1ED98F3A8 != -1)
      swift_once();
    v33 = (uint64_t *)&off_1ED98F3F0;
  }
  v34 = *(void **)(*v33 + 32);
  swift_retain();
  v35 = (void *)sub_1D49225F8();
  LODWORD(v34) = objc_msgSend(v34, sel_BOOLForKey_, v35);
  swift_release();

  if ((_DWORD)v34)
  {
    sub_1D470C76C((uint64_t)v22);
    sub_1D470C928((uint64_t)v20);
    v36 = *(void (**)(char *, uint64_t))(v73 + 8);
    v36(v22, v74);
    v37 = sub_1D4922358();
    v38 = sub_1D4922910();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_1D467C000, v37, v38, "OCR is disabled due to InternalSettings config", v39, 2u);
      MEMORY[0x1D82635B8](v39, -1, -1);
    }

    v36(v20, v74);
    v27[8] = 0;
  }
  v40 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v41 = (void *)sub_1D49225F8();
  v42 = objc_msgSend(v40, sel_contentsAtPath_, v41);

  if (v42)
  {
    v43 = sub_1D4920F6C();
    v45 = v44;

    sub_1D484D52C(v43, v45);
    v52 = v51;
    v54 = v53;
    sub_1D4696F10(v43, v45);

    sub_1D492264C();
    v66 = v54;
    sub_1D4922634();
    sub_1D470C6E8();
    memset(v75, 0, sizeof(v75));
    v76 = 0;
    v55 = (uint64_t)v70;
    sub_1D49221E4();
    sub_1D470C730((uint64_t)v27);
    sub_1D470C6A4(v55, (uint64_t)v27);
    v56 = sub_1D473117C();
    if ((v56 & 1) != 0)
    {
      if (qword_1EFEA9C20 != -1)
        swift_once();
      v57 = &qword_1EFEAA908;
    }
    else
    {
      if (qword_1ED98F3A8 != -1)
        swift_once();
      v57 = (uint64_t *)&off_1ED98F3F0;
    }
    v58 = *(void **)(*v57 + 32);
    swift_retain();
    v59 = (void *)sub_1D49225F8();
    LODWORD(v58) = objc_msgSend(v58, sel_BOOLForKey_, v59);
    swift_release();

    if ((_DWORD)v58)
    {
      v60 = v67;
      sub_1D470C76C(v67);
      sub_1D470C928(v68);
      v61 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
      v61(v60, v74);
      v62 = sub_1D4922358();
      v63 = sub_1D4922910();
      if (os_log_type_enabled(v62, v63))
      {
        v64 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v64 = 0;
        _os_log_impl(&dword_1D467C000, v62, v63, "OCR is disabled due to InternalSettings config", v64, 2u);
        MEMORY[0x1D82635B8](v64, -1, -1);
      }
      sub_1D4696F10(v66, v52);

      v61(v68, v74);
      v27[8] = 0;
    }
    else
    {
      sub_1D4696F10(v66, v52);
    }
  }
  else
  {

    sub_1D470C76C((uint64_t)v13);
    swift_bridgeObjectRetain_n();
    v46 = sub_1D4922358();
    v47 = sub_1D492291C();
    if (os_log_type_enabled(v46, (os_log_type_t)v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      *(_QWORD *)&v75[0] = v49;
      *(_DWORD *)v48 = 136315138;
      swift_bridgeObjectRetain();
      v77 = sub_1D47F0250(a1, a2, (uint64_t *)v75);
      sub_1D4922A78();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D467C000, v46, (os_log_type_t)v47, "Failed to load SearchConfig at path %s", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v49, -1, -1);
      MEMORY[0x1D82635B8](v48, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v73 + 8))(v13, v74);
  }
  return sub_1D470C6A4((uint64_t)v27, v72);
}

uint64_t sub_1D470C6A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D470C6E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED98DE50;
  if (!qword_1ED98DE50)
  {
    v1 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(255);
    result = MEMORY[0x1D82634E0](&unk_1D492972C, v1);
    atomic_store(result, (unint64_t *)&qword_1ED98DE50);
  }
  return result;
}

uint64_t sub_1D470C730(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D470C76C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;

  if (qword_1ED98F398 != -1)
    swift_once();
  if (byte_1ED98F388 != 1)
    goto LABEL_15;
  if ((sub_1D473117C() & 1) != 0)
  {
    if (qword_1EFEA9C20 != -1)
      swift_once();
    v2 = &qword_1EFEAA908;
  }
  else
  {
    if (qword_1ED98F3A8 != -1)
      swift_once();
    v2 = (uint64_t *)&off_1ED98F3F0;
  }
  v3 = *(void **)(*v2 + 32);
  swift_retain();
  v4 = (void *)sub_1D49225F8();
  LODWORD(v3) = objc_msgSend(v3, sel_BOOLForKey_, v4);
  swift_release();

  if ((_DWORD)v3)
  {
    if (qword_1EFEA9C78 != -1)
      swift_once();
    v5 = sub_1D4922370();
    v6 = v5;
    v7 = qword_1EFEAAA30;
  }
  else
  {
LABEL_15:
    if (qword_1ED98F3D0 != -1)
      swift_once();
    v5 = sub_1D4922370();
    v6 = v5;
    v7 = qword_1ED98F3B0;
  }
  v8 = __swift_project_value_buffer(v5, (uint64_t)v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, v8, v6);
}

uint64_t sub_1D470C928@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_1ED98F398 != -1)
    swift_once();
  if (byte_1ED98F388 != 1)
    goto LABEL_13;
  if ((sub_1D473117C() & 1) != 0)
  {
    if (qword_1EFEA9C20 != -1)
      swift_once();
    v3 = &qword_1EFEAA908;
  }
  else
  {
    if (qword_1ED98F3A8 != -1)
      swift_once();
    v3 = (uint64_t *)&off_1ED98F3F0;
  }
  v4 = *(void **)(*v3 + 32);
  swift_retain();
  v5 = (void *)sub_1D49225F8();
  LODWORD(v4) = objc_msgSend(v4, sel_BOOLForKey_, v5);
  swift_release();

  if ((_DWORD)v4)
  {
    v6 = sub_1D4922370();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
    v8 = a1;
    v9 = v1;
  }
  else
  {
LABEL_13:
    if (qword_1ED98F3D0 != -1)
      swift_once();
    v10 = sub_1D4922370();
    v9 = __swift_project_value_buffer(v10, (uint64_t)qword_1ED98F3B0);
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v8 = a1;
    v6 = v10;
  }
  return v7(v8, v9, v6);
}

uint64_t sub_1D470CAD0()
{
  uint64_t v0;

  v0 = sub_1D4922370();
  __swift_allocate_value_buffer(v0, qword_1EFEAAA30);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EFEAAA30);
  return sub_1D4922364();
}

uint64_t sub_1D470CB50()
{
  uint64_t v0;

  v0 = sub_1D4922370();
  __swift_allocate_value_buffer(v0, qword_1ED98F3B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED98F3B0);
  sub_1D470D004();
  sub_1D4922A3C();
  return sub_1D492237C();
}

uint64_t sub_1D470CBAC()
{
  uint64_t result;

  result = os_variant_has_internal_ui();
  byte_1ED98F388 = result;
  return result;
}

uint64_t sub_1D470CBD0()
{
  uint64_t result;

  sub_1D470D004();
  result = sub_1D4922A48();
  qword_1ED98D440 = result;
  return result;
}

id static VILogger.log.getter()
{
  if (qword_1ED98F398 != -1)
    swift_once();
  if (byte_1ED98F388 == 1)
  {
    if (qword_1ED98D450 != -1)
      swift_once();
    return (id)qword_1ED98D440;
  }
  else
  {
    sub_1D470D004();
    return (id)sub_1D4922A3C();
  }
}

uint64_t static VILogger.shouldLogMessage.getter()
{
  if (qword_1ED98F398 != -1)
    swift_once();
  return byte_1ED98F388;
}

id VILogger.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id VILogger.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VILogger();
  return objc_msgSendSuper2(&v2, sel_init);
}

id VILogger.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VILogger();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id _s18VisualIntelligence8VILoggerC23shouldLogVerboseMessageSbvgZ_0()
{
  uint64_t *v0;
  id v1;
  void *v2;
  void *v3;

  if (qword_1ED98F398 != -1)
    swift_once();
  if (byte_1ED98F388 != 1)
    return 0;
  if ((sub_1D473117C() & 1) != 0)
  {
    if (qword_1EFEA9C20 != -1)
      swift_once();
    v0 = &qword_1EFEAA908;
  }
  else
  {
    if (qword_1ED98F3A8 != -1)
      swift_once();
    v0 = (uint64_t *)&off_1ED98F3F0;
  }
  v2 = *(void **)(*v0 + 32);
  swift_retain();
  v3 = (void *)sub_1D49225F8();
  v1 = objc_msgSend(v2, sel_BOOLForKey_, v3);
  swift_release();

  return v1;
}

unint64_t sub_1D470D004()
{
  unint64_t result;

  result = qword_1ED98F358;
  if (!qword_1ED98F358)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED98F358);
  }
  return result;
}

id _s18VisualIntelligence8VILoggerC10verboseLogSo9OS_os_logCvgZ_0()
{
  uint64_t *v0;
  void *v1;
  void *v2;

  if (qword_1ED98F398 != -1)
    swift_once();
  if (byte_1ED98F388 != 1)
    goto LABEL_15;
  if ((sub_1D473117C() & 1) != 0)
  {
    if (qword_1EFEA9C20 != -1)
      swift_once();
    v0 = &qword_1EFEAA908;
  }
  else
  {
    if (qword_1ED98F3A8 != -1)
      swift_once();
    v0 = (uint64_t *)&off_1ED98F3F0;
  }
  v1 = *(void **)(*v0 + 32);
  swift_retain();
  v2 = (void *)sub_1D49225F8();
  LODWORD(v1) = objc_msgSend(v1, sel_BOOLForKey_, v2);
  swift_release();

  if ((_DWORD)v1)
  {
    if (qword_1ED98D450 != -1)
      swift_once();
    return (id)qword_1ED98D440;
  }
  else
  {
LABEL_15:
    sub_1D470D004();
    return (id)sub_1D4922A3C();
  }
}

uint64_t type metadata accessor for VILogger()
{
  return objc_opt_self();
}

VisualIntelligence::MLEngineType_optional __swiftcall MLEngineType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  VisualIntelligence::MLEngineType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D4922CA0();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t MLEngineType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6F73736572707365;
  if (*v0 != 1)
    v1 = 13669;
  if (*v0)
    return v1;
  else
    return 0x6E6F69736976;
}

uint64_t sub_1D470D278(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D489B138(*a1, *a2);
}

unint64_t sub_1D470D288()
{
  unint64_t result;

  result = qword_1EFEAAA48;
  if (!qword_1EFEAAA48)
  {
    result = MEMORY[0x1D82634E0](&protocol conformance descriptor for MLEngineType, &type metadata for MLEngineType);
    atomic_store(result, (unint64_t *)&qword_1EFEAAA48);
  }
  return result;
}

uint64_t sub_1D470D2CC()
{
  sub_1D4922EF8();
  sub_1D49226D0();
  swift_bridgeObjectRelease();
  return sub_1D4922F34();
}

uint64_t sub_1D470D35C()
{
  sub_1D49226D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D470D3C8()
{
  sub_1D4922EF8();
  sub_1D49226D0();
  swift_bridgeObjectRelease();
  return sub_1D4922F34();
}

VisualIntelligence::MLEngineType_optional sub_1D470D454(Swift::String *a1)
{
  return MLEngineType.init(rawValue:)(*a1);
}

void sub_1D470D460(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE600000000000000;
  v4 = 0xE800000000000000;
  v5 = 0x6F73736572707365;
  if (v2 != 1)
  {
    v5 = 13669;
    v4 = 0xE200000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E6F69736976;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t storeEnumTagSinglePayload for MLEngineType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D470D4FC + 4 * byte_1D492ACF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D470D530 + 4 * byte_1D492ACF0[v4]))();
}

uint64_t sub_1D470D530(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D470D538(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D470D540);
  return result;
}

uint64_t sub_1D470D54C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D470D554);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D470D558(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D470D560(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MLEngineType()
{
  return &type metadata for MLEngineType;
}

uint64_t sub_1D470D57C()
{
  uint64_t v0;
  OpaqueVTPixelTransferSession *v1;

  v1 = *(OpaqueVTPixelTransferSession **)(v0 + 24);
  if (v1)
    VTPixelTransferSessionInvalidate(v1);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ProcessInputImageVision()
{
  return objc_opt_self();
}

uint64_t sub_1D470D5DC(unsigned __int8 a1, uint64_t a2, double a3, double a4, double a5, double a6, uint64_t a7, _QWORD *a8, __CVBuffer *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  double v21[4];
  _BYTE v22[40];

  sub_1D469A5D4(a1);
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  sub_1D47C12D0((uint64_t)v22, a2);
  swift_release();
  v21[0] = a3;
  v21[1] = a4;
  v21[2] = a5;
  v21[3] = a6;
  sub_1D470E034(a8, a9, a11, v21);
  if (!v11)
    sub_1D47C0B30();
  return swift_release();
}

uint64_t sub_1D470D6CC()
{
  return sub_1D4922958();
}

double sub_1D470D730()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98EB30);
  v0 = swift_allocObject();
  *(_DWORD *)(v0 + 40) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 16) = xmmword_1D492ADC0;
  *(_QWORD *)(v0 + 32) = 0;
  off_1ED98DD98 = (_UNKNOWN *)v0;
  return result;
}

void sub_1D470D774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  os_unfair_lock_s *v21;
  _QWORD v22[2];
  uint64_t v23[2];
  uint64_t v24;

  v1 = v0;
  v2 = sub_1D4922370();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v22 - v7;
  *(_QWORD *)(v1 + 16) = objc_msgSend(objc_allocWithZone((Class)VIImageScaler), sel_init);
  if (qword_1ED98D518 != -1)
    swift_once();
  v9 = off_1ED98DD98;
  v10 = (os_unfair_lock_s *)((char *)off_1ED98DD98 + 40);
  os_unfair_lock_lock((os_unfair_lock_t)off_1ED98DD98 + 10);
  v11 = v9[4];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
  {
    __break(1u);
    goto LABEL_12;
  }
  v9[4] = v13;
  v14 = v9[2];
  v12 = __OFADD__(v14, 1);
  v15 = v14 + 1;
  if (v12)
  {
LABEL_12:
    __break(1u);
    os_unfair_lock_unlock((os_unfair_lock_t)&unk_1ED98D000);
    __break(1u);
    return;
  }
  v9[2] = v15;
  if (v9[3] < v15)
    v9[3] = v15;
  os_unfair_lock_unlock(v10);
  sub_1D470C76C((uint64_t)v8);
  sub_1D470C928((uint64_t)v6);
  v16 = *(void (**)(char *, uint64_t))(v3 + 8);
  v16(v8, v2);
  v17 = sub_1D4922358();
  v18 = sub_1D4922910();
  if (os_log_type_enabled(v17, v18))
  {
    v22[1] = v1;
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v24 = v20;
    *(_DWORD *)v19 = 136315138;
    v21 = (os_unfair_lock_s *)((char *)off_1ED98DD98 + 40);
    os_unfair_lock_lock((os_unfair_lock_t)off_1ED98DD98 + 10);
    sub_1D47F082C(v23);
    os_unfair_lock_unlock(v21);
    v23[0] = sub_1D47F0250(v23[0], v23[1], &v24);
    sub_1D4922A78();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D467C000, v17, v18, "ProcessInputImageEspresso.init(): %s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v20, -1, -1);
    MEMORY[0x1D82635B8](v19, -1, -1);
  }

  v16(v6, v2);
}

void sub_1D470DA1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[2];
  uint64_t v23;

  v1 = v0;
  v2 = sub_1D4922370();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - v7;
  if (qword_1ED98D518 != -1)
    swift_once();
  v9 = off_1ED98DD98;
  v10 = (os_unfair_lock_s *)((char *)off_1ED98DD98 + 40);
  os_unfair_lock_lock((os_unfair_lock_t)off_1ED98DD98 + 10);
  v11 = v9[2];
  v12 = __OFSUB__(v11, 1);
  v13 = v11 - 1;
  if (v12)
  {
    __break(1u);
    os_unfair_lock_unlock((os_unfair_lock_t)&unk_1ED98D000);
    __break(1u);
  }
  else
  {
    v9[2] = v13;
    if (v9[3] < v13)
      v9[3] = v13;
    os_unfair_lock_unlock(v10);
    sub_1D470C76C((uint64_t)v8);
    sub_1D470C928((uint64_t)v6);
    v14 = *(void (**)(char *, uint64_t))(v3 + 8);
    v14(v8, v2);
    v15 = sub_1D4922358();
    v16 = sub_1D4922910();
    if (os_log_type_enabled(v15, v16))
    {
      v21 = v1;
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v23 = v18;
      *(_DWORD *)v17 = 136315138;
      v19 = (os_unfair_lock_s *)((char *)off_1ED98DD98 + 40);
      os_unfair_lock_lock((os_unfair_lock_t)off_1ED98DD98 + 10);
      sub_1D47F082C(v22);
      os_unfair_lock_unlock(v19);
      v22[0] = sub_1D47F0250(v22[0], v22[1], &v23);
      sub_1D4922A78();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D467C000, v15, v16, "ProcessInputImageEspresso.deinit(): %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v18, -1, -1);
      MEMORY[0x1D82635B8](v17, -1, -1);

      v14(v6, v2);
      v1 = v21;
    }
    else
    {

      v14(v6, v2);
    }

  }
}

uint64_t sub_1D470DC9C()
{
  sub_1D470DA1C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ProcessInputImageEspresso()
{
  return objc_opt_self();
}

uint64_t sub_1D470DCDC(unsigned __int8 a1, _QWORD *a2, uint64_t a3, uint64_t a4, unint64_t a5, double *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v30;
  unsigned int v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[40];
  unsigned int v37;

  v14 = *a6;
  v15 = a6[1];
  v16 = a6[2];
  v17 = a6[3];
  sub_1D469A5D4(a1);
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  sub_1D47C12D0((uint64_t)v36, a7);
  swift_release();
  sub_1D49223AC();
  v18 = *(void **)(v7 + 16);
  v19 = objc_msgSend(v18, sel_setScalingMode_, VIvnCropScaleToVi(a5));
  if (v19 != sub_1D49223AC())
  {
    v32 = 0;
    v33 = 0xE000000000000000;
    sub_1D4922B80();
    sub_1D492270C();
    v37 = v19;
LABEL_7:
    sub_1D4922E14();
    sub_1D492270C();
    swift_bridgeObjectRelease();
    v26 = v32;
    v27 = v33;
    sub_1D46AAFD4();
    swift_allocError();
    *(_QWORD *)v28 = v26;
    *(_QWORD *)(v28 + 8) = v27;
    *(_BYTE *)(v28 + 16) = 6;
    swift_willThrow();
    goto LABEL_8;
  }
  v20 = objc_msgSend(v18, sel_setFillColorBGRA_, a4);
  if (v20 != sub_1D49223AC())
  {
    sub_1D4922B80();
    swift_bridgeObjectRelease();
    v32 = 0xD000000000000030;
    v33 = 0x80000001D49414F0;
    v37 = v20;
    goto LABEL_7;
  }
  v21 = a2[3];
  v22 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v21);
  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(v22 + 32))(&v32, v21, v22);
  if (!v8)
  {
    v23 = v34;
    v24 = v35;
    __swift_project_boxed_opaque_existential_1(&v32, v34);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 24))(v23, v24);
    v30 = (void *)v25;
    v31 = objc_msgSend(v18, sel_cropScaleImageFromSource_destination_normalizedBoundingBox_bottomLeftBoxOrigin_, v25, a3, 1, v14, v15, v16, v17);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
    if (v31 != sub_1D49223AC())
    {
      v32 = 0;
      v33 = 0xE000000000000000;
      sub_1D4922B80();
      sub_1D492270C();
      v37 = v31;
      goto LABEL_7;
    }
  }
LABEL_8:
  sub_1D47C0B30();
  return swift_release();
}

uint64_t sub_1D470DFE4(unsigned __int8 a1, _QWORD *a2, uint64_t a3, uint64_t a4, unint64_t a5, double *a6, uint64_t a7)
{
  return sub_1D470DCDC(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1D470E004()
{
  uint64_t v0;

  return sub_1D470D5DC(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(double *)(v0 + 72), *(double *)(v0 + 80), *(double *)(v0 + 88), *(double *)(v0 + 96), *(_QWORD *)(v0 + 32), *(_QWORD **)(v0 + 40), *(__CVBuffer **)(v0 + 48), *(unsigned int *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

void sub_1D470E034(_QWORD *a1, __CVBuffer *a2, uint64_t a3, double *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD *__return_ptr, uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __CVBuffer *v20;
  int64_t Width;
  double Height;
  uint64_t PixelFormatType;
  __CVBuffer *v24;
  int64_t v25;
  int64_t v26;
  double v27;
  int64_t v28;
  int64_t v29;
  uint64_t v31;
  unint64_t v32;
  const char *v33;
  OSStatus v34;
  CGFloat v35[4];
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;

  v6 = *(void **)(v4 + 24);
  if (!v6)
  {
    sub_1D46AAFD4();
    swift_allocError();
    *(_QWORD *)v17 = 0xD000000000000018;
    *(_QWORD *)(v17 + 8) = 0x80000001D4941450;
    *(_BYTE *)(v17 + 16) = 6;
    swift_willThrow();
    return;
  }
  v9 = *a4;
  v10 = a4[1];
  v11 = a4[2];
  v12 = a4[3];
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v14 + 32);
  v16 = v6;
  v15(v36, v13, v14);
  if (v5)
  {

    return;
  }
  v18 = v37;
  v19 = v38;
  __swift_project_boxed_opaque_existential_1(v36, v37);
  v20 = (__CVBuffer *)(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19);
  Width = CVPixelBufferGetWidth(a2);
  Height = (double)(uint64_t)CVPixelBufferGetHeight(a2);
  PixelFormatType = CVPixelBufferGetPixelFormatType(a2);
  v35[0] = v9;
  v35[1] = v10;
  v35[2] = v11;
  v35[3] = v12;
  v24 = (__CVBuffer *)sub_1D47E1DCC(v20, PixelFormatType, v35, a3, (double)Width, Height);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  v25 = CVPixelBufferGetWidth(v24);
  v26 = CVPixelBufferGetHeight(v24);
  v27 = (double)v25;
  v28 = CVPixelBufferGetWidth(a2);
  v29 = CVPixelBufferGetHeight(a2);
  if (v27 != (double)v28 || (double)v26 != (double)v29)
  {
    sub_1D46AAFD4();
    swift_allocError();
    v32 = 0xD00000000000001FLL;
    v33 = "VIVNImageScaler invalid results";
LABEL_12:
    *(_QWORD *)v31 = v32;
    *(_QWORD *)(v31 + 8) = (unint64_t)(v33 - 32) | 0x8000000000000000;
    *(_BYTE *)(v31 + 16) = 6;
    swift_willThrow();
    goto LABEL_13;
  }
  v34 = VTPixelTransferSessionTransferImage((VTPixelTransferSessionRef)v16, v24, a2);
  if (v34 != sub_1D49223AC())
  {
    sub_1D46AAFD4();
    swift_allocError();
    v32 = 0xD000000000000018;
    v33 = "VT pixel transfer failed";
    goto LABEL_12;
  }
LABEL_13:

}

uint64_t sub_1D470E2DC(double a1)
{
  __CVBuffer *v1;
  __CVBuffer *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int64_t Width;
  uint64_t result;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  char v17;
  os_log_type_t v18;
  char *v19;
  uint64_t v20;

  v2 = v1;
  v4 = sub_1D4922370();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v20 - v9;
  Width = CVPixelBufferGetWidth(v2);
  result = CVPixelBufferGetHeight(v2);
  if (Width < 1 || result < 1)
  {
    sub_1D470C76C((uint64_t)v8);
    v14 = sub_1D4922358();
    v18 = sub_1D4922910();
    if (!os_log_type_enabled(v14, v18))
    {
      v17 = 1;
      v10 = v8;
      goto LABEL_17;
    }
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1D467C000, v14, v18, "Image width and/or height was non-positive.", v16, 2u);
    v17 = 1;
    v10 = v8;
LABEL_15:
    MEMORY[0x1D82635B8](v16, -1, -1);
LABEL_17:

    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    sub_1D470E544();
    swift_allocError();
    *v19 = v17;
    return swift_willThrow();
  }
  if (result >= Width)
    v13 = Width;
  else
    v13 = result;
  if ((~*(_QWORD *)&a1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (a1 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (a1 >= 9.22337204e18)
  {
LABEL_23:
    __break(1u);
    return result;
  }
  if (v13 <= (uint64_t)a1)
    return (uint64_t)v2;
  result = (uint64_t)VIRescaleCVPixelBufferUsingVTSession(v2, a1);
  if (!result)
  {
    sub_1D470C76C((uint64_t)v10);
    v14 = sub_1D4922358();
    v15 = sub_1D4922910();
    if (!os_log_type_enabled(v14, v15))
    {
      v17 = 0;
      goto LABEL_17;
    }
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1D467C000, v14, v15, "Failed to rescale CVPixelBuffer", v16, 2u);
    v17 = 0;
    goto LABEL_15;
  }
  return result;
}

unint64_t sub_1D470E544()
{
  unint64_t result;

  result = qword_1ED98CAC0;
  if (!qword_1ED98CAC0)
  {
    result = MEMORY[0x1D82634E0](&unk_1D492AEE8, &type metadata for ScalingError);
    atomic_store(result, (unint64_t *)&qword_1ED98CAC0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ScalingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D470E5D4 + 4 * byte_1D492AE65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D470E608 + 4 * byte_1D492AE60[v4]))();
}

uint64_t sub_1D470E608(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D470E610(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D470E618);
  return result;
}

uint64_t sub_1D470E624(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D470E62CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D470E630(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D470E638(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScalingError()
{
  return &type metadata for ScalingError;
}

unint64_t sub_1D470E658()
{
  unint64_t result;

  result = qword_1EFEAAA50;
  if (!qword_1EFEAAA50)
  {
    result = MEMORY[0x1D82634E0](&unk_1D492AEC0, &type metadata for ScalingError);
    atomic_store(result, (unint64_t *)&qword_1EFEAAA50);
  }
  return result;
}

uint64_t sub_1D470E69C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0) + 32);
    v9 = v7 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_1D492201C();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    *(_BYTE *)(v7 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v14 = v7 + v13;
    v15 = (uint64_t)a2 + v13;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
    *(_QWORD *)(v7 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1D470E790(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0) + 32);
  v3 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D470E7F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0) + 32);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D492201C();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D470E8C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0) + 32);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = v13;
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D470E9A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0) + 32);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1D470EA54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0) + 32);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D492201C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D470EB18()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D470EB24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1D470EBA0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D470EBAC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for OverlapRegionDomainAssignmentRule()
{
  uint64_t result;

  result = qword_1ED98DDA0;
  if (!qword_1ED98DDA0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D470EC60()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D470ECE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[20];
  uint64_t v43[21];

  v38 = a3;
  v40 = a4;
  v6 = type metadata accessor for OverlapRegionDomainAssignmentRule();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D4922370();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v37 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v37 - v17;
  sub_1D46A4760(a1, (uint64_t)v43);
  if ((*(_BYTE *)(a2 + 96) & 1) != 0)
    goto LABEL_9;
  v19 = (uint64_t)v8;
  v20 = v39;
  if ((sub_1D470F058(a2) & 1) == 0)
  {
    sub_1D470C76C((uint64_t)v16);
    v30 = v13;
    sub_1D470C928((uint64_t)v13);
    v31 = *(void (**)(char *, uint64_t))(v10 + 8);
    v32 = v9;
    v31(v16, v9);
    v33 = sub_1D4922358();
    v34 = sub_1D4922910();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_1D467C000, v33, v34, "No satisfied overlap regions.", v35, 2u);
      MEMORY[0x1D82635B8](v35, -1, -1);
    }

    v31(v30, v32);
    goto LABEL_9;
  }
  if (*(_BYTE *)(v20 + 16) != 1)
  {
LABEL_9:
    sub_1D46A4760((uint64_t)v43, v40);
    return sub_1D470F8E4(v43);
  }
  v21 = v18;
  sub_1D470C76C((uint64_t)v18);
  v22 = v19;
  sub_1D469C304(v20, v19, (uint64_t (*)(_QWORD))type metadata accessor for OverlapRegionDomainAssignmentRule);
  v23 = sub_1D4922358();
  v24 = sub_1D4922910();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc();
    v39 = v10;
    v26 = (uint8_t *)v25;
    v27 = swift_slowAlloc();
    v38 = v21;
    *(_DWORD *)v26 = 136315138;
    v42[0] = v27;
    v28 = sub_1D46F8BC8(*(_BYTE *)(v22 + *(int *)(v6 + 20)));
    v41 = sub_1D47F0250(v28, v29, v42);
    sub_1D4922A78();
    swift_bridgeObjectRelease();
    sub_1D4697DE0(v22, (uint64_t (*)(_QWORD))type metadata accessor for OverlapRegionDomainAssignmentRule);
    _os_log_impl(&dword_1D467C000, v23, v24, "Reject %s as it has an overlap region.", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D82635B8](v27, -1, -1);
    MEMORY[0x1D82635B8](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v38, v9);
  }
  else
  {
    sub_1D4697DE0(v22, (uint64_t (*)(_QWORD))type metadata accessor for OverlapRegionDomainAssignmentRule);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v21, v9);
  }
  sub_1D46C6BD0((uint64_t)v42);
  return (uint64_t *)sub_1D46A4760((uint64_t)v42, v40);
}

uint64_t sub_1D470F058(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double *v23;
  uint64_t v24;
  double *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  CGFloat *v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  float v37;
  uint64_t v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  double Width;
  double v43;
  CGFloat v44;
  double v45;
  double Height;
  CGFloat v47;
  double v48;
  double v49;
  double v50;
  CGFloat v51;
  CGFloat x;
  CGFloat y;
  CGFloat v54;
  CGFloat v55;
  float v56;
  double v57;
  CGFloat v58;
  float v59;
  BOOL v60;
  float v61;
  uint64_t v62;
  CGFloat v63;
  CGFloat v64;
  CGFloat v65;
  CGFloat v66;
  double v67;
  CGFloat v68;
  double v69;
  double v70;
  CGFloat v71;
  double v72;
  double v73;
  CGFloat v74;
  CGFloat v75;
  CGFloat v76;
  CGFloat v77;
  CGFloat v78;
  CGFloat v79;
  float v80;
  uint64_t v81;
  float v82;
  double v83;
  double v84;
  double v85;
  double v86;
  uint64_t v88;
  uint64_t v89;
  uint8_t *v90;
  const char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  double v111;
  CGFloat v112;
  double v113;
  uint64_t v114;
  double v115;
  CGFloat v116;
  char *v117;
  double v118;
  uint64_t v119;
  double v120;
  CGRect v121;
  CGRect v122;
  CGRect v123;
  CGRect v124;
  CGRect v125;
  CGRect v126;
  CGRect v127;
  CGRect v128;
  CGRect v129;
  CGRect v130;
  CGRect v131;
  CGRect v132;
  CGRect v133;
  CGRect v134;
  CGRect v135;
  CGRect v136;

  v2 = (uint64_t)v1;
  v119 = a1;
  v3 = sub_1D4922370();
  v109 = *(_QWORD *)(v3 - 8);
  v110 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v104 = (uint64_t)&v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v102 = (uint64_t)&v101 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v107 = (uint64_t)&v101 - v9;
  MEMORY[0x1E0C80A78](v8);
  v105 = (uint64_t)&v101 - v10;
  v11 = type metadata accessor for OverlapRegionDomainAssignmentRule();
  v12 = MEMORY[0x1E0C80A78](v11);
  v103 = (uint64_t)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v101 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v106 = (uint64_t)&v101 - v18;
  MEMORY[0x1E0C80A78](v17);
  v114 = (uint64_t)&v101 - v19;
  v20 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (double *)((char *)&v101 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v21);
  v25 = (double *)((char *)&v101 - v24);
  v26 = *v1;
  v27 = *(uint64_t *)((char *)v1 + *(int *)(v11 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = swift_bridgeObjectRetain();
  v29 = sub_1D46F478C(v28, v26, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30 = v29;
  v31 = *(_QWORD *)(v29 + 16);
  if (!v31)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    return 0;
  }
  v108 = v30;
  v32 = (CGFloat *)(v30 + 48);
  v117 = v16;
  while (1)
  {
    v33 = *(v32 - 1);
    v34 = *v32;
    v35 = v32[1];
    v36 = v32[2];
    v37 = *(float *)(v2 + 8);
    sub_1D469C304(v119, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v38 = v114;
    sub_1D469C304(v2, v114, (uint64_t (*)(_QWORD))type metadata accessor for OverlapRegionDomainAssignmentRule);
    v118 = v34;
    v116 = v36;
    if (v37 <= 0.0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D4697DE0(v38, (uint64_t (*)(_QWORD))type metadata accessor for OverlapRegionDomainAssignmentRule);
      sub_1D4697DE0((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      goto LABEL_13;
    }
    v39 = *v25;
    v40 = v25[1];
    v41 = v25[2];
    v113 = v25[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v121.origin.x = v33;
    v121.origin.y = v34;
    v121.size.width = v35;
    v121.size.height = v36;
    Width = CGRectGetWidth(v121);
    v115 = v33;
    v122.origin.x = v33;
    v122.origin.y = v34;
    v122.size.width = v35;
    v122.size.height = v36;
    v43 = Width * CGRectGetHeight(v122);
    v123.origin.x = v39;
    v123.origin.y = v40;
    v123.size.width = v41;
    v44 = v113;
    v123.size.height = v113;
    v45 = CGRectGetWidth(v123);
    v112 = v39;
    v124.origin.x = v39;
    v124.origin.y = v40;
    v124.size.width = v41;
    v124.size.height = v44;
    Height = CGRectGetHeight(v124);
    v111 = v43;
    v47 = v35;
    if (v43 <= 0.0 || (v48 = v45 * Height, v45 * Height <= 0.0))
    {
      v56 = 0.0;
    }
    else
    {
      v49 = v115;
      v50 = v118;
      v51 = v36;
      v135.origin.x = v112;
      v135.origin.y = v40;
      v135.size.width = v41;
      v135.size.height = v44;
      v125 = CGRectIntersection(*(CGRect *)(&v47 - 2), v135);
      x = v125.origin.x;
      y = v125.origin.y;
      v54 = v125.size.width;
      v55 = v125.size.height;
      v56 = 0.0;
      if (!CGRectIsNull(v125))
      {
        v126.origin.x = x;
        v126.origin.y = y;
        v126.size.width = v54;
        v126.size.height = v55;
        v57 = CGRectGetWidth(v126);
        v127.origin.x = x;
        v127.origin.y = y;
        v127.size.width = v54;
        v127.size.height = v55;
        v58 = CGRectGetHeight(v127);
        v56 = v57 * v58 / (v111 + v48 - v57 * v58);
      }
    }
    sub_1D4697DE0((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v59 = *(float *)(v38 + 8);
    sub_1D4697DE0(v38, (uint64_t (*)(_QWORD))type metadata accessor for OverlapRegionDomainAssignmentRule);
    v60 = v59 < v56;
    v33 = v115;
    v34 = v118;
    if (v60)
      break;
LABEL_13:
    v61 = *(float *)(v2 + 12);
    sub_1D469C304(v119, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    v62 = (uint64_t)v117;
    sub_1D469C304(v2, (uint64_t)v117, (uint64_t (*)(_QWORD))type metadata accessor for OverlapRegionDomainAssignmentRule);
    if (v61 <= 0.0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D4697DE0(v62, (uint64_t (*)(_QWORD))type metadata accessor for OverlapRegionDomainAssignmentRule);
      sub_1D4697DE0((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
    }
    else
    {
      v63 = v23[1];
      v115 = *v23;
      v65 = v23[2];
      v64 = v23[3];
      v128.origin.x = v33;
      v128.origin.y = v34;
      v128.size.width = v35;
      v66 = v116;
      v128.size.height = v116;
      v67 = CGRectGetWidth(v128);
      v129.origin.x = v33;
      v129.origin.y = v34;
      v68 = v115;
      v129.size.width = v35;
      v129.size.height = v66;
      v69 = v67 * CGRectGetHeight(v129);
      v130.origin.x = v68;
      v130.origin.y = v63;
      v130.size.width = v65;
      v130.size.height = v64;
      v113 = CGRectGetWidth(v130);
      v131.origin.x = v68;
      v131.origin.y = v63;
      v131.size.width = v65;
      v131.size.height = v64;
      v70 = CGRectGetHeight(v131);
      if (v69 <= 0.0)
        goto LABEL_17;
      v71 = v66;
      v72 = v118;
      v73 = v113 * v70;
      if (v113 * v70 <= 0.0)
        goto LABEL_17;
      v136.size.height = v64;
      v113 = v69;
      v74 = v33;
      v75 = v35;
      v136.origin.x = v68;
      v136.origin.y = v63;
      v136.size.width = v65;
      v132 = CGRectIntersection(*(CGRect *)(&v72 - 1), v136);
      v76 = v132.origin.x;
      v77 = v132.origin.y;
      v78 = v132.size.width;
      v79 = v132.size.height;
      if (CGRectIsNull(v132))
      {
LABEL_17:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v80 = 0.0;
      }
      else
      {
        v133.origin.x = v76;
        v133.origin.y = v77;
        v133.size.width = v78;
        v133.size.height = v79;
        v83 = v73;
        v84 = CGRectGetWidth(v133);
        v134.origin.x = v76;
        v134.origin.y = v77;
        v134.size.width = v78;
        v134.size.height = v79;
        v85 = CGRectGetHeight(v134);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v86 = v113;
        if (v83 < v113)
          v86 = v83;
        v80 = v84 * v85 / v86;
      }
      v81 = (uint64_t)v117;
      sub_1D4697DE0((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for VisualUnderstanding.ImageRegion);
      v82 = *(float *)(v81 + 12);
      sub_1D4697DE0(v81, (uint64_t (*)(_QWORD))type metadata accessor for OverlapRegionDomainAssignmentRule);
      if (v82 < v80)
      {
        swift_bridgeObjectRelease();
        v92 = v102;
        sub_1D470C76C(v102);
        v93 = v104;
        sub_1D470C928(v104);
        v94 = v110;
        v95 = *(void (**)(uint64_t, uint64_t))(v109 + 8);
        v95(v92, v110);
        v96 = v2;
        v97 = v103;
        sub_1D469C304(v96, v103, (uint64_t (*)(_QWORD))type metadata accessor for OverlapRegionDomainAssignmentRule);
        v98 = sub_1D4922358();
        v99 = sub_1D4922910();
        if (os_log_type_enabled(v98, v99))
        {
          v90 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v90 = 134217984;
          v120 = *(float *)(v97 + 12);
          sub_1D4922A78();
          sub_1D4697DE0(v97, (uint64_t (*)(_QWORD))type metadata accessor for OverlapRegionDomainAssignmentRule);
          v91 = "Found satisfied object result with ioa threshold %f.";
          goto LABEL_28;
        }
        goto LABEL_29;
      }
    }
    v32 += 10;
    if (!--v31)
      goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v88 = v105;
  sub_1D470C76C(v105);
  v93 = v107;
  sub_1D470C928(v107);
  v94 = v110;
  v95 = *(void (**)(uint64_t, uint64_t))(v109 + 8);
  v95(v88, v110);
  v89 = v2;
  v97 = v106;
  sub_1D469C304(v89, v106, (uint64_t (*)(_QWORD))type metadata accessor for OverlapRegionDomainAssignmentRule);
  v98 = sub_1D4922358();
  v99 = sub_1D4922910();
  if (os_log_type_enabled(v98, v99))
  {
    v90 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v90 = 134217984;
    v120 = *(float *)(v97 + 8);
    sub_1D4922A78();
    sub_1D4697DE0(v97, (uint64_t (*)(_QWORD))type metadata accessor for OverlapRegionDomainAssignmentRule);
    v91 = "Found satisfied object result with iou threshold %f.";
LABEL_28:
    _os_log_impl(&dword_1D467C000, v98, v99, v91, v90, 0xCu);
    MEMORY[0x1D82635B8](v90, -1, -1);
    goto LABEL_30;
  }
LABEL_29:
  sub_1D4697DE0(v97, (uint64_t (*)(_QWORD))type metadata accessor for OverlapRegionDomainAssignmentRule);
LABEL_30:

  v95(v93, v94);
  return 1;
}

uint64_t sub_1D470F8D8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t *sub_1D470F8E4(uint64_t *a1)
{
  sub_1D46C6A64(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11]);
  return a1;
}

float sub_1D470F94C(CGFloat *a1)
{
  CGFloat *v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  double Width;
  CGFloat v10;
  double v11;
  double Height;
  float v13;
  CGFloat v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat x;
  CGFloat y;
  CGFloat v21;
  CGFloat v22;
  BOOL IsNull;
  double v24;
  double v25;
  double v26;
  double v27;
  double v29;
  CGFloat v30;
  CGFloat v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;

  v2 = *a1;
  v31 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v6 = *v1;
  v5 = v1[1];
  v8 = v1[2];
  v7 = v1[3];
  v32.origin.x = *v1;
  v32.origin.y = v5;
  v32.size.width = v8;
  v32.size.height = v7;
  Width = CGRectGetWidth(v32);
  v30 = v6;
  v33.origin.x = v6;
  v10 = v5;
  v33.origin.y = v5;
  v33.size.width = v8;
  v33.size.height = v7;
  v11 = Width * CGRectGetHeight(v33);
  v34.origin.x = v2;
  v34.origin.y = v31;
  v34.size.width = v3;
  v34.size.height = v4;
  v29 = CGRectGetWidth(v34);
  v35.origin.x = v2;
  v35.origin.y = v31;
  v35.size.width = v3;
  v35.size.height = v4;
  Height = CGRectGetHeight(v35);
  v13 = 0.0;
  if (v11 > 0.0)
  {
    v14 = v2;
    v15 = v4;
    v16 = v29 * Height;
    if (v29 * Height > 0.0)
    {
      v36.origin.x = v30;
      v36.origin.y = v10;
      v36.size.width = v8;
      v36.size.height = v7;
      v17 = v31;
      v18 = v3;
      v37 = CGRectIntersection(v36, *(CGRect *)&v14);
      x = v37.origin.x;
      y = v37.origin.y;
      v21 = v37.size.width;
      v22 = v37.size.height;
      IsNull = CGRectIsNull(v37);
      v13 = 0.0;
      if (!IsNull)
      {
        v38.origin.x = x;
        v38.origin.y = y;
        v38.size.width = v21;
        v38.size.height = v22;
        v24 = v16;
        v25 = CGRectGetWidth(v38);
        v39.origin.x = x;
        v39.origin.y = y;
        v39.size.width = v21;
        v39.size.height = v22;
        v26 = v25 * CGRectGetHeight(v39);
        if (v24 >= v11)
          v27 = v11;
        else
          v27 = v24;
        return v26 / v27;
      }
    }
  }
  return v13;
}

uint64_t NormalizedRect.loggingDescription.getter()
{
  CGFloat *v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  uint64_t v5;
  CGFloat MinX;
  uint64_t v7;
  unint64_t v8;
  CGFloat MinY;
  CGFloat Width;
  CGFloat Height;
  CGRect v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D4927560;
  v13.origin.x = v1;
  v13.origin.y = v2;
  v13.size.width = v3;
  v13.size.height = v4;
  MinX = CGRectGetMinX(v13);
  v7 = MEMORY[0x1E0DEF040];
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEF040];
  v8 = sub_1D46A492C();
  *(_QWORD *)(v5 + 64) = v8;
  *(CGFloat *)(v5 + 32) = MinX;
  v14.origin.x = v1;
  v14.origin.y = v2;
  v14.size.width = v3;
  v14.size.height = v4;
  MinY = CGRectGetMinY(v14);
  *(_QWORD *)(v5 + 96) = v7;
  *(_QWORD *)(v5 + 104) = v8;
  *(CGFloat *)(v5 + 72) = MinY;
  v15.origin.x = v1;
  v15.origin.y = v2;
  v15.size.width = v3;
  v15.size.height = v4;
  Width = CGRectGetWidth(v15);
  *(_QWORD *)(v5 + 136) = v7;
  *(_QWORD *)(v5 + 144) = v8;
  *(CGFloat *)(v5 + 112) = Width;
  v16.origin.x = v1;
  v16.origin.y = v2;
  v16.size.width = v3;
  v16.size.height = v4;
  Height = CGRectGetHeight(v16);
  *(_QWORD *)(v5 + 176) = v7;
  *(_QWORD *)(v5 + 184) = v8;
  *(CGFloat *)(v5 + 152) = Height;
  return sub_1D4922640();
}

Swift::Float __swiftcall NormalizedRect.intersectionOverUnion(_:)(VisualIntelligence::NormalizedRect a1)
{
  CGFloat *v1;
  CGFloat *v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  double Width;
  CGFloat v11;
  double v12;
  double v13;
  double Height;
  float v15;
  double v16;
  CGFloat x;
  CGFloat y;
  CGFloat v19;
  CGFloat v20;
  BOOL IsNull;
  double v22;
  CGFloat v23;
  double v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat r2_8;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;

  v3 = *v1;
  r2_8 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v6 = *v2;
  v7 = v2[1];
  v8 = v2[2];
  v9 = v2[3];
  v29.origin.x = *v2;
  v29.origin.y = v7;
  v29.size.width = v8;
  v29.size.height = v9;
  Width = CGRectGetWidth(v29);
  v26 = v7;
  v27 = v6;
  v30.origin.x = v6;
  v30.origin.y = v7;
  v11 = v8;
  v30.size.width = v8;
  v30.size.height = v9;
  v12 = Width * CGRectGetHeight(v30);
  v31.origin.x = v3;
  v31.origin.y = r2_8;
  v31.size.width = v4;
  v31.size.height = v5;
  v13 = CGRectGetWidth(v31);
  v32.origin.x = v3;
  v32.origin.y = r2_8;
  v32.size.width = v4;
  v32.size.height = v5;
  Height = CGRectGetHeight(v32);
  v15 = 0.0;
  v25 = v12;
  if (v12 > 0.0)
  {
    v16 = v13 * Height;
    if (v13 * Height > 0.0)
    {
      v33.origin.y = v26;
      v33.origin.x = v27;
      v33.size.width = v11;
      v33.size.height = v9;
      v37.origin.x = v3;
      v37.origin.y = r2_8;
      v37.size.width = v4;
      v37.size.height = v5;
      v34 = CGRectIntersection(v33, v37);
      x = v34.origin.x;
      y = v34.origin.y;
      v19 = v34.size.width;
      v20 = v34.size.height;
      IsNull = CGRectIsNull(v34);
      v15 = 0.0;
      if (!IsNull)
      {
        v35.origin.x = x;
        v35.origin.y = y;
        v35.size.width = v19;
        v35.size.height = v20;
        v22 = CGRectGetWidth(v35);
        v36.origin.x = x;
        v36.origin.y = y;
        v36.size.width = v19;
        v36.size.height = v20;
        v23 = CGRectGetHeight(v36);
        return v22 * v23 / (v25 + v16 - v22 * v23);
      }
    }
  }
  return v15;
}

VisualIntelligence::NormalizedRect __swiftcall NormalizedRect.init(bottomLeftCGRect:)(VisualIntelligence::NormalizedRect bottomLeftCGRect)
{
  VisualIntelligence::NormalizedRect *v1;

  *v1 = bottomLeftCGRect;
  return bottomLeftCGRect;
}

double NormalizedRect.origin.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double NormalizedRect.size.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t NormalizedRect.width.getter()
{
  return sub_1D470FD44((uint64_t (*)(double, double, double, double))MEMORY[0x1E0C9D5D0]);
}

uint64_t NormalizedRect.height.getter()
{
  return sub_1D470FD44((uint64_t (*)(double, double, double, double))MEMORY[0x1E0C9D580]);
}

uint64_t sub_1D470FD44(uint64_t (*a1)(double, double, double, double))
{
  double *v1;

  return a1(*v1, v1[1], v1[2], v1[3]);
}

VisualIntelligence::NormalizedRect __swiftcall NormalizedRect.init(topLeftCGRect:)(__C::CGRect topLeftCGRect)
{
  CGFloat *v1;
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat x;
  CGFloat *v6;
  CGFloat MinX;
  double v8;
  CGFloat v9;
  double v10;
  double v11;
  double v12;
  double v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;
  VisualIntelligence::NormalizedRect result;

  height = topLeftCGRect.size.height;
  width = topLeftCGRect.size.width;
  y = topLeftCGRect.origin.y;
  x = topLeftCGRect.origin.x;
  v6 = v1;
  MinX = CGRectGetMinX((CGRect)topLeftCGRect);
  v14.origin.x = x;
  v14.origin.y = y;
  v14.size.width = width;
  v14.size.height = height;
  v8 = 1.0 - CGRectGetMaxY(v14);
  v15.origin.x = x;
  v15.origin.y = y;
  v15.size.width = width;
  v15.size.height = height;
  v9 = CGRectGetWidth(v15);
  v16.origin.x = x;
  v16.origin.y = y;
  v16.size.width = width;
  v16.size.height = height;
  v10 = CGRectGetHeight(v16);
  *v6 = MinX;
  v6[1] = v8;
  v6[2] = v9;
  v6[3] = v10;
  result.bottomLeftCGRect.size.height = v13;
  result.bottomLeftCGRect.size.width = v12;
  result.bottomLeftCGRect.origin.y = v11;
  result.bottomLeftCGRect.origin.x = v10;
  return result;
}

double NormalizedRect.bottomLeftCGRect.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

__n128 sub_1D470FE00()
{
  __n128 result;

  xmmword_1ED9A49B0 = 0uLL;
  __asm { FMOV            V0.2D, #1.0 }
  xmmword_1ED9A49C0 = (__int128)result;
  return result;
}

double sub_1D470FE18()
{
  double result;

  if (qword_1ED98D9D0 != -1)
    swift_once();
  result = *(double *)ymmword_1ED9A49B0;
  xmmword_1ED98CC60 = *(_OWORD *)ymmword_1ED9A49B0;
  xmmword_1ED98CC70 = *(_OWORD *)&ymmword_1ED9A49B0[16];
  return result;
}

double static NormalizedRect.entireImage.getter@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  if (qword_1ED98CC88 != -1)
    swift_once();
  result = *(double *)&xmmword_1ED98CC60;
  v3 = xmmword_1ED98CC70;
  *a1 = xmmword_1ED98CC60;
  a1[1] = v3;
  return result;
}

BOOL static NormalizedRect.== infix(_:_:)(CGRect *a1, CGRect *a2)
{
  return CGRectEqualToRect(*a1, *a2);
}

double NormalizedRect.topLeftCGRect.getter()
{
  CGFloat *v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  double MinX;
  CGRect v7;
  CGRect v8;
  CGRect v9;
  CGRect v10;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v7.origin.x = *v0;
  v7.origin.y = v2;
  v7.size.width = v3;
  v7.size.height = v4;
  MinX = CGRectGetMinX(v7);
  v8.origin.x = v1;
  v8.origin.y = v2;
  v8.size.width = v3;
  v8.size.height = v4;
  CGRectGetMaxY(v8);
  v9.origin.x = v1;
  v9.origin.y = v2;
  v9.size.width = v3;
  v9.size.height = v4;
  CGRectGetWidth(v9);
  v10.origin.x = v1;
  v10.origin.y = v2;
  v10.size.width = v3;
  v10.size.height = v4;
  CGRectGetHeight(v10);
  return MinX;
}

VisualIntelligence::NormalizedRect __swiftcall NormalizedRect.init(srcSize:bottomLeftCGRectUnscaled:)(CGSize srcSize, __C::CGRect bottomLeftCGRectUnscaled)
{
  double *v2;
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat x;
  double *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;
  VisualIntelligence::NormalizedRect result;

  height = bottomLeftCGRectUnscaled.size.height;
  width = bottomLeftCGRectUnscaled.size.width;
  y = bottomLeftCGRectUnscaled.origin.y;
  x = bottomLeftCGRectUnscaled.origin.x;
  v7 = v2;
  if (srcSize.width == 0.0)
    v8 = 0.0;
  else
    v8 = 1.0 / srcSize.width;
  if (srcSize.height == 0.0)
    v9 = 0.0;
  else
    v9 = 1.0 / srcSize.height;
  v10 = v8 * CGRectGetMinX((CGRect)bottomLeftCGRectUnscaled);
  v17.origin.x = x;
  v17.origin.y = y;
  v17.size.width = width;
  v17.size.height = height;
  v11 = v9 * CGRectGetMinY(v17);
  v18.origin.x = x;
  v18.origin.y = y;
  v18.size.width = width;
  v18.size.height = height;
  v12 = v8 * CGRectGetWidth(v18);
  v19.origin.x = x;
  v19.origin.y = y;
  v19.size.width = width;
  v19.size.height = height;
  v13 = v9 * CGRectGetHeight(v19);
  *v7 = v10;
  v7[1] = v11;
  v7[2] = v12;
  v7[3] = v13;
  result.bottomLeftCGRect.size.height = v16;
  result.bottomLeftCGRect.size.width = v15;
  result.bottomLeftCGRect.origin.y = v14;
  result.bottomLeftCGRect.origin.x = v13;
  return result;
}

CGFloat CGRect.scale(scaleX:scaleY:)(double a1, double a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  CGFloat v11;
  CGRect v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;

  v13.origin.x = a3;
  v13.origin.y = a4;
  v13.size.width = a5;
  v13.size.height = a6;
  v11 = CGRectGetMinX(v13) * a1;
  v14.origin.x = a3;
  v14.origin.y = a4;
  v14.size.width = a5;
  v14.size.height = a6;
  CGRectGetMinY(v14);
  v15.origin.x = a3;
  v15.origin.y = a4;
  v15.size.width = a5;
  v15.size.height = a6;
  CGRectGetWidth(v15);
  v16.origin.x = a3;
  v16.origin.y = a4;
  v16.size.width = a5;
  v16.size.height = a6;
  CGRectGetHeight(v16);
  return v11;
}

uint64_t NormalizedRect.hash(into:)()
{
  CGFloat *v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGRect v6;
  CGRect v7;
  CGRect v8;
  CGRect v9;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v6.origin.x = *v0;
  v6.origin.y = v2;
  v6.size.width = v3;
  v6.size.height = v4;
  CGRectGetMinX(v6);
  sub_1D4922F28();
  v7.origin.x = v1;
  v7.origin.y = v2;
  v7.size.width = v3;
  v7.size.height = v4;
  CGRectGetMaxX(v7);
  sub_1D4922F28();
  v8.origin.x = v1;
  v8.origin.y = v2;
  v8.size.width = v3;
  v8.size.height = v4;
  CGRectGetMinY(v8);
  sub_1D4922F28();
  v9.origin.x = v1;
  v9.origin.y = v2;
  v9.size.width = v3;
  v9.size.height = v4;
  CGRectGetMaxY(v9);
  return sub_1D4922F28();
}

__C::CGRect __swiftcall CGRect.toImageCoordinates(imageSize:)(CGSize imageSize)
{
  double v1;
  double v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  double height;
  double width;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  double v14;
  double v15;
  double v16;
  double v17;
  CGRect v18;
  CGRect v19;
  __C::CGRect result;

  v5 = v4;
  v6 = v3;
  v7 = v2;
  v8 = v1;
  height = imageSize.height;
  width = imageSize.width;
  v11 = imageSize.width * v1;
  v12 = imageSize.height * v2;
  v18.origin.x = v1;
  v18.origin.y = v2;
  v18.size.width = v3;
  v18.size.height = v4;
  v13 = CGRectGetWidth(v18) * width;
  v19.origin.x = v8;
  v19.origin.y = v7;
  v19.size.width = v6;
  v19.size.height = v5;
  v14 = CGRectGetHeight(v19) * height;
  v15 = v11;
  v16 = v12;
  v17 = v13;
  result.size.height = v14;
  result.size.width = v17;
  result.origin.y = v16;
  result.origin.x = v15;
  return result;
}

__C::CGRect __swiftcall CGRect.constrainedNormalizedRect()()
{
  uint64_t v0;
  CGRect v5;

  v5.origin.x = 0.0;
  v5.origin.y = 0.0;
  v5.size.width = 1.0;
  v5.size.height = 1.0;
  return (__C::CGRect)CGRectIntersection(*(CGRect *)&v0, v5);
}

double CGRect.expand(by:)(double a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  CGFloat v10;
  CGFloat v11;
  double result;
  CGRect v13;
  CGRect v14;
  CGRect v15;

  v13.origin.x = a2;
  v13.origin.y = a3;
  v13.size.width = a4;
  v13.size.height = a5;
  v10 = -(CGRectGetWidth(v13) * a1) * 0.5;
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  v11 = -(CGRectGetHeight(v14) * a1) * 0.5;
  v15.origin.x = a2;
  v15.origin.y = a3;
  v15.size.width = a4;
  v15.size.height = a5;
  *(_QWORD *)&result = (unint64_t)CGRectInset(v15, v10, v11);
  return result;
}

VisualIntelligence::NormalizedRect __swiftcall CGRect.toConstrainedNormalizedRect()()
{
  VisualIntelligence::NormalizedRect *v0;
  uint64_t v1;
  VisualIntelligence::NormalizedRect *v5;
  VisualIntelligence::NormalizedRect result;
  CGRect v7;

  v5 = v0;
  v7.origin.x = 0.0;
  v7.origin.y = 0.0;
  v7.size.width = 1.0;
  v7.size.height = 1.0;
  result = (VisualIntelligence::NormalizedRect)CGRectIntersection(*(CGRect *)&v1, v7);
  *v5 = result;
  return result;
}

uint64_t NormalizedRect.hashValue.getter()
{
  CGFloat *v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGRect v6;
  CGRect v7;
  CGRect v8;
  CGRect v9;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  sub_1D4922EF8();
  v6.origin.x = v1;
  v6.origin.y = v2;
  v6.size.width = v3;
  v6.size.height = v4;
  CGRectGetMinX(v6);
  sub_1D4922F28();
  v7.origin.x = v1;
  v7.origin.y = v2;
  v7.size.width = v3;
  v7.size.height = v4;
  CGRectGetMaxX(v7);
  sub_1D4922F28();
  v8.origin.x = v1;
  v8.origin.y = v2;
  v8.size.width = v3;
  v8.size.height = v4;
  CGRectGetMinY(v8);
  sub_1D4922F28();
  v9.origin.x = v1;
  v9.origin.y = v2;
  v9.size.width = v3;
  v9.size.height = v4;
  CGRectGetMaxY(v9);
  sub_1D4922F28();
  return sub_1D4922F34();
}

BOOL sub_1D4710430(CGRect *a1, CGRect *a2)
{
  return CGRectEqualToRect(*a1, *a2);
}

uint64_t sub_1D471045C()
{
  CGFloat *v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGRect v6;
  CGRect v7;
  CGRect v8;
  CGRect v9;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  sub_1D4922EF8();
  v6.origin.x = v1;
  v6.origin.y = v2;
  v6.size.width = v3;
  v6.size.height = v4;
  CGRectGetMinX(v6);
  sub_1D4922F28();
  v7.origin.x = v1;
  v7.origin.y = v2;
  v7.size.width = v3;
  v7.size.height = v4;
  CGRectGetMaxX(v7);
  sub_1D4922F28();
  v8.origin.x = v1;
  v8.origin.y = v2;
  v8.size.width = v3;
  v8.size.height = v4;
  CGRectGetMinY(v8);
  sub_1D4922F28();
  v9.origin.x = v1;
  v9.origin.y = v2;
  v9.size.width = v3;
  v9.size.height = v4;
  CGRectGetMaxY(v9);
  sub_1D4922F28();
  return sub_1D4922F34();
}

CGFloat CGRect.scale(_:)(double a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  CGFloat v10;
  CGRect v12;
  CGRect v13;
  CGRect v14;
  CGRect v15;

  v12.origin.x = a2;
  v12.origin.y = a3;
  v12.size.width = a4;
  v12.size.height = a5;
  v10 = CGRectGetMinX(v12) * a1;
  v13.origin.x = a2;
  v13.origin.y = a3;
  v13.size.width = a4;
  v13.size.height = a5;
  CGRectGetMinY(v13);
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  CGRectGetWidth(v14);
  v15.origin.x = a2;
  v15.origin.y = a3;
  v15.size.width = a4;
  v15.size.height = a5;
  CGRectGetHeight(v15);
  return v10;
}

void sub_1D47105F8(char *a1)
{
  sub_1D489ADD0(*a1);
}

void sub_1D4710604()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D4922EF8();
  __asm { BR              X9 }
}

uint64_t sub_1D4710644()
{
  sub_1D49226D0();
  swift_bridgeObjectRelease();
  return sub_1D4922F34();
}

void sub_1D471069C()
{
  __asm { BR              X10 }
}

uint64_t sub_1D47106CC()
{
  sub_1D49226D0();
  return swift_bridgeObjectRelease();
}

void sub_1D4710710()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D4922EF8();
  __asm { BR              X9 }
}

uint64_t sub_1D471074C()
{
  sub_1D49226D0();
  swift_bridgeObjectRelease();
  return sub_1D4922F34();
}

uint64_t sub_1D47107A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D47115C0();
  *a1 = result;
  return result;
}

uint64_t sub_1D47107D0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D47107F4 + 4 * byte_1D492AFAC[*v0]))();
}

void sub_1D47107F4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 121;
  a1[1] = v1;
}

void sub_1D4710800(_QWORD *a1@<X8>)
{
  *a1 = 0x6874646977;
  a1[1] = 0xE500000000000000;
}

void sub_1D4710818(_QWORD *a1@<X8>)
{
  *a1 = 0x746867696568;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1D4710830()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D4710854 + 4 * byte_1D492AFB0[*v0]))(120, 0xE100000000000000);
}

uint64_t sub_1D4710854()
{
  return 121;
}

uint64_t sub_1D471085C()
{
  return 0x6874646977;
}

uint64_t sub_1D4710870()
{
  return 0x746867696568;
}

uint64_t sub_1D4710884@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D47115C0();
  *a1 = result;
  return result;
}

uint64_t sub_1D47108A8()
{
  sub_1D4711300();
  return sub_1D4922F64();
}

uint64_t sub_1D47108D0()
{
  sub_1D4711300();
  return sub_1D4922F70();
}

uint64_t NormalizedRect.init(from:)@<X0>(_QWORD *a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  BOOL v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  BOOL v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  BOOL v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double *v44;
  _BYTE *v45;
  BOOL v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[2];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double *v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  double v63;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAA58);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D4711300();
  sub_1D4922F4C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v59 = a2;
  LOBYTE(v60) = 0;
  v9 = sub_1D4922CE8();
  v11 = v10;
  LOBYTE(v60) = 1;
  v12 = sub_1D4922CE8();
  v58 = v13;
  LOBYTE(v60) = 2;
  v56 = sub_1D4922CE8();
  v57 = v14;
  LOBYTE(v60) = 3;
  v15 = sub_1D4922CE8();
  v63 = 0.0;
  v17 = MEMORY[0x1E0C80A78](v15);
  v52[-2] = &v63;
  v54 = v17;
  v55 = v18;
  v53 = v19;
  if ((v11 & 0x1000000000000000) != 0 || !(v11 & 0x2000000000000000 | v9 & 0x1000000000000000))
  {
    sub_1D4922B68();
  }
  else
  {
    MEMORY[0x1E0C80A78](v17);
    v52[-2] = v21;
    v52[-1] = &v52[-4];
    if ((v11 & 0x2000000000000000) != 0)
    {
      v60 = v9;
      v61 = v11 & 0xFFFFFFFFFFFFFFLL;
      v24 = (v9 > 0x20u || ((0x100003E01uLL >> v9) & 1) == 0)
         && (v23 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
         && *v23 == 0;
      v62 = v24;
      v22 = swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    v52[1] = v20;
    if ((v9 & 0x1000000000000000) != 0)
    {
      ((void (*)(uint64_t *__return_ptr, uint64_t))sub_1D4711344)(&v60, (v11 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else
    {
      v48 = sub_1D4922BC8();
      ((void (*)(uint64_t *__return_ptr, uint64_t))v52[-2])(&v60, v48);
    }
    v62 = v60;
  }
  v22 = swift_bridgeObjectRelease();
LABEL_17:
  if (v62)
    v25 = v63;
  else
    v25 = 0.0;
  v63 = 0.0;
  v26 = MEMORY[0x1E0C80A78](v22);
  v52[-2] = &v63;
  v53 = v27;
  if ((v58 & 0x1000000000000000) != 0 || !(v58 & 0x2000000000000000 | v12 & 0x1000000000000000))
  {
    sub_1D4922B68();
    v30 = swift_bridgeObjectRelease();
  }
  else
  {
    MEMORY[0x1E0C80A78](v26);
    v52[-2] = v29;
    v52[-1] = &v52[-4];
    if ((v28 & 0x2000000000000000) != 0)
    {
      v60 = v12;
      v61 = v28 & 0xFFFFFFFFFFFFFFLL;
      if (v12 <= 0x20u && ((0x100003E01uLL >> v12) & 1) != 0)
      {
        v32 = 0;
      }
      else
      {
        v31 = (_BYTE *)_swift_stdlib_strtod_clocale();
        if (v31)
          v32 = *v31 == 0;
        else
          v32 = 0;
      }
      v62 = v32;
      v30 = swift_bridgeObjectRelease();
    }
    else
    {
      if ((v12 & 0x1000000000000000) != 0)
      {
        ((void (*)(uint64_t *__return_ptr, uint64_t))sub_1D4711344)(&v60, (v28 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else
      {
        v49 = sub_1D4922BC8();
        ((void (*)(uint64_t *__return_ptr, uint64_t))v52[-2])(&v60, v49);
      }
      v62 = v60;
      v30 = swift_bridgeObjectRelease();
    }
  }
  if (v62)
    v33 = v63;
  else
    v33 = 0.0;
  v63 = 0.0;
  v34 = MEMORY[0x1E0C80A78](v30);
  v52[-2] = &v63;
  if ((v57 & 0x1000000000000000) != 0 || !(v57 & 0x2000000000000000 | v56 & 0x1000000000000000))
  {
    sub_1D4922B68();
    v37 = swift_bridgeObjectRelease();
  }
  else
  {
    MEMORY[0x1E0C80A78](v34);
    v52[-2] = sub_1D4711344;
    v52[-1] = &v52[-4];
    if ((v36 & 0x2000000000000000) != 0)
    {
      v60 = v35;
      v61 = v36 & 0xFFFFFFFFFFFFFFLL;
      if (v35 <= 0x20u && ((0x100003E01uLL >> v35) & 1) != 0)
      {
        v39 = 0;
      }
      else
      {
        v38 = (_BYTE *)_swift_stdlib_strtod_clocale();
        if (v38)
          v39 = *v38 == 0;
        else
          v39 = 0;
      }
      v62 = v39;
      v37 = swift_bridgeObjectRelease();
    }
    else
    {
      if ((v35 & 0x1000000000000000) != 0)
      {
        ((void (*)(uint64_t *__return_ptr, uint64_t))sub_1D4711344)(&v60, (v36 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else
      {
        v50 = sub_1D4922BC8();
        ((void (*)(uint64_t *__return_ptr, uint64_t))v52[-2])(&v60, v50);
      }
      v62 = v60;
      v37 = swift_bridgeObjectRelease();
    }
  }
  if (v62)
    v40 = v63;
  else
    v40 = 0.0;
  v63 = 0.0;
  v41 = MEMORY[0x1E0C80A78](v37);
  v52[-2] = &v63;
  if ((v55 & 0x1000000000000000) != 0 || !(v55 & 0x2000000000000000 | v54 & 0x1000000000000000))
  {
    sub_1D4922B68();
    swift_bridgeObjectRelease();
    v44 = v59;
  }
  else
  {
    MEMORY[0x1E0C80A78](v41);
    v52[-2] = sub_1D4711344;
    v52[-1] = &v52[-4];
    if ((v43 & 0x2000000000000000) != 0)
    {
      v60 = v42;
      v61 = v43 & 0xFFFFFFFFFFFFFFLL;
      if (v42 <= 0x20u && ((0x100003E01uLL >> v42) & 1) != 0)
      {
        v46 = 0;
        v44 = v59;
      }
      else
      {
        v45 = (_BYTE *)_swift_stdlib_strtod_clocale();
        v44 = v59;
        if (v45)
          v46 = *v45 == 0;
        else
          v46 = 0;
      }
      v62 = v46;
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v42 & 0x1000000000000000) != 0)
      {
        ((void (*)(uint64_t *__return_ptr, uint64_t))sub_1D4711344)(&v60, (v43 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else
      {
        v51 = sub_1D4922BC8();
        ((void (*)(uint64_t *__return_ptr, uint64_t))v52[-2])(&v60, v51);
      }
      v44 = v59;
      v62 = v60;
      swift_bridgeObjectRelease();
    }
  }
  if (v62)
    v47 = v63;
  else
    v47 = 0.0;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *v44 = v25;
  v44[1] = v33;
  v44[2] = v40;
  v44[3] = v47;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t NormalizedRect.encode(to:)(_QWORD *a1)
{
  CGFloat *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  _BYTE v13[16];
  CGRect v14;
  CGRect v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98D350);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *v1;
  v9 = v1[1];
  v10 = v1[2];
  v11 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D4711300();
  sub_1D4922F58();
  sub_1D49228A4();
  v13[15] = 0;
  sub_1D4922D84();
  if (!v2)
  {
    swift_bridgeObjectRelease();
    sub_1D49228A4();
    v13[14] = 1;
    sub_1D4922D84();
    swift_bridgeObjectRelease();
    v14.origin.x = v8;
    v14.origin.y = v9;
    v14.size.width = v10;
    v14.size.height = v11;
    CGRectGetWidth(v14);
    sub_1D49228A4();
    v13[13] = 2;
    sub_1D4922D84();
    swift_bridgeObjectRelease();
    v15.origin.x = v8;
    v15.origin.y = v9;
    v15.size.width = v10;
    v15.size.height = v11;
    CGRectGetHeight(v15);
    sub_1D49228A4();
    v13[12] = 3;
    sub_1D4922D84();
  }
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D47112D8@<X0>(_QWORD *a1@<X0>, double *a2@<X8>)
{
  return NormalizedRect.init(from:)(a1, a2);
}

uint64_t sub_1D47112EC(_QWORD *a1)
{
  return NormalizedRect.encode(to:)(a1);
}

unint64_t sub_1D4711300()
{
  unint64_t result;

  result = qword_1ED98CC48;
  if (!qword_1ED98CC48)
  {
    result = MEMORY[0x1D82634E0](&unk_1D492B1D0, &type metadata for NormalizedRect.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED98CC48);
  }
  return result;
}

_BYTE *sub_1D4711344@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1D4711358(a1, a2);
}

_BYTE *sub_1D4711358@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

unint64_t sub_1D47113C8()
{
  unint64_t result;

  result = qword_1ED98CCA0;
  if (!qword_1ED98CCA0)
  {
    result = MEMORY[0x1D82634E0](&protocol conformance descriptor for NormalizedRect, &type metadata for NormalizedRect);
    atomic_store(result, (unint64_t *)&qword_1ED98CCA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for NormalizedRect()
{
  return &type metadata for NormalizedRect;
}

uint64_t storeEnumTagSinglePayload for NormalizedRect.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D4711468 + 4 * byte_1D492AFB9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D471149C + 4 * byte_1D492AFB4[v4]))();
}

uint64_t sub_1D471149C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D47114A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D47114ACLL);
  return result;
}

uint64_t sub_1D47114B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D47114C0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D47114C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D47114CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NormalizedRect.CodingKeys()
{
  return &type metadata for NormalizedRect.CodingKeys;
}

unint64_t sub_1D47114EC()
{
  unint64_t result;

  result = qword_1EFEAAA60;
  if (!qword_1EFEAAA60)
  {
    result = MEMORY[0x1D82634E0](&unk_1D492B1A8, &type metadata for NormalizedRect.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFEAAA60);
  }
  return result;
}

unint64_t sub_1D4711534()
{
  unint64_t result;

  result = qword_1ED98CC58;
  if (!qword_1ED98CC58)
  {
    result = MEMORY[0x1D82634E0](&unk_1D492B0E0, &type metadata for NormalizedRect.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED98CC58);
  }
  return result;
}

unint64_t sub_1D471157C()
{
  unint64_t result;

  result = qword_1ED98CC50;
  if (!qword_1ED98CC50)
  {
    result = MEMORY[0x1D82634E0](&unk_1D492B108, &type metadata for NormalizedRect.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED98CC50);
  }
  return result;
}

uint64_t sub_1D47115C0()
{
  unint64_t v0;

  v0 = sub_1D4922CA0();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1D4711608(void *a1, char a2, uint64_t a3, char a4, uint64_t a5, int a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  char v40;
  char v41;
  void (*v42)(uint64_t *, _QWORD);
  _QWORD **v43;
  _QWORD *v44;
  _QWORD *v45;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unsigned int *v50;
  void (*v51)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  unsigned int (*v59)(uint64_t, uint64_t, uint64_t);
  char *v60;
  uint64_t v61;
  id v62;
  void *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;

  v82 = a6;
  v80 = a5;
  v71 = a3;
  v86 = a1;
  v77 = sub_1D4920D8C();
  v8 = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v79 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v81 = (char *)&v70 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v78 = (char *)&v70 - v17;
  MEMORY[0x1E0C80A78](v16);
  v83 = (uint64_t)&v70 - v18;
  v19 = sub_1D4920F18();
  v84 = *(_QWORD *)(v19 - 8);
  v85 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v73 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v72 = (char *)&v70 - v22;
  v76 = sub_1D49216A4();
  v74 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v75 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1D49211B8();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v70 - v29;
  sub_1D492174C();
  if ((a2 & 1) != 0 && (a4 & 1) == 0)
  {
    if (v86)
    {
      v31 = objc_msgSend(v86, sel_location);
      if (v31)
      {
        v32 = v31;
        v33 = sub_1D471AE00(v71);

        sub_1D49211AC();
        objc_msgSend(v33, sel_coordinate);
        sub_1D4921194();
        objc_msgSend(v33, sel_coordinate);
        sub_1D49211A0();
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
        sub_1D49216D4();
        objc_msgSend(v33, sel_course);
        sub_1D49216E0();
        objc_msgSend(v33, sel_horizontalAccuracy);
        sub_1D49216EC();

        (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
      }
    }
  }
  if ((v82 & 1) != 0 || v80 < 1)
  {
    v35 = v84;
    v34 = v85;
    v36 = v86;
    if (v86)
      goto LABEL_17;
LABEL_19:
    v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56);
    v52 = v83;
    v51(v83, 1, 1, v34);
    sub_1D46992EC(v52, &qword_1ED98CAF0);
    v53 = (uint64_t)v81;
    v51((uint64_t)v81, 1, 1, v34);
    return sub_1D46992EC(v53, &qword_1ED98CAF0);
  }
  v35 = v84;
  v34 = v85;
  v36 = v86;
  if (!v86)
    goto LABEL_19;
  v37 = objc_msgSend(v86, sel_location);
  if (v37)
  {
    v38 = v37;
    v39 = sub_1D471AF64(v80);
    v41 = v40;

    if ((v41 & 1) == 0)
    {
      v42 = (void (*)(uint64_t *, _QWORD))sub_1D49216F8();
      v44 = v43;
      v45 = *v43;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v44 = v45;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v45 = sub_1D48A94EC(0, v45[2] + 1, 1, v45);
        *v44 = v45;
      }
      v48 = v45[2];
      v47 = v45[3];
      if (v48 >= v47 >> 1)
      {
        v45 = sub_1D48A94EC((_QWORD *)(v47 > 1), v48 + 1, 1, v45);
        *v44 = v45;
      }
      v45[2] = v48 + 1;
      v45[v48 + 4] = v39;
      v42(&v87, 0);
      v35 = v84;
      v34 = v85;
      v36 = v86;
    }
  }
LABEL_17:
  v49 = (unint64_t)objc_msgSend(v36, sel_imageType);
  if (v49 > 3)
    v50 = (unsigned int *)MEMORY[0x1E0D6EFD8];
  else
    v50 = (unsigned int *)qword_1E9808C48[v49];
  (*(void (**)(char *, _QWORD, uint64_t))(v74 + 104))(v75, *v50, v76);
  sub_1D4921740();
  v54 = objc_msgSend(v36, sel_imageURL);
  if (v54)
  {
    v55 = v54;
    v56 = (uint64_t)v78;
    sub_1D4920EF4();

    v57 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56);
    v57(v56, 0, 1, v34);
  }
  else
  {
    v57 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56);
    v56 = (uint64_t)v78;
    v57((uint64_t)v78, 1, 1, v34);
  }
  v58 = v83;
  sub_1D4711CF8(v56, v83);
  v59 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
  if (v59(v58, 1, v34) == 1)
  {
    sub_1D46992EC(v58, &qword_1ED98CAF0);
  }
  else
  {
    v60 = v72;
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v72, v58, v34);
    v87 = sub_1D4920E88();
    v88 = v61;
    sub_1D4920D74();
    sub_1D4696FE8();
    sub_1D4922AA8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v77);
    swift_bridgeObjectRelease();
    sub_1D4921728();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v60, v34);
  }
  v53 = (uint64_t)v81;
  v62 = objc_msgSend(v86, sel_referralURL);
  if (v62)
  {
    v63 = v62;
    v64 = v79;
    sub_1D4920EF4();

    v65 = (uint64_t)v64;
    v66 = 0;
  }
  else
  {
    v66 = 1;
    v65 = (uint64_t)v79;
  }
  v57(v65, v66, 1, v34);
  sub_1D4711CF8(v65, v53);
  if (v59(v53, 1, v34) == 1)
    return sub_1D46992EC(v53, &qword_1ED98CAF0);
  v68 = v73;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v73, v53, v34);
  v87 = sub_1D4920E88();
  v88 = v69;
  sub_1D4920D74();
  sub_1D4696FE8();
  sub_1D4922AA8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v77);
  swift_bridgeObjectRelease();
  sub_1D49216BC();
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v68, v34);
}

uint64_t sub_1D4711CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98CAF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D4711D40@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t result;
  _QWORD v8[4];

  v4 = sub_1D48299EC();
  v8[2] = a1;
  v5 = sub_1D489BE24((void (*)(uint64_t *__return_ptr, __int128 *))sub_1D4711F40, (uint64_t)v8, v4);
  swift_bridgeObjectRelease();
  v6 = sub_1D4888954((uint64_t)v5);
  result = swift_bridgeObjectRelease();
  *(_DWORD *)a2 = v6;
  *(_BYTE *)(a2 + 4) = BYTE4(v6) & 1;
  return result;
}

uint64_t sub_1D4711DD0@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  int v19;
  BOOL v20;
  int v21;
  uint64_t v22;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAA558);
  MEMORY[0x1E0C80A78](v6);
  v8 = (int *)((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *a2;
  v10 = sub_1D46F8BC8(*a1);
  if (*(_QWORD *)(v9 + 16) && (v12 = sub_1D47CA4DC(v10, v11), (v13 & 1) != 0))
  {
    v14 = v12;
    v15 = *(_QWORD *)(v9 + 56);
    v16 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig(0);
    v17 = *(_QWORD *)(v16 - 8);
    sub_1D4711F94(v15 + *(_QWORD *)(v17 + 72) * v14, (uint64_t)v8);
    (*(void (**)(int *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v16);
  }
  else
  {
    v16 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig(0);
    (*(void (**)(int *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig(0);
  if ((*(unsigned int (**)(int *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v8, 1, v16) == 1)
  {
    result = sub_1D46992EC((uint64_t)v8, &qword_1EFEAA558);
    v19 = 0;
    v20 = 1;
  }
  else
  {
    v21 = *v8;
    result = sub_1D4711F58((uint64_t)v8);
    v20 = v21 < 1;
    v19 = v21 & ~(v21 >> 31);
  }
  *(_DWORD *)a3 = v19;
  *(_BYTE *)(a3 + 4) = v20;
  return result;
}

uint64_t sub_1D4711F40@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1D4711DD0(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_1D4711F58(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D4711F94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D4711FD8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DomainSelectionProcessor()
{
  return objc_opt_self();
}

uint64_t sub_1D4712024(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  __int128 v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  char *v72;
  uint64_t v73;
  char *v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  _BYTE *v84;
  uint64_t v85;
  _BYTE *v86;
  _BYTE *v87;
  _QWORD *v88;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v90;
  char v91;
  unint64_t v92;
  uint64_t v93;
  _BOOL8 v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  char v98;
  _QWORD *v99;
  uint64_t v100;
  BOOL v101;
  uint64_t v102;
  char v103;
  uint64_t *v104;
  void *v105;
  void *v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t, uint64_t);
  id v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t *v117;
  void *v118;
  void *v119;
  char *v120;
  uint64_t v121;
  void (*v122)(char *, uint64_t);
  NSObject *v123;
  os_log_type_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  uint64_t *v128;
  void *v129;
  void *v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  void (*v134)(char *, uint64_t, uint64_t);
  id v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t *v141;
  void *v142;
  void *v143;
  char *v144;
  uint64_t v145;
  unint64_t v146;
  void (*v147)(char *, uint64_t);
  NSObject *v148;
  os_log_type_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _DWORD *v158;
  _QWORD *v159;
  uint64_t result;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _BYTE *v174;
  __int128 v175;
  int64_t v176;
  _QWORD *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  unint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  char *v192;
  uint64_t *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  _QWORD *v198;
  uint64_t v199;
  uint64_t v200;

  v167 = a2;
  v166 = a1;
  v182 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig(0);
  v187 = *(_QWORD *)(v182 - 8);
  v7 = MEMORY[0x1E0C80A78](v182);
  v179 = (uint64_t)&v161 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v174 = (char *)&v161 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E290);
  v11 = MEMORY[0x1E0C80A78](v10);
  v173 = (uint64_t)&v161 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v181 = (uint64_t)&v161 - v13;
  v14 = sub_1D4922370();
  v195 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v188 = (char *)&v161 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v185 = (char *)&v161 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v161 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v161 - v22;
  v180 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
  v189 = *(_QWORD *)(v180 - 8);
  MEMORY[0x1E0C80A78](v180);
  v25 = (char *)&v161 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D138);
  v27 = MEMORY[0x1E0C80A78](v26);
  v29 = (unint64_t *)((char *)&v161 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v27);
  v31 = (uint64_t *)((char *)&v161 - v30);
  v165 = *a3;
  v32 = sub_1D47C4EF4(MEMORY[0x1E0DEE9D8]);
  v169 = v4;
  *(_QWORD *)(v4 + 24) = v32;
  v183 = (_QWORD *)(v4 + 24);
  v33 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20);
  v168 = a4;
  v164 = v33;
  v34 = *(_QWORD *)(a4 + v33);
  swift_beginAccess();
  v35 = *(_QWORD *)(v34 + 16);
  v36 = *(_QWORD *)(v35 + 64);
  v171 = v35 + 64;
  v37 = 1 << *(_BYTE *)(v35 + 32);
  v38 = -1;
  if (v37 < 64)
    v38 = ~(-1 << v37);
  v39 = v38 & v36;
  v40 = (unint64_t)(v37 + 63) >> 6;
  v161 = v40 - 1;
  v41 = swift_bridgeObjectRetain();
  v42 = 0;
  v176 = v40;
  v43 = v39;
  v162 = v40 - 5;
  v190 = v41;
  v163 = v41 + 104;
  v184 = (unint64_t)"neric";
  v170 = 0x80000001D493F830;
  *(_QWORD *)&v44 = 136315138;
  v175 = v44;
  v172 = MEMORY[0x1E0DEE9B8] + 8;
  v192 = v25;
  v193 = v31;
  v178 = v23;
  v177 = v29;
  v186 = v21;
  while (1)
  {
    if (v43)
    {
      v196 = (v43 - 1) & v43;
      v197 = v42;
      v45 = __clz(__rbit64(v43)) | (v42 << 6);
      goto LABEL_9;
    }
    v51 = v42 + 1;
    if (__OFADD__(v42, 1))
      break;
    if (v51 >= v176)
    {
      v53 = v42;
    }
    else
    {
      v52 = *(_QWORD *)(v171 + 8 * v51);
      if (v52)
        goto LABEL_13;
      v53 = v42 + 1;
      if ((uint64_t)(v42 + 2) < v176)
      {
        v52 = *(_QWORD *)(v171 + 8 * (v42 + 2));
        if (v52)
        {
          v51 = v42 + 2;
          goto LABEL_13;
        }
        v53 = v42 + 2;
        if ((uint64_t)(v42 + 3) < v176)
        {
          v52 = *(_QWORD *)(v171 + 8 * (v42 + 3));
          if (v52)
          {
            v51 = v42 + 3;
LABEL_13:
            v196 = (v52 - 1) & v52;
            v197 = v51;
            v45 = __clz(__rbit64(v52)) + (v51 << 6);
LABEL_9:
            v46 = *(_QWORD *)(v190 + 56);
            v47 = (_QWORD *)(*(_QWORD *)(v190 + 48) + 16 * v45);
            v48 = v47[1];
            *v29 = *v47;
            v29[1] = v48;
            v49 = v46 + *(_QWORD *)(v189 + 72) * v45;
            v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D130);
            sub_1D4713588(v49, (uint64_t)v29 + *(int *)(v50 + 48));
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v29, 0, 1, v50);
            swift_bridgeObjectRetain();
            goto LABEL_16;
          }
          v51 = v42 + 4;
          v53 = v42 + 3;
          if ((uint64_t)(v42 + 4) < v176)
          {
            v52 = *(_QWORD *)(v171 + 8 * v51);
            if (v52)
              goto LABEL_13;
            while (v162 != v42)
            {
              v52 = *(_QWORD *)(v163 + 8 * v42++);
              if (v52)
              {
                v51 = v42 + 4;
                goto LABEL_13;
              }
            }
            v53 = v161;
          }
        }
      }
    }
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D130);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v29, 1, 1, v54);
    v196 = 0;
    v197 = v53;
LABEL_16:
    sub_1D47135CC((uint64_t)v29, (uint64_t)v31);
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D130);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 48))(v31, 1, v55) == 1)
    {
      swift_release();
      swift_beginAccess();
      v155 = v169;
      v156 = *(_QWORD *)(v169 + 24);
      v199 = v165;
      v157 = v168;
      v158 = (_DWORD *)(*(_QWORD *)(v168 + v164)
                      + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__maxNumOfRegionsWithDomainSignals);
      swift_beginAccess();
      LODWORD(v158) = *v158;
      type metadata accessor for DomainSignalsExtractor();
      swift_allocObject();
      swift_bridgeObjectRetain();
      v159 = sub_1D47BE780(v166, v156, &v199, (int)v158, v167);
      sub_1D4697DE0(v157, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
      *(_QWORD *)(v155 + 16) = v159;
      return v155;
    }
    v57 = *v31;
    v56 = v31[1];
    sub_1D469C630((uint64_t)v31 + *(int *)(v55 + 48), (uint64_t)v25, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
    swift_bridgeObjectRetain();
    v194 = v57;
    v58 = sub_1D46F9314();
    if (v58 == 26)
    {
      v59 = v56;
      if (qword_1ED98F398 != -1)
        swift_once();
      if (byte_1ED98F388 != 1)
        goto LABEL_56;
      v60 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
      v61 = objc_msgSend(v60, sel_bundleIdentifier);

      if (v61)
      {
        v62 = sub_1D492261C();
        v64 = v63;

        if (v62 == 0xD00000000000002BLL && v64 == v170)
        {
          swift_bridgeObjectRelease();
LABEL_48:
          v104 = &qword_1EFEAA908;
          if (qword_1EFEA9C20 != -1)
          {
            swift_once();
            v104 = &qword_1EFEAA908;
          }
LABEL_52:
          v105 = *(void **)(*v104 + 32);
          swift_retain();
          v106 = (void *)sub_1D49225F8();
          LODWORD(v105) = objc_msgSend(v105, sel_BOOLForKey_, v106);
          swift_release();

          if ((_DWORD)v105)
          {
            if (qword_1EFEA9C78 != -1)
              swift_once();
            v107 = v14;
            v108 = qword_1EFEAAA30;
            goto LABEL_59;
          }
LABEL_56:
          if (qword_1ED98F3D0 != -1)
            swift_once();
          v107 = v14;
          v108 = qword_1ED98F3B0;
LABEL_59:
          v109 = __swift_project_value_buffer(v107, (uint64_t)v108);
          v110 = *(void (**)(char *, uint64_t, uint64_t))(v195 + 16);
          v110(v23, v109, v14);
          if ((byte_1ED98F388 & 1) == 0)
            goto LABEL_71;
          v111 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
          v112 = objc_msgSend(v111, sel_bundleIdentifier);

          if (v112)
          {
            v113 = sub_1D492261C();
            v115 = v114;

            if (v113 == 0xD00000000000002BLL && v115 == (v184 | 0x8000000000000000))
            {
              swift_bridgeObjectRelease();
LABEL_65:
              v117 = &qword_1EFEAA908;
              if (qword_1EFEA9C20 != -1)
              {
                swift_once();
                v117 = &qword_1EFEAA908;
              }
LABEL_69:
              v118 = *(void **)(*v117 + 32);
              swift_retain();
              v119 = (void *)sub_1D49225F8();
              LODWORD(v118) = objc_msgSend(v118, sel_BOOLForKey_, v119);
              swift_release();

              if ((_DWORD)v118)
              {
                v120 = v21;
                v121 = (uint64_t)v23;
LABEL_74:
                v110(v120, v121, v14);
                v122 = *(void (**)(char *, uint64_t))(v195 + 8);
                v122(v23, v14);
                swift_bridgeObjectRetain();
                v123 = sub_1D4922358();
                v124 = sub_1D4922910();
                if (os_log_type_enabled(v123, v124))
                {
                  v125 = swift_slowAlloc();
                  v126 = swift_slowAlloc();
                  v200 = v126;
                  *(_DWORD *)v125 = v175;
                  swift_bridgeObjectRetain();
                  *(_QWORD *)(v125 + 4) = sub_1D47F0250(v194, v59, &v200);
                  swift_bridgeObjectRelease_n();
                  _os_log_impl(&dword_1D467C000, v123, v124, "Failed to convert visual domain %s.", (uint8_t *)v125, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x1D82635B8](v126, -1, -1);
                  MEMORY[0x1D82635B8](v125, -1, -1);
                }
                else
                {
                  swift_bridgeObjectRelease_n();
                }

                v122(v21, v14);
                v25 = v192;
                sub_1D4697DE0((uint64_t)v192, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
                v31 = v193;
                goto LABEL_6;
              }
LABEL_71:
              if (qword_1ED98F3D0 != -1)
                swift_once();
              v121 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED98F3B0);
              v120 = v21;
              goto LABEL_74;
            }
            v116 = sub_1D4922E38();
            swift_bridgeObjectRelease();
            if ((v116 & 1) != 0)
              goto LABEL_65;
          }
          v117 = (uint64_t *)&off_1ED98F3F0;
          if (qword_1ED98F3A8 != -1)
          {
            swift_once();
            v117 = (uint64_t *)&off_1ED98F3F0;
          }
          goto LABEL_69;
        }
        v103 = sub_1D4922E38();
        swift_bridgeObjectRelease();
        if ((v103 & 1) != 0)
          goto LABEL_48;
      }
      v104 = (uint64_t *)&off_1ED98F3F0;
      if (qword_1ED98F3A8 != -1)
      {
        swift_once();
        v104 = (uint64_t *)&off_1ED98F3F0;
      }
      goto LABEL_52;
    }
    v65 = v58;
    v191 = v56;
    v66 = v188;
    v67 = v14;
    v68 = *(int *)(v180 + 20);
    v69 = *(_QWORD *)&v25[v68]
        + OBJC_IVAR____TtCV18VisualIntelligence40Argos_Protos_Queryflow_DomainParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__domainSelectionConfig;
    swift_beginAccess();
    v70 = v181;
    sub_1D4713614(v69, v181);
    v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v187 + 48);
    v72 = v25;
    v73 = v182;
    LODWORD(v69) = v71(v70, 1, v182);
    sub_1D471365C(v70);
    if ((_DWORD)v69 == 1)
    {
      v14 = v67;
      if (qword_1ED98F398 != -1)
        swift_once();
      v74 = v66;
      v21 = v186;
      v23 = v178;
      v29 = v177;
      if (byte_1ED98F388 != 1)
        goto LABEL_88;
      v75 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
      v76 = objc_msgSend(v75, sel_bundleIdentifier);

      if (v76)
      {
        v77 = sub_1D492261C();
        v79 = v78;

        if (v77 == 0xD00000000000002BLL && v79 == (v184 | 0x8000000000000000))
        {
          swift_bridgeObjectRelease();
LABEL_80:
          v128 = &qword_1EFEAA908;
          if (qword_1EFEA9C20 != -1)
          {
            swift_once();
            v128 = &qword_1EFEAA908;
          }
LABEL_84:
          v129 = *(void **)(*v128 + 32);
          swift_retain();
          v130 = (void *)sub_1D49225F8();
          LODWORD(v129) = objc_msgSend(v129, sel_BOOLForKey_, v130);
          swift_release();

          v74 = v188;
          if ((_DWORD)v129)
          {
            if (qword_1EFEA9C78 != -1)
              swift_once();
            v131 = v67;
            v132 = qword_1EFEAAA30;
            goto LABEL_91;
          }
LABEL_88:
          if (qword_1ED98F3D0 != -1)
            swift_once();
          v131 = v67;
          v132 = qword_1ED98F3B0;
LABEL_91:
          v133 = __swift_project_value_buffer(v131, (uint64_t)v132);
          v134 = *(void (**)(char *, uint64_t, uint64_t))(v195 + 16);
          v134(v185, v133, v67);
          if ((byte_1ED98F388 & 1) == 0)
            goto LABEL_103;
          v135 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
          v136 = objc_msgSend(v135, sel_bundleIdentifier);

          if (v136)
          {
            v137 = sub_1D492261C();
            v139 = v138;

            if (v137 == 0xD00000000000002BLL && v139 == (v184 | 0x8000000000000000))
            {
              swift_bridgeObjectRelease();
LABEL_97:
              v141 = &qword_1EFEAA908;
              if (qword_1EFEA9C20 != -1)
              {
                swift_once();
                v141 = &qword_1EFEAA908;
              }
LABEL_101:
              v142 = *(void **)(*v141 + 32);
              swift_retain();
              v143 = (void *)sub_1D49225F8();
              LODWORD(v142) = objc_msgSend(v142, sel_BOOLForKey_, v143);
              swift_release();

              v74 = v188;
              if ((_DWORD)v142)
              {
                v144 = v188;
                v145 = (uint64_t)v185;
LABEL_106:
                v134(v144, v145, v67);
                v146 = v191;
                v147 = *(void (**)(char *, uint64_t))(v195 + 8);
                v147(v185, v14);
                swift_bridgeObjectRetain();
                v148 = sub_1D4922358();
                v149 = sub_1D4922910();
                if (os_log_type_enabled(v148, v149))
                {
                  v150 = v23;
                  v151 = v74;
                  v152 = swift_slowAlloc();
                  v153 = swift_slowAlloc();
                  v200 = v153;
                  *(_DWORD *)v152 = v175;
                  swift_bridgeObjectRetain();
                  *(_QWORD *)(v152 + 4) = sub_1D47F0250(v194, v146, &v200);
                  swift_bridgeObjectRelease_n();
                  _os_log_impl(&dword_1D467C000, v148, v149, "No domain selection config for domain %s.", (uint8_t *)v152, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x1D82635B8](v153, -1, -1);
                  MEMORY[0x1D82635B8](v152, -1, -1);

                  v154 = v151;
                  v23 = v150;
                  v21 = v186;
                }
                else
                {
                  swift_bridgeObjectRelease_n();

                  v154 = v74;
                }
                v147(v154, v14);
                v25 = v192;
                sub_1D4697DE0((uint64_t)v192, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
                v31 = v193;
                goto LABEL_6;
              }
LABEL_103:
              if (qword_1ED98F3D0 != -1)
                swift_once();
              v145 = __swift_project_value_buffer(v67, (uint64_t)qword_1ED98F3B0);
              v144 = v74;
              goto LABEL_106;
            }
            v140 = sub_1D4922E38();
            swift_bridgeObjectRelease();
            if ((v140 & 1) != 0)
              goto LABEL_97;
          }
          v141 = (uint64_t *)&off_1ED98F3F0;
          if (qword_1ED98F3A8 != -1)
          {
            swift_once();
            v141 = (uint64_t *)&off_1ED98F3F0;
          }
          goto LABEL_101;
        }
        v127 = sub_1D4922E38();
        swift_bridgeObjectRelease();
        if ((v127 & 1) != 0)
          goto LABEL_80;
      }
      v128 = (uint64_t *)&off_1ED98F3F0;
      if (qword_1ED98F3A8 != -1)
      {
        swift_once();
        v128 = (uint64_t *)&off_1ED98F3F0;
      }
      goto LABEL_84;
    }
    swift_bridgeObjectRelease();
    v80 = *(_QWORD *)&v72[v68]
        + OBJC_IVAR____TtCV18VisualIntelligence40Argos_Protos_Queryflow_DomainParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__domainSelectionConfig;
    swift_beginAccess();
    v81 = v173;
    sub_1D4713614(v80, v173);
    v14 = v67;
    if (v71(v81, 1, v73) == 1)
    {
      v82 = v174;
      *v174 = 0;
      v83 = MEMORY[0x1E0DEE9D8];
      *((_QWORD *)v82 + 1) = MEMORY[0x1E0DEE9D8];
      *((_QWORD *)v82 + 2) = v83;
      *((_DWORD *)v82 + 6) = 0;
      *((_QWORD *)v82 + 4) = 0;
      v82[40] = 1;
      sub_1D4922010();
      v84 = &v82[*(int *)(v73 + 40)];
      v85 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.RichLabelConfig(0);
      v86 = v84;
      v87 = v82;
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v86, 1, 1, v85);
      sub_1D471365C(v81);
    }
    else
    {
      v87 = v174;
      sub_1D469C630(v81, (uint64_t)v174, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
    }
    v31 = v193;
    v88 = v183;
    swift_beginAccess();
    sub_1D469C630((uint64_t)v87, v179, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v198 = (_QWORD *)*v88;
    v90 = v198;
    *v88 = 0x8000000000000000;
    v92 = sub_1D47CA6C8(v65);
    v93 = v90[2];
    v94 = (v91 & 1) == 0;
    v95 = v93 + v94;
    v21 = v186;
    if (__OFADD__(v93, v94))
      goto LABEL_121;
    v96 = v91;
    if (v90[3] >= v95)
    {
      v23 = v178;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1D47AEA04();
    }
    else
    {
      sub_1D47A5E78(v95, isUniquelyReferenced_nonNull_native);
      v97 = sub_1D47CA6C8(v65);
      v23 = v178;
      if ((v96 & 1) != (v98 & 1))
        goto LABEL_123;
      v92 = v97;
    }
    v99 = v198;
    if ((v96 & 1) != 0)
    {
      sub_1D471369C(v179, v198[7] + *(_QWORD *)(v187 + 72) * v92);
    }
    else
    {
      v198[(v92 >> 6) + 8] |= 1 << v92;
      *(_BYTE *)(v99[6] + v92) = v65;
      sub_1D469C630(v179, v99[7] + *(_QWORD *)(v187 + 72) * v92, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
      v100 = v99[2];
      v101 = __OFADD__(v100, 1);
      v102 = v100 + 1;
      if (v101)
        goto LABEL_122;
      v99[2] = v102;
    }
    *v183 = v99;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v25 = v192;
    sub_1D4697DE0((uint64_t)v192, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
    v29 = v177;
LABEL_6:
    v43 = v196;
    v42 = v197;
  }
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  result = sub_1D4922E8C();
  __break(1u);
  return result;
}

uint64_t sub_1D4713588(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D47135CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D138);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D4713614(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D471365C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98E290);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D471369C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

BOOL sub_1D47136E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  _BOOL8 v31;
  BOOL v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _OWORD v47[2];
  uint64_t v48;

  v2 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = *(_QWORD *)(a1 + 16);
  if (!v38)
    return 0;
  v37 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v36 = *(_QWORD *)(v3 + 72);
  v34 = a1;
  swift_bridgeObjectRetain();
  v6 = 0;
  v35 = v5;
  do
  {
    sub_1D46A8550(v37 + v36 * v6, (uint64_t)v5);
    v7 = *((_QWORD *)v5 + 5);
    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      v9 = v8 - 1;
      v10 = 32;
      v11 = MEMORY[0x1E0DEE9D8];
      while (1)
      {
        v12 = *(_OWORD *)(v7 + v10);
        v40 = *(_OWORD *)(v7 + v10 + 16);
        v39 = v12;
        v13 = *(_OWORD *)(v7 + v10 + 32);
        v14 = *(_OWORD *)(v7 + v10 + 48);
        v15 = *(_OWORD *)(v7 + v10 + 80);
        v43 = *(_OWORD *)(v7 + v10 + 64);
        v44 = v15;
        v41 = v13;
        v42 = v14;
        v16 = *(_OWORD *)(v7 + v10 + 96);
        v17 = *(_OWORD *)(v7 + v10 + 112);
        v18 = *(_OWORD *)(v7 + v10 + 128);
        *(_OWORD *)((char *)v47 + 12) = *(_OWORD *)(v7 + v10 + 140);
        v47[0] = v18;
        v45 = v16;
        v46 = v17;
        if (BYTE13(v17) == 1)
        {
          sub_1D46A47CC((uint64_t)&v39);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v48 = v11;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1D48AB57C(0, *(_QWORD *)(v11 + 16) + 1, 1);
            v11 = v48;
          }
          v21 = *(_QWORD *)(v11 + 16);
          v20 = *(_QWORD *)(v11 + 24);
          if (v21 >= v20 >> 1)
          {
            sub_1D48AB57C(v20 > 1, v21 + 1, 1);
            v11 = v48;
          }
          *(_QWORD *)(v11 + 16) = v21 + 1;
          v22 = (_OWORD *)(v11 + 160 * v21);
          v23 = v40;
          v22[2] = v39;
          v22[3] = v23;
          v24 = v41;
          v25 = v42;
          v26 = v44;
          v22[6] = v43;
          v22[7] = v26;
          v22[4] = v24;
          v22[5] = v25;
          v27 = v45;
          v28 = v46;
          v29 = v47[0];
          *(_OWORD *)((char *)v22 + 172) = *(_OWORD *)((char *)v47 + 12);
          v22[9] = v28;
          v22[10] = v29;
          v22[8] = v27;
        }
        if (!v9)
          break;
        --v9;
        v10 += 160;
      }
      swift_bridgeObjectRelease();
      v5 = v35;
    }
    else
    {
      v11 = MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)&v39 = v11;
    swift_retain();
    sub_1D489D358((uint64_t *)&v39);
    ++v6;
    swift_release();
    v30 = *(_QWORD *)(v39 + 16);
    swift_release();
    v31 = v30 != 0;
    sub_1D46F3760((uint64_t)v5);
    if (v30)
      v32 = 1;
    else
      v32 = v6 == v38;
  }
  while (!v32);
  swift_bridgeObjectRelease();
  return v31;
}

void sub_1D4713990(_QWORD *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  int v26;
  int v27;
  __int128 v28;
  __int128 v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  _QWORD v37[4];
  char v38;
  _QWORD v39[4];
  char v40;

  v35 = sub_1D4922370();
  MEMORY[0x1E0C80A78](v35);
  v39[0] = 0xD00000000000001DLL;
  v39[1] = 0x80000001D49404A0;
  v39[2] = "NSFW Model Preprocess Input";
  v39[3] = 27;
  v40 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  sub_1D47C12D0((uint64_t)v39, a3);
  swift_release();
  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
  sub_1D47C0B30();
  v37[0] = 0xD00000000000001DLL;
  v37[1] = 0x80000001D49404A0;
  v37[2] = "NSFW Model Execution";
  v37[3] = 20;
  v38 = 2;
  swift_allocObject();
  swift_retain();
  sub_1D47C12D0((uint64_t)v37, a3);
  swift_release();
  v8 = objc_msgSend(a2, sel_generateClassificationScoresForPixelBuffer_, v7);
  sub_1D46C2548();
  v9 = sub_1D4922544();

  sub_1D47C0B30();
  v10 = 0;
  v11 = *(_QWORD *)(v9 + 64);
  v34 = v9 + 64;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v36 = (unint64_t)(v12 + 63) >> 6;
  v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if ((v13 & v11) == 0)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (i = v16 | (v10 << 6); ; i = __clz(__rbit64(v19)) + (v10 << 6))
  {
    v21 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 16 * i);
    v22 = *v21;
    v23 = v21[1];
    v24 = *(void **)(*(_QWORD *)(v9 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    v25 = v24;
    objc_msgSend(v25, sel_floatValue);
    v27 = v26;
    if (qword_1ED98CC88 != -1)
      swift_once();
    v28 = xmmword_1ED98CC60;
    v29 = xmmword_1ED98CC70;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_1D48A9600(0, v15[2] + 1, 1, v15);
    v31 = v15[2];
    v30 = v15[3];
    if (v31 >= v30 >> 1)
      v15 = sub_1D48A9600((_QWORD *)(v30 > 1), v31 + 1, 1, v15);
    v15[2] = v31 + 1;
    v32 = &v15[7 * v31];
    v32[4] = v22;
    v32[5] = v23;
    *((_DWORD *)v32 + 12) = v27;
    *(_OWORD *)(v32 + 7) = v28;
    *(_OWORD *)(v32 + 9) = v29;

    if (v14)
      goto LABEL_4;
LABEL_5:
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v36)
      goto LABEL_27;
    v19 = *(_QWORD *)(v34 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v36)
        goto LABEL_27;
      v19 = *(_QWORD *)(v34 + 8 * v10);
      if (!v19)
      {
        v10 = v18 + 2;
        if (v18 + 2 >= v36)
          goto LABEL_27;
        v19 = *(_QWORD *)(v34 + 8 * v10);
        if (!v19)
          break;
      }
    }
LABEL_18:
    v14 = (v19 - 1) & v19;
  }
  v20 = v18 + 3;
  if (v20 >= v36)
  {
LABEL_27:

    swift_release();
    swift_release();
    swift_release();
    return;
  }
  v19 = *(_QWORD *)(v34 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_18;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v36)
      goto LABEL_27;
    v19 = *(_QWORD *)(v34 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_18;
  }
LABEL_29:
  __break(1u);
}

_QWORD *sub_1D4713E70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  float v14;
  __int128 v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  void *v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t *v31;
  void *v32;
  void *v33;
  uint64_t *v34;
  uint64_t v35;
  NSObject *v36;
  char *v37;
  uint64_t v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;

  v55 = sub_1D4922370();
  v4 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v47 = a1;
  v8 = a1 + 40;
  v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v49 = "neric";
  v48 = 0x80000001D493F830;
  *(_QWORD *)&v10 = 136315394;
  v51 = v10;
  v50 = MEMORY[0x1E0DEE9B8] + 8;
  v52 = v4;
  v53 = a2;
  v54 = v6;
  do
  {
    v11 = *(_QWORD *)(a2 + 16);
    if (!*(_QWORD *)(v11 + 16))
      goto LABEL_4;
    v13 = *(_QWORD *)(v8 - 8);
    v12 = *(_QWORD *)v8;
    v14 = *(float *)(v8 + 8);
    v15 = *(_OWORD *)(v8 + 16);
    v57 = *(_OWORD *)(v8 + 32);
    v58 = v15;
    swift_bridgeObjectRetain();
    v16 = sub_1D47CA4DC(v13, v12);
    if ((v17 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    v56 = v9;
    v18 = *(_QWORD *)(v11 + 56) + 16 * v16;
    v19 = *(_QWORD *)v18;
    v20 = *(unsigned __int8 *)(v18 + 8);
    swift_bridgeObjectRetain();
    v21 = (void *)sub_1D49225F8();
    swift_bridgeObjectRelease();
    if (v20)
      v22 = v19;
    else
      v22 = 2;
    v23 = objc_msgSend((id)objc_opt_self(), sel_isSensitiveLabelScore_confidenceScore_classificationMode_, v21, v22, v14, v47);

    if (!v23)
    {
      swift_bridgeObjectRelease();
      v9 = v56;
      goto LABEL_4;
    }
    v24 = v55;
    if (qword_1ED98F398 != -1)
      swift_once();
    if (byte_1ED98F388 != 1)
    {
LABEL_27:
      v34 = qword_1ED98F3B0;
      if (qword_1ED98F3D0 != -1)
      {
        swift_once();
        v34 = qword_1ED98F3B0;
      }
      goto LABEL_29;
    }
    v25 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v26 = objc_msgSend(v25, sel_bundleIdentifier);

    if (v26)
    {
      v27 = sub_1D492261C();
      v29 = v28;

      if (v27 == 0xD00000000000002BLL && v29 == v48)
      {
        swift_bridgeObjectRelease();
LABEL_20:
        v31 = &qword_1EFEAA908;
        if (qword_1EFEA9C20 != -1)
        {
          swift_once();
          v31 = &qword_1EFEAA908;
        }
        goto LABEL_24;
      }
      v30 = sub_1D4922E38();
      swift_bridgeObjectRelease();
      if ((v30 & 1) != 0)
        goto LABEL_20;
    }
    v31 = (uint64_t *)&off_1ED98F3F0;
    if (qword_1ED98F3A8 != -1)
    {
      swift_once();
      v31 = (uint64_t *)&off_1ED98F3F0;
    }
LABEL_24:
    v32 = *(void **)(*v31 + 32);
    swift_retain();
    v33 = (void *)sub_1D49225F8();
    LODWORD(v32) = objc_msgSend(v32, sel_BOOLForKey_, v33);
    swift_release();

    v4 = v52;
    if (!(_DWORD)v32)
      goto LABEL_27;
    v34 = qword_1EFEAAA30;
    if (qword_1EFEA9C78 != -1)
    {
      swift_once();
      v34 = qword_1EFEAAA30;
    }
LABEL_29:
    v35 = __swift_project_value_buffer(v24, (uint64_t)v34);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v35, v24);
    swift_bridgeObjectRetain_n();
    v36 = sub_1D4922358();
    v37 = v6;
    v38 = v4;
    v39 = sub_1D4922910();
    if (os_log_type_enabled(v36, v39))
    {
      v40 = swift_slowAlloc();
      v41 = swift_slowAlloc();
      v59 = v41;
      *(_DWORD *)v40 = v51;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v40 + 4) = sub_1D47F0250(v13, v12, &v59);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v40 + 12) = 2048;
      *(double *)(v40 + 14) = v14;
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D467C000, v36, v39, "Query image contains sensitive label %s with score %f", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D82635B8](v41, -1, -1);
      MEMORY[0x1D82635B8](v40, -1, -1);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v55);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v24);
    }
    v4 = v38;
    v9 = v56;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    a2 = v53;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v9 = sub_1D48A9600(0, v9[2] + 1, 1, v9);
    v6 = v54;
    v44 = v9[2];
    v43 = v9[3];
    if (v44 >= v43 >> 1)
      v9 = sub_1D48A9600((_QWORD *)(v43 > 1), v44 + 1, 1, v9);
    v9[2] = v44 + 1;
    v45 = &v9[7 * v44];
    v45[4] = v13;
    v45[5] = v12;
    *((float *)v45 + 12) = v14;
    *(_OWORD *)(v45 + 7) = v58;
    *(_OWORD *)(v45 + 9) = v57;
LABEL_4:
    v8 += 56;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1D4714450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;

  v1 = sub_1D4922034();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1D4922664();
  MEMORY[0x1E0C80A78](v2);
  if (sub_1D4920E7C() == 0x7478746270 && v3 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    v5 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    sub_1D4920E88();
    v6 = (void *)sub_1D49225F8();
    swift_bridgeObjectRelease();
    v7 = objc_msgSend(v5, sel_contentsAtPath_, v6);

    if (v7)
    {
      v8 = sub_1D4920F6C();
      v10 = v9;

      sub_1D492264C();
      sub_1D4922634();
      type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
      sub_1D4696EA4(&qword_1ED98DFA8, type metadata accessor for Argos_Protos_MLModel_ModelDescription, (uint64_t)&unk_1D4934390);
      sub_1D49221E4();
      v11 = v8;
      return sub_1D4696F10(v11, v10);
    }
    sub_1D4922B80();
    swift_bridgeObjectRelease();
    sub_1D4920F18();
    sub_1D4696EA4((unint64_t *)&qword_1ED98ED60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    sub_1D4922E14();
    sub_1D492270C();
    swift_bridgeObjectRelease();
    v13 = 0x80000001D4941650;
    sub_1D46AAFD4();
    swift_allocError();
    *(_QWORD *)v14 = 0xD00000000000001CLL;
    v15 = 7;
    goto LABEL_9;
  }
  v4 = sub_1D4922E38();
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
    goto LABEL_5;
  if (sub_1D4920E7C() == 1852797802 && v16 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = sub_1D4922E38();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      sub_1D4922B80();
      swift_bridgeObjectRelease();
      sub_1D4920E7C();
      sub_1D492270C();
      swift_bridgeObjectRelease();
      v13 = 0x80000001D4941620;
      sub_1D46AAFD4();
      swift_allocError();
      *(_QWORD *)v14 = 0xD00000000000002ELL;
      v15 = 5;
LABEL_9:
      *(_QWORD *)(v14 + 8) = v13;
      *(_BYTE *)(v14 + 16) = v15;
      return swift_willThrow();
    }
  }
  result = sub_1D4920F24();
  if (!v0)
  {
    v19 = result;
    v10 = v18;
    sub_1D492264C();
    sub_1D4922634();
    type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
    sub_1D4922028();
    sub_1D4696EA4(&qword_1ED98DFA8, type metadata accessor for Argos_Protos_MLModel_ModelDescription, (uint64_t)&unk_1D4934390);
    sub_1D49221A8();
    v11 = v19;
    return sub_1D4696F10(v11, v10);
  }
  return result;
}

BOOL sub_1D47148E4(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v4;

  v4 = 0;
  if (a1 && a3)
  {
    if ((a2 & 1) != 0)
      a1 = qword_1D492B2B0[a1 - 1];
    if ((a4 & 1) != 0)
      a3 = qword_1D492B2B0[a3 - 1];
    return a1 == a3;
  }
  return v4;
}

BOOL sub_1D4714920(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  _BOOL4 v6;

  v4 = 10 * a1;
  if ((a2 & 1) == 0)
    v4 = a1;
  v5 = 10 * a3;
  if ((a4 & 1) == 0)
    v5 = a3;
  v6 = v4 == v5;
  if (!a3)
    v6 = 0;
  return a1 && v6;
}

uint64_t sub_1D471495C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  _QWORD *v16;
  uint64_t v17;
  __int128 v18;
  _QWORD *v19;
  uint64_t *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  _QWORD *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  char v52;
  uint64_t *v53;
  void *v54;
  void *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  CGFloat MinX;
  uint64_t v66;
  unint64_t v67;
  CGFloat MinY;
  CGFloat Width;
  CGFloat Height;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v76;
  unint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  BOOL v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  char v91;
  uint64_t *v92;
  void *v93;
  void *v94;
  uint64_t *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  NSObject *v99;
  os_log_type_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  CGFloat v104;
  uint64_t v105;
  unint64_t v106;
  CGFloat v107;
  CGFloat v108;
  CGFloat v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  _QWORD *v124;
  _QWORD *v125;
  _QWORD v126[3];
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  __int128 v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  const char *v143;
  unint64_t v144;
  __int128 v145;
  __int128 v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  unint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  uint64_t v160;
  CGRect v161;
  CGRect v162;
  CGRect v163;
  CGRect v164;
  CGRect v165;
  CGRect v166;
  CGRect v167;
  CGRect v168;

  v130 = a1;
  v131 = a4;
  v6 = sub_1D4922370();
  v154 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v149 = (char *)v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v126 - v9;
  v11 = type metadata accessor for VisualUnderstanding.ImageRegion();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v126 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = 0;
  result = 0;
  v16 = 0;
  v17 = *a2;
  v127 = a2[3];
  v128 = a2[4];
  v18 = *(_OWORD *)(a2 + 5);
  v129 = a2[7];
  v132 = v17;
  v138 = v18;
  if (v17 != 1)
  {
    v20 = a2 + 1;
    v19 = (_QWORD *)a2[1];
    v133 = v20[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v16 = v19;
  }
  if (*(_BYTE *)a3 != 1)
  {
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v155 = 0;
    v22 = 0;
LABEL_103:
    if (v132 == 1)
    {
      v120 = 0;
      v121 = 0;
      v122 = 0;
      v123 = 0uLL;
    }
    else
    {
      v120 = v129;
      swift_bridgeObjectRetain();
      v122 = v127;
      swift_bridgeObjectRetain();
      v121 = v128;
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      v123 = v138;
    }
    v124 = v131;
    v125 = v155;
    *v131 = v22;
    v124[1] = v125;
    v124[2] = v133;
    v124[3] = v122;
    v124[4] = v121;
    *(_OWORD *)(v124 + 5) = v123;
    v124[7] = v120;
    return result;
  }
  v148 = v10;
  v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (result)
    v22 = (_QWORD *)result;
  else
    v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v16)
    v21 = v16;
  v155 = v21;
  v23 = *(_QWORD *)(v130 + 16);
  if (!v23)
    goto LABEL_103;
  v24 = v130 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v25 = *(_QWORD *)(v12 + 72);
  v26 = v16;
  v126[1] = result;
  swift_bridgeObjectRetain();
  v126[2] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = 0;
  v144 = (unint64_t)"neric";
  v140 = 0x80000001D493F830;
  *(_QWORD *)&v28 = 136315138;
  v146 = v28;
  v145 = xmmword_1D4927560;
  v143 = "Model Postprocess Results";
  v142 = 0x80000001D493FD60;
  v141 = MEMORY[0x1E0DEE9B8] + 8;
  v147 = a3;
  v153 = v6;
  v137 = v14;
  v136 = v23;
  v135 = v24;
  v134 = v25;
  while (1)
  {
    sub_1D46A8550(v24 + v25 * v27, (uint64_t)v14);
    if (v14[96] != 1)
    {
      v29 = *((_QWORD *)v14 + 6);
      v152 = *(_QWORD *)(v29 + 16);
      if (v152)
        break;
    }
LABEL_11:
    ++v27;
    sub_1D46F3760((uint64_t)v14);
    if (v27 == v23)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      goto LABEL_103;
    }
  }
  v139 = v27;
  v151 = v29 + 32;
  result = swift_bridgeObjectRetain();
  v30 = 0;
  v150 = result;
  while (1)
  {
    if (v30 >= *(_QWORD *)(result + 16))
    {
      __break(1u);
LABEL_108:
      __break(1u);
      goto LABEL_109;
    }
    v31 = v151 + 80 * v30;
    v32 = *(double *)(v31 + 8);
    v33 = *(double *)(v31 + 16);
    v34 = *(double *)(v31 + 24);
    v35 = *(double *)(v31 + 32);
    v36 = *(_QWORD *)(v31 + 56);
    v37 = *(_QWORD *)(v31 + 64);
    v38 = *(_DWORD *)(v31 + 72);
    v39 = *(_QWORD **)(a3 + 24);
    v40 = v39[2];
    v159 = *(_QWORD *)(v31 + 48);
    v156 = v30;
    v157 = v36;
    if (v40)
    {
      v41 = v39[4] == v36 && v39[5] == v37;
      if (v41 || (result = sub_1D4922E38(), (result & 1) != 0))
      {
LABEL_22:
        v42 = qword_1ED98F398;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        if (v42 != -1)
          swift_once();
        v158 = v22;
        if (byte_1ED98F388 != 1)
          goto LABEL_47;
        v43 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
        v44 = objc_msgSend(v43, sel_bundleIdentifier);

        if (v44)
        {
          v45 = sub_1D492261C();
          v47 = v46;

          if (v45 == 0xD00000000000002BLL && v47 == (v144 | 0x8000000000000000))
          {
            swift_bridgeObjectRelease();
            goto LABEL_40;
          }
          v52 = sub_1D4922E38();
          swift_bridgeObjectRelease();
          if ((v52 & 1) != 0)
          {
LABEL_40:
            v53 = &qword_1EFEAA908;
            if (qword_1EFEA9C20 != -1)
            {
              swift_once();
              v53 = &qword_1EFEAA908;
            }
            goto LABEL_44;
          }
        }
        v53 = (uint64_t *)&off_1ED98F3F0;
        if (qword_1ED98F3A8 != -1)
        {
          swift_once();
          v53 = (uint64_t *)&off_1ED98F3F0;
        }
LABEL_44:
        v54 = *(void **)(*v53 + 32);
        swift_retain();
        v55 = (void *)sub_1D49225F8();
        LODWORD(v54) = objc_msgSend(v54, sel_BOOLForKey_, v55);
        swift_release();

        if ((_DWORD)v54)
        {
          v56 = qword_1EFEAAA30;
          v6 = v153;
          v57 = v154;
          if (qword_1EFEA9C78 != -1)
          {
            swift_once();
            v56 = qword_1EFEAAA30;
          }
LABEL_49:
          v58 = __swift_project_value_buffer(v6, (uint64_t)v56);
          v59 = v148;
          (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v148, v58, v6);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          v60 = sub_1D4922358();
          v61 = sub_1D4922910();
          if (os_log_type_enabled(v60, v61))
          {
            v62 = swift_slowAlloc();
            v63 = swift_slowAlloc();
            v160 = v63;
            *(_DWORD *)v62 = v146;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
            v64 = swift_allocObject();
            *(_OWORD *)(v64 + 16) = v145;
            v161.origin.x = v32;
            v161.origin.y = v33;
            v161.size.width = v34;
            v161.size.height = v35;
            MinX = CGRectGetMinX(v161);
            v66 = MEMORY[0x1E0DEF040];
            *(_QWORD *)(v64 + 56) = MEMORY[0x1E0DEF040];
            v67 = sub_1D46A492C();
            *(_QWORD *)(v64 + 64) = v67;
            *(CGFloat *)(v64 + 32) = MinX;
            v162.origin.x = v32;
            v162.origin.y = v33;
            v162.size.width = v34;
            v162.size.height = v35;
            MinY = CGRectGetMinY(v162);
            *(_QWORD *)(v64 + 96) = v66;
            *(_QWORD *)(v64 + 104) = v67;
            *(CGFloat *)(v64 + 72) = MinY;
            v163.origin.x = v32;
            v163.origin.y = v33;
            v163.size.width = v34;
            v163.size.height = v35;
            Width = CGRectGetWidth(v163);
            *(_QWORD *)(v64 + 136) = v66;
            *(_QWORD *)(v64 + 144) = v67;
            *(CGFloat *)(v64 + 112) = Width;
            v164.origin.x = v32;
            v164.origin.y = v33;
            v164.size.width = v34;
            v164.size.height = v35;
            Height = CGRectGetHeight(v164);
            *(_QWORD *)(v64 + 176) = v66;
            *(_QWORD *)(v64 + 184) = v67;
            *(CGFloat *)(v64 + 152) = Height;
            v71 = sub_1D4922640();
            *(_QWORD *)(v62 + 4) = sub_1D47F0250(v71, v72, &v160);
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1D467C000, v60, v61, "Annotated face kg id (detectorResult.ontology.knowledgeGraphID) to region %s", (uint8_t *)v62, 0xCu);
            swift_arrayDestroy();
            v73 = v63;
            a3 = v147;
            MEMORY[0x1D82635B8](v73, -1, -1);
            v74 = v62;
            v6 = v153;
            MEMORY[0x1D82635B8](v74, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }
          (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v6);
          swift_bridgeObjectRetain();
          v22 = v158;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v36 = v157;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            v22 = sub_1D48A9600(0, v22[2] + 1, 1, v22);
          v77 = v22[2];
          v76 = v22[3];
          if (v77 >= v76 >> 1)
            v22 = sub_1D48A9600((_QWORD *)(v76 > 1), v77 + 1, 1, v22);
          v22[2] = v77 + 1;
          v78 = &v22[7 * v77];
          v78[4] = v36;
          v78[5] = v37;
          *((_DWORD *)v78 + 12) = v38;
          *((CGFloat *)v78 + 7) = v32;
          *((CGFloat *)v78 + 8) = v33;
          *((CGFloat *)v78 + 9) = v34;
          *((CGFloat *)v78 + 10) = v35;
          goto LABEL_57;
        }
LABEL_47:
        v56 = qword_1ED98F3B0;
        v6 = v153;
        v57 = v154;
        if (qword_1ED98F3D0 != -1)
        {
          swift_once();
          v56 = qword_1ED98F3B0;
        }
        goto LABEL_49;
      }
      if (v40 != 1)
      {
        v48 = v39 + 7;
        v49 = 1;
        do
        {
          v50 = v49 + 1;
          if (__OFADD__(v49, 1))
            goto LABEL_108;
          if (*(v48 - 1) == v36 && *v48 == v37)
            goto LABEL_22;
          result = sub_1D4922E38();
          if ((result & 1) != 0)
            goto LABEL_22;
          v48 += 2;
          ++v49;
        }
        while (v50 != v40);
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
LABEL_57:
    v79 = *(_QWORD **)(a3 + 32);
    v80 = v79[2];
    if (v80)
    {
      v81 = v79[4] == v36 && v79[5] == v37;
      if (v81 || (result = sub_1D4922E38(), (result & 1) != 0))
      {
LABEL_63:
        if (qword_1ED98F398 != -1)
          swift_once();
        v158 = v22;
        if (byte_1ED98F388 != 1)
          goto LABEL_89;
        v82 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
        v83 = objc_msgSend(v82, sel_bundleIdentifier);

        if (v83)
        {
          v84 = sub_1D492261C();
          v86 = v85;

          if (v84 == 0xD00000000000002BLL && v86 == v140)
          {
            swift_bridgeObjectRelease();
LABEL_82:
            v92 = &qword_1EFEAA908;
            if (qword_1EFEA9C20 != -1)
            {
              swift_once();
              v92 = &qword_1EFEAA908;
            }
LABEL_86:
            v93 = *(void **)(*v92 + 32);
            swift_retain();
            v94 = (void *)sub_1D49225F8();
            LODWORD(v93) = objc_msgSend(v93, sel_BOOLForKey_, v94);
            swift_release();

            v6 = v153;
            if ((_DWORD)v93)
            {
              v95 = qword_1EFEAAA30;
              v96 = v154;
              v97 = v149;
              if (qword_1EFEA9C78 != -1)
              {
                swift_once();
                v95 = qword_1EFEAAA30;
              }
LABEL_91:
              v98 = __swift_project_value_buffer(v6, (uint64_t)v95);
              (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v97, v98, v6);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v99 = sub_1D4922358();
              v100 = sub_1D4922910();
              if (os_log_type_enabled(v99, v100))
              {
                v101 = swift_slowAlloc();
                v102 = swift_slowAlloc();
                v160 = v102;
                *(_DWORD *)v101 = v146;
                __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D408);
                v103 = swift_allocObject();
                *(_OWORD *)(v103 + 16) = v145;
                v165.origin.x = v32;
                v165.origin.y = v33;
                v165.size.width = v34;
                v165.size.height = v35;
                v104 = CGRectGetMinX(v165);
                v105 = MEMORY[0x1E0DEF040];
                *(_QWORD *)(v103 + 56) = MEMORY[0x1E0DEF040];
                v106 = sub_1D46A492C();
                *(_QWORD *)(v103 + 64) = v106;
                *(CGFloat *)(v103 + 32) = v104;
                v166.origin.x = v32;
                v166.origin.y = v33;
                v166.size.width = v34;
                v166.size.height = v35;
                v107 = CGRectGetMinY(v166);
                *(_QWORD *)(v103 + 96) = v105;
                *(_QWORD *)(v103 + 104) = v106;
                *(CGFloat *)(v103 + 72) = v107;
                v167.origin.x = v32;
                v167.origin.y = v33;
                v167.size.width = v34;
                v167.size.height = v35;
                v108 = CGRectGetWidth(v167);
                *(_QWORD *)(v103 + 136) = v105;
                *(_QWORD *)(v103 + 144) = v106;
                *(CGFloat *)(v103 + 112) = v108;
                v168.origin.x = v32;
                v168.origin.y = v33;
                v168.size.width = v34;
                v168.size.height = v35;
                v109 = CGRectGetHeight(v168);
                *(_QWORD *)(v103 + 176) = v105;
                *(_QWORD *)(v103 + 184) = v106;
                *(CGFloat *)(v103 + 152) = v109;
                v110 = sub_1D4922640();
                *(_QWORD *)(v101 + 4) = sub_1D47F0250(v110, v111, &v160);
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_1D467C000, v99, v100, "Annotated human kg id (detectorResult.ontology.knowledgeGraphID) to region %s", (uint8_t *)v101, 0xCu);
                swift_arrayDestroy();
                v112 = v102;
                a3 = v147;
                MEMORY[0x1D82635B8](v112, -1, -1);
                v113 = v101;
                v6 = v153;
                MEMORY[0x1D82635B8](v113, -1, -1);

                (*(void (**)(char *, uint64_t))(v154 + 8))(v97, v6);
              }
              else
              {

                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease_n();
                (*(void (**)(char *, uint64_t))(v96 + 8))(v97, v6);
              }
              v114 = swift_isUniquelyReferenced_nonNull_native();
              v115 = v157;
              v22 = v158;
              if ((v114 & 1) == 0)
                v155 = sub_1D48A9600(0, v155[2] + 1, 1, v155);
              v117 = v155[2];
              v116 = v155[3];
              if (v117 >= v116 >> 1)
                v155 = sub_1D48A9600((_QWORD *)(v116 > 1), v117 + 1, 1, v155);
              v118 = v155;
              v155[2] = v117 + 1;
              v119 = &v118[7 * v117];
              v119[4] = v115;
              v119[5] = v37;
              *((_DWORD *)v119 + 12) = v38;
              *((CGFloat *)v119 + 7) = v32;
              *((CGFloat *)v119 + 8) = v33;
              *((CGFloat *)v119 + 9) = v34;
              *((CGFloat *)v119 + 10) = v35;
              goto LABEL_99;
            }
LABEL_89:
            v95 = qword_1ED98F3B0;
            v96 = v154;
            v97 = v149;
            if (qword_1ED98F3D0 != -1)
            {
              swift_once();
              v95 = qword_1ED98F3B0;
            }
            goto LABEL_91;
          }
          v91 = sub_1D4922E38();
          swift_bridgeObjectRelease();
          if ((v91 & 1) != 0)
            goto LABEL_82;
        }
        v92 = (uint64_t *)&off_1ED98F3F0;
        if (qword_1ED98F3A8 != -1)
        {
          swift_once();
          v92 = (uint64_t *)&off_1ED98F3F0;
        }
        goto LABEL_86;
      }
      if (v80 != 1)
        break;
    }
LABEL_80:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
LABEL_99:
    result = v150;
    v30 = v156 + 1;
    if (v156 + 1 == v152)
    {
      swift_bridgeObjectRelease();
      v14 = v137;
      v23 = v136;
      v24 = v135;
      v25 = v134;
      v27 = v139;
      goto LABEL_11;
    }
  }
  v87 = v79 + 7;
  v88 = 1;
  while (1)
  {
    v89 = v88 + 1;
    if (__OFADD__(v88, 1))
      break;
    if (*(v87 - 1) == v36 && *v87 == v37)
      goto LABEL_63;
    result = sub_1D4922E38();
    if ((result & 1) != 0)
      goto LABEL_63;
    v87 += 2;
    ++v88;
    if (v89 == v80)
      goto LABEL_80;
  }
LABEL_109:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AnnotationExtractorProcessor()
{
  return objc_opt_self();
}

_QWORD *sub_1D4715910(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  __int128 v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;
  _OWORD v10[2];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v2 = swift_bridgeObjectRetain() + 48;
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    sub_1D4716524(v2, (uint64_t)&v8);
    if (v9)
    {
      sub_1D46FADFC(&v8, v10);
      *(_QWORD *)&v8 = 0;
      *((_QWORD *)&v8 + 1) = 0xE000000000000000;
      sub_1D492270C();
      sub_1D492270C();
      sub_1D4922C1C();
      v4 = v8;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_1D48A8FB8(0, v3[2] + 1, 1, v3);
      v6 = v3[2];
      v5 = v3[3];
      if (v6 >= v5 >> 1)
        v3 = sub_1D48A8FB8((_QWORD *)(v5 > 1), v6 + 1, 1, v3);
      v3[2] = v6 + 1;
      *(_OWORD *)&v3[2 * v6 + 4] = v4;
    }
    else
    {
      sub_1D46992EC((uint64_t)&v8, &qword_1EFEABDD0);
    }
    v2 += 48;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1D4715AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  __int128 v35[2];

  v31[1] = a2;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)v31 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)v31 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)v31 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v31 - v17;
  swift_getDynamicType();
  sub_1D46B2D44();
  v19 = swift_dynamicCastMetatype();
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v20(v18, v2, a1);
  if (!v19)
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v16, v18, a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAA80);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      goto LABEL_5;
    }
    v27 = v10;
    v20(v10, v2, a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAA88);
    if (swift_dynamicCast())
    {
      sub_1D46B2A10(v35, (uint64_t)v32);
      v28 = v33;
      v29 = v34;
      __swift_project_boxed_opaque_existential_1(v32, v33);
      v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAA90);
      if (!swift_dynamicCast())
      {
        v20(v7, v2, a1);
        v25 = sub_1D4922688();
        goto LABEL_16;
      }
      sub_1D46B2A10(v35, (uint64_t)v32);
      __swift_project_boxed_opaque_existential_1(v32, v33);
      v30 = sub_1D4922E14();
    }
    v25 = v30;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
LABEL_16:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v27, a1);
    return v25;
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v18, a1);
LABEL_5:
  v20(v13, v2, a1);
  v21 = sub_1D4922E20();
  if (v21)
  {
    v22 = (void *)v21;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, a1);
  }
  else
  {
    v22 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v23, v13, a1);
  }
  v24 = (void *)sub_1D4920E58();

  v25 = sub_1D4715DCC();
  return v25;
}

uint64_t sub_1D4715DCC()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_userInfo);
  v3 = MEMORY[0x1E0DEA968];
  v4 = sub_1D4922544();

  v5 = sub_1D47163D4(v4);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAA70);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D4928FE0;
  *(_QWORD *)(inited + 32) = 0x6E69616D6F64;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v7 = objc_msgSend(v1, sel_domain);
  v8 = sub_1D492261C();
  v10 = v9;

  *(_QWORD *)(inited + 48) = v8;
  *(_QWORD *)(inited + 56) = v10;
  *(_QWORD *)(inited + 72) = v3;
  *(_QWORD *)(inited + 80) = 1701080931;
  *(_QWORD *)(inited + 88) = 0xE400000000000000;
  v11 = objc_msgSend(v1, sel_code);
  v12 = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 96) = v11;
  *(_QWORD *)(inited + 120) = v12;
  *(_QWORD *)(inited + 128) = 0x7470697263736564;
  *(_QWORD *)(inited + 136) = 0xEB000000006E6F69;
  v13 = objc_msgSend(v1, sel_localizedDescription);
  sub_1D492261C();

  sub_1D492270C();
  swift_bridgeObjectRelease();
  sub_1D492270C();
  *(_QWORD *)(inited + 144) = 34;
  *(_QWORD *)(inited + 152) = 0xE100000000000000;
  *(_QWORD *)(inited + 168) = v3;
  *(_QWORD *)(inited + 176) = 0x6F666E4972657375;
  *(_QWORD *)(inited + 184) = 0xE800000000000000;
  if (*(_QWORD *)(v5 + 16))
  {
    v14 = MEMORY[0x1E0DEA968];
    v15 = sub_1D4922550();
    v17 = v16;
    swift_release();
  }
  else
  {
    swift_release();
    v15 = 0;
    v17 = 0;
    v14 = 0;
    *(_QWORD *)(inited + 208) = 0;
  }
  *(_QWORD *)(inited + 192) = v15;
  *(_QWORD *)(inited + 200) = v17;
  *(_QWORD *)(inited + 216) = v14;
  *(_QWORD *)(inited + 224) = 0xD000000000000010;
  *(_QWORD *)(inited + 232) = 0x80000001D49416B0;
  v18 = sub_1D471610C();
  if (v19)
  {
    v20 = MEMORY[0x1E0DEA968];
  }
  else
  {
    v18 = 0;
    v20 = 0;
    *(_QWORD *)(inited + 256) = 0;
  }
  *(_QWORD *)(inited + 240) = v18;
  *(_QWORD *)(inited + 248) = v19;
  *(_QWORD *)(inited + 264) = v20;
  sub_1D4715910(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEAAA78);
  swift_arrayDestroy();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D200);
  sub_1D46972D4();
  sub_1D49225D4();
  swift_bridgeObjectRelease();
  sub_1D492270C();
  swift_bridgeObjectRelease();
  sub_1D492270C();
  return 91;
}

uint64_t sub_1D471610C()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = objc_msgSend(v0, sel_underlyingErrors);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED98ECF0);
  v2 = sub_1D4922820();

  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRelease();
  if (!v3)
    return 0;
  v4 = objc_msgSend(v0, sel_underlyingErrors);
  v5 = sub_1D4922820();

  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1D48AB4A4(0, v6, 0);
    v7 = 0;
    do
    {
      v8 = *(void **)(v5 + 8 * v7 + 32);
      swift_getErrorValue();
      v9 = v8;
      v10 = sub_1D4715AA0(v18, v19);
      v12 = v11;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1D48AB4A4(0, *(_QWORD *)(v17 + 16) + 1, 1);
      v14 = *(_QWORD *)(v17 + 16);
      v13 = *(_QWORD *)(v17 + 24);
      if (v14 >= v13 >> 1)
        sub_1D48AB4A4(v13 > 1, v14 + 1, 1);
      ++v7;
      *(_QWORD *)(v17 + 16) = v14 + 1;
      v15 = v17 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v10;
      *(_QWORD *)(v15 + 40) = v12;
    }
    while (v6 != v7);
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D200);
  sub_1D46972D4();
  sub_1D49225D4();
  swift_bridgeObjectRelease();
  sub_1D492270C();
  swift_bridgeObjectRelease();
  sub_1D492270C();
  return 91;
}

uint64_t sub_1D4716350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98D3C0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1D4927210;
  *(_QWORD *)(v0 + 32) = sub_1D492261C();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = sub_1D492261C();
  *(_QWORD *)(v0 + 56) = v2;
  result = sub_1D492261C();
  *(_QWORD *)(v0 + 64) = result;
  *(_QWORD *)(v0 + 72) = v4;
  off_1EFEAAA68 = (_UNKNOWN *)v0;
  return result;
}

uint64_t sub_1D47163D4(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  size_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[2];

  v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_1D471656C((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    if (v1)
      swift_willThrow();
    else
      return v6;
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v2 = sub_1D471656C((uint64_t)v7, v4, v2);
    MEMORY[0x1D82635B8](v7, -1, -1);
  }
  return v2;
}

uint64_t sub_1D4716524(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFEABDD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D471656C(uint64_t result, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD v32[2];
  uint64_t v33;
  _BYTE v34[32];
  uint64_t v35;

  v28 = (unint64_t *)result;
  v29 = 0;
  v3 = 0;
  v35 = a3;
  v6 = *(_QWORD *)(a3 + 64);
  v4 = a3 + 64;
  v5 = v6;
  v7 = 1 << *(_BYTE *)(v4 - 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v5;
  v30 = v4;
  v31 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    while (1)
    {
      if (v9)
      {
        v10 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v11 = v10 | (v3 << 6);
      }
      else
      {
        v12 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_43;
        if (v12 >= v31)
          return sub_1D4716848(v28, a2, v29, v35);
        v13 = *(_QWORD *)(v30 + 8 * v12);
        ++v3;
        if (!v13)
        {
          v3 = v12 + 1;
          if (v12 + 1 >= v31)
            return sub_1D4716848(v28, a2, v29, v35);
          v13 = *(_QWORD *)(v30 + 8 * v3);
          if (!v13)
          {
            v3 = v12 + 2;
            if (v12 + 2 >= v31)
              return sub_1D4716848(v28, a2, v29, v35);
            v13 = *(_QWORD *)(v30 + 8 * v3);
            if (!v13)
            {
              v14 = v12 + 3;
              if (v14 >= v31)
                return sub_1D4716848(v28, a2, v29, v35);
              v13 = *(_QWORD *)(v30 + 8 * v14);
              if (!v13)
              {
                while (1)
                {
                  v3 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    goto LABEL_44;
                  if (v3 >= v31)
                    return sub_1D4716848(v28, a2, v29, v35);
                  v13 = *(_QWORD *)(v30 + 8 * v3);
                  ++v14;
                  if (v13)
                    goto LABEL_20;
                }
              }
              v3 = v14;
            }
          }
        }
LABEL_20:
        v9 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v3 << 6);
      }
      v15 = (uint64_t *)(*(_QWORD *)(v35 + 48) + 16 * v11);
      v17 = *v15;
      v16 = v15[1];
      sub_1D4696FAC(*(_QWORD *)(v35 + 56) + 32 * v11, (uint64_t)v34);
      v32[0] = v17;
      v32[1] = v16;
      sub_1D4696FAC((uint64_t)v34, (uint64_t)&v33);
      v18 = qword_1EFEA9C80;
      swift_bridgeObjectRetain_n();
      if (v18 != -1)
        swift_once();
      v19 = (char *)off_1EFEAAA68;
      v20 = *((_QWORD *)off_1EFEAAA68 + 2);
      if (v20)
        break;
LABEL_38:
      sub_1D46992EC((uint64_t)v32, &qword_1EFEAAA98);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v28 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v29++, 1))
        goto LABEL_45;
    }
    if (*((_QWORD *)off_1EFEAAA68 + 4) != v17 || *((_QWORD *)off_1EFEAAA68 + 5) != v16)
    {
      result = sub_1D4922E38();
      if ((result & 1) == 0)
        break;
    }
LABEL_4:
    sub_1D46992EC((uint64_t)v32, &qword_1EFEAAA98);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    result = swift_bridgeObjectRelease();
  }
  if (v20 == 1)
    goto LABEL_38;
  v22 = v19 + 56;
  v23 = 1;
  while (1)
  {
    v24 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (*(v22 - 1) == v17 && *v22 == v16)
      goto LABEL_4;
    result = sub_1D4922E38();
    if ((result & 1) != 0)
      goto LABEL_4;
    v22 += 2;
    ++v23;
    if (v24 == v20)
      goto LABEL_38;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1D4716848(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  _OWORD v32[2];
  _OWORD v33[2];

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED98F400);
  result = sub_1D4922C7C();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v30)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v30)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v10 = v14 + 2;
          if (v14 + 2 >= v30)
            return v8;
          v15 = a1[v10];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v30)
              return v8;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v10 >= v30)
                  return v8;
                v15 = a1[v10];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v10 = v16;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v19 = *v17;
    v18 = v17[1];
    sub_1D4696FAC(*(_QWORD *)(v4 + 56) + 32 * v13, (uint64_t)v33);
    sub_1D46FADFC(v33, v32);
    sub_1D4922EF8();
    swift_bridgeObjectRetain();
    sub_1D49226D0();
    result = sub_1D4922F34();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v19;
    v28[1] = v18;
    result = (uint64_t)sub_1D46FADFC(v32, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v23));
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

