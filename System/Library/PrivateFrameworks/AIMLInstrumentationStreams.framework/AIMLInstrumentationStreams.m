uint64_t sub_21DC06FEC()
{
  return 2;
}

uint64_t SIOrderedEvent.dataVersion.getter()
{
  return 2;
}

uint64_t static SIOrderedEvent.event(with:dataVersion:)(uint64_t a1, unint64_t a2, int a3)
{
  void *v5;
  void *v6;
  id v7;
  uint64_t result;
  id v9;
  void *v10;
  id v11;

  if (a3 == 2)
  {
    v9 = objc_allocWithZone(MEMORY[0x24BE95A68]);
    sub_21DC0710C(a1, a2);
    v10 = (void *)sub_21DC714EC();
    v11 = objc_msgSend(v9, sel_initWithData_, v10);
    sub_21DC07150(a1, a2);

    if (v11)
    {
      result = swift_dynamicCastUnknownClass();
      if (result)
        return result;

    }
  }
  else if (a3 == 1)
  {
    v5 = (void *)objc_opt_self();
    v6 = (void *)sub_21DC714EC();
    v7 = objc_msgSend(v5, sel_deserializeFromData_, v6);

    if (v7)
    {
      result = swift_dynamicCastUnknownClass();
      if (result)
        return result;

    }
  }
  return 0;
}

uint64_t sub_21DC0710C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_21DC07150(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

id sub_21DC07194(uint64_t a1, uint64_t a2, void *a3, int a4)
{
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;

  v5 = a3;
  v6 = sub_21DC71504();
  v8 = v7;

  swift_getObjCClassMetadata();
  v9 = (void *)static SIOrderedEvent.event(with:dataVersion:)(v6, v8, a4);
  sub_21DC07150(v6, v8);
  return v9;
}

uint64_t sub_21DC07214()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if ((*(_BYTE *)(v0 + 25) & 1) == 0 && (*(_BYTE *)(v0 + 24) & 1) == 0)
  {
    if (qword_2553A7F08 != -1)
      swift_once();
    v1 = sub_21DC719D8();
    __swift_project_value_buffer(v1, (uint64_t)qword_2553A9A28);
    v2 = sub_21DC719C0();
    v3 = sub_21DC71D08();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_21DC05000, v2, v3, "Releasing Sandbox extension to SiriSELF data vault", v4, 2u);
      MEMORY[0x22079DA24](v4, -1, -1);
    }

    sandbox_extension_release();
  }
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnifiedSourceStream()
{
  return objc_opt_self();
}

uint64_t sub_21DC07334@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, _QWORD, uint64_t, uint64_t);
  int v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  id v74;
  id v75;
  id v76;
  char *v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  int v87;
  int v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  int v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v92 = a8;
  v83 = a7;
  v90 = a6;
  v91 = a5;
  v87 = a2;
  v88 = a4;
  v80 = a1;
  v81 = a3;
  v98 = a9;
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8198);
  v95 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85, v10);
  v94 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A81A0);
  v96 = *(_QWORD *)(v12 - 8);
  v97 = v12;
  MEMORY[0x24BDAC7A8](v12, v13);
  v86 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A81A8);
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v82 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v89 = (uint64_t)&v80 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v25 = (char *)&v80 - v24;
  v27 = MEMORY[0x24BDAC7A8](v23, v26);
  v93 = (char *)&v80 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27, v29);
  v32 = (char *)&v80 - v31;
  MEMORY[0x24BDAC7A8](v30, v33);
  v84 = (char *)&v80 - v34;
  v35 = sub_21DC714C8();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35, v37);
  v39 = (char *)&v80 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(qword_253F35F70);
  v42 = MEMORY[0x24BDAC7A8](v40, v41);
  v44 = (char *)&v80 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v42, v45);
  v47 = (char *)&v80 - v46;
  v48 = type metadata accessor for UnifiedBiomeStream();
  v50 = MEMORY[0x24BDAC7A8](v48, v49);
  v52 = (char *)&v80 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v50, v53);
  v99 = (uint64_t)&v80 - v54;
  sub_21DC07CC0(a10, (uint64_t)v47, qword_253F35F70);
  sub_21DC07CC0((uint64_t)v47, (uint64_t)v44, qword_253F35F70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v44, 1, v35) == 1)
  {
    sub_21DC716C0();
    sub_21DC716B4();
    sub_21DC07C84((uint64_t)v47, qword_253F35F70);
    sub_21DC07C84((uint64_t)v44, qword_253F35F70);
    v55 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  }
  else
  {
    sub_21DC07C84((uint64_t)v47, qword_253F35F70);
    v55 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
    v55(v39, v44, v35);
  }
  v56 = (uint64_t)v84;
  v57 = v85;
  v59 = (uint64_t)v82;
  v58 = v83;
  v55(v52, v39, v35);
  sub_21DC07C40((uint64_t)v52, v99);
  if ((v87 & 1) != 0)
  {
    v60 = sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v32, 1, 1, v60);
    v64 = v86;
  }
  else
  {
    sub_21DC7151C();
    v60 = sub_21DC71588();
    v61 = *(_QWORD *)(v60 - 8);
    v62 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56);
    v62(v32, 0, 1, v60);
    v63 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48))(v32, 1, v60);
    v64 = v86;
    if (v63 != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v61 + 32))(v56, v32, v60);
      v62((char *)v56, 0, 1, v60);
      goto LABEL_9;
    }
  }
  sub_21DC71588();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v56, 1, 1, v60);
  sub_21DC07C84((uint64_t)v32, (uint64_t *)&unk_2553A81A8);
LABEL_9:
  v65 = (uint64_t)v93;
  if ((v88 & 1) != 0)
  {
    v66 = sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v25, 1, 1, v66);
  }
  else
  {
    sub_21DC7151C();
    v66 = sub_21DC71588();
    v67 = *(_QWORD *)(v66 - 8);
    v68 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56);
    v68(v25, 0, 1, v66);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v25, 1, v66) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v65, v25, v66);
      v68((char *)v65, 0, 1, v66);
      goto LABEL_14;
    }
  }
  sub_21DC71588();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v65, 1, 1, v66);
  sub_21DC07C84((uint64_t)v25, (uint64_t *)&unk_2553A81A8);
LABEL_14:
  v69 = v89;
  sub_21DC07CC0(v56, v89, (uint64_t *)&unk_2553A81A8);
  sub_21DC07CC0(v65, v59, (uint64_t *)&unk_2553A81A8);
  if ((v90 & 1) != 0)
    v70 = 0;
  else
    v70 = v91;
  if ((v92 & 1) != 0)
    v71 = 0;
  else
    v71 = v58;
  sub_21DC07D04();
  v72 = sub_21DC42828(v69, v59, v70, v71, 0);
  v73 = v99;
  v74 = sub_21DC60FB4();
  v75 = objc_msgSend(v74, sel_publisherWithOptions_, v72, v80, v81);

  v76 = v75;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A81C0);
  v77 = v94;
  sub_21DC7166C();
  type metadata accessor for TimestampedOrderedEvent();
  sub_21DC07D84(&qword_2553A81C8, &qword_2553A8198, MEMORY[0x24BE0C968]);
  sub_21DC71624();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v77, v57);
  sub_21DC07D84(&qword_2553A81D0, &qword_2553A81A0, MEMORY[0x24BE0C8A8]);
  v78 = v97;
  sub_21DC71618();
  sub_21DC71660();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v64, v78);

  sub_21DC07C84(v65, (uint64_t *)&unk_2553A81A8);
  sub_21DC07C84(v56, (uint64_t *)&unk_2553A81A8);
  return sub_21DC07DC4(v73);
}

void type metadata accessor for TTSSchemaTTSClientEvent_WhichEvent_Type(uint64_t a1)
{
  sub_21DC07E54(a1, &qword_2553A8120);
}

void type metadata accessor for SICSchemaSICClientEvent_WhichEvent_Type(uint64_t a1)
{
  sub_21DC07E54(a1, &qword_2553A8128);
}

void type metadata accessor for RRSchemaRRClientEvent_WhichEvent_Type(uint64_t a1)
{
  sub_21DC07E54(a1, &qword_2553A8130);
}

void type metadata accessor for RFSchemaRFClientEvent_WhichEvent_Type(uint64_t a1)
{
  sub_21DC07E54(a1, &qword_2553A8138);
}

void type metadata accessor for POMMESSchemaPOMMESClientEvent_WhichEvent_Type(uint64_t a1)
{
  sub_21DC07E54(a1, &qword_2553A8140);
}

void type metadata accessor for ORCHSchemaORCHClientEvent_WhichEvent_Type(uint64_t a1)
{
  sub_21DC07E54(a1, &qword_2553A8148);
}

void type metadata accessor for NLXSchemaNLXClientEvent_WhichEvent_Type(uint64_t a1)
{
  sub_21DC07E54(a1, &qword_2553A8150);
}

void type metadata accessor for NETSchemaNETClientEvent_WhichEvent_Type(uint64_t a1)
{
  sub_21DC07E54(a1, &qword_2553A8158);
}

void type metadata accessor for MHSchemaMHClientEvent_WhichEvent_Type(uint64_t a1)
{
  sub_21DC07E54(a1, &qword_2553A8160);
}

void type metadata accessor for FLOWSchemaFLOWClientEvent_WhichEvent_Type(uint64_t a1)
{
  sub_21DC07E54(a1, &qword_2553A8168);
}

void type metadata accessor for DIMSchemaDIMClientEvent_WhichEvent_Type(uint64_t a1)
{
  sub_21DC07E54(a1, &qword_2553A8170);
}

void type metadata accessor for SISchemaClientEvent_WhichEvent_Type(uint64_t a1)
{
  sub_21DC07E54(a1, &qword_2553A8178);
}

void type metadata accessor for CNVSchemaCNVClientEvent_WhichEvent_Type(uint64_t a1)
{
  sub_21DC07E54(a1, &qword_2553A8180);
}

void type metadata accessor for ASRSchemaASRClientEvent_WhichEvent_Type(uint64_t a1)
{
  sub_21DC07E54(a1, &qword_2553A8188);
}

void type metadata accessor for ANCSchemaANCClientEvent_WhichEvent_Type(uint64_t a1)
{
  sub_21DC07E54(a1, &qword_2553A8190);
}

id sub_21DC07B30(void *a1)
{
  id result;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(a1, sel_eventBody);
  if (result)
  {
    v3 = result;
    sub_21DC71774();
    v4 = v3;
    v5 = sub_21DC71780();
    objc_msgSend(a1, sel_timestamp);
    v7 = v6;

    type metadata accessor for TimestampedOrderedEvent();
    result = (id)swift_allocObject();
    *((_QWORD *)result + 2) = v7;
    *((_QWORD *)result + 3) = v5;
  }
  return result;
}

uint64_t sub_21DC07BCC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10)
{
  return sub_21DC07334(a1, a2 & 1, a3, a4 & 1, a5, a6 & 1, a7, a8 & 1, a9, a10);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x22079D94C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_21DC07C40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UnifiedBiomeStream();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21DC07C84(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21DC07CC0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_21DC07D04()
{
  unint64_t result;

  result = qword_2553A81B8;
  if (!qword_2553A81B8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2553A81B8);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x22079D958](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_21DC07D84(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x22079D964](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21DC07DC4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UnifiedBiomeStream();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

void type metadata accessor for SISchemaUEIRequestStatus(uint64_t a1)
{
  sub_21DC07E54(a1, &qword_2553A81D8);
}

void type metadata accessor for SISchemaInvocationSource(uint64_t a1)
{
  sub_21DC07E54(a1, &qword_2553A81E0);
}

void type metadata accessor for BPSCompletionState(uint64_t a1)
{
  sub_21DC07E54(a1, &qword_2553A81E8);
}

void sub_21DC07E54(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void OrderedEvent.compactMap<A, B>(_:)(void (*a1)(void)@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6;
  id v7;

  v6 = sub_21DC71750();
  if (v6)
  {
    v7 = (id)v6;
    a1();

  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, 1, 1, a2);
  }
}

void OrderedEvent.compactMap2<A, B, C>(_:)(void (*a1)(void)@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;

  v6 = sub_21DC7175C();
  if (v6)
  {
    v8 = (void *)v6;
    v9 = v7;
    a1();

  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, 1, 1, a2);
  }
}

uint64_t Sequence<>.filterInner<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(_BYTE *, uint64_t))(v12 + 16))(&v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], v5);
  v15 = a3;
  v16 = a4;
  v17 = a5;
  v18 = a1;
  v19 = a2;
  return sub_21DC71B4C();
}

uint64_t sub_21DC08078()
{
  uint64_t v0;
  void *v1;
  char v2;
  char v4;

  v0 = sub_21DC71750();
  if (v0)
  {
    v1 = (void *)v0;
    v2 = sub_21DC082E4();

  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE1328] - 8) + 56))(&v4, 1, 1);
    v2 = v4;
  }
  return v2 & 1;
}

uint64_t sub_21DC08104()
{
  return sub_21DC08078() & 1;
}

uint64_t Sequence<>.compactMapInner<A, B>(_:)()
{
  return sub_21DC71B28();
}

void sub_21DC08170(uint64_t a1@<X8>)
{
  uint64_t v1;

  OrderedEvent.compactMap<A, B>(_:)(*(void (**)(void))(v1 + 48), *(_QWORD *)(v1 + 32), a1);
}

uint64_t Sequence<>.compactMapInner2<A, B, C>(_:)()
{
  return sub_21DC71B28();
}

void sub_21DC081F0(uint64_t a1@<X8>)
{
  uint64_t v1;

  OrderedEvent.compactMap2<A, B, C>(_:)(*(void (**)(void))(v1 + 56), *(_QWORD *)(v1 + 40), a1);
}

uint64_t Sequence<>.getInnerEvent<A>()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD v5[16];

  v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v5[8] = a1;
  v5[9] = a2;
  v5[10] = a2;
  v5[11] = a3;
  v5[12] = sub_21DC082DC;
  v5[13] = v5;
  v5[5] = sub_21DC71B28();
  v3 = sub_21DC71BDC();
  MEMORY[0x22079D964](MEMORY[0x24BEE12E0], v3);
  sub_21DC71CCC();
  swift_bridgeObjectRelease();
  return v5[6];
}

id sub_21DC082DC@<X0>(id a1@<X0>, id *a2@<X8>)
{
  *a2 = a1;
  return a1;
}

uint64_t sub_21DC082E4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 40))() & 1;
}

uint64_t sub_21DC08308@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  int v61;
  id v62;
  int v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v65 = a8;
  v66 = a7;
  v63 = a6;
  v64 = a5;
  v61 = a4;
  v59 = a1;
  v60 = a3;
  v72 = a9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8198);
  v67 = *(_QWORD *)(v10 - 8);
  v68 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8318);
  v70 = *(_QWORD *)(v14 - 8);
  v71 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v69 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A81A8);
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v19, v22);
  v25 = (char *)&v59 - v24;
  v27 = MEMORY[0x24BDAC7A8](v23, v26);
  v29 = (char *)&v59 - v28;
  v31 = MEMORY[0x24BDAC7A8](v27, v30);
  v33 = (char *)&v59 - v32;
  v35 = MEMORY[0x24BDAC7A8](v31, v34);
  v37 = (char *)&v59 - v36;
  MEMORY[0x24BDAC7A8](v35, v38);
  v40 = (char *)&v59 - v39;
  v41 = (id)BiomeLibrary();
  v42 = objc_msgSend(v41, sel_Siri, v59, v60);
  swift_unknownObjectRelease();
  v43 = objc_msgSend(v42, sel_SELFProcessedEvent);
  swift_unknownObjectRelease();
  v62 = v43;
  if ((a2 & 1) != 0)
  {
    v44 = sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v37, 1, 1, v44);
LABEL_6:
    sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v40, 1, 1, v44);
    sub_21DC0892C((uint64_t)v37);
    if ((v61 & 1) != 0)
      goto LABEL_4;
    goto LABEL_7;
  }
  sub_21DC7151C();
  v44 = sub_21DC71588();
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56);
  v46(v37, 0, 1, v44);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v37, 1, v44) == 1)
    goto LABEL_6;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v40, v37, v44);
  v46(v40, 0, 1, v44);
  if ((v61 & 1) != 0)
  {
LABEL_4:
    v47 = sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v29, 1, 1, v47);
LABEL_8:
    sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v33, 1, 1, v47);
    sub_21DC0892C((uint64_t)v29);
    goto LABEL_10;
  }
LABEL_7:
  sub_21DC7151C();
  v47 = sub_21DC71588();
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56);
  v49(v29, 0, 1, v47);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v29, 1, v47) == 1)
    goto LABEL_8;
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v33, v29, v47);
  v49(v33, 0, 1, v47);
LABEL_10:
  sub_21DC0896C((uint64_t)v40, (uint64_t)v25);
  sub_21DC0896C((uint64_t)v33, (uint64_t)v21);
  if ((v63 & 1) != 0)
    v50 = 0;
  else
    v50 = v64;
  if ((v65 & 1) != 0)
    v51 = 0;
  else
    v51 = v66;
  sub_21DC07D04();
  v52 = sub_21DC42828((uint64_t)v25, (uint64_t)v21, v50, v51, 0);
  v53 = v62;
  v54 = objc_msgSend(v62, sel_publisherWithOptions_, v52);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A81C0);
  sub_21DC7166C();
  type metadata accessor for AnteroEvent();
  sub_21DC07D84(&qword_2553A8320, &qword_2553A8198, MEMORY[0x24BE0C968]);
  v55 = v68;
  v56 = v69;
  sub_21DC71624();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v13, v55);
  sub_21DC07D84(&qword_2553A8328, &qword_2553A8318, MEMORY[0x24BE0C8A8]);
  v57 = v71;
  sub_21DC71618();
  sub_21DC71660();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v56, v57);

  sub_21DC0892C((uint64_t)v33);
  return sub_21DC0892C((uint64_t)v40);
}

id sub_21DC0882C(void *a1)
{
  id v2;
  uint64_t v3;
  double v4;
  double v5;
  id v6;
  id v7;

  type metadata accessor for TimestampedOrderedEvent();
  swift_allocObject();
  v2 = a1;
  v3 = TimestampedOrderedEvent.init(biomeStoreEvent:)(v2);
  objc_msgSend(v2, sel_timestamp);
  v5 = v4;
  v6 = objc_allocWithZone((Class)type metadata accessor for AnteroEvent());
  v7 = sub_21DC47424(v3, v5);
  swift_release();
  return v7;
}

uint64_t sub_21DC088C0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SelfProcessedEventJoinableStream()
{
  return objc_opt_self();
}

void sub_21DC088F0(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(*(_QWORD *)v1 + 16);
}

uint64_t sub_21DC08900@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  return sub_21DC08308(a1, a2 & 1, a3, a4 & 1, a5, a6 & 1, a7, a8 & 1, a9);
}

uint64_t sub_21DC0892C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A81A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21DC0896C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A81A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21DC089B4(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;

  result = sub_21DC137E0();
  if ((v4 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  sub_21DC0BF88(result, v3, 0, a1);
  return swift_bridgeObjectRetain();
}

uint64_t SiriConversation.turns.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_21DC08B5C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___ISSiriConversation_turns);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  if (!sub_21DC71FCC())
    goto LABEL_8;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_9:
    v3 = (id)MEMORY[0x22079D208](0, v1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v3 = *(id *)(v1 + 32);
LABEL_6:
    v4 = v3;
    swift_bridgeObjectRelease();

    return;
  }
  __break(1u);
}

uint64_t sub_21DC08D78()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  id v4;
  void *v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___ISSiriConversation_turns);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  result = sub_21DC71FCC();
  if (!result)
    goto LABEL_8;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_9:
    v4 = (id)MEMORY[0x22079D208](0, v1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(v1 + 32);
LABEL_6:
    v5 = v4;
    swift_bridgeObjectRelease();

    return sub_21DC7151C();
  }
  __break(1u);
  return result;
}

void sub_21DC08EF4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  void *v13;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___ISSiriConversation_turns);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  if (!sub_21DC71FCC())
    goto LABEL_11;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_12:
    v3 = (id)MEMORY[0x22079D208](0, v1);
    goto LABEL_6;
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v3 = *(id *)(v1 + 32);
LABEL_6:
  v4 = v3;
  swift_bridgeObjectRelease();
  v5 = sub_21DC0BE64();
  v6 = sub_21DC26320();
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_14;
  v7 = sub_21DC0A464(v5);
  if ((v8 & 1) == 0)
    goto LABEL_14;
  v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = sub_21DC089B4(v9);
  swift_bridgeObjectRelease();
  if (v10)
  {
    v11 = v4;
    v12 = sub_21DC0BFDC(v10, (uint64_t)v11);
    swift_bridgeObjectRelease();

    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8338);
    *(_QWORD *)(swift_initStackObject() + 16) = v12;
    v13 = (void *)sub_21DC09288();
    swift_release();
    sub_21DC717F8();

    return;
  }
LABEL_15:
  __break(1u);
}

id SiriConversation.__allocating_init(turns:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return SiriConversation.init(turns:)(a1);
}

id SiriConversation.init(turns:)(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  char *v5;
  unint64_t v6;
  objc_super v7;
  uint64_t v8;

  if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
  {
    v5 = v1;
    v6 = swift_bridgeObjectRetain();
    v2 = (uint64_t)sub_21DC094A0(v6, (void (*)(_QWORD *, uint64_t, unint64_t))sub_21DC5F35C);
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = a1 & 0xFFFFFFFFFFFFFF8;
    v3 = v1;
    swift_bridgeObjectRetain();
  }
  v8 = v2;
  sub_21DC09A5C(&v8);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v1[OBJC_IVAR___ISSiriConversation_turns] = v8;

  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for SiriConversation();
  return objc_msgSendSuper2(&v7, sel_init);
}

id SiriConversation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SiriConversation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SiriConversation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SiriConversation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_21DC09268()
{
  sub_21DC08EF4();
}

uint64_t sub_21DC09288()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t i;
  id v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  unint64_t v12;

  v12 = MEMORY[0x24BEE4AF8];
  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_20:
    result = swift_bridgeObjectRelease();
    v8 = MEMORY[0x24BEE4AF8];
    if (!(MEMORY[0x24BEE4AF8] >> 62))
      goto LABEL_14;
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  result = sub_21DC71FCC();
  v2 = result;
  if (!result)
    goto LABEL_20;
LABEL_3:
  if (v2 < 1)
    goto LABEL_25;
  for (i = 0; i != v2; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0)
      v5 = (id)MEMORY[0x22079D208](i, v1);
    else
      v5 = *(id *)(v1 + 8 * i + 32);
    v6 = v5;
    v7 = sub_21DC71720();

    if (v7)
    {
      MEMORY[0x22079CE84]();
      if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_21DC71BA0();
      sub_21DC71BC4();
      sub_21DC71B94();
    }
  }
  result = swift_bridgeObjectRelease();
  v8 = v12;
  if (!(v12 >> 62))
  {
LABEL_14:
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_15;
LABEL_22:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_23;
  }
LABEL_21:
  swift_bridgeObjectRetain();
  v11 = sub_21DC71FCC();
  result = swift_bridgeObjectRelease();
  if (!v11)
    goto LABEL_22;
LABEL_15:
  if ((v8 & 0xC000000000000001) != 0)
  {
LABEL_23:
    v9 = (id)MEMORY[0x22079D208](0, v8);
    goto LABEL_18;
  }
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v9 = *(id *)(v8 + 32);
LABEL_18:
    v10 = v9;
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

_QWORD *sub_21DC0947C(unint64_t a1)
{
  return sub_21DC094A0(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_21DC5F35C);
}

_QWORD *sub_21DC09488(unint64_t a1)
{
  return sub_21DC094A0(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_21DC5F380);
}

_QWORD *sub_21DC09494(unint64_t a1)
{
  return sub_21DC094A0(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_21DC5F584);
}

_QWORD *sub_21DC094A0(unint64_t a1, void (*a2)(_QWORD *, uint64_t, unint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t, unint64_t);

  if (a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v4 <= 0)
    {
      v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9780);
      v5 = (_QWORD *)swift_allocObject();
      v6 = _swift_stdlib_malloc_size(v5);
      v7 = v6 - 32;
      if (v6 < 32)
        v7 = v6 - 25;
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(_QWORD *, uint64_t, unint64_t))v4)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v4 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    if (!v4)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v5;
}

_QWORD *sub_21DC095A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A83A0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  v5 = sub_21DC0B0C8((uint64_t)&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_21DC0C1C4();
  if (v5 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_21DC09690(uint64_t a1)
{
  return sub_21DC09974(a1, &qword_2553A8398, (uint64_t (*)(_QWORD *, _QWORD *, uint64_t, uint64_t))sub_21DC0B2E8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21DC0C1C4);
}

size_t sub_21DC096AC(uint64_t a1)
{
  return sub_21DC0981C(a1, &qword_2553A8390, (uint64_t *)&unk_2553AA530, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair);
}

size_t sub_21DC096C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8388);
  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2553A8380) - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2553A8380) - 8) + 80);
      v10 = sub_21DC0B4EC(&v11, (uint64_t)v6 + ((v9 + 32) & ~v9), v1, a1);
      swift_bridgeObjectRetain();
      sub_21DC0C1C4();
      if (v10 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_21DC09800(uint64_t a1)
{
  return sub_21DC0981C(a1, &qword_2553A8370, &qword_2553A8368, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
}

size_t sub_21DC0981C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  size_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v11);
  if (v9)
  {
    if (result - v10 != 0x8000000000000000 || v9 != -1)
    {
      v11[2] = v4;
      v11[3] = 2 * ((uint64_t)(result - v10) / v9);
      v14 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 80);
      v15 = sub_21DC0B7E0(&v16, (uint64_t)v11 + ((v14 + 32) & ~v14), v4, a1, a3, a4);
      swift_bridgeObjectRetain();
      sub_21DC0C1C4();
      if (v15 == v4)
        return (size_t)v11;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_21DC09958(uint64_t a1)
{
  return sub_21DC09974(a1, &qword_2553A83A8, (uint64_t (*)(_QWORD *, _QWORD *, uint64_t, uint64_t))sub_21DC0BAD0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21DC0C344);
}

_QWORD *sub_21DC09974(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD *, _QWORD *, uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  _QWORD *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[5];

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = (_QWORD *)swift_allocObject();
  v9 = _swift_stdlib_malloc_size(v8);
  v10 = v9 - 32;
  if (v9 < 32)
    v10 = v9 - 17;
  v8[2] = v4;
  v8[3] = 2 * (v10 >> 4);
  v11 = a3(v18, v8 + 4, v4, a1);
  v12 = v18[0];
  v13 = v18[1];
  v14 = v18[2];
  v15 = v18[3];
  v16 = v18[4];
  swift_bridgeObjectRetain();
  a4(v12, v13, v14, v15, v16);
  if (v11 != v4)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v8;
}

uint64_t sub_21DC09A5C(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_21DC60F88();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_21DC09AD4(v6);
  return sub_21DC71F0C();
}

uint64_t sub_21DC09AD4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  char v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  unint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *__dst;
  uint64_t v95;

  v2 = v1;
  v4 = a1[1];
  result = sub_21DC72068();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_129;
    if (v4)
      return sub_21DC0A15C(0, v4, 1, a1);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_137;
  v7 = result;
  v89 = a1;
  if (v4 < 2)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v95 = MEMORY[0x24BEE4AF8];
    __dst = (char *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_95:
      v81 = v10;
      if (v13 >= 2)
      {
        v82 = *v89;
        do
        {
          v83 = v13 - 2;
          if (v13 < 2)
            goto LABEL_124;
          if (!v82)
            goto LABEL_136;
          v84 = v81;
          v85 = *(_QWORD *)&v81[16 * v83 + 32];
          v86 = *(_QWORD *)&v81[16 * v13 + 24];
          sub_21DC0A1D0((char *)(v82 + 8 * v85), (char *)(v82 + 8 * *(_QWORD *)&v81[16 * v13 + 16]), v82 + 8 * v86, __dst);
          if (v2)
            break;
          if (v86 < v85)
            goto LABEL_125;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v84 = sub_21DC5B7D4((uint64_t)v84);
          if (v83 >= *((_QWORD *)v84 + 2))
            goto LABEL_126;
          v87 = &v84[16 * v83 + 32];
          *(_QWORD *)v87 = v85;
          *((_QWORD *)v87 + 1) = v86;
          v88 = *((_QWORD *)v84 + 2);
          if (v13 > v88)
            goto LABEL_127;
          memmove(&v84[16 * v13 + 16], &v84[16 * v13 + 32], 16 * (v88 - v13));
          v81 = v84;
          *((_QWORD *)v84 + 2) = v88 - 1;
          v13 = v88 - 1;
        }
        while (v88 > 2);
      }
LABEL_92:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v95 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_21DC71B94();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v8 = v6 >> 1;
    type metadata accessor for SiriTurn();
    v9 = sub_21DC71BB8();
    *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    __dst = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    v95 = v9;
  }
  v11 = 0;
  v12 = *a1;
  v90 = *a1 - 8;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v91 = v7;
  v92 = v4;
  v93 = *a1;
  while (1)
  {
    v14 = v11++;
    if (v11 < v4)
    {
      v15 = *(double *)(*(_QWORD *)(v12 + 8 * v11) + OBJC_IVAR___ISEventGraph_timestamp);
      v16 = *(double *)(*(_QWORD *)(v12 + 8 * v14) + OBJC_IVAR___ISEventGraph_timestamp);
      v11 = v14 + 2;
      if (v14 + 2 < v4)
      {
        v17 = v15;
        while (1)
        {
          v18 = v17;
          v17 = *(double *)(*(_QWORD *)(v12 + 8 * v11) + OBJC_IVAR___ISEventGraph_timestamp);
          if (v15 < v16 == v17 >= v18)
            break;
          if (v4 == ++v11)
          {
            v11 = v4;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v11 < v14)
          goto LABEL_130;
        if (v14 < v11)
        {
          v19 = (uint64_t *)(v90 + 8 * v11);
          v20 = v11;
          v21 = v14;
          v22 = (uint64_t *)(v12 + 8 * v14);
          do
          {
            if (v21 != --v20)
            {
              if (!v12)
                goto LABEL_135;
              v23 = *v22;
              *v22 = *v19;
              *v19 = v23;
            }
            ++v21;
            --v19;
            ++v22;
          }
          while (v21 < v20);
        }
      }
    }
    if (v11 >= v4)
      goto LABEL_45;
    if (__OFSUB__(v11, v14))
      goto LABEL_128;
    if (v11 - v14 >= v7)
      goto LABEL_45;
    v24 = v14 + v7;
    if (__OFADD__(v14, v7))
      goto LABEL_131;
    if (v24 >= v4)
      v24 = v4;
    if (v24 < v14)
      break;
    if (v11 != v24)
    {
      v25 = (uint64_t *)(v90 + 8 * v11);
      do
      {
        v26 = *(_QWORD *)(v12 + 8 * v11);
        v27 = v14;
        v28 = v25;
        do
        {
          v29 = *v28;
          if (*(double *)(v26 + OBJC_IVAR___ISEventGraph_timestamp) >= *(double *)(*v28
                                                                                  + OBJC_IVAR___ISEventGraph_timestamp))
            break;
          if (!v12)
            goto LABEL_133;
          *v28 = v26;
          v28[1] = v29;
          --v28;
          ++v27;
        }
        while (v11 != v27);
        ++v11;
        ++v25;
      }
      while (v11 != v24);
      v11 = v24;
    }
LABEL_45:
    if (v11 < v14)
      goto LABEL_123;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_21DC5B27C(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v31 = *((_QWORD *)v10 + 2);
    v30 = *((_QWORD *)v10 + 3);
    v13 = v31 + 1;
    v12 = v93;
    if (v31 >= v30 >> 1)
    {
      v80 = sub_21DC5B27C((char *)(v30 > 1), v31 + 1, 1, v10);
      v12 = v93;
      v10 = v80;
    }
    *((_QWORD *)v10 + 2) = v13;
    v32 = v10 + 32;
    v33 = &v10[16 * v31 + 32];
    *(_QWORD *)v33 = v14;
    *((_QWORD *)v33 + 1) = v11;
    if (v31)
    {
      while (1)
      {
        v34 = v13 - 1;
        if (v13 >= 4)
        {
          v39 = &v32[16 * v13];
          v40 = *((_QWORD *)v39 - 8);
          v41 = *((_QWORD *)v39 - 7);
          v45 = __OFSUB__(v41, v40);
          v42 = v41 - v40;
          if (v45)
            goto LABEL_112;
          v44 = *((_QWORD *)v39 - 6);
          v43 = *((_QWORD *)v39 - 5);
          v45 = __OFSUB__(v43, v44);
          v37 = v43 - v44;
          v38 = v45;
          if (v45)
            goto LABEL_113;
          v46 = v13 - 2;
          v47 = &v32[16 * v13 - 32];
          v49 = *(_QWORD *)v47;
          v48 = *((_QWORD *)v47 + 1);
          v45 = __OFSUB__(v48, v49);
          v50 = v48 - v49;
          if (v45)
            goto LABEL_115;
          v45 = __OFADD__(v37, v50);
          v51 = v37 + v50;
          if (v45)
            goto LABEL_118;
          if (v51 >= v42)
          {
            v69 = &v32[16 * v34];
            v71 = *(_QWORD *)v69;
            v70 = *((_QWORD *)v69 + 1);
            v45 = __OFSUB__(v70, v71);
            v72 = v70 - v71;
            if (v45)
              goto LABEL_122;
            v62 = v37 < v72;
            goto LABEL_82;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v63 = *((_QWORD *)v10 + 4);
            v64 = *((_QWORD *)v10 + 5);
            v45 = __OFSUB__(v64, v63);
            v56 = v64 - v63;
            v57 = v45;
            goto LABEL_76;
          }
          v36 = *((_QWORD *)v10 + 4);
          v35 = *((_QWORD *)v10 + 5);
          v45 = __OFSUB__(v35, v36);
          v37 = v35 - v36;
          v38 = v45;
        }
        if ((v38 & 1) != 0)
          goto LABEL_114;
        v46 = v13 - 2;
        v52 = &v32[16 * v13 - 32];
        v54 = *(_QWORD *)v52;
        v53 = *((_QWORD *)v52 + 1);
        v55 = __OFSUB__(v53, v54);
        v56 = v53 - v54;
        v57 = v55;
        if (v55)
          goto LABEL_117;
        v58 = &v32[16 * v34];
        v60 = *(_QWORD *)v58;
        v59 = *((_QWORD *)v58 + 1);
        v45 = __OFSUB__(v59, v60);
        v61 = v59 - v60;
        if (v45)
          goto LABEL_120;
        if (__OFADD__(v56, v61))
          goto LABEL_121;
        if (v56 + v61 >= v37)
        {
          v62 = v37 < v61;
LABEL_82:
          if (v62)
            v34 = v46;
          goto LABEL_84;
        }
LABEL_76:
        if ((v57 & 1) != 0)
          goto LABEL_116;
        v65 = &v32[16 * v34];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        v45 = __OFSUB__(v66, v67);
        v68 = v66 - v67;
        if (v45)
          goto LABEL_119;
        if (v68 < v56)
          goto LABEL_14;
LABEL_84:
        v73 = v34 - 1;
        if (v34 - 1 >= v13)
        {
          __break(1u);
LABEL_109:
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
          goto LABEL_132;
        }
        if (!v12)
          goto LABEL_134;
        v74 = v10;
        v75 = &v32[16 * v73];
        v76 = *(_QWORD *)v75;
        v77 = &v32[16 * v34];
        v78 = *((_QWORD *)v77 + 1);
        sub_21DC0A1D0((char *)(v12 + 8 * *(_QWORD *)v75), (char *)(v12 + 8 * *(_QWORD *)v77), v12 + 8 * v78, __dst);
        if (v1)
          goto LABEL_92;
        if (v78 < v76)
          goto LABEL_109;
        if (v34 > *((_QWORD *)v74 + 2))
          goto LABEL_110;
        *(_QWORD *)v75 = v76;
        *(_QWORD *)&v32[16 * v73 + 8] = v78;
        v79 = *((_QWORD *)v74 + 2);
        if (v34 >= v79)
          goto LABEL_111;
        v10 = v74;
        v13 = v79 - 1;
        memmove(&v32[16 * v34], v77 + 16, 16 * (v79 - 1 - v34));
        *((_QWORD *)v74 + 2) = v79 - 1;
        v12 = v93;
        if (v79 <= 2)
          goto LABEL_14;
      }
    }
    v13 = 1;
LABEL_14:
    v7 = v91;
    v4 = v92;
    if (v11 >= v92)
    {
      v2 = v1;
      goto LABEL_95;
    }
  }
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  result = sub_21DC71FA8();
  __break(1u);
  return result;
}

uint64_t sub_21DC0A15C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    v6 = *(_QWORD *)(v4 + 8 * a3);
    v7 = result;
    v8 = (uint64_t *)v5;
    while (1)
    {
      v9 = *v8;
      if (*(double *)(v6 + OBJC_IVAR___ISEventGraph_timestamp) >= *(double *)(*v8 + OBJC_IVAR___ISEventGraph_timestamp))
      {
LABEL_4:
        ++a3;
        v5 += 8;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v4)
        break;
      *v8 = v6;
      v8[1] = v9;
      --v8;
      if (a3 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_21DC0A1D0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (char *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 8;
          v19 = v6 - 8;
          v20 = *((_QWORD *)v6 - 1);
          if (*(double *)(*((_QWORD *)v16 - 1) + OBJC_IVAR___ISEventGraph_timestamp) >= *(double *)(v20 + OBJC_IVAR___ISEventGraph_timestamp))
          {
            v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *(_QWORD *)v17 = v20;
            v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7)
              goto LABEL_42;
          }
          v17 -= 8;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(double *)(*(_QWORD *)v6 + OBJC_IVAR___ISEventGraph_timestamp) >= *(double *)(*(_QWORD *)v4
                                                                                          + OBJC_IVAR___ISEventGraph_timestamp))
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_21DC5B374(&v24, &v23, &v22);
    return 1;
  }
  result = sub_21DC72008();
  __break(1u);
  return result;
}

unint64_t sub_21DC0A464(uint64_t a1)
{
  uint64_t v2;

  sub_21DC72134();
  sub_21DC72140();
  v2 = sub_21DC72158();
  return sub_21DC0A824(a1, v2);
}

unint64_t sub_21DC0A4BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21DC71D5C();
  return sub_21DC0A8C0(a1, v2);
}

unint64_t sub_21DC0A4EC(void *a1)
{
  id v2;
  uint64_t v3;

  sub_21DC72134();
  sub_21DC7214C();
  if (a1)
  {
    v2 = a1;
    sub_21DC71D74();

  }
  v3 = sub_21DC72158();
  return sub_21DC0A9C8(a1, v3);
}

unint64_t sub_21DC0A568(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_21DC72134();
  sub_21DC71B04();
  v4 = sub_21DC72158();
  return sub_21DC0AAA8(a1, a2, v4);
}

unint64_t sub_21DC0A5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  sub_21DC72134();
  swift_bridgeObjectRetain();
  sub_21DC71B04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21DC71B04();
  swift_bridgeObjectRelease();
  v8 = sub_21DC72158();
  return sub_21DC0AB88(a1, a2, a3, a4, v8);
}

unint64_t sub_21DC0A678(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21DC71E70();
  return sub_21DC0AC84(a1, v2);
}

unint64_t sub_21DC0A6A8(_QWORD *a1)
{
  uint64_t v2;

  sub_21DC72134();
  sub_21DC72140();
  type metadata accessor for EventTypeIdPair();
  sub_21DC715F4();
  sub_21DC0C1D0((unint64_t *)&qword_2553AA410, MEMORY[0x24BDCEA88]);
  sub_21DC71A44();
  v2 = sub_21DC72158();
  return sub_21DC0AD48(a1, v2);
}

unint64_t sub_21DC0A740(uint64_t a1)
{
  uint64_t v2;

  sub_21DC715F4();
  sub_21DC0C1D0((unint64_t *)&qword_2553AA410, MEMORY[0x24BDCEA88]);
  v2 = sub_21DC71A38();
  return sub_21DC0AE80(a1, v2);
}

unint64_t sub_21DC0A7A4(uint64_t a1)
{
  uint64_t v2;

  sub_21DC72134();
  sub_21DC715F4();
  sub_21DC0C1D0((unint64_t *)&qword_2553AA410, MEMORY[0x24BDCEA88]);
  sub_21DC71A44();
  v2 = sub_21DC72158();
  return sub_21DC0AFB8(a1, v2);
}

unint64_t sub_21DC0A824(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_21DC0A8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_21DC71804();
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_21DC71D68();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_21DC71D68();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_21DC0A9C8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  char v12;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = v2;
    v8 = ~v4;
    do
    {
      v9 = *(void **)(*(_QWORD *)(v6 + 48) + 8 * v5);
      if (v9)
      {
        if (a1)
        {
          sub_21DC71804();
          v10 = v9;
          v11 = a1;
          v12 = sub_21DC71D68();

          if ((v12 & 1) != 0)
            return v5;
        }
      }
      else if (!a1)
      {
        return v5;
      }
      v5 = (v5 + 1) & v8;
    }
    while (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_21DC0AAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_21DC720A4() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_21DC720A4() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_21DC0AB88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;

  v6 = v5 + 64;
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = a5 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v13 = ~v7;
    v14 = *(_QWORD *)(v5 + 48);
    do
    {
      v15 = (_QWORD *)(v14 + 32 * v8);
      v16 = v15[2];
      v17 = v15[3];
      v18 = *v15 == a1 && v15[1] == a2;
      if (v18 || (sub_21DC720A4() & 1) != 0)
      {
        v19 = v16 == a3 && v17 == a4;
        if (v19 || (sub_21DC720A4() & 1) != 0)
          break;
      }
      v8 = (v8 + 1) & v13;
    }
    while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_21DC0AC84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_21DC0C2D4(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x22079D1A8](v9, a1);
      sub_21DC0C310((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_21DC0AD48(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = type metadata accessor for EventTypeIdPair();
  MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (uint64_t *)((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = -1 << *(_BYTE *)(v2 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v2 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_21DC0C210(*(_QWORD *)(v2 + 48) + v13 * v11, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair);
      if (*v9 == *a1 && (sub_21DC715D0() & 1) != 0)
        break;
      sub_21DC0C254((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair);
      v11 = (v11 + 1) & v12;
      if (((*(_QWORD *)(v2 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        return v11;
    }
    sub_21DC0C254((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair);
  }
  return v11;
}

unint64_t sub_21DC0AE80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  char v15;
  _QWORD v17[2];

  v3 = v2;
  v17[1] = a1;
  v5 = sub_21DC715F4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v14(v9, *(_QWORD *)(v3 + 48) + v13 * v11, v5);
      sub_21DC0C1D0(&qword_2553A8378, MEMORY[0x24BDCEA98]);
      v15 = sub_21DC71A8C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if ((v15 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

unint64_t sub_21DC0AFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;

  v4 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v2 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_21DC0C210(*(_QWORD *)(v2 + 48) + v12 * v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      v13 = sub_21DC715D0();
      sub_21DC0C254((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      if ((v13 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

uint64_t sub_21DC0B0C8(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v25 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 32 * v16);
    v21 = v20[1];
    v22 = v20[2];
    v23 = v20[3];
    v24 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = *v20;
    v11[1] = v21;
    v11[2] = v22;
    v11[3] = v23;
    v11[4] = v24;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 5;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v25;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

_QWORD *sub_21DC0B2E8(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(a4 + 48) + v20);
    ++v13;
    v22 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + v20);
    *v11 = v21;
    v11[1] = v22;
    if (v13 == v10)
    {
      v23 = v21;
      goto LABEL_38;
    }
    v11 += 2;
    result = v21;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_21DC0B4EC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8380);
  v38 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10, v13);
  v16 = (char *)&v32 - v15;
  v17 = *(_QWORD *)(a4 + 64);
  v37 = a4 + 64;
  v18 = -1 << *(_BYTE *)(a4 + 32);
  if (-v18 < 64)
    v19 = ~(-1 << -(char)v18);
  else
    v19 = -1;
  v20 = v19 & v17;
  if (!a2)
  {
    v21 = 0;
    a3 = 0;
LABEL_39:
    v31 = v37;
    *a1 = a4;
    a1[1] = v31;
    a1[2] = ~v18;
    a1[3] = v21;
    a1[4] = v20;
    return a3;
  }
  if (!a3)
  {
    v21 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v34 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v21 = 0;
  v22 = 0;
  v36 = (unint64_t)(63 - v18) >> 6;
  v33 = v36 - 1;
  v23 = a3;
  if (!v20)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  v25 = v24 | (v21 << 6);
  while (1)
  {
    ++v22;
    v29 = *(_QWORD *)(a4 + 48);
    v30 = sub_21DC715F4();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v12, v29 + *(_QWORD *)(*(_QWORD *)(v30 - 8) + 72) * v25, v30);
    *(_QWORD *)&v12[*(int *)(v39 + 48)] = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v25);
    sub_21DC0C290((uint64_t)v12, (uint64_t)v16, &qword_2553A8380);
    result = sub_21DC0C290((uint64_t)v16, a2, &qword_2553A8380);
    if (v22 == v23)
    {
      a3 = v23;
      goto LABEL_38;
    }
    a2 += *(_QWORD *)(v38 + 72);
    if (v20)
      goto LABEL_8;
LABEL_9:
    v26 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v26 >= v36)
      goto LABEL_33;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v21 += 2;
      if (v26 + 1 >= v36)
      {
        v20 = 0;
        v21 = v26;
      }
      else
      {
        v27 = *(_QWORD *)(v37 + 8 * v21);
        if (v27)
          goto LABEL_14;
        v28 = v26 + 2;
        if (v26 + 2 >= v36)
          goto LABEL_33;
        v27 = *(_QWORD *)(v37 + 8 * v28);
        if (v27)
        {
LABEL_17:
          v26 = v28;
          goto LABEL_18;
        }
        v21 = v26 + 3;
        if (v26 + 3 < v36)
        {
          v27 = *(_QWORD *)(v37 + 8 * v21);
          if (v27)
          {
LABEL_14:
            v26 = v21;
            goto LABEL_18;
          }
          v28 = v26 + 4;
          if (v26 + 4 >= v36)
          {
LABEL_33:
            v20 = 0;
            goto LABEL_37;
          }
          v27 = *(_QWORD *)(v37 + 8 * v28);
          if (!v27)
          {
            while (1)
            {
              v26 = v28 + 1;
              if (__OFADD__(v28, 1))
                goto LABEL_42;
              if (v26 >= v36)
              {
                v20 = 0;
                v21 = v33;
                goto LABEL_37;
              }
              v27 = *(_QWORD *)(v37 + 8 * v26);
              ++v28;
              if (v27)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v20 = 0;
        v21 = v26 + 2;
      }
LABEL_37:
      a3 = v22;
LABEL_38:
      v18 = v34;
      a1 = v35;
      goto LABEL_39;
    }
LABEL_18:
    v20 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v21 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_21DC0B7E0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  unint64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  _QWORD *v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t (*v48)(_QWORD);
  uint64_t v49;

  v47 = a5;
  v48 = a6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v45 = *(_QWORD *)(v10 - 8);
  v46 = v10;
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v12, v15);
  v18 = (char *)&v38 - v17;
  v49 = a4;
  v21 = *(_QWORD *)(a4 + 64);
  v20 = a4 + 64;
  v19 = v21;
  v43 = v20;
  v22 = -1 << *(_BYTE *)(v20 - 32);
  if (-v22 < 64)
    v23 = ~(-1 << -(char)v22);
  else
    v23 = -1;
  v24 = v23 & v19;
  if (!a2)
  {
    v25 = 0;
    a3 = 0;
LABEL_38:
    v37 = v43;
    *a1 = v49;
    a1[1] = v37;
    a1[2] = ~v22;
    a1[3] = v25;
    a1[4] = v24;
    return a3;
  }
  if (!a3)
  {
    v25 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v40 = -1 << *(_BYTE *)(v20 - 32);
  v41 = a1;
  v25 = 0;
  v26 = 0;
  v42 = (unint64_t)(63 - v22) >> 6;
  v39 = v42 - 1;
  v44 = a3;
  v27 = v48;
  if (!v24)
    goto LABEL_9;
LABEL_8:
  v28 = __clz(__rbit64(v24));
  v24 &= v24 - 1;
  v29 = v28 | (v25 << 6);
  while (1)
  {
    ++v26;
    v33 = v49;
    v34 = *(_QWORD *)(v49 + 48);
    v35 = v27(0);
    sub_21DC0C210(v34 + *(_QWORD *)(*(_QWORD *)(v35 - 8) + 72) * v29, (uint64_t)v14, v27);
    v36 = v47;
    *(_QWORD *)&v14[*(int *)(v46 + 48)] = *(_QWORD *)(*(_QWORD *)(v33 + 56) + 8 * v29);
    sub_21DC0C290((uint64_t)v14, (uint64_t)v18, v36);
    result = sub_21DC0C290((uint64_t)v18, a2, v36);
    a3 = v44;
    if (v26 == v44)
      goto LABEL_37;
    a2 += *(_QWORD *)(v45 + 72);
    if (v24)
      goto LABEL_8;
LABEL_9:
    v30 = v25 + 1;
    if (__OFADD__(v25, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v30 >= v42)
      goto LABEL_32;
    v31 = *(_QWORD *)(v43 + 8 * v30);
    if (!v31)
      break;
LABEL_18:
    v24 = (v31 - 1) & v31;
    v29 = __clz(__rbit64(v31)) + (v30 << 6);
    v25 = v30;
  }
  v25 += 2;
  if (v30 + 1 >= v42)
  {
    v24 = 0;
    v25 = v30;
    goto LABEL_36;
  }
  v31 = *(_QWORD *)(v43 + 8 * v25);
  if (v31)
    goto LABEL_14;
  v32 = v30 + 2;
  if (v30 + 2 >= v42)
    goto LABEL_32;
  v31 = *(_QWORD *)(v43 + 8 * v32);
  if (v31)
    goto LABEL_17;
  v25 = v30 + 3;
  if (v30 + 3 >= v42)
  {
    v24 = 0;
    v25 = v30 + 2;
    goto LABEL_36;
  }
  v31 = *(_QWORD *)(v43 + 8 * v25);
  if (v31)
  {
LABEL_14:
    v30 = v25;
    goto LABEL_18;
  }
  v32 = v30 + 4;
  if (v30 + 4 >= v42)
  {
LABEL_32:
    v24 = 0;
LABEL_36:
    a3 = v26;
LABEL_37:
    v22 = v40;
    a1 = v41;
    goto LABEL_38;
  }
  v31 = *(_QWORD *)(v43 + 8 * v32);
  if (v31)
  {
LABEL_17:
    v30 = v32;
    goto LABEL_18;
  }
  while (1)
  {
    v30 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v30 >= v42)
    {
      v24 = 0;
      v25 = v39;
      goto LABEL_36;
    }
    v31 = *(_QWORD *)(v43 + 8 * v30);
    ++v32;
    if (v31)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_21DC0BAD0(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t (*sub_21DC0BCCC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_21DC0BDF8(v6, a2, a3);
  return sub_21DC0BD20;
}

uint64_t (*sub_21DC0BD24(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_21DC0BEA0(v6, a2, a3);
  return sub_21DC0BD20;
}

uint64_t (*sub_21DC0BD78(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_21DC0BF14(v6, a2, a3);
  return sub_21DC0BD20;
}

void sub_21DC0BDCC(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_21DC0BDF8(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x22079D208](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_21DC0C348;
  }
  __break(1u);
  return result;
}

unint64_t sub_21DC0BE64()
{
  unint64_t result;

  result = qword_2553AA420;
  if (!qword_2553AA420)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2553AA420);
  }
  return result;
}

uint64_t (*sub_21DC0BEA0(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x22079D208](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_21DC0BF0C;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC0BF0C()
{
  return swift_release();
}

void (*sub_21DC0BF14(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x22079D208](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_21DC0BF80;
  }
  __break(1u);
  return result;
}

void sub_21DC0BF80(id *a1)
{

}

uint64_t sub_21DC0BF88(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * result);
LABEL_8:
  __break(1u);
  return result;
}

unint64_t sub_21DC0BFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t result;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (!v3)
    return result;
  v11 = MEMORY[0x24BEE4AF8];
  sub_21DC71F24();
  v6 = (unint64_t *)(a1 + 32);
  v7 = *(_QWORD *)(a2 + OBJC_IVAR___ISEventGraph_eventsInternal);
  while (1)
  {
    v10 = *v6++;
    result = v10;
    if ((v7 & 0xC000000000000001) != 0)
    {
      v8 = MEMORY[0x22079D208](result, v7);
      goto LABEL_4;
    }
    if ((result & 0x8000000000000000) != 0)
      break;
    if (result >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_12;
    v8 = *(_QWORD *)(v7 + 32 + 8 * result);
    swift_retain();
LABEL_4:
    v9 = *(id *)(v8 + 24);
    swift_release();
    sub_21DC71F00();
    sub_21DC71F30();
    sub_21DC71F3C();
    sub_21DC71F0C();
    if (!--v3)
      return v11;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SiriConversation()
{
  return objc_opt_self();
}

uint64_t sub_21DC0C11C()
{
  return sub_21DC0C1D0((unint64_t *)&qword_2553AA410, MEMORY[0x24BDCEA88]);
}

uint64_t method lookup function for SiriConversation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriConversation.timestamp.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of SiriConversation.date.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of SiriConversation.id.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of SiriConversation.firstTurnId.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SiriConversation.__allocating_init(turns:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_21DC0C1C4()
{
  return swift_release();
}

uint64_t sub_21DC0C1D0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_21DC715F4();
    result = MEMORY[0x22079D964](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21DC0C210(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21DC0C254(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21DC0C290(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21DC0C2D4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_21DC0C310(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_21DC0C34C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A83B0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A83B8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v0 + OBJC_IVAR___ISStreamsProvider_provider + 24);
  v12 = *(_QWORD *)(v0 + OBJC_IVAR___ISStreamsProvider_provider + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR___ISStreamsProvider_provider), v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 128))(v11, v12);
  type metadata accessor for TimestampedEventBridge();
  sub_21DC0D7E4();
  sub_21DC71630();
  v13 = sub_21DC71600();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return v13;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_21DC0C62C(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A83D0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR___ISStreamsProvider_provider + 24);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR___ISStreamsProvider_provider + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR___ISStreamsProvider_provider), v8);
  (*(void (**)(uint64_t, uint64_t, double))(v9 + 136))(v8, v9, a1);
  v10 = sub_21DC71648();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v10;
}

uint64_t sub_21DC0C7DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A83D0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)(v0 + OBJC_IVAR___ISStreamsProvider_provider);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR___ISStreamsProvider_provider + 24);
  v8 = v6[4];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  InstrumentationStreamsProviderProtocol.eventGraphs()(v7, v8);
  v9 = sub_21DC71648();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v9;
}

uint64_t sub_21DC0C96C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A83D0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)(v0 + OBJC_IVAR___ISStreamsProvider_provider);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR___ISStreamsProvider_provider + 24);
  v8 = v6[4];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  InstrumentationStreamsProviderProtocol.connectedComponentGroups(windowLength:)(v7, v8);
  v9 = sub_21DC71648();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v9;
}

uint64_t sub_21DC0CB1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A83D8);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR___ISStreamsProvider_provider + 24);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR___ISStreamsProvider_provider + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR___ISStreamsProvider_provider), v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 144))(v6, v7);
  v8 = sub_21DC71648();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v8;
}

uint64_t sub_21DC0CCAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2553A83E0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR___ISStreamsProvider_provider + 24);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR___ISStreamsProvider_provider + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR___ISStreamsProvider_provider), v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 152))(v6, v7);
  v8 = sub_21DC71648();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v8;
}

uint64_t sub_21DC0CE3C(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 32) = v2;
  *(double *)(v3 + 24) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_21DC0CE5C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (_QWORD *)(*(_QWORD *)(v0 + 32) + OBJC_IVAR___ISStreamsProvider_provider);
  v4 = v2[3];
  v3 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v4);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___ISComponentIdentifier_componentIdentifier);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v6;
  *v6 = v0;
  v6[1] = sub_21DC0CEF4;
  return InstrumentationStreamsProviderProtocol.searchForEventGraph(componentIdentifier:windowLength:)(v5, v4, v3, *(double *)(v0 + 24));
}

uint64_t sub_21DC0CEF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_21DC0D088(void *a1, void *aBlock, void *a3, double a4)
{
  uint64_t v4;
  id v7;
  id v8;

  *(_QWORD *)(v4 + 32) = a3;
  *(double *)(v4 + 24) = a4;
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 40) = _Block_copy(aBlock);
  v7 = a1;
  v8 = a3;
  return swift_task_switch();
}

uint64_t sub_21DC0D0E4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (_QWORD *)(*(_QWORD *)(v0 + 32) + OBJC_IVAR___ISStreamsProvider_provider);
  v4 = v2[3];
  v3 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v4);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___ISComponentIdentifier_componentIdentifier);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v6;
  *v6 = v0;
  v6[1] = sub_21DC0D17C;
  return InstrumentationStreamsProviderProtocol.searchForEventGraph(componentIdentifier:windowLength:)(v5, v4, v3, *(double *)(v0 + 24));
}

uint64_t sub_21DC0D17C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 64) = a1;
  return swift_task_switch();
}

uint64_t sub_21DC0D1F0()
{
  uint64_t v0;
  void *v1;
  void (**v2)(_QWORD, _QWORD, _QWORD);
  void *v3;

  v1 = *(void **)(v0 + 64);
  v3 = *(void **)(v0 + 32);
  v2 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 40);

  ((void (**)(_QWORD, void *, _QWORD))v2)[2](v2, v1, 0);
  _Block_release(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21DC0D254()
{
  uint64_t v0;
  void *v1;
  void (**v2)(_QWORD, _QWORD, _QWORD);
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 56);
  v3 = *(void **)(v0 + 32);
  v2 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 40);

  v4 = (void *)sub_21DC71498();
  ((void (**)(_QWORD, _QWORD, void *))v2)[2](v2, 0, v4);

  _Block_release(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21DC0D2CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_21DC0D2E4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[2];
  v2 = (_QWORD *)(v0[3] + OBJC_IVAR___ISStreamsProvider_provider);
  v4 = v2[3];
  v3 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v4);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___ISComponentIdentifier_componentIdentifier);
  v6 = (_QWORD *)swift_task_alloc();
  v0[4] = v6;
  *v6 = v0;
  v6[1] = sub_21DC0D374;
  return InstrumentationStreamsProviderProtocol.searchForEventGraph(componentIdentifier:)(v5, v4, v3);
}

uint64_t sub_21DC0D374(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_21DC0D4F8(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v6;
  id v7;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v6 = a1;
  v7 = a3;
  return swift_task_switch();
}

uint64_t sub_21DC0D54C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[2];
  v2 = (_QWORD *)(v0[3] + OBJC_IVAR___ISStreamsProvider_provider);
  v4 = v2[3];
  v3 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v4);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___ISComponentIdentifier_componentIdentifier);
  v6 = (_QWORD *)swift_task_alloc();
  v0[5] = v6;
  *v6 = v0;
  v6[1] = sub_21DC0D5DC;
  return InstrumentationStreamsProviderProtocol.searchForEventGraph(componentIdentifier:)(v5, v4, v3);
}

uint64_t sub_21DC0D5DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 56) = a1;
  return swift_task_switch();
}

uint64_t sub_21DC0D650()
{
  uint64_t v0;
  void *v1;
  void (**v2)(_QWORD, _QWORD, _QWORD);
  void *v3;

  v1 = *(void **)(v0 + 56);
  v3 = *(void **)(v0 + 24);
  v2 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 32);

  ((void (**)(_QWORD, void *, _QWORD))v2)[2](v2, v1, 0);
  _Block_release(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21DC0D6B4()
{
  uint64_t v0;
  void *v1;
  void (**v2)(_QWORD, _QWORD, _QWORD);
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 48);
  v3 = *(void **)(v0 + 24);
  v2 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 32);

  v4 = (void *)sub_21DC71498();
  ((void (**)(_QWORD, _QWORD, void *))v2)[2](v2, 0, v4);

  _Block_release(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id InstrumentationStreamsProviderBridge.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void InstrumentationStreamsProviderBridge.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id InstrumentationStreamsProviderBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InstrumentationStreamsProviderBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_21DC0D7E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2553A83C8;
  if (!qword_2553A83C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553A83B8);
    result = MEMORY[0x22079D964](MEMORY[0x24BE0C940], v1);
    atomic_store(result, (unint64_t *)&qword_2553A83C8);
  }
  return result;
}

uint64_t type metadata accessor for InstrumentationStreamsProviderBridge()
{
  return objc_opt_self();
}

uint64_t method lookup function for InstrumentationStreamsProviderBridge()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InstrumentationStreamsProviderBridge.events()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of InstrumentationStreamsProviderBridge.eventGraphs(windowLength:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of InstrumentationStreamsProviderBridge.eventGraphs()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of InstrumentationStreamsProviderBridge.connectedComponentGroups(windowLength:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of InstrumentationStreamsProviderBridge.siriTurns()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of InstrumentationStreamsProviderBridge.siriConversations()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of InstrumentationStreamsProviderBridge.searchForEventGraph(componentIdentifier:windowLength:)(uint64_t a1, double a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, double);

  v6 = *(int **)((*MEMORY[0x24BEE4EA0] & *v2) + 0x90);
  v9 = (uint64_t (*)(uint64_t, double))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_21DC0D980;
  return v9(a1, a2);
}

uint64_t sub_21DC0D980(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of InstrumentationStreamsProviderBridge.searchForEventGraph(componentIdentifier:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x24BEE4EA0] & *v1) + 0x98);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21DC0DD38;
  return v7(a1);
}

uint64_t sub_21DC0DA44()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_21DC0DA78()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_21DC0DD34;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_2553A8438 + dword_2553A8438))(v2, v3, v4);
}

uint64_t sub_21DC0DAE8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_21DC0DD34;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_2553A8C40 + dword_2553A8C40))(v2, v3, v4);
}

uint64_t sub_21DC0DB64(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21DC0DD34;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_2553A8C48 + dword_2553A8C48))(a1, v4, v5, v6);
}

uint64_t sub_21DC0DBE8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_21DC0DC1C()
{
  double *v0;
  uint64_t v1;
  void *v2;
  double v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = (void *)*((_QWORD *)v0 + 2);
  v3 = v0[3];
  v5 = (void *)*((_QWORD *)v0 + 4);
  v4 = (void *)*((_QWORD *)v0 + 5);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_21DC0DC98;
  return ((uint64_t (*)(void *, void *, void *, double))((char *)&dword_2553A8458 + dword_2553A8458))(v2, v5, v4, v3);
}

uint64_t sub_21DC0DC98()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t objectdestroy_9Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t EventGraph.sievents()()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_21DC0DEB8(v0);
  swift_bridgeObjectRelease();
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  v2 = sub_21DC71FCC();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_11;
LABEL_3:
  v7 = MEMORY[0x24BEE4AF8];
  result = sub_21DC71F24();
  if ((v2 & 0x8000000000000000) == 0)
  {
    sub_21DC13C88(0, (unint64_t *)&qword_2553A8478);
    v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        MEMORY[0x22079D208](v4, v1);
      else
        v5 = *(id *)(v1 + 8 * v4 + 32);
      ++v4;
      sub_21DC71D2C();
      sub_21DC71F00();
      sub_21DC71F30();
      sub_21DC71F3C();
      sub_21DC71F0C();
    }
    while (v2 != v4);
    v6 = v7;
    swift_bridgeObjectRelease();
    return v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC0DEB8(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;

  if (a1 >> 62)
    goto LABEL_14;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x24BEE4AF8];
    if (!v2)
      break;
    v7 = MEMORY[0x24BEE4AF8];
    result = sub_21DC71F24();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v5 = MEMORY[0x22079D208](v4, a1);
      }
      else
      {
        v5 = *(_QWORD *)(a1 + 8 * v4 + 32);
        swift_retain();
      }
      ++v4;
      swift_beginAccess();
      v6 = *(id *)(v5 + 24);
      swift_release();
      sub_21DC71F00();
      sub_21DC71F30();
      sub_21DC71F3C();
      sub_21DC71F0C();
      if (v2 == v4)
        return v7;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v2 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21DC0E008(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v19 = MEMORY[0x24BEE4AF8];
    sub_21DC71F24();
    result = sub_21DC137E4(a1);
    v4 = result;
    v6 = v5;
    v7 = 0;
    v8 = a1 + 64;
    v17 = v2;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(a1 + 32))
    {
      v10 = (unint64_t)v4 >> 6;
      if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0)
        goto LABEL_22;
      if (*(_DWORD *)(a1 + 36) != v6)
        goto LABEL_23;
      v18 = v7;
      objc_allocWithZone((Class)type metadata accessor for ComponentGroupBridge());
      v11 = swift_bridgeObjectRetain();
      sub_21DC61374(v11);
      sub_21DC71F00();
      sub_21DC71F30();
      sub_21DC71F3C();
      result = sub_21DC71F0C();
      v9 = 1 << *(_BYTE *)(a1 + 32);
      if (v4 >= v9)
        goto LABEL_24;
      v12 = *(_QWORD *)(v8 + 8 * v10);
      if ((v12 & (1 << v4)) == 0)
        goto LABEL_25;
      if (*(_DWORD *)(a1 + 36) != v6)
        goto LABEL_26;
      v13 = v12 & (-2 << (v4 & 0x3F));
      if (v13)
      {
        v9 = __clz(__rbit64(v13)) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v14 = v10 + 1;
        v15 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v15)
        {
          v16 = *(_QWORD *)(v8 + 8 * v14);
          if (v16)
          {
LABEL_18:
            v9 = __clz(__rbit64(v16)) + (v14 << 6);
          }
          else
          {
            while (v15 - 2 != v10)
            {
              v16 = *(_QWORD *)(a1 + 80 + 8 * v10++);
              if (v16)
              {
                v14 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      v7 = v18 + 1;
      v4 = v9;
      if (v18 + 1 == v17)
        return v19;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_21DC0E200(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  void *v11;
  objc_class *v12;
  char *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  objc_super v23;
  uint64_t v24;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v24 = MEMORY[0x24BEE4AF8];
    sub_21DC71F24();
    result = sub_21DC1386C(v1);
    v4 = result;
    v6 = v5;
    v7 = 0;
    v8 = v1 + 64;
    v20 = v1 + 80;
    v21 = v2;
    v22 = v1;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(v1 + 32))
    {
      v10 = (unint64_t)v4 >> 6;
      if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0)
        goto LABEL_22;
      if (*(_DWORD *)(v1 + 36) != v6)
        goto LABEL_23;
      v11 = *(void **)(*(_QWORD *)(v1 + 48) + 8 * v4);
      v12 = (objc_class *)type metadata accessor for ComponentIdentifierBridge();
      v13 = (char *)objc_allocWithZone(v12);
      *(_QWORD *)&v13[OBJC_IVAR___ISComponentIdentifier_componentIdentifier] = v11;
      v23.receiver = v13;
      v23.super_class = v12;
      v14 = v11;
      objc_msgSendSuper2(&v23, sel_init);
      sub_21DC71F00();
      sub_21DC71F30();
      v1 = v22;
      sub_21DC71F3C();
      result = sub_21DC71F0C();
      v9 = 1 << *(_BYTE *)(v22 + 32);
      if (v4 >= v9)
        goto LABEL_24;
      v15 = *(_QWORD *)(v8 + 8 * v10);
      if ((v15 & (1 << v4)) == 0)
        goto LABEL_25;
      if (*(_DWORD *)(v22 + 36) != v6)
        goto LABEL_26;
      v16 = v15 & (-2 << (v4 & 0x3F));
      if (v16)
      {
        v9 = __clz(__rbit64(v16)) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v17 = v10 + 1;
        v18 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v18)
        {
          v19 = *(_QWORD *)(v8 + 8 * v17);
          if (v19)
          {
LABEL_18:
            v9 = __clz(__rbit64(v19)) + (v17 << 6);
          }
          else
          {
            while (v18 - 2 != v10)
            {
              v19 = *(_QWORD *)(v20 + 8 * v10++);
              if (v19)
              {
                v17 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      ++v7;
      v4 = v9;
      if (v7 == v21)
        return v24;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t EventGraph.sievents(type:)(uint64_t a1)
{
  return sub_21DC0E920(a1, sub_21DC262E4);
}

uint64_t EventGraph.sievents(componentName:)(int a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _DWORD v13[6];
  uint64_t v14;

  v3 = sub_21DC2630C();
  v13[4] = a1;
  v4 = sub_21DC13B18(v3, (uint64_t (*)(id, uint64_t))sub_21DC1391C, (uint64_t)v13);
  swift_bridgeObjectRelease();
  v5 = sub_21DC0F4E0(v4);
  swift_release();
  v6 = v1;
  v7 = sub_21DC0BFDC(v5, (uint64_t)v6);
  swift_bridgeObjectRelease();

  if (!(v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  v8 = sub_21DC71FCC();
  swift_bridgeObjectRelease();
  if (!v8)
    goto LABEL_11;
LABEL_3:
  v14 = MEMORY[0x24BEE4AF8];
  result = sub_21DC71F24();
  if ((v8 & 0x8000000000000000) == 0)
  {
    sub_21DC13C88(0, (unint64_t *)&qword_2553A8478);
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
        MEMORY[0x22079D208](v10, v7);
      else
        v11 = *(id *)(v7 + 8 * v10 + 32);
      ++v10;
      sub_21DC71D2C();
      sub_21DC71F00();
      sub_21DC71F30();
      sub_21DC71F3C();
      sub_21DC71F0C();
    }
    while (v8 != v10);
    v12 = v14;
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t EventGraph.sievents(componentIdentifier:)(uint64_t a1)
{
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v3 = *(id *)(a1 + OBJC_IVAR___ISComponentIdentifier_componentIdentifier);
  v4 = sub_21DC2630C();
  v5 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(v4 + 16))
  {
    v6 = sub_21DC0A4BC((uint64_t)v3);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v6);
      swift_bridgeObjectRetain();
    }
    else
    {
      v8 = MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    v8 = MEMORY[0x24BEE4AF8];
  }

  swift_bridgeObjectRelease();
  v9 = v2;
  v10 = sub_21DC0BFDC(v8, (uint64_t)v9);
  swift_bridgeObjectRelease();

  if (!(v10 >> 62))
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v11)
      goto LABEL_8;
LABEL_16:
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  v11 = sub_21DC71FCC();
  swift_bridgeObjectRelease();
  if (!v11)
    goto LABEL_16;
LABEL_8:
  v16 = v5;
  result = sub_21DC71F24();
  if ((v11 & 0x8000000000000000) == 0)
  {
    sub_21DC13C88(0, (unint64_t *)&qword_2553A8478);
    v13 = 0;
    do
    {
      if ((v10 & 0xC000000000000001) != 0)
        MEMORY[0x22079D208](v13, v10);
      else
        v14 = *(id *)(v10 + 8 * v13 + 32);
      ++v13;
      sub_21DC71D2C();
      sub_21DC71F00();
      sub_21DC71F30();
      sub_21DC71F3C();
      sub_21DC71F0C();
    }
    while (v11 != v13);
    v15 = v16;
    swift_bridgeObjectRelease();
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t EventGraph.sievents(innerType:)(uint64_t a1)
{
  return sub_21DC0E920(a1, sub_21DC262F8);
}

uint64_t sub_21DC0E920(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v5 = a2();
  v6 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = sub_21DC0A464(a1);
    if ((v8 & 1) != 0)
    {
      v9 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v7);
      swift_bridgeObjectRetain();
    }
    else
    {
      v9 = MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    v9 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v10 = v3;
  v11 = sub_21DC0BFDC(v9, (uint64_t)v10);
  swift_bridgeObjectRelease();

  if (!(v11 >> 62))
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12)
      goto LABEL_8;
LABEL_16:
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  v12 = sub_21DC71FCC();
  if (!v12)
    goto LABEL_16;
LABEL_8:
  v17 = v6;
  result = sub_21DC71F24();
  if ((v12 & 0x8000000000000000) == 0)
  {
    sub_21DC13C88(0, (unint64_t *)&qword_2553A8478);
    v14 = 0;
    do
    {
      if ((v11 & 0xC000000000000001) != 0)
        MEMORY[0x22079D208](v14, v11);
      else
        v15 = *(id *)(v11 + 8 * v14 + 32);
      ++v14;
      sub_21DC71D2C();
      sub_21DC71F00();
      sub_21DC71F30();
      sub_21DC71F3C();
      sub_21DC71F0C();
    }
    while (v12 != v14);
    v16 = v17;
    swift_bridgeObjectRelease();
    return v16;
  }
  __break(1u);
  return result;
}

id sub_21DC0EAE4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t ObjCClassMetadata;
  id v7;
  void *v8;

  ObjCClassMetadata = swift_getObjCClassMetadata();
  v7 = a1;
  a4(ObjCClassMetadata);

  sub_21DC13C88(0, (unint64_t *)&qword_2553A8478);
  v8 = (void *)sub_21DC71B64();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t EventGraph.sievent(innerType:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t result;
  id v11;

  v2 = v1;
  v4 = sub_21DC262F8();
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_21DC0A464(a1), (v6 & 1) != 0))
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v8 = v2;
  v9 = sub_21DC0BFDC(v7, (uint64_t)v8);
  swift_bridgeObjectRelease();

  if (v9 >> 62)
  {
    result = sub_21DC71FCC();
    if (result)
      goto LABEL_7;
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  result = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!result)
    goto LABEL_12;
LABEL_7:
  if ((v9 & 0xC000000000000001) != 0)
  {
    MEMORY[0x22079D208](0, v9);
    goto LABEL_10;
  }
  if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(id *)(v9 + 32);
LABEL_10:
    swift_bridgeObjectRelease();
    sub_21DC13C88(0, (unint64_t *)&qword_2553A8478);
    return sub_21DC71D2C();
  }
  __break(1u);
  return result;
}

uint64_t EventGraph.getComponentGroupBridges(type:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  _QWORD *v34;

  v2 = v1;
  v4 = sub_21DC262E4();
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_21DC0A464(a1), (v6 & 1) != 0))
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v8 = v2;
  v9 = sub_21DC0BFDC(v7, (uint64_t)v8);
  swift_bridgeObjectRelease();

  v34 = (_QWORD *)MEMORY[0x24BEE4B00];
  if (v9 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    v10 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_7;
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
    {
LABEL_7:
      v11 = (_QWORD *)MEMORY[0x24BEE4B00];
      v12 = 4;
      while (1)
      {
        if ((v9 & 0xC000000000000001) != 0)
          v14 = (id)MEMORY[0x22079D208](v12 - 4, v9);
        else
          v14 = *(id *)(v9 + 8 * v12);
        v15 = v14;
        v16 = v12 - 3;
        if (__OFADD__(v12 - 4, 1))
        {
          __break(1u);
LABEL_24:
          __break(1u);
LABEL_25:
          __break(1u);
          goto LABEL_26;
        }
        v17 = (void *)sub_21DC71720();
        v19 = sub_21DC0A4EC(v17);
        v20 = v11[2];
        v21 = (v18 & 1) == 0;
        v22 = v20 + v21;
        if (__OFADD__(v20, v21))
          goto LABEL_24;
        v23 = v18;
        if (v11[3] < v22)
        {
          sub_21DC0F930(v22, 1);
          v11 = v34;
          v24 = sub_21DC0A4EC(v17);
          if ((v23 & 1) != (v25 & 1))
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8480);
            result = sub_21DC720E0();
            __break(1u);
            return result;
          }
          v19 = v24;
        }
        if ((v23 & 1) != 0)
        {

          v13 = (_QWORD *)(v11[7] + 8 * v19);
          MEMORY[0x22079CE84]();
          if (*(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_21DC71BA0();
          sub_21DC71BC4();
          sub_21DC71B94();
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9780);
          v26 = swift_allocObject();
          *(_OWORD *)(v26 + 16) = xmmword_21DC73350;
          *(_QWORD *)(v26 + 32) = v15;
          v33 = v26;
          sub_21DC71B94();
          v11[(v19 >> 6) + 8] |= 1 << v19;
          v27 = 8 * v19;
          *(_QWORD *)(v11[6] + v27) = v17;
          *(_QWORD *)(v11[7] + v27) = v33;
          v28 = v11[2];
          v29 = __OFADD__(v28, 1);
          v30 = v28 + 1;
          if (v29)
            goto LABEL_25;
          v11[2] = v30;
        }
        ++v12;
        if (v16 == v10)
          goto LABEL_28;
      }
    }
  }
  v11 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_28:
  swift_bridgeObjectRelease();
  v31 = sub_21DC0E008((uint64_t)v11);
  swift_release();
  return v31;
}

void EventGraph.getComponentGroupBridge(type:)()
{
  void *v0;
  id v1;
  unint64_t v2;
  id v3;
  uint64_t v4;

  v1 = objc_msgSend(v0, sel_getComponentGroupBridgesWithType_, swift_getObjCClassFromMetadata());
  type metadata accessor for ComponentGroupBridge();
  v2 = sub_21DC71B70();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    if (!v4)
      goto LABEL_6;
  }
  else if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_6:
    swift_bridgeObjectRelease();
    return;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
    MEMORY[0x22079D208](0, v2);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v3 = *(id *)(v2 + 32);
    goto LABEL_6;
  }
  __break(1u);
}

id EventGraph.ueiBridge.getter()
{
  return sub_21DC0F344((unint64_t *)&qword_2553AA420);
}

id sub_21DC0F2E4(void *a1, uint64_t a2, unint64_t *a3)
{
  sub_21DC13C88(0, a3);
  return objc_msgSend(a1, sel_getComponentGroupBridgeWithType_, swift_getObjCClassFromMetadata());
}

id EventGraph.orchBridge.getter()
{
  return sub_21DC0F344(&qword_2553A8488);
}

id sub_21DC0F344(unint64_t *a1)
{
  void *v1;

  sub_21DC13C88(0, a1);
  return objc_msgSend(v1, sel_getComponentGroupBridgeWithType_, swift_getObjCClassFromMetadata());
}

id EventGraph.nlxBridge.getter()
{
  return sub_21DC0F344((unint64_t *)&qword_2553A8490);
}

id EventGraph.asrBridge.getter()
{
  return sub_21DC0F344(&qword_2553A8498);
}

uint64_t EventGraph.componentIdentifiersBridge.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v0 = sub_21DC2630C();
  v1 = sub_21DC0E200(v0);
  swift_bridgeObjectRelease();
  v2 = sub_21DC4A610(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_21DC0F4E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t result;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;

  v12 = MEMORY[0x24BEE4AF8];
  v1 = a1 + 64;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v5)
      goto LABEL_23;
    v10 = *(_QWORD *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      v7 = v9 + 1;
      if (v9 + 1 >= v5)
        goto LABEL_23;
      v10 = *(_QWORD *)(v1 + 8 * v7);
      if (!v10)
      {
        v7 = v9 + 2;
        if (v9 + 2 >= v5)
          goto LABEL_23;
        v10 = *(_QWORD *)(v1 + 8 * v7);
        if (!v10)
        {
          v7 = v9 + 3;
          if (v9 + 3 >= v5)
            goto LABEL_23;
          v10 = *(_QWORD *)(v1 + 8 * v7);
          if (!v10)
            break;
        }
      }
    }
LABEL_22:
    v4 = (v10 - 1) & v10;
LABEL_5:
    v8 = swift_bridgeObjectRetain();
    result = sub_21DC52CF0(v8);
  }
  v11 = v9 + 4;
  if (v11 >= v5)
  {
LABEL_23:
    swift_release();
    return v12;
  }
  v10 = *(_QWORD *)(v1 + 8 * v11);
  if (v10)
  {
    v7 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v7 >= v5)
      goto LABEL_23;
    v10 = *(_QWORD *)(v1 + 8 * v7);
    ++v11;
    if (v10)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_21DC0F64C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84F0);
  result = sub_21DC71FE4();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v33 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v32 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v32)
          goto LABEL_33;
        v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v32)
            goto LABEL_33;
          v21 = v33[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v33 = -1 << v31;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v32)
                  goto LABEL_33;
                v21 = v33[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = 8 * v19;
      v28 = *(_QWORD *)(v5 + 56);
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v27);
      v30 = *(_QWORD *)(v28 + v27);
      if ((a2 & 1) == 0)
        sub_21DC13D90(*(_QWORD *)(v28 + v27));
      sub_21DC72134();
      sub_21DC72140();
      result = sub_21DC72158();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = 8 * v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v17) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_21DC0F924(uint64_t a1, char a2)
{
  return sub_21DC10F9C(a1, a2, (uint64_t *)&unk_2553AA5F0);
}

uint64_t sub_21DC0F930(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84F8);
  v6 = sub_21DC71FE4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_42;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v18 >= v36)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v37 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v36)
        goto LABEL_35;
      v20 = *(_QWORD *)(v37 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v36)
        {
LABEL_35:
          swift_release();
          v3 = v35;
          if ((a2 & 1) == 0)
            goto LABEL_42;
          goto LABEL_38;
        }
        v20 = *(_QWORD *)(v37 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_44;
            if (v13 >= v36)
              goto LABEL_35;
            v20 = *(_QWORD *)(v37 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = 8 * v17;
    v23 = *(void **)(*(_QWORD *)(v5 + 48) + v22);
    v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22);
    if ((a2 & 1) == 0)
    {
      v25 = v23;
      swift_bridgeObjectRetain();
    }
    sub_21DC72134();
    sub_21DC7214C();
    if (v23)
    {
      v26 = v23;
      sub_21DC71D74();

    }
    result = sub_21DC72158();
    v27 = -1 << *(_BYTE *)(v7 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v32 = v29 == v31;
        if (v29 == v31)
          v29 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v11 + 8 * v29);
      }
      while (v33 == -1);
      v14 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = 8 * v14;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v15) = v23;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v15) = v24;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v19 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_42;
LABEL_38:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v19, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_42:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21DC0FC48(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84D0);
  v37 = a2;
  v6 = sub_21DC71FE4();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v20 = v19 | (v13 << 6);
      }
      else
      {
        v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v35)
          goto LABEL_33;
        v22 = v36[v21];
        ++v13;
        if (!v22)
        {
          v13 = v21 + 1;
          if (v21 + 1 >= v35)
            goto LABEL_33;
          v22 = v36[v13];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v37 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v36[v23];
            if (!v22)
            {
              while (1)
              {
                v13 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_40;
                if (v13 >= v35)
                  goto LABEL_33;
                v22 = v36[v13];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v13 = v23;
          }
        }
LABEL_30:
        v10 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      v28 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 32 * v20);
      v30 = *v28;
      v29 = v28[1];
      v32 = v28[2];
      v31 = v28[3];
      v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
      if ((v37 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_21DC72134();
      swift_bridgeObjectRetain();
      sub_21DC71B04();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_21DC71B04();
      swift_bridgeObjectRelease();
      result = sub_21DC72158();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 32 * v17);
      *v18 = v30;
      v18[1] = v29;
      v18[2] = v32;
      v18[3] = v31;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v33;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21DC0FF88(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t i;
  char v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA5A0);
  v45 = a2;
  v6 = sub_21DC71FE4();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v43 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v42 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v21 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v46 = v13;
        v22 = v21 | (v13 << 6);
      }
      else
      {
        v23 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v42)
          goto LABEL_33;
        v24 = v43[v23];
        v25 = v13 + 1;
        if (!v24)
        {
          v25 = v13 + 2;
          if (v13 + 2 >= v42)
            goto LABEL_33;
          v24 = v43[v25];
          if (!v24)
          {
            v26 = v13 + 3;
            if (v13 + 3 >= v42)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v45 & 1) != 0)
              {
                v41 = 1 << *(_BYTE *)(v5 + 32);
                if (v41 >= 64)
                  bzero(v43, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v43 = -1 << v41;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v43[v26];
            if (!v24)
            {
              while (1)
              {
                v25 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_40;
                if (v25 >= v42)
                  goto LABEL_33;
                v24 = v43[v25];
                ++v26;
                if (v24)
                  goto LABEL_30;
              }
            }
            v25 = v13 + 3;
          }
        }
LABEL_30:
        v10 = (v24 - 1) & v24;
        v46 = v25;
        v22 = __clz(__rbit64(v24)) + (v25 << 6);
      }
      v31 = 32 * v22;
      v32 = *(_QWORD *)(v5 + 56);
      v33 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
      v35 = *v33;
      v34 = v33[1];
      v37 = v33[2];
      v36 = v33[3];
      v38 = (uint64_t *)(v32 + v31);
      v39 = v38[1];
      v40 = v38[3];
      v47 = *v38;
      v48 = v38[2];
      if ((v45 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_21DC72134();
      swift_bridgeObjectRetain();
      sub_21DC71B04();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_21DC71B04();
      swift_bridgeObjectRelease();
      result = sub_21DC72158();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v29 = v16 == v28;
          if (v16 == v28)
            v16 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v30 == -1);
        v17 = __clz(__rbit64(~v30)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 32 * v17;
      v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
      *v19 = v35;
      v19[1] = v34;
      v19[2] = v37;
      v19[3] = v36;
      v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
      v13 = v46;
      *v20 = v47;
      v20[1] = v39;
      v20[2] = v48;
      v20[3] = v40;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21DC10300(uint64_t a1, char a2)
{
  return sub_21DC10318(a1, a2, &qword_2553A84D8);
}

uint64_t sub_21DC1030C(uint64_t a1, char a2)
{
  return sub_21DC10318(a1, a2, &qword_2553AA5B0);
}

uint64_t sub_21DC10318(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t i;
  char v39;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v39 = a2;
  v7 = sub_21DC71FE4();
  v8 = v7;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 1 << *(_BYTE *)(v6 + 32);
    v37 = (_QWORD *)(v6 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v6 + 64);
    v36 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    for (i = v6; ; v6 = i)
    {
      if (v11)
      {
        v20 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v21 = v20 | (v14 << 6);
      }
      else
      {
        v22 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v36)
          goto LABEL_33;
        v23 = v37[v22];
        ++v14;
        if (!v23)
        {
          v14 = v22 + 1;
          if (v22 + 1 >= v36)
            goto LABEL_33;
          v23 = v37[v14];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_33:
              swift_release();
              v4 = v3;
              if ((v39 & 1) != 0)
              {
                v35 = 1 << *(_BYTE *)(v6 + 32);
                if (v35 >= 64)
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v35;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v23 = v37[v24];
            if (!v23)
            {
              while (1)
              {
                v14 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v14 >= v36)
                  goto LABEL_33;
                v23 = v37[v14];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v14 = v24;
          }
        }
LABEL_30:
        v11 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v14 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 32 * v21);
      v30 = *v29;
      v31 = v29[1];
      v33 = v29[2];
      v32 = v29[3];
      v34 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
      if ((v39 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_21DC72134();
      swift_bridgeObjectRetain();
      sub_21DC71B04();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_21DC71B04();
      swift_bridgeObjectRelease();
      result = sub_21DC72158();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 32 * v18);
      *v19 = v30;
      v19[1] = v31;
      v19[2] = v33;
      v19[3] = v32;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v34;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_21DC10658(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84C8);
  v37 = a2;
  v6 = sub_21DC71FE4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_21DC72134();
    sub_21DC71B04();
    result = sub_21DC72158();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21DC1095C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA590);
  v36 = a2;
  v6 = sub_21DC71FE4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_21DC72134();
    sub_21DC71B04();
    result = sub_21DC72158();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21DC10C70(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA5E0);
  v6 = sub_21DC71FE4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_21DC13D80((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_21DC0C2D4(v25, (uint64_t)&v38);
      sub_21DC13D44(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_21DC71E70();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_21DC13D80(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21DC10F84(uint64_t a1, char a2)
{
  return sub_21DC126B4(a1, a2, &qword_2553A8500);
}

uint64_t sub_21DC10F90(uint64_t a1, char a2)
{
  return sub_21DC10F9C(a1, a2, (uint64_t *)&unk_2553AA600);
}

uint64_t sub_21DC10F9C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_21DC71FE4();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v33 = (_QWORD *)(v6 + 64);
    v10 = 1 << *(_BYTE *)(v6 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v6 + 64);
    v32 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v9 << 6);
      }
      else
      {
        v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v6 + 64;
        if (v21 >= v32)
          goto LABEL_33;
        v22 = v33[v21];
        ++v9;
        if (!v22)
        {
          v9 = v21 + 1;
          if (v21 + 1 >= v32)
            goto LABEL_33;
          v22 = v33[v9];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v32)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v4 = v3;
                goto LABEL_40;
              }
              v31 = 1 << *(_BYTE *)(v6 + 32);
              if (v31 >= 64)
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v33 = -1 << v31;
              v4 = v3;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v22 = v33[v23];
            if (!v22)
            {
              while (1)
              {
                v9 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v9 >= v32)
                  goto LABEL_33;
                v22 = v33[v9];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v9 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_21DC72134();
      sub_21DC72140();
      result = sub_21DC72158();
      v14 = -1 << *(_BYTE *)(v8 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v18) = v30;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v4 = v8;
  return result;
}

uint64_t sub_21DC11270(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA550);
  v6 = sub_21DC71FE4();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = v2;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v8 + 63) >> 6;
    v13 = v6 + 64;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v15 << 6);
      }
      else
      {
        v23 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v23 >= v12)
          goto LABEL_33;
        v24 = v9[v23];
        ++v15;
        if (!v24)
        {
          v15 = v23 + 1;
          if (v23 + 1 >= v12)
            goto LABEL_33;
          v24 = v9[v15];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v12)
            {
LABEL_33:
              swift_release();
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v35;
                goto LABEL_40;
              }
              v34 = 1 << *(_BYTE *)(v5 + 32);
              if (v34 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v34;
              v3 = v35;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v24 = v9[v25];
            if (!v24)
            {
              while (1)
              {
                v15 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_42;
                if (v15 >= v12)
                  goto LABEL_33;
                v24 = v9[v15];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v15 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v15 << 6);
      }
      v30 = 8 * v22;
      v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
      v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((a2 & 1) == 0)
        v33 = v31;
      result = sub_21DC71D5C();
      v16 = -1 << *(_BYTE *)(v7 + 32);
      v17 = result & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v18 == v27;
          if (v18 == v27)
            v18 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v13 + 8 * v18);
        }
        while (v29 == -1);
        v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }
      *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v20 = 8 * v19;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v20) = v31;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v20) = v32;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_21DC1153C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84A8);
  v6 = sub_21DC71FE4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      v33 = v31;
      v34 = v32;
    }
    result = sub_21DC71D5C();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21DC1180C(uint64_t a1, char a2)
{
  return sub_21DC126B4(a1, a2, (uint64_t *)&unk_2553AA560);
}

uint64_t sub_21DC11818(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;

  v3 = v2;
  v5 = type metadata accessor for EventTypeIdPair();
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84C0);
  v43 = a2;
  v10 = sub_21DC71FE4();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v41 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v43 & 1) != 0)
      sub_21DC13CC0(v27, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair);
    else
      sub_21DC0C210(v27, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair);
    v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    sub_21DC72134();
    sub_21DC72140();
    sub_21DC715F4();
    sub_21DC13D04((unint64_t *)&qword_2553AA410, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_21DC71A44();
    result = sub_21DC72158();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = sub_21DC13CC0((uint64_t)v8, *(_QWORD *)(v11 + 48) + v26 * v19, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_21DC11BCC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;

  v3 = v2;
  v5 = type metadata accessor for EventTypeIdPair();
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA540);
  v42 = a2;
  v10 = sub_21DC71FE4();
  v11 = v10;
  if (*(_QWORD *)(v9 + 16))
  {
    v37 = v2;
    v12 = 1 << *(_BYTE *)(v9 + 32);
    v13 = *(_QWORD *)(v9 + 64);
    v39 = (_QWORD *)(v9 + 64);
    if (v12 < 64)
      v14 = ~(-1 << v12);
    else
      v14 = -1;
    v15 = v14 & v13;
    v38 = (unint64_t)(v12 + 63) >> 6;
    v16 = v10 + 64;
    result = swift_retain();
    v18 = 0;
    while (1)
    {
      if (v15)
      {
        v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v21 = v20 | (v18 << 6);
      }
      else
      {
        v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v38)
          goto LABEL_34;
        v23 = v39[v22];
        ++v18;
        if (!v23)
        {
          v18 = v22 + 1;
          if (v22 + 1 >= v38)
            goto LABEL_34;
          v23 = v39[v18];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_34:
              swift_release();
              v3 = v37;
              if ((v42 & 1) != 0)
              {
                v35 = 1 << *(_BYTE *)(v9 + 32);
                if (v35 >= 64)
                  bzero(v39, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v39 = -1 << v35;
                *(_QWORD *)(v9 + 16) = 0;
              }
              break;
            }
            v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                v18 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_41;
                if (v18 >= v38)
                  goto LABEL_34;
                v23 = v39[v18];
                ++v24;
                if (v23)
                  goto LABEL_21;
              }
            }
            v18 = v24;
          }
        }
LABEL_21:
        v15 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      v25 = *(_QWORD *)(v40 + 72);
      v26 = *(_QWORD *)(v9 + 48) + v25 * v21;
      if ((v42 & 1) != 0)
      {
        sub_21DC13CC0(v26, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair);
        v27 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      }
      else
      {
        sub_21DC0C210(v26, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair);
        v27 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
        swift_bridgeObjectRetain();
      }
      sub_21DC72134();
      sub_21DC72140();
      sub_21DC715F4();
      sub_21DC13D04((unint64_t *)&qword_2553AA410, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_21DC71A44();
      result = sub_21DC72158();
      v28 = -1 << *(_BYTE *)(v11 + 32);
      v29 = result & ~v28;
      v30 = v29 >> 6;
      if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v31 = 0;
        v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v33 = v30 == v32;
          if (v30 == v32)
            v30 = 0;
          v31 |= v33;
          v34 = *(_QWORD *)(v16 + 8 * v30);
        }
        while (v34 == -1);
        v19 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      result = sub_21DC13CC0((uint64_t)v8, *(_QWORD *)(v11 + 48) + v25 * v19, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair);
      *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v27;
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_21DC11F84(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;

  v4 = sub_21DC715F4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = v2;
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA510);
  v10 = sub_21DC71FE4();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = swift_release();
    v36 = v40;
LABEL_42:
    *v36 = v11;
    return result;
  }
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v42 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v41 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  v39 = a2;
  v19 = 16;
  if ((a2 & 1) != 0)
    v19 = 32;
  v43 = v19;
  while (1)
  {
    if (v15)
    {
      v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_24;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v23 >= v41)
    {
      swift_release();
      v36 = v40;
      v24 = v42;
      if ((v39 & 1) != 0)
      {
LABEL_37:
        v37 = 1 << *(_BYTE *)(v9 + 32);
        if (v37 >= 64)
          bzero(v24, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v24 = -1 << v37;
        *(_QWORD *)(v9 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v24 = v42;
    v25 = v42[v23];
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v41)
        goto LABEL_34;
      v25 = v42[v18];
      if (!v25)
        break;
    }
LABEL_23:
    v15 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + v43))(v8, *(_QWORD *)(v9 + 48) + v27 * v22, v4);
    v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v22);
    sub_21DC13D04((unint64_t *)&qword_2553AA410, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_21DC71A38();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v20 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v11 + 48) + v27 * v20, v8, v4);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v20) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  v26 = v23 + 2;
  if (v26 >= v41)
  {
LABEL_34:
    swift_release();
    v36 = v40;
    if ((v39 & 1) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v25 = v42[v26];
  if (v25)
  {
    v18 = v26;
    goto LABEL_23;
  }
  while (1)
  {
    v18 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v18 >= v41)
      goto LABEL_34;
    v25 = v42[v18];
    ++v26;
    if (v25)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_21DC12314(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t i;
  int v43;

  v3 = v2;
  v5 = sub_21DC715F4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84B8);
  v43 = a2;
  v11 = sub_21DC71FE4();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v41 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v39 = v2;
  v40 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  result = swift_retain();
  v19 = 0;
  for (i = v10; ; v10 = i)
  {
    if (v16)
    {
      v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_22;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = v41;
    v25 = v41[v23];
    ++v19;
    if (!v25)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_34;
      v25 = v41[v19];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v41[v26];
        if (!v25)
        {
          while (1)
          {
            v19 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v19 >= v40)
              goto LABEL_34;
            v25 = v41[v19];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v19 = v26;
      }
    }
LABEL_21:
    v16 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_22:
    v27 = *(_QWORD *)(v6 + 72);
    v28 = *(_QWORD *)(v10 + 48) + v27 * v22;
    if ((v43 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v9, v28, v5);
      v29 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v22);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v9, v28, v5);
      v29 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v22);
      swift_bridgeObjectRetain();
    }
    sub_21DC13D04((unint64_t *)&qword_2553AA410, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_21DC71A38();
    v30 = -1 << *(_BYTE *)(v12 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v17 + 8 * (v31 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v17 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v17 + 8 * v32);
      }
      while (v36 == -1);
      v20 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v12 + 48) + v27 * v20, v9, v5);
    *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v20) = v29;
    ++*(_QWORD *)(v12 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v37 = 1 << *(_BYTE *)(v10 + 32);
  if (v37 >= 64)
    bzero(v24, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v37;
  *(_QWORD *)(v10 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_21DC126A8(uint64_t a1, char a2)
{
  return sub_21DC126B4(a1, a2, &qword_2553A84B0);
}

uint64_t sub_21DC126B4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v7 = sub_21DC71FE4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v3;
  v37 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v15;
    if (!v25)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_33;
      v25 = *(_QWORD *)(v37 + 8 * v15);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v15 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v15 >= v12)
              goto LABEL_33;
            v25 = *(_QWORD *)(v37 + 8 * v15);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v15 = v26;
      }
    }
LABEL_30:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v6 + 48) + v31);
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      v34 = v32;
      swift_bridgeObjectRetain();
    }
    result = sub_21DC71D5C();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v24 = (_QWORD *)(v6 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_21DC12984(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int v41;

  v3 = v2;
  v5 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v40 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA440);
  v41 = a2;
  v10 = sub_21DC71FE4();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v39 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v37 = v2;
  v38 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v38)
      break;
    v23 = v39;
    v24 = v39[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v38)
        goto LABEL_34;
      v24 = v39[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_34:
          swift_release();
          v3 = v37;
          if ((v41 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v39[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v38)
              goto LABEL_34;
            v24 = v39[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v40 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v41 & 1) != 0)
      sub_21DC13CC0(v27, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    else
      sub_21DC0C210(v27, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    sub_21DC72134();
    sub_21DC715F4();
    sub_21DC13D04((unint64_t *)&qword_2553AA410, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_21DC71A44();
    result = sub_21DC72158();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = sub_21DC13CC0((uint64_t)v8, *(_QWORD *)(v11 + 48) + v26 * v19, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v37;
  v23 = v39;
  if ((v41 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_21DC12D24(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t v45;
  int v46;
  uint64_t v47;

  v3 = v2;
  v5 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v45 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v47 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v41 - v10;
  v12 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA450);
  v46 = a2;
  v13 = sub_21DC71FE4();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_41;
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 64);
  v44 = (_QWORD *)(v12 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v42 = v2;
  v43 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  result = swift_retain();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v25 = v24 | (v21 << 6);
      goto LABEL_22;
    }
    v26 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v43)
      break;
    v27 = v44;
    v28 = v44[v26];
    ++v21;
    if (!v28)
    {
      v21 = v26 + 1;
      if (v26 + 1 >= v43)
        goto LABEL_34;
      v28 = v44[v21];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v43)
        {
LABEL_34:
          swift_release();
          v3 = v42;
          if ((v46 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v28 = v44[v29];
        if (!v28)
        {
          while (1)
          {
            v21 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_43;
            if (v21 >= v43)
              goto LABEL_34;
            v28 = v44[v21];
            ++v29;
            if (v28)
              goto LABEL_21;
          }
        }
        v21 = v29;
      }
    }
LABEL_21:
    v18 = (v28 - 1) & v28;
    v25 = __clz(__rbit64(v28)) + (v21 << 6);
LABEL_22:
    v30 = *(_QWORD *)(v45 + 72);
    v31 = v30 * v25;
    v32 = *(_QWORD *)(v12 + 48) + v30 * v25;
    if ((v46 & 1) != 0)
    {
      sub_21DC13CC0(v32, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      sub_21DC13CC0(*(_QWORD *)(v12 + 56) + v31, v47, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    }
    else
    {
      sub_21DC0C210(v32, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      sub_21DC0C210(*(_QWORD *)(v12 + 56) + v31, v47, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    }
    sub_21DC72134();
    sub_21DC715F4();
    sub_21DC13D04((unint64_t *)&qword_2553AA410, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_21DC71A44();
    result = sub_21DC72158();
    v33 = -1 << *(_BYTE *)(v14 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v19 + 8 * (v34 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v19 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v19 + 8 * v35);
      }
      while (v39 == -1);
      v22 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    v23 = v30 * v22;
    sub_21DC13CC0((uint64_t)v11, *(_QWORD *)(v14 + 48) + v30 * v22, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    result = sub_21DC13CC0(v47, *(_QWORD *)(v14 + 56) + v23, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    ++*(_QWORD *)(v14 + 16);
  }
  swift_release();
  v3 = v42;
  v27 = v44;
  if ((v46 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v40 = 1 << *(_BYTE *)(v12 + 32);
  if (v40 >= 64)
    bzero(v27, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v40;
  *(_QWORD *)(v12 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v14;
  return result;
}

uint64_t sub_21DC13110(uint64_t a1, int a2)
{
  return sub_21DC13128(a1, a2, &qword_2553AA460);
}

uint64_t sub_21DC1311C(uint64_t a1, int a2)
{
  return sub_21DC13128(a1, a2, &qword_2553A84A0);
}

uint64_t sub_21DC13128(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;

  v5 = v3;
  v7 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v42 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v43 = a2;
  v12 = sub_21DC71FE4();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v41 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v39 = v3;
  v40 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  while (1)
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v40)
      break;
    v25 = v41;
    v26 = v41[v24];
    ++v20;
    if (!v26)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v40)
        goto LABEL_34;
      v26 = v41[v20];
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v40)
        {
LABEL_34:
          swift_release();
          v5 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v26 = v41[v27];
        if (!v26)
        {
          while (1)
          {
            v20 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_43;
            if (v20 >= v40)
              goto LABEL_34;
            v26 = v41[v20];
            ++v27;
            if (v26)
              goto LABEL_21;
          }
        }
        v20 = v27;
      }
    }
LABEL_21:
    v17 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    v28 = *(_QWORD *)(v42 + 72);
    v29 = *(_QWORD *)(v11 + 48) + v28 * v23;
    if ((v43 & 1) != 0)
    {
      sub_21DC13CC0(v29, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      v30 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v23);
    }
    else
    {
      sub_21DC0C210(v29, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      v30 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_21DC72134();
    sub_21DC715F4();
    sub_21DC13D04((unint64_t *)&qword_2553AA410, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_21DC71A44();
    result = sub_21DC72158();
    v31 = -1 << *(_BYTE *)(v13 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    result = sub_21DC13CC0((uint64_t)v10, *(_QWORD *)(v13 + 48) + v28 * v21, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v21) = v30;
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v5 = v39;
  v25 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v11 + 32);
  if (v38 >= 64)
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v38;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v5 = v13;
  return result;
}

uint64_t sub_21DC134E4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84E8);
  v6 = sub_21DC71FE4();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_21DC13D80(v24, v35);
      }
      else
      {
        sub_21DC13D44((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_21DC72134();
      sub_21DC71B04();
      result = sub_21DC72158();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_21DC13D80(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21DC137E4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_21DC1386C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4)
    v7 = 4;
  v8 = v7 - 4;
  v9 = (unint64_t *)(a1 + 96);
  v2 = 192;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

BOOL sub_21DC1391C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_21DC27CC0(a1, a2, *(_DWORD *)(v2 + 16));
}

uint64_t sub_21DC13924(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(id, uint64_t))
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  char v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;

  v20 = (unint64_t *)result;
  v21 = 0;
  v6 = 0;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v23 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v11 = v10 | (v6 << 6);
      goto LABEL_5;
    }
    v15 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v23)
      return sub_21DC5B7E8(v20, a2, v21, a3);
    v16 = *(_QWORD *)(v22 + 8 * v15);
    ++v6;
    if (!v16)
    {
      v6 = v15 + 1;
      if (v15 + 1 >= v23)
        return sub_21DC5B7E8(v20, a2, v21, a3);
      v16 = *(_QWORD *)(v22 + 8 * v6);
      if (!v16)
      {
        v6 = v15 + 2;
        if (v15 + 2 >= v23)
          return sub_21DC5B7E8(v20, a2, v21, a3);
        v16 = *(_QWORD *)(v22 + 8 * v6);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v9 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v6 << 6);
LABEL_5:
    v12 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v11);
    v13 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v11);
    swift_bridgeObjectRetain();
    v14 = a4(v13, v12);

    result = swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
    {
      *(unint64_t *)((char *)v20 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v21++, 1))
      {
        __break(1u);
        return sub_21DC5B7E8(v20, a2, v21, a3);
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v23)
    return sub_21DC5B7E8(v20, a2, v21, a3);
  v16 = *(_QWORD *)(v22 + 8 * v17);
  if (v16)
  {
    v6 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v6 >= v23)
      return sub_21DC5B7E8(v20, a2, v21, a3);
    v16 = *(_QWORD *)(v22 + 8 * v6);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_21DC13B18(uint64_t isStackAllocationSafe, uint64_t (*a2)(id, uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x24BDAC8D0];
  v7 = *(_BYTE *)(isStackAllocationSafe + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, a2);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_21DC13924((uint64_t)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v6, a2);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_21DC13924((uint64_t)v11, v8, v6, a2);
    MEMORY[0x22079DA24](v11, -1, -1);
  }
  return a3;
}

uint64_t sub_21DC13C88(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_21DC13CC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21DC13D04(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x22079D964](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21DC13D44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_21DC13D80(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_21DC13D90(unint64_t result)
{
  if (result >= 2)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t SiriTurn.__allocating_init(eventGraph:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return SiriTurn.init(eventGraph:)(a1);
}

uint64_t SiriTurn.init(eventGraph:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  double *v21;
  double v22;
  uint64_t v23;

  v2 = sub_21DC13C88(0, (unint64_t *)&qword_2553AA420);
  v3 = sub_21DC26320();
  if (!*(_QWORD *)(v3 + 16) || (v4 = sub_21DC0A464(v2), (v5 & 1) == 0))
  {

    swift_bridgeObjectRelease();
LABEL_20:
    type metadata accessor for SiriTurn();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = sub_21DC089B4(v6);
  swift_bridgeObjectRelease();
  if (!v7)
  {

    goto LABEL_20;
  }
  v8 = a1;
  v9 = sub_21DC0BFDC(v7, (uint64_t)v8);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8338);
  *(_QWORD *)(swift_initStackObject() + 16) = v9;
  swift_release();
  v10 = *(_QWORD *)&v8[OBJC_IVAR___ISEventGraph_eventsInternal];
  if (!(v10 >> 62))
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v11)
      goto LABEL_6;
LABEL_24:
    v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_25:
    swift_bridgeObjectRelease_n();
    if (v14[2])
      v21 = (double *)(v14 + 4);
    else
      v21 = (double *)&v8[OBJC_IVAR___ISEventGraph_timestamp];
    v22 = *v21;
    swift_bridgeObjectRelease();
    v23 = swift_bridgeObjectRetain();
    v20 = EventGraph.init(timestamp:events:)(v23, v22);

    return (uint64_t)v20;
  }
  swift_bridgeObjectRetain_n();
  result = sub_21DC71FCC();
  v11 = result;
  if (!result)
    goto LABEL_24;
LABEL_6:
  if (v11 >= 1)
  {
    v13 = 0;
    v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      if ((v10 & 0xC000000000000001) != 0)
      {
        v15 = MEMORY[0x22079D208](v13, v10);
      }
      else
      {
        v15 = *(_QWORD *)(v10 + 8 * v13 + 32);
        swift_retain();
      }
      sub_21DC13C88(0, &qword_2553A8508);
      v16 = (void *)sub_21DC71750();
      if (v16)
      {

        v17 = *(_QWORD *)(v15 + 16);
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v14 = sub_21DC14C6C(0, v14[2] + 1, 1, v14);
        v19 = v14[2];
        v18 = v14[3];
        if (v19 >= v18 >> 1)
          v14 = sub_21DC14C6C((_QWORD *)(v18 > 1), v19 + 1, 1, v14);
        v14[2] = v19 + 1;
        v14[v19 + 4] = v17;
      }
      else
      {
        swift_release();
      }
      ++v13;
    }
    while (v11 != v13);
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

uint64_t static SiriTurn.construct(eventGraph:)(void *a1)
{
  id v2;

  v2 = objc_allocWithZone((Class)type metadata accessor for SiriTurn());
  return SiriTurn.init(eventGraph:)(a1);
}

void sub_21DC141F4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  void *v10;

  v1 = v0;
  v2 = sub_21DC13C88(0, (unint64_t *)&qword_2553AA420);
  v3 = sub_21DC26320();
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_21DC0A464(v2), (v5 & 1) != 0))
  {
    v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v7 = sub_21DC089B4(v6);
    swift_bridgeObjectRelease();
    if (v7)
    {
      v8 = v1;
      v9 = sub_21DC0BFDC(v7, (uint64_t)v8);
      swift_bridgeObjectRelease();

      __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8338);
      *(_QWORD *)(swift_initStackObject() + 16) = v9;
      v10 = (void *)sub_21DC09288();
      swift_release();
      sub_21DC717F8();

      return;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  __break(1u);
}

double sub_21DC14348()
{
  double result;
  char v1;

  result = COERCE_DOUBLE(sub_21DC1436C());
  if ((v1 & 1) != 0)
    return 0.0;
  return result;
}

void *sub_21DC1436C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  void *result;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  double v23;
  double v24;
  void *v25;
  uint64_t v26;
  void *v27;
  double v28;
  uint64_t v29;

  v1 = v0;
  v2 = sub_21DC13C88(0, &qword_2553A8508);
  v3 = sub_21DC262F8();
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_21DC0A464(v2), (v5 & 1) != 0))
  {
    v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v7 = v1;
  v8 = sub_21DC0BFDC(v6, (uint64_t)v7);
  swift_bridgeObjectRelease();

  if (v8 >> 62)
  {
    if (!sub_21DC71FCC())
      goto LABEL_32;
  }
  else if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_32;
  }
  if ((v8 & 0xC000000000000001) != 0)
  {
    v9 = (id)MEMORY[0x22079D208](0, v8);
  }
  else
  {
    if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_30;
    }
    v9 = *(id *)(v8 + 32);
  }
  v10 = v9;
  swift_bridgeObjectRelease();
  v11 = sub_21DC13C88(0, &qword_2553A8510);
  v12 = sub_21DC262F8();
  if (*(_QWORD *)(v12 + 16) && (v13 = sub_21DC0A464(v11), (v14 & 1) != 0))
  {
    v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
    swift_bridgeObjectRetain();
  }
  else
  {
    v15 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v16 = v7;
  v17 = sub_21DC0BFDC(v15, (uint64_t)v16);
  swift_bridgeObjectRelease();

  v7 = v10;
  v3 = sub_21DC15D20(v17, (uint64_t)v7);
  swift_bridgeObjectRelease();

  if (!(v3 >> 62))
  {
    result = *(void **)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (*(double *)&result != 0.0)
      goto LABEL_16;
    goto LABEL_31;
  }
LABEL_30:
  *(double *)&result = COERCE_DOUBLE(sub_21DC71FCC());
  if (*(double *)&result == 0.0)
  {
LABEL_31:

LABEL_32:
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
LABEL_16:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v19 = (id)MEMORY[0x22079D208](0, v3);
  }
  else
  {
    if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_36;
    }
    v19 = *(id *)(v3 + 32);
  }
  v20 = v19;
  swift_bridgeObjectRelease();
  v21 = (void *)sub_21DC71750();
  if (!v21)
  {

    goto LABEL_33;
  }
  v22 = v21;
  objc_msgSend(v21, sel_timeIntervalSince1970);
  v24 = v23;
  if (v23 < 100.0)
  {

LABEL_33:
    *(double *)&result = 0.0;
    return result;
  }
  *(double *)&result = COERCE_DOUBLE(sub_21DC71714());
  if (*(double *)&result != 0.0)
  {
    v25 = result;
    v26 = sub_21DC717BC();

    *(double *)&result = COERCE_DOUBLE(sub_21DC71714());
    if (*(double *)&result != 0.0)
    {
      v27 = result;
      v28 = (double)(unint64_t)v26;
      v29 = sub_21DC717BC();

      *(double *)&result = v24 + (v28 - (double)(unint64_t)v29) / 1000000000.0;
      return result;
    }
    goto LABEL_37;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21DC1476C@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  id v11;
  unint64_t v12;

  v2 = v1;
  v4 = sub_21DC13C88(0, (unint64_t *)&qword_2553AA420);
  v5 = sub_21DC26320();
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_21DC0A464(v4), (v7 & 1) != 0))
  {
    v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v9 = sub_21DC089B4(v8);
    result = swift_bridgeObjectRelease();
    if (v9)
    {
      v11 = v2;
      v12 = sub_21DC0BFDC(v9, (uint64_t)v11);
      swift_bridgeObjectRelease();

      __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8338);
      *(_QWORD *)(swift_initStackObject() + 16) = v12;
      ComponentGroup<>.previousTurnId.getter(a1);
      return swift_release();
    }
  }
  else
  {
    result = swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void SiriTurn.__allocating_init(timestamp:events:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void SiriTurn.init(timestamp:events:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SiriTurn.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SiriTurn();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_21DC148F0()
{
  id v0;

  if (EventGraph.uei.getter())
  {
    v0 = (id)sub_21DC09288();
    swift_release();
    sub_21DC717F8();

  }
  else
  {
    __break(1u);
  }
}

_QWORD *sub_21DC14948(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8560);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 31;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21DC15C30(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_21DC14A54(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8568);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21DC1565C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_21DC14B60(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8588);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21DC15944(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_21DC14C6C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8580);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21DC15944(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_21DC14D78(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8578);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21DC15764(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_21DC14E84(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A8A90);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21DC16034(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_21DC14F90(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2553A83A8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21DC15854(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC1509C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21DC153F4(a1, a2, a3, a4, &qword_2553A8520, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

char *sub_21DC150B0(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_21DC150C8(a1, a2, a3, a4, &qword_2553A8558);
}

char *sub_21DC150BC(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_21DC150C8(a1, a2, a3, a4, &qword_2553A8550);
}

char *sub_21DC150C8(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = *((_QWORD *)a4 + 3);
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = *((_QWORD *)a4 + 2);
    if (v8 <= v9)
      v10 = *((_QWORD *)a4 + 2);
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (char *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 29;
      *((_QWORD *)v11 + 2) = v9;
      *((_QWORD *)v11 + 3) = 2 * (v13 >> 2);
      v14 = v11 + 32;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (char *)MEMORY[0x24BEE4AF8];
      v14 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v9 + 32])
          memmove(v14, a4 + 32, 4 * v9);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_21DC15A2C(0, v9, v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC151D0(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8540);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2553A8548) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_21DC71FA8();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2553A8548) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_21DC15B14(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_21DC153E0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21DC153F4(a1, a2, a3, a4, &qword_2553A8518, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
}

uint64_t sub_21DC153F4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_21DC71FA8();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_21DC16124(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_21DC15600(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21DC153F4(a1, a2, a3, a4, &qword_2553A8538, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptProtoEvent);
}

uint64_t sub_21DC15614(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21DC153F4(a1, a2, a3, a4, &qword_2553A8530, (uint64_t (*)(_QWORD))MEMORY[0x24BE5A510]);
}

uint64_t sub_21DC15628(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21DC153F4(a1, a2, a3, a4, &qword_2553A8528, (uint64_t (*)(_QWORD))MEMORY[0x24BE587A0]);
}

uint64_t type metadata accessor for SiriTurn()
{
  return objc_opt_self();
}

uint64_t sub_21DC1565C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8570);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC15764(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC15854(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_21DC72008();
  __break(1u);
  return result;
}

char *sub_21DC15944(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_21DC72008();
  __break(1u);
  return result;
}

char *sub_21DC15A2C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = 4 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC15B14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2553A8548) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC15C30(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC15D20(unint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  unint64_t v16;
  uint64_t result;
  void *v18;
  void *v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v30 = a2;
  v5 = sub_21DC715F4();
  v6 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  v29 = v6;
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v27 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v24 - v11;
  v31 = MEMORY[0x24BEE4AF8];
  if (!(a1 >> 62))
  {
    v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v13)
      goto LABEL_3;
    return MEMORY[0x24BEE4AF8];
  }
LABEL_18:
  v13 = sub_21DC71FCC();
  if (!v13)
    return MEMORY[0x24BEE4AF8];
LABEL_3:
  v14 = 0;
  v26 = a1 & 0xC000000000000001;
  v24[1] = v3;
  v25 = a1 & 0xFFFFFFFFFFFFFF8;
  while (1)
  {
    if (v26)
    {
      v15 = (id)MEMORY[0x22079D208](v14, a1);
    }
    else
    {
      if (v14 >= *(_QWORD *)(v25 + 16))
      {
        __break(1u);
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      v15 = *(id *)(a1 + 8 * v14 + 32);
    }
    v3 = v15;
    v16 = v14 + 1;
    if (__OFADD__(v14, 1))
      goto LABEL_17;
    result = sub_21DC71714();
    if (!result)
      break;
    v18 = (void *)result;
    sub_21DC7178C();

    result = sub_21DC71714();
    if (!result)
      goto LABEL_21;
    v19 = (void *)result;
    v20 = v27;
    sub_21DC7178C();

    LOBYTE(v19) = sub_21DC715D0();
    v21 = *(void (**)(char *, uint64_t))(v29 + 8);
    v22 = v20;
    v23 = v28;
    v21(v22, v28);
    v21(v12, v23);
    if ((v19 & 1) != 0)
    {
      sub_21DC71F00();
      sub_21DC71F30();
      sub_21DC71F3C();
      sub_21DC71F0C();
    }
    else
    {

    }
    ++v14;
    if (v16 == v13)
      return v31;
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

unint64_t sub_21DC15F30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2553AA410;
  if (!qword_2553AA410)
  {
    v1 = sub_21DC715F4();
    result = MEMORY[0x22079D964](MEMORY[0x24BDCEA88], v1);
    atomic_store(result, (unint64_t *)&qword_2553AA410);
  }
  return result;
}

uint64_t method lookup function for SiriTurn()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriTurn.__allocating_init(eventGraph:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 336))();
}

uint64_t dispatch thunk of SiriTurn.turnId.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x158))();
}

uint64_t dispatch thunk of SiriTurn.id.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x160))();
}

uint64_t dispatch thunk of SiriTurn.timeIntervalSince1970Nonnull.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x168))();
}

uint64_t dispatch thunk of SiriTurn.timeIntervalSince1970.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x170))();
}

uint64_t dispatch thunk of SiriTurn.previousTurnId.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x178))();
}

uint64_t sub_21DC16034(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC16124(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC1623C@<X0>(char a1@<W1>, int a2@<W3>, uint64_t a3@<X4>, int a4@<W5>, uint64_t a5@<X6>, int a6@<W7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, _QWORD, uint64_t, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  id v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v53[4];
  char *v54;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[4];

  v59 = a6;
  v60 = a5;
  v56 = a2;
  v57 = a4;
  v58 = a3;
  v62 = a7;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8668);
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61, v10);
  v54 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A81A8);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v14, v17);
  v20 = (char *)v53 - v19;
  v22 = MEMORY[0x24BDAC7A8](v18, v21);
  v24 = (char *)v53 - v23;
  v26 = MEMORY[0x24BDAC7A8](v22, v25);
  v28 = (char *)v53 - v27;
  v30 = MEMORY[0x24BDAC7A8](v26, v29);
  v32 = (char *)v53 - v31;
  MEMORY[0x24BDAC7A8](v30, v33);
  v35 = (char *)v53 - v34;
  v36 = swift_allocObject();
  v53[3] = v36;
  *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
  v53[2] = v36 + 16;
  if ((a1 & 1) != 0)
  {
    v38 = sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v32, 1, 1, v38);
    goto LABEL_5;
  }
  v53[0] = a9;
  v37 = v28;
  sub_21DC7151C();
  v38 = sub_21DC71588();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56);
  v40(v32, 0, 1, v38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38) == 1)
  {
    v28 = v37;
LABEL_5:
    sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v35, 1, 1, v38);
    sub_21DC0892C((uint64_t)v32);
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v35, v32, v38);
  v40(v35, 0, 1, v38);
  v28 = v37;
LABEL_7:
  if ((v56 & 1) != 0)
  {
    v43 = sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v24, 1, 1, v43);
    goto LABEL_11;
  }
  v41 = v35;
  v42 = v28;
  sub_21DC7151C();
  v43 = sub_21DC71588();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56);
  v45(v24, 0, 1, v43);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v24, 1, v43) == 1)
  {
    v28 = v42;
    v35 = v41;
LABEL_11:
    sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v28, 1, 1, v43);
    sub_21DC0892C((uint64_t)v24);
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v42, v24, v43);
  v45(v42, 0, 1, v43);
  v28 = v42;
  v35 = v41;
LABEL_13:
  sub_21DC0896C((uint64_t)v35, (uint64_t)v20);
  sub_21DC0896C((uint64_t)v28, (uint64_t)v16);
  if ((v57 & 1) != 0)
    v46 = 0;
  else
    v46 = v58;
  if ((v59 & 1) != 0)
    v47 = 0;
  else
    v47 = v60;
  sub_21DC07D04();
  v48 = sub_21DC42828((uint64_t)v20, (uint64_t)v16, v46, v47, 0);
  sub_21DC71924();
  sub_21DC16C00();
  swift_bridgeObjectRetain();
  sub_21DC7196C();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v63, v63[3]);
  swift_retain();
  sub_21DC719FC();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  v49 = v54;
  v50 = v55;
  swift_beginAccess();
  type metadata accessor for AnteroEvent();
  swift_bridgeObjectRetain();
  sub_21DC71B7C();
  swift_bridgeObjectRelease();
  sub_21DC16C48();
  v51 = v61;
  sub_21DC71618();
  sub_21DC71660();

  (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v51);
  sub_21DC0892C((uint64_t)v28);
  sub_21DC0892C((uint64_t)v35);
  return swift_release();
}

uint64_t sub_21DC168FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A81A8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8688);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_21DC718A0();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a1, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  sub_21DC7184C();
  v14 = objc_allocWithZone((Class)type metadata accessor for AnteroEvent());
  AnteroEvent.init(telemetryEvent:writeTimestamp:)((uint64_t)v11, (uint64_t)v7);
  v15 = swift_beginAccess();
  MEMORY[0x22079CE84](v15);
  if (*(_QWORD *)((*(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_21DC71BA0();
  sub_21DC71BC4();
  sub_21DC71B94();
  return swift_endAccess();
}

uint64_t sub_21DC16A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15TelemetryStream_logger;
  v2 = sub_21DC719D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_21DC16ACC()
{
  return type metadata accessor for TelemetryStream();
}

uint64_t type metadata accessor for TelemetryStream()
{
  uint64_t result;

  result = qword_2553A85B8;
  if (!qword_2553A85B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21DC16B10()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21DC719D8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_21DC16B84(_BYTE *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *(_BYTE *)(*v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15TelemetryStream_name);
}

uint64_t sub_21DC16B9C@<X0>(char a1@<W1>, char a2@<W3>, uint64_t a3@<X4>, char a4@<W5>, uint64_t a5@<X6>, char a6@<W7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9)
{
  return sub_21DC1623C(a1 & 1, a2 & 1, a3, a4 & 1, a5, a6 & 1, a7, a8, a9);
}

uint64_t sub_21DC16BDC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_21DC16C00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2553A8670;
  if (!qword_2553A8670)
  {
    v1 = sub_21DC71924();
    result = MEMORY[0x22079D964](MEMORY[0x24BE59828], v1);
    atomic_store(result, (unint64_t *)&qword_2553A8670);
  }
  return result;
}

unint64_t sub_21DC16C48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2553A8678;
  if (!qword_2553A8678)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553A8668);
    result = MEMORY[0x22079D964](MEMORY[0x24BE0C8B8], v1);
    atomic_store(result, (unint64_t *)&qword_2553A8678);
  }
  return result;
}

uint64_t sub_21DC16C94(uint64_t a1)
{
  uint64_t v1;

  return sub_21DC168FC(a1, v1);
}

_QWORD *sub_21DC16C9C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD v32[2];
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_23;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; v8 = sub_21DC71FCC())
  {
    v32[1] = v2;
    v9 = a1 & 0xC000000000000001;
    v37 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v10 = 4;
    v33 = v7;
    v36 = a1 & 0xC000000000000001;
    while (1)
    {
      v2 = v10 - 4;
      v11 = v9 ? (id)MEMORY[0x22079D208](v10 - 4, a1) : *(id *)(a1 + 8 * v10);
      v12 = v11;
      v13 = v10 - 3;
      if (__OFADD__(v2, 1))
        break;
      sub_21DC13C88(0, &qword_2553A86A8);
      v14 = (void *)sub_21DC71750();
      if (v14)
      {
        v15 = v14;
        v16 = objc_msgSend(v14, sel_trpId);
        if (v16)
        {
          v17 = v16;
          v18 = v8;
          v19 = a1;
          sub_21DC71CFC();

          v20 = (uint64_t)v7;
          v21 = sub_21DC715F4();
          v22 = *(_QWORD *)(v21 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
          {
            sub_21DC19DF4(v20);

            a1 = v19;
            v8 = v18;
            v7 = (char *)v20;
          }
          else
          {
            v23 = sub_21DC715A0();
            v34 = v24;
            v35 = v23;
            (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);

            v25 = v37;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v25 = sub_21DC14F90(0, v25[2] + 1, 1, v25);
            v27 = v25[2];
            v26 = v25[3];
            v37 = v25;
            a1 = v19;
            if (v27 >= v26 >> 1)
              v37 = sub_21DC14F90((_QWORD *)(v26 > 1), v27 + 1, 1, v37);
            v8 = v18;
            v28 = v37;
            v37[2] = v27 + 1;
            v29 = &v28[2 * v27];
            v7 = v33;
            v30 = v34;
            v29[4] = v35;
            v29[5] = v30;
          }
          v9 = v36;
        }
        else
        {

        }
      }
      else
      {

      }
      ++v10;
      if (v13 == v8)
      {
        swift_bridgeObjectRelease();
        return v37;
      }
    }
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x24BEE4AF8];
}

uint64_t sub_21DC16F48()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t result;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v1 = swift_bridgeObjectRetain();
  v2 = sub_21DC0DEB8(v1);
  swift_bridgeObjectRelease();
  v8 = v0;
  v3 = sub_21DC19B34(v2, (uint64_t (*)(void))sub_21DC19EC4, (uint64_t)&v7, &qword_2553A86B0);
  swift_bridgeObjectRelease();
  if (!(v3 >> 62))
  {
    result = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  result = sub_21DC71FCC();
  if (!result)
    goto LABEL_8;
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v5 = (id)MEMORY[0x22079D208](0, v3);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v3 + 32);
LABEL_6:
    v6 = v5;
    swift_bridgeObjectRelease();
    return (uint64_t)v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC17048()
{
  unint64_t v0;
  unint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_21DC0DEB8(v0);
  swift_bridgeObjectRelease();
  v2 = sub_21DC16C9C(v1);
  swift_bridgeObjectRelease();
  if (v2[2])
  {
    v3 = v2[4];
    swift_bridgeObjectRetain();
  }
  else
  {
    v3 = 0;
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_21DC170E0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t result;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v1 = swift_bridgeObjectRetain();
  v2 = sub_21DC0DEB8(v1);
  swift_bridgeObjectRelease();
  v8 = v0;
  v3 = sub_21DC19B34(v2, (uint64_t (*)(void))sub_21DC19EA0, (uint64_t)&v7, &qword_2553A86B0);
  swift_bridgeObjectRelease();
  if (!(v3 >> 62))
  {
    result = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  result = sub_21DC71FCC();
  if (!result)
    goto LABEL_8;
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v5 = (id)MEMORY[0x22079D208](0, v3);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v3 + 32);
LABEL_6:
    v6 = v5;
    swift_bridgeObjectRelease();
    return (uint64_t)v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC171E0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t result;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v1 = swift_bridgeObjectRetain();
  v2 = sub_21DC0DEB8(v1);
  swift_bridgeObjectRelease();
  v8 = v0;
  v3 = sub_21DC19B34(v2, (uint64_t (*)(void))sub_21DC19E7C, (uint64_t)&v7, &qword_2553A86B0);
  swift_bridgeObjectRelease();
  if (!(v3 >> 62))
  {
    result = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  result = sub_21DC71FCC();
  if (!result)
    goto LABEL_8;
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v5 = (id)MEMORY[0x22079D208](0, v3);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v3 + 32);
LABEL_6:
    v6 = v5;
    swift_bridgeObjectRelease();
    return (uint64_t)v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC172E0(void *a1, uint64_t a2, SEL *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  uint64_t v26;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, *a3);

  if (!v9)
    return 0;
  v10 = objc_msgSend(a1, sel_trpId);
  if (!v10)
    goto LABEL_5;
  v11 = v10;
  sub_21DC71CFC();

  v12 = sub_21DC715F4();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
  {
    sub_21DC19DF4((uint64_t)v8);
LABEL_5:
    sub_21DC17048();
    v15 = v14;
    goto LABEL_6;
  }
  v17 = sub_21DC715A0();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
  v20 = sub_21DC17048();
  v15 = v21;
  if (v19)
  {
    if (!v21)
    {
      v16 = 0;
      goto LABEL_20;
    }
    if (v17 == v20 && v21 == v19)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v23 = sub_21DC720A4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = 0;
      if ((v23 & 1) == 0)
        return v16;
    }
    goto LABEL_18;
  }
LABEL_6:
  if (!v15)
  {
LABEL_18:
    sub_21DC17048();
    if (v24)
    {
      v16 = 1;
      goto LABEL_20;
    }
    return 0;
  }
  v16 = 0;
LABEL_20:
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_21DC174AC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t result;
  id v4;
  id v5;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_21DC0DEB8(v0);
  swift_bridgeObjectRelease();
  v2 = sub_21DC199A8(v1);
  swift_bridgeObjectRelease();
  if (!(v2 >> 62))
  {
    result = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  result = sub_21DC71FCC();
  if (!result)
    goto LABEL_8;
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x22079D208](0, v2);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(v2 + 32);
LABEL_6:
    v5 = v4;
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC1758C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t result;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v1 = swift_bridgeObjectRetain();
  v2 = sub_21DC0DEB8(v1);
  swift_bridgeObjectRelease();
  v8 = v0;
  v3 = sub_21DC19B34(v2, (uint64_t (*)(void))sub_21DC19EE8, (uint64_t)&v7, &qword_2553A86C0);
  swift_bridgeObjectRelease();
  if (!(v3 >> 62))
  {
    result = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  result = sub_21DC71FCC();
  if (!result)
    goto LABEL_8;
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v5 = (id)MEMORY[0x22079D208](0, v3);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v3 + 32);
LABEL_6:
    v6 = v5;
    swift_bridgeObjectRelease();
    return (uint64_t)v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC1768C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v22;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(a1, sel_trpId);
  if (!v6)
    goto LABEL_4;
  v7 = v6;
  sub_21DC71CFC();

  v8 = sub_21DC715F4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) == 1)
  {
    sub_21DC19DF4((uint64_t)v5);
LABEL_4:
    sub_21DC17048();
    v11 = v10;
    goto LABEL_5;
  }
  v13 = sub_21DC715A0();
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v8);
  v16 = sub_21DC17048();
  v11 = v17;
  if (v15)
  {
    if (!v17)
    {
      v12 = 0;
      goto LABEL_19;
    }
    if (v13 == v16 && v17 == v15)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = sub_21DC720A4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = 0;
      if ((v19 & 1) == 0)
        return v12;
    }
    goto LABEL_17;
  }
LABEL_5:
  if (v11)
  {
    v12 = 0;
    goto LABEL_19;
  }
LABEL_17:
  sub_21DC17048();
  if (!v20)
    return 0;
  v12 = 1;
LABEL_19:
  swift_bridgeObjectRelease();
  return v12;
}

id sub_21DC17834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char *v52;
  id v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  id v63;
  unint64_t v64;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  v5 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v3, v6);
  v9 = (char *)&v66 - v8;
  MEMORY[0x24BDAC7A8](v7, v10);
  v69 = (uint64_t)&v66 - v11;
  v71 = v0;
  v12 = *(_QWORD *)(v0 + OBJC_IVAR___ISEventGraph_eventsInternal);
  v13 = swift_bridgeObjectRetain();
  v14 = sub_21DC0DEB8(v13);
  v75 = v12;
  swift_bridgeObjectRelease();
  v15 = sub_21DC19CA0(v14, &qword_2553A86A0);
  swift_bridgeObjectRelease();
  if (v15 < 0 || (v15 & 0x4000000000000000) != 0)
    goto LABEL_67;
  v16 = v15 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
LABEL_4:
  v78 = v16;
  sub_21DC1805C(&v78, sub_21DC18898);
  swift_bridgeObjectRelease();
  v17 = v78;
  if (v78 < 0 || (v78 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v18 = sub_21DC71FCC();
    swift_release();
    if (v18)
      goto LABEL_7;
  }
  else
  {
    v18 = *(_QWORD *)(v78 + 16);
    if (v18)
    {
LABEL_7:
      v67 = v5;
      v68 = v9;
      v72 = v18;
      v73 = v17 & 0xC000000000000001;
      v19 = 4;
      v70 = v17;
      do
      {
        if (v73)
          v20 = (id)MEMORY[0x22079D208](v19 - 4, v17);
        else
          v20 = *(id *)(v17 + 8 * v19);
        v21 = v20;
        v5 = (char *)(v19 - 3);
        if (__OFADD__(v19 - 4, 1))
        {
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          v64 = swift_bridgeObjectRetain();
          v16 = (uint64_t)sub_21DC09494(v64);
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v9 = (char *)sub_21DC13C88(0, &qword_2553A8488);
        v76 = v21;
        v22 = (void *)sub_21DC71750();
        if (v22)
        {
          v23 = v22;
          v24 = objc_msgSend(v22, sel_eventMetadata);
          if (v24)
          {
            v25 = v24;
            v26 = objc_msgSend(v24, sel_requestId);

            if (v26)
            {
              v27 = v69;
              sub_21DC71CFC();

              v28 = sub_21DC715F4();
              v29 = *(_QWORD *)(v28 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
              {
                sub_21DC19DF4(v69);

                v74 = 0;
                v77 = 0;
              }
              else
              {
                v30 = v69;
                v74 = sub_21DC715A0();
                v77 = v31;
                (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v28);

              }
              v17 = v70;
              v18 = v72;
              goto LABEL_23;
            }
          }

        }
        v74 = 0;
        v77 = 0;
LABEL_23:
        v32 = swift_bridgeObjectRetain();
        v33 = sub_21DC0DEB8(v32);
        swift_bridgeObjectRelease();
        v34 = sub_21DC19CA0(v33, &qword_2553A8690);
        swift_bridgeObjectRelease();
        if (v34 < 0 || (v34 & 0x4000000000000000) != 0)
        {
          v48 = swift_bridgeObjectRetain();
          v35 = (uint64_t)sub_21DC09494(v48);
          swift_bridgeObjectRelease();
        }
        else
        {
          v35 = v34 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
        }
        v78 = v35;
        sub_21DC1805C(&v78, sub_21DC180D8);
        v36 = v77;
        swift_bridgeObjectRelease();
        v37 = v78;
        if (v78 < 0 || (v78 & 0x4000000000000000) != 0)
        {
          swift_bridgeObjectRetain();
          v49 = sub_21DC71FCC();
          swift_release();
          if (!v49)
          {
LABEL_46:
            swift_release();
            if (!v36)
              goto LABEL_8;
            goto LABEL_47;
          }
        }
        else if (!*(_QWORD *)(v78 + 16))
        {
          goto LABEL_46;
        }
        if ((v37 & 0xC000000000000001) != 0)
        {
          v38 = (id)MEMORY[0x22079D208](0, v37);
        }
        else
        {
          if (!*(_QWORD *)(v37 + 16))
            goto LABEL_66;
          v38 = *(id *)(v37 + 32);
        }
        v39 = v38;
        swift_release();
        v40 = (void *)sub_21DC71750();
        if (v40)
        {
          v41 = v40;
          v42 = objc_msgSend(v40, sel_eventMetadata);
          v43 = v42;
          if (v42)
          {
            v44 = objc_msgSend(v42, sel_requestId);

            if (v44)
            {
              v45 = (uint64_t)v68;
              sub_21DC71CFC();

              v46 = sub_21DC715F4();
              v47 = *(_QWORD *)(v46 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46) == 1)
              {
                sub_21DC19DF4(v45);
              }
              else
              {
                sub_21DC715A0();
                (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
              }
              v17 = v70;
              v36 = v77;
            }
            else
            {
              v17 = v70;
            }
          }

          swift_bridgeObjectRelease();
        }
        else
        {

        }
        v18 = v72;
        if (!v36)
        {
LABEL_8:

          goto LABEL_9;
        }
LABEL_47:
        v50 = sub_21DC17F0C();
        if (!v50)
        {

LABEL_56:
          swift_bridgeObjectRelease();
          goto LABEL_9;
        }
        v51 = (void *)v50;
        v52 = (char *)sub_21DC71750();
        if (!v52)
        {

          goto LABEL_56;
        }
        v9 = v52;
        v53 = objc_msgSend(v52, sel_eventMetadata);
        if (!v53)
        {

          goto LABEL_56;
        }
        v54 = v53;
        v55 = objc_msgSend(v53, sel_requestId);

        if (v55)
        {
          v56 = (uint64_t)v67;
          sub_21DC71CFC();

          v57 = sub_21DC715F4();
          v58 = *(_QWORD *)(v57 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57) == 1)
          {
            sub_21DC19DF4(v56);

            swift_bridgeObjectRelease();
            v17 = v70;
            v18 = v72;
          }
          else
          {
            v59 = sub_21DC715A0();
            v61 = v60;
            (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v56, v57);

            if (v74 == v59 && v77 == v61)
            {
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v76;
            }
            v62 = sub_21DC720A4();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v17 = v70;
            v63 = v76;
            if ((v62 & 1) != 0)
            {
              swift_release();
              return v63;
            }

            v18 = v72;
          }
        }
        else
        {

          swift_bridgeObjectRelease();
          v17 = v70;
        }
LABEL_9:
        ++v19;
      }
      while (v5 != (char *)v18);
    }
  }
  swift_release();
  return 0;
}

uint64_t sub_21DC17F0C()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_21DC0DEB8(v0);
  swift_bridgeObjectRelease();
  v2 = sub_21DC19CA0(v1, &qword_2553A8690);
  swift_bridgeObjectRelease();
  if (v2 < 0 || (v2 & 0x4000000000000000) != 0)
  {
    v7 = swift_bridgeObjectRetain();
    v3 = (uint64_t)sub_21DC09494(v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v10 = v3;
  sub_21DC1805C(&v10, sub_21DC180D8);
  swift_bridgeObjectRelease();
  v4 = v10;
  if ((v10 & 0x8000000000000000) == 0 && (v10 & 0x4000000000000000) == 0)
  {
    if (*(_QWORD *)(v10 + 16))
      goto LABEL_7;
LABEL_13:
    swift_release();
    return 0;
  }
  swift_bridgeObjectRetain();
  v8 = sub_21DC71FCC();
  swift_release();
  if (!v8)
    goto LABEL_13;
LABEL_7:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v5 = (id)MEMORY[0x22079D208](0, v4);
    goto LABEL_10;
  }
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = *(id *)(v4 + 32);
LABEL_10:
    v6 = v5;
    swift_release();
    return (uint64_t)v6;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_21DC1805C(uint64_t *a1, void (*a2)(_QWORD *))
{
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  _QWORD v8[2];

  v4 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_21DC5F7B0();
  v6 = *(_QWORD *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v6;
  a2(v8);
  return sub_21DC71F0C();
}

void sub_21DC180D8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  int v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  char v48;
  void *v49;
  char *v50;
  unint64_t v51;
  unint64_t v52;
  char *v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  char v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  unint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;

  v2 = v1;
  v3 = a1;
  v4 = a1[1];
  v5 = sub_21DC72068();
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_140;
    if (v4)
      sub_21DC19070(0, v4, 1, v3);
    return;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_154;
  v112 = v5;
  v109 = v3;
  if (v4 < 2)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v122 = MEMORY[0x24BEE4AF8];
    v119 = (char *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_105:
      v120 = v2;
      if (v13 >= 2)
      {
        v102 = *v109;
        do
        {
          v103 = v13 - 2;
          if (v13 < 2)
            goto LABEL_135;
          if (!v102)
            goto LABEL_151;
          v104 = v10;
          v105 = *(_QWORD *)&v10[16 * v103 + 32];
          v106 = *(_QWORD *)&v10[16 * v13 + 24];
          sub_21DC192B0((id *)(v102 + 8 * v105), (id *)(v102 + 8 * *(_QWORD *)&v10[16 * v13 + 16]), v102 + 8 * v106, v119);
          if (v120)
            break;
          if (v106 < v105)
            goto LABEL_136;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v104 = sub_21DC5B7D4((uint64_t)v104);
          if (v103 >= *((_QWORD *)v104 + 2))
            goto LABEL_137;
          v107 = &v104[16 * v103 + 32];
          *(_QWORD *)v107 = v105;
          *((_QWORD *)v107 + 1) = v106;
          v108 = *((_QWORD *)v104 + 2);
          if (v13 > v108)
            goto LABEL_138;
          memmove(&v104[16 * v13 + 16], &v104[16 * v13 + 32], 16 * (v108 - v13));
          v10 = v104;
          *((_QWORD *)v104 + 2) = v108 - 1;
          v13 = v108 - 1;
        }
        while (v108 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v122 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_21DC71B94();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v7 = v3;
    v8 = v6 >> 1;
    sub_21DC71774();
    v9 = sub_21DC71BB8();
    *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    v3 = v7;
    v119 = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    v122 = v9;
  }
  v11 = 0;
  v12 = *v3;
  v110 = *v3 - 8;
  v111 = *v3 + 16;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v118 = v4;
  v121 = *v3;
  while (1)
  {
    v14 = v11++;
    v117 = v14;
    if (v11 < v4)
    {
      v113 = v10;
      v15 = *(void **)(v12 + 8 * v11);
      v16 = *(void **)(v12 + 8 * v14);
      v17 = v15;
      v18 = v16;
      v19 = sub_21DC71714();
      if (!v19)
        goto LABEL_152;
      v20 = (void *)v19;
      v21 = sub_21DC71714();
      if (!v21)
        goto LABEL_153;
      v22 = (void *)v21;
      sub_21DC717C8();
      v115 = sub_21DC717B0();

      v11 = v14 + 2;
      if (v14 + 2 < v4)
      {
        v23 = (id *)(v111 + 8 * v14);
        do
        {
          v24 = *(v23 - 1);
          v25 = *v23;
          v26 = v24;
          v27 = sub_21DC71714();
          if (!v27)
            goto LABEL_148;
          v28 = (void *)v27;
          v29 = sub_21DC71714();
          if (!v29)
            goto LABEL_149;
          v30 = (void *)v29;
          v31 = sub_21DC717B0();

          if (((v115 ^ v31) & 1) != 0)
            goto LABEL_25;
          ++v11;
          ++v23;
        }
        while (v4 != v11);
        v11 = v4;
LABEL_25:
        v14 = v117;
      }
      v10 = v113;
      v12 = v121;
      if ((v115 & 1) != 0)
      {
        if (v11 < v14)
          goto LABEL_141;
        if (v14 < v11)
        {
          v32 = (uint64_t *)(v110 + 8 * v11);
          v33 = v11;
          v34 = v14;
          v35 = (uint64_t *)(v121 + 8 * v14);
          do
          {
            if (v34 != --v33)
            {
              if (!v121)
                goto LABEL_150;
              v36 = *v35;
              *v35 = *v32;
              *v32 = v36;
            }
            ++v34;
            --v32;
            ++v35;
          }
          while (v34 < v33);
        }
      }
    }
    if (v11 < v4)
    {
      if (__OFSUB__(v11, v14))
        goto LABEL_139;
      if (v11 - v14 < v112)
        break;
    }
LABEL_55:
    if (v11 < v14)
      goto LABEL_134;
    v50 = v10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v10 = v50;
    else
      v10 = sub_21DC5B27C(0, *((_QWORD *)v50 + 2) + 1, 1, v50);
    v52 = *((_QWORD *)v10 + 2);
    v51 = *((_QWORD *)v10 + 3);
    v13 = v52 + 1;
    v12 = v121;
    if (v52 >= v51 >> 1)
    {
      v101 = sub_21DC5B27C((char *)(v51 > 1), v52 + 1, 1, v10);
      v12 = v121;
      v10 = v101;
    }
    *((_QWORD *)v10 + 2) = v13;
    v53 = v10 + 32;
    v54 = &v10[16 * v52 + 32];
    *(_QWORD *)v54 = v117;
    *((_QWORD *)v54 + 1) = v11;
    if (v52)
    {
      while (1)
      {
        v55 = v13 - 1;
        if (v13 >= 4)
        {
          v60 = &v53[16 * v13];
          v61 = *((_QWORD *)v60 - 8);
          v62 = *((_QWORD *)v60 - 7);
          v66 = __OFSUB__(v62, v61);
          v63 = v62 - v61;
          if (v66)
            goto LABEL_123;
          v65 = *((_QWORD *)v60 - 6);
          v64 = *((_QWORD *)v60 - 5);
          v66 = __OFSUB__(v64, v65);
          v58 = v64 - v65;
          v59 = v66;
          if (v66)
            goto LABEL_124;
          v67 = v13 - 2;
          v68 = &v53[16 * v13 - 32];
          v70 = *(_QWORD *)v68;
          v69 = *((_QWORD *)v68 + 1);
          v66 = __OFSUB__(v69, v70);
          v71 = v69 - v70;
          if (v66)
            goto LABEL_126;
          v66 = __OFADD__(v58, v71);
          v72 = v58 + v71;
          if (v66)
            goto LABEL_129;
          if (v72 >= v63)
          {
            v90 = &v53[16 * v55];
            v92 = *(_QWORD *)v90;
            v91 = *((_QWORD *)v90 + 1);
            v66 = __OFSUB__(v91, v92);
            v93 = v91 - v92;
            if (v66)
              goto LABEL_133;
            v83 = v58 < v93;
            goto LABEL_92;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v84 = *((_QWORD *)v10 + 4);
            v85 = *((_QWORD *)v10 + 5);
            v66 = __OFSUB__(v85, v84);
            v77 = v85 - v84;
            v78 = v66;
            goto LABEL_86;
          }
          v57 = *((_QWORD *)v10 + 4);
          v56 = *((_QWORD *)v10 + 5);
          v66 = __OFSUB__(v56, v57);
          v58 = v56 - v57;
          v59 = v66;
        }
        if ((v59 & 1) != 0)
          goto LABEL_125;
        v67 = v13 - 2;
        v73 = &v53[16 * v13 - 32];
        v75 = *(_QWORD *)v73;
        v74 = *((_QWORD *)v73 + 1);
        v76 = __OFSUB__(v74, v75);
        v77 = v74 - v75;
        v78 = v76;
        if (v76)
          goto LABEL_128;
        v79 = &v53[16 * v55];
        v81 = *(_QWORD *)v79;
        v80 = *((_QWORD *)v79 + 1);
        v66 = __OFSUB__(v80, v81);
        v82 = v80 - v81;
        if (v66)
          goto LABEL_131;
        if (__OFADD__(v77, v82))
          goto LABEL_132;
        if (v77 + v82 >= v58)
        {
          v83 = v58 < v82;
LABEL_92:
          if (v83)
            v55 = v67;
          goto LABEL_94;
        }
LABEL_86:
        if ((v78 & 1) != 0)
          goto LABEL_127;
        v86 = &v53[16 * v55];
        v88 = *(_QWORD *)v86;
        v87 = *((_QWORD *)v86 + 1);
        v66 = __OFSUB__(v87, v88);
        v89 = v87 - v88;
        if (v66)
          goto LABEL_130;
        if (v89 < v77)
          goto LABEL_14;
LABEL_94:
        v94 = v55 - 1;
        if (v55 - 1 >= v13)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!v12)
          goto LABEL_147;
        v95 = v10;
        v96 = &v53[16 * v94];
        v97 = *(_QWORD *)v96;
        v98 = &v53[16 * v55];
        v99 = *((_QWORD *)v98 + 1);
        sub_21DC192B0((id *)(v12 + 8 * *(_QWORD *)v96), (id *)(v12 + 8 * *(_QWORD *)v98), v12 + 8 * v99, v119);
        if (v1)
          goto LABEL_116;
        if (v99 < v97)
          goto LABEL_120;
        if (v55 > *((_QWORD *)v95 + 2))
          goto LABEL_121;
        *(_QWORD *)v96 = v97;
        *(_QWORD *)&v53[16 * v94 + 8] = v99;
        v100 = *((_QWORD *)v95 + 2);
        if (v55 >= v100)
          goto LABEL_122;
        v13 = v100 - 1;
        memmove(&v53[16 * v55], v98 + 16, 16 * (v100 - 1 - v55));
        v10 = v95;
        *((_QWORD *)v95 + 2) = v100 - 1;
        v4 = v118;
        v12 = v121;
        if (v100 <= 2)
          goto LABEL_14;
      }
    }
    v13 = 1;
LABEL_14:
    if (v11 >= v4)
    {
      v2 = v1;
      goto LABEL_105;
    }
  }
  if (__OFADD__(v14, v112))
    goto LABEL_142;
  if (v14 + v112 >= v4)
    v37 = v4;
  else
    v37 = v14 + v112;
  if (v37 >= v14)
  {
    if (v11 != v37)
    {
      v114 = v10;
      v116 = v37;
      v38 = v110 + 8 * v11;
      do
      {
        v39 = *(void **)(v12 + 8 * v11);
        v40 = v38;
        while (1)
        {
          v41 = *(void **)v40;
          v42 = v39;
          v43 = v41;
          v44 = sub_21DC71714();
          if (!v44)
            goto LABEL_144;
          v45 = (void *)v44;
          v46 = sub_21DC71714();
          if (!v46)
            goto LABEL_145;
          v47 = (void *)v46;
          sub_21DC717C8();
          v48 = sub_21DC717B0();

          if ((v48 & 1) == 0)
            break;
          v12 = v121;
          if (!v121)
            goto LABEL_146;
          v49 = *(void **)v40;
          v39 = *(void **)(v40 + 8);
          *(_QWORD *)v40 = v39;
          *(_QWORD *)(v40 + 8) = v49;
          v40 -= 8;
          if (v11 == ++v14)
            goto LABEL_46;
        }
        v12 = v121;
LABEL_46:
        ++v11;
        v38 += 8;
        v14 = v117;
      }
      while (v11 != v116);
      v11 = v116;
      v10 = v114;
      v4 = v118;
    }
    goto LABEL_55;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  sub_21DC71FA8();
  __break(1u);
}

void sub_21DC18898(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  int v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  char v48;
  void *v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  char v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  unint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;

  v3 = a1[1];
  v4 = sub_21DC72068();
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_138;
    if (v3)
      sub_21DC19184(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_152;
  v6 = v4;
  v114 = v3;
  v107 = a1;
  if (v3 < 2)
  {
    v9 = (char *)MEMORY[0x24BEE4AF8];
    v118 = MEMORY[0x24BEE4AF8];
    v116 = (char *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_104:
      if (v13 >= 2)
      {
        v101 = *v107;
        do
        {
          v102 = v13 - 2;
          if (v13 < 2)
            goto LABEL_133;
          if (!v101)
            goto LABEL_149;
          v103 = *(_QWORD *)&v9[16 * v102 + 32];
          v104 = *(_QWORD *)&v9[16 * v13 + 24];
          sub_21DC1961C((id *)(v101 + 8 * v103), (id *)(v101 + 8 * *(_QWORD *)&v9[16 * v13 + 16]), v101 + 8 * v104, v116);
          if (v1)
            break;
          if (v104 < v103)
            goto LABEL_134;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_21DC5B7D4((uint64_t)v9);
          if (v102 >= *((_QWORD *)v9 + 2))
            goto LABEL_135;
          v105 = &v9[16 * v102 + 32];
          *(_QWORD *)v105 = v103;
          *((_QWORD *)v105 + 1) = v104;
          v106 = *((_QWORD *)v9 + 2);
          if (v13 > v106)
            goto LABEL_136;
          memmove(&v9[16 * v13 + 16], &v9[16 * v13 + 32], 16 * (v106 - v13));
          *((_QWORD *)v9 + 2) = v106 - 1;
          v13 = v106 - 1;
        }
        while (v106 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v118 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_21DC71B94();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v7 = v5 >> 1;
    sub_21DC71774();
    v8 = sub_21DC71BB8();
    *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    v116 = (char *)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    v118 = v8;
  }
  v110 = v6;
  v10 = 0;
  v11 = *a1;
  v108 = *a1 - 8;
  v109 = *a1 + 16;
  v9 = (char *)MEMORY[0x24BEE4AF8];
  v12 = v114;
  v117 = *a1;
  while (1)
  {
    v14 = v10++;
    v113 = v9;
    v115 = v14;
    if (v10 < v12)
    {
      v15 = *(void **)(v11 + 8 * v14);
      v16 = *(id *)(v11 + 8 * v10);
      v17 = v15;
      v18 = sub_21DC71714();
      if (!v18)
        goto LABEL_150;
      v19 = (void *)v18;
      v20 = sub_21DC71714();
      if (!v20)
        goto LABEL_151;
      v21 = (void *)v20;
      sub_21DC717C8();
      sub_21DC19E34();
      v111 = sub_21DC71A5C();

      v12 = v114;
      v10 = v115 + 2;
      if (v115 + 2 < v114)
      {
        v22 = (id *)(v109 + 8 * v115);
        while (1)
        {
          v23 = *(v22 - 1);
          v24 = *v22;
          v25 = v23;
          v26 = sub_21DC71714();
          if (!v26)
            goto LABEL_146;
          v27 = (void *)v26;
          v28 = sub_21DC71714();
          if (!v28)
            goto LABEL_147;
          v29 = (void *)v28;
          v30 = sub_21DC71A5C();

          if (((v111 ^ v30) & 1) != 0)
            break;
          ++v10;
          ++v22;
          v9 = v113;
          v12 = v114;
          if (v114 == v10)
          {
            v10 = v114;
            goto LABEL_26;
          }
        }
        v9 = v113;
        v12 = v114;
      }
LABEL_26:
      v11 = v117;
      v14 = v115;
      if ((v111 & 1) != 0)
      {
        if (v10 < v115)
          goto LABEL_139;
        if (v115 < v10)
        {
          v31 = (uint64_t *)(v108 + 8 * v10);
          v32 = v10;
          v33 = v115;
          v34 = (uint64_t *)(v117 + 8 * v115);
          do
          {
            if (v33 != --v32)
            {
              if (!v117)
                goto LABEL_148;
              v35 = *v34;
              *v34 = *v31;
              *v31 = v35;
            }
            ++v33;
            --v31;
            ++v34;
          }
          while (v33 < v32);
        }
      }
    }
    if (v10 < v12)
    {
      if (__OFSUB__(v10, v14))
        goto LABEL_137;
      if (v10 - v14 < v110)
        break;
    }
LABEL_55:
    if (v10 < v14)
      goto LABEL_132;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_21DC5B27C(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v51 = *((_QWORD *)v9 + 2);
    v50 = *((_QWORD *)v9 + 3);
    v13 = v51 + 1;
    v11 = v117;
    if (v51 >= v50 >> 1)
    {
      v100 = sub_21DC5B27C((char *)(v50 > 1), v51 + 1, 1, v9);
      v11 = v117;
      v9 = v100;
    }
    *((_QWORD *)v9 + 2) = v13;
    v52 = v9 + 32;
    v53 = &v9[16 * v51 + 32];
    *(_QWORD *)v53 = v14;
    *((_QWORD *)v53 + 1) = v10;
    if (v51)
    {
      while (1)
      {
        v54 = v13 - 1;
        if (v13 >= 4)
        {
          v59 = &v52[16 * v13];
          v60 = *((_QWORD *)v59 - 8);
          v61 = *((_QWORD *)v59 - 7);
          v65 = __OFSUB__(v61, v60);
          v62 = v61 - v60;
          if (v65)
            goto LABEL_121;
          v64 = *((_QWORD *)v59 - 6);
          v63 = *((_QWORD *)v59 - 5);
          v65 = __OFSUB__(v63, v64);
          v57 = v63 - v64;
          v58 = v65;
          if (v65)
            goto LABEL_122;
          v66 = v13 - 2;
          v67 = &v52[16 * v13 - 32];
          v69 = *(_QWORD *)v67;
          v68 = *((_QWORD *)v67 + 1);
          v65 = __OFSUB__(v68, v69);
          v70 = v68 - v69;
          if (v65)
            goto LABEL_124;
          v65 = __OFADD__(v57, v70);
          v71 = v57 + v70;
          if (v65)
            goto LABEL_127;
          if (v71 >= v62)
          {
            v89 = &v52[16 * v54];
            v91 = *(_QWORD *)v89;
            v90 = *((_QWORD *)v89 + 1);
            v65 = __OFSUB__(v90, v91);
            v92 = v90 - v91;
            if (v65)
              goto LABEL_131;
            v82 = v57 < v92;
            goto LABEL_92;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v83 = *((_QWORD *)v9 + 4);
            v84 = *((_QWORD *)v9 + 5);
            v65 = __OFSUB__(v84, v83);
            v76 = v84 - v83;
            v77 = v65;
            goto LABEL_86;
          }
          v56 = *((_QWORD *)v9 + 4);
          v55 = *((_QWORD *)v9 + 5);
          v65 = __OFSUB__(v55, v56);
          v57 = v55 - v56;
          v58 = v65;
        }
        if ((v58 & 1) != 0)
          goto LABEL_123;
        v66 = v13 - 2;
        v72 = &v52[16 * v13 - 32];
        v74 = *(_QWORD *)v72;
        v73 = *((_QWORD *)v72 + 1);
        v75 = __OFSUB__(v73, v74);
        v76 = v73 - v74;
        v77 = v75;
        if (v75)
          goto LABEL_126;
        v78 = &v52[16 * v54];
        v80 = *(_QWORD *)v78;
        v79 = *((_QWORD *)v78 + 1);
        v65 = __OFSUB__(v79, v80);
        v81 = v79 - v80;
        if (v65)
          goto LABEL_129;
        if (__OFADD__(v76, v81))
          goto LABEL_130;
        if (v76 + v81 >= v57)
        {
          v82 = v57 < v81;
LABEL_92:
          if (v82)
            v54 = v66;
          goto LABEL_94;
        }
LABEL_86:
        if ((v77 & 1) != 0)
          goto LABEL_125;
        v85 = &v52[16 * v54];
        v87 = *(_QWORD *)v85;
        v86 = *((_QWORD *)v85 + 1);
        v65 = __OFSUB__(v86, v87);
        v88 = v86 - v87;
        if (v65)
          goto LABEL_128;
        if (v88 < v76)
          goto LABEL_14;
LABEL_94:
        v93 = v54 - 1;
        if (v54 - 1 >= v13)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        if (!v11)
          goto LABEL_145;
        v94 = v9;
        v95 = &v52[16 * v93];
        v96 = *(_QWORD *)v95;
        v97 = &v52[16 * v54];
        v98 = *((_QWORD *)v97 + 1);
        sub_21DC1961C((id *)(v11 + 8 * *(_QWORD *)v95), (id *)(v11 + 8 * *(_QWORD *)v97), v11 + 8 * v98, v116);
        if (v1)
          goto LABEL_115;
        if (v98 < v96)
          goto LABEL_118;
        if (v54 > *((_QWORD *)v94 + 2))
          goto LABEL_119;
        *(_QWORD *)v95 = v96;
        *(_QWORD *)&v52[16 * v93 + 8] = v98;
        v99 = *((_QWORD *)v94 + 2);
        if (v54 >= v99)
          goto LABEL_120;
        v9 = v94;
        v13 = v99 - 1;
        memmove(&v52[16 * v54], v97 + 16, 16 * (v99 - 1 - v54));
        *((_QWORD *)v94 + 2) = v99 - 1;
        v11 = v117;
        if (v99 <= 2)
          goto LABEL_14;
      }
    }
    v13 = 1;
LABEL_14:
    v12 = v114;
    if (v10 >= v114)
      goto LABEL_104;
  }
  if (__OFADD__(v14, v110))
    goto LABEL_140;
  if (v14 + v110 >= v12)
    v36 = v12;
  else
    v36 = v14 + v110;
  if (v36 >= v14)
  {
    if (v10 != v36)
    {
      v37 = v108 + 8 * v10;
      v112 = v36;
      do
      {
        v38 = *(void **)(v11 + 8 * v10);
        v39 = v14;
        v40 = v37;
        while (1)
        {
          v41 = *(void **)v40;
          v42 = v38;
          v43 = v41;
          v44 = sub_21DC71714();
          if (!v44)
            goto LABEL_142;
          v45 = (void *)v44;
          v46 = sub_21DC71714();
          if (!v46)
            goto LABEL_143;
          v47 = (void *)v46;
          sub_21DC717C8();
          sub_21DC19E34();
          v48 = sub_21DC71A5C();

          if ((v48 & 1) == 0)
            break;
          v11 = v117;
          if (!v117)
            goto LABEL_144;
          v49 = *(void **)v40;
          v38 = *(void **)(v40 + 8);
          *(_QWORD *)v40 = v38;
          *(_QWORD *)(v40 + 8) = v49;
          v40 -= 8;
          if (v10 == ++v39)
            goto LABEL_46;
        }
        v11 = v117;
LABEL_46:
        ++v10;
        v37 += 8;
        v14 = v115;
      }
      while (v10 != v112);
      v10 = v112;
      v9 = v113;
    }
    goto LABEL_55;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  sub_21DC71FA8();
  __break(1u);
}

void sub_21DC19070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  char v16;
  void *v17;
  uint64_t v20;

  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    v7 = *(void **)(v5 + 8 * v4);
    v8 = a1;
    v20 = v6;
    while (1)
    {
      v9 = *(void **)v6;
      v10 = v7;
      v11 = v9;
      v12 = sub_21DC71714();
      if (!v12)
        break;
      v13 = (void *)v12;
      v14 = sub_21DC71714();
      if (!v14)
        goto LABEL_13;
      v15 = (void *)v14;
      sub_21DC717C8();
      v16 = sub_21DC717B0();

      if ((v16 & 1) != 0)
      {
        if (!v5)
          goto LABEL_14;
        v17 = *(void **)v6;
        v7 = *(void **)(v6 + 8);
        *(_QWORD *)v6 = v7;
        *(_QWORD *)(v6 + 8) = v17;
        v6 -= 8;
        if (v4 != ++v8)
          continue;
      }
      ++v4;
      v6 = v20 + 8;
      if (v4 == a2)
        return;
      goto LABEL_5;
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
}

void sub_21DC19184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  char v16;
  void *v17;
  uint64_t v20;

  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    v7 = *(void **)(v5 + 8 * v4);
    v8 = a1;
    v20 = v6;
    while (1)
    {
      v9 = *(void **)v6;
      v10 = v7;
      v11 = v9;
      v12 = sub_21DC71714();
      if (!v12)
        break;
      v13 = (void *)v12;
      v14 = sub_21DC71714();
      if (!v14)
        goto LABEL_13;
      v15 = (void *)v14;
      sub_21DC717C8();
      sub_21DC19E34();
      v16 = sub_21DC71A5C();

      if ((v16 & 1) != 0)
      {
        if (!v5)
          goto LABEL_14;
        v17 = *(void **)v6;
        v7 = *(void **)(v6 + 8);
        *(_QWORD *)v6 = v7;
        *(_QWORD *)(v6 + 8) = v17;
        v6 -= 8;
        if (v4 != ++v8)
          continue;
      }
      ++v4;
      v6 = v20 + 8;
      if (v4 == a2)
        return;
      goto LABEL_5;
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
}

uint64_t sub_21DC192B0(id *a1, id *__src, unint64_t a3, char *__dst)
{
  id *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void **v13;
  void **v14;
  id *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  char v23;
  id *v24;
  char *v25;
  id *v26;
  id *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  char v37;
  uint64_t result;
  char *v39;
  id *v41;
  char *v42;
  id *v44;
  char *v45;
  void **v46;
  id *v47;

  v5 = __src;
  v6 = (char *)__src - (char *)a1;
  v7 = (char *)__src - (char *)a1 + 7;
  if ((char *)__src - (char *)a1 >= 0)
    v7 = (char *)__src - (char *)a1;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)__src;
  v10 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v10 = a3 - (_QWORD)__src;
  v11 = v10 >> 3;
  v47 = a1;
  v46 = (void **)__dst;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (__dst != (char *)__src || &__src[v11] <= (id *)__dst)
        memmove(__dst, __src, 8 * v11);
      v39 = __dst;
      v25 = &__dst[8 * v11];
      v45 = v25;
      v47 = v5;
      if (a1 < v5 && v9 >= 8)
      {
        v26 = (id *)(a3 - 8);
        v27 = v5;
        while (1)
        {
          v42 = v25;
          v44 = v5;
          v29 = (void *)*((_QWORD *)v25 - 1);
          v25 -= 8;
          v28 = v29;
          v30 = *--v27;
          v31 = v28;
          v32 = v30;
          v33 = sub_21DC71714();
          if (!v33)
            break;
          v34 = (void *)v33;
          v35 = sub_21DC71714();
          if (!v35)
            goto LABEL_48;
          v36 = (void *)v35;
          v41 = v26 + 1;
          sub_21DC717C8();
          v37 = sub_21DC717B0();

          if ((v37 & 1) != 0)
          {
            v25 = v42;
            if (v41 != v44 || v26 >= v44)
              *v26 = *v27;
            v47 = v27;
          }
          else
          {
            v45 = v25;
            v27 = v44;
            if (v41 < (id *)v42 || v26 >= (id *)v42 || v41 != (id *)v42)
              *v26 = *(id *)v25;
          }
          if (v27 > a1)
          {
            --v26;
            v5 = v27;
            if (v25 > v39)
              continue;
          }
          goto LABEL_46;
        }
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
LABEL_46:
      sub_21DC5B374(&v47, &v46, &v45);
      return 1;
    }
  }
  else if (v6 >= -7)
  {
    v12 = a1;
    if (__dst != (char *)a1 || &a1[v8] <= (id *)__dst)
      memmove(__dst, a1, 8 * v8);
    v13 = (void **)&__dst[8 * v8];
    v45 = (char *)v13;
    if ((unint64_t)v5 < a3 && v6 >= 8)
    {
      v14 = (void **)__dst;
      while (1)
      {
        v15 = v5;
        v16 = *v14;
        v17 = *v5;
        v18 = v16;
        v19 = sub_21DC71714();
        if (!v19)
          break;
        v20 = (void *)v19;
        v21 = sub_21DC71714();
        if (!v21)
          goto LABEL_50;
        v22 = (void *)v21;
        sub_21DC717C8();
        v23 = sub_21DC717B0();

        if ((v23 & 1) != 0)
        {
          v24 = v15 + 1;
          if (v12 < v15 || v12 >= v24 || v12 != v15)
            *v12 = *v15;
        }
        else
        {
          if (v12 != v14)
            *v12 = *v14;
          v46 = ++v14;
          v24 = v15;
        }
        ++v12;
        if (v14 < v13)
        {
          v5 = v24;
          if ((unint64_t)v24 < a3)
            continue;
        }
        v47 = v12;
        goto LABEL_46;
      }
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    goto LABEL_46;
  }
LABEL_51:
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC1961C(id *a1, id *__src, unint64_t a3, char *__dst)
{
  id *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void **v13;
  void **v14;
  id *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  char v23;
  id *v24;
  char *v25;
  id *v26;
  id *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  char v37;
  uint64_t result;
  char *v39;
  id *v41;
  char *v42;
  id *v44;
  char *v45;
  void **v46;
  id *v47;

  v5 = __src;
  v6 = (char *)__src - (char *)a1;
  v7 = (char *)__src - (char *)a1 + 7;
  if ((char *)__src - (char *)a1 >= 0)
    v7 = (char *)__src - (char *)a1;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)__src;
  v10 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v10 = a3 - (_QWORD)__src;
  v11 = v10 >> 3;
  v47 = a1;
  v46 = (void **)__dst;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (__dst != (char *)__src || &__src[v11] <= (id *)__dst)
        memmove(__dst, __src, 8 * v11);
      v39 = __dst;
      v25 = &__dst[8 * v11];
      v45 = v25;
      v47 = v5;
      if (a1 < v5 && v9 >= 8)
      {
        v26 = (id *)(a3 - 8);
        v27 = v5;
        while (1)
        {
          v42 = v25;
          v44 = v5;
          v29 = (void *)*((_QWORD *)v25 - 1);
          v25 -= 8;
          v28 = v29;
          v30 = *--v27;
          v31 = v28;
          v32 = v30;
          v33 = sub_21DC71714();
          if (!v33)
            break;
          v34 = (void *)v33;
          v35 = sub_21DC71714();
          if (!v35)
            goto LABEL_48;
          v36 = (void *)v35;
          v41 = v26 + 1;
          sub_21DC717C8();
          sub_21DC19E34();
          v37 = sub_21DC71A5C();

          if ((v37 & 1) != 0)
          {
            v25 = v42;
            if (v41 != v44 || v26 >= v44)
              *v26 = *v27;
            v47 = v27;
          }
          else
          {
            v45 = v25;
            v27 = v44;
            if (v41 < (id *)v42 || v26 >= (id *)v42 || v41 != (id *)v42)
              *v26 = *(id *)v25;
          }
          if (v27 > a1)
          {
            --v26;
            v5 = v27;
            if (v25 > v39)
              continue;
          }
          goto LABEL_46;
        }
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
LABEL_46:
      sub_21DC5B374(&v47, &v46, &v45);
      return 1;
    }
  }
  else if (v6 >= -7)
  {
    v12 = a1;
    if (__dst != (char *)a1 || &a1[v8] <= (id *)__dst)
      memmove(__dst, a1, 8 * v8);
    v13 = (void **)&__dst[8 * v8];
    v45 = (char *)v13;
    if ((unint64_t)v5 < a3 && v6 >= 8)
    {
      v14 = (void **)__dst;
      while (1)
      {
        v15 = v5;
        v16 = *v14;
        v17 = *v5;
        v18 = v16;
        v19 = sub_21DC71714();
        if (!v19)
          break;
        v20 = (void *)v19;
        v21 = sub_21DC71714();
        if (!v21)
          goto LABEL_50;
        v22 = (void *)v21;
        sub_21DC717C8();
        sub_21DC19E34();
        v23 = sub_21DC71A5C();

        if ((v23 & 1) != 0)
        {
          v24 = v15 + 1;
          if (v12 < v15 || v12 >= v24 || v12 != v15)
            *v12 = *v15;
        }
        else
        {
          if (v12 != v14)
            *v12 = *v14;
          v46 = ++v14;
          v24 = v15;
        }
        ++v12;
        if (v14 < v13)
        {
          v5 = v24;
          if ((unint64_t)v24 < a3)
            continue;
        }
        v47 = v12;
        goto LABEL_46;
      }
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    goto LABEL_46;
  }
LABEL_51:
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC199A8(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v12;

  v12 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_18;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v4 = (id)MEMORY[0x22079D208](v3, a1);
LABEL_9:
        v5 = v4;
        v6 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_17;
        sub_21DC13C88(0, &qword_2553A86B8);
        v7 = (void *)sub_21DC71750();
        if (v7)
        {
          v8 = v7;
          v9 = objc_msgSend(v7, sel_startedOrChanged);
          if (v9)
          {
            v10 = v9;

            sub_21DC71F00();
            sub_21DC71F30();
            sub_21DC71F3C();
            sub_21DC71F0C();
          }
          else
          {

          }
        }
        else
        {

        }
        ++v3;
        if (v6 == v2)
          return v12;
      }
      if (v3 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      v2 = sub_21DC71FCC();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_21DC19B34(unint64_t a1, uint64_t (*a2)(void), uint64_t a3, unint64_t *a4)
{
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  char v12;
  uint64_t v16;

  v16 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_17;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      v6 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v7 = (id)MEMORY[0x22079D208](v6, a1);
LABEL_9:
        v8 = v7;
        v9 = v6 + 1;
        if (__OFADD__(v6, 1))
          goto LABEL_16;
        sub_21DC13C88(0, a4);
        v10 = sub_21DC71750();
        if (v10 && (v11 = (void *)v10, v12 = a2(), v11, (v12 & 1) != 0))
        {
          sub_21DC71F00();
          sub_21DC71F30();
          sub_21DC71F3C();
          sub_21DC71F0C();
        }
        else
        {

        }
        ++v6;
        if (v9 == v5)
          return v16;
      }
      if (v6 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      v5 = sub_21DC71FCC();
      if (!v5)
        return MEMORY[0x24BEE4AF8];
    }
    v7 = *(id *)(a1 + 8 * v6 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_21DC19CA0(unint64_t a1, unint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  void *v8;
  uint64_t v11;

  v11 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_16;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v5 = (id)MEMORY[0x22079D208](v4, a1);
LABEL_9:
        v6 = v5;
        v7 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_15;
        sub_21DC13C88(0, a2);
        v8 = (void *)sub_21DC71750();
        if (v8)
        {

          sub_21DC71F00();
          sub_21DC71F30();
          sub_21DC71F3C();
          sub_21DC71F0C();
        }
        else
        {

        }
        ++v4;
        if (v7 == v3)
          return v11;
      }
      if (v4 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      v3 = sub_21DC71FCC();
      if (!v3)
        return MEMORY[0x24BEE4AF8];
    }
    v5 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_21DC19DF4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_21DC19E34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2553A8698;
  if (!qword_2553A8698)
  {
    v1 = sub_21DC717C8();
    result = MEMORY[0x22079D964](MEMORY[0x24BE94838], v1);
    atomic_store(result, (unint64_t *)&qword_2553A8698);
  }
  return result;
}

uint64_t sub_21DC19E7C(void *a1)
{
  uint64_t v1;

  return sub_21DC172E0(a1, *(_QWORD *)(v1 + 16), (SEL *)&selRef_failed) & 1;
}

uint64_t sub_21DC19EA0(void *a1)
{
  uint64_t v1;

  return sub_21DC172E0(a1, *(_QWORD *)(v1 + 16), (SEL *)&selRef_ended) & 1;
}

uint64_t sub_21DC19EC4(void *a1)
{
  uint64_t v1;

  return sub_21DC172E0(a1, *(_QWORD *)(v1 + 16), (SEL *)&selRef_startedOrChanged) & 1;
}

uint64_t sub_21DC19EE8(void *a1)
{
  return sub_21DC1768C(a1);
}

Swift::String __swiftcall IntelligenceFlowTelemetry.description()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  void *v49;
  Swift::String result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A86C8);
  v2 = MEMORY[0x24BDAC7A8](v0, v1);
  v51 = (uint64_t)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v51 - v5;
  v7 = sub_21DC71960();
  v52 = *(_QWORD *)(v7 - 8);
  v53 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v55 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A86D0);
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v56 = (uint64_t)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v51 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A86D8);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A81A8);
  v23 = MEMORY[0x24BDAC7A8](v21, v22);
  v25 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23, v26);
  v28 = (char *)&v51 - v27;
  sub_21DC7184C();
  v59 = 0;
  v60 = 0xE000000000000000;
  sub_21DC07CC0((uint64_t)v28, (uint64_t)v25, (uint64_t *)&unk_2553A81A8);
  v29 = sub_21DC71588();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v25, 1, v29);
  v54 = v6;
  if (v31 == 1)
  {
    sub_21DC07C84((uint64_t)v25, (uint64_t *)&unk_2553A81A8);
  }
  else
  {
    sub_21DC71534();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v29);
  }
  sub_21DC71B10();
  swift_bridgeObjectRelease();
  v57 = 32;
  v58 = 0xE100000000000000;
  IntelligenceFlowTelemetry.contextId()();
  sub_21DC71B10();
  swift_bridgeObjectRelease();
  sub_21DC71B10();
  swift_bridgeObjectRelease();
  v57 = 32;
  v58 = 0xE100000000000000;
  sub_21DC71858();
  v32 = sub_21DC71840();
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v20, 1, v32) == 1)
  {
    sub_21DC07C84((uint64_t)v20, &qword_2553A86D8);
  }
  else
  {
    sub_21DC71834();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v32);
  }
  v34 = (uint64_t)v16;
  sub_21DC71B10();
  swift_bridgeObjectRelease();
  sub_21DC71B10();
  swift_bridgeObjectRelease();
  sub_21DC71894();
  v35 = sub_21DC71888();
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v16, 1, v35) != 1)
  {
    v37 = v56;
    sub_21DC07CC0((uint64_t)v16, v56, &qword_2553A86D0);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v36 + 88))(v37, v35) == *MEMORY[0x24BE58768])
    {
      (*(void (**)(uint64_t, uint64_t))(v36 + 96))(v37, v35);
      v39 = v52;
      v38 = v53;
      v40 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v55, v37, v53);
      v41 = (uint64_t)v54;
      sub_21DC71954();
      v42 = sub_21DC7193C();
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42) != 1)
      {
        v46 = v51;
        sub_21DC07CC0(v41, v51, &qword_2553A86C8);
        v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 88))(v46, v42);
        if (v47 == *MEMORY[0x24BE59908] || v47 == *MEMORY[0x24BE598F8] || v47 == *MEMORY[0x24BE59900])
        {
          sub_21DC71B10();
          (*(void (**)(char *, uint64_t))(v39 + 8))(v55, v38);
          sub_21DC07C84((uint64_t)v28, (uint64_t *)&unk_2553A81A8);
          (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v46, v42);
          goto LABEL_17;
        }
        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v46, v42);
        v40 = v55;
      }
      sub_21DC71B10();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v38);
      sub_21DC07C84((uint64_t)v28, (uint64_t *)&unk_2553A81A8);
LABEL_17:
      v44 = &qword_2553A86C8;
      v45 = v41;
      goto LABEL_18;
    }
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v35);
  }
  sub_21DC71B10();
  v44 = (uint64_t *)&unk_2553A81A8;
  v45 = (uint64_t)v28;
LABEL_18:
  sub_21DC07C84(v45, v44);
  sub_21DC07C84(v34, &qword_2553A86D0);
  v48 = v59;
  v49 = (void *)v60;
  result._object = v49;
  result._countAndFlagsBits = v48;
  return result;
}

Swift::String_optional __swiftcall IntelligenceFlowTelemetry.contextId()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  Swift::String_optional result;
  uint64_t v27;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21DC71960();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A86D0);
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)&v27 - v15;
  sub_21DC71894();
  v17 = sub_21DC71888();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = 0;
  v20 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
  {
    sub_21DC07CC0((uint64_t)v16, (uint64_t)v13, &qword_2553A86D0);
    if ((*(unsigned int (**)(char *, uint64_t))(v18 + 88))(v13, v17) == *MEMORY[0x24BE58768])
    {
      (*(void (**)(char *, uint64_t))(v18 + 96))(v13, v17);
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v13, v4);
      sub_21DC71948();
      v21 = sub_21DC715F4();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v3, 1, v21) != 1)
      {
        v19 = sub_21DC715A0();
        v20 = v23;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        (*(void (**)(char *, uint64_t))(v22 + 8))(v3, v21);
        goto LABEL_8;
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      sub_21DC07C84((uint64_t)v3, (uint64_t *)&unk_2553A98F0);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v17);
    }
    v19 = 0;
    v20 = 0;
  }
LABEL_8:
  sub_21DC07C84((uint64_t)v16, &qword_2553A86D0);
  v24 = v19;
  v25 = v20;
  result.value._object = v25;
  result.value._countAndFlagsBits = v24;
  return result;
}

BOOL sub_21DC1A77C()
{
  return (_s27IntelligencePlatformLibrary0A13FlowTelemetryV26AIMLInstrumentationStreamsE1loiySbAC_ACtFZ_0() & 1) == 0;
}

BOOL sub_21DC1A7A4()
{
  return (_s27IntelligencePlatformLibrary0A13FlowTelemetryV26AIMLInstrumentationStreamsE1loiySbAC_ACtFZ_0() & 1) == 0;
}

uint64_t sub_21DC1A7C0()
{
  return _s27IntelligencePlatformLibrary0A13FlowTelemetryV26AIMLInstrumentationStreamsE1loiySbAC_ACtFZ_0();
}

uint64_t _s27IntelligencePlatformLibrary0A13FlowTelemetryV26AIMLInstrumentationStreamsE1loiySbAC_ACtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A81A8);
  v2 = MEMORY[0x24BDAC7A8](v0, v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2, v5);
  v7 = (char *)&v21 - v6;
  v8 = sub_21DC71588();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)&v21 - v15;
  sub_21DC7184C();
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v17(v7, 1, v8) == 1)
  {
    sub_21DC71558();
    sub_21DC07C84((uint64_t)v7, (uint64_t *)&unk_2553A81A8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v16, v7, v8);
  }
  sub_21DC7184C();
  if (v17(v4, 1, v8) == 1)
  {
    sub_21DC71558();
    sub_21DC07C84((uint64_t)v4, (uint64_t *)&unk_2553A81A8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v13, v4, v8);
  }
  v18 = _s26AIMLInstrumentationStreams20TranscriptProtoEventV1loiySbAC_ACtFZ_0();
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v13, v8);
  v19(v16, v8);
  return v18 & 1;
}

unint64_t sub_21DC1A9A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2553A86E0;
  if (!qword_2553A86E0)
  {
    v1 = sub_21DC718A0();
    result = MEMORY[0x22079D964](MEMORY[0x24BE587B0], v1);
    atomic_store(result, (unint64_t *)&qword_2553A86E0);
  }
  return result;
}

uint64_t static SiriTurn.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  id v28;
  unint64_t v29;
  void *v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;

  v4 = sub_21DC715F4();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v33 - v11;
  v13 = sub_21DC0BE64();
  v14 = sub_21DC26320();
  if (!*(_QWORD *)(v14 + 16) || (v15 = sub_21DC0A464(v13), (v16 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = sub_21DC089B4(v17);
  swift_bridgeObjectRelease();
  if (!v18)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    result = swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v19 = a1;
  v20 = sub_21DC0BFDC(v18, (uint64_t)v19);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8338);
  *(_QWORD *)(swift_initStackObject() + 16) = v20;
  v21 = (void *)sub_21DC09288();
  swift_release();
  sub_21DC717F8();

  v22 = sub_21DC26320();
  if (!*(_QWORD *)(v22 + 16))
    goto LABEL_10;
  v23 = sub_21DC0A464(v13);
  if ((v24 & 1) == 0)
    goto LABEL_10;
  v25 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = sub_21DC089B4(v25);
  result = swift_bridgeObjectRelease();
  if (v26)
  {
    v28 = a2;
    v29 = sub_21DC0BFDC(v26, (uint64_t)v28);
    swift_bridgeObjectRelease();

    *(_QWORD *)(swift_initStackObject() + 16) = v29;
    v30 = (void *)sub_21DC09288();
    swift_release();
    sub_21DC717F8();

    v31 = sub_21DC715D0();
    v32 = *(void (**)(char *, uint64_t))(v5 + 8);
    v32(v9, v4);
    v32(v12, v4);
    return v31 & 1;
  }
LABEL_11:
  __break(1u);
  return result;
}

BOOL static SiriTurn.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + OBJC_IVAR___ISEventGraph_timestamp) < *(double *)(a2 + OBJC_IVAR___ISEventGraph_timestamp);
}

BOOL sub_21DC1AC60(_QWORD *a1, _QWORD *a2)
{
  return *(double *)(*a1 + OBJC_IVAR___ISEventGraph_timestamp) < *(double *)(*a2 + OBJC_IVAR___ISEventGraph_timestamp);
}

unint64_t sub_21DC1AC98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2553A86E8;
  if (!qword_2553A86E8)
  {
    v1 = type metadata accessor for SiriTurn();
    result = MEMORY[0x22079D964](MEMORY[0x24BEE5BE0], v1);
    atomic_store(result, (unint64_t *)&qword_2553A86E8);
  }
  return result;
}

uint64_t sub_21DC1ACE0(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v13;

  v13 = MEMORY[0x24BEE4AF8];
  swift_beginAccess();
  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (v3 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      while ((v3 & 0xC000000000000001) != 0)
      {
        v6 = (id)MEMORY[0x22079D208](v5, v3);
LABEL_9:
        v7 = v6;
        v8 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_15;
        sub_21DC13C88(0, a2);
        v9 = (void *)sub_21DC71750();
        if (v9)
        {

          sub_21DC71F00();
          sub_21DC71F30();
          sub_21DC71F3C();
          sub_21DC71F0C();
        }
        else
        {

        }
        ++v5;
        if (v8 == v4)
        {
          v10 = v13;
          goto LABEL_18;
        }
      }
      if (v5 < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      v4 = sub_21DC71FCC();
      swift_bridgeObjectRelease();
      if (!v4)
        goto LABEL_17;
    }
    v6 = *(id *)(v3 + 8 * v5 + 32);
    goto LABEL_9;
  }
LABEL_17:
  v10 = MEMORY[0x24BEE4AF8];
LABEL_18:
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_21DC1AE7C(uint64_t a1, SEL *a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  unint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v16;

  v16 = MEMORY[0x24BEE4AF8];
  swift_beginAccess();
  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (v3 >> 62)
    goto LABEL_18;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      while ((v3 & 0xC000000000000001) != 0)
      {
        v6 = (id)MEMORY[0x22079D208](v5, v3);
LABEL_9:
        v7 = v6;
        v8 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_17;
        sub_21DC13C88(0, &qword_2553A8708);
        v9 = (void *)sub_21DC71750();
        if (v9)
        {
          v10 = v9;
          v11 = objc_msgSend(v9, *a2);
          if (v11)
          {
            v12 = v11;

            sub_21DC71F00();
            sub_21DC71F30();
            sub_21DC71F3C();
            sub_21DC71F0C();
          }
          else
          {

          }
        }
        else
        {

        }
        ++v5;
        if (v8 == v4)
        {
          v13 = v16;
          goto LABEL_20;
        }
      }
      if (v5 < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      swift_bridgeObjectRetain();
      v4 = sub_21DC71FCC();
      swift_bridgeObjectRelease();
      if (!v4)
        goto LABEL_19;
    }
    v6 = *(id *)(v3 + 8 * v5 + 32);
    goto LABEL_9;
  }
LABEL_19:
  v13 = MEMORY[0x24BEE4AF8];
LABEL_20:
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_21DC1B054()
{
  return sub_21DC1B22C(&qword_2553A8700);
}

uint64_t sub_21DC1B068()
{
  return sub_21DC1B22C(&qword_2553A86F0);
}

uint64_t sub_21DC1B07C()
{
  return sub_21DC1B22C(&qword_2553A8710);
}

uint64_t sub_21DC1B090()
{
  return sub_21DC1B0A8((SEL *)&selRef_startedOrChanged);
}

uint64_t sub_21DC1B09C()
{
  return sub_21DC1B0A8((SEL *)&selRef_ended);
}

uint64_t sub_21DC1B0A8(SEL *a1)
{
  void *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t inited;
  unint64_t v13;
  uint64_t result;
  id v15;

  v3 = v1;
  v4 = sub_21DC13C88(0, (unint64_t *)&qword_2553AA420);
  v5 = sub_21DC26320();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_10;
  v6 = sub_21DC0A464(v4);
  if ((v7 & 1) == 0)
    goto LABEL_10;
  v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = sub_21DC089B4(v8);
  swift_bridgeObjectRelease();
  if (!v9)
    return v9;
  v10 = v3;
  v11 = sub_21DC0BFDC(v9, (uint64_t)v10);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8338);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v11;
  v13 = sub_21DC1AE7C(inited, a1);
  if (!(v13 >> 62))
  {
    result = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_6;
LABEL_10:
    swift_bridgeObjectRelease();
    return 0;
  }
  result = sub_21DC71FCC();
  if (!result)
    goto LABEL_10;
LABEL_6:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v15 = (id)MEMORY[0x22079D208](0, v13);
    goto LABEL_9;
  }
  if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(id *)(v13 + 32);
LABEL_9:
    v9 = (uint64_t)v15;
    swift_bridgeObjectRelease();
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC1B218()
{
  return sub_21DC1B22C(&qword_2553A86F8);
}

uint64_t sub_21DC1B22C(unint64_t *a1)
{
  void *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t inited;
  unint64_t v13;
  uint64_t result;
  id v15;

  v3 = v1;
  v4 = sub_21DC13C88(0, (unint64_t *)&qword_2553AA420);
  v5 = sub_21DC26320();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_10;
  v6 = sub_21DC0A464(v4);
  if ((v7 & 1) == 0)
    goto LABEL_10;
  v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = sub_21DC089B4(v8);
  swift_bridgeObjectRelease();
  if (!v9)
    return v9;
  v10 = v3;
  v11 = sub_21DC0BFDC(v9, (uint64_t)v10);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8338);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v11;
  v13 = sub_21DC1ACE0(inited, a1);
  if (!(v13 >> 62))
  {
    result = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_6;
LABEL_10:
    swift_bridgeObjectRelease();
    return 0;
  }
  result = sub_21DC71FCC();
  if (!result)
    goto LABEL_10;
LABEL_6:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v15 = (id)MEMORY[0x22079D208](0, v13);
    goto LABEL_9;
  }
  if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(id *)(v13 + 32);
LABEL_9:
    v9 = (uint64_t)v15;
    swift_bridgeObjectRelease();
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC1B3B4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 48) = v0;
  sub_21DC71684();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 56) = v2;
  *v2 = v1;
  v2[1] = sub_21DC1B40C;
  return sub_21DC71678();
}

uint64_t sub_21DC1B40C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  v4 = (_QWORD *)*v3;
  v4[2] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = v2;
  v5 = (_QWORD *)*v3;
  v4[8] = a1;
  swift_task_dealloc();
  if (v2)
    return ((uint64_t (*)(void))v5[1])();
  else
    return swift_task_switch();
}

uint64_t sub_21DC1B488()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)(void);
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;

  v1 = v0[8];
  if (v1)
  {
    v2 = v0[4];
    v3 = v0[6];
    v4 = *(void **)(v3 + 16);
    *(_QWORD *)(v3 + 16) = v1;

    *(_QWORD *)(v3 + 24) = v2;
    swift_release();
    v5 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v6 = sub_21DC719C0();
    v7 = sub_21DC71D20();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_21DC05000, v6, v7, "Unable to establish stream with Raw SiriAnalytics", v8, 2u);
      MEMORY[0x22079DA24](v8, -1, -1);
    }

    sub_21DC1BC44();
    swift_allocError();
    *v9 = 0xD00000000000002DLL;
    v9[1] = 0x800000021DC76340;
    swift_willThrow();
    v5 = (uint64_t (*)(void))v0[1];
  }
  return v5();
}

void *sub_21DC1B5AC@<X0>(char a1@<W1>, uint64_t a2@<X2>, int a3@<W3>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X6>, int a7@<W7>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, _QWORD, uint64_t, uint64_t);
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *result;
  id v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  _QWORD v62[2];
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  int v72;
  int v73;

  v9 = v8;
  v71 = a7;
  v72 = a3;
  v73 = a5;
  v69 = a8;
  v70 = a4;
  v62[1] = a2;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8198);
  v64 = *(_QWORD *)(v12 - 8);
  v65 = v12;
  MEMORY[0x24BDAC7A8](v12, v13);
  v63 = (char *)v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A81A0);
  v67 = *(_QWORD *)(v15 - 8);
  v68 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v66 = (char *)v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A81A8);
  v20 = MEMORY[0x24BDAC7A8](v18, v19);
  v22 = (char *)v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v20, v23);
  v26 = (char *)v62 - v25;
  v28 = MEMORY[0x24BDAC7A8](v24, v27);
  v30 = (char *)v62 - v29;
  v32 = MEMORY[0x24BDAC7A8](v28, v31);
  v34 = (char *)v62 - v33;
  v36 = MEMORY[0x24BDAC7A8](v32, v35);
  v38 = (char *)v62 - v37;
  MEMORY[0x24BDAC7A8](v36, v39);
  v41 = (char *)v62 - v40;
  if ((a1 & 1) != 0)
  {
    v43 = sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v38, 1, 1, v43);
LABEL_5:
    sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v41, 1, 1, v43);
    sub_21DC0892C((uint64_t)v38);
    if ((v72 & 1) == 0)
      goto LABEL_6;
LABEL_9:
    v48 = sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v30, 1, 1, v48);
    goto LABEL_10;
  }
  v62[0] = a6;
  v42 = v9;
  sub_21DC7151C();
  v43 = sub_21DC71588();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56);
  v45(v38, 0, 1, v43);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v38, 1, v43) == 1)
  {
    v9 = v42;
    a6 = v62[0];
    goto LABEL_5;
  }
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v38, v43);
  v45(v41, 0, 1, v43);
  v9 = v42;
  a6 = v62[0];
  if ((v72 & 1) != 0)
    goto LABEL_9;
LABEL_6:
  v46 = a6;
  v47 = v9;
  sub_21DC7151C();
  v48 = sub_21DC71588();
  v49 = *(_QWORD *)(v48 - 8);
  v50 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56);
  v50(v30, 0, 1, v48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v30, 1, v48) == 1)
  {
    v9 = v47;
    a6 = v46;
LABEL_10:
    v51 = v71;
    v52 = v70;
    sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v34, 1, 1, v48);
    sub_21DC0892C((uint64_t)v30);
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v34, v30, v48);
  v50(v34, 0, 1, v48);
  v9 = v47;
  a6 = v46;
  v51 = v71;
  v52 = v70;
LABEL_12:
  sub_21DC0896C((uint64_t)v41, (uint64_t)v26);
  sub_21DC0896C((uint64_t)v34, (uint64_t)v22);
  if ((v73 & 1) != 0)
    v53 = 0;
  else
    v53 = v52;
  if ((v51 & 1) != 0)
    v54 = 0;
  else
    v54 = a6;
  sub_21DC07D04();
  v55 = sub_21DC42828((uint64_t)v26, (uint64_t)v22, v53, v54, 0);
  result = *(void **)(v9 + 16);
  if (result)
  {
    v57 = objc_msgSend(result, sel_publisherWithOptions_, v55);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A81C0);
    v58 = v63;
    sub_21DC7166C();
    type metadata accessor for TimestampedOrderedEvent();
    sub_21DC07D84(&qword_2553A8828, &qword_2553A8198, MEMORY[0x24BE0C968]);
    v59 = v65;
    v60 = v66;
    sub_21DC71624();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v58, v59);
    sub_21DC07D84(&qword_2553A8830, &qword_2553A81A0, MEMORY[0x24BE0C8A8]);
    v61 = v68;
    sub_21DC71618();
    sub_21DC71660();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v60, v61);

    sub_21DC0892C((uint64_t)v34);
    return (void *)sub_21DC0892C((uint64_t)v41);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21DC1BAB4(void *a1)
{
  type metadata accessor for TimestampedOrderedEvent();
  swift_allocObject();
  return TimestampedOrderedEvent.init(rawEvent:)(a1);
}

uint64_t sub_21DC1BAF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams9RawStream_logger;
  v2 = sub_21DC719D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_21DC1BB50()
{
  return type metadata accessor for RawStream();
}

uint64_t type metadata accessor for RawStream()
{
  uint64_t result;

  result = qword_2553A8740;
  if (!qword_2553A8740)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21DC1BB94()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21DC719D8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void *sub_21DC1BC0C@<X0>(char a1@<W1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, char a5@<W5>, uint64_t a6@<X6>, char a7@<W7>, uint64_t a8@<X8>)
{
  return sub_21DC1B5AC(a1 & 1, a2, a3 & 1, a4, a5 & 1, a6, a7 & 1, a8);
}

unint64_t sub_21DC1BC44()
{
  unint64_t result;

  result = qword_2553A8838;
  if (!qword_2553A8838)
  {
    result = MEMORY[0x22079D964]("q!S0Px", &type metadata for RawStream.RawStreamAccessError);
    atomic_store(result, (unint64_t *)&qword_2553A8838);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for RawStream.RawStreamAccessError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for RawStream.RawStreamAccessError()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for RawStream.RawStreamAccessError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for RawStream.RawStreamAccessError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RawStream.RawStreamAccessError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RawStream.RawStreamAccessError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_21DC1BDBC()
{
  return 0;
}

ValueMetadata *type metadata accessor for RawStream.RawStreamAccessError()
{
  return &type metadata for RawStream.RawStreamAccessError;
}

id ComponentIdentifierBridge.__allocating_init(componentIdentifier:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___ISComponentIdentifier_componentIdentifier] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id ComponentIdentifierBridge.init(componentIdentifier:)(uint64_t a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR___ISComponentIdentifier_componentIdentifier] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for ComponentIdentifierBridge();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for ComponentIdentifierBridge()
{
  return objc_opt_self();
}

id ComponentIdentifierBridge.__allocating_init(name:uuid:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  char *v10;
  id v11;
  objc_super v13;

  v4 = sub_21DC715F4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_allocWithZone(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  objc_allocWithZone((Class)sub_21DC71804());
  v10 = (char *)v9;
  *(_QWORD *)&v10[OBJC_IVAR___ISComponentIdentifier_componentIdentifier] = sub_21DC717EC();

  v13.receiver = v10;
  v13.super_class = v2;
  v11 = objc_msgSendSuper2(&v13, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  return v11;
}

id ComponentIdentifierBridge.init(name:uuid:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  id v10;
  objc_super v12;

  v4 = sub_21DC715F4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  objc_allocWithZone((Class)sub_21DC71804());
  v8 = v2;
  *(_QWORD *)&v8[OBJC_IVAR___ISComponentIdentifier_componentIdentifier] = sub_21DC717EC();

  v9 = (objc_class *)type metadata accessor for ComponentIdentifierBridge();
  v12.receiver = v8;
  v12.super_class = v9;
  v10 = objc_msgSendSuper2(&v12, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  return v10;
}

uint64_t sub_21DC1C1CC()
{
  return sub_21DC717D4();
}

uint64_t sub_21DC1C29C()
{
  return sub_21DC717F8();
}

id ComponentIdentifierBridge.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ComponentIdentifierBridge.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ComponentIdentifierBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ComponentIdentifierBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for ComponentIdentifierBridge()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ComponentIdentifierBridge.__allocating_init(componentIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ComponentIdentifierBridge.__allocating_init(name:uuid:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ComponentIdentifierBridge.componentName.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ComponentIdentifierBridge.uuid.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t *sub_21DC1C3D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_21DC715F4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_21DC1C458(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_21DC715F4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *sub_21DC1C490(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_21DC715F4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *sub_21DC1C4EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_21DC715F4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *sub_21DC1C548(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_21DC715F4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_21DC1C5A4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_21DC715F4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_21DC1C600()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21DC1C60C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21DC715F4();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_21DC1C688()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_21DC1C694(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_21DC715F4();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for EventTypeIdPair()
{
  uint64_t result;

  result = qword_2553A88C8;
  if (!qword_2553A88C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21DC1C744()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21DC715F4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21DC1C7BC()
{
  return sub_21DC13D04((unint64_t *)&unk_2553A8900, (uint64_t (*)(uint64_t))type metadata accessor for EventTypeIdPair, (uint64_t)&unk_21DC7361C);
}

uint64_t sub_21DC1C7E8(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2)
    return sub_21DC715D0();
  else
    return 0;
}

uint64_t sub_21DC1C810()
{
  sub_21DC72134();
  sub_21DC72140();
  sub_21DC715F4();
  sub_21DC13D04((unint64_t *)&qword_2553AA410, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_21DC71A44();
  return sub_21DC72158();
}

uint64_t sub_21DC1C8A0()
{
  sub_21DC72140();
  sub_21DC715F4();
  sub_21DC13D04((unint64_t *)&qword_2553AA410, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_21DC71A44();
}

uint64_t sub_21DC1C918()
{
  sub_21DC72134();
  sub_21DC72140();
  sub_21DC715F4();
  sub_21DC13D04((unint64_t *)&qword_2553AA410, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_21DC71A44();
  return sub_21DC72158();
}

uint64_t sub_21DC1C9A4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_21DC4BB10(0, v1, 0);
    v2 = v13;
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v5 = *(v4 - 3);
      v6 = *(v4 - 2);
      v8 = *(v4 - 1);
      v7 = *v4;
      v9 = *(_QWORD *)(v13 + 16);
      v10 = *(_QWORD *)(v13 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1)
        sub_21DC4BB10(v10 > 1, v9 + 1, 1);
      *(_QWORD *)(v13 + 16) = v9 + 1;
      v11 = (_QWORD *)(v13 + 32 * v9);
      v11[4] = v5;
      v11[5] = v6;
      v11[6] = v8;
      v11[7] = v7;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

id BiomeEventGraphsPublisher.__allocating_init(streams:windowLength:)(unint64_t a1, double a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return BiomeEventGraphsPublisher.init(streams:windowLength:)(a1, a2);
}

id BiomeEventGraphsPublisher.init(streams:windowLength:)(unint64_t a1, double a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  char *v8;
  id v9;
  id result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  char *v21;
  void *v22;
  unint64_t v23;
  objc_super v24;
  uint64_t aBlock;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  void *v28;
  uint64_t (*v29)();
  uint64_t v30;

  v3 = v2;
  v5 = OBJC_IVAR____TtC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher_inner;
  *(_QWORD *)&v3[OBJC_IVAR____TtC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher_inner] = 0;
  *(double *)&v3[OBJC_IVAR____TtC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher_windowLength] = a2;
  v6 = a1 >> 62;
  if (a1 >> 62)
  {
    v21 = v3;
    swift_bridgeObjectRetain();
    v7 = (void *)sub_21DC71FCC();
    if (v7)
    {
LABEL_3:
      if ((a1 & 0xC000000000000001) != 0)
      {
        v9 = (id)MEMORY[0x22079D208](0, a1);
      }
      else
      {
        if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_29;
        }
        v9 = *(id *)(a1 + 32);
      }
      v7 = v9;
      result = (id)swift_bridgeObjectRelease();
      if (v6)
      {
        swift_bridgeObjectRetain();
        v11 = sub_21DC71FCC();
        swift_bridgeObjectRelease();
        if (v11 >= 2)
        {
          v23 = a1;
          swift_bridgeObjectRetain();
          v12 = sub_21DC71FCC();
          result = (id)swift_bridgeObjectRelease();
          if (v12)
          {
            swift_bridgeObjectRetain();
            v13 = sub_21DC71FCC();
            result = (id)swift_bridgeObjectRelease();
            if (v13)
            {
LABEL_12:
              if ((a1 & 0xC000000000000001) != 0)
              {
                result = (id)MEMORY[0x22079D208](0, a1);
                v14 = result;
                if (!v6)
                {
LABEL_14:
                  v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
                  goto LABEL_19;
                }
              }
              else
              {
                if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
LABEL_33:
                  __break(1u);
                  return result;
                }
                result = *(id *)(a1 + 32);
                v14 = result;
                if (!v6)
                  goto LABEL_14;
              }
              swift_bridgeObjectRetain();
              v15 = sub_21DC71FCC();
              result = (id)swift_bridgeObjectRelease();
LABEL_19:
              if (v15)
              {
                sub_21DC1FBAC(0, 1);

                if (!(v23 >> 62))
                {
                  swift_bridgeObjectRetain();
                  sub_21DC720B0();
LABEL_22:
                  swift_bridgeObjectRelease();
                  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8920);
                  v19 = (void *)sub_21DC71B64();
                  swift_bridgeObjectRelease();
                  v29 = sub_21DC1CED8;
                  v30 = 0;
                  aBlock = MEMORY[0x24BDAC760];
                  v26 = 1107296256;
                  v27 = sub_21DC1CEDC;
                  v28 = &block_descriptor_3;
                  v20 = _Block_copy(&aBlock);
                  v18 = objc_msgSend(v7, sel_orderedMergeWithOthers_comparator_, v19, v20);

                  _Block_release(v20);
                  goto LABEL_23;
                }
LABEL_29:
                swift_bridgeObjectRetain();
                __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8920);
                sub_21DC71FC0();
                swift_bridgeObjectRelease();
                goto LABEL_22;
              }
              goto LABEL_32;
            }
            __break(1u);
          }
          __break(1u);
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
      }
      else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) > 1uLL)
      {
        v23 = a1;
        goto LABEL_12;
      }
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8920);
      v16 = (void *)sub_21DC71B64();
      v29 = sub_21DC1CED8;
      v30 = 0;
      aBlock = MEMORY[0x24BDAC760];
      v26 = 1107296256;
      v27 = sub_21DC1CEDC;
      v28 = &block_descriptor;
      v17 = _Block_copy(&aBlock);
      v18 = objc_msgSend(v7, sel_orderedMergeWithOthers_comparator_, v16, v17);

      _Block_release(v17);
LABEL_23:
      *(_QWORD *)&v3[OBJC_IVAR____TtC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher_mergedStream] = v18;

      v24.receiver = v3;
      v24.super_class = (Class)type metadata accessor for BiomeEventGraphsPublisher();
      return objc_msgSendSuper2(&v24, sel_init);
    }
  }
  else
  {
    v7 = *(void **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = v3;
    swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease_n();
  v22 = *(void **)&v3[v5];

  type metadata accessor for BiomeEventGraphsPublisher();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_21DC1CEDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(_QWORD *, _QWORD *);
  uint64_t v6;
  _QWORD v8[4];
  _QWORD v9[4];

  v5 = *(uint64_t (**)(_QWORD *, _QWORD *))(a1 + 32);
  v9[3] = swift_getObjectType();
  v9[0] = a2;
  v8[3] = swift_getObjectType();
  v8[0] = a3;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v6 = v5(v9, v8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v6;
}

uint64_t sub_21DC1CF78(uint64_t a1, uint64_t a2)
{
  double v3;
  int v4;
  double v5;
  int v6;
  double v7;
  char *v9;
  _BYTE v10[32];

  sub_21DC13D44(a1, (uint64_t)v10);
  type metadata accessor for AnteroEvent();
  swift_dynamicCast();
  v3 = *(double *)&v9[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_timestamp];
  v4 = v9[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_timestamp + 8];

  if (v4)
    v3 = 0.0;
  sub_21DC13D44(a2, (uint64_t)v10);
  swift_dynamicCast();
  v5 = *(double *)&v9[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_timestamp];
  v6 = v9[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_timestamp + 8];

  if (v6)
    v7 = 0.0;
  else
    v7 = v5;
  if (v3 >= v7)
    return 1;
  else
    return -1;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t type metadata accessor for BiomeEventGraphsPublisher()
{
  return objc_opt_self();
}

void sub_21DC1D0A8()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;

  v1 = v0;
  v2 = *(double *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher_windowLength);
  v3 = objc_allocWithZone((Class)type metadata accessor for BiomeEventGraphsPublisher.SessionIDSubscriber());
  v4 = swift_unknownObjectRetain();
  v5 = sub_21DC1FEE4(v4, v2);
  swift_unknownObjectRelease();
  v6 = OBJC_IVAR____TtC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher_inner;
  v7 = *(void **)(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher_inner);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher_inner) = v5;

  if (*(_QWORD *)(v1 + v6))
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher_mergedStream), sel_subscribe_);
  else
    __break(1u);
}

uint64_t sub_21DC1D1EC()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher_mergedStream);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A8930);
  v2 = v1;
  if (!swift_dynamicCast())
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9780);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_21DC73350;
  *(_QWORD *)(v3 + 32) = v5;
  v6 = v3;
  sub_21DC71B94();
  return v6;
}

uint64_t sub_21DC1D2B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _BYTE *v7;
  _BYTE v8[32];

  sub_21DC13D44(a1, (uint64_t)v8);
  type metadata accessor for AnteroEvent();
  if (!swift_dynamicCast())
    return BPSDemandMax();
  sub_21DC1DA20(v7);
  v2 = OBJC_IVAR____TtCC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher19SessionIDSubscriber_downstream;
  v3 = sub_21DC1D4EC();
  if (v3)
  {
    v4 = (void *)v3;
    do
    {
      objc_msgSend(*(id *)(v1 + v2), sel_receiveInput_, v4);

      v4 = (void *)sub_21DC1D4EC();
    }
    while (v4);
  }
  v5 = BPSDemandMax();

  return v5;
}

id sub_21DC1D3EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  *(_BYTE *)(v1
           + OBJC_IVAR____TtCC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher19SessionIDSubscriber_upstreamFinished) = 1;
  v3 = OBJC_IVAR____TtCC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher19SessionIDSubscriber_downstream;
  v4 = sub_21DC1D4EC();
  if (v4)
  {
    v5 = (void *)v4;
    do
    {
      objc_msgSend(*(id *)(v1 + v3), sel_receiveInput_, v5);

      v5 = (void *)sub_21DC1D4EC();
    }
    while (v5);
  }
  return objc_msgSend(*(id *)(v1 + v3), sel_receiveCompletion_, a1);
}

uint64_t sub_21DC1D4EC()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  char *v34;
  void *v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  double v45;
  uint64_t v46;
  id v47;
  _QWORD *v48;
  unint64_t v49;
  _QWORD *v50;
  id v51;
  uint64_t result;
  _QWORD v53[2];
  id v54;
  char *v55;
  unint64_t v56;
  unint64_t v57;
  char *v58;
  _QWORD *v59[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21DC715F4();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v58 = (char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v11);
  v55 = (char *)v53 - v12;
  if (v0[OBJC_IVAR____TtCC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher19SessionIDSubscriber_upstreamFinished] == 1)
  {
    v13 = *(_QWORD *)&v0[OBJC_IVAR____TtCC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher19SessionIDSubscriber_sessionBuilder];
    swift_beginAccess();
    v14 = *(_QWORD *)(v13 + 16);
    swift_bridgeObjectRetain_n();
    v15 = sub_21DC095A0(v14);
    swift_bridgeObjectRelease();
    v59[0] = v15;
    sub_21DC1EE00(v59);
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = *(double *)&v0[OBJC_IVAR____TtCC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher19SessionIDSubscriber_latestRecievedTimestamp]
        - *(double *)&v0[OBJC_IVAR____TtCC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher19SessionIDSubscriber_graphSessionWindowLength];
    v17 = swift_beginAccess();
    MEMORY[0x24BDAC7A8](v17, v18);
    *(double *)&v53[-2] = v16;
    v19 = swift_bridgeObjectRetain();
    sub_21DC2041C(v19, (uint64_t (*)(_QWORD *, double))sub_21DC201FC, (uint64_t)&v53[-4]);
    swift_bridgeObjectRelease();
    v20 = swift_bridgeObjectRetain();
    v21 = sub_21DC095A0(v20);
    swift_release();
    v59[0] = v21;
    sub_21DC1EE00(v59);
    swift_release();
  }
  v22 = (_QWORD *)sub_21DC1C9A4((uint64_t)v59[0]);
  swift_release();
  if (!v22[2])
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v53[1] = 0;
  v54 = v1;
  v23 = v22[4];
  v24 = v22[5];
  v26 = v22[6];
  v25 = v22[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = sub_21DC55190(v23, v24, v26, v25);
  v29 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v29)
    return 0;
  if (v29 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain();
    v30 = sub_21DC71FCC();
    v53[0] = v27;
    if (v30)
      goto LABEL_8;
    goto LABEL_29;
  }
  v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v53[0] = v27;
  if (!v30)
  {
LABEL_29:
    v31 = MEMORY[0x24BEE4AF8];
LABEL_30:
    v45 = *(double *)v53;
    swift_bridgeObjectRelease();
    v46 = sub_21DC4A770(v31);
    swift_bridgeObjectRelease();
    v47 = v54;
    v48 = (_QWORD *)v29;
    v49 = sub_21DC2058C(v46, (uint64_t)v47);
    swift_bridgeObjectRelease();

    v59[0] = v48;
    swift_bridgeObjectRetain();
    sub_21DC52E34(v49);
    v50 = v59[0];
    v51 = objc_allocWithZone((Class)type metadata accessor for BiomeEventGraph());
    v44 = BiomeEventGraph.init(timestamp:events:)((uint64_t)v50, v45);
    swift_bridgeObjectRelease();
    return (uint64_t)v44;
  }
LABEL_8:
  v57 = v29 & 0xC000000000000001;
  v31 = MEMORY[0x24BEE4AF8];
  v32 = 4;
  v56 = v29;
  while (1)
  {
    v27 = v32 - 4;
    if (v57)
      v34 = (char *)MEMORY[0x22079D208](v32 - 4, v29);
    else
      v34 = (char *)*(id *)(v29 + 8 * v32);
    v35 = v34;
    v29 = v32 - 3;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    v36 = *(_QWORD *)&v34[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_selfEvent];
    if (!v36)
    {
      v39 = 1;
      goto LABEL_19;
    }
    v37 = *(id *)(v36 + 24);
    v38 = (void *)sub_21DC71714();

    if (!v38)
      break;
    sub_21DC7178C();

    v39 = 0;
LABEL_19:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v39, 1, v6);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_21DC19DF4((uint64_t)v5);
    }
    else
    {
      v40 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v41 = v55;
      v40(v55, v5, v6);
      v40(v58, v41, v6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v31 = sub_21DC1509C(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
      v43 = *(_QWORD *)(v31 + 16);
      v42 = *(_QWORD *)(v31 + 24);
      if (v43 >= v42 >> 1)
        v31 = sub_21DC1509C(v42 > 1, v43 + 1, 1, v31);
      *(_QWORD *)(v31 + 16) = v43 + 1;
      v40((char *)(v31+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v43), v58, v6);
    }
    ++v32;
    v33 = v29 == v30;
    v29 = v56;
    if (v33)
      goto LABEL_30;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_21DC1DA20(_BYTE *a1)
{
  uint64_t v1;
  double v3;
  double v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t result;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;

  if (a1[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_timestamp + 8])
    v3 = 0.0;
  else
    v3 = *(double *)&a1[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_timestamp];
  v4 = *(double *)(v1
                 + OBJC_IVAR____TtCC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher19SessionIDSubscriber_latestRecievedTimestamp);
  if (v3 > v4)
    v4 = v3;
  *(double *)(v1
            + OBJC_IVAR____TtCC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher19SessionIDSubscriber_latestRecievedTimestamp) = v4;
  v5 = (uint64_t *)&a1[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_link];
  v6 = *(_QWORD *)&a1[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_link + 8];
  if (v6)
  {
    v8 = v5[2];
    v7 = v5[3];
    v9 = *v5;
    sub_21DC20164(*v5, v6);
    swift_bridgeObjectRetain();
    sub_21DC20194(v9, v6);
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  if (qword_2553A7F18 != -1)
  {
    swift_once();
    if (!v7)
      goto LABEL_16;
LABEL_11:
    if (v8 == qword_2553AC620 && v7 == *(_QWORD *)algn_2553AC628)
    {
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v11 = sub_21DC720A4();
      result = swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
        goto LABEL_16;
    }
    v28 = v5[1];
    if (v28)
    {
      v29 = *v5;
      sub_21DC20164(*v5, v5[1]);
      swift_bridgeObjectRetain();
      sub_21DC37A30(a1, v29, v28, v3);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease_n();
    }
    return result;
  }
  if (v7)
    goto LABEL_11;
LABEL_16:
  v13 = (uint64_t *)&a1[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_joiningLinks];
  swift_beginAccess();
  result = *v13;
  v14 = *(_QWORD *)(*v13 + 16);
  v15 = v5[1];
  if (v14)
  {
    if (v15)
    {
      v17 = v5[2];
      v16 = v5[3];
      v18 = *v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_21DC51C28(a1, v18, v15, v17, v16, v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = *v13;
      v19 = *(_QWORD *)(*v13 + 16);
      if (!v19)
        return result;
      v20 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
      do
      {
        v21 = *(v20 - 1);
        v43 = *(v20 - 2);
        v22 = *v20;
        v23 = v20[1];
        v24 = v20[2];
        v25 = v20[3];
        v26 = v20[4];
        v27 = v20[5];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_21DC1E280(v43, v21, v22, v23, v24, v25, v26, v27, v3);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v20 += 8;
        --v19;
      }
      while (v19);
    }
    else
    {
      v42 = a1;
      v33 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
      do
      {
        v34 = *(v33 - 2);
        v35 = *(v33 - 1);
        v36 = *v33;
        v37 = v33[1];
        v38 = v33[2];
        v39 = v33[3];
        v41 = v33[4];
        v40 = v33[5];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_21DC53220(v42, v34, v35, v36, v37, v38, v39, v41, v3, v40);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v33 += 8;
        --v14;
      }
      while (v14);
    }
  }
  else
  {
    if (!v15)
      return result;
    v31 = v5[2];
    v30 = v5[3];
    v32 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21DC51C28(a1, v32, v15, v31, v30, v3);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

id sub_21DC1DE70()
{
  return sub_21DC1DF74(0, type metadata accessor for BiomeEventGraphsPublisher.SessionIDSubscriber);
}

id BiomeEventGraphsPublisher.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BiomeEventGraphsPublisher.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BiomeEventGraphsPublisher.__deallocating_deinit(uint64_t a1)
{
  return sub_21DC1DF74(a1, type metadata accessor for BiomeEventGraphsPublisher);
}

id sub_21DC1DF74(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_21DC1DFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A8A90);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21DC73650;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  *(_QWORD *)(inited + 48) = a3;
  *(_QWORD *)(inited + 56) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = MEMORY[0x24BEE4B08];
  while (1)
  {
    v11 = swift_bridgeObjectRetain();
    v10 = sub_21DC5FF84(v11, v10);
    swift_bridgeObjectRelease();
    v33 = v10;
    v12 = *(_QWORD *)(inited + 16);
    if (v12)
      break;
    v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_3:
    swift_bridgeObjectRelease();
    inited = sub_21DC1F89C((uint64_t)v14, &v33);
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(inited + 16))
    {
      swift_bridgeObjectRelease();
      return v33;
    }
  }
  v32 = v10;
  swift_bridgeObjectRetain();
  swift_retain();
  v13 = (uint64_t *)(inited + 56);
  v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v15 = *(v13 - 1);
    v16 = *v13;
    v18 = *(v13 - 3);
    v17 = *(v13 - 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = sub_21DC50A04(v18, v17, v15, v16, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = *(_QWORD *)(v19 + 16);
    v21 = v14[2];
    v22 = v21 + v20;
    if (__OFADD__(v21, v20))
      break;
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v22 <= v14[3] >> 1)
    {
      if (*(_QWORD *)(v19 + 16))
        goto LABEL_17;
    }
    else
    {
      if (v21 <= v22)
        v24 = v21 + v20;
      else
        v24 = v21;
      v14 = sub_21DC14E84(isUniquelyReferenced_nonNull_native, v24, 1, v14);
      if (*(_QWORD *)(v19 + 16))
      {
LABEL_17:
        v25 = v14[2];
        if ((v14[3] >> 1) - v25 < v20)
          goto LABEL_30;
        v26 = (unint64_t)&v14[4 * v25 + 4];
        if (v19 + 32 < v26 + 32 * v20 && v26 < v19 + 32 + 32 * v20)
          goto LABEL_32;
        swift_arrayInitWithCopy();
        if (v20)
        {
          v28 = v14[2];
          v29 = __OFADD__(v28, v20);
          v30 = v28 + v20;
          if (v29)
            goto LABEL_31;
          v14[2] = v30;
        }
        goto LABEL_7;
      }
    }
    if (v20)
      goto LABEL_29;
LABEL_7:
    v13 += 4;
    swift_bridgeObjectRelease();
    if (!--v12)
    {
      swift_release();
      swift_bridgeObjectRelease();
      v10 = v32;
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC1E280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9)
{
  uint64_t v9;
  BOOL v17;
  int v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD **v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  double v83;
  char v84;
  char v85;
  uint64_t result;
  _QWORD v87[4];
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;

  v102 = a5;
  v17 = a7 == a3 && a8 == a4;
  v18 = v17;
  LODWORD(v95) = v18;
  v100 = a7;
  if (v17 || (v19 = a7, (sub_21DC720A4() & 1) != 0))
  {
    if (v102 != a1 || a6 != a2)
    {
      v20 = sub_21DC720A4();
      v21 = a6;
      v22 = a8;
      v23 = v102;
      v19 = v100;
      if ((v20 & 1) != 0)
        goto LABEL_13;
    }
  }
  else
  {
    v64 = sub_21DC720A4();
    v21 = a6;
    v22 = a8;
    v23 = v102;
    if ((v64 & 1) != 0)
      goto LABEL_13;
  }
  v21 = a2;
  v22 = a4;
  v23 = a1;
  v19 = a3;
LABEL_13:
  v94 = v23;
  v103 = a1;
  v98 = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = (_QWORD **)(v9 + 24);
  swift_beginAccess();
  v96 = v9;
  v25 = *(_QWORD *)(v9 + 24);
  v26 = a4;
  v27 = *(_QWORD *)(v25 + 16);
  v101 = a6;
  swift_bridgeObjectRetain();
  v99 = a8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v97 = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27 && (v28 = sub_21DC0A5CC(v94, v21, v19, v22), (v29 & 1) != 0))
  {
    v30 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v28);
    swift_bridgeObjectRetain();
  }
  else
  {
    v30 = MEMORY[0x24BEE4AF8];
  }
  v31 = v97;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v95 & 1) != 0 || (sub_21DC720A4() & 1) != 0)
  {
    if (v102 == v103 && v101 == a2)
      goto LABEL_22;
    v32 = v101;
    v33 = v102;
    v34 = v99;
    v35 = v100;
    if ((sub_21DC720A4() & 1) == 0)
      goto LABEL_22;
  }
  else
  {
    v35 = v100;
    v34 = v99;
    v32 = v101;
    v33 = v102;
    if ((sub_21DC720A4() & 1) == 0)
    {
LABEL_22:
      v32 = a2;
      v34 = v97;
      v33 = v103;
      v35 = v98;
    }
  }
  v95 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v109 = *v24;
  v37 = v109;
  *v24 = (_QWORD *)0x8000000000000000;
  v39 = sub_21DC0A5CC(v33, v32, v35, v34);
  v40 = v37[2];
  v41 = (v38 & 1) == 0;
  v42 = v40 + v41;
  if (__OFADD__(v40, v41))
  {
    __break(1u);
LABEL_69:
    sub_21DC5D870();
    v37 = v109;
    goto LABEL_28;
  }
  v31 = v38;
  if (v37[3] >= v42)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_28;
    goto LABEL_69;
  }
  sub_21DC1030C(v42, isUniquelyReferenced_nonNull_native);
  v37 = v109;
  v43 = sub_21DC0A5CC(v33, v32, v35, v34);
  if ((v31 & 1) != (v44 & 1))
  {
LABEL_72:
    result = sub_21DC720E0();
    __break(1u);
    return result;
  }
  v39 = v43;
LABEL_28:
  v45 = v95;
  *v24 = v37;
  swift_bridgeObjectRelease();
  v46 = *v24;
  if ((v31 & 1) == 0)
  {
    sub_21DC5CCF8(v39, v33, v32, v35, v34, MEMORY[0x24BEE4AF8], *v24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(v46[7] + 8 * v39) = v30;
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v47 = v97;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v48 = v98;
  sub_21DC4F834(v103, v45, v98, v97, v102, v101, v100, v99);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v95 = v96 + 40;
  swift_beginAccess();
  v49 = *(_QWORD *)(v96 + 40);
  if (*(_QWORD *)(v49 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v50 = sub_21DC0A5CC(v103, v45, v98, v97);
    if ((v51 & 1) != 0)
    {
      v52 = (uint64_t *)(*(_QWORD *)(v49 + 56) + 32 * v50);
      v54 = *v52;
      v53 = v52[1];
      v55 = v52[3];
      v94 = v52[2];
      swift_bridgeObjectRetain();
      v93 = v55;
      swift_bridgeObjectRetain();
    }
    else
    {
      v54 = 0;
      v53 = 0;
      v94 = 0;
      v93 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v54 = 0;
    v53 = 0;
    v94 = 0;
    v93 = 0;
  }
  v56 = *(_QWORD *)v95;
  v57 = *(_QWORD *)(*(_QWORD *)v95 + 16);
  v91 = v54;
  v90 = v53;
  if (!v57)
  {
    v100 = 0;
    v92 = 0;
    v102 = 0;
LABEL_54:
    swift_retain();
    v65 = sub_21DC1DFDC(v103, v45, v48, v97);
    swift_release();
    v105 = sub_21DC574BC(v65);
    v106 = v66;
    v107 = v67;
    v108 = v68;
    MEMORY[0x24BDAC7A8](v105, v66);
    v87[2] = v96;
    v87[3] = &v105;
    sub_21DC514A0((void (*)(_QWORD *))sub_21DC201C4, (uint64_t)v87, v65);
    sub_21DC20194(v105, v106);
    swift_bridgeObjectRelease();
    goto LABEL_55;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v58 = sub_21DC0A5CC(v102, v101, v100, v99);
  if ((v59 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v63 = 0;
    v89 = 0;
    v92 = 0;
    v102 = 0;
LABEL_48:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v100 = v63;
    goto LABEL_54;
  }
  v60 = (uint64_t *)(*(_QWORD *)(v56 + 56) + 32 * v58);
  v61 = v60[1];
  v102 = *v60;
  v62 = v60[3];
  v89 = v60[2];
  swift_bridgeObjectRetain();
  v100 = v62;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v92 = v61;
  if (!v53 || !v61)
  {
    v48 = v98;
    goto LABEL_54;
  }
  if ((v54 != v102 || v53 != v61) && (sub_21DC720A4() & 1) == 0)
  {
    sub_21DC20164(v54, v53);
    sub_21DC20164(v102, v61);
    v63 = v100;
    v48 = v98;
    goto LABEL_48;
  }
  if (v94 == v89 && v93 == v100)
  {
    sub_21DC20164(v54, v53);
    sub_21DC20164(v102, v92);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v100 = v93;
    v48 = v98;
    goto LABEL_55;
  }
  v88 = sub_21DC720A4();
  sub_21DC20164(v54, v53);
  sub_21DC20164(v102, v92);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v48 = v98;
  if ((v88 & 1) == 0)
    goto LABEL_54;
LABEL_55:
  v69 = *(_QWORD *)v95;
  v70 = *(_QWORD *)(*(_QWORD *)v95 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v70)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  swift_bridgeObjectRetain();
  v71 = sub_21DC0A5CC(v103, v45, v48, v47);
  if ((v72 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_71;
  }
  v73 = (uint64_t *)(*(_QWORD *)(v69 + 56) + 32 * v71);
  v75 = *v73;
  v74 = v73[1];
  v77 = v73[2];
  v76 = v73[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v78 = v96;
  v79 = (uint64_t *)(v96 + 16);
  swift_beginAccess();
  v80 = *(_QWORD *)(v78 + 16);
  v81 = *(_QWORD *)(v80 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v81)
  {
    swift_bridgeObjectRetain();
    v82 = sub_21DC0A5CC(v75, v74, v77, v76);
    v83 = 0.0;
    if ((v84 & 1) != 0)
      v83 = *(double *)(*(_QWORD *)(v80 + 56) + 8 * v82);
    swift_bridgeObjectRelease();
  }
  else
  {
    v83 = 0.0;
  }
  if (v83 > a9)
    a9 = v83;
  swift_beginAccess();
  v85 = swift_isUniquelyReferenced_nonNull_native();
  v104 = *v79;
  *v79 = 0x8000000000000000;
  sub_21DC3C6DC(v75, v74, v77, v76, v85, a9);
  *v79 = v104;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21DC20194(v102, v92);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_21DC20194(v91, v90);
}

uint64_t sub_21DC1EE00(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_21DC5F7C4(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_21DC1EE68(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_21DC1EE68(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  double v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  char *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  char v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t i;
  double v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  double v106;
  char *v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  double *__dst;
  uint64_t v124;

  v3 = a1[1];
  result = sub_21DC72068();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v94 = *a1;
      v95 = *a1 + 32;
      v96 = -1;
      for (i = 1; i != v3; ++i)
      {
        v98 = *(double *)(v94 + 40 * i + 32);
        v99 = v96;
        v100 = v95;
        do
        {
          if (v98 >= *(double *)v100)
            break;
          if (!v94)
            goto LABEL_141;
          v101 = v100 + 8;
          v102 = *(_QWORD *)(v100 + 8);
          v103 = *(_QWORD *)(v100 + 16);
          result = *(_QWORD *)(v100 + 24);
          v104 = *(_QWORD *)(v100 + 32);
          v105 = *(_OWORD *)(v100 - 16);
          *(_OWORD *)(v100 + 8) = *(_OWORD *)(v100 - 32);
          *(_OWORD *)(v100 + 24) = v105;
          v106 = *(double *)v100;
          *(_QWORD *)(v100 - 32) = v102;
          *(_QWORD *)(v100 - 24) = v103;
          *(_QWORD *)(v100 - 16) = result;
          *(_QWORD *)(v100 - 8) = v104;
          *(double *)v100 = v98;
          v100 -= 40;
          *(double *)(v101 + 32) = v106;
        }
        while (!__CFADD__(v99++, 1));
        v95 += 40;
        --v96;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v124 = v1;
  v117 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (double *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v108 = v12;
      v119 = v9;
      if (v13 >= 2)
      {
        v109 = *v117;
        do
        {
          v110 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v109)
            goto LABEL_145;
          v111 = v108;
          v112 = *(_QWORD *)&v108[16 * v110 + 32];
          v113 = *(_QWORD *)&v108[16 * v13 + 24];
          sub_21DC1F5A8((double *)(v109 + 40 * v112), (double *)(v109 + 40 * *(_QWORD *)&v108[16 * v13 + 16]), v109 + 40 * v113, __dst);
          if (v124)
            break;
          if (v113 < v112)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v111 = sub_21DC5B7D4((uint64_t)v111);
          if (v110 >= *((_QWORD *)v111 + 2))
            goto LABEL_134;
          v114 = &v111[16 * v110 + 32];
          *(_QWORD *)v114 = v112;
          *((_QWORD *)v114 + 1) = v113;
          v115 = *((_QWORD *)v111 + 2);
          if (v13 > v115)
            goto LABEL_135;
          memmove(&v111[16 * v13 + 16], &v111[16 * v13 + 32], 16 * (v115 - v13));
          v108 = v111;
          *((_QWORD *)v111 + 2) = v115 - 1;
          v13 = v115 - 1;
        }
        while (v115 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v119 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v119 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8AA0);
    v8 = sub_21DC71BB8();
    *(_QWORD *)(v8 + 16) = v7;
    v119 = v8;
    __dst = (double *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v118 = *a1 + 112;
  v116 = *a1 - 8;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v120 = v6;
  v121 = v3;
  v122 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(double *)(v11 + 40 * v10 + 32);
      v16 = *(double *)(v11 + 40 * v14 + 32);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (double *)(v118 + 40 * v14);
        v18 = v15;
        while (1)
        {
          v19 = v18;
          v18 = *v17;
          if (v15 < v16 == *v17 >= v19)
            break;
          ++v10;
          v17 += 5;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v20 = 40 * v10;
          v21 = 40 * v14;
          v22 = v10;
          v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_144;
              v24 = v11 + v21;
              v25 = *(_OWORD *)(v11 + v21);
              v26 = v11 + v20;
              v27 = *(_QWORD *)(v11 + v21 + 16);
              v28 = *(_QWORD *)(v11 + v21 + 24);
              v29 = *(_QWORD *)(v11 + v21 + 32);
              v30 = *(_QWORD *)(v11 + v20 - 8);
              v31 = *(_OWORD *)(v11 + v20 - 24);
              *(_OWORD *)v24 = *(_OWORD *)(v11 + v20 - 40);
              *(_OWORD *)(v24 + 16) = v31;
              *(_QWORD *)(v24 + 32) = v30;
              *(_OWORD *)(v26 - 40) = v25;
              *(_QWORD *)(v26 - 24) = v27;
              *(_QWORD *)(v26 - 16) = v28;
              *(_QWORD *)(v26 - 8) = v29;
            }
            ++v23;
            v20 -= 40;
            v21 += 40;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v32 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v32 >= v3)
      v32 = v3;
    if (v32 < v14)
      break;
    if (v10 != v32)
    {
      v33 = v116 + 40 * v10;
      do
      {
        v34 = *(double *)(v11 + 40 * v10 + 32);
        v35 = v14;
        v36 = v33;
        do
        {
          if (v34 >= *(double *)v36)
            break;
          if (!v11)
            goto LABEL_142;
          v37 = v36 + 8;
          v38 = *(_QWORD *)(v36 + 8);
          v39 = *(_QWORD *)(v36 + 16);
          v40 = *(_QWORD *)(v36 + 24);
          v41 = *(_QWORD *)(v36 + 32);
          v42 = *(_OWORD *)(v36 - 16);
          *(_OWORD *)(v36 + 8) = *(_OWORD *)(v36 - 32);
          *(_OWORD *)(v36 + 24) = v42;
          v43 = *(double *)v36;
          *(_QWORD *)(v36 - 32) = v38;
          *(_QWORD *)(v36 - 24) = v39;
          *(_QWORD *)(v36 - 16) = v40;
          *(_QWORD *)(v36 - 8) = v41;
          *(double *)v36 = v34;
          v36 -= 40;
          ++v35;
          *(double *)(v37 + 32) = v43;
        }
        while (v10 != v35);
        ++v10;
        v33 += 40;
      }
      while (v10 != v32);
      v10 = v32;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_21DC5B27C(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v45 = *((_QWORD *)v12 + 2);
    v44 = *((_QWORD *)v12 + 3);
    v13 = v45 + 1;
    v11 = v122;
    if (v45 >= v44 >> 1)
    {
      v11 = v122;
      v12 = sub_21DC5B27C((char *)(v44 > 1), v45 + 1, 1, v12);
    }
    *((_QWORD *)v12 + 2) = v13;
    v46 = v12 + 32;
    v47 = &v12[16 * v45 + 32];
    *(_QWORD *)v47 = v14;
    *((_QWORD *)v47 + 1) = v10;
    if (v45)
    {
      while (1)
      {
        v48 = v13 - 1;
        if (v13 >= 4)
        {
          v53 = &v46[16 * v13];
          v54 = *((_QWORD *)v53 - 8);
          v55 = *((_QWORD *)v53 - 7);
          v59 = __OFSUB__(v55, v54);
          v56 = v55 - v54;
          if (v59)
            goto LABEL_120;
          v58 = *((_QWORD *)v53 - 6);
          v57 = *((_QWORD *)v53 - 5);
          v59 = __OFSUB__(v57, v58);
          v51 = v57 - v58;
          v52 = v59;
          if (v59)
            goto LABEL_121;
          v60 = v13 - 2;
          v61 = &v46[16 * v13 - 32];
          v63 = *(_QWORD *)v61;
          v62 = *((_QWORD *)v61 + 1);
          v59 = __OFSUB__(v62, v63);
          v64 = v62 - v63;
          if (v59)
            goto LABEL_123;
          v59 = __OFADD__(v51, v64);
          v65 = v51 + v64;
          if (v59)
            goto LABEL_126;
          if (v65 >= v56)
          {
            v83 = &v46[16 * v48];
            v85 = *(_QWORD *)v83;
            v84 = *((_QWORD *)v83 + 1);
            v59 = __OFSUB__(v84, v85);
            v86 = v84 - v85;
            if (v59)
              goto LABEL_130;
            v76 = v51 < v86;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v77 = *((_QWORD *)v12 + 4);
            v78 = *((_QWORD *)v12 + 5);
            v59 = __OFSUB__(v78, v77);
            v70 = v78 - v77;
            v71 = v59;
            goto LABEL_77;
          }
          v50 = *((_QWORD *)v12 + 4);
          v49 = *((_QWORD *)v12 + 5);
          v59 = __OFSUB__(v49, v50);
          v51 = v49 - v50;
          v52 = v59;
        }
        if ((v52 & 1) != 0)
          goto LABEL_122;
        v60 = v13 - 2;
        v66 = &v46[16 * v13 - 32];
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        v69 = __OFSUB__(v67, v68);
        v70 = v67 - v68;
        v71 = v69;
        if (v69)
          goto LABEL_125;
        v72 = &v46[16 * v48];
        v74 = *(_QWORD *)v72;
        v73 = *((_QWORD *)v72 + 1);
        v59 = __OFSUB__(v73, v74);
        v75 = v73 - v74;
        if (v59)
          goto LABEL_128;
        if (__OFADD__(v70, v75))
          goto LABEL_129;
        if (v70 + v75 >= v51)
        {
          v76 = v51 < v75;
LABEL_83:
          if (v76)
            v48 = v60;
          goto LABEL_85;
        }
LABEL_77:
        if ((v71 & 1) != 0)
          goto LABEL_124;
        v79 = &v46[16 * v48];
        v81 = *(_QWORD *)v79;
        v80 = *((_QWORD *)v79 + 1);
        v59 = __OFSUB__(v80, v81);
        v82 = v80 - v81;
        if (v59)
          goto LABEL_127;
        if (v82 < v70)
          goto LABEL_15;
LABEL_85:
        v87 = v48 - 1;
        if (v48 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v88 = v12;
        v89 = &v46[16 * v87];
        v90 = *(_QWORD *)v89;
        v91 = &v46[16 * v48];
        v92 = *((_QWORD *)v91 + 1);
        sub_21DC1F5A8((double *)(v11 + 40 * *(_QWORD *)v89), (double *)(v11 + 40 * *(_QWORD *)v91), v11 + 40 * v92, __dst);
        if (v124)
          goto LABEL_93;
        if (v92 < v90)
          goto LABEL_117;
        if (v48 > *((_QWORD *)v88 + 2))
          goto LABEL_118;
        *(_QWORD *)v89 = v90;
        *(_QWORD *)&v46[16 * v87 + 8] = v92;
        v93 = *((_QWORD *)v88 + 2);
        if (v48 >= v93)
          goto LABEL_119;
        v12 = v88;
        v13 = v93 - 1;
        memmove(&v46[16 * v48], v91 + 16, 16 * (v93 - 1 - v48));
        *((_QWORD *)v88 + 2) = v93 - 1;
        v11 = v122;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v120;
    v3 = v121;
    if (v10 >= v121)
    {
      v9 = v119;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_21DC71FA8();
  __break(1u);
  return result;
}

uint64_t sub_21DC1F5A8(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  double *v13;
  double *v14;
  double *v15;
  __int128 v16;
  __int128 v17;
  double *v18;
  unint64_t v19;
  double *v20;
  double *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t result;
  char *v27;
  double *v28;
  double *v29;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = ((char *)a2 - (char *)__src) / 40;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  v29 = __src;
  v28 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -39)
    {
      if (__dst != a2 || &a2[5 * v11] <= __dst)
        memmove(__dst, a2, 40 * v11);
      v18 = &v4[5 * v11];
      v27 = (char *)v18;
      v29 = v6;
      if (v7 < v6 && v10 >= 40)
      {
        v19 = a3 - 40;
        do
        {
          v20 = (double *)(v19 + 40);
          if (*(v18 - 1) >= *(v6 - 1))
          {
            v27 = (char *)(v18 - 5);
            if (v20 < v18 || v19 >= (unint64_t)v18 || v20 != v18)
            {
              v24 = *(_OWORD *)(v18 - 5);
              v25 = *(_OWORD *)(v18 - 3);
              *(double *)(v19 + 32) = *(v18 - 1);
              *(_OWORD *)v19 = v24;
              *(_OWORD *)(v19 + 16) = v25;
            }
            v21 = v6;
            v18 -= 5;
            if (v6 <= v7)
              break;
          }
          else
          {
            v21 = v6 - 5;
            if (v20 != v6 || v19 >= (unint64_t)v6)
            {
              v22 = *(_OWORD *)v21;
              v23 = *(_OWORD *)(v6 - 3);
              *(double *)(v19 + 32) = *(v6 - 1);
              *(_OWORD *)v19 = v22;
              *(_OWORD *)(v19 + 16) = v23;
            }
            v29 = v6 - 5;
            if (v21 <= v7)
              break;
          }
          v19 -= 40;
          v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_40:
      sub_21DC5B420((void **)&v29, (const void **)&v28, &v27);
      return 1;
    }
  }
  else if (v8 >= -39)
  {
    if (__dst != __src || &__src[5 * v9] <= __dst)
      memmove(__dst, __src, 40 * v9);
    v12 = &v4[5 * v9];
    v27 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      v13 = v4;
      while (1)
      {
        if (v6[4] >= v13[4])
        {
          v4 = v13 + 5;
          v15 = v13;
          v14 = v6;
          if (v7 == v13)
          {
            v13 += 5;
            if (v7 < v4)
              goto LABEL_18;
          }
          else
          {
            v13 += 5;
          }
        }
        else
        {
          v14 = v6 + 5;
          v15 = v6;
          if (v7 == v6 && v7 < v14)
            goto LABEL_18;
        }
        v16 = *(_OWORD *)v15;
        v17 = *((_OWORD *)v15 + 1);
        v7[4] = v15[4];
        *(_OWORD *)v7 = v16;
        *((_OWORD *)v7 + 1) = v17;
LABEL_18:
        v7 += 5;
        if (v13 < v12)
        {
          v6 = v14;
          if ((unint64_t)v14 < a3)
            continue;
        }
        v28 = v4;
        v29 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC1F860(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_21DC58238(*a1, a1[1], a1[2], a1[3], a2, *a3, a3[1], a3[2], a3[3]);
}

uint64_t sub_21DC1F89C(uint64_t result, uint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  char v24;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v3 = 0;
    v36 = result + 32;
    v4 = MEMORY[0x24BEE4AF8];
    v34 = *(_QWORD *)(result + 16);
    while (1)
    {
      if (v3 <= v2)
        v5 = v2;
      else
        v5 = v3;
      v38 = v4;
      v35 = v5;
      while (2)
      {
        if (v3 == v5)
        {
          __break(1u);
          return result;
        }
        v6 = (uint64_t *)(v36 + 32 * v3);
        v7 = v6[2];
        v8 = v7;
        v9 = *v6;
        v10 = v6[1];
        v41 = v6[3];
        v39 = v3 + 1;
        if (*(_QWORD *)(*a2 + 16))
        {
          v40 = *a2;
          sub_21DC72134();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_21DC71B04();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_21DC71B04();
          swift_bridgeObjectRelease();
          v11 = sub_21DC72158();
          v12 = -1 << *(_BYTE *)(v40 + 32);
          v13 = v11 & ~v12;
          if (((*(_QWORD *)(v40 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
          {
            v14 = ~v12;
            v15 = *(_QWORD *)(v40 + 48);
            v16 = v7;
            v17 = v9;
            v18 = v10;
            v19 = v41;
            while (1)
            {
              v20 = (_QWORD *)(v15 + 32 * v13);
              v22 = v20[2];
              v21 = v20[3];
              v23 = *v20 == v17 && v20[1] == v18;
              if (v23 || (v24 = sub_21DC720A4(), v19 = v41, v18 = v10, v17 = v9, v16 = v8, (v24 & 1) != 0))
              {
                if (v22 == v16 && v21 == v19)
                  break;
                v26 = sub_21DC720A4();
                v19 = v41;
                v18 = v10;
                v17 = v9;
                v16 = v8;
                if ((v26 & 1) != 0)
                  break;
              }
              v13 = (v13 + 1) & v14;
              if (((*(_QWORD *)(v40 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
              {
                swift_bridgeObjectRelease();
                v2 = v34;
                v4 = v38;
                goto LABEL_25;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            result = swift_bridgeObjectRelease();
            v2 = v34;
            v5 = v35;
            v4 = v38;
            ++v3;
            if (v39 != v34)
              continue;
            return v4;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        break;
      }
LABEL_25:
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = sub_21DC4BB10(0, *(_QWORD *)(v4 + 16) + 1, 1);
      ++v3;
      v27 = v8;
      v28 = v9;
      v29 = v10;
      v31 = *(_QWORD *)(v4 + 16);
      v30 = *(_QWORD *)(v4 + 24);
      v32 = v41;
      if (v31 >= v30 >> 1)
      {
        result = sub_21DC4BB10(v30 > 1, v31 + 1, 1);
        v32 = v41;
        v29 = v10;
        v28 = v9;
        v27 = v8;
      }
      *(_QWORD *)(v4 + 16) = v31 + 1;
      v33 = (_QWORD *)(v4 + 32 * v31);
      v33[4] = v28;
      v33[5] = v29;
      v33[6] = v27;
      v33[7] = v32;
      if (v39 == v2)
        return v4;
    }
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_21DC1FBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v21 = sub_21DC71FCC();
  swift_bridgeObjectRelease();
  if (v21 < v2)
    goto LABEL_31;
LABEL_4:
  v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v7 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62)
    goto LABEL_34;
  v7 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 - v6;
  if (__OFADD__(v7, v5))
    goto LABEL_36;
LABEL_8:
  v9 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v9;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v7 = 1;
  }
  if (v9 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8)
    v12 = v8;
  swift_bridgeObjectRetain();
  *v3 = MEMORY[0x22079D214](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = v11 + 32;
  v14 = (char *)(v11 + 32 + 8 * v4);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A8930);
  swift_arrayDestroy();
  if (!v5)
    return sub_21DC71B94();
  if (!(*v3 >> 62))
  {
    v15 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v16 = v15 - v2;
    if (!__OFSUB__(v15, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v22 = sub_21DC71FCC();
  swift_bridgeObjectRelease();
  v16 = v22 - v2;
  if (__OFSUB__(v22, v2))
    goto LABEL_40;
LABEL_21:
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (char *)(v13 + 8 * v2);
    if (v4 != v2 || v14 >= &v17[8 * v16])
      memmove(v14, v17, 8 * v16);
    if (!(*v3 >> 62))
    {
      v18 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      v19 = v18 + v5;
      if (!__OFADD__(v18, v5))
      {
LABEL_27:
        *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) = v19;
        return sub_21DC71B94();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v23 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    v19 = v23 + v5;
    if (!__OFADD__(v23, v5))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for BiomeEventGraphsPublisher.SessionIDSubscriber()
{
  uint64_t result;

  result = qword_2553A8A80;
  if (!qword_2553A8A80)
    return swift_getSingletonMetadata();
  return result;
}

id sub_21DC1FEE4(uint64_t a1, double a2)
{
  _BYTE *v2;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_super v13;

  *(_QWORD *)&v2[OBJC_IVAR____TtCC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher19SessionIDSubscriber_latestRecievedTimestamp] = 0;
  v2[OBJC_IVAR____TtCC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher19SessionIDSubscriber_upstreamFinished] = 0;
  v5 = OBJC_IVAR____TtCC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher19SessionIDSubscriber_sessionBuilder;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8AA8);
  v6 = (_QWORD *)swift_allocObject();
  v7 = v2;
  v8 = MEMORY[0x24BEE4AF8];
  v6[2] = sub_21DC29D34(MEMORY[0x24BEE4AF8]);
  v6[3] = sub_21DC29E64(v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8AB0);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_21DC29FD8(v8);
  v6[4] = v9;
  v6[5] = sub_21DC29E70(v8);
  *(_QWORD *)&v2[v5] = v6;
  v10 = OBJC_IVAR____TtCC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher19SessionIDSubscriber_logicalClockBuilder;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8AB8);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_21DC29B0C(v8);
  *(_QWORD *)(v11 + 24) = sub_21DC29C1C(v8);
  *(_QWORD *)&v7[v10] = v11;
  sub_21DC208FC();
  sub_21DC71D80();
  sub_21DC719E4();
  *(_QWORD *)&v7[OBJC_IVAR____TtCC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher19SessionIDSubscriber_downstream] = a1;
  *(double *)&v7[OBJC_IVAR____TtCC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher19SessionIDSubscriber_graphSessionWindowLength] = a2;
  swift_unknownObjectRetain();

  v13.receiver = v7;
  v13.super_class = (Class)type metadata accessor for BiomeEventGraphsPublisher.SessionIDSubscriber();
  return objc_msgSendSuper2(&v13, sel_init);
}

uint64_t method lookup function for BiomeEventGraphsPublisher()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BiomeEventGraphsPublisher.__allocating_init(streams:windowLength:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_21DC200BC()
{
  return type metadata accessor for BiomeEventGraphsPublisher.SessionIDSubscriber();
}

uint64_t sub_21DC200C4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21DC719D8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_21DC20164(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21DC20194(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21DC201C4(uint64_t *a1)
{
  uint64_t v1;

  return sub_21DC58238(*a1, a1[1], a1[2], a1[3], *(_QWORD *)(v1 + 16), **(_QWORD **)(v1 + 24), *(_QWORD *)(*(_QWORD *)(v1 + 24) + 8), *(_QWORD *)(*(_QWORD *)(v1 + 24) + 16), *(_QWORD *)(*(_QWORD *)(v1 + 24) + 24));
}

BOOL sub_21DC201FC(double a1)
{
  uint64_t v1;

  return *(double *)(v1 + 16) > a1;
}

uint64_t sub_21DC2020C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, double))
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  char v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  _QWORD v27[4];

  v23 = (unint64_t *)result;
  v24 = 0;
  v6 = 0;
  v25 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v26 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v11 = v10 | (v6 << 6);
      goto LABEL_5;
    }
    v18 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v26)
      return sub_21DC5BA7C(v23, a2, v24, a3);
    v19 = *(_QWORD *)(v25 + 8 * v18);
    ++v6;
    if (!v19)
    {
      v6 = v18 + 1;
      if (v18 + 1 >= v26)
        return sub_21DC5BA7C(v23, a2, v24, a3);
      v19 = *(_QWORD *)(v25 + 8 * v6);
      if (!v19)
      {
        v6 = v18 + 2;
        if (v18 + 2 >= v26)
          return sub_21DC5BA7C(v23, a2, v24, a3);
        v19 = *(_QWORD *)(v25 + 8 * v6);
        if (!v19)
          break;
      }
    }
LABEL_20:
    v9 = (v19 - 1) & v19;
    v11 = __clz(__rbit64(v19)) + (v6 << 6);
LABEL_5:
    v12 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 32 * v11);
    v13 = v12[1];
    v14 = v12[2];
    v15 = v12[3];
    v16 = *(double *)(*(_QWORD *)(a3 + 56) + 8 * v11);
    v27[0] = *v12;
    v27[1] = v13;
    v27[2] = v14;
    v27[3] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = a4(v27, v16);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
    {
      *(unint64_t *)((char *)v23 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
        return sub_21DC5BA7C(v23, a2, v24, a3);
      }
    }
  }
  v20 = v18 + 3;
  if (v20 >= v26)
    return sub_21DC5BA7C(v23, a2, v24, a3);
  v19 = *(_QWORD *)(v25 + 8 * v20);
  if (v19)
  {
    v6 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v6 >= v26)
      return sub_21DC5BA7C(v23, a2, v24, a3);
    v19 = *(_QWORD *)(v25 + 8 * v6);
    ++v20;
    if (v19)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_21DC2041C(uint64_t isStackAllocationSafe, uint64_t (*a2)(_QWORD *, double), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x24BDAC8D0];
  v7 = *(_BYTE *)(isStackAllocationSafe + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, a2);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_21DC2020C((uint64_t)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v6, a2);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_21DC2020C((uint64_t)v11, v8, v6, a2);
    MEMORY[0x22079DA24](v11, -1, -1);
  }
  return a3;
}

uint64_t sub_21DC2058C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  char *i;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v38 = a2;
  v3 = sub_21DC715F4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BEE4AF8];
  v12 = *(_QWORD *)(a1 + 56);
  v34 = a1 + 56;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v37 = OBJC_IVAR____TtCC26AIMLInstrumentationStreams25BiomeEventGraphsPublisher19SessionIDSubscriber_logicalClockBuilder;
  v35 = (unint64_t)(v13 + 63) >> 6;
  v39 = a1;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  for (i = v11; ; v11 = i)
  {
    if (v15)
    {
      v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v35)
      goto LABEL_29;
    v22 = *(_QWORD *)(v34 + 8 * v21);
    ++v17;
    if (!v22)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_29;
      v22 = *(_QWORD *)(v34 + 8 * v17);
      if (!v22)
      {
        v17 = v21 + 2;
        if (v21 + 2 >= v35)
          goto LABEL_29;
        v22 = *(_QWORD *)(v34 + 8 * v17);
        if (!v22)
        {
          v17 = v21 + 3;
          if (v21 + 3 >= v35)
            goto LABEL_29;
          v22 = *(_QWORD *)(v34 + 8 * v17);
          if (!v22)
            break;
        }
      }
    }
LABEL_23:
    v15 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v11, *(_QWORD *)(v39 + 48) + *(_QWORD *)(v4 + 72) * v20, v3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v11, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v11, 1, v3) == 1)
      goto LABEL_30;
    v24 = v17;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v11, v3);
    v25 = *(_QWORD *)(v38 + v37);
    v26 = v7;
    v27 = sub_21DC715A0();
    v29 = v28;
    swift_beginAccess();
    v30 = *(_QWORD *)(v25 + 24);
    if (!*(_QWORD *)(v30 + 16))
      goto LABEL_4;
    swift_bridgeObjectRetain();
    v31 = sub_21DC0A568(v27, v29);
    if ((v32 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_4:
      swift_bridgeObjectRelease();
      v18 = MEMORY[0x24BEE4AF8];
      goto LABEL_5;
    }
    v18 = *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v31);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v17 = v24;
    v7 = v26;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v26, v3);
    result = sub_21DC52E34(v18);
  }
  v23 = v21 + 4;
  if (v23 >= v35)
  {
LABEL_29:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v11, 1, 1, v3);
LABEL_30:
    swift_release();
    return v40;
  }
  v22 = *(_QWORD *)(v34 + 8 * v23);
  if (v22)
  {
    v17 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v17 >= v35)
      goto LABEL_29;
    v22 = *(_QWORD *)(v34 + 8 * v17);
    ++v23;
    if (v22)
      goto LABEL_23;
  }
LABEL_32:
  __break(1u);
  return result;
}

unint64_t sub_21DC208FC()
{
  unint64_t result;

  result = qword_2553A8AC0;
  if (!qword_2553A8AC0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2553A8AC0);
  }
  return result;
}

uint64_t sub_21DC20938(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v21 = sub_21DC71FCC();
  swift_bridgeObjectRelease();
  if (v21 < v2)
    goto LABEL_31;
LABEL_4:
  v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v7 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62)
    goto LABEL_34;
  v7 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 - v6;
  if (__OFADD__(v7, v5))
    goto LABEL_36;
LABEL_8:
  v9 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v9;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v7 = 1;
  }
  if (v9 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8)
    v12 = v8;
  swift_bridgeObjectRetain();
  *v3 = MEMORY[0x22079D214](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = v11 + 32;
  v14 = (char *)(v11 + 32 + 8 * v4);
  type metadata accessor for EventGraph();
  swift_arrayDestroy();
  if (!v5)
    return sub_21DC71B94();
  if (!(*v3 >> 62))
  {
    v15 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v16 = v15 - v2;
    if (!__OFSUB__(v15, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v22 = sub_21DC71FCC();
  swift_bridgeObjectRelease();
  v16 = v22 - v2;
  if (__OFSUB__(v22, v2))
    goto LABEL_40;
LABEL_21:
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (char *)(v13 + 8 * v2);
    if (v4 != v2 || v14 >= &v17[8 * v16])
      memmove(v14, v17, 8 * v16);
    if (!(*v3 >> 62))
    {
      v18 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      v19 = v18 + v5;
      if (!__OFADD__(v18, v5))
      {
LABEL_27:
        *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) = v19;
        return sub_21DC71B94();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v23 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    v19 = v23 + v5;
    if (!__OFADD__(v23, v5))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_21DC72008();
  __break(1u);
  return result;
}

void *sub_21DC20C38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  void *result;
  void *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  _OWORD v62[2];
  __int128 v63;
  uint64_t v64;
  _BYTE v65[40];
  id v66;
  id v67;
  _BYTE v68[16];
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v60 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v58 - v7;
  v9 = sub_21DC715F4();
  v10 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v58 - v16;
  sub_21DC0C290(v0, (uint64_t)v68, &qword_2553A8AD0);
  sub_21DC0C290((uint64_t)v68, (uint64_t)&v69, &qword_2553A8AD0);
  if ((v70 & 1) != 0)
  {
    v18 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v63 = 0xD000000000000012;
    *((_QWORD *)&v63 + 1) = 0x800000021DC76650;
    sub_21DC71E88();
    v19 = *(_QWORD *)(v1 + 16);
    v20 = *(_QWORD *)(v1 + 24);
    v64 = v18;
    if (!v20)
      v19 = 0x6E776F6E6B6E55;
    v21 = 0xE700000000000000;
    if (v20)
      v21 = v20;
    *(_QWORD *)&v63 = v19;
    *((_QWORD *)&v63 + 1) = v21;
    sub_21DC13D80(&v63, v62);
    swift_bridgeObjectRetain();
  }
  else
  {
    v22 = v69;
    *(_QWORD *)&v63 = 0x6E6F697461727564;
    *((_QWORD *)&v63 + 1) = 0xEF73646E6F636553;
    sub_21DC71E88();
    v64 = MEMORY[0x24BEE13C8];
    *(_QWORD *)&v63 = v22;
    sub_21DC13D80(&v63, v62);
  }
  v23 = MEMORY[0x24BEE4B00];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v72 = v23;
  sub_21DC3CAE8(v62, (uint64_t)v65, isUniquelyReferenced_nonNull_native);
  v25 = v72;
  swift_bridgeObjectRelease();
  sub_21DC0C310((uint64_t)v65);
  sub_21DC0C290(v1 + 40, (uint64_t)&v67, &qword_2553A8AD8);
  sub_21DC0C290((uint64_t)&v67, (uint64_t)&v71, &qword_2553A8AD8);
  if (v71)
  {
    v59 = v14;
    *(_QWORD *)&v63 = 0x656D6954646E65;
    *((_QWORD *)&v63 + 1) = 0xE700000000000000;
    sub_21DC213B8(&v67);
    v26 = MEMORY[0x24BEE0D00];
    sub_21DC71E88();
    result = (void *)sub_21DC71714();
    if (result)
    {
      v28 = result;
      v29 = sub_21DC717BC();

      v64 = MEMORY[0x24BEE4568];
      *(_QWORD *)&v63 = v29;
      sub_21DC13D80(&v63, v62);
      v30 = swift_isUniquelyReferenced_nonNull_native();
      v72 = v25;
      sub_21DC3CAE8(v62, (uint64_t)v65, v30);
      v31 = v72;
      swift_bridgeObjectRelease();
      sub_21DC0C310((uint64_t)v65);
      sub_21DC716F0();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {
        sub_21DC19DF4((uint64_t)v8);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v8, v9);
        *(_QWORD *)&v63 = 0x6449646E65;
        *((_QWORD *)&v63 + 1) = 0xE500000000000000;
        sub_21DC71E88();
        v32 = sub_21DC715A0();
        v64 = v26;
        *(_QWORD *)&v63 = v32;
        *((_QWORD *)&v63 + 1) = v33;
        sub_21DC13D80(&v63, v62);
        v34 = swift_isUniquelyReferenced_nonNull_native();
        v72 = v31;
        sub_21DC3CAE8(v62, (uint64_t)v65, v34);
        v31 = v72;
        swift_bridgeObjectRelease();
        sub_21DC0C310((uint64_t)v65);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
      }
      v14 = v59;
      *(_QWORD *)&v63 = 0x65707954646E65;
      *((_QWORD *)&v63 + 1) = 0xE700000000000000;
      v35 = MEMORY[0x24BEE0D00];
      sub_21DC71E88();
      result = (void *)sub_21DC716D8();
      if (result)
      {
        v36 = result;
        v37 = objc_msgSend(result, sel_qualifiedMessageName);

        v38 = sub_21DC71AB0();
        v40 = v39;

        v64 = v35;
        *(_QWORD *)&v63 = v38;
        *((_QWORD *)&v63 + 1) = v40;
        sub_21DC13D80(&v63, v62);
        v41 = swift_isUniquelyReferenced_nonNull_native();
        v72 = v31;
        sub_21DC3CAE8(v62, (uint64_t)v65, v41);
        v25 = v72;
        swift_bridgeObjectRelease();
        sub_21DC0C310((uint64_t)v65);
        sub_21DC213E0(&v67);
        goto LABEL_15;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
LABEL_15:
  sub_21DC0C290(v1 + 32, (uint64_t)&v66, &qword_2553A8AD8);
  sub_21DC0C290((uint64_t)&v66, (uint64_t)&v72, &qword_2553A8AD8);
  if (!v72)
    return (void *)v25;
  *(_QWORD *)&v63 = 0x6D69547472617473;
  *((_QWORD *)&v63 + 1) = 0xE900000000000065;
  sub_21DC213B8(&v66);
  v42 = MEMORY[0x24BEE0D00];
  sub_21DC71E88();
  result = (void *)sub_21DC71714();
  if (!result)
    goto LABEL_25;
  v43 = result;
  v44 = sub_21DC717BC();

  v64 = MEMORY[0x24BEE4568];
  *(_QWORD *)&v63 = v44;
  sub_21DC13D80(&v63, v62);
  v45 = swift_isUniquelyReferenced_nonNull_native();
  v61 = v25;
  sub_21DC3CAE8(v62, (uint64_t)v65, v45);
  v46 = v61;
  swift_bridgeObjectRelease();
  sub_21DC0C310((uint64_t)v65);
  v47 = (uint64_t)v60;
  sub_21DC716F0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v47, 1, v9) == 1)
  {
    sub_21DC19DF4(v47);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v14, v47, v9);
    *(_QWORD *)&v63 = 0x64497472617473;
    *((_QWORD *)&v63 + 1) = 0xE700000000000000;
    sub_21DC71E88();
    v48 = sub_21DC715A0();
    v64 = v42;
    *(_QWORD *)&v63 = v48;
    *((_QWORD *)&v63 + 1) = v49;
    sub_21DC13D80(&v63, v62);
    v50 = swift_isUniquelyReferenced_nonNull_native();
    v61 = v46;
    sub_21DC3CAE8(v62, (uint64_t)v65, v50);
    v46 = v61;
    swift_bridgeObjectRelease();
    sub_21DC0C310((uint64_t)v65);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  }
  *(_QWORD *)&v63 = 0x7079547472617473;
  *((_QWORD *)&v63 + 1) = 0xE900000000000065;
  v51 = MEMORY[0x24BEE0D00];
  sub_21DC71E88();
  result = (void *)sub_21DC716D8();
  if (result)
  {
    v52 = result;
    v53 = objc_msgSend(result, sel_qualifiedMessageName);

    v54 = sub_21DC71AB0();
    v56 = v55;

    v64 = v51;
    *(_QWORD *)&v63 = v54;
    *((_QWORD *)&v63 + 1) = v56;
    sub_21DC13D80(&v63, v62);
    v57 = swift_isUniquelyReferenced_nonNull_native();
    v61 = v46;
    sub_21DC3CAE8(v62, (uint64_t)v65, v57);
    v25 = v61;
    swift_bridgeObjectRelease();
    sub_21DC0C310((uint64_t)v65);
    sub_21DC213E0(&v66);
    return (void *)v25;
  }
LABEL_26:
  __break(1u);
  return result;
}

id *sub_21DC213B8(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

id *sub_21DC213E0(id *a1)
{

  return a1;
}

ValueMetadata *type metadata accessor for InstrumentationStreamsError()
{
  return &type metadata for InstrumentationStreamsError;
}

uint64_t TranscriptProtoEvent.rawTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_21DC71588();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t TranscriptProtoEvent.rawSessionID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TranscriptProtoEvent() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for TranscriptProtoEvent()
{
  uint64_t result;

  result = qword_2553A8B68;
  if (!qword_2553A8B68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t TranscriptProtoEvent.clientRequestID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TranscriptProtoEvent() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptProtoEvent.eventId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TranscriptProtoEvent() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptProtoEvent.eventType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TranscriptProtoEvent() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_21DC2157C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v54 = a2;
  v52 = sub_21DC715F4();
  v50 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52, v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_21DC718C4();
  v49 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51, v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A81A8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_21DC71588();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (int *)type metadata accessor for TranscriptProtoEvent();
  v53 = *((_QWORD *)v18 - 1);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1;
  sub_21DC718E8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    v23 = sub_21DC7190C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(a1, v23);
    sub_21DC0892C((uint64_t)v12);
    v24 = 1;
    v25 = v54;
  }
  else
  {
    v26 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v48 = v17;
    v26(v17, v12, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v21, v17, v13);
    sub_21DC718D0();
    sub_21DC718B8();
    v49 = *(_QWORD *)(v49 + 8);
    v27 = v51;
    ((void (*)(char *, uint64_t))v49)(v8, v51);
    v28 = sub_21DC715A0();
    v30 = v29;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v5, v52);
    v31 = (uint64_t *)&v21[v18[5]];
    *v31 = v28;
    v31[1] = v30;
    sub_21DC718D0();
    v32 = sub_21DC718AC();
    v34 = v33;
    ((void (*)(char *, uint64_t))v49)(v8, v27);
    v35 = (uint64_t *)&v21[v18[6]];
    *v35 = v32;
    v35[1] = v34;
    v36 = sub_21DC718F4();
    v37 = (uint64_t *)&v21[v18[7]];
    *v37 = v36;
    v37[1] = v38;
    v39 = sub_21DC71900();
    v41 = v40;
    v42 = sub_21DC7190C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v22, v42);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v48, v13);
    v43 = (uint64_t *)&v21[v18[8]];
    *v43 = v39;
    v43[1] = v41;
    v44 = (uint64_t)v21;
    v45 = v54;
    sub_21DC22CA0(v44, v54);
    v24 = 0;
    v25 = v45;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v53 + 56))(v25, v24, 1, v18);
}

uint64_t sub_21DC21894(char a1)
{
  return *(_QWORD *)&aRawtimesrawses[8 * a1];
}

BOOL sub_21DC218B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_21DC218C8()
{
  sub_21DC72134();
  sub_21DC72140();
  return sub_21DC72158();
}

uint64_t sub_21DC2190C()
{
  return sub_21DC72140();
}

uint64_t sub_21DC21934()
{
  sub_21DC72134();
  sub_21DC72140();
  return sub_21DC72158();
}

uint64_t sub_21DC21974()
{
  char *v0;

  return sub_21DC21894(*v0);
}

uint64_t sub_21DC2197C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21DC22A64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21DC219A0()
{
  return 0;
}

void sub_21DC219AC(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_21DC219B8()
{
  sub_21DC21BF0();
  return sub_21DC72188();
}

uint64_t sub_21DC219E0()
{
  sub_21DC21BF0();
  return sub_21DC72194();
}

uint64_t TranscriptProtoEvent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8AE0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21DC21BF0();
  sub_21DC7217C();
  v9[15] = 0;
  sub_21DC71588();
  sub_21DC13D04(&qword_2553A8AF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_21DC72050();
  if (!v1)
  {
    type metadata accessor for TranscriptProtoEvent();
    v9[14] = 1;
    sub_21DC72044();
    v9[13] = 2;
    sub_21DC72044();
    v9[12] = 3;
    sub_21DC72044();
    v9[11] = 4;
    sub_21DC72044();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_21DC21BF0()
{
  unint64_t result;

  result = qword_2553A8AE8;
  if (!qword_2553A8AE8)
  {
    result = MEMORY[0x22079D964](&unk_21DC73944, &type metadata for TranscriptProtoEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2553A8AE8);
  }
  return result;
}

uint64_t TranscriptProtoEvent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  _QWORD *v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;

  v31 = a2;
  v32 = sub_21DC71588();
  v3 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32, v4);
  v34 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8AF8);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33, v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for TranscriptProtoEvent();
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21DC21BF0();
  v35 = v9;
  v14 = (uint64_t)v36;
  sub_21DC72170();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v15 = v6;
  v36 = a1;
  v41 = 0;
  sub_21DC13D04(&qword_2553A8B00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v16 = v32;
  sub_21DC72038();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v13, v34, v16);
  v40 = 1;
  v17 = sub_21DC7202C();
  v18 = (uint64_t *)&v13[v10[5]];
  *v18 = v17;
  v18[1] = v19;
  v39 = 2;
  v20 = sub_21DC7202C();
  v21 = (uint64_t *)&v13[v10[6]];
  *v21 = v20;
  v21[1] = v22;
  v38 = 3;
  v23 = sub_21DC7202C();
  v24 = (uint64_t *)&v13[v10[7]];
  *v24 = v23;
  v24[1] = v25;
  v37 = 4;
  v26 = sub_21DC7202C();
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v35, v33);
  v29 = (uint64_t *)&v13[v10[8]];
  *v29 = v26;
  v29[1] = v28;
  sub_21DC21FF0((uint64_t)v13, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return sub_21DC22034((uint64_t)v13);
}

uint64_t sub_21DC21FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21DC22034(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TranscriptProtoEvent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21DC22070@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TranscriptProtoEvent.init(from:)(a1, a2);
}

uint64_t sub_21DC22084(_QWORD *a1)
{
  return TranscriptProtoEvent.encode(to:)(a1);
}

BOOL sub_21DC220A4()
{
  return (_s26AIMLInstrumentationStreams20TranscriptProtoEventV1loiySbAC_ACtFZ_0() & 1) == 0;
}

BOOL sub_21DC220CC()
{
  return (_s26AIMLInstrumentationStreams20TranscriptProtoEventV1loiySbAC_ACtFZ_0() & 1) == 0;
}

uint64_t sub_21DC220E8()
{
  return _s26AIMLInstrumentationStreams20TranscriptProtoEventV1loiySbAC_ACtFZ_0();
}

uint64_t _s26AIMLInstrumentationStreams20TranscriptProtoEventV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  BOOL v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  if ((sub_21DC71570() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for TranscriptProtoEvent();
  v5 = v4[5];
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (v10 = sub_21DC720A4(), result = 0, (v10 & 1) != 0))
  {
    v12 = v4[6];
    v13 = *(_QWORD *)(a1 + v12);
    v14 = *(_QWORD *)(a1 + v12 + 8);
    v15 = (_QWORD *)(a2 + v12);
    v16 = v13 == *v15 && v14 == v15[1];
    if (v16 || (v17 = sub_21DC720A4(), result = 0, (v17 & 1) != 0))
    {
      v18 = v4[7];
      v19 = *(_QWORD *)(a1 + v18);
      v20 = *(_QWORD *)(a1 + v18 + 8);
      v21 = (_QWORD *)(a2 + v18);
      v22 = v19 == *v21 && v20 == v21[1];
      if (v22 || (v23 = sub_21DC720A4(), result = 0, (v23 & 1) != 0))
      {
        v24 = v4[8];
        v25 = *(_QWORD *)(a1 + v24);
        v26 = *(_QWORD *)(a1 + v24 + 8);
        v27 = (_QWORD *)(a2 + v24);
        if (v25 == *v27 && v26 == v27[1])
          return 1;
        else
          return sub_21DC720A4();
      }
    }
  }
  return result;
}

uint64_t sub_21DC22214()
{
  return sub_21DC13D04(&qword_2553A8B08, (uint64_t (*)(uint64_t))type metadata accessor for TranscriptProtoEvent, (uint64_t)&protocol conformance descriptor for TranscriptProtoEvent);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21DC71588();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (uint64_t *)((char *)a1 + v17);
    v22 = (uint64_t *)((char *)a2 + v17);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TranscriptProtoEvent(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21DC71588();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TranscriptProtoEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v6 = sub_21DC71588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (_QWORD *)(a1 + v16);
  v21 = (_QWORD *)(a2 + v16);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  v6 = sub_21DC71588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_21DC71588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_21DC71588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21DC22690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_21DC71588();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21DC2271C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_21DC71588();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_21DC22798()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21DC71588();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for StreamType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoEvent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_21DC228FC + 4 * byte_21DC73755[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_21DC22930 + 4 * asc_21DC73750[v4]))();
}

uint64_t sub_21DC22930(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21DC22938(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21DC22940);
  return result;
}

uint64_t sub_21DC2294C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21DC22954);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_21DC22958(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21DC22960(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21DC2296C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_21DC22974(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptProtoEvent.CodingKeys()
{
  return &type metadata for TranscriptProtoEvent.CodingKeys;
}

unint64_t sub_21DC22990()
{
  unint64_t result;

  result = qword_2553A8BB0;
  if (!qword_2553A8BB0)
  {
    result = MEMORY[0x22079D964](&unk_21DC7391C, &type metadata for TranscriptProtoEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2553A8BB0);
  }
  return result;
}

unint64_t sub_21DC229D8()
{
  unint64_t result;

  result = qword_2553A8BB8;
  if (!qword_2553A8BB8)
  {
    result = MEMORY[0x22079D964](&unk_21DC7388C, &type metadata for TranscriptProtoEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2553A8BB8);
  }
  return result;
}

unint64_t sub_21DC22A20()
{
  unint64_t result;

  result = qword_2553A8BC0;
  if (!qword_2553A8BC0)
  {
    result = MEMORY[0x22079D964](&unk_21DC738B4, &type metadata for TranscriptProtoEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2553A8BC0);
  }
  return result;
}

uint64_t sub_21DC22A64(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x73656D6954776172 && a2 == 0xEC000000706D6174;
  if (v3 || (sub_21DC720A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6973736553776172 && a2 == 0xEC00000044496E6FLL || (sub_21DC720A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6552746E65696C63 && a2 == 0xEF44497473657571 || (sub_21DC720A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6449746E657665 && a2 == 0xE700000000000000 || (sub_21DC720A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x707954746E657665 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_21DC720A4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_21DC22CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t static InstrumentationStreamsFactoryBridge.construct(filter:startTime:endTime:maxEvents:lastN:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, double, double);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, double, double))((char *)&dword_2553A8BD0 + dword_2553A8BD0);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_21DC24F18;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_21DC22EC8(void *a1, uint64_t a2, uint64_t a3, void *aBlock, double a5, double a6)
{
  _QWORD *v6;
  id v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, double, double);

  v6[2] = a1;
  v6[3] = _Block_copy(aBlock);
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, double, double))((char *)&dword_2553A8BD0 + dword_2553A8BD0);
  v12 = a1;
  v13 = (_QWORD *)swift_task_alloc();
  v6[4] = v13;
  *v13 = v6;
  v13[1] = sub_21DC24F14;
  return v15((uint64_t)v12, a2, a3, a5, a6);
}

uint64_t static InstrumentationStreamsFactoryBridge.construct(filter:startTime:endTime:maxEvents:lastN:storageURL:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, double, double);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, double, double))((char *)&dword_2553A8BE0
                                                                                   + dword_2553A8BE0);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_21DC24F18;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_21DC2317C(void *a1, uint64_t a2, uint64_t a3, double a4, double a5, uint64_t a6, const void *a7)
{
  _QWORD *v7;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, double, double);

  v7[2] = a1;
  v14 = sub_21DC714C8();
  v7[3] = v14;
  v7[4] = *(_QWORD *)(v14 - 8);
  v15 = swift_task_alloc();
  v7[5] = v15;
  v7[6] = _Block_copy(a7);
  sub_21DC714B0();
  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, double, double))((char *)&dword_2553A8BE0
                                                                                   + dword_2553A8BE0);
  v16 = a1;
  v17 = (_QWORD *)swift_task_alloc();
  v7[7] = v17;
  *v17 = v7;
  v17[1] = sub_21DC24F1C;
  return v19((uint64_t)v16, a2, a3, v15, a4, a5);
}

uint64_t static InstrumentationStreamsFactoryBridge.construct(filter:startTimeRelativeToNow:)(uint64_t a1, double a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, double);

  v7 = (uint64_t (*)(uint64_t, double))((char *)&dword_2553A8BF0 + dword_2553A8BF0);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21DC24F18;
  return v7(a1, a2);
}

uint64_t sub_21DC23428(void *a1, void *aBlock, double a3)
{
  _QWORD *v3;
  id v6;
  _QWORD *v7;
  uint64_t (*v9)(id, double);

  v3[2] = a1;
  v3[3] = _Block_copy(aBlock);
  v9 = (uint64_t (*)(id, double))((char *)&dword_2553A8BF0 + dword_2553A8BF0);
  v6 = a1;
  v7 = (_QWORD *)swift_task_alloc();
  v3[4] = v7;
  *v7 = v3;
  v7[1] = sub_21DC234B0;
  return v9(v6, a3);
}

uint64_t sub_21DC234B0(void *a1)
{
  void *v1;
  uint64_t *v2;
  void *v3;
  void *v5;
  uint64_t v6;
  void (**v7)(_QWORD, _QWORD, _QWORD);
  void *v8;

  v3 = v1;
  v5 = *(void **)(*v2 + 16);
  v6 = *v2;
  swift_task_dealloc();

  v7 = *(void (***)(_QWORD, _QWORD, _QWORD))(v6 + 24);
  if (v3)
  {
    v8 = (void *)sub_21DC71498();

    ((void (**)(_QWORD, _QWORD, void *))v7)[2](v7, 0, v8);
    _Block_release(v7);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v7)[2](v7, a1, 0);
    _Block_release(v7);

  }
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t static InstrumentationStreamsFactoryBridge.construct(filter:startTimeRelativeToNow:storageURL:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, double);

  v9 = (uint64_t (*)(uint64_t, uint64_t, double))((char *)&dword_2553A8C00 + dword_2553A8C00);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_21DC235E0;
  return v9(a1, a2, a3);
}

uint64_t sub_21DC235E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_21DC2377C(void *a1, double a2, uint64_t a3, const void *a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  uint64_t (*v13)(id, uint64_t, double);

  v4[2] = a1;
  v8 = sub_21DC714C8();
  v4[3] = v8;
  v4[4] = *(_QWORD *)(v8 - 8);
  v9 = swift_task_alloc();
  v4[5] = v9;
  v4[6] = _Block_copy(a4);
  sub_21DC714B0();
  v13 = (uint64_t (*)(id, uint64_t, double))((char *)&dword_2553A8C00 + dword_2553A8C00);
  v10 = a1;
  v11 = (_QWORD *)swift_task_alloc();
  v4[7] = v11;
  *v11 = v4;
  v11[1] = sub_21DC23850;
  return v13(v10, v9, a2);
}

uint64_t sub_21DC23850(void *a1)
{
  void *v1;
  uint64_t *v2;
  void *v3;
  uint64_t v5;
  void (**v6)(_QWORD, _QWORD, _QWORD);
  void *v7;
  void *v8;

  v3 = v1;
  v5 = *v2;
  swift_task_dealloc();
  v6 = *(void (***)(_QWORD, _QWORD, _QWORD))(v5 + 48);
  v7 = *(void **)(v5 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v5 + 32) + 8))(*(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 24));

  if (v3)
  {
    v8 = (void *)sub_21DC71498();

    ((void (**)(_QWORD, _QWORD, void *))v6)[2](v6, 0, v8);
    _Block_release(v6);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, a1, 0);
    _Block_release(v6);

  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

id InstrumentationStreamsFactoryBridge.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id InstrumentationStreamsFactoryBridge.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InstrumentationStreamsFactoryBridge();
  return objc_msgSendSuper2(&v2, sel_init);
}

id InstrumentationStreamsFactoryBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InstrumentationStreamsFactoryBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_21DC239E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_21DC0DD34;
  return v6();
}

uint64_t sub_21DC23A38(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_21DC0DD34;
  return v7();
}

uint64_t sub_21DC23A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_21DC71C3C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_21DC71C30();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_21DC07C84(a1, &qword_2553A8430);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_21DC71BE8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_21DC23BD8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21DC23C3C;
  return v6(a1);
}

uint64_t sub_21DC23C3C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21DC23C88(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 96) = a2;
  *(_QWORD *)(v5 + 104) = a3;
  *(double *)(v5 + 80) = a4;
  *(double *)(v5 + 88) = a5;
  *(_QWORD *)(v5 + 72) = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_253F35F70);
  *(_QWORD *)(v5 + 112) = swift_task_alloc();
  *(_QWORD *)(v5 + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8CC0);
  *(_QWORD *)(v5 + 128) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21DC23D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v11;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(double *)(v0 + 80);
  v3 = *(double *)(v0 + 88);
  v11 = v4 < 0.0;
  if (v4 >= 0.0)
    v5 = *(_QWORD *)(v0 + 80);
  else
    v5 = 0;
  v6 = v3 < 0.0;
  if (v3 >= 0.0)
    v7 = *(_QWORD *)(v0 + 88);
  else
    v7 = 0;
  type metadata accessor for InstrumentationStreamsFactory();
  v8 = sub_21DC714C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v1, 1, 1, v8);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v9;
  *v9 = v0;
  v9[1] = sub_21DC23E20;
  return static InstrumentationStreamsFactory.construct(filter:startTime:endTime:maxEvents:lastN:storageURL:)(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 72), v5, v11, v7, v6, v2 & ~(v2 >> 63), v2 < 0);
}

uint64_t sub_21DC23E20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  sub_21DC07C84(v2, qword_253F35F70);
  return swift_task_switch();
}

uint64_t sub_21DC23E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *boxed_opaque_existential_1;
  objc_class *v3;
  id v4;
  id v5;

  v1 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v0 + 48) = &off_24E1A61D0;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16));
  sub_21DC24ECC(v1, (uint64_t)boxed_opaque_existential_1);
  v3 = (objc_class *)type metadata accessor for InstrumentationStreamsProviderBridge();
  v4 = objc_allocWithZone(v3);
  sub_21DC24E88(v0 + 16, (uint64_t)v4 + OBJC_IVAR___ISStreamsProvider_provider);
  *(_QWORD *)(v0 + 56) = v4;
  *(_QWORD *)(v0 + 64) = v3;
  v5 = objc_msgSendSuper2((objc_super *)(v0 + 56), sel_init);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_21DC07C84(v1, &qword_2553A8CC0);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(id))(v0 + 8))(v5);
}

uint64_t sub_21DC23F74()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21DC23FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 104) = a3;
  *(_QWORD *)(v6 + 112) = a4;
  *(_QWORD *)(v6 + 96) = a2;
  *(double *)(v6 + 80) = a5;
  *(double *)(v6 + 88) = a6;
  *(_QWORD *)(v6 + 72) = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_253F35F70);
  *(_QWORD *)(v6 + 120) = swift_task_alloc();
  *(_QWORD *)(v6 + 128) = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8CC0);
  *(_QWORD *)(v6 + 136) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21DC24044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  char v13;
  char v14;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(double *)(v0 + 80);
  v4 = *(double *)(v0 + 88);
  v14 = v5 < 0.0;
  v6 = *(_QWORD *)&v5;
  if (v5 < 0.0)
    v6 = 0;
  v12 = v6;
  v13 = v4 < 0.0;
  if (v4 >= 0.0)
    v7 = *(_QWORD *)(v0 + 88);
  else
    v7 = 0;
  type metadata accessor for InstrumentationStreamsFactory();
  v8 = sub_21DC714C8();
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v1, v2, v8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v1, 0, 1, v8);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v10;
  *v10 = v0;
  v10[1] = sub_21DC2416C;
  return static InstrumentationStreamsFactory.construct(filter:startTime:endTime:maxEvents:lastN:storageURL:)(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 72), v12, v14, v7, v13, v3 & ~(v3 >> 63), v3 < 0);
}

uint64_t sub_21DC2416C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  sub_21DC07C84(v2, qword_253F35F70);
  return swift_task_switch();
}

uint64_t sub_21DC241E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *boxed_opaque_existential_1;
  objc_class *v3;
  id v4;
  id v5;

  v1 = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 48) = &off_24E1A61D0;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16));
  sub_21DC24ECC(v1, (uint64_t)boxed_opaque_existential_1);
  v3 = (objc_class *)type metadata accessor for InstrumentationStreamsProviderBridge();
  v4 = objc_allocWithZone(v3);
  sub_21DC24E88(v0 + 16, (uint64_t)v4 + OBJC_IVAR___ISStreamsProvider_provider);
  *(_QWORD *)(v0 + 56) = v4;
  *(_QWORD *)(v0 + 64) = v3;
  v5 = objc_msgSendSuper2((objc_super *)(v0 + 56), sel_init);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_21DC07C84(v1, &qword_2553A8CC0);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(id))(v0 + 8))(v5);
}

uint64_t sub_21DC242C0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21DC24300(uint64_t a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 120) = a2;
  *(_QWORD *)(v2 + 112) = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_253F35F70);
  *(_QWORD *)(v2 + 128) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21DC24360()
{
  uint64_t *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *boxed_opaque_existential_1;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = v0[16];
  v2 = *((double *)v0 + 15);
  type metadata accessor for InstrumentationStreamsFactory();
  v3 = sub_21DC714C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8CC0);
  v0[17] = v4;
  v0[5] = v4;
  v0[6] = (uint64_t)&off_24E1A61D0;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE60]), sel_initWithTimeIntervalSinceNow_, v2);
  objc_msgSend(v6, sel_timeIntervalSinceReferenceDate);
  v8 = v7;

  v9 = (_QWORD *)swift_task_alloc();
  v0[18] = (uint64_t)v9;
  *v9 = v0;
  v9[1] = sub_21DC2448C;
  return static InstrumentationStreamsFactory.construct(filter:startTime:endTime:maxEvents:lastN:storageURL:)((uint64_t)boxed_opaque_existential_1, v0[14], v8, 0, 0, 1, 0, 1);
}

uint64_t sub_21DC2448C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  sub_21DC07C84(v2, qword_253F35F70);
  return swift_task_switch();
}

uint64_t sub_21DC24504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  objc_class *v7;
  id v8;
  id v9;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = __swift_mutable_project_boxed_opaque_existential_1(v0 + 16, v2);
  v4 = *(_QWORD *)(v2 - 8);
  v5 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v3, v2);
  *(_QWORD *)(v0 + 80) = v1;
  *(_QWORD *)(v0 + 88) = &off_24E1A61D0;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 56));
  sub_21DC24E40(v5, (uint64_t)boxed_opaque_existential_1);
  v7 = (objc_class *)type metadata accessor for InstrumentationStreamsProviderBridge();
  v8 = objc_allocWithZone(v7);
  sub_21DC24E88(v0 + 56, (uint64_t)v8 + OBJC_IVAR___ISStreamsProvider_provider);
  *(_QWORD *)(v0 + 96) = v8;
  *(_QWORD *)(v0 + 104) = v7;
  v9 = objc_msgSendSuper2((objc_super *)(v0 + 96), sel_init);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(id))(v0 + 8))(v9);
}

uint64_t sub_21DC2461C()
{
  uint64_t v0;

  __swift_deallocate_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21DC2465C(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 128) = a2;
  *(double *)(v3 + 120) = a3;
  *(_QWORD *)(v3 + 112) = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_253F35F70);
  *(_QWORD *)(v3 + 136) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21DC246C0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = v0[16];
  v1 = v0[17];
  v3 = *((double *)v0 + 15);
  type metadata accessor for InstrumentationStreamsFactory();
  v4 = sub_21DC714C8();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v2, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v1, 0, 1, v4);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8CC0);
  v0[18] = v6;
  v0[5] = v6;
  v0[6] = (uint64_t)&off_24E1A61D0;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE60]), sel_initWithTimeIntervalSinceNow_, v3);
  objc_msgSend(v8, sel_timeIntervalSinceReferenceDate);
  v10 = v9;

  v11 = (_QWORD *)swift_task_alloc();
  v0[19] = (uint64_t)v11;
  *v11 = v0;
  v11[1] = sub_21DC2480C;
  return static InstrumentationStreamsFactory.construct(filter:startTime:endTime:maxEvents:lastN:storageURL:)((uint64_t)boxed_opaque_existential_1, v0[14], v10, 0, 0, 1, 0, 1);
}

uint64_t sub_21DC2480C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  sub_21DC07C84(v2, qword_253F35F70);
  return swift_task_switch();
}

uint64_t sub_21DC24884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  objc_class *v7;
  id v8;
  id v9;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = __swift_mutable_project_boxed_opaque_existential_1(v0 + 16, v2);
  v4 = *(_QWORD *)(v2 - 8);
  v5 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v3, v2);
  *(_QWORD *)(v0 + 80) = v1;
  *(_QWORD *)(v0 + 88) = &off_24E1A61D0;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 56));
  sub_21DC24E40(v5, (uint64_t)boxed_opaque_existential_1);
  v7 = (objc_class *)type metadata accessor for InstrumentationStreamsProviderBridge();
  v8 = objc_allocWithZone(v7);
  sub_21DC24E88(v0 + 56, (uint64_t)v8 + OBJC_IVAR___ISStreamsProvider_provider);
  *(_QWORD *)(v0 + 96) = v8;
  *(_QWORD *)(v0 + 104) = v7;
  v9 = objc_msgSendSuper2((objc_super *)(v0 + 96), sel_init);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(id))(v0 + 8))(v9);
}

uint64_t sub_21DC2499C()
{
  uint64_t v0;

  __swift_deallocate_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for InstrumentationStreamsFactoryBridge()
{
  return objc_opt_self();
}

uint64_t sub_21DC249FC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_21DC24A30()
{
  double *v0;
  uint64_t v1;
  void *v2;
  double v3;
  uint64_t v4;
  const void *v5;
  _QWORD *v6;

  v2 = (void *)*((_QWORD *)v0 + 2);
  v3 = v0[3];
  v4 = *((_QWORD *)v0 + 4);
  v5 = (const void *)*((_QWORD *)v0 + 5);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_21DC0DC98;
  return ((uint64_t (*)(void *, double, uint64_t, const void *))((char *)&dword_2553A8C30 + dword_2553A8C30))(v2, v3, v4, v5);
}

uint64_t sub_21DC24ABC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21DC24AE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21DC0DC98;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2553A8C50 + dword_2553A8C50))(a1, v4);
}

uint64_t sub_21DC24B50()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_21DC24B7C()
{
  double *v0;
  uint64_t v1;
  void *v2;
  double v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)*((_QWORD *)v0 + 2);
  v3 = v0[3];
  v4 = (void *)*((_QWORD *)v0 + 4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_21DC0DD34;
  return ((uint64_t (*)(void *, void *, double))((char *)&dword_2553A8C60 + dword_2553A8C60))(v2, v4, v3);
}

uint64_t sub_21DC24C00()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 64));
  return swift_deallocObject();
}

uint64_t sub_21DC24C34()
{
  double *v0;
  uint64_t v1;
  void *v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const void *v8;
  _QWORD *v9;

  v2 = (void *)*((_QWORD *)v0 + 2);
  v3 = v0[3];
  v4 = v0[4];
  v5 = *((_QWORD *)v0 + 5);
  v6 = *((_QWORD *)v0 + 6);
  v7 = *((_QWORD *)v0 + 7);
  v8 = (const void *)*((_QWORD *)v0 + 8);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_21DC0DD34;
  return ((uint64_t (*)(void *, uint64_t, uint64_t, double, double, uint64_t, const void *))((char *)&dword_2553A8C80
                                                                                                  + dword_2553A8C80))(v2, v5, v6, v3, v4, v7, v8);
}

uint64_t sub_21DC24CE0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 56));
  return swift_deallocObject();
}

uint64_t sub_21DC24D0C()
{
  double *v0;
  uint64_t v1;
  void *v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;

  v2 = (void *)*((_QWORD *)v0 + 2);
  v3 = v0[3];
  v4 = v0[4];
  v5 = *((_QWORD *)v0 + 5);
  v6 = *((_QWORD *)v0 + 6);
  v7 = (void *)*((_QWORD *)v0 + 7);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_21DC0DD34;
  return ((uint64_t (*)(void *, uint64_t, uint64_t, void *, double, double))((char *)&dword_2553A8CA0
                                                                                   + dword_2553A8CA0))(v2, v5, v6, v7, v3, v4);
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x22079DA24);
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_21DC24E40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21DC24E88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_21DC24ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t EventGraph.uei.getter()
{
  return sub_21DC24F58((unint64_t *)&qword_2553AA420, 0x24BE95AD8, &qword_2553A8338);
}

uint64_t EventGraph.orch.getter()
{
  return sub_21DC24F58(&qword_2553A8488, 0x24BE95670, &qword_2553A8CC8);
}

uint64_t sub_21DC24F58(unint64_t *a1, uint64_t a2, uint64_t *a3)
{
  void *v3;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  uint64_t result;

  v5 = v3;
  v6 = sub_21DC13C88(0, a1);
  v7 = sub_21DC26320();
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_21DC0A464(v6), (v9 & 1) != 0))
  {
    v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v11 = sub_21DC089B4(v10);
    swift_bridgeObjectRelease();
    if (v11)
    {
      v12 = v5;
      v13 = sub_21DC0BFDC(v11, (uint64_t)v12);
      swift_bridgeObjectRelease();

      __swift_instantiateConcreteTypeFromMangledName(a3);
      result = swift_allocObject();
      *(_QWORD *)(result + 16) = v13;
      return result;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t EventGraph.asr.getter()
{
  return sub_21DC24F58(&qword_2553A8498, 0x24BE949A0, &qword_2553A8CD0);
}

uint64_t EventGraph.nlx.getter()
{
  return sub_21DC24F58((unint64_t *)&qword_2553A8490, 0x24BE95448, qword_2553A8CD8);
}

uint64_t sub_21DC25078()
{
  return swift_initClassMetadata2();
}

uint64_t sub_21DC250BC(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  void (*v27)(char *, _QWORD);
  void (*v28)(char *);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char v46[32];
  uint64_t v47;

  v33 = a5;
  v34 = a8;
  v41 = a1;
  v42 = a2;
  v32 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v43 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v12);
  v15 = (char *)&v32 - v14;
  MEMORY[0x24BDAC7A8](v13, v16);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = swift_getAssociatedTypeWitness();
  v35 = *(_QWORD *)(v19 - 8);
  v36 = v19;
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v32 - v21;
  v23 = sub_21DC71CB4();
  if (!v23)
    return sub_21DC71BAC();
  v39 = AssociatedTypeWitness;
  v24 = v23;
  v47 = sub_21DC71F54();
  v37 = sub_21DC71F60();
  sub_21DC71F18();
  v40 = v8;
  result = sub_21DC71CA8();
  if ((v24 & 0x8000000000000000) == 0)
  {
    v26 = v24;
    v38 = v18;
    while (v26)
    {
      v44 = v26;
      v27 = (void (*)(char *, _QWORD))sub_21DC71CE4();
      v28 = *(void (**)(char *))(v11 + 16);
      v29 = v11;
      v30 = v39;
      v28(v15);
      v27(v46, 0);
      v31 = v45;
      v41(v15, v43);
      if (v31)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v30);
        (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v36);
        swift_release();
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v32 + 32))(v34, v43, v33);
      }
      v45 = 0;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v30);
      sub_21DC71F48();
      result = sub_21DC71CC0();
      v26 = v44 - 1;
      v11 = v29;
      if (v44 == 1)
      {
        (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v36);
        return v47;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_21DC253AC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[8];
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v1 = (_QWORD *)*v0;
  swift_beginAccess();
  v13 = v0[2];
  v2 = v1[11];
  v10 = v1[10];
  v11 = v2;
  v12 = v1[12];
  v8[2] = v10;
  v8[3] = v2;
  v8[4] = v12;
  v8[5] = sub_21DC256F8;
  v8[6] = &v9;
  sub_21DC71C90();
  v3 = sub_21DC71A2C();
  swift_bridgeObjectRetain();
  v4 = MEMORY[0x22079D964](MEMORY[0x24BEE04E8], v3);
  v6 = sub_21DC250BC((void (*)(char *, char *))sub_21DC25704, (uint64_t)v8, v3, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], v4, MEMORY[0x24BEE40A8], v5);
  swift_bridgeObjectRelease();
  v13 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8D60);
  sub_21DC25784();
  sub_21DC71A50();
  swift_bridgeObjectRelease();
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_21DC71EC4();
  swift_bridgeObjectRelease();
  v13 = 0xD000000000000028;
  v14 = 0x800000021DC767F0;
  sub_21DC71B10();
  swift_bridgeObjectRelease();
  sub_21DC71B10();
  return v13;
}

uint64_t sub_21DC25534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[11];
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v16 = 538976288;
  v17 = 0xE400000000000000;
  sub_21DC72074();
  sub_21DC71B10();
  swift_bridgeObjectRelease();
  sub_21DC71B10();
  v15 = a2;
  v14[6] = a3;
  v14[7] = a4;
  v14[8] = a5;
  v14[2] = a4;
  v14[3] = a5;
  v14[4] = swift_getKeyPath();
  v9 = sub_21DC71C90();
  v10 = MEMORY[0x22079D964](MEMORY[0x24BEE1728], v9);
  v12 = sub_21DC250BC((void (*)(char *, char *))sub_21DC25824, (uint64_t)v14, v9, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], v10, MEMORY[0x24BEE40A8], v11);
  swift_release();
  v15 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8D60);
  sub_21DC25784();
  sub_21DC71A50();
  swift_bridgeObjectRelease();
  sub_21DC71B10();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_21DC256A8()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UndirectedUnweightedGraph(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UndirectedUnweightedGraph);
}

unint64_t sub_21DC256D8()
{
  return sub_21DC253AC();
}

uint64_t sub_21DC256F8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_21DC25534(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_21DC25704@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t (*v5)(uint64_t, _QWORD);
  uint64_t TupleTypeMetadata2;
  uint64_t result;
  uint64_t v8;

  v5 = *(uint64_t (**)(uint64_t, _QWORD))(v2 + 40);
  sub_21DC71C90();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  result = v5(a1, *(_QWORD *)(a1 + *(int *)(TupleTypeMetadata2 + 48)));
  *a2 = result;
  a2[1] = v8;
  return result;
}

unint64_t sub_21DC25784()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2553A8D68;
  if (!qword_2553A8D68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553A8D60);
    result = MEMORY[0x22079D964](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_2553A8D68);
  }
  return result;
}

uint64_t sub_21DC257D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_21DC72074();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_21DC25804()
{
  return 24;
}

__n128 sub_21DC25810(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_21DC25824()
{
  return swift_getAtKeyPath();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x22079D8EC](a1, v6, a5);
}

uint64_t sub_21DC25878(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;

  v14 = MEMORY[0x24BEE4AF8];
  swift_beginAccess();
  v2 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (v2 >> 62)
    goto LABEL_18;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      while ((v2 & 0xC000000000000001) != 0)
      {
        v5 = (id)MEMORY[0x22079D208](v4, v2);
LABEL_9:
        v6 = v5;
        v7 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_17;
        sub_21DC13C88(0, qword_2553A8DE0);
        v8 = (void *)sub_21DC71750();
        if (v8)
        {
          v9 = v8;
          v10 = objc_msgSend(v8, sel_flowState);
          if (v10)
          {
            v11 = v10;

            sub_21DC71F00();
            sub_21DC71F30();
            sub_21DC71F3C();
            sub_21DC71F0C();
          }
          else
          {

          }
        }
        else
        {

        }
        ++v4;
        if (v7 == v3)
        {
          v12 = v14;
          goto LABEL_20;
        }
      }
      if (v4 < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      swift_bridgeObjectRetain();
      v3 = sub_21DC71FCC();
      swift_bridgeObjectRelease();
      if (!v3)
        goto LABEL_19;
    }
    v5 = *(id *)(v2 + 8 * v4 + 32);
    goto LABEL_9;
  }
LABEL_19:
  v12 = MEMORY[0x24BEE4AF8];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_21DC25A4C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  id v9;
  unint64_t v10;
  uint64_t inited;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;

  v1 = v0;
  v2 = sub_21DC13C88(0, &qword_2553A8DB0);
  v3 = sub_21DC26320();
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_21DC0A464(v2), (v5 & 1) != 0))
  {
    v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v7 = sub_21DC089B4(v6);
    result = swift_bridgeObjectRelease();
    if (v7)
    {
      v9 = v1;
      v10 = sub_21DC0BFDC(v7, (uint64_t)v9);
      swift_bridgeObjectRelease();

      __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8DB8);
      inited = swift_initStackObject();
      *(_QWORD *)(inited + 16) = v10;
      v12 = sub_21DC25878(inited);
      v13 = sub_21DC25CB4(v12);
      result = swift_bridgeObjectRelease();
      goto LABEL_7;
    }
  }
  else
  {
    result = swift_bridgeObjectRelease();
  }
  v13 = MEMORY[0x24BEE4AF8];
LABEL_7:
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_21DC71FCC();
    result = swift_bridgeObjectRelease();
    if (!v14)
      goto LABEL_13;
  }
  else
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v14)
    {
LABEL_13:
      swift_bridgeObjectRelease();
      return v14;
    }
  }
  if ((v13 & 0xC000000000000001) != 0)
  {
    v15 = (id)MEMORY[0x22079D208](0, v13);
    goto LABEL_12;
  }
  if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(id *)(v13 + 32);
LABEL_12:
    v14 = (uint64_t)v15;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t SiriTurn.tts.getter()
{
  return sub_21DC24F58(&qword_2553A8D70, 0x24BE95E30, &qword_2553A8D78);
}

uint64_t SiriTurn.pommes.getter()
{
  return sub_21DC24F58(&qword_2553A8D80, 0x24BE958B8, &qword_2553A8D88);
}

uint64_t SiriTurn.cnv.getter()
{
  return sub_21DC24F58(&qword_2553A8D90, 0x24BE94AA0, &qword_2553A8D98);
}

uint64_t SiriTurn.dim.getter()
{
  return sub_21DC24F58(&qword_2553A8DA0, 0x24BE94AA8, &qword_2553A8DA8);
}

uint64_t SiriTurn.flow.getter()
{
  return sub_21DC24F58(&qword_2553A8DB0, 0x24BE94BE8, &qword_2553A8DB8);
}

uint64_t SiriTurn.mh.getter()
{
  return sub_21DC24F58(&qword_2553A8DC0, 0x24BE95198, &qword_2553A8DC8);
}

uint64_t SiriTurn.nl.getter()
{
  return sub_21DC24F58((unint64_t *)&qword_2553A8490, 0x24BE95448, qword_2553A8CD8);
}

uint64_t SiriTurn.actv.getter()
{
  return sub_21DC24F58(&qword_2553A8DD0, 0x24BE94980, &qword_2553A8DD8);
}

uint64_t sub_21DC25CB4(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t *v5;
  id v6;
  void *v7;
  unint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  unint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  unsigned int v17;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = a1;
  v21 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_23;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      v19 = v1;
      v3 = 0;
      v4 = v1 & 0xC000000000000001;
      v5 = &qword_2553A8DB0;
      v20 = v1 & 0xFFFFFFFFFFFFFF8;
      while (v4)
      {
        v6 = (id)MEMORY[0x22079D208](v3, v1);
LABEL_9:
        v7 = v6;
        v8 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_22;
        sub_21DC13C88(0, v5);
        v9 = (void *)sub_21DC71750();
        if (v9)
        {
          v10 = v9;
          v11 = objc_msgSend(v9, sel_flowStep);
          if (v11)
          {
            v12 = v11;
            v13 = v5;
            v14 = v2;
            v15 = v4;
            v16 = objc_msgSend(v11, sel_flowState);

            if (v16)
            {
              v17 = objc_msgSend(v16, sel_flowStateType);

              if (v17 == 142)
              {
                sub_21DC71F00();
                sub_21DC71F30();
                sub_21DC71F3C();
                sub_21DC71F0C();
              }
              else
              {

              }
            }
            else
            {

            }
            v4 = v15;
            v2 = v14;
            v5 = v13;
            v1 = v19;
          }
          else
          {

          }
        }
        else
        {

        }
        ++v3;
        if (v8 == v2)
          return v21;
      }
      if (v3 < *(_QWORD *)(v20 + 16))
        break;
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      v2 = sub_21DC71FCC();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    v6 = *(id *)(v1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_21DC25EB8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_21DC25F0C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (_QWORD *)*v0;
  sub_21DC71EC4();
  sub_21DC71B10();
  swift_beginAccess();
  v2 = v1[10];
  v3 = v1[14];
  v4 = sub_21DC71A2C();
  v5 = MEMORY[0x24BEE04F0];
  MEMORY[0x22079D964](MEMORY[0x24BEE04F0], v4);
  sub_21DC72080();
  sub_21DC71B10();
  v6 = type metadata accessor for UndirectedUnweightedGraph(0, v2, v1[13], v3);
  MEMORY[0x22079D964](&unk_21DC73A88, v6);
  sub_21DC72080();
  sub_21DC71B10();
  swift_beginAccess();
  v7 = sub_21DC71A2C();
  MEMORY[0x22079D964](v5, v7);
  sub_21DC72080();
  sub_21DC71B10();
  swift_beginAccess();
  sub_21DC71BDC();
  v8 = sub_21DC71A2C();
  MEMORY[0x22079D964](v5, v8);
  sub_21DC72080();
  sub_21DC71B10();
  return 0;
}

uint64_t sub_21DC26160()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_21DC26194()
{
  sub_21DC26160();
  return swift_deallocClassInstance();
}

void type metadata accessor for StreamingItemGraphBuilder()
{
  JUMPOUT(0x22079D8ECLL);
}

uint64_t sub_21DC261C0()
{
  return sub_21DC25F0C();
}

id EventGraph.init(timestamp:events:)(uint64_t a1, double a2)
{
  char *v2;
  uint64_t v3;
  char *v4;
  char *v6;
  unint64_t v7;
  objc_super v8;
  uint64_t v9;

  *(_QWORD *)&v2[OBJC_IVAR___ISEventGraph____lazy_storage___typeIndex] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___ISEventGraph____lazy_storage___innerTypeIndex] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___ISEventGraph____lazy_storage___componentIdentifierIndex] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___ISEventGraph____lazy_storage___typeAndCIDIndex] = 0;
  *(double *)&v2[OBJC_IVAR___ISEventGraph_timestamp] = a2;
  if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
  {
    v6 = v2;
    v7 = swift_bridgeObjectRetain();
    v3 = (uint64_t)sub_21DC09488(v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = a1 & 0xFFFFFFFFFFFFFF8;
    v4 = v2;
    swift_bridgeObjectRetain();
  }
  v9 = v3;
  sub_21DC280E8(&v9);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v2[OBJC_IVAR___ISEventGraph_eventsInternal] = v9;

  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for EventGraph();
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t sub_21DC262D4()
{
  return sub_21DC7151C();
}

uint64_t sub_21DC262E4()
{
  return sub_21DC26334(&OBJC_IVAR___ISEventGraph____lazy_storage___typeIndex, sub_21DC269B8);
}

uint64_t sub_21DC262F8()
{
  return sub_21DC26334(&OBJC_IVAR___ISEventGraph____lazy_storage___innerTypeIndex, sub_21DC26CA4);
}

uint64_t sub_21DC2630C()
{
  return sub_21DC26334(&OBJC_IVAR___ISEventGraph____lazy_storage___componentIdentifierIndex, (uint64_t (*)(uint64_t))sub_21DC26F90);
}

uint64_t sub_21DC26320()
{
  return sub_21DC26334(&OBJC_IVAR___ISEventGraph____lazy_storage___typeAndCIDIndex, (uint64_t (*)(uint64_t))sub_21DC275E4);
}

uint64_t sub_21DC26334(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v4 = *(_QWORD *)(v2 + *a1);
  if (v4)
  {
    v5 = v4;
  }
  else
  {
    v5 = a2(v2);
    *(_QWORD *)(v2 + v3) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v5;
}

void sub_21DC26394()
{
  uint64_t v0;

  v0 = sub_21DC2630C();
  sub_21DC49578(v0);
}

uint64_t sub_21DC263A8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_21DC263B8()
{
  unint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_21DC0DEB8(v0);
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t sub_21DC26410(uint64_t a1)
{
  return sub_21DC26428(a1, sub_21DC262E4);
}

unint64_t sub_21DC2641C(uint64_t a1)
{
  return sub_21DC26428(a1, sub_21DC262F8);
}

unint64_t sub_21DC26428(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  void *v3;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  id v9;
  unint64_t v10;

  v3 = v2;
  v5 = a2();
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_21DC0A464(a1), (v7 & 1) != 0))
  {
    v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v9 = v3;
  v10 = sub_21DC0BFDC(v8, (uint64_t)v9);
  swift_bridgeObjectRelease();

  return v10;
}

unint64_t sub_21DC264C8(int a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  _DWORD v9[8];

  v3 = sub_21DC2630C();
  v9[4] = a1;
  v4 = sub_21DC13B18(v3, (uint64_t (*)(id, uint64_t))sub_21DC28D7C, (uint64_t)v9);
  swift_bridgeObjectRelease();
  v5 = sub_21DC0F4E0(v4);
  swift_release();
  v6 = v1;
  v7 = sub_21DC0BFDC(v5, (uint64_t)v6);
  swift_bridgeObjectRelease();

  return v7;
}

unint64_t sub_21DC26560(void *a1)
{
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  id v8;
  unint64_t v9;

  v2 = v1;
  v3 = a1;
  v4 = sub_21DC2630C();
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_21DC0A4BC((uint64_t)v3), (v6 & 1) != 0))
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = MEMORY[0x24BEE4AF8];
  }

  swift_bridgeObjectRelease();
  v8 = v2;
  v9 = sub_21DC0BFDC(v7, (uint64_t)v8);
  swift_bridgeObjectRelease();

  return v9;
}

uint64_t sub_21DC26608(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t result;
  id v11;
  id v12;

  v2 = v1;
  v4 = sub_21DC262F8();
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_21DC0A464(a1), (v6 & 1) != 0))
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v8 = v2;
  v9 = sub_21DC0BFDC(v7, (uint64_t)v8);
  swift_bridgeObjectRelease();

  if (!(v9 >> 62))
  {
    result = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_7;
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  result = sub_21DC71FCC();
  if (!result)
    goto LABEL_12;
LABEL_7:
  if ((v9 & 0xC000000000000001) != 0)
  {
    v11 = (id)MEMORY[0x22079D208](0, v9);
    goto LABEL_10;
  }
  if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(id *)(v9 + 32);
LABEL_10:
    v12 = v11;
    swift_bridgeObjectRelease();
    return (uint64_t)v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC2671C(uint64_t a1)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_QWORD *)(sub_21DC26320() + 16) && (sub_21DC0A464(a1), (v2 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    v3 = swift_bridgeObjectRelease();
    MEMORY[0x24BDAC7A8](v3, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8E98);
    type metadata accessor for ComponentGroup(0, a1, v5, v6);
    sub_21DC28DC0();
    v7 = sub_21DC71B28();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    type metadata accessor for ComponentGroup(0, a1, v8, v9);
    return sub_21DC71BAC();
  }
  return v7;
}

uint64_t sub_21DC26834(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  unint64_t v12;

  v2 = v1;
  v4 = sub_21DC26320();
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_21DC0A464(a1), (v6 & 1) != 0))
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v8 = sub_21DC089B4(v7);
    swift_bridgeObjectRelease();
    if (v8)
    {
      type metadata accessor for ComponentGroup(0, a1, v9, v10);
      v11 = v2;
      v12 = sub_21DC0BFDC(v8, (uint64_t)v11);
      swift_bridgeObjectRelease();

      return ComponentGroup.__allocating_init(unchecked:)(v12);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return 0;
}

double EventGraph.timestamp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___ISEventGraph_timestamp);
}

uint64_t sub_21DC269B8(uint64_t a1)
{
  unint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t ObjectType;
  char isUniquelyReferenced_nonNull_native;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR___ISEventGraph_eventsInternal);
  v2 = (_QWORD *)sub_21DC2C414(MEMORY[0x24BEE4AF8]);
  if (!(v1 >> 62))
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v3)
      goto LABEL_3;
LABEL_33:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v2;
  }
LABEL_32:
  swift_bridgeObjectRetain_n();
  v3 = sub_21DC71FCC();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_33;
LABEL_3:
  v28 = v3;
  v4 = 4;
  while (1)
  {
    v5 = v4 - 4;
    if ((v1 & 0xC000000000000001) != 0)
    {
      MEMORY[0x22079D208](v4 - 4, v1);
      v6 = v4 - 3;
      if (__OFADD__(v5, 1))
        goto LABEL_29;
    }
    else
    {
      swift_retain();
      v6 = v4 - 3;
      if (__OFADD__(v5, 1))
      {
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
    }
    v29 = v6;
    v7 = sub_21DC716D8();
    if (!v7)
      break;
    v8 = (void *)v7;
    ObjectType = swift_getObjectType();

    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = sub_21DC0A464(ObjectType);
    v13 = v2[2];
    v14 = (v11 & 1) == 0;
    v15 = v13 + v14;
    if (__OFADD__(v13, v14))
      goto LABEL_30;
    v16 = v11;
    if (v2[3] >= v15)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_21DC5D4C8();
    }
    else
    {
      sub_21DC0F924(v15, isUniquelyReferenced_nonNull_native);
      v17 = sub_21DC0A464(ObjectType);
      if ((v16 & 1) != (v18 & 1))
        goto LABEL_35;
      v12 = v17;
    }
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v2[(v12 >> 6) + 8] |= 1 << v12;
      *(_QWORD *)(v2[6] + 8 * v12) = ObjectType;
      *(_QWORD *)(v2[7] + 8 * v12) = MEMORY[0x24BEE4AF8];
      v19 = v2[2];
      v20 = v19 + 1;
      v21 = __OFADD__(v19, 1);
      swift_bridgeObjectRetain();
      if (v21)
        goto LABEL_31;
      v2[2] = v20;
    }
    v22 = v2[7];
    swift_bridgeObjectRelease();
    v23 = *(_QWORD **)(v22 + 8 * v12);
    v24 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v22 + 8 * v12) = v23;
    if ((v24 & 1) == 0)
    {
      v23 = sub_21DC14B60(0, v23[2] + 1, 1, v23);
      *(_QWORD *)(v22 + 8 * v12) = v23;
    }
    v26 = v23[2];
    v25 = v23[3];
    if (v26 >= v25 >> 1)
    {
      v23 = sub_21DC14B60((_QWORD *)(v25 > 1), v26 + 1, 1, v23);
      *(_QWORD *)(v22 + 8 * v12) = v23;
    }
    v23[2] = v26 + 1;
    v23[v26 + 4] = v5;
    swift_release();
    ++v4;
    if (v29 == v28)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  result = sub_21DC720E0();
  __break(1u);
  return result;
}

void sub_21DC26C94(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
}

uint64_t sub_21DC26CA4(uint64_t a1)
{
  unint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t ObjectType;
  char isUniquelyReferenced_nonNull_native;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR___ISEventGraph_eventsInternal);
  v2 = (_QWORD *)sub_21DC2C414(MEMORY[0x24BEE4AF8]);
  if (v1 >> 62)
  {
LABEL_33:
    swift_bridgeObjectRetain_n();
    v3 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
LABEL_34:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v2;
  }
  v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v3)
    goto LABEL_34;
LABEL_3:
  v28 = v1;
  v29 = v1 & 0xC000000000000001;
  v4 = 4;
  v27 = v3;
  while (1)
  {
    v5 = v4 - 4;
    if (v29)
    {
      MEMORY[0x22079D208](v4 - 4, v1);
      v6 = v4 - 3;
      if (__OFADD__(v5, 1))
        goto LABEL_30;
    }
    else
    {
      swift_retain();
      v6 = v4 - 3;
      if (__OFADD__(v5, 1))
      {
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
    }
    v7 = sub_21DC716E4();
    if (!v7)
    {
      swift_release();
      goto LABEL_5;
    }
    v8 = (void *)v7;
    ObjectType = swift_getObjectType();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = sub_21DC0A464(ObjectType);
    v13 = v2[2];
    v14 = (v11 & 1) == 0;
    v15 = v13 + v14;
    if (__OFADD__(v13, v14))
      goto LABEL_31;
    v16 = v11;
    if (v2[3] >= v15)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_21DC5D4C8();
      goto LABEL_18;
    }
    sub_21DC0F924(v15, isUniquelyReferenced_nonNull_native);
    v17 = sub_21DC0A464(ObjectType);
    if ((v16 & 1) != (v18 & 1))
      break;
    v12 = v17;
LABEL_18:
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v2[(v12 >> 6) + 8] |= 1 << v12;
      *(_QWORD *)(v2[6] + 8 * v12) = ObjectType;
      *(_QWORD *)(v2[7] + 8 * v12) = MEMORY[0x24BEE4AF8];
      v19 = v2[2];
      v20 = v19 + 1;
      v1 = __OFADD__(v19, 1);
      swift_bridgeObjectRetain();
      if ((v1 & 1) != 0)
        goto LABEL_32;
      v2[2] = v20;
    }
    v21 = v2[7];
    swift_bridgeObjectRelease();
    v22 = *(_QWORD **)(v21 + 8 * v12);
    v23 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v21 + 8 * v12) = v22;
    if ((v23 & 1) == 0)
    {
      v22 = sub_21DC14B60(0, v22[2] + 1, 1, v22);
      *(_QWORD *)(v21 + 8 * v12) = v22;
    }
    v25 = v22[2];
    v24 = v22[3];
    if (v25 >= v24 >> 1)
    {
      v22 = sub_21DC14B60((_QWORD *)(v24 > 1), v25 + 1, 1, v22);
      *(_QWORD *)(v21 + 8 * v12) = v22;
    }
    v22[2] = v25 + 1;
    v22[v25 + 4] = v4 - 4;
    swift_release();

    v3 = v27;
    v1 = v28;
LABEL_5:
    ++v4;
    if (v6 == v3)
      goto LABEL_34;
  }
  result = sub_21DC720E0();
  __break(1u);
  return result;
}

_QWORD *sub_21DC26F90(uint64_t a1)
{
  unint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9[2];
  _QWORD *v10;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR___ISEventGraph_eventsInternal);
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)sub_21DC29B00(MEMORY[0x24BEE4AF8]);
  v10 = v2;
  if (v1 >> 62)
  {
LABEL_12:
    swift_bridgeObjectRetain();
    v3 = sub_21DC71FCC();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      v2 = 0;
      for (i = 4; ; ++i)
      {
        v5 = i - 4;
        if ((v1 & 0xC000000000000001) != 0)
        {
          v6 = MEMORY[0x22079D208](i - 4, v1);
          v7 = i - 3;
          if (__OFADD__(v5, 1))
            goto LABEL_11;
        }
        else
        {
          v6 = *(_QWORD *)(v1 + 8 * i);
          swift_retain();
          v7 = i - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_11:
            __break(1u);
            goto LABEL_12;
          }
        }
        v9[0] = i - 4;
        v9[1] = v6;
        sub_21DC270E4(&v10, v9);
        swift_release();
        if (v7 == v3)
        {
          swift_bridgeObjectRelease_n();
          return v10;
        }
      }
    }
  }
  swift_bridgeObjectRelease_n();
  return v2;
}

uint64_t sub_21DC270E4(_QWORD **a1, uint64_t *a2)
{
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  char v7;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  _QWORD *v32;
  id v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  id v38;
  char v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  _QWORD *v52;
  id v53;
  char v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t result;
  void *v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;

  v59 = *a2;
  v4 = *(void **)(a2[1] + 24);
  swift_retain();
  v5 = (void *)sub_21DC71720();
  if (!v5)
  {
    v17 = v4;
    v18 = OrderedEvent.linkedComponentIdentifiers()();
    v20 = v19;

    if (!v18)
      return swift_release();
    v58 = v20;
    v21 = v18;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *a1;
    v61 = *a1;
    *a1 = (_QWORD *)0x8000000000000000;
    v24 = sub_21DC0A4BC((uint64_t)v21);
    v26 = v25;
    v27 = v23[2];
    v28 = (v25 & 1) == 0;
    sub_21DC71804();
    v29 = v27 + v28;
    if (__OFADD__(v27, v28))
    {
      __break(1u);
    }
    else
    {
      if (v23[3] >= v29)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_21DC5DF84();
          v23 = v61;
        }
      }
      else
      {
        sub_21DC10F84(v29, isUniquelyReferenced_nonNull_native);
        v23 = v61;
        v30 = sub_21DC0A4BC((uint64_t)v21);
        if ((v26 & 1) != (v31 & 1))
          goto LABEL_47;
        v24 = v30;
      }
      *a1 = v23;
      swift_bridgeObjectRelease();
      v37 = *a1;
      swift_bridgeObjectRetain();
      if ((v26 & 1) == 0)
      {
        sub_21DC5CEF4(v24, v21, MEMORY[0x24BEE4AF8], v37);
        v38 = v21;
      }
      v26 = v37[7];
      swift_bridgeObjectRelease();
      v23 = *(_QWORD **)(v26 + 8 * v24);
      v39 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v26 + 8 * v24) = v23;
      if ((v39 & 1) != 0)
      {
LABEL_24:
        v41 = v23[2];
        v40 = v23[3];
        if (v41 >= v40 >> 1)
        {
          v23 = sub_21DC14B60((_QWORD *)(v40 > 1), v41 + 1, 1, v23);
          *(_QWORD *)(v26 + 8 * v24) = v23;
        }
        v23[2] = v41 + 1;
        v23[v41 + 4] = v59;

        v6 = v58;
        v42 = swift_isUniquelyReferenced_nonNull_native();
        v43 = *a1;
        v62 = *a1;
        *a1 = (_QWORD *)0x8000000000000000;
        v45 = sub_21DC0A4BC((uint64_t)v6);
        v46 = v43[2];
        v47 = (v44 & 1) == 0;
        v48 = v46 + v47;
        if (__OFADD__(v46, v47))
        {
          __break(1u);
        }
        else
        {
          v49 = v44;
          if (v43[3] >= v48)
          {
            if ((v42 & 1) == 0)
            {
              sub_21DC5DF84();
              v43 = v62;
            }
          }
          else
          {
            sub_21DC10F84(v48, v42);
            v43 = v62;
            v50 = sub_21DC0A4BC((uint64_t)v6);
            if ((v49 & 1) != (v51 & 1))
              goto LABEL_47;
            v45 = v50;
          }
          *a1 = v43;
          swift_bridgeObjectRelease();
          v52 = *a1;
          swift_bridgeObjectRetain();
          if ((v49 & 1) == 0)
          {
            sub_21DC5CEF4(v45, v6, MEMORY[0x24BEE4AF8], v52);
            v53 = v6;
          }
          v42 = v52[7];
          swift_bridgeObjectRelease();
          v43 = *(_QWORD **)(v42 + 8 * v45);
          v54 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v42 + 8 * v45) = v43;
          if ((v54 & 1) != 0)
          {
LABEL_35:
            v56 = v43[2];
            v55 = v43[3];
            if (v56 >= v55 >> 1)
            {
              v43 = sub_21DC14B60((_QWORD *)(v55 > 1), v56 + 1, 1, v43);
              *(_QWORD *)(v42 + 8 * v45) = v43;
            }
            v43[2] = v56 + 1;
            v43[v56 + 4] = v59;

            goto LABEL_38;
          }
        }
        v43 = sub_21DC14B60(0, v43[2] + 1, 1, v43);
        *(_QWORD *)(v42 + 8 * v45) = v43;
        goto LABEL_35;
      }
    }
    v23 = sub_21DC14B60(0, v23[2] + 1, 1, v23);
    *(_QWORD *)(v26 + 8 * v24) = v23;
    goto LABEL_24;
  }
  v6 = v5;
  v7 = swift_isUniquelyReferenced_nonNull_native();
  v8 = *a1;
  v60 = *a1;
  *a1 = (_QWORD *)0x8000000000000000;
  v10 = sub_21DC0A4BC((uint64_t)v6);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_41:
    v8 = sub_21DC14B60(0, v8[2] + 1, 1, v8);
    *(_QWORD *)(v2 + 8 * v10) = v8;
LABEL_16:
    v36 = v8[2];
    v35 = v8[3];
    if (v36 >= v35 >> 1)
    {
      v8 = sub_21DC14B60((_QWORD *)(v35 > 1), v36 + 1, 1, v8);
      *(_QWORD *)(v2 + 8 * v10) = v8;
    }
    v8[2] = v36 + 1;
    v8[v36 + 4] = v59;
    v21 = v6;
LABEL_38:

    return swift_release();
  }
  v14 = v9;
  if (v8[3] >= v13)
  {
    if ((v7 & 1) == 0)
    {
      sub_21DC5DF84();
      v8 = v60;
    }
LABEL_13:
    *a1 = v8;
    swift_bridgeObjectRelease();
    v32 = *a1;
    swift_bridgeObjectRetain();
    if ((v14 & 1) == 0)
    {
      sub_21DC5CEF4(v10, v6, MEMORY[0x24BEE4AF8], v32);
      v33 = v6;
    }
    v2 = v32[7];
    swift_bridgeObjectRelease();
    v8 = *(_QWORD **)(v2 + 8 * v10);
    v34 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v2 + 8 * v10) = v8;
    if ((v34 & 1) != 0)
      goto LABEL_16;
    goto LABEL_41;
  }
  sub_21DC10F84(v13, v7);
  v8 = v60;
  v15 = sub_21DC0A4BC((uint64_t)v6);
  if ((v14 & 1) == (v16 & 1))
  {
    v10 = v15;
    goto LABEL_13;
  }
  sub_21DC71804();
  sub_21DC720E0();
  __break(1u);
LABEL_47:
  result = sub_21DC720E0();
  __break(1u);
  return result;
}

unint64_t sub_21DC275E4(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9[2];
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR___ISEventGraph_eventsInternal);
  v2 = sub_21DC2BC00(MEMORY[0x24BEE4AF8]);
  v10 = v2;
  if (v1 >> 62)
  {
LABEL_12:
    swift_bridgeObjectRetain_n();
    v3 = sub_21DC71FCC();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v3)
    {
LABEL_3:
      v2 = 0;
      for (i = 4; ; ++i)
      {
        v5 = i - 4;
        if ((v1 & 0xC000000000000001) != 0)
        {
          v6 = MEMORY[0x22079D208](i - 4, v1);
          v7 = i - 3;
          if (__OFADD__(v5, 1))
            goto LABEL_11;
        }
        else
        {
          v6 = *(_QWORD *)(v1 + 8 * i);
          swift_retain();
          v7 = i - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_11:
            __break(1u);
            goto LABEL_12;
          }
        }
        v9[0] = i - 4;
        v9[1] = v6;
        sub_21DC27738(&v10, v9);
        swift_release();
        if (v7 == v3)
        {
          swift_bridgeObjectRelease_n();
          return v10;
        }
      }
    }
  }
  swift_bridgeObjectRelease_n();
  return v2;
}

uint64_t sub_21DC27738(unint64_t *a1, uint64_t *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t (*v13)@<X0>(unint64_t *@<X8>);
  void (*v14)(_QWORD *@<X8>);
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t ObjectType;
  id v21;
  char isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  id v49;
  uint64_t v50;
  _QWORD *v51;
  char v52;
  unint64_t v53;
  unint64_t v54;
  void (*v55)(_QWORD *@<X8>);
  unint64_t (*v56)@<X0>(unint64_t *@<X8>);
  uint64_t result;
  uint64_t v58;
  _QWORD *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  _QWORD *v64;

  v61 = *a2;
  v3 = *(void **)(a2[1] + 24);
  swift_retain();
  v4 = sub_21DC71720();
  if (v4)
  {
    v5 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9780);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_21DC73350;
    *(_QWORD *)(v6 + 32) = v5;
  }
  else
  {
    v7 = v3;
    v8 = OrderedEvent.linkedComponentIdentifiers()();
    v10 = v9;

    if (!v8)
    {
      swift_release();
      goto LABEL_49;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9780);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_21DC73B80;
    *(_QWORD *)(v6 + 32) = v8;
    *(_QWORD *)(v6 + 40) = v10;
  }
  v63 = v6;
  sub_21DC71B94();
  v11 = v63;
  if (!(v63 >> 62))
  {
    v12 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12)
      goto LABEL_7;
    goto LABEL_48;
  }
LABEL_47:
  swift_bridgeObjectRetain();
  v12 = sub_21DC71FCC();
  swift_bridgeObjectRelease();
  if (!v12)
  {
LABEL_48:
    swift_release();
    swift_bridgeObjectRelease();
LABEL_49:
    v56 = 0;
    v55 = 0;
LABEL_50:
    sub_21DC28F54((uint64_t)v56);
    return sub_21DC28F54((uint64_t)v55);
  }
LABEL_7:
  v58 = v12;
  v13 = 0;
  v14 = 0;
  v59 = (_QWORD *)v11;
  v60 = v11 & 0xC000000000000001;
  v15 = 4;
  while (1)
  {
    if (v60)
      v16 = (id)MEMORY[0x22079D208](v15 - 4, v11);
    else
      v16 = *(id *)(v11 + 8 * v15);
    v17 = v16;
    if (__OFADD__(v15 - 4, 1))
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    v62 = v15 - 3;
    v18 = sub_21DC716D8();
    if (!v18)
      break;
    v19 = (void *)v18;
    ObjectType = swift_getObjectType();

    v21 = v17;
    sub_21DC28F54((uint64_t)v13);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *a1;
    v64 = (_QWORD *)*a1;
    *a1 = 0x8000000000000000;
    v24 = sub_21DC0A464(ObjectType);
    v25 = *(_QWORD *)(v11 + 16);
    v26 = (v23 & 1) == 0;
    v27 = v25 + v26;
    if (__OFADD__(v25, v26))
      goto LABEL_43;
    v28 = v23;
    if (*(_QWORD *)(v11 + 24) >= v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_21DC5DF90();
        v11 = (unint64_t)v64;
      }
    }
    else
    {
      sub_21DC10F90(v27, isUniquelyReferenced_nonNull_native);
      v11 = (unint64_t)v64;
      v29 = sub_21DC0A464(ObjectType);
      if ((v28 & 1) != (v30 & 1))
        goto LABEL_52;
      v24 = v29;
    }
    *a1 = v11;
    swift_bridgeObjectRelease();
    v11 = *a1;
    swift_bridgeObjectRetain();
    v31 = 8 * v24;
    if ((v28 & 1) == 0)
    {
      v32 = sub_21DC29B00(MEMORY[0x24BEE4AF8]);
      *(_QWORD *)(v11 + 8 * (v24 >> 6) + 64) |= 1 << v24;
      *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v24) = ObjectType;
      *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v24) = v32;
      v33 = *(_QWORD *)(v11 + 16);
      v34 = __OFADD__(v33, 1);
      v35 = v33 + 1;
      if (v34)
        goto LABEL_45;
      *(_QWORD *)(v11 + 16) = v35;
    }
    v36 = *(_QWORD *)(v11 + 56);
    swift_bridgeObjectRelease();
    sub_21DC28F54((uint64_t)v14);
    v37 = swift_isUniquelyReferenced_nonNull_native();
    v11 = *(_QWORD *)(v36 + v31);
    *(_QWORD *)(v36 + v31) = 0x8000000000000000;
    v39 = sub_21DC0A4BC((uint64_t)v21);
    v40 = *(_QWORD *)(v11 + 16);
    v41 = (v38 & 1) == 0;
    v42 = v40 + v41;
    if (__OFADD__(v40, v41))
      goto LABEL_44;
    v43 = v38;
    if (*(_QWORD *)(v11 + 24) >= v42)
    {
      if ((v37 & 1) == 0)
        sub_21DC5DF84();
    }
    else
    {
      sub_21DC10F84(v42, v37);
      sub_21DC71804();
      v44 = sub_21DC0A4BC((uint64_t)v21);
      if ((v43 & 1) != (v45 & 1))
        goto LABEL_53;
      v39 = v44;
    }
    *(_QWORD *)(v36 + v31) = v11;
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)(v36 + v31);
    if ((v43 & 1) != 0)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_QWORD *)(v11 + 8 * (v39 >> 6) + 64) |= 1 << v39;
      *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v39) = v21;
      *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v39) = MEMORY[0x24BEE4AF8];
      v46 = *(_QWORD *)(v11 + 16);
      v47 = v46 + 1;
      v48 = __OFADD__(v46, 1);
      swift_bridgeObjectRetain();
      if (v48)
        goto LABEL_46;
      *(_QWORD *)(v11 + 16) = v47;
      v49 = v21;
    }
    v50 = *(_QWORD *)(v11 + 56);
    swift_bridgeObjectRelease();
    v51 = *(_QWORD **)(v50 + 8 * v39);
    v52 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v50 + 8 * v39) = v51;
    if ((v52 & 1) == 0)
    {
      v51 = sub_21DC14B60(0, v51[2] + 1, 1, v51);
      *(_QWORD *)(v50 + 8 * v39) = v51;
    }
    v54 = v51[2];
    v53 = v51[3];
    if (v54 >= v53 >> 1)
    {
      v51 = sub_21DC14B60((_QWORD *)(v53 > 1), v54 + 1, 1, v51);
      *(_QWORD *)(v50 + 8 * v39) = v51;
    }
    v51[2] = v54 + 1;
    v51[v54 + 4] = v61;

    ++v15;
    v13 = sub_21DC27C54;
    v14 = sub_21DC26C94;
    v11 = (unint64_t)v59;
    if (v62 == v58)
    {
      swift_release();
      swift_bridgeObjectRelease();
      v55 = sub_21DC26C94;
      v56 = sub_21DC27C54;
      goto LABEL_50;
    }
  }
  __break(1u);
LABEL_52:
  sub_21DC720E0();
  __break(1u);
LABEL_53:
  result = sub_21DC720E0();
  __break(1u);
  return result;
}

unint64_t sub_21DC27C54@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_21DC29B00(MEMORY[0x24BEE4AF8]);
  *a1 = result;
  return result;
}

id EventGraph.__allocating_init(timestamp:events:)(uint64_t a1, double a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return EventGraph.init(timestamp:events:)(a1, a2);
}

BOOL sub_21DC27CC0(uint64_t a1, uint64_t a2, int a3)
{
  return sub_21DC717D4() == a3;
}

uint64_t sub_21DC27CEC@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t result;

  v7 = *a1;
  type metadata accessor for ComponentGroup(0, a3, a3, a4);
  v8 = a2;
  v9 = sub_21DC0BFDC(v7, (uint64_t)v8);

  result = ComponentGroup.__allocating_init(unchecked:)(v9);
  *a5 = result;
  return result;
}

void sub_21DC27D70()
{
  uint64_t v0;
  uint64_t inited;
  unint64_t v2;
  objc_class *v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  objc_super v16;
  objc_super v17;

  v0 = sub_21DC13C88(0, &qword_2553A8DA0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8568);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21DC73650;
  *(_QWORD *)(inited + 32) = v0;
  *(_QWORD *)(inited + 40) = 0;
  v2 = sub_21DC2BC0C((_QWORD *)inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8570);
  swift_arrayDestroy();
  v3 = (objc_class *)type metadata accessor for EventFilter();
  v4 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v4[OBJC_IVAR___ISEventFilter_filter] = v2;
  v17.receiver = v4;
  v17.super_class = v3;
  v5 = objc_msgSendSuper2(&v17, sel_init);
  v6 = sub_21DC13C88(0, &qword_2553A8EA8);
  v7 = swift_initStackObject();
  *(_OWORD *)(v7 + 16) = xmmword_21DC73650;
  *(_QWORD *)(v7 + 32) = v6;
  *(_QWORD *)(v7 + 40) = 0;
  v8 = sub_21DC2BC0C((_QWORD *)v7);
  swift_setDeallocating();
  swift_arrayDestroy();
  v9 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v9[OBJC_IVAR___ISEventFilter_filter] = v8;
  v16.receiver = v9;
  v16.super_class = v3;
  v10 = objc_msgSendSuper2(&v16, sel_init);
  v11 = _s26AIMLInstrumentationStreams11EventFilterC1poiyA2C_ACtFZ_0((uint64_t)v5, (uint64_t)v10);

  v12 = sub_21DC13C88(0, &qword_2553A8EB0);
  sub_21DC2809C();
  v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_21DC73650;
  *(_QWORD *)(v13 + 32) = sub_21DC13C88(0, &qword_2553A8EB8);
  v14 = _s26AIMLInstrumentationStreams11EventFilterC4some2of5typesACSo25SISchemaTopLevelUnionTypeCm_SaySo0H22InstrumentationMessageCmGtFZ_0(v12, v13);
  swift_setDeallocating();
  v15 = _s26AIMLInstrumentationStreams11EventFilterC1poiyA2C_ACtFZ_0((uint64_t)v11, (uint64_t)v14);

  qword_2553AC588 = (uint64_t)v15;
}

id EventGraph.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void EventGraph.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id EventGraph.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EventGraph();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_21DC2809C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8EC0);
  if (swift_isClassType())
    v1 = v0;
  else
    v1 = 0;
  if (v1)
    v2 = &qword_2553A9780;
  else
    v2 = (uint64_t *)&unk_2553A8EC8;
  return __swift_instantiateConcreteTypeFromMangledName(v2);
}

uint64_t sub_21DC280E8(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_21DC60F88();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_21DC28180(v6);
  return sub_21DC71F0C();
}

uint64_t type metadata accessor for EventGraph()
{
  return objc_opt_self();
}

uint64_t sub_21DC28180(uint64_t *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  int v17;
  uint64_t v18;
  double v19;
  double v20;
  int v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  double v31;
  double v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  char v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  unint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *__dst;
  uint64_t v106;

  v2 = a1;
  v3 = a1[1];
  result = sub_21DC72068();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_140;
    if (v3)
      return sub_21DC28914(0, v3, 1, v2);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_148;
  v6 = result;
  v96 = v2;
  if (v3 < 2)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v106 = MEMORY[0x24BEE4AF8];
    __dst = (char *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_106:
      if (v13 >= 2)
      {
        v90 = *v96;
        do
        {
          v91 = v13 - 2;
          if (v13 < 2)
            goto LABEL_135;
          if (!v90)
            goto LABEL_147;
          v92 = *(_QWORD *)&v10[16 * v91 + 32];
          v93 = *(_QWORD *)&v10[16 * v13 + 24];
          sub_21DC28A1C((char *)(v90 + 8 * v92), (char *)(v90 + 8 * *(_QWORD *)&v10[16 * v13 + 16]), (char *)(v90 + 8 * v93), __dst);
          if (v1)
            break;
          if (v93 < v92)
            goto LABEL_136;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v10 = sub_21DC5B7D4((uint64_t)v10);
          if (v91 >= *((_QWORD *)v10 + 2))
            goto LABEL_137;
          v94 = &v10[16 * v91 + 32];
          *(_QWORD *)v94 = v92;
          *((_QWORD *)v94 + 1) = v93;
          v95 = *((_QWORD *)v10 + 2);
          if (v13 > v95)
            goto LABEL_138;
          memmove(&v10[16 * v13 + 16], &v10[16 * v13 + 32], 16 * (v95 - v13));
          *((_QWORD *)v10 + 2) = v95 - 1;
          v13 = v95 - 1;
        }
        while (v95 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v106 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_21DC71B94();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v7 = v2;
    v8 = v5 >> 1;
    type metadata accessor for TimestampedOrderedEvent();
    v9 = sub_21DC71BB8();
    *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    v2 = v7;
    __dst = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    v106 = v9;
  }
  v99 = v6;
  v11 = 0;
  v12 = *v2;
  v97 = *v2 - 8;
  v98 = *v2 + 16;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v100 = v3;
  while (1)
  {
    v14 = v11++;
    v102 = v14;
    v103 = v10;
    if (v11 < v3)
    {
      v15 = *(double *)(*(_QWORD *)(v12 + 8 * v11) + 16);
      v16 = *(double *)(*(_QWORD *)(v12 + 8 * v14) + 16);
      if (v15 == v16)
      {
        sub_21DC71774();
        swift_retain();
        swift_retain();
        v17 = sub_21DC7172C();
        swift_release();
        swift_release();
      }
      else
      {
        v17 = v15 < v16;
      }
      v11 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v18 = v98 + 8 * v14;
        while (1)
        {
          v19 = *(double *)(*(_QWORD *)v18 + 16);
          v20 = *(double *)(*(_QWORD *)(v18 - 8) + 16);
          if (v19 == v20)
          {
            sub_21DC71774();
            swift_retain();
            swift_retain();
            v3 = v100;
            v21 = sub_21DC7172C();
            swift_release();
            swift_release();
          }
          else
          {
            v21 = v19 < v20;
          }
          v10 = v103;
          if (((v17 ^ v21) & 1) != 0)
            break;
          ++v11;
          v18 += 8;
          if (v3 == v11)
          {
            v11 = v3;
            break;
          }
        }
        v14 = v102;
      }
      if ((v17 & 1) != 0)
      {
        if (v11 < v14)
          goto LABEL_141;
        if (v14 < v11)
        {
          v22 = (uint64_t *)(v97 + 8 * v11);
          v23 = v11;
          v24 = v14;
          v25 = (uint64_t *)(v12 + 8 * v14);
          do
          {
            if (v24 != --v23)
            {
              if (!v12)
                goto LABEL_146;
              v26 = *v25;
              *v25 = *v22;
              *v22 = v26;
            }
            ++v24;
            --v22;
            ++v25;
          }
          while (v24 < v23);
        }
      }
    }
    if (v11 < v3)
    {
      if (__OFSUB__(v11, v14))
        goto LABEL_139;
      if (v11 - v14 < v99)
        break;
    }
LABEL_56:
    if (v11 < v14)
      goto LABEL_134;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_21DC5B27C(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v36 = *((_QWORD *)v10 + 2);
    v35 = *((_QWORD *)v10 + 3);
    v13 = v36 + 1;
    if (v36 >= v35 >> 1)
      v10 = sub_21DC5B27C((char *)(v35 > 1), v36 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v13;
    v37 = v10 + 32;
    v38 = &v10[16 * v36 + 32];
    *(_QWORD *)v38 = v102;
    *((_QWORD *)v38 + 1) = v11;
    if (v36)
    {
      v104 = v11;
      while (1)
      {
        v39 = v13 - 1;
        if (v13 >= 4)
        {
          v44 = &v37[16 * v13];
          v45 = *((_QWORD *)v44 - 8);
          v46 = *((_QWORD *)v44 - 7);
          v50 = __OFSUB__(v46, v45);
          v47 = v46 - v45;
          if (v50)
            goto LABEL_123;
          v49 = *((_QWORD *)v44 - 6);
          v48 = *((_QWORD *)v44 - 5);
          v50 = __OFSUB__(v48, v49);
          v42 = v48 - v49;
          v43 = v50;
          if (v50)
            goto LABEL_124;
          v51 = v13 - 2;
          v52 = &v37[16 * v13 - 32];
          v54 = *(_QWORD *)v52;
          v53 = *((_QWORD *)v52 + 1);
          v50 = __OFSUB__(v53, v54);
          v55 = v53 - v54;
          if (v50)
            goto LABEL_126;
          v50 = __OFADD__(v42, v55);
          v56 = v42 + v55;
          if (v50)
            goto LABEL_129;
          if (v56 >= v47)
          {
            v74 = &v37[16 * v39];
            v76 = *(_QWORD *)v74;
            v75 = *((_QWORD *)v74 + 1);
            v50 = __OFSUB__(v75, v76);
            v77 = v75 - v76;
            if (v50)
              goto LABEL_133;
            v67 = v42 < v77;
            goto LABEL_94;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v68 = *((_QWORD *)v10 + 4);
            v69 = *((_QWORD *)v10 + 5);
            v50 = __OFSUB__(v69, v68);
            v61 = v69 - v68;
            v62 = v50;
            goto LABEL_88;
          }
          v41 = *((_QWORD *)v10 + 4);
          v40 = *((_QWORD *)v10 + 5);
          v50 = __OFSUB__(v40, v41);
          v42 = v40 - v41;
          v43 = v50;
        }
        if ((v43 & 1) != 0)
          goto LABEL_125;
        v51 = v13 - 2;
        v57 = &v37[16 * v13 - 32];
        v59 = *(_QWORD *)v57;
        v58 = *((_QWORD *)v57 + 1);
        v60 = __OFSUB__(v58, v59);
        v61 = v58 - v59;
        v62 = v60;
        if (v60)
          goto LABEL_128;
        v63 = &v37[16 * v39];
        v65 = *(_QWORD *)v63;
        v64 = *((_QWORD *)v63 + 1);
        v50 = __OFSUB__(v64, v65);
        v66 = v64 - v65;
        if (v50)
          goto LABEL_131;
        if (__OFADD__(v61, v66))
          goto LABEL_132;
        if (v61 + v66 >= v42)
        {
          v67 = v42 < v66;
LABEL_94:
          if (v67)
            v39 = v51;
          goto LABEL_96;
        }
LABEL_88:
        if ((v62 & 1) != 0)
          goto LABEL_127;
        v70 = &v37[16 * v39];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v50 = __OFSUB__(v71, v72);
        v73 = v71 - v72;
        if (v50)
          goto LABEL_130;
        if (v73 < v61)
          goto LABEL_14;
LABEL_96:
        v78 = v39 - 1;
        if (v39 - 1 >= v13)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        v79 = v12;
        if (!v12)
          goto LABEL_145;
        v80 = v10;
        v81 = &v37[16 * v78];
        v82 = v37;
        v83 = *(_QWORD *)v81;
        v84 = v82;
        v85 = v39;
        v86 = &v82[16 * v39];
        v87 = *((_QWORD *)v86 + 1);
        v88 = v79;
        sub_21DC28A1C((char *)(v79 + 8 * *(_QWORD *)v81), (char *)(v79 + 8 * *(_QWORD *)v86), (char *)(v79 + 8 * v87), __dst);
        if (v1)
          goto LABEL_117;
        if (v87 < v83)
          goto LABEL_120;
        if (v85 > *((_QWORD *)v80 + 2))
          goto LABEL_121;
        *(_QWORD *)v81 = v83;
        *(_QWORD *)&v84[16 * v78 + 8] = v87;
        v89 = *((_QWORD *)v80 + 2);
        if (v85 >= v89)
          goto LABEL_122;
        v37 = v84;
        v10 = v80;
        v13 = v89 - 1;
        memmove(v86, v86 + 16, 16 * (v89 - 1 - v85));
        *((_QWORD *)v80 + 2) = v89 - 1;
        v12 = v88;
        v11 = v104;
        if (v89 <= 2)
          goto LABEL_14;
      }
    }
    v13 = 1;
LABEL_14:
    v3 = v100;
    if (v11 >= v100)
      goto LABEL_106;
  }
  if (__OFADD__(v14, v99))
    goto LABEL_142;
  if (v14 + v99 >= v3)
    v27 = v3;
  else
    v27 = v14 + v99;
  if (v27 >= v14)
  {
    if (v11 != v27)
    {
      v28 = (_QWORD *)(v97 + 8 * v11);
      v101 = v27;
      do
      {
        v29 = *(_QWORD *)(v12 + 8 * v11);
        v30 = v28;
        do
        {
          v31 = *(double *)(v29 + 16);
          v32 = *(double *)(*v30 + 16);
          if (v31 == v32)
          {
            sub_21DC71774();
            swift_retain();
            swift_retain();
            v33 = sub_21DC7172C();
            swift_release();
            swift_release();
            if ((v33 & 1) == 0)
              break;
          }
          else if (v31 >= v32)
          {
            break;
          }
          if (!v12)
            goto LABEL_144;
          v34 = *v30;
          v29 = v30[1];
          *v30 = v29;
          v30[1] = v34;
          --v30;
          ++v14;
        }
        while (v11 != v14);
        ++v11;
        ++v28;
        v14 = v102;
      }
      while (v11 != v101);
      v11 = v101;
      v10 = v103;
    }
    goto LABEL_56;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  result = sub_21DC71FA8();
  __break(1u);
  return result;
}

uint64_t sub_21DC28914(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  double v10;
  double v11;
  char v12;
  uint64_t v13;
  uint64_t v15;

  v15 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    v7 = *(_QWORD *)(v5 + 8 * v4);
    v8 = v15;
    v9 = (_QWORD *)v6;
    while (1)
    {
      v10 = *(double *)(v7 + 16);
      v11 = *(double *)(*v9 + 16);
      if (v10 == v11)
      {
        sub_21DC71774();
        swift_retain();
        swift_retain();
        v12 = sub_21DC7172C();
        swift_release();
        result = swift_release();
        if ((v12 & 1) == 0)
          goto LABEL_4;
      }
      else if (v10 >= v11)
      {
        goto LABEL_4;
      }
      if (!v5)
        break;
      v13 = *v9;
      v7 = v9[1];
      *v9 = v7;
      v9[1] = v13;
      --v9;
      if (v4 == ++v8)
      {
LABEL_4:
        ++v4;
        v6 += 8;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_21DC28A1C(char *a1, char *__src, char *a3, char *__dst)
{
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double v15;
  double v16;
  char *v17;
  char v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  double v24;
  double v25;
  char v26;
  char *v27;
  char *v28;
  uint64_t result;
  char *v31;
  char *v32;
  char *v33;
  char *v34;

  v4 = __dst;
  v5 = a3;
  v6 = __src;
  v7 = a1;
  v8 = __src - a1;
  v9 = __src - a1 + 7;
  if (__src - a1 >= 0)
    v9 = __src - a1;
  v10 = v9 >> 3;
  v11 = a3 - __src;
  v12 = a3 - __src + 7;
  if (a3 - __src >= 0)
    v12 = a3 - __src;
  v13 = v12 >> 3;
  v34 = a1;
  v33 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7)
      goto LABEL_49;
    if (__dst != __src || &__src[8 * v13] <= __dst)
    {
      memmove(__dst, __src, 8 * v13);
      v7 = a1;
    }
    v20 = &v4[8 * v13];
    v32 = v20;
    v34 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_48:
      sub_21DC5B374(&v34, &v33, &v32);
      return 1;
    }
    v21 = v6;
    v31 = v4;
    while (1)
    {
      v22 = v20 - 8;
      v23 = *((_QWORD *)v21 - 1);
      v21 -= 8;
      v24 = *(double *)(*((_QWORD *)v20 - 1) + 16);
      v25 = *(double *)(v23 + 16);
      if (v24 == v25)
      {
        sub_21DC71774();
        swift_retain();
        swift_retain();
        v26 = sub_21DC7172C();
        swift_release();
        swift_release();
        v7 = a1;
        v27 = v5 - 8;
        if ((v26 & 1) != 0)
          goto LABEL_34;
      }
      else
      {
        v27 = v5 - 8;
        if (v24 < v25)
        {
LABEL_34:
          if (v5 != v6 || v27 >= v6)
            *(_QWORD *)v27 = *(_QWORD *)v21;
          v34 = v21;
LABEL_46:
          v28 = v31;
          if (v21 <= v7)
            goto LABEL_48;
          goto LABEL_47;
        }
      }
      v32 = v20 - 8;
      if (v5 < v20 || v27 >= v20)
      {
        *(_QWORD *)v27 = *(_QWORD *)v22;
        v21 = v6;
        v20 -= 8;
        goto LABEL_46;
      }
      v28 = v31;
      if (v5 != v20)
        *(_QWORD *)v27 = *(_QWORD *)v22;
      v21 = v6;
      v20 -= 8;
      if (v6 <= v7)
        goto LABEL_48;
LABEL_47:
      v6 = v21;
      v5 = v27;
      if (v20 <= v28)
        goto LABEL_48;
    }
  }
  if (v8 >= -7)
  {
    if (__dst != a1 || &a1[8 * v10] <= __dst)
    {
      memmove(__dst, a1, 8 * v10);
      v7 = a1;
    }
    v14 = &v4[8 * v10];
    v32 = v14;
    if (v6 < v5 && v8 >= 8)
    {
      while (1)
      {
        v15 = *(double *)(*(_QWORD *)v6 + 16);
        v16 = *(double *)(*(_QWORD *)v4 + 16);
        if (v15 == v16)
        {
          v17 = v7;
          sub_21DC71774();
          swift_retain();
          swift_retain();
          v18 = sub_21DC7172C();
          swift_release();
          swift_release();
          v7 = v17;
          if ((v18 & 1) == 0)
            goto LABEL_19;
        }
        else if (v15 >= v16)
        {
LABEL_19:
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v33 = v4;
          v19 = v6;
          goto LABEL_22;
        }
        v19 = v6 + 8;
        if (v7 < v6 || v7 >= v19 || v7 != v6)
          *(_QWORD *)v7 = *(_QWORD *)v6;
LABEL_22:
        v7 += 8;
        if (v4 < v14)
        {
          v6 = v19;
          if (v19 < v5)
            continue;
        }
        v34 = v7;
        goto LABEL_48;
      }
    }
    goto LABEL_48;
  }
LABEL_49:
  result = sub_21DC72008();
  __break(1u);
  return result;
}

BOOL sub_21DC28D7C()
{
  uint64_t v0;
  int v1;

  v1 = *(_DWORD *)(v0 + 16);
  return sub_21DC717D4() == v1;
}

uint64_t sub_21DC28DA8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_21DC27CEC(a1, *(void **)(v3 + 24), *(_QWORD *)(v3 + 16), a2, a3);
}

unint64_t sub_21DC28DC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2553A8EA0;
  if (!qword_2553A8EA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553A8E98);
    result = MEMORY[0x22079D964](MEMORY[0x24BEE03C0], v1);
    atomic_store(result, (unint64_t *)&qword_2553A8EA0);
  }
  return result;
}

uint64_t method lookup function for EventGraph()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EventGraph.date.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of EventGraph.componentIdentifiers.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of EventGraph.__allocating_init(timestamp:events:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of EventGraph.timestampedEvents()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of EventGraph.events()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of EventGraph.events(type:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of EventGraph.events(innerType:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of EventGraph.events(componentName:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of EventGraph.events(componentIdentifier:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of EventGraph.event(innerType:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of EventGraph.getComponentGroups<A>()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x140))();
}

uint64_t dispatch thunk of EventGraph.getComponentGroup<A>()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x148))();
}

uint64_t sub_21DC28F54(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

BOOL static StreamType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t StreamType.hash(into:)()
{
  return sub_21DC72140();
}

uint64_t StreamType.hashValue.getter()
{
  sub_21DC72134();
  sub_21DC72140();
  return sub_21DC72158();
}

unint64_t sub_21DC28FE8()
{
  unint64_t result;

  result = qword_2553A8ED0;
  if (!qword_2553A8ED0)
  {
    result = MEMORY[0x22079D964](&protocol conformance descriptor for StreamType, &type metadata for StreamType);
    atomic_store(result, (unint64_t *)&qword_2553A8ED0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StreamType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_21DC29078 + 4 * byte_21DC73BD5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_21DC290AC + 4 * byte_21DC73BD0[v4]))();
}

uint64_t sub_21DC290AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21DC290B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21DC290BCLL);
  return result;
}

uint64_t sub_21DC290C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21DC290D0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_21DC290D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21DC290DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StreamType()
{
  return &type metadata for StreamType;
}

uint64_t dispatch thunk of BiomeSourceStream.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BiomeSourceStream.stream(startTime:endTime:maxEvents:lastN:useCase:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD))(a12 + 16))(a1, a2 & 1, a3, a4 & 1, a5, a6 & 1, a7, a8 & 1);
}

uint64_t sub_21DC29128@<X0>(char a1@<W1>, int a2@<W3>, uint64_t a3@<X4>, int a4@<W5>, uint64_t a5@<X6>, int a6@<W7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, _QWORD, uint64_t, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  id v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v53[4];
  char *v54;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[4];

  v59 = a6;
  v60 = a5;
  v56 = a2;
  v57 = a4;
  v58 = a3;
  v62 = a7;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8668);
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61, v10);
  v54 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A81A8);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v14, v17);
  v20 = (char *)v53 - v19;
  v22 = MEMORY[0x24BDAC7A8](v18, v21);
  v24 = (char *)v53 - v23;
  v26 = MEMORY[0x24BDAC7A8](v22, v25);
  v28 = (char *)v53 - v27;
  v30 = MEMORY[0x24BDAC7A8](v26, v29);
  v32 = (char *)v53 - v31;
  MEMORY[0x24BDAC7A8](v30, v33);
  v35 = (char *)v53 - v34;
  v36 = swift_allocObject();
  v53[3] = v36;
  *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
  v53[2] = v36 + 16;
  if ((a1 & 1) != 0)
  {
    v38 = sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v32, 1, 1, v38);
    goto LABEL_5;
  }
  v53[0] = a9;
  v37 = v28;
  sub_21DC7151C();
  v38 = sub_21DC71588();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56);
  v40(v32, 0, 1, v38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38) == 1)
  {
    v28 = v37;
LABEL_5:
    sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v35, 1, 1, v38);
    sub_21DC0892C((uint64_t)v32);
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v35, v32, v38);
  v40(v35, 0, 1, v38);
  v28 = v37;
LABEL_7:
  if ((v56 & 1) != 0)
  {
    v43 = sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v24, 1, 1, v43);
    goto LABEL_11;
  }
  v41 = v35;
  v42 = v28;
  sub_21DC7151C();
  v43 = sub_21DC71588();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56);
  v45(v24, 0, 1, v43);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v24, 1, v43) == 1)
  {
    v28 = v42;
    v35 = v41;
LABEL_11:
    sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v28, 1, 1, v43);
    sub_21DC0892C((uint64_t)v24);
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v42, v24, v43);
  v45(v42, 0, 1, v43);
  v28 = v42;
  v35 = v41;
LABEL_13:
  sub_21DC0896C((uint64_t)v35, (uint64_t)v20);
  sub_21DC0896C((uint64_t)v28, (uint64_t)v16);
  if ((v57 & 1) != 0)
    v46 = 0;
  else
    v46 = v58;
  if ((v59 & 1) != 0)
    v47 = 0;
  else
    v47 = v60;
  sub_21DC07D04();
  v48 = sub_21DC42828((uint64_t)v20, (uint64_t)v16, v46, v47, 0);
  sub_21DC71930();
  sub_21DC29AB0();
  swift_bridgeObjectRetain();
  sub_21DC7196C();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v63, v63[3]);
  swift_retain();
  sub_21DC719FC();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  v49 = v54;
  v50 = v55;
  swift_beginAccess();
  type metadata accessor for AnteroEvent();
  swift_bridgeObjectRetain();
  sub_21DC71B7C();
  swift_bridgeObjectRelease();
  sub_21DC16C48();
  v51 = v61;
  sub_21DC71618();
  sub_21DC71660();

  (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v51);
  sub_21DC0892C((uint64_t)v28);
  sub_21DC0892C((uint64_t)v35);
  return swift_release();
}

uint64_t sub_21DC297E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8FB8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_21DC719B4();
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  sub_21DC719A8();
  v10 = objc_allocWithZone((Class)type metadata accessor for AnteroEvent());
  AnteroEvent.init(gfiEvent:timestamp:)((uint64_t)v7);
  v11 = swift_beginAccess();
  MEMORY[0x22079CE84](v11);
  if (*(_QWORD *)((*(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_21DC71BA0();
  sub_21DC71BC4();
  sub_21DC71B94();
  return swift_endAccess();
}

uint64_t sub_21DC2992C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams9GMSStream_logger;
  v2 = sub_21DC719D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_21DC2997C()
{
  return type metadata accessor for GMSStream();
}

uint64_t type metadata accessor for GMSStream()
{
  uint64_t result;

  result = qword_2553A8F00;
  if (!qword_2553A8F00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21DC299C0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21DC719D8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_21DC29A34(_BYTE *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *(_BYTE *)(*v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams9GMSStream_name);
}

uint64_t sub_21DC29A4C@<X0>(char a1@<W1>, char a2@<W3>, uint64_t a3@<X4>, char a4@<W5>, uint64_t a5@<X6>, char a6@<W7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9)
{
  return sub_21DC29128(a1 & 1, a2 & 1, a3, a4 & 1, a5, a6 & 1, a7, a8, a9);
}

uint64_t sub_21DC29A8C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_21DC29AB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2553A8FB0;
  if (!qword_2553A8FB0)
  {
    v1 = sub_21DC71930();
    result = MEMORY[0x22079D964](MEMORY[0x24BE59838], v1);
    atomic_store(result, (unint64_t *)&qword_2553A8FB0);
  }
  return result;
}

uint64_t sub_21DC29AF8(uint64_t a1)
{
  uint64_t v1;

  return sub_21DC297E4(a1, v1);
}

unint64_t sub_21DC29B00(uint64_t a1)
{
  return sub_21DC2A7F8(a1, &qword_2553A8500);
}

unint64_t sub_21DC29B0C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84C8);
  v2 = (_QWORD *)sub_21DC71FFC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_21DC0A568(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21DC29C1C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA590);
  v2 = (_QWORD *)sub_21DC71FFC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_21DC0A568(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21DC29D34(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84D0);
  v2 = (_QWORD *)sub_21DC71FFC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 64);
  while (1)
  {
    v5 = *(v4 - 4);
    v6 = *(v4 - 3);
    v7 = *(v4 - 2);
    v8 = *(v4 - 1);
    v9 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_21DC0A5CC(v5, v6, v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v2[6] + 32 * result);
    *v12 = v5;
    v12[1] = v6;
    v12[2] = v7;
    v12[3] = v8;
    *(_QWORD *)(v2[7] + 8 * result) = v9;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v2[2] = v15;
    v4 += 5;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21DC29E64(uint64_t a1)
{
  return sub_21DC29FE4(a1, &qword_2553AA5B0);
}

unint64_t sub_21DC29E70(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA5A0);
  v2 = sub_21DC71FFC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v21 = v2 + 64;
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v22 = v4;
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    v9 = v5[1];
    v11 = v5[2];
    v10 = v5[3];
    v13 = v5[4];
    v12 = v5[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_21DC0A5CC(v6, v7, v8, v9);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v16 = (uint64_t *)(v3[6] + 32 * result);
    *v16 = v6;
    v16[1] = v7;
    v16[2] = v8;
    v16[3] = v9;
    v17 = (uint64_t *)(v3[7] + 32 * result);
    *v17 = v11;
    v17[1] = v10;
    v17[2] = v13;
    v17[3] = v12;
    v18 = v3[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_11;
    v3[2] = v20;
    v5 += 8;
    v4 = v22 - 1;
    if (v22 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21DC29FD8(uint64_t a1)
{
  return sub_21DC29FE4(a1, &qword_2553A84D8);
}

unint64_t sub_21DC29FE4(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_21DC71FFC();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 64);
  while (1)
  {
    v6 = *(v5 - 4);
    v7 = *(v5 - 3);
    v8 = *(v5 - 2);
    v9 = *(v5 - 1);
    v10 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_21DC0A5CC(v6, v7, v8, v9);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v3[6] + 32 * result);
    *v13 = v6;
    v13[1] = v7;
    v13[2] = v8;
    v13[3] = v9;
    *(_QWORD *)(v3[7] + 8 * result) = v10;
    v14 = v3[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v3[2] = v16;
    v5 += 5;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21DC2A120(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA5E0);
  v2 = sub_21DC71FFC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_21DC07CC0(v6, (uint64_t)v15, &qword_2553A9040);
    result = sub_21DC0A678((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_21DC13D80(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21DC2A260(uint64_t a1)
{
  return sub_21DC2AB74(a1, &qword_2553A9018, &qword_2553A84C0, (uint64_t (*)(char *))sub_21DC0A6A8, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair);
}

unint64_t sub_21DC2A284(uint64_t a1)
{
  return sub_21DC2AD2C(a1, &qword_2553A9010, (uint64_t *)&unk_2553AA540, (uint64_t (*)(char *))sub_21DC0A6A8, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair);
}

unint64_t sub_21DC2A2A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9028);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA510);
  v7 = sub_21DC71FFC();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_21DC07CC0(v13, (uint64_t)v6, &qword_2553A9028);
    result = sub_21DC0A740((uint64_t)v6);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = sub_21DC715F4();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v6, v19);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v6[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21DC2A43C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9020);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84B8);
  v7 = sub_21DC71FFC();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_21DC07CC0(v13, (uint64_t)v6, &qword_2553A9020);
    result = sub_21DC0A740((uint64_t)v6);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = sub_21DC715F4();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v6, v19);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v6[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21DC2A5D0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA550);
  v2 = (_QWORD *)sub_21DC71FFC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    result = sub_21DC0A4BC((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21DC2A6D8(uint64_t a1)
{
  return sub_21DC2A7F8(a1, (uint64_t *)&unk_2553AA560);
}

unint64_t sub_21DC2A6E4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84A8);
  v2 = (_QWORD *)sub_21DC71FFC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_21DC0A4BC((uint64_t)v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21DC2A7EC(uint64_t a1)
{
  return sub_21DC2A7F8(a1, &qword_2553A84B0);
}

unint64_t sub_21DC2A7F8(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_21DC71FFC();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v6 = *v5;
    v7 = (id)*(v5 - 1);
    swift_bridgeObjectRetain();
    result = sub_21DC0A4BC((uint64_t)v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v3[6] + v10) = v7;
    *(_QWORD *)(v3[7] + v10) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v3[2] = v13;
    v5 += 2;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21DC2A8FC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9038);
  v2 = (_QWORD *)sub_21DC71FFC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_21DC0A568(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21DC2AA1C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84E8);
  v2 = sub_21DC71FFC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_21DC07CC0(v6, (uint64_t)&v15, &qword_2553A9030);
    v7 = v15;
    v8 = v16;
    result = sub_21DC0A568(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_21DC13D80(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21DC2AB50(uint64_t a1)
{
  return sub_21DC2AB74(a1, &qword_2553A9008, &qword_2553AA440, (uint64_t (*)(char *))sub_21DC0A7A4, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
}

unint64_t sub_21DC2AB74(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(char *), uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t result;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t *v31;
  uint64_t (*v32)(char *);

  v31 = a2;
  v32 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v14 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v13 = sub_21DC71FFC();
  v14 = (_QWORD *)v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v14;
  }
  v16 = *(int *)(v8 + 48);
  v17 = a1;
  v18 = v13 + 64;
  v19 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v30[1] = v17;
  v20 = v17 + v19;
  v21 = *(_QWORD *)(v9 + 72);
  swift_retain();
  while (1)
  {
    sub_21DC07CC0(v20, (uint64_t)v12, v31);
    result = v32(v12);
    if ((v23 & 1) != 0)
      break;
    v24 = result;
    *(_QWORD *)(v18 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v25 = v14[6];
    v26 = a5(0);
    result = sub_21DC13CC0((uint64_t)v12, v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v24, a5);
    *(_QWORD *)(v14[7] + 8 * v24) = *(_QWORD *)&v12[v16];
    v27 = v14[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_11;
    v14[2] = v29;
    v20 += v21;
    if (!--v15)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21DC2AD08(uint64_t a1)
{
  return sub_21DC2AD2C(a1, &qword_2553A9000, &qword_2553AA460, (uint64_t (*)(char *))sub_21DC0A7A4, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
}

unint64_t sub_21DC2AD2C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(char *), uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t result;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t *v31;
  uint64_t (*v32)(char *);

  v31 = a2;
  v32 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v14 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v13 = sub_21DC71FFC();
  v14 = (_QWORD *)v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v14;
  }
  v16 = *(int *)(v8 + 48);
  v17 = a1;
  v18 = v13 + 64;
  v19 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v30[1] = v17;
  v20 = v17 + v19;
  v21 = *(_QWORD *)(v9 + 72);
  swift_retain();
  while (1)
  {
    sub_21DC07CC0(v20, (uint64_t)v12, v31);
    result = v32(v12);
    if ((v23 & 1) != 0)
      break;
    v24 = result;
    *(_QWORD *)(v18 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v25 = v14[6];
    v26 = a5(0);
    result = sub_21DC13CC0((uint64_t)v12, v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v24, a5);
    *(_QWORD *)(v14[7] + 8 * v24) = *(_QWORD *)&v12[v16];
    v27 = v14[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_11;
    v14[2] = v29;
    v20 += v21;
    if (!--v15)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21DC2AEC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8FF0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA450);
  v7 = sub_21DC71FFC();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = (uint64_t)&v6[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_21DC07CC0(v13, (uint64_t)v6, &qword_2553A8FF0);
    result = sub_21DC0A7A4((uint64_t)v6);
    if ((v16 & 1) != 0)
      break;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v8[6];
    v18 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for SiriConversationPublisher.GraphUUID() - 8) + 72) * result;
    sub_21DC13CC0((uint64_t)v6, v17 + v18, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    result = sub_21DC13CC0(v10, v8[7] + v18, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    v19 = v8[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v8[2] = v21;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21DC2B068(uint64_t a1)
{
  return sub_21DC2AD2C(a1, &qword_2553A8FF8, &qword_2553A84A0, (uint64_t (*)(char *))sub_21DC0A7A4, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
}

id static EventFilter.all(of:)(uint64_t a1)
{
  uint64_t inited;
  unint64_t v3;
  objc_class *v4;
  char *v5;
  objc_super v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8568);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21DC73650;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = 0;
  v3 = sub_21DC2BC0C((_QWORD *)inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8570);
  swift_arrayDestroy();
  v4 = (objc_class *)type metadata accessor for EventFilter();
  v5 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v5[OBJC_IVAR___ISEventFilter_filter] = v3;
  v7.receiver = v5;
  v7.super_class = v4;
  return objc_msgSendSuper2(&v7, sel_init);
}

id EventFilter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id EventFilter.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR___ISEventFilter_filter] = sub_21DC2BC0C(MEMORY[0x24BEE4AF8]);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EventFilter();
  return objc_msgSendSuper2(&v2, sel_init);
}

id static EventFilter.everything.getter()
{
  objc_class *v0;
  char *v1;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for EventFilter();
  v1 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR___ISEventFilter_filter] = 0;
  v3.receiver = v1;
  v3.super_class = v0;
  return objc_msgSendSuper2(&v3, sel_init);
}

id sub_21DC2B3B8(uint64_t a1)
{
  uint64_t v1;

  return _s26AIMLInstrumentationStreams11EventFilterC1poiyA2C_ACtFZ_0(v1, a1);
}

BOOL sub_21DC2B410(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = a1[3];
  v3 = a1[4];
  v4 = __swift_project_boxed_opaque_existential_1(a1, v2);
  return sub_21DC2B7F4((uint64_t)v4, v1, v2, v3);
}

id EventFilter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EventFilter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_21DC2B488(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  void *v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v3 = a1[2];
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v7 = a1[4];
  v6 = a1[5];
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)*a3;
  v9 = sub_21DC0A464(v7);
  v11 = v8[2];
  v12 = (v10 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
    goto LABEL_24;
  v14 = v9;
  v15 = v10;
  v16 = v8[3];
  sub_21DC13D90(v6);
  if (v16 >= v13)
  {
    if ((a2 & 1) != 0)
    {
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_21DC5D328();
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v21 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v14 >> 6) + 64) |= 1 << v14;
    v22 = 8 * v14;
    *(_QWORD *)(v21[6] + v22) = v7;
    *(_QWORD *)(v21[7] + v22) = v6;
    v23 = v21[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v21[2] = v25;
    v26 = v3 - 1;
    if (v3 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    v27 = a1 + 7;
    while (1)
    {
      v28 = *(v27 - 1);
      v6 = *v27;
      v29 = (_QWORD *)*a3;
      v30 = sub_21DC0A464(v28);
      v32 = v29[2];
      v33 = (v31 & 1) == 0;
      v34 = v32 + v33;
      if (__OFADD__(v32, v33))
        break;
      v35 = v30;
      v36 = v31;
      v37 = v29[3];
      sub_21DC13D90(v6);
      if (v37 < v34)
      {
        sub_21DC0F64C(v34, 1);
        v38 = sub_21DC0A464(v28);
        if ((v36 & 1) != (v39 & 1))
          goto LABEL_26;
        v35 = v38;
      }
      if ((v36 & 1) != 0)
        goto LABEL_10;
      v40 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v35 >> 6) + 64) |= 1 << v35;
      v41 = 8 * v35;
      *(_QWORD *)(v40[6] + v41) = v28;
      *(_QWORD *)(v40[7] + v41) = v6;
      v42 = v40[2];
      v24 = __OFADD__(v42, 1);
      v43 = v42 + 1;
      if (v24)
        goto LABEL_25;
      v27 += 2;
      v40[2] = v43;
      if (!--v26)
        goto LABEL_23;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_21DC0F64C(v13, a2 & 1);
  v17 = sub_21DC0A464(v7);
  if ((v15 & 1) == (v18 & 1))
  {
    v14 = v17;
    if ((v15 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v19 = (void *)swift_allocError();
    swift_willThrow();
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9048);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_21DC2C3F4(v6);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_21DC720E0();
  __break(1u);
LABEL_27:
  sub_21DC71EC4();
  sub_21DC71B10();
  sub_21DC71F6C();
  sub_21DC71B10();
  sub_21DC71FB4();
  __break(1u);
}

BOOL sub_21DC2B7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;

  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  v9 = *(_QWORD *)(a2 + OBJC_IVAR___ISEventFilter_filter);
  if (v9)
  {
    if (!*(_QWORD *)(v9 + 16))
      return 0;
    v10 = v8;
    v11 = sub_21DC0A464(v7);
    if ((v12 & 1) == 0)
      return 0;
    v13 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v11);
    if (v13)
    {
      if (v13 != 1 && v10)
        return sub_21DC49868(v10, v13);
      return 0;
    }
  }
  return 1;
}

uint64_t sub_21DC2B8B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t result;
  uint64_t v28;
  _QWORD *v29;
  int64_t v30;

  v6 = a1 + 56;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 56);
  v30 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  v10 = 0;
  v28 = v6;
  v29 = (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_22;
    }
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_52;
    }
    if (v13 >= v30)
      goto LABEL_50;
    v14 = *(_QWORD *)(v6 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v30)
        goto LABEL_50;
      v14 = *(_QWORD *)(v6 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v30)
          goto LABEL_50;
        v14 = *(_QWORD *)(v6 + 8 * v10);
        if (!v14)
        {
          v10 = v13 + 3;
          if (v13 + 3 >= v30)
            goto LABEL_50;
          v14 = *(_QWORD *)(v6 + 8 * v10);
          if (!v14)
            break;
        }
      }
    }
LABEL_21:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_22:
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v12);
    if (*(_QWORD *)(a2 + 16) && (v17 = sub_21DC0A464(v16), (v18 & 1) != 0))
    {
      v19 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v17);
      sub_21DC13D90(v19);
      if (*(_QWORD *)(a3 + 16))
        goto LABEL_27;
LABEL_31:
      v22 = 2;
      if (v19 == 2)
        goto LABEL_32;
LABEL_29:
      if (v22 == 2)
      {
        v22 = v19;
        goto LABEL_33;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9050);
      if (!v19)
      {
        sub_21DC2C404(0);
        sub_21DC2C404(v22);
        v22 = 0;
        goto LABEL_33;
      }
      if (!v22)
      {
        sub_21DC2C404(v19);
        v26 = 0;
LABEL_47:
        sub_21DC2C404(v26);
        goto LABEL_33;
      }
      if (v22 == 1)
      {
        sub_21DC2C404(1uLL);
        if (v19 == 1)
        {
          sub_21DC2C404(1uLL);
          v22 = 1;
        }
        else
        {
          v22 = v19;
        }
      }
      else
      {
        if (v19 == 1)
        {
          v26 = 1;
          goto LABEL_47;
        }
        v22 = sub_21DC50618(v22, v19);
      }
LABEL_33:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v29 = sub_21DC14A54(0, v29[2] + 1, 1, v29);
      v24 = v29[2];
      v23 = v29[3];
      if (v24 >= v23 >> 1)
        v29 = sub_21DC14A54((_QWORD *)(v23 > 1), v24 + 1, 1, v29);
      v29[2] = v24 + 1;
      v25 = &v29[2 * v24];
      v25[4] = v16;
      v25[5] = v22;
      v6 = v28;
    }
    else
    {
      v19 = 2;
      if (!*(_QWORD *)(a3 + 16))
        goto LABEL_31;
LABEL_27:
      v20 = sub_21DC0A464(v16);
      if ((v21 & 1) == 0)
        goto LABEL_31;
      v22 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v20);
      sub_21DC13D90(v22);
      if (v19 != 2)
        goto LABEL_29;
LABEL_32:
      if (v22 != 2)
        goto LABEL_33;
    }
  }
  v15 = v13 + 4;
  if (v15 >= v30)
  {
LABEL_50:
    swift_release();
    return (uint64_t)v29;
  }
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_21;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v30)
      goto LABEL_50;
    v14 = *(_QWORD *)(v6 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_21;
  }
LABEL_52:
  __break(1u);
  swift_bridgeObjectRetain();
  result = sub_21DC72098();
  __break(1u);
  return result;
}

unint64_t sub_21DC2BC00(uint64_t a1)
{
  return sub_21DC2C420(a1, (uint64_t *)&unk_2553AA600);
}

unint64_t sub_21DC2BC0C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  char v13;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84F0);
  v3 = (_QWORD *)sub_21DC71FFC();
  v5 = a1[4];
  v4 = a1[5];
  result = sub_21DC0A464(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x24BEE4B00];
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    sub_21DC13D90(v4);
    if (!--v1)
      return (unint64_t)v3;
    v5 = *(v8 - 1);
    v4 = *v8;
    result = sub_21DC0A464(v5);
    v8 += 2;
    if ((v13 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for EventFilter()
{
  return objc_opt_self();
}

id _s26AIMLInstrumentationStreams11EventFilterC1poiyA2C_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  char *v10;
  objc_super *v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  char *v17;
  char *v18;
  objc_super v19;
  uint64_t v20;

  v2 = *(_QWORD *)(a1 + OBJC_IVAR___ISEventFilter_filter);
  if (v2)
  {
    v3 = *(_QWORD *)(a2 + OBJC_IVAR___ISEventFilter_filter);
    if (v3)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v4 = sub_21DC49404(v2);
      v5 = swift_bridgeObjectRetain();
      v6 = sub_21DC504C0(v5, v4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v7 = sub_21DC2B8B4(v6, v2, v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      if (*(_QWORD *)(v7 + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84F0);
        v8 = sub_21DC71FFC();
      }
      else
      {
        v8 = MEMORY[0x24BEE4B00];
      }
      v20 = v8;
      v13 = (_QWORD *)swift_bridgeObjectRetain();
      sub_21DC2B488(v13, 1, &v20);
      swift_bridgeObjectRelease();
      v14 = v20;
      v9 = (objc_class *)type metadata accessor for EventFilter();
      v15 = (char *)objc_allocWithZone(v9);
      *(_QWORD *)&v15[OBJC_IVAR___ISEventFilter_filter] = v14;
      v19.receiver = v15;
      v11 = &v19;
    }
    else
    {
      v9 = (objc_class *)type metadata accessor for EventFilter();
      v12 = (char *)objc_allocWithZone(v9);
      *(_QWORD *)&v12[OBJC_IVAR___ISEventFilter_filter] = 0;
      v18 = v12;
      v11 = (objc_super *)&v18;
    }
  }
  else
  {
    v9 = (objc_class *)type metadata accessor for EventFilter();
    v10 = (char *)objc_allocWithZone(v9);
    *(_QWORD *)&v10[OBJC_IVAR___ISEventFilter_filter] = 0;
    v17 = v10;
    v11 = (objc_super *)&v17;
  }
  v11->super_class = v9;
  return -[objc_super init](v11, sel_init, v17);
}

id _s26AIMLInstrumentationStreams11EventFilterC4some2of5typesACSo25SISchemaTopLevelUnionTypeCm_SaySo0H22InstrumentationMessageCmGtFZ_0(uint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t inited;
  unint64_t v12;
  objc_class *v13;
  char *v14;
  objc_super v16;
  uint64_t v17;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_21DC4BAF4(0, v3, 0);
    v4 = v17;
    v6 = (uint64_t *)(a2 + 32);
    v7 = *(_QWORD *)(v17 + 16);
    do
    {
      v8 = *v6;
      v17 = v4;
      v9 = *(_QWORD *)(v4 + 24);
      if (v7 >= v9 >> 1)
      {
        sub_21DC4BAF4(v9 > 1, v7 + 1, 1);
        v4 = v17;
      }
      *(_QWORD *)(v4 + 16) = v7 + 1;
      *(_QWORD *)(v4 + 8 * v7 + 32) = v8;
      ++v6;
      ++v7;
      --v3;
    }
    while (v3);
  }
  v10 = sub_21DC4A5A0(v4);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8568);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21DC73650;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = v10;
  v12 = sub_21DC2BC0C((_QWORD *)inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8570);
  swift_arrayDestroy();
  v13 = (objc_class *)type metadata accessor for EventFilter();
  v14 = (char *)objc_allocWithZone(v13);
  *(_QWORD *)&v14[OBJC_IVAR___ISEventFilter_filter] = v12;
  v16.receiver = v14;
  v16.super_class = v13;
  return objc_msgSendSuper2(&v16, sel_init);
}

uint64_t method lookup function for EventFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EventFilter.combine(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of EventFilter.isAllowed(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

_QWORD *initializeBufferWithCopyOfBuffer for EventFilter.OverallFilter(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for EventFilter.OverallFilter()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for EventFilter.OverallFilter(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for EventFilter.OverallFilter(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EventFilter.OverallFilter(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for EventFilter.OverallFilter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_21DC2C1B8(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_21DC2C1D0(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for EventFilter.OverallFilter()
{
  return &type metadata for EventFilter.OverallFilter;
}

uint64_t *initializeBufferWithCopyOfBuffer for EventFilter.InnerTypeFilter(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v3 = swift_bridgeObjectRetain();
  *a1 = v3;
  return a1;
}

unint64_t destroy for EventFilter.InnerTypeFilter(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t *assignWithCopy for EventFilter.InnerTypeFilter(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF)
      swift_bridgeObjectRetain();
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t *assignWithTake for EventFilter.InnerTypeFilter(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EventFilter.InnerTypeFilter(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for EventFilter.InnerTypeFilter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for EventFilter.InnerTypeFilter()
{
  return &type metadata for EventFilter.InnerTypeFilter;
}

unint64_t sub_21DC2C3F4(unint64_t result)
{
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_21DC2C404(unint64_t result)
{
  if (result != 2)
    return sub_21DC2C3F4(result);
  return result;
}

unint64_t sub_21DC2C414(uint64_t a1)
{
  return sub_21DC2C420(a1, (uint64_t *)&unk_2553AA5F0);
}

unint64_t sub_21DC2C420(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t result;
  char v6;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  __int128 v12;
  char v13;
  __int128 v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v4 = (_QWORD *)sub_21DC71FFC();
  v14 = *(_OWORD *)(a1 + 32);
  result = sub_21DC0A464(*(_QWORD *)(a1 + 32));
  if ((v6 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v4;
  }
  v7 = (__int128 *)(a1 + 48);
  v8 = v2 - 1;
  while (1)
  {
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v14;
    *(_QWORD *)(v4[7] + 8 * result) = *((_QWORD *)&v14 + 1);
    v9 = v4[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v4[2] = v11;
    if (!v8)
      goto LABEL_8;
    v12 = *v7++;
    v14 = v12;
    swift_bridgeObjectRetain();
    result = sub_21DC0A464(v12);
    --v8;
    if ((v13 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC2C530()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 48) = v0;
  sub_21DC71684();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 56) = v2;
  *v2 = v1;
  v2[1] = sub_21DC2C588;
  return sub_21DC71678();
}

uint64_t sub_21DC2C588(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  v4 = (_QWORD *)*v3;
  v4[2] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = v2;
  v5 = (_QWORD *)*v3;
  v4[8] = a1;
  swift_task_dealloc();
  if (v2)
    return ((uint64_t (*)(void))v5[1])();
  else
    return swift_task_switch();
}

uint64_t sub_21DC2C604()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)(void);
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;

  v1 = v0[8];
  if (v1)
  {
    v2 = v0[4];
    v3 = v0[6];
    v4 = *(void **)(v3 + 24);
    *(_QWORD *)(v3 + 24) = v1;

    *(_QWORD *)(v3 + 32) = v2;
    swift_release();
    v5 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v6 = sub_21DC719C0();
    v7 = sub_21DC71D20();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_21DC05000, v6, v7, "Unable to establish stream with Raw SiriAnalytics", v8, 2u);
      MEMORY[0x22079DA24](v8, -1, -1);
    }

    sub_21DC2CE24();
    swift_allocError();
    *v9 = 0xD00000000000002DLL;
    v9[1] = 0x800000021DC76340;
    swift_willThrow();
    v5 = (uint64_t (*)(void))v0[1];
  }
  return v5();
}

void *sub_21DC2C728@<X0>(char a1@<W1>, uint64_t a2@<X2>, int a3@<W3>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X6>, int a7@<W7>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, _QWORD, uint64_t, uint64_t);
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *result;
  id v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  _QWORD v62[2];
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  int v72;
  int v73;

  v9 = v8;
  v71 = a7;
  v72 = a3;
  v73 = a5;
  v69 = a8;
  v70 = a4;
  v62[1] = a2;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8198);
  v64 = *(_QWORD *)(v12 - 8);
  v65 = v12;
  MEMORY[0x24BDAC7A8](v12, v13);
  v63 = (char *)v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8318);
  v67 = *(_QWORD *)(v15 - 8);
  v68 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v66 = (char *)v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A81A8);
  v20 = MEMORY[0x24BDAC7A8](v18, v19);
  v22 = (char *)v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v20, v23);
  v26 = (char *)v62 - v25;
  v28 = MEMORY[0x24BDAC7A8](v24, v27);
  v30 = (char *)v62 - v29;
  v32 = MEMORY[0x24BDAC7A8](v28, v31);
  v34 = (char *)v62 - v33;
  v36 = MEMORY[0x24BDAC7A8](v32, v35);
  v38 = (char *)v62 - v37;
  MEMORY[0x24BDAC7A8](v36, v39);
  v41 = (char *)v62 - v40;
  if ((a1 & 1) != 0)
  {
    v43 = sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v38, 1, 1, v43);
LABEL_5:
    sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v41, 1, 1, v43);
    sub_21DC0892C((uint64_t)v38);
    if ((v72 & 1) == 0)
      goto LABEL_6;
LABEL_9:
    v48 = sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v30, 1, 1, v48);
    goto LABEL_10;
  }
  v62[0] = a6;
  v42 = v9;
  sub_21DC7151C();
  v43 = sub_21DC71588();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56);
  v45(v38, 0, 1, v43);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v38, 1, v43) == 1)
  {
    v9 = v42;
    a6 = v62[0];
    goto LABEL_5;
  }
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v38, v43);
  v45(v41, 0, 1, v43);
  v9 = v42;
  a6 = v62[0];
  if ((v72 & 1) != 0)
    goto LABEL_9;
LABEL_6:
  v46 = a6;
  v47 = v9;
  sub_21DC7151C();
  v48 = sub_21DC71588();
  v49 = *(_QWORD *)(v48 - 8);
  v50 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56);
  v50(v30, 0, 1, v48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v30, 1, v48) == 1)
  {
    v9 = v47;
    a6 = v46;
LABEL_10:
    v51 = v71;
    v52 = v70;
    sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v34, 1, 1, v48);
    sub_21DC0892C((uint64_t)v30);
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v34, v30, v48);
  v50(v34, 0, 1, v48);
  v9 = v47;
  a6 = v46;
  v51 = v71;
  v52 = v70;
LABEL_12:
  sub_21DC0896C((uint64_t)v41, (uint64_t)v26);
  sub_21DC0896C((uint64_t)v34, (uint64_t)v22);
  if ((v73 & 1) != 0)
    v53 = 0;
  else
    v53 = v52;
  if ((v51 & 1) != 0)
    v54 = 0;
  else
    v54 = a6;
  sub_21DC07D04();
  v55 = sub_21DC42828((uint64_t)v26, (uint64_t)v22, v53, v54, 0);
  result = *(void **)(v9 + 24);
  if (result)
  {
    v57 = objc_msgSend(result, sel_publisherWithOptions_, v55);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A81C0);
    v58 = v63;
    sub_21DC7166C();
    type metadata accessor for AnteroEvent();
    sub_21DC07D84(&qword_2553A8828, &qword_2553A8198, MEMORY[0x24BE0C968]);
    v59 = v65;
    v60 = v66;
    sub_21DC71624();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v58, v59);
    sub_21DC07D84(&qword_2553A9188, &qword_2553A8318, MEMORY[0x24BE0C8A8]);
    v61 = v68;
    sub_21DC71618();
    sub_21DC71660();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v60, v61);

    sub_21DC0892C((uint64_t)v34);
    return (void *)sub_21DC0892C((uint64_t)v41);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_21DC2CC30(void *a1)
{
  id v2;
  uint64_t v3;
  double v4;
  double v5;
  id v6;
  id v7;

  type metadata accessor for TimestampedOrderedEvent();
  swift_allocObject();
  v2 = a1;
  v3 = TimestampedOrderedEvent.init(rawEvent:)(v2);
  objc_msgSend(v2, sel_timestamp);
  v5 = v4;
  v6 = objc_allocWithZone((Class)type metadata accessor for AnteroEvent());
  v7 = sub_21DC47424(v3, v5);
  swift_release();
  return v7;
}

uint64_t sub_21DC2CCC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams17RawJoinableStream_logger;
  v2 = sub_21DC719D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_21DC2CD24()
{
  return type metadata accessor for RawJoinableStream();
}

uint64_t type metadata accessor for RawJoinableStream()
{
  uint64_t result;

  result = qword_2553A9080;
  if (!qword_2553A9080)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21DC2CD68()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21DC719D8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void *sub_21DC2CDEC@<X0>(char a1@<W1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, char a5@<W5>, uint64_t a6@<X6>, char a7@<W7>, uint64_t a8@<X8>)
{
  return sub_21DC2C728(a1 & 1, a2, a3 & 1, a4, a5 & 1, a6, a7 & 1, a8);
}

unint64_t sub_21DC2CE24()
{
  unint64_t result;

  result = qword_2553A9190;
  if (!qword_2553A9190)
  {
    result = MEMORY[0x22079D964](&unk_21DC73DB8, &type metadata for RawJoinableStream.RawStreamAccessError);
    atomic_store(result, (unint64_t *)&qword_2553A9190);
  }
  return result;
}

ValueMetadata *type metadata accessor for RawJoinableStream.RawStreamAccessError()
{
  return &type metadata for RawJoinableStream.RawStreamAccessError;
}

uint64_t PublisherProtocol.toAsyncSequence()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  MEMORY[0x24BDAC7A8](a1, a2);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v7, v3, a1);
  return sub_21DC4002C((uint64_t)v7, a1, a3);
}

uint64_t PublisherProtocol.toSequence()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return swift_task_switch();
}

void sub_21DC2CF20()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4[2];

  v1 = v0[12];
  v2 = v0[11];
  v0[14] = swift_getAssociatedTypeWitness();
  v0[6] = sub_21DC71BAC();
  PublisherProtocol.toAsyncSequence()(v2, v1, v4);
  v4[1] = v4[0];
  type metadata accessor for BiomeAsyncSequence(0, v2, v1, v3);
  BiomeAsyncSequence.makeAsyncIterator()();
}

void sub_21DC2CFB4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  swift_unknownObjectRelease();
  v1[7] = a1;
  v4 = v1[11];
  v3 = v1[12];
  v1[15] = swift_task_alloc();
  v1[2] = v4;
  v1[3] = v4;
  v1[4] = v3;
  v1[5] = v3;
  type metadata accessor for BiomeAsyncSequence.BiomeAsyncIterator();
}

uint64_t sub_21DC2CFFC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  MEMORY[0x22079D964](&protocol conformance descriptor for BiomeAsyncSequence<A>.BiomeAsyncIterator<A1>, a1);
  *v2 = v1;
  v2[1] = sub_21DC2D054;
  return sub_21DC71C24();
}

uint64_t sub_21DC2D054()
{
  uint64_t v0;

  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21DC2D0BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 64);
  if (v1)
  {
    *(_QWORD *)(v0 + 80) = v1;
    sub_21DC71BDC();
    sub_21DC71BD0();
    v3 = *(_QWORD *)(v0 + 88);
    v2 = *(_QWORD *)(v0 + 96);
    *(_QWORD *)(v0 + 120) = swift_task_alloc();
    *(_QWORD *)(v0 + 16) = v3;
    *(_QWORD *)(v0 + 24) = v3;
    *(_QWORD *)(v0 + 32) = v2;
    *(_QWORD *)(v0 + 40) = v2;
    type metadata accessor for BiomeAsyncSequence.BiomeAsyncIterator();
  }
  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 48));
}

uint64_t sub_21DC2D1C8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

AIMLInstrumentationStreams::BiomeSELFClusterType_optional __swiftcall BiomeSELFClusterType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (AIMLInstrumentationStreams::BiomeSELFClusterType_optional)rawValue;
}

uint64_t BiomeSELFClusterType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

AIMLInstrumentationStreams::BiomeSELFClusterType_optional sub_21DC2D218(Swift::Int *a1)
{
  return BiomeSELFClusterType.init(rawValue:)(*a1);
}

void sub_21DC2D220(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

unint64_t sub_21DC2D22C()
{
  return sub_21DC2A120(MEMORY[0x24BEE4AF8]);
}

uint64_t JSONSerializable.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t JSONSerializable.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t BiomeSELFLogicalTimestamp.__allocating_init(timestampInNanoseconds:clockIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  v5 = v4 + OBJC_IVAR____TtC26AIMLInstrumentationStreams25BiomeSELFLogicalTimestamp_clockIdentifier;
  v6 = sub_21DC715F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a2, v6);
  return v4;
}

uint64_t BiomeSELFLogicalTimestamp.init(timestampInNanoseconds:clockIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = v2 + OBJC_IVAR____TtC26AIMLInstrumentationStreams25BiomeSELFLogicalTimestamp_clockIdentifier;
  v5 = sub_21DC715F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a2, v5);
  return v2;
}

unint64_t sub_21DC2D318()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A91A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21DC73E00;
  v2 = MEMORY[0x24BEE0D00];
  sub_21DC71E88();
  v3 = *(void **)(v0 + 16);
  *(_QWORD *)(inited + 96) = sub_21DC13C88(0, &qword_2553A91A8);
  *(_QWORD *)(inited + 72) = v3;
  v4 = v3;
  sub_21DC71E88();
  v5 = sub_21DC715AC();
  *(_QWORD *)(inited + 168) = v2;
  *(_QWORD *)(inited + 144) = v5;
  *(_QWORD *)(inited + 152) = v6;
  return sub_21DC2A120(inited);
}

uint64_t sub_21DC2D438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams25BiomeSELFLogicalTimestamp_clockIdentifier;
  v2 = sub_21DC715F4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t BiomeSELFLogicalTimestamp.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams25BiomeSELFLogicalTimestamp_clockIdentifier;
  v2 = sub_21DC715F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t BiomeSELFLogicalTimestamp.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams25BiomeSELFLogicalTimestamp_clockIdentifier;
  v2 = sub_21DC715F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t BiomeSELFClusterIdentifier.__allocating_init(clusterType:uuid:)(_BYTE *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject();
  *(_BYTE *)(v4 + 16) = *a1;
  v5 = v4 + OBJC_IVAR____TtC26AIMLInstrumentationStreams26BiomeSELFClusterIdentifier_uuid;
  v6 = sub_21DC715F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a2, v6);
  return v4;
}

uint64_t BiomeSELFClusterIdentifier.init(clusterType:uuid:)(_BYTE *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 + 16) = *a1;
  v4 = v2 + OBJC_IVAR____TtC26AIMLInstrumentationStreams26BiomeSELFClusterIdentifier_uuid;
  v5 = sub_21DC715F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a2, v5);
  return v2;
}

unint64_t sub_21DC2D5F0()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A91A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21DC73E00;
  v1 = MEMORY[0x24BEE0D00];
  sub_21DC71E88();
  v2 = sub_21DC71C9C();
  *(_QWORD *)(inited + 96) = sub_21DC13C88(0, &qword_2553A91A8);
  *(_QWORD *)(inited + 72) = v2;
  sub_21DC71E88();
  v3 = sub_21DC715AC();
  *(_QWORD *)(inited + 168) = v1;
  *(_QWORD *)(inited + 144) = v3;
  *(_QWORD *)(inited + 152) = v4;
  return sub_21DC2A120(inited);
}

uint64_t sub_21DC2D6F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams26BiomeSELFClusterIdentifier_uuid;
  v2 = sub_21DC715F4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t BiomeSELFClusterIdentifier.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams26BiomeSELFClusterIdentifier_uuid;
  v2 = sub_21DC715F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t BiomeSELFClusterIdentifier.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams26BiomeSELFClusterIdentifier_uuid;
  v2 = sub_21DC715F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t BiomeSELFComponentIdentifier.__allocating_init(uuid:componentName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject();
  v5 = v4 + OBJC_IVAR____TtC26AIMLInstrumentationStreams28BiomeSELFComponentIdentifier_uuid;
  v6 = sub_21DC715F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a1, v6);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC26AIMLInstrumentationStreams28BiomeSELFComponentIdentifier_componentName) = a2;
  return v4;
}

uint64_t BiomeSELFComponentIdentifier.init(uuid:componentName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = v2 + OBJC_IVAR____TtC26AIMLInstrumentationStreams28BiomeSELFComponentIdentifier_uuid;
  v6 = sub_21DC715F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a1, v6);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC26AIMLInstrumentationStreams28BiomeSELFComponentIdentifier_componentName) = a2;
  return v2;
}

unint64_t sub_21DC2D8A4()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  void *v3;
  unint64_t result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A91A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21DC73E10;
  v10[0] = 0xD000000000000018;
  v10[1] = 0x800000021DC76BE0;
  v2 = MEMORY[0x24BEE0D00];
  sub_21DC71E88();
  v3 = *(void **)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams28BiomeSELFComponentIdentifier_componentName);
  LODWORD(v10[0]) = 0;
  BYTE4(v10[0]) = 1;
  result = MEMORY[0x22079D454](v3, v10);
  if ((v10[0] & 0x100000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v5 = sub_21DC71D44();
    *(_QWORD *)(inited + 96) = v2;
    *(_QWORD *)(inited + 72) = v5;
    *(_QWORD *)(inited + 80) = v6;
    strcpy((char *)v10, "componentName");
    HIWORD(v10[1]) = -4864;
    sub_21DC71E88();
    *(_QWORD *)(inited + 168) = sub_21DC13C88(0, &qword_2553A91A8);
    *(_QWORD *)(inited + 144) = v3;
    v10[0] = 1684632949;
    v10[1] = 0xE400000000000000;
    v7 = v3;
    sub_21DC71E88();
    v8 = sub_21DC715AC();
    *(_QWORD *)(inited + 240) = v2;
    *(_QWORD *)(inited + 216) = v8;
    *(_QWORD *)(inited + 224) = v9;
    return sub_21DC2A120(inited);
  }
  return result;
}

void sub_21DC2DA28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams28BiomeSELFComponentIdentifier_uuid;
  v2 = sub_21DC715F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

}

uint64_t BiomeSELFComponentIdentifier.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams28BiomeSELFComponentIdentifier_uuid;
  v2 = sub_21DC715F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t BiomeSELFComponentIdentifier.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams28BiomeSELFComponentIdentifier_uuid;
  v2 = sub_21DC715F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t BiomeSELFEvent.eventTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_eventTimestamp;
  v4 = sub_21DC71588();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BiomeSELFEvent.logicalTimestamp.getter()
{
  return swift_retain();
}

uint64_t BiomeSELFEvent.clusterId.getter()
{
  return swift_retain();
}

uint64_t BiomeSELFEvent.componentId.getter()
{
  return swift_retain();
}

id BiomeSELFEvent.anyEventType.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_anyEventType);
}

id BiomeSELFEvent.innerType.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_innerType);
}

uint64_t BiomeSELFEvent.messageUuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21DC2DBD0(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_messageUuid, a1);
}

uint64_t sub_21DC2DBD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t BiomeSELFEvent.eventData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_eventData);
  sub_21DC0710C(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_eventData + 8));
  return v1;
}

uint64_t sub_21DC2DC54(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_eventDataJson);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21DC2DCBC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_eventDataJson);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_21DC2DD10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_eventDataJson);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_21DC2DD6C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t BiomeSELFEvent.__allocating_init(logicalTimestamp:clusterId:componentId:anyEventType:innerType:messageUuid:eventData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t v17;

  v16 = swift_allocObject();
  v17 = sub_21DC2E898(a1, a2, a3, a4, a5, a6, a7, a8, v16);
  swift_release();
  return v17;
}

uint64_t BiomeSELFEvent.init(logicalTimestamp:clusterId:componentId:anyEventType:innerType:messageUuid:eventData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;

  v8 = sub_21DC2E898(a1, a2, a3, a4, a5, a6, a7, a8, v10);
  swift_release();
  return v8;
}

uint64_t BiomeSELFEvent.__allocating_init(event:clusterId:)(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  v5 = sub_21DC2EA20(a1, a2, v4);
  swift_release();
  return v5;
}

uint64_t BiomeSELFEvent.init(event:clusterId:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_21DC2EA20(a1, a2, v2);
  swift_release();
  return v3;
}

unint64_t sub_21DC2DF24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t inited;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t result;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30[16];
  _QWORD v31[89];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = &v30[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A91A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21DC73E20;
  v31[0] = 0xD000000000000010;
  v31[1] = 0x800000021DC76C00;
  v7 = MEMORY[0x24BEE0D00];
  sub_21DC71E88();
  v8 = sub_21DC2D318();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A91B0);
  *(_QWORD *)(inited + 96) = v9;
  *(_QWORD *)(inited + 72) = v8;
  strcpy((char *)v31, "clusterId");
  WORD1(v31[1]) = 0;
  HIDWORD(v31[1]) = -385875968;
  sub_21DC71E88();
  v10 = sub_21DC2D5F0();
  *(_QWORD *)(inited + 168) = v9;
  *(_QWORD *)(inited + 144) = v10;
  strcpy((char *)v31, "componentId");
  HIDWORD(v31[1]) = -352321536;
  sub_21DC71E88();
  *(_QWORD *)(inited + 240) = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A91B8);
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_componentId))
    v11 = sub_21DC2D8A4();
  else
    v11 = 0;
  *(_QWORD *)(inited + 216) = v11;
  strcpy((char *)v31, "anyEventType");
  BYTE5(v31[1]) = 0;
  HIWORD(v31[1]) = -5120;
  sub_21DC71E88();
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_anyEventType);
  LODWORD(v31[0]) = 0;
  BYTE4(v31[0]) = 1;
  result = MEMORY[0x22079D454](v12, v31);
  if ((v31[0] & 0x100000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v14 = sub_21DC71D38();
    *(_QWORD *)(inited + 312) = v7;
    *(_QWORD *)(inited + 288) = v14;
    *(_QWORD *)(inited + 296) = v15;
    strcpy((char *)v31, "innerType");
    WORD1(v31[1]) = 0;
    HIDWORD(v31[1]) = -385875968;
    sub_21DC71E88();
    v16 = *(void **)(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_innerType);
    *(_QWORD *)(inited + 384) = sub_21DC13C88(0, &qword_2553A91A8);
    *(_QWORD *)(inited + 360) = v16;
    strcpy((char *)v31, "messageUuid");
    HIDWORD(v31[1]) = -352321536;
    v17 = v16;
    sub_21DC71E88();
    *(_QWORD *)(inited + 456) = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A91C0);
    sub_21DC2DBD0(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_messageUuid, (uint64_t)v5);
    v18 = sub_21DC715F4();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v5, 1, v18) == 1)
    {
      sub_21DC07C84((uint64_t)v5, (uint64_t *)&unk_2553A98F0);
      v20 = 0;
      v21 = 0;
    }
    else
    {
      v20 = sub_21DC715AC();
      v21 = v22;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v18);
    }
    *(_QWORD *)(inited + 432) = v20;
    *(_QWORD *)(inited + 440) = v21;
    strcpy((char *)v31, "eventData");
    WORD1(v31[1]) = 0;
    HIDWORD(v31[1]) = -385875968;
    sub_21DC71E88();
    v23 = sub_21DC714F8();
    *(_QWORD *)(inited + 528) = v7;
    *(_QWORD *)(inited + 504) = v23;
    *(_QWORD *)(inited + 512) = v24;
    strcpy((char *)v31, "eventDataJson");
    HIWORD(v31[1]) = -4864;
    sub_21DC71E88();
    v25 = (uint64_t *)(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_eventDataJson);
    swift_beginAccess();
    v27 = *v25;
    v26 = v25[1];
    *(_QWORD *)(inited + 600) = v7;
    *(_QWORD *)(inited + 576) = v27;
    *(_QWORD *)(inited + 584) = v26;
    strcpy(v30, "eventTimestamp");
    v30[15] = -18;
    swift_bridgeObjectRetain();
    sub_21DC71E88();
    sub_21DC71564();
    *(_QWORD *)(inited + 672) = MEMORY[0x24BEE13C8];
    *(_QWORD *)(inited + 648) = v28;
    return sub_21DC2A120(inited);
  }
  return result;
}

uint64_t sub_21DC2E394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_eventTimestamp;
  v2 = sub_21DC71588();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();

  sub_21DC07C84(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_messageUuid, (uint64_t *)&unk_2553A98F0);
  sub_21DC07150(*(_QWORD *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_eventData), *(_QWORD *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_eventData + 8));
  return swift_bridgeObjectRelease();
}

uint64_t BiomeSELFEvent.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_eventTimestamp;
  v2 = sub_21DC71588();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();

  sub_21DC07C84(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_messageUuid, (uint64_t *)&unk_2553A98F0);
  sub_21DC07150(*(_QWORD *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_eventData), *(_QWORD *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_eventData + 8));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BiomeSELFEvent.__deallocating_deinit()
{
  BiomeSELFEvent.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_21DC2E558(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  sub_21DC0710C(a1, a2);
  sub_21DC2E6FC(a1, a2);
  sub_21DC07150(a1, a2);
  v4 = sub_21DC71AF8();
  swift_release();
  return v4;
}

uint64_t sub_21DC2E5CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_21DC71AF8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

_QWORD *sub_21DC2E604(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a1)
    v4 = a2 - a1;
  else
    v4 = 0;
  result = a3(&v6, a1, v4);
  if (!v3)
    return (_QWORD *)v6;
  return result;
}

uint64_t sub_21DC2E650(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_21DC71474();
  v9 = result;
  if (result)
  {
    result = sub_21DC7148C();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  v12 = sub_21DC71480();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  v14 = v9 + v13;
  if (v9)
    v15 = v14;
  else
    v15 = 0;
  result = (uint64_t)sub_21DC2E604(v9, v15, a4);
  if (v4)
    return v16;
  return result;
}

void sub_21DC2E6FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_21DC71510();
  MEMORY[0x24BDAC7A8](v3, v4);
  __asm { BR              X10 }
}

_QWORD *sub_21DC2E778()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;

  if (BYTE6(v0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9E40);
    v4 = (_QWORD *)swift_allocObject();
    v6 = _swift_stdlib_malloc_size(v4);
    v4[2] = BYTE6(v0);
    v4[3] = 2 * v6 - 64;
    sub_21DC0710C(v2, v0);
    v7 = sub_21DC714D4();
    sub_21DC07150(v2, v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v1);
    if (v7 != BYTE6(v0))
    {
      __break(1u);
      JUMPOUT(0x21DC2E84CLL);
    }
  }
  return v4;
}

uint64_t sub_21DC2E864@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_21DC71AF8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_21DC2E898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v27 = a7;
  v28 = a8;
  v15 = sub_21DC71588();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (_QWORD *)(a9 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_eventDataJson);
  *v20 = 0;
  v20[1] = 0xE000000000000000;
  *(_QWORD *)(a9 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_logicalTimestamp) = a1;
  *(_QWORD *)(a9 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_clusterId) = a2;
  *(_QWORD *)(a9 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_componentId) = a3;
  *(_QWORD *)(a9 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_anyEventType) = a4;
  *(_QWORD *)(a9 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_innerType) = a5;
  v21 = a9 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_messageUuid;
  v22 = sub_21DC715F4();
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v21, a6, v22);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v22);
  v24 = (_QWORD *)(a9 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_eventData);
  v25 = v28;
  *v24 = v27;
  v24[1] = v25;
  swift_retain();
  sub_21DC7157C();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(a6, v22);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a9 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_eventTimestamp, v19, v15);
  return a9;
}

uint64_t sub_21DC2EA20(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void (*v34)(uint64_t, char *, uint64_t);
  uint64_t v35;
  void *v36;
  void *v37;
  char *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  void *v53;
  void *v54;
  id v55;
  char *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  void *v62;
  void *v63;
  id v64;
  id v65;
  uint64_t v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  _QWORD v79[2];
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  void *v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v88 = a2;
  v97 = *MEMORY[0x24BDAC8D0];
  v83 = sub_21DC71588();
  v85 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83, v5);
  v84 = (char *)v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21DC71AD4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v82 = (char *)v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v86 = (char *)v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)v79 - v16;
  v18 = sub_21DC715F4();
  v19 = *(_QWORD *)(v18 - 8);
  v21 = MEMORY[0x24BDAC7A8](v18, v20);
  v23 = (char *)v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v24);
  v26 = (char *)v79 - v25;
  v27 = (_QWORD *)(a3 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_eventDataJson);
  *v27 = 0;
  v27[1] = 0xE000000000000000;
  v79[1] = v27;
  swift_retain();
  v28 = sub_21DC71714();
  if (!v28)
  {
    __break(1u);
    goto LABEL_32;
  }
  v29 = (void *)v28;
  v80 = v8;
  v81 = v7;
  sub_21DC717BC();

  v30 = sub_21DC72164();
  v31 = sub_21DC71714();
  if (!v31)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v32 = (void *)v31;
  sub_21DC7178C();

  type metadata accessor for BiomeSELFLogicalTimestamp(0);
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = v30;
  v34 = *(void (**)(uint64_t, char *, uint64_t))(v19 + 32);
  v34(v33 + OBJC_IVAR____TtC26AIMLInstrumentationStreams25BiomeSELFLogicalTimestamp_clockIdentifier, v26, v18);
  *(_QWORD *)(a3 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_logicalTimestamp) = v33;
  *(_QWORD *)(a3 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_clusterId) = v88;
  swift_retain();
  v87 = a1;
  v35 = sub_21DC71720();
  if (!v35)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
    goto LABEL_8;
  }
  v36 = (void *)v35;
  sub_21DC717F8();

  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
LABEL_8:
    sub_21DC07C84((uint64_t)v17, (uint64_t *)&unk_2553A98F0);
    v38 = 0;
    v37 = v87;
    goto LABEL_9;
  }
  v34((uint64_t)v23, v17, v18);
  v37 = v87;
  v38 = (char *)sub_21DC71720();
  if (v38)
  {
    sub_21DC717D4();

    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v26, v23, v18);
    v39 = sub_21DC7211C();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v18);
    type metadata accessor for BiomeSELFComponentIdentifier(0);
    v38 = (char *)swift_allocObject();
    v34((uint64_t)&v38[OBJC_IVAR____TtC26AIMLInstrumentationStreams28BiomeSELFComponentIdentifier_uuid], v26, v18);
    *(_QWORD *)&v38[OBJC_IVAR____TtC26AIMLInstrumentationStreams28BiomeSELFComponentIdentifier_componentName] = v39;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v18);
  }
LABEL_9:
  *(_QWORD *)(a3 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_componentId) = v38;
  v40 = (void *)sub_21DC716D8();
  if (!v40)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v41 = v40;
  objc_msgSend(v40, sel_getAnyEventType);

  *(_QWORD *)(a3 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_anyEventType) = sub_21DC7211C();
  v42 = sub_21DC716D8();
  if (v42
    && (*(_QWORD *)&v94 = v42,
        sub_21DC13C88(0, (unint64_t *)&qword_2553A9608),
        __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9610),
        (swift_dynamicCast() & 1) != 0))
  {
    if (*((_QWORD *)&v92 + 1))
    {
      sub_21DC2FAE4(&v91, (uint64_t)&v94);
      v43 = v95;
      v44 = v96;
      __swift_project_boxed_opaque_existential_1(&v94, v95);
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v44);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v94);
      goto LABEL_16;
    }
  }
  else
  {
    v93 = 0;
    v91 = 0u;
    v92 = 0u;
  }
  sub_21DC07C84((uint64_t)&v91, &qword_2553A95F0);
LABEL_16:
  *(_QWORD *)(a3 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_innerType) = sub_21DC71D98();
  v45 = (uint64_t)v86;
  sub_21DC716F0();
  sub_21DC2FA74(v45, a3 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_messageUuid);
  v46 = (void *)sub_21DC716D8();
  if (!v46)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v47 = v46;
  v48 = objc_msgSend(v46, sel_data);

  if (!v48)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  v49 = sub_21DC71504();
  v51 = v50;

  v52 = (uint64_t *)(a3 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_eventData);
  *v52 = v49;
  v52[1] = v51;
  v53 = (void *)sub_21DC716D8();
  if (!v53)
    goto LABEL_36;
  v54 = v53;
  v55 = objc_msgSend(v53, sel_formattedJsonBody);

  if (!v55)
  {
    v57 = 0;
    v59 = 0xF000000000000000;
    goto LABEL_23;
  }
  sub_21DC71AB0();

  v56 = v82;
  sub_21DC71AC8();
  v57 = sub_21DC71ABC();
  v59 = v58;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v56, v81);
  v60 = v57;
  v61 = v59;
  if (v59 >> 60 == 15)
  {
LABEL_23:
    v60 = *v52;
    v61 = v52[1];
    sub_21DC0710C(*v52, v61);
  }
  v62 = (void *)objc_opt_self();
  sub_21DC2FABC(v57, v59);
  v63 = (void *)sub_21DC714EC();
  sub_21DC07150(v60, v61);
  *(_QWORD *)&v91 = 0;
  v64 = objc_msgSend(v62, sel_JSONObjectWithData_options_error_, v63, 1, &v91);

  v65 = (id)v91;
  if (v64)
  {
    sub_21DC71DC8();
    swift_unknownObjectRelease();
    sub_21DC13D80(&v94, &v89);
    __swift_project_boxed_opaque_existential_1(&v89, v90);
    v66 = sub_21DC7208C();
    *(_QWORD *)&v94 = 0;
    v67 = objc_msgSend(v62, sel_dataWithJSONObject_options_error_, v66, 1, &v94);
    swift_unknownObjectRelease();
    v68 = (id)v94;
    if (v67)
    {
      sub_21DC71504();
      v70 = v69;

      __asm { BR              X10 }
    }
    v73 = v68;
    v74 = (void *)sub_21DC714A4();

    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
  }
  else
  {
    v71 = v65;
    v72 = (void *)sub_21DC714A4();

    swift_willThrow();
  }
  v75 = v83;
  v76 = v85;
  v77 = v84;
  sub_21DC7157C();

  swift_release();
  sub_21DC2FAD0(v57, v59);
  (*(void (**)(uint64_t, char *, uint64_t))(v76 + 32))(a3 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_eventTimestamp, v77, v75);
  return a3;
}

unint64_t sub_21DC2F508()
{
  unint64_t result;

  result = qword_2553A91C8;
  if (!qword_2553A91C8)
  {
    result = MEMORY[0x22079D964](&protocol conformance descriptor for BiomeSELFClusterType, &type metadata for BiomeSELFClusterType);
    atomic_store(result, (unint64_t *)&qword_2553A91C8);
  }
  return result;
}

uint64_t sub_21DC2F54C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams14BiomeSELFEvent_eventDataJson);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t getEnumTagSinglePayload for BiomeSELFClusterType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for BiomeSELFClusterType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21DC2F680 + 4 * byte_21DC73E35[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21DC2F6B4 + 4 * byte_21DC73E30[v4]))();
}

uint64_t sub_21DC2F6B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21DC2F6BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21DC2F6C4);
  return result;
}

uint64_t sub_21DC2F6D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21DC2F6D8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21DC2F6DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21DC2F6E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BiomeSELFClusterType()
{
  return &type metadata for BiomeSELFClusterType;
}

uint64_t type metadata accessor for JSONSerializable()
{
  return objc_opt_self();
}

uint64_t method lookup function for JSONSerializable()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of JSONSerializable.dictionaryRepresentation()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 80))();
}

uint64_t sub_21DC2F738()
{
  return type metadata accessor for BiomeSELFLogicalTimestamp(0);
}

uint64_t type metadata accessor for BiomeSELFLogicalTimestamp(uint64_t a1)
{
  return sub_21DC2F8E8(a1, qword_2553A9298);
}

uint64_t sub_21DC2F754()
{
  return sub_21DC2F7A0();
}

uint64_t method lookup function for BiomeSELFLogicalTimestamp()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BiomeSELFLogicalTimestamp.__allocating_init(timestampInNanoseconds:clockIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_21DC2F778()
{
  return type metadata accessor for BiomeSELFClusterIdentifier(0);
}

uint64_t type metadata accessor for BiomeSELFClusterIdentifier(uint64_t a1)
{
  return sub_21DC2F8E8(a1, qword_2553A9360);
}

uint64_t sub_21DC2F794()
{
  return sub_21DC2F7A0();
}

uint64_t sub_21DC2F7A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21DC715F4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for BiomeSELFClusterIdentifier()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BiomeSELFClusterIdentifier.__allocating_init(clusterType:uuid:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_21DC2F824()
{
  return type metadata accessor for BiomeSELFComponentIdentifier(0);
}

uint64_t type metadata accessor for BiomeSELFComponentIdentifier(uint64_t a1)
{
  return sub_21DC2F8E8(a1, qword_2553A9428);
}

uint64_t sub_21DC2F840()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21DC715F4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for BiomeSELFComponentIdentifier()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BiomeSELFComponentIdentifier.__allocating_init(uuid:componentName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_21DC2F8CC()
{
  return type metadata accessor for BiomeSELFEvent(0);
}

uint64_t type metadata accessor for BiomeSELFEvent(uint64_t a1)
{
  return sub_21DC2F8E8(a1, (uint64_t *)&unk_2553A94F0);
}

uint64_t sub_21DC2F8E8(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21DC2F91C()
{
  unint64_t v0;
  unint64_t v1;

  sub_21DC71588();
  if (v0 <= 0x3F)
  {
    sub_21DC2FA20();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for BiomeSELFEvent()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BiomeSELFEvent.eventDataJson.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of BiomeSELFEvent.eventDataJson.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of BiomeSELFEvent.eventDataJson.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of BiomeSELFEvent.__allocating_init(logicalTimestamp:clusterId:componentId:anyEventType:innerType:messageUuid:eventData:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of BiomeSELFEvent.__allocating_init(event:clusterId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

void sub_21DC2FA20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2553A9500)
  {
    sub_21DC715F4();
    v0 = sub_21DC71D8C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2553A9500);
  }
}

uint64_t sub_21DC2FA74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21DC2FABC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_21DC0710C(a1, a2);
  return a1;
}

uint64_t sub_21DC2FAD0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_21DC07150(a1, a2);
  return a1;
}

uint64_t sub_21DC2FAE4(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t IntelligenceFlowTranscriptDatastreamEvent.decodeBiomeEventProto()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = sub_21DC7190C();
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, v1);
  return sub_21DC2157C((uint64_t)v6, a1);
}

uint64_t sub_21DC2FB78()
{
  return swift_allocateGenericValueMetadata();
}

void sub_21DC2FB80()
{
  unint64_t v0;
  unint64_t v1;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_21DC309CC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_21DC2FC24(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  unsigned int v12;
  BOOL v13;
  uint64_t v14;
  _QWORD *v15;
  void **v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  void *v28;
  const void *v29;
  unsigned int (*v30)(const void *, uint64_t, uint64_t);
  id v31;
  uint64_t v32;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_21DC714C8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  if (*(_DWORD *)(v9 + 84))
    v11 = *(_QWORD *)(v9 + 64);
  else
    v11 = *(_QWORD *)(v9 + 64) + 1;
  v12 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || (((v10 + ((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v10) + v11 <= 0x18
      ? (v13 = v12 > 7)
      : (v13 = 1),
        v13))
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
    swift_retain();
  }
  else
  {
    v14 = v8;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v15 = (_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    v16 = (void **)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    v17 = *v16;
    *v15 = *v16;
    v18 = ((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8;
    v19 = ((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8;
    v20 = *(_QWORD *)v19;
    *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
    *(_QWORD *)v18 = v20;
    v21 = ((unint64_t)v15 + 31) & 0xFFFFFFFFFFFFFFF8;
    v22 = ((unint64_t)v16 + 31) & 0xFFFFFFFFFFFFFFF8;
    LOBYTE(v18) = *(_BYTE *)(v22 + 8);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *(_BYTE *)(v21 + 8) = v18;
    v23 = ((unint64_t)v15 + 47) & 0xFFFFFFFFFFFFFFF8;
    v24 = ((unint64_t)v16 + 47) & 0xFFFFFFFFFFFFFFF8;
    v25 = *(_BYTE *)(v24 + 8);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *(_BYTE *)(v23 + 8) = v25;
    v26 = ((unint64_t)v15 + 63) & 0xFFFFFFFFFFFFFFF8;
    v27 = ((unint64_t)v16 + 63) & 0xFFFFFFFFFFFFFFF8;
    LOBYTE(v23) = *(_BYTE *)(v27 + 8);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *(_BYTE *)(v26 + 8) = v23;
    v28 = (void *)((v26 + v10 + 9) & ~v10);
    v29 = (const void *)((v27 + v10 + 9) & ~v10);
    v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
    v31 = v17;
    if (v30(v29, 1, v14))
    {
      memcpy(v28, v29, v11);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v28, v29, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v28, 0, 1, v14);
    }
  }
  return a1;
}

uint64_t sub_21DC2FE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (id *)((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8);

  v5 = ((unint64_t)v4 + 63) & 0xFFFFFFFFFFFFFFF8;
  v6 = sub_21DC714C8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v5 + *(unsigned __int8 *)(v7 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v7 + 8))(v8, v6);
  return result;
}

uint64_t sub_21DC2FEC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void **v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  unsigned int (*v25)(const void *, uint64_t, uint64_t);
  id v26;
  size_t v27;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (void **)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = *v8;
  *v7 = *v8;
  v10 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v12 = *(_BYTE *)(v11 + 8);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = v12;
  v13 = ((unint64_t)v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v10) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = v10;
  v15 = ((unint64_t)v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v16 = ((unint64_t)v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  v17 = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = v17;
  v18 = ((unint64_t)v7 + 63) & 0xFFFFFFFFFFFFFFF8;
  v19 = ((unint64_t)v8 + 63) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v8) = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = (_BYTE)v8;
  v20 = sub_21DC714C8();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (void *)((v22 + 9 + v18) & ~v22);
  v24 = (const void *)((v22 + 9 + v19) & ~v22);
  v25 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
  v26 = v9;
  if (v25(v24, 1, v20))
  {
    if (*(_DWORD *)(v21 + 84))
      v27 = *(_QWORD *)(v21 + 64);
    else
      v27 = *(_QWORD *)(v21 + 64) + 1;
    memcpy(v23, v24, v27);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v23, v24, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v23, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_21DC30034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void **v8;
  void *v9;
  unint64_t v10;
  void *v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t (*v29)(void *, uint64_t, uint64_t);
  int v30;
  int v31;
  size_t v32;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (void **)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (void **)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v10 = (unint64_t)v8 + 63;
  v9 = *v8;
  v11 = *v7;
  *v7 = *v8;
  v12 = v9;

  v13 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v13 = v15;
  v16 = ((unint64_t)v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  v17 = ((unint64_t)v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  *(_QWORD *)v16 = v18;
  v19 = ((unint64_t)v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v20 = ((unint64_t)v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  *(_QWORD *)v19 = v21;
  v22 = ((unint64_t)v7 + 63) & 0xFFFFFFFFFFFFFFF8;
  v10 &= 0xFFFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v10;
  *(_BYTE *)(v22 + 8) = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v22 = v23;
  v24 = sub_21DC714C8();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = (void *)((v26 + 9 + v22) & ~v26);
  v28 = (void *)((v26 + 9 + v10) & ~v26);
  v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  v30 = v29(v27, 1, v24);
  v31 = v29(v28, 1, v24);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 16))(v27, v28, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v27, 0, 1, v24);
      return a1;
    }
  }
  else
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 24))(v27, v28, v24);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v27, v24);
  }
  if (*(_DWORD *)(v25 + 84))
    v32 = *(_QWORD *)(v25 + 64);
  else
    v32 = *(_QWORD *)(v25 + 64) + 1;
  memcpy(v27, v28, v32);
  return a1;
}

uint64_t sub_21DC301FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  size_t v24;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = ((unint64_t)v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  v13 = ((unint64_t)v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v9) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = v9;
  v14 = ((unint64_t)v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v15 = ((unint64_t)v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_BYTE *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = v16;
  v17 = ((unint64_t)v7 + 63) & 0xFFFFFFFFFFFFFFF8;
  v18 = ((unint64_t)v8 + 63) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v8) = *(_BYTE *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = (_BYTE)v8;
  v19 = sub_21DC714C8();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = (void *)((v21 + 9 + v17) & ~v21);
  v23 = (const void *)((v21 + 9 + v18) & ~v21);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v23, 1, v19))
  {
    if (*(_DWORD *)(v20 + 84))
      v24 = *(_QWORD *)(v20 + 64);
    else
      v24 = *(_QWORD *)(v20 + 64) + 1;
    memcpy(v22, v23, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v22, v23, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v22, 0, 1, v19);
  }
  return a1;
}

uint64_t sub_21DC30364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void **v8;
  unint64_t v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  size_t v30;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (void **)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (void **)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = (unint64_t)v8 + 63;
  v10 = *v7;
  *v7 = *v8;

  v11 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v12 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v11 = v13;
  v14 = ((unint64_t)v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  v15 = ((unint64_t)v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  *(_QWORD *)v14 = v16;
  v17 = ((unint64_t)v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v18 = ((unint64_t)v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  v19 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  *(_QWORD *)v17 = v19;
  v20 = ((unint64_t)v7 + 63) & 0xFFFFFFFFFFFFFFF8;
  v9 &= 0xFFFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)v9;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v20 = v21;
  v22 = sub_21DC714C8();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = (void *)((v24 + 9 + v20) & ~v24);
  v26 = (void *)((v24 + 9 + v9) & ~v24);
  v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
  v28 = v27(v25, 1, v22);
  v29 = v27(v26, 1, v22);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v23 + 32))(v25, v26, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v25, 0, 1, v22);
      return a1;
    }
  }
  else
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v23 + 40))(v25, v26, v22);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v23 + 8))(v25, v22);
  }
  if (*(_DWORD *)(v23 + 84))
    v30 = *(_QWORD *)(v23 + 64);
  else
    v30 = *(_QWORD *)(v23 + 64) + 1;
  memcpy(v25, v26, v30);
  return a1;
}

uint64_t sub_21DC30528(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  unint64_t *v23;
  unint64_t v24;
  unsigned int v25;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(sub_21DC714C8() - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = v9 - 1;
  if (!v9)
    v10 = 0;
  if (v7 <= v10)
    v11 = v10;
  else
    v11 = v7;
  if (v11 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  else
    v12 = v11;
  if (v9)
    v13 = *(_QWORD *)(v8 + 64);
  else
    v13 = *(_QWORD *)(v8 + 64) + 1;
  if (!a2)
    return 0;
  v14 = *(_QWORD *)(v6 + 64);
  v15 = *(unsigned __int8 *)(v8 + 80);
  v16 = v15 + 9;
  if (a2 <= v12)
    goto LABEL_31;
  v17 = v13 + ((v16 + ((((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8)) & ~v15);
  v18 = 8 * v17;
  if (v17 > 3)
    goto LABEL_15;
  v20 = ((a2 - v12 + ~(-1 << v18)) >> v18) + 1;
  if (HIWORD(v20))
  {
    v19 = *(_DWORD *)(a1 + v17);
    if (v19)
      goto LABEL_22;
LABEL_31:
    if ((_DWORD)v7 == v12)
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
    v23 = (unint64_t *)((a1 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
    if ((v11 & 0x80000000) == 0)
    {
      v24 = *v23;
      if (v24 >= 0xFFFFFFFF)
        LODWORD(v24) = -1;
      return (v24 + 1);
    }
    if (v9 >= 2)
    {
      v25 = (*(uint64_t (**)(unint64_t))(v8 + 48))((v16
                                                                   + (((unint64_t)v23 + 63) & 0xFFFFFFFFFFFFFFF8)) & ~v15);
      if (v25 >= 2)
        return v25 - 1;
      else
        return 0;
    }
    return 0;
  }
  if (v20 > 0xFF)
  {
    v19 = *(unsigned __int16 *)(a1 + v17);
    if (*(_WORD *)(a1 + v17))
      goto LABEL_22;
    goto LABEL_31;
  }
  if (v20 < 2)
    goto LABEL_31;
LABEL_15:
  v19 = *(unsigned __int8 *)(a1 + v17);
  if (!*(_BYTE *)(a1 + v17))
    goto LABEL_31;
LABEL_22:
  v21 = (v19 - 1) << v18;
  if (v17 > 3)
    v21 = 0;
  if ((_DWORD)v17)
  {
    if (v17 <= 3)
      v22 = v17;
    else
      v22 = 4;
    __asm { BR              X12 }
  }
  return v12 + v21 + 1;
}

void sub_21DC30734(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  size_t v15;
  unsigned int v16;
  unsigned int v17;
  int v18;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = 0;
  v10 = *(_QWORD *)(sub_21DC714C8() - 8);
  v11 = *(_DWORD *)(v10 + 84);
  v12 = v11 - 1;
  if (!v11)
    v12 = 0;
  if (v8 > v12)
    v12 = v8;
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  v14 = *(_QWORD *)(v10 + 64);
  if (!v11)
    ++v14;
  v15 = v14
      + ((*(unsigned __int8 *)(v10 + 80)
        + 9
        + ((((*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  if (a3 > v13)
  {
    if (v15 > 3)
    {
      v9 = 1u;
      if (v13 >= a2)
LABEL_26:
        __asm { BR              X16 }
LABEL_19:
      v17 = ~v13 + a2;
      if (v15 < 4)
      {
        if ((_DWORD)v15)
        {
          v18 = v17 & ~(-1 << (8 * v15));
          bzero(a1, v15);
          if ((_DWORD)v15 == 3)
          {
            *(_WORD *)a1 = v18;
            a1[2] = BYTE2(v18);
          }
          else if ((_DWORD)v15 == 2)
          {
            *(_WORD *)a1 = v18;
          }
          else
          {
            *a1 = v18;
          }
        }
      }
      else
      {
        bzero(a1, v15);
        *(_DWORD *)a1 = v17;
      }
      __asm { BR              X10 }
    }
    v16 = ((a3 - v13 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
    if (HIWORD(v16))
    {
      v9 = 4u;
      if (v13 >= a2)
        goto LABEL_26;
      goto LABEL_19;
    }
    if (v16 >= 0x100)
      v9 = 2;
    else
      v9 = v16 > 1;
  }
  if (v13 >= a2)
    goto LABEL_26;
  goto LABEL_19;
}

void sub_21DC30984()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x21DC309A4);
}

void sub_21DC3098C()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x21DC309A4);
}

void sub_21DC30994()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x21DC309A4);
}

uint64_t type metadata accessor for InstrumentationStreamsProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InstrumentationStreamsProvider);
}

void sub_21DC309CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2553A9618)
  {
    sub_21DC714C8();
    v0 = sub_21DC71D8C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2553A9618);
  }
}

uint64_t sub_21DC30A20(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A83B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(a2 + 24) + 16))(*(_QWORD *)(v2 + *(int *)(a2 + 40)), *(unsigned __int8 *)(v2 + *(int *)(a2 + 40) + 8), *(_QWORD *)(v2 + *(int *)(a2 + 44)), *(unsigned __int8 *)(v2 + *(int *)(a2 + 44) + 8), *(_QWORD *)(v2 + *(int *)(a2 + 48)), *(unsigned __int8 *)(v2 + *(int *)(a2 + 48) + 8), *(_QWORD *)(v2 + *(int *)(a2 + 52)), *(unsigned __int8 *)(v2 + *(int *)(a2 + 52) + 8), v2 + *(int *)(a2 + 56), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_21DC07D84((unint64_t *)&qword_2553A83C8, &qword_2553A83B8, MEMORY[0x24BE0C940]);
  v10 = a1;
  sub_21DC7163C();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_21DC30B74(uint64_t a1, uint64_t a2)
{
  id v3;

  v3 = *(id *)(a1 + 24);
  LOBYTE(a2) = sub_21DC31294((uint64_t)v3, a2);

  return a2 & 1;
}

uint64_t sub_21DC30BB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9638);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21DC30A20(*(void **)(v1 + *(int *)(a1 + 36)), a1);
  sub_21DC07D84(&qword_2553A9648, &qword_2553A9638, MEMORY[0x24BE0C888]);
  sub_21DC71618();
  type metadata accessor for TimestampedOrderedEvent();
  sub_21DC71660();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_21DC30C94(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  _QWORD v18[6];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9638);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s26AIMLInstrumentationStreams11EventFilterC1poiyA2C_ACtFZ_0(*(_QWORD *)(v3 + *(int *)(a2 + 36)), a1);
  sub_21DC30A20(v12, a2);

  v13 = sub_21DC71600();
  v18[5] = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9640);
  v18[2] = v13;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A8930);
  swift_dynamicCast();
  v14 = (void *)v18[1];
  v15 = objc_allocWithZone((Class)type metadata accessor for EventGraphsPublisher(0));
  v16 = v14;
  sub_21DC35CD4(v16, a3);

  type metadata accessor for EventGraph();
  sub_21DC71654();

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_21DC30DEC(uint64_t a1, double a2)
{
  if (qword_2553A7EF0 != -1)
    swift_once();
  return sub_21DC30C94(qword_2553AC588, a1, a2);
}

uint64_t sub_21DC30E5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9620);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A83D0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2553A7F28 != -1)
    swift_once();
  sub_21DC30C94(qword_2553AC668, a1, 300.0);
  type metadata accessor for SiriTurn();
  sub_21DC07D84(&qword_2553A9628, &qword_2553A83D0, MEMORY[0x24BE0C940]);
  sub_21DC71624();
  sub_21DC07D84(&qword_2553A9630, &qword_2553A9620, MEMORY[0x24BE0C8A8]);
  sub_21DC71618();
  sub_21DC71660();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_21DC31004(void *a1)
{
  id v2;

  v2 = objc_allocWithZone((Class)type metadata accessor for SiriTurn());
  return SiriTurn.init(eventGraph:)(a1);
}

uint64_t sub_21DC31038(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  objc_class *v8;
  char *v9;
  objc_super v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A83D8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21DC30E5C(a1);
  v7 = sub_21DC71648();
  v8 = (objc_class *)type metadata accessor for SiriConversationPublisher();
  v9 = (char *)objc_allocWithZone(v8);
  *(_QWORD *)&v9[OBJC_IVAR____TtC26AIMLInstrumentationStreams25SiriConversationPublisher_inner] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC26AIMLInstrumentationStreams25SiriConversationPublisher_upstream] = v7;
  v11.receiver = v9;
  v11.super_class = v8;
  objc_msgSendSuper2(&v11, sel_init);
  type metadata accessor for SiriConversation();
  sub_21DC71654();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

id sub_21DC31130(uint64_t a1)
{
  uint64_t v1;

  return *(id *)(v1 + *(int *)(a1 + 36));
}

void sub_21DC3113C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(int *)(a2 + 36);

  *(_QWORD *)(v2 + v4) = a1;
}

uint64_t (*sub_21DC31170())()
{
  return nullsub_1;
}

uint64_t sub_21DC31184(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 40));
}

uint64_t sub_21DC31198(uint64_t result, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = v3 + *(int *)(a3 + 40);
  *(_QWORD *)v4 = result;
  *(_BYTE *)(v4 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_21DC311B0())()
{
  return nullsub_1;
}

uint64_t sub_21DC311C4(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 44));
}

uint64_t sub_21DC311D8(uint64_t result, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = v3 + *(int *)(a3 + 44);
  *(_QWORD *)v4 = result;
  *(_BYTE *)(v4 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_21DC311F0())()
{
  return nullsub_1;
}

uint64_t sub_21DC31204(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 48));
}

uint64_t sub_21DC31218(uint64_t result, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = v3 + *(int *)(a3 + 48);
  *(_QWORD *)v4 = result;
  *(_BYTE *)(v4 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_21DC31230())()
{
  return nullsub_1;
}

uint64_t sub_21DC31244(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 52));
}

uint64_t sub_21DC31258(uint64_t result, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = v3 + *(int *)(a3 + 52);
  *(_QWORD *)v4 = result;
  *(_BYTE *)(v4 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_21DC31270())()
{
  return nullsub_1;
}

uint64_t sub_21DC31294(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  void *v4;
  uint64_t ObjectType;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;

  result = sub_21DC716D8();
  if (result)
  {
    v4 = (void *)result;
    ObjectType = swift_getObjectType();

    v6 = sub_21DC716E4();
    if (v6)
    {
      v7 = (void *)v6;
      v8 = swift_getObjectType();

    }
    else
    {
      v8 = 0;
    }
    v9 = *(_QWORD *)(a2 + OBJC_IVAR___ISEventFilter_filter);
    if (v9)
    {
      if (!*(_QWORD *)(v9 + 16))
        return 0;
      v10 = sub_21DC0A464(ObjectType);
      if ((v11 & 1) == 0)
        return 0;
      v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
      if (v12)
      {
        if (v12 != 1 && v8)
          return sub_21DC49868(v8, v12);
        return 0;
      }
    }
    return 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21DC31354()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_21DC31378(uint64_t a1)
{
  uint64_t v1;

  return sub_21DC30B74(a1, *(_QWORD *)(v1 + 16));
}

void *OrderedEvent.linkedComponentIdentifiers()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  objc_class *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  _QWORD v31[3];
  _QWORD v32[4];
  __int128 v33;
  id v34;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9650);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9658);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void *)sub_21DC716D8();
  v10 = (id)sub_21DC716E4();
  if (!v9)
    goto LABEL_29;
  v34 = v9;
  sub_21DC31774();
  v11 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9660);
  if (!swift_dynamicCast())
  {

    objc_opt_self();
    v14 = (void *)swift_dynamicCastObjCClass();
    if (!v14)
    {

      goto LABEL_18;
    }
    if (v10)
    {
      objc_opt_self();
      v15 = swift_dynamicCastObjCClass();
      if (v15)
      {
        v16 = (void *)v15;
        v17 = v11;
        v10 = v10;
        v18 = objc_msgSend(v16, sel_turnID);
        if (v18)
        {
          v19 = v18;
          v20 = objc_msgSend(v18, sel_turnID);

          if (v20)
          {
            v21 = objc_msgSend(v14, sel_metadata);
            if (v21)
            {
              v22 = v21;
              v23 = objc_msgSend(v21, sel_fingerprint);

              if (v23)
              {
                v24 = (objc_class *)sub_21DC71804();
                v25 = objc_allocWithZone(v24);
                v26 = v23;
                v27 = (void *)sub_21DC717E0();
                if (!v27)
                {

                  return v27;
                }
                v28 = objc_allocWithZone(v24);
                v29 = sub_21DC717E0();

                if (v29)
                  return v27;

                return 0;
              }

LABEL_18:
              return 0;
            }

          }
        }

LABEL_29:
        return 0;
      }

    }
    return 0;
  }
  sub_21DC2FAE4(&v33, (uint64_t)v32);
  __swift_project_boxed_opaque_existential_1(v32, v32[3]);
  v12 = sub_21DC71810();
  if (!v12)
  {

LABEL_23:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);

    return 0;
  }
  if (*(_QWORD *)(v12 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v3, v12 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), v4);
    v13 = 0;
  }
  else
  {
    v13 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, v13, 1, v4);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {

    sub_21DC317B0((uint64_t)v3);
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
  sub_21DC71828();
  v27 = (void *)v31[2];
  sub_21DC7181C();

  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);

  return v27;
}

unint64_t sub_21DC31774()
{
  unint64_t result;

  result = qword_2553A9608;
  if (!qword_2553A9608)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2553A9608);
  }
  return result;
}

uint64_t sub_21DC317B0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9650);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t TimestampedOrderedEvent.__allocating_init(timestamp:orderedEvent:)(uint64_t a1, double a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(double *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = a1;
  return result;
}

uint64_t TimestampedOrderedEvent.__allocating_init(biomeStoreEvent:)(void *a1)
{
  swift_allocObject();
  return TimestampedOrderedEvent.init(biomeStoreEvent:)(a1);
}

uint64_t TimestampedOrderedEvent.__allocating_init(rawEvent:)(void *a1)
{
  swift_allocObject();
  return TimestampedOrderedEvent.init(rawEvent:)(a1);
}

uint64_t sub_21DC318A0()
{
  uint64_t v0;

  v0 = sub_21DC719D8();
  __swift_allocate_value_buffer(v0, qword_2553A9668);
  __swift_project_value_buffer(v0, (uint64_t)qword_2553A9668);
  sub_21DC208FC();
  sub_21DC71D80();
  return sub_21DC719E4();
}

double TimestampedOrderedEvent.timestamp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

id TimestampedOrderedEvent.orderedEvent.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

uint64_t sub_21DC31944()
{
  return sub_21DC7151C();
}

uint64_t TimestampedOrderedEvent.init(timestamp:orderedEvent:)(uint64_t a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = a1;
  return v2;
}

uint64_t TimestampedOrderedEvent.init(biomeStoreEvent:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  _BOOL4 v58;
  uint8_t *v59;
  char *v60;
  id v61;
  void *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  id v66;
  id v67;
  uint64_t v68;
  void *v69;
  void (*v70)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v71;
  id v72;
  id v73;
  void *v74;
  unsigned int v75;
  id v76;
  void *v77;
  char *v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  id v85;
  void *v86;
  id v87;
  _QWORD v89[2];
  int v90;
  void *v91;
  char *v92;
  id v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  id v101;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v6, v9);
  v97 = (uint64_t)v89 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v96 = (char *)v89 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v18 = (char *)v89 - v17;
  MEMORY[0x24BDAC7A8](v16, v19);
  v21 = (char *)v89 - v20;
  v100 = sub_21DC715F4();
  v22 = *(_QWORD *)(v100 - 8);
  v24 = MEMORY[0x24BDAC7A8](v100, v23);
  v26 = (char *)v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v24, v27);
  v30 = (char *)v89 - v29;
  MEMORY[0x24BDAC7A8](v28, v31);
  v99 = (char *)v89 - v32;
  v33 = objc_msgSend(a1, sel_eventBody);
  if (!v33)
    goto LABEL_10;
  v34 = v33;
  v92 = v26;
  v98 = v22;
  v94 = v8;
  v35 = objc_msgSend(v33, sel_anyEventType);
  v36 = objc_msgSend(v34, sel_eventData);
  if (v36)
  {
    v37 = a1;
    v38 = sub_21DC71504();
    v40 = v39;

    v36 = (id)sub_21DC714EC();
    v41 = v38;
    a1 = v37;
    sub_21DC07150(v41, v40);
  }
  v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95AA0]), sel_initWithAnyEventType_payload_, v35, v36);

  v43 = objc_msgSend(v42, sel_unwrap);
  if (v43)
  {
    v93 = v43;
    objc_msgSend(a1, sel_timestamp);
    *(_QWORD *)(v2 + 16) = v44;
    v45 = objc_msgSend(v34, sel_logicalTimestamp);
    v95 = v2;
    if (!v45)
    {
      sub_21DC715E8();
      v51 = objc_allocWithZone((Class)sub_21DC717C8());
      v52 = (void *)sub_21DC717A4();
      v53 = (uint64_t)v18;
      v50 = v2;
      v49 = v100;
      goto LABEL_23;
    }
    v46 = v45;
    v47 = objc_msgSend(v45, sel_timestampInNanoseconds);
    v91 = a1;
    if ((uint64_t)v47 <= 0)
    {
      if (qword_2553A7EF8 != -1)
        swift_once();
      v54 = sub_21DC719D8();
      __swift_project_value_buffer(v54, (uint64_t)qword_2553A9668);
      v55 = v46;
      v56 = sub_21DC719C0();
      v57 = sub_21DC71D20();
      v90 = v57;
      v58 = os_log_type_enabled(v56, v57);
      v49 = v100;
      if (v58)
      {
        v59 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v59 = 134217984;
        v89[1] = v59 + 4;
        v101 = objc_msgSend(v55, (SEL)&selRef_clusterRepresentativeId + 2);
        sub_21DC71DA4();

        _os_log_impl(&dword_21DC05000, v56, (os_log_type_t)v90, "Failed to convert timestamp in BMSiriSELFProcessedEvent: %lld", v59, 0xCu);
        MEMORY[0x22079DA24](v59, -1, -1);

      }
      else
      {

      }
    }
    else
    {
      v48 = (unint64_t)objc_msgSend(v46, sel_timestampInNanoseconds);
      v49 = v100;
      if ((v48 & 0x8000000000000000) != 0)
      {
        sub_21DC71FA8();
        __break(1u);
        goto LABEL_9;
      }
    }
    v60 = v18;
    v61 = objc_msgSend(v46, sel_clockIdentifier);
    if (v61)
    {
      v62 = v61;
      v63 = v99;
      sub_21DC715DC();

      v64 = v98;
      v65 = *(void (**)(char *, char *, uint64_t))(v98 + 32);
      v65(v21, v63, v49);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v21, 0, 1, v49);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v21, 1, v49) != 1)
      {
        v65(v30, v21, v49);
LABEL_22:
        a1 = v91;
        v53 = (uint64_t)v60;
        v66 = objc_allocWithZone((Class)sub_21DC717C8());
        v52 = (void *)sub_21DC717A4();

        v50 = v95;
LABEL_23:
        v67 = objc_msgSend(v34, sel_messageUuid);
        v68 = (uint64_t)v96;
        if (v67)
        {
          v69 = v67;
          sub_21DC715DC();

          v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v98 + 56);
          v70(v68, 0, 1, v49);
        }
        else
        {
          v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v98 + 56);
          v70((uint64_t)v96, 1, 1, v49);
        }
        sub_21DC2FA74(v68, v53);
        sub_21DC2DBD0(v53, v97);
        objc_allocWithZone((Class)sub_21DC71774());
        v71 = v52;
        v72 = v93;
        *(_QWORD *)(v50 + 24) = sub_21DC71708();
        v73 = objc_msgSend(v34, sel_clusterRepresentativeId);
        if (!v73)
          goto LABEL_34;
        v74 = v73;
        v97 = v53;
        v75 = objc_msgSend(v73, sel_componentName);
        v76 = objc_msgSend(v74, sel_uuid);
        if (v76)
        {
          v77 = v76;
          LODWORD(v96) = v75;
          v78 = v99;
          sub_21DC715DC();

          v79 = *(void (**)(char *, char *, uint64_t))(v98 + 32);
          v80 = (uint64_t)v94;
          v81 = v78;
          v82 = v98;
          v83 = v100;
          v79(v94, v81, v100);
          v70(v80, 0, 1, v83);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v80, 1, v83) != 1)
          {
            v84 = v92;
            v79(v92, (char *)v80, v83);
            v85 = objc_allocWithZone(MEMORY[0x24BE95C78]);
            v86 = (void *)sub_21DC715B8();
            objc_msgSend(v85, sel_initWithNSUUID_, v86);

            v87 = objc_allocWithZone((Class)sub_21DC71804());
            sub_21DC717E0();

            (*(void (**)(char *, uint64_t))(v82 + 8))(v84, v83);
LABEL_33:
            v53 = v97;
            v50 = v95;
LABEL_34:
            sub_21DC71768();

            sub_21DC19DF4(v53);
            return v50;
          }
        }
        else
        {
          v80 = (uint64_t)v94;
          v70((uint64_t)v94, 1, 1, v100);
        }

        sub_21DC19DF4(v80);
        goto LABEL_33;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v98 + 56))(v21, 1, 1, v49);
    }
    sub_21DC715E8();
    sub_21DC19DF4((uint64_t)v21);
    goto LABEL_22;
  }
LABEL_9:

LABEL_10:
  type metadata accessor for TimestampedOrderedEvent();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t TimestampedOrderedEvent.init(rawEvent:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  const char *v26;
  uint64_t v27;
  uint64_t v29;

  v2 = v1;
  v4 = sub_21DC7169C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (id *)((char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  objc_msgSend(a1, sel_timestamp);
  *(_QWORD *)(v1 + 16) = v9;
  v10 = objc_msgSend(a1, sel_eventBody);
  if (!v10)
  {
    if (qword_2553A7EF8 != -1)
      swift_once();
    v15 = sub_21DC719D8();
    __swift_project_value_buffer(v15, (uint64_t)qword_2553A9668);
    v16 = sub_21DC719C0();
    v17 = sub_21DC71D20();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_21DC05000, v16, v17, "Empty message body", v18, 2u);
      MEMORY[0x22079DA24](v18, -1, -1);
    }
    goto LABEL_24;
  }
  v11 = v10;
  sub_21DC71690();

  if ((*(unsigned int (**)(id *, uint64_t))(v5 + 88))(v8, v4) != *MEMORY[0x24BE90940])
  {
    if (qword_2553A7EF8 != -1)
      swift_once();
    v19 = sub_21DC719D8();
    __swift_project_value_buffer(v19, (uint64_t)qword_2553A9668);
    v20 = sub_21DC719C0();
    v21 = sub_21DC71D20();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_21DC05000, v20, v21, "Unknown event body type", v22, 2u);
      MEMORY[0x22079DA24](v22, -1, -1);
    }

    (*(void (**)(id *, uint64_t))(v5 + 8))(v8, v4);
    goto LABEL_25;
  }
  (*(void (**)(id *, uint64_t))(v5 + 96))(v8, v4);
  v12 = *v8;
  if (objc_msgSend(*v8, sel_anyEventType) != 6)
  {
    if (qword_2553A7EF8 != -1)
      swift_once();
    v23 = sub_21DC719D8();
    __swift_project_value_buffer(v23, (uint64_t)qword_2553A9668);
    v16 = sub_21DC719C0();
    v24 = sub_21DC71D20();
    if (os_log_type_enabled(v16, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      v26 = "Not an ordered any event, skipping";
LABEL_23:
      _os_log_impl(&dword_21DC05000, v16, v24, v26, v25, 2u);
      MEMORY[0x22079DA24](v25, -1, -1);

LABEL_24:
LABEL_25:
      type metadata accessor for TimestampedOrderedEvent();
      swift_deallocPartialClassInstance();
      return 0;
    }
LABEL_27:

    goto LABEL_25;
  }
  sub_21DC71774();
  v12 = v12;
  v13 = sub_21DC716CC();
  if (!v13)
  {
    if (qword_2553A7EF8 != -1)
      swift_once();
    v27 = sub_21DC719D8();
    __swift_project_value_buffer(v27, (uint64_t)qword_2553A9668);
    v16 = sub_21DC719C0();
    v24 = sub_21DC71D20();
    if (os_log_type_enabled(v16, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      v26 = "Failed to convert ordered any event to ordered event";
      goto LABEL_23;
    }
    goto LABEL_27;
  }
  v14 = v13;

  *(_QWORD *)(v2 + 24) = v14;
  return v2;
}

uint64_t type metadata accessor for TimestampedOrderedEvent()
{
  return objc_opt_self();
}

uint64_t static TimestampedOrderedEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(double *)(a1 + 16) != *(double *)(a2 + 16))
    return 0;
  sub_21DC71774();
  return sub_21DC71738() & 1;
}

BOOL static TimestampedOrderedEvent.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;

  v2 = *(double *)(a1 + 16);
  v3 = *(double *)(a2 + 16);
  if (v2 != v3)
    return v2 < v3;
  sub_21DC71774();
  return sub_21DC7172C() & 1;
}

uint64_t sub_21DC3260C()
{
  return sub_21DC71744();
}

uint64_t TimestampedOrderedEvent.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t TimestampedOrderedEvent.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

BOOL sub_21DC3266C(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;

  v2 = *(double *)(*(_QWORD *)a1 + 16);
  v3 = *(double *)(*(_QWORD *)a2 + 16);
  if (v2 != v3)
    return v2 < v3;
  sub_21DC71774();
  return sub_21DC7172C() & 1;
}

uint64_t sub_21DC326C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21DC71744();
  *a1 = result;
  return result;
}

uint64_t sub_21DC326F4(uint64_t a1, uint64_t a2)
{
  if (*(double *)(*(_QWORD *)a1 + 16) != *(double *)(*(_QWORD *)a2 + 16))
    return 0;
  sub_21DC71774();
  return sub_21DC71738() & 1;
}

uint64_t sub_21DC32750(uint64_t a1, uint64_t a2)
{
  return sub_21DC327AC(&qword_2553A9680, a2, (uint64_t (*)(uint64_t))type metadata accessor for TimestampedOrderedEvent, (uint64_t)&protocol conformance descriptor for TimestampedOrderedEvent);
}

uint64_t sub_21DC3277C()
{
  return sub_21DC327AC(&qword_2553A9688, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE94828], MEMORY[0x24BEE5BD8]);
}

uint64_t sub_21DC327AC(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x22079D964](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for TimestampedOrderedEvent()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TimestampedOrderedEvent.date.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of TimestampedOrderedEvent.__allocating_init(timestamp:orderedEvent:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of TimestampedOrderedEvent.__allocating_init(biomeStoreEvent:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of TimestampedOrderedEvent.__allocating_init(rawEvent:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of TimestampedOrderedEvent.id.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_21DC32868(uint64_t a1)
{
  return sub_21DC3287C(a1);
}

uint64_t sub_21DC3287C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  void **v4;
  void *v5;
  id v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v7 = MEMORY[0x24BEE4AF8];
    sub_21DC71F24();
    v4 = (void **)(a1 + 32);
    do
    {
      v5 = *v4;
      v4 += 2;
      v6 = v5;
      sub_21DC71F00();
      sub_21DC71F30();
      sub_21DC71F3C();
      sub_21DC71F0C();
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_21DC32928(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v2 = type metadata accessor for EventTypeIdPair();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_21DC4BB58(0, v7, 0);
    v8 = v16;
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA530) - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_21DC36F18(v10, (uint64_t)v6);
      v16 = v8;
      v13 = *(_QWORD *)(v8 + 16);
      v12 = *(_QWORD *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_21DC4BB58(v12 > 1, v13 + 1, 1);
        v8 = v16;
      }
      *(_QWORD *)(v8 + 16) = v13 + 1;
      sub_21DC36F5C((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v13);
      v10 += v11;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_21DC32A6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = sub_21DC715F4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x24BEE4AF8];
  if (v8)
  {
    v16 = v1;
    v18 = MEMORY[0x24BEE4AF8];
    sub_21DC4BB2C(0, v8, 0);
    v9 = v18;
    v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2553A8380) - 8);
    v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v17 = *(_QWORD *)(v10 + 72);
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    do
    {
      v12(v7, v11, v3);
      v18 = v9;
      v14 = *(_QWORD *)(v9 + 16);
      v13 = *(_QWORD *)(v9 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_21DC4BB2C(v13 > 1, v14 + 1, 1);
        v9 = v18;
      }
      *(_QWORD *)(v9 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v14, v7, v3);
      v11 += v17;
      --v8;
    }
    while (v8);
  }
  return v9;
}

id EventGraphsPublisher.__allocating_init(events:windowLength:)(void *a1, double a2)
{
  objc_class *v2;
  id v5;
  id v6;

  v5 = objc_allocWithZone(v2);
  v6 = sub_21DC35CD4(a1, a2);

  return v6;
}

id EventGraphsPublisher.init(events:windowLength:)(void *a1, double a2)
{
  id v3;

  v3 = sub_21DC35CD4(a1, a2);

  return v3;
}

void sub_21DC32C50()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;

  v1 = v0;
  v2 = *(double *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams20EventGraphsPublisher_windowLength);
  v3 = objc_allocWithZone((Class)type metadata accessor for EventGraphsPublisher.ConnectedComponentGroupsSubscriber(0));
  v4 = swift_unknownObjectRetain();
  v5 = sub_21DC36198(v4, v2);
  swift_unknownObjectRelease();
  v6 = OBJC_IVAR____TtC26AIMLInstrumentationStreams20EventGraphsPublisher_inner;
  v7 = *(void **)(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams20EventGraphsPublisher_inner);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams20EventGraphsPublisher_inner) = v5;

  if (*(_QWORD *)(v1 + v6))
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams20EventGraphsPublisher_upstream), sel_subscribe_);
  else
    __break(1u);
}

uint64_t sub_21DC32D94()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams20EventGraphsPublisher_upstream);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A8930);
  v2 = v1;
  if (!swift_dynamicCast())
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9780);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_21DC73350;
  *(_QWORD *)(v3 + 32) = v5;
  v6 = v3;
  sub_21DC71B94();
  return v6;
}

uint64_t sub_21DC32EE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  unint64_t v11[4];

  v2 = v1;
  sub_21DC13D44(a1, (uint64_t)v11);
  type metadata accessor for TimestampedOrderedEvent();
  if (!swift_dynamicCast())
    return BPSDemandMax();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9780);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21DC73350;
  *(_QWORD *)(inited + 32) = v10;
  v11[0] = inited;
  sub_21DC71B94();
  v4 = v11[0];
  v5 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_graphBuilder);
  v6 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_logicalClockBuilder);
  v7 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_eventTypeBuilder);
  swift_retain();
  sub_21DC38B0C(v4, v5, v6, v7);
  swift_bridgeObjectRelease();
  sub_21DC33108();
  v8 = BPSDemandMax();
  swift_release();
  return v8;
}

uint64_t sub_21DC33108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;

  v1 = OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_downstream;
  v2 = sub_21DC33190();
  if (v2)
  {
    v3 = (void *)v2;
    do
    {
      objc_msgSend(*(id *)(v0 + v1), sel_receiveInput_, v3);

      v3 = (void *)sub_21DC33190();
    }
    while (v3);
  }
  v4 = sub_21DC33404();
  if (v4)
  {
    v5 = v4;
    do
    {
      objc_msgSend(*(id *)(v0 + v1), sel_receiveInput_, v5);

      v5 = sub_21DC33404();
    }
    while (v5);
  }
  return sub_21DC33A74();
}

uint64_t sub_21DC33190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  _QWORD v18[5];
  _QWORD *v19[2];

  if (*(_BYTE *)(v0
                + OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_upstreamFinished) == 1)
  {
    v1 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_graphBuilder);
    swift_beginAccess();
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain_n();
    v3 = sub_21DC09690(v2);
    swift_bridgeObjectRelease();
    v19[0] = v3;
    sub_21DC341C8(v19);
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(double *)(v0
                   + OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_latestRecievedTimestamp)
       - *(double *)(v0
                   + OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_graphSessionWindowLength);
    v5 = swift_beginAccess();
    MEMORY[0x24BDAC7A8](v5, v6);
    *(double *)&v18[2] = v4;
    v7 = swift_bridgeObjectRetain();
    sub_21DC36D9C(v7, (uint64_t)sub_21DC201FC, (uint64_t)v18, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_21DC36768);
    swift_bridgeObjectRelease();
    v8 = swift_bridgeObjectRetain();
    v9 = sub_21DC09690(v8);
    swift_release();
    v19[0] = v9;
    sub_21DC341C8(v19);
    swift_release();
  }
  v10 = sub_21DC3287C((uint64_t)v19[0]);
  swift_release();
  if (!(v10 >> 62))
  {
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_6;
LABEL_13:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v16 = sub_21DC71FCC();
  swift_bridgeObjectRelease();
  if (!v16)
    goto LABEL_13;
LABEL_6:
  if ((v10 & 0xC000000000000001) != 0)
  {
    v11 = (id)MEMORY[0x22079D208](0, v10);
    goto LABEL_9;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(id *)(v10 + 32);
LABEL_9:
    v12 = v11;
    swift_bridgeObjectRelease();
    v13 = sub_21DC55A3C(v12);
    if (v14)
    {
      v15 = sub_21DC3372C(v14, *(double *)&v13);

      swift_bridgeObjectRelease();
      return (uint64_t)v15;
    }

    return 0;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

id sub_21DC33404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v25;
  uint64_t v26[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A9900);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  v5 = type metadata accessor for EventTypeIdPair();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (uint64_t *)((char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 8);
  if (*(_BYTE *)(v0
                + OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_upstreamFinished) == 1)
  {
    v10 = *(_QWORD *)(v0
                    + OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_eventTypeBuilder);
    swift_beginAccess();
    v11 = *(_QWORD *)(v10 + 16);
    swift_bridgeObjectRetain_n();
    v12 = sub_21DC096AC(v11);
    swift_bridgeObjectRelease();
    v26[0] = v12;
    sub_21DC34230(v26, (uint64_t *)&unk_2553AA530, (uint64_t (*)(uint64_t))sub_21DC5F7EC, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_21DC5B580);
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = *(double *)(v0
                    + OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_latestRecievedTimestamp)
        - *(double *)(v0
                    + OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_graphSessionWindowLength);
    v14 = swift_beginAccess();
    MEMORY[0x24BDAC7A8](v14, v15);
    *((double *)&v25 - 2) = v13;
    v16 = swift_bridgeObjectRetain();
    sub_21DC36D9C(v16, (uint64_t)sub_21DC36FDC, (uint64_t)(&v25 - 4), (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_21DC36944);
    swift_bridgeObjectRelease();
    v17 = swift_bridgeObjectRetain();
    v18 = sub_21DC096AC(v17);
    swift_release();
    v26[0] = v18;
    sub_21DC34230(v26, (uint64_t *)&unk_2553AA530, (uint64_t (*)(uint64_t))sub_21DC5F7EC, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_21DC5B580);
    swift_release();
  }
  v19 = sub_21DC32928(v26[0]);
  swift_release();
  if (*(_QWORD *)(v19 + 16))
  {
    sub_21DC36F18(v19 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), (uint64_t)v4);
    v20 = 0;
  }
  else
  {
    v20 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, v20, 1, v5);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_21DC07C84((uint64_t)v4, (uint64_t *)&unk_2553A9900);
    return 0;
  }
  sub_21DC36F5C((uint64_t)v4, (uint64_t)v9);
  v21 = sub_21DC34034(v9);
  if (!v22)
  {
    sub_21DC36FA0((uint64_t)v9);
    return 0;
  }
  v23 = sub_21DC3372C(v22, *(double *)&v21);
  swift_bridgeObjectRelease();
  sub_21DC36FA0((uint64_t)v9);
  return v23;
}

id sub_21DC3372C(unint64_t a1, double a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id result;
  void *v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  void *v32;
  unint64_t v33;
  char *v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21DC715F4();
  v10 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v36 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v14);
  v34 = (char *)&v31 - v15;
  if (!(a1 >> 62))
  {
    v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16)
      goto LABEL_3;
LABEL_21:
    swift_bridgeObjectRelease();
    v17 = MEMORY[0x24BEE4AF8];
LABEL_22:
    v26 = sub_21DC4A770(v17);
    swift_bridgeObjectRelease();
    v27 = v2;
    v28 = sub_21DC35E70(v26, (uint64_t)v27);
    swift_bridgeObjectRelease();

    v37 = a1;
    swift_bridgeObjectRetain();
    sub_21DC52E58(v28);
    v29 = v37;
    v30 = objc_allocWithZone((Class)type metadata accessor for EventGraph());
    return EventGraph.init(timestamp:events:)(v29, a2);
  }
LABEL_20:
  swift_bridgeObjectRetain();
  v16 = sub_21DC71FCC();
  if (!v16)
    goto LABEL_21;
LABEL_3:
  v32 = v2;
  v35 = a1 & 0xC000000000000001;
  v17 = MEMORY[0x24BEE4AF8];
  v18 = 4;
  v33 = a1;
  while (1)
  {
    v2 = (void *)(v18 - 4);
    if (v35)
    {
      MEMORY[0x22079D208](v18 - 4, a1);
      v19 = v18 - 3;
      if (__OFADD__(v2, 1))
        goto LABEL_19;
    }
    else
    {
      swift_retain();
      v19 = v18 - 3;
      if (__OFADD__(v2, 1))
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
    }
    result = (id)sub_21DC71714();
    if (!result)
      break;
    v21 = result;
    sub_21DC7178C();

    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_21DC07C84((uint64_t)v8, (uint64_t *)&unk_2553A98F0);
    }
    else
    {
      v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v23 = v34;
      v22(v34, v8, v9);
      v22(v36, v23, v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v17 = sub_21DC1509C(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
      v25 = *(_QWORD *)(v17 + 16);
      v24 = *(_QWORD *)(v17 + 24);
      if (v25 >= v24 >> 1)
        v17 = sub_21DC1509C(v24 > 1, v25 + 1, 1, v17);
      *(_QWORD *)(v17 + 16) = v25 + 1;
      v22((char *)(v17+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v25), v36, v9);
      a1 = v33;
    }
    ++v18;
    if (v19 == v16)
    {
      swift_bridgeObjectRelease();
      v2 = v32;
      goto LABEL_22;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC33A74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  unint64_t v23;
  char v24;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  int v31;
  uint64_t v32;
  _QWORD v34[2];
  char *v35;
  void (*v36)(char *, unint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char v39[16];
  double v40;
  uint64_t v41;
  size_t v42[3];

  v1 = sub_21DC715F4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v38 = (uint64_t)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(double *)(v0
                 + OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_latestRecievedTimestamp)
     + -1800.0;
  v10 = *(_QWORD *)(v0
                  + OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_logicalClockBuilder);
  v11 = (uint64_t *)(v10 + 16);
  swift_beginAccess();
  v40 = v9;
  v12 = swift_bridgeObjectRetain();
  sub_21DC36D9C(v12, (uint64_t)sub_21DC201FC, (uint64_t)v39, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_21DC36B64);
  swift_bridgeObjectRelease();
  v13 = swift_bridgeObjectRetain();
  v14 = sub_21DC096C8(v13);
  swift_release();
  v42[0] = v14;
  sub_21DC34230((uint64_t *)v42, &qword_2553A8380, (uint64_t (*)(uint64_t))sub_21DC5F800, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_21DC5B58C);
  swift_release();
  v15 = sub_21DC32A6C(v42[0]);
  swift_release();
  v16 = *(_QWORD *)(v15 + 16);
  v34[1] = v15;
  if (v16)
  {
    v17 = v15 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v18 = (uint64_t *)(v10 + 24);
    v19 = *(_QWORD *)(v2 + 72);
    v36 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
    v37 = v19;
    swift_bridgeObjectRetain();
    v35 = v8;
    while (1)
    {
      v36(v8, v17, v1);
      v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
      v21(v8, 0, 1, v1);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1) == 1)
        break;
      v22 = v38;
      (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v38, v8, v1);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v23 = sub_21DC0A740(v22);
      LOBYTE(v22) = v24;
      swift_bridgeObjectRelease();
      if ((v22 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v26 = *v18;
        v41 = *v18;
        *v18 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_21DC5E6E0();
          v26 = v41;
        }
        (*(void (**)(unint64_t, uint64_t))(v2 + 8))(*(_QWORD *)(v26 + 48) + v23 * v37, v1);
        v27 = v41;
        sub_21DC693A4(v23, v41);
        *v18 = v27;
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v28 = sub_21DC0A740(v38);
      v30 = v29;
      swift_bridgeObjectRelease();
      if ((v30 & 1) != 0)
      {
        v31 = swift_isUniquelyReferenced_nonNull_native();
        v32 = *v11;
        v41 = *v11;
        *v11 = 0x8000000000000000;
        if (!v31)
        {
          sub_21DC5E4AC();
          v32 = v41;
        }
        (*(void (**)(unint64_t, uint64_t))(v2 + 8))(*(_QWORD *)(v32 + 48) + v28 * v37, v1);
        v20 = v41;
        sub_21DC693A4(v28, v41);
        *v11 = v20;
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v38, v1);
      v17 += v37;
      --v16;
      v8 = v35;
      if (!v16)
        goto LABEL_14;
    }
  }
  else
  {
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    swift_bridgeObjectRetain();
LABEL_14:
    v21(v8, 1, 1, v1);
  }
  return swift_bridgeObjectRelease_n();
}

id sub_21DC33E8C()
{
  return sub_21DC33F9C(type metadata accessor for EventGraphsPublisher.ConnectedComponentGroupsSubscriber);
}

id EventGraphsPublisher.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void EventGraphsPublisher.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id EventGraphsPublisher.__deallocating_deinit()
{
  return sub_21DC33F9C(type metadata accessor for EventGraphsPublisher);
}

id sub_21DC33F9C(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_21DC34034(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t result;

  v2 = v1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 24);
  if (*(_QWORD *)(v4 + 16))
  {
    swift_bridgeObjectRetain();
    v5 = sub_21DC0A6A8(a1);
    if ((v6 & 1) != 0)
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
      swift_bridgeObjectRetain();
    }
    else
    {
      v7 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  swift_beginAccess();
  v8 = *(_QWORD *)(v2 + 16);
  if (*(_QWORD *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    v9 = sub_21DC0A6A8(a1);
    v11 = v10;
    if ((v10 & 1) != 0)
      v12 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
    else
      v12 = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  swift_beginAccess();
  sub_21DC686E8(a1);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_21DC686C4((uint64_t)a1);
  swift_endAccess();
  if (v7)
    result = v12;
  else
    result = 0;
  if (v7)
  {
    if ((v11 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return result;
}

uint64_t sub_21DC341B4(_QWORD **a1)
{
  return sub_21DC341C8(a1);
}

uint64_t sub_21DC341C8(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_21DC5F7D8(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_21DC342D4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_21DC34230(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(uint64_t), void (*a4)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12[2];

  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  v9 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = a3(v9);
  v10 = *(_QWORD *)(v9 + 16);
  v12[0] = v9 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v12[1] = v10;
  result = sub_21DC349B4(v12, a2, a4);
  *a1 = v9;
  return result;
}

uint64_t sub_21DC342D4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double *v28;
  double v29;
  uint64_t v30;
  double *v31;
  double v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t i;
  double v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  double *__dst;

  v3 = a1[1];
  result = sub_21DC72068();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v84 = *a1;
      v85 = *a1 + 8;
      v86 = -1;
      for (i = 1; i != v3; ++i)
      {
        v88 = *(double *)(v84 + 16 * i + 8);
        v89 = v86;
        v90 = v85;
        do
        {
          if (v88 >= *(double *)v90)
            break;
          if (!v84)
            goto LABEL_141;
          v91 = *(_QWORD *)(v90 + 8);
          *(_OWORD *)(v90 + 8) = *(_OWORD *)(v90 - 8);
          *(_QWORD *)(v90 - 8) = v91;
          *(double *)v90 = v88;
          v90 -= 16;
        }
        while (!__CFADD__(v89++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v101 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (double *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v93 = v12;
      v103 = v9;
      if (v13 >= 2)
      {
        v94 = *v101;
        do
        {
          v95 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v94)
            goto LABEL_145;
          v96 = v93;
          v97 = *(_QWORD *)&v93[16 * v95 + 32];
          v98 = *(_QWORD *)&v93[16 * v13 + 24];
          sub_21DC355D0((double *)(v94 + 16 * v97), (double *)(v94 + 16 * *(_QWORD *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1)
            break;
          if (v98 < v97)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v96 = sub_21DC5B7D4((uint64_t)v96);
          if (v95 >= *((_QWORD *)v96 + 2))
            goto LABEL_134;
          v99 = &v96[16 * v95 + 32];
          *(_QWORD *)v99 = v97;
          *((_QWORD *)v99 + 1) = v98;
          v100 = *((_QWORD *)v96 + 2);
          if (v13 > v100)
            goto LABEL_135;
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          v93 = v96;
          *((_QWORD *)v96 + 2) = v100 - 1;
          v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v103 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v103 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A9910);
    v8 = sub_21DC71BB8();
    *(_QWORD *)(v8 + 16) = v7;
    v103 = v8;
    __dst = (double *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v102 = *a1 + 40;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v104 = v6;
  v105 = v3;
  v106 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(double *)(v11 + 16 * v10 + 8);
      v16 = *(double *)(v11 + 16 * v14 + 8);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (double *)(v102 + 16 * v14);
        v18 = v15;
        while (1)
        {
          v19 = v18;
          v18 = *v17;
          if (v15 < v16 == *v17 >= v19)
            break;
          ++v10;
          v17 += 2;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v20 = 16 * v10;
          v21 = 16 * v14;
          v22 = v10;
          v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_144;
              v24 = v11 + v20;
              v25 = *(_QWORD *)(v11 + v21);
              v26 = *(_QWORD *)(v11 + v21 + 8);
              *(_OWORD *)(v11 + v21) = *(_OWORD *)(v11 + v20 - 16);
              *(_QWORD *)(v24 - 16) = v25;
              *(_QWORD *)(v24 - 8) = v26;
            }
            ++v23;
            v20 -= 16;
            v21 += 16;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v27 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v27 >= v3)
      v27 = v3;
    if (v27 < v14)
      break;
    if (v10 != v27)
    {
      v28 = (double *)(v11 + 16 * v10);
      do
      {
        v29 = *(double *)(v11 + 16 * v10 + 8);
        v30 = v14;
        v31 = v28;
        do
        {
          if (v29 >= *(v31 - 1))
            break;
          if (!v11)
            goto LABEL_142;
          v32 = *v31;
          *(_OWORD *)v31 = *((_OWORD *)v31 - 1);
          *(v31 - 1) = v29;
          *(v31 - 2) = v32;
          v31 -= 2;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 2;
      }
      while (v10 != v27);
      v10 = v27;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_21DC5B27C(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v34 = *((_QWORD *)v12 + 2);
    v33 = *((_QWORD *)v12 + 3);
    v13 = v34 + 1;
    v11 = v106;
    if (v34 >= v33 >> 1)
    {
      v83 = sub_21DC5B27C((char *)(v33 > 1), v34 + 1, 1, v12);
      v11 = v106;
      v12 = v83;
    }
    *((_QWORD *)v12 + 2) = v13;
    v35 = v12 + 32;
    v36 = &v12[16 * v34 + 32];
    *(_QWORD *)v36 = v14;
    *((_QWORD *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        v37 = v13 - 1;
        if (v13 >= 4)
        {
          v42 = &v35[16 * v13];
          v43 = *((_QWORD *)v42 - 8);
          v44 = *((_QWORD *)v42 - 7);
          v48 = __OFSUB__(v44, v43);
          v45 = v44 - v43;
          if (v48)
            goto LABEL_120;
          v47 = *((_QWORD *)v42 - 6);
          v46 = *((_QWORD *)v42 - 5);
          v48 = __OFSUB__(v46, v47);
          v40 = v46 - v47;
          v41 = v48;
          if (v48)
            goto LABEL_121;
          v49 = v13 - 2;
          v50 = &v35[16 * v13 - 32];
          v52 = *(_QWORD *)v50;
          v51 = *((_QWORD *)v50 + 1);
          v48 = __OFSUB__(v51, v52);
          v53 = v51 - v52;
          if (v48)
            goto LABEL_123;
          v48 = __OFADD__(v40, v53);
          v54 = v40 + v53;
          if (v48)
            goto LABEL_126;
          if (v54 >= v45)
          {
            v72 = &v35[16 * v37];
            v74 = *(_QWORD *)v72;
            v73 = *((_QWORD *)v72 + 1);
            v48 = __OFSUB__(v73, v74);
            v75 = v73 - v74;
            if (v48)
              goto LABEL_130;
            v65 = v40 < v75;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v66 = *((_QWORD *)v12 + 4);
            v67 = *((_QWORD *)v12 + 5);
            v48 = __OFSUB__(v67, v66);
            v59 = v67 - v66;
            v60 = v48;
            goto LABEL_77;
          }
          v39 = *((_QWORD *)v12 + 4);
          v38 = *((_QWORD *)v12 + 5);
          v48 = __OFSUB__(v38, v39);
          v40 = v38 - v39;
          v41 = v48;
        }
        if ((v41 & 1) != 0)
          goto LABEL_122;
        v49 = v13 - 2;
        v55 = &v35[16 * v13 - 32];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v58 = __OFSUB__(v56, v57);
        v59 = v56 - v57;
        v60 = v58;
        if (v58)
          goto LABEL_125;
        v61 = &v35[16 * v37];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        v48 = __OFSUB__(v62, v63);
        v64 = v62 - v63;
        if (v48)
          goto LABEL_128;
        if (__OFADD__(v59, v64))
          goto LABEL_129;
        if (v59 + v64 >= v40)
        {
          v65 = v40 < v64;
LABEL_83:
          if (v65)
            v37 = v49;
          goto LABEL_85;
        }
LABEL_77:
        if ((v60 & 1) != 0)
          goto LABEL_124;
        v68 = &v35[16 * v37];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v48 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v48)
          goto LABEL_127;
        if (v71 < v59)
          goto LABEL_15;
LABEL_85:
        v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v77 = v12;
        v78 = &v35[16 * v76];
        v79 = *(_QWORD *)v78;
        v80 = &v35[16 * v37];
        v81 = *((_QWORD *)v80 + 1);
        sub_21DC355D0((double *)(v11 + 16 * *(_QWORD *)v78), (double *)(v11 + 16 * *(_QWORD *)v80), v11 + 16 * v81, __dst);
        if (v1)
          goto LABEL_93;
        if (v81 < v79)
          goto LABEL_117;
        if (v37 > *((_QWORD *)v77 + 2))
          goto LABEL_118;
        *(_QWORD *)v78 = v79;
        *(_QWORD *)&v35[16 * v76 + 8] = v81;
        v82 = *((_QWORD *)v77 + 2);
        if (v37 >= v82)
          goto LABEL_119;
        v12 = v77;
        v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((_QWORD *)v77 + 2) = v82 - 1;
        v11 = v106;
        if (v82 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v104;
    v3 = v105;
    if (v10 >= v105)
    {
      v9 = v103;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_21DC71FA8();
  __break(1u);
  return result;
}

uint64_t sub_21DC349B4(uint64_t *a1, uint64_t *a2, void (*a3)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  unint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  char v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  void (*v137)(unint64_t *, unint64_t *, unint64_t *);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;

  v137 = a3;
  v143 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v138 = *(_QWORD *)(v143 - 8);
  v6 = MEMORY[0x24BDAC7A8](v143, v5);
  v133 = (uint64_t)&v128 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v144 = (uint64_t)&v128 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v141 = (uint64_t)&v128 - v13;
  MEMORY[0x24BDAC7A8](v12, v14);
  v140 = (uint64_t)&v128 - v15;
  v16 = a1[1];
  result = sub_21DC72068();
  if (result >= v16)
  {
    if (v16 < 0)
      goto LABEL_140;
    if (v16)
    {
      v22 = v135;
      result = sub_21DC3539C(0, v16, 1, a1, a2);
      v135 = v22;
    }
    return result;
  }
  if (v16 >= 0)
    v18 = v16;
  else
    v18 = v16 + 1;
  if (v16 < -1)
    goto LABEL_148;
  v147 = a2;
  v130 = result;
  if (v16 < 2)
  {
    v23 = (char *)MEMORY[0x24BEE4AF8];
    v136 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80));
    v129 = MEMORY[0x24BEE4AF8];
    if (v16 != 1)
    {
      v25 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_106:
      if (v25 >= 2)
      {
        v119 = *a1;
        do
        {
          v120 = v25 - 2;
          if (v25 < 2)
            goto LABEL_135;
          if (!v119)
            goto LABEL_147;
          v121 = v23;
          v122 = v23 + 32;
          v123 = *(_QWORD *)&v23[16 * v120 + 32];
          v124 = *(_QWORD *)&v122[16 * v25 - 8];
          v125 = v135;
          sub_21DC35858(v119 + *(_QWORD *)(v138 + 72) * v123, v119 + *(_QWORD *)(v138 + 72) * *(_QWORD *)&v122[16 * v25 - 16], v119 + *(_QWORD *)(v138 + 72) * v124, v136, v147, v137);
          v135 = v125;
          if (v125)
            break;
          if (v124 < v123)
            goto LABEL_136;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v121 = sub_21DC5B7D4((uint64_t)v121);
          if (v120 >= *((_QWORD *)v121 + 2))
            goto LABEL_137;
          v126 = &v121[16 * v120 + 32];
          *(_QWORD *)v126 = v123;
          *((_QWORD *)v126 + 1) = v124;
          v127 = *((_QWORD *)v121 + 2);
          if (v25 > v127)
            goto LABEL_138;
          v23 = v121;
          memmove(&v121[16 * v25 + 16], &v121[16 * v25 + 32], 16 * (v127 - v25));
          *((_QWORD *)v121 + 2) = v127 - 1;
          v25 = v127 - 1;
        }
        while (v127 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v129 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v19 = v18 >> 1;
    v20 = sub_21DC71BB8();
    *(_QWORD *)(v20 + 16) = v19;
    v21 = *(unsigned __int8 *)(v138 + 80);
    v129 = v20;
    v136 = v20 + ((v21 + 32) & ~v21);
  }
  v24 = 0;
  v23 = (char *)MEMORY[0x24BEE4AF8];
  v142 = a1;
  while (1)
  {
    v26 = v24 + 1;
    v134 = v24;
    if (v24 + 1 >= v16)
    {
      v36 = v24 + 1;
      v30 = v147;
      goto LABEL_24;
    }
    v27 = *a1;
    v28 = *(_QWORD *)(v138 + 72);
    v29 = v140;
    v30 = v147;
    sub_21DC07CC0(*a1 + v28 * v26, v140, v147);
    v145 = v16;
    v31 = v141;
    sub_21DC07CC0(v27 + v28 * v24, v141, v30);
    v32 = *(int *)(v143 + 48);
    v33 = *(double *)(v29 + v32);
    v34 = *(double *)(v31 + v32);
    v35 = v31;
    v16 = v145;
    sub_21DC07C84(v35, v30);
    sub_21DC07C84(v29, v30);
    v36 = v24 + 2;
    v139 = v27;
    v146 = v28;
    if (v24 + 2 >= v16)
    {
LABEL_21:
      if (v33 >= v34)
        goto LABEL_24;
LABEL_42:
      if (v36 < v24)
        goto LABEL_141;
      if (v24 < v36)
      {
        v131 = v23;
        v57 = v36;
        v58 = 0;
        v59 = v146;
        v60 = v146 * (v57 - 1);
        v61 = v57 * v146;
        v62 = v24 * v146;
        do
        {
          v63 = v57;
          if (v24 != v57 + v58 - 1)
          {
            v64 = v139;
            if (!v139)
              goto LABEL_146;
            v65 = v139 + v62;
            v66 = v139 + v60;
            sub_21DC0C290(v139 + v62, v133, v147);
            if (v62 < v60 || v65 >= v64 + v61)
            {
              swift_arrayInitWithTakeFrontToBack();
              v59 = v146;
            }
            else
            {
              v59 = v146;
              if (v62 != v60)
                swift_arrayInitWithTakeBackToFront();
            }
            v30 = v147;
            sub_21DC0C290(v133, v66, v147);
          }
          ++v24;
          --v58;
          v57 = v63;
          v60 -= v59;
          v61 -= v59;
          v62 += v59;
        }
        while (v24 < v63 + v58);
        a1 = v142;
        v23 = v131;
        v36 = v63;
        v24 = v134;
        v16 = v145;
      }
      goto LABEL_24;
    }
    v131 = v23;
    v37 = v28 * v26;
    v38 = v27;
    v39 = v24 + 2;
    v40 = v28 * (v24 + 2);
    while (1)
    {
      v41 = v140;
      v42 = v147;
      sub_21DC07CC0(v38 + v40, v140, v147);
      v43 = v141;
      sub_21DC07CC0(v38 + v37, v141, v42);
      v44 = *(double *)(v41 + *(int *)(v143 + 48)) >= *(double *)(v43 + *(int *)(v143 + 48));
      sub_21DC07C84(v43, v42);
      sub_21DC07C84(v41, v42);
      if (v33 < v34 == v44)
        break;
      v16 = v145;
      v38 += v146;
      if (v145 == ++v39)
      {
        v36 = v145;
        v30 = v147;
        a1 = v142;
        v23 = v131;
        v24 = v134;
        goto LABEL_21;
      }
    }
    v30 = v147;
    a1 = v142;
    v23 = v131;
    v36 = v39;
    v24 = v134;
    v16 = v145;
    if (v33 < v34)
      goto LABEL_42;
LABEL_24:
    if (v36 >= v16)
      goto LABEL_56;
    if (__OFSUB__(v36, v24))
      goto LABEL_139;
    if (v36 - v24 >= v130)
      goto LABEL_56;
    if (__OFADD__(v24, v130))
      goto LABEL_142;
    v45 = v24 + v130 >= v16 ? v16 : v24 + v130;
    if (v45 < v24)
      break;
    if (v36 != v45)
    {
      v131 = v23;
      v132 = v45;
      v139 = *(_QWORD *)(v138 + 72);
      v145 = v36 * v139;
      v146 = v139 * (v36 - 1);
      do
      {
        v46 = 0;
        while (1)
        {
          v47 = v36;
          v48 = *a1;
          v49 = v140;
          sub_21DC07CC0(v145 + v46 + *a1, v140, v30);
          v50 = v146 + v46 + v48;
          v51 = v141;
          sub_21DC07CC0(v50, v141, v30);
          v52 = *(int *)(v143 + 48);
          v53 = *(double *)(v49 + v52);
          v54 = *(double *)(v51 + v52);
          sub_21DC07C84(v51, v30);
          sub_21DC07C84(v49, v30);
          if (v53 >= v54)
            break;
          v55 = *a1;
          if (!*a1)
            goto LABEL_144;
          v56 = v55 + v146 + v46;
          sub_21DC0C290(v55 + v145 + v46, v144, v147);
          v36 = v47;
          swift_arrayInitWithTakeFrontToBack();
          v30 = v147;
          sub_21DC0C290(v144, v56, v147);
          v46 -= v139;
          ++v24;
          a1 = v142;
          if (v47 == v24)
            goto LABEL_35;
        }
        v36 = v47;
LABEL_35:
        ++v36;
        v146 += v139;
        v145 += v139;
        v24 = v134;
      }
      while (v36 != v132);
      v36 = v132;
      v23 = v131;
    }
LABEL_56:
    if (v36 < v24)
      goto LABEL_134;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v23 = sub_21DC5B27C(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
    v68 = *((_QWORD *)v23 + 2);
    v67 = *((_QWORD *)v23 + 3);
    v25 = v68 + 1;
    v69 = v135;
    if (v68 >= v67 >> 1)
      v23 = sub_21DC5B27C((char *)(v67 > 1), v68 + 1, 1, v23);
    *((_QWORD *)v23 + 2) = v25;
    v70 = v23 + 32;
    v71 = &v23[16 * v68 + 32];
    *(_QWORD *)v71 = v24;
    *((_QWORD *)v71 + 1) = v36;
    v146 = v36;
    if (v68)
    {
      while (1)
      {
        v72 = v25 - 1;
        if (v25 >= 4)
        {
          v77 = &v70[16 * v25];
          v78 = *((_QWORD *)v77 - 8);
          v79 = *((_QWORD *)v77 - 7);
          v83 = __OFSUB__(v79, v78);
          v80 = v79 - v78;
          if (v83)
            goto LABEL_123;
          v82 = *((_QWORD *)v77 - 6);
          v81 = *((_QWORD *)v77 - 5);
          v83 = __OFSUB__(v81, v82);
          v75 = v81 - v82;
          v76 = v83;
          if (v83)
            goto LABEL_124;
          v84 = v25 - 2;
          v85 = &v70[16 * v25 - 32];
          v87 = *(_QWORD *)v85;
          v86 = *((_QWORD *)v85 + 1);
          v83 = __OFSUB__(v86, v87);
          v88 = v86 - v87;
          if (v83)
            goto LABEL_126;
          v83 = __OFADD__(v75, v88);
          v89 = v75 + v88;
          if (v83)
            goto LABEL_129;
          if (v89 >= v80)
          {
            v107 = &v70[16 * v72];
            v109 = *(_QWORD *)v107;
            v108 = *((_QWORD *)v107 + 1);
            v83 = __OFSUB__(v108, v109);
            v110 = v108 - v109;
            if (v83)
              goto LABEL_133;
            v100 = v75 < v110;
            goto LABEL_93;
          }
        }
        else
        {
          if (v25 != 3)
          {
            v101 = *((_QWORD *)v23 + 4);
            v102 = *((_QWORD *)v23 + 5);
            v83 = __OFSUB__(v102, v101);
            v94 = v102 - v101;
            v95 = v83;
            goto LABEL_87;
          }
          v74 = *((_QWORD *)v23 + 4);
          v73 = *((_QWORD *)v23 + 5);
          v83 = __OFSUB__(v73, v74);
          v75 = v73 - v74;
          v76 = v83;
        }
        if ((v76 & 1) != 0)
          goto LABEL_125;
        v84 = v25 - 2;
        v90 = &v70[16 * v25 - 32];
        v92 = *(_QWORD *)v90;
        v91 = *((_QWORD *)v90 + 1);
        v93 = __OFSUB__(v91, v92);
        v94 = v91 - v92;
        v95 = v93;
        if (v93)
          goto LABEL_128;
        v96 = &v70[16 * v72];
        v98 = *(_QWORD *)v96;
        v97 = *((_QWORD *)v96 + 1);
        v83 = __OFSUB__(v97, v98);
        v99 = v97 - v98;
        if (v83)
          goto LABEL_131;
        if (__OFADD__(v94, v99))
          goto LABEL_132;
        if (v94 + v99 >= v75)
        {
          v100 = v75 < v99;
LABEL_93:
          if (v100)
            v72 = v84;
          goto LABEL_95;
        }
LABEL_87:
        if ((v95 & 1) != 0)
          goto LABEL_127;
        v103 = &v70[16 * v72];
        v105 = *(_QWORD *)v103;
        v104 = *((_QWORD *)v103 + 1);
        v83 = __OFSUB__(v104, v105);
        v106 = v104 - v105;
        if (v83)
          goto LABEL_130;
        if (v106 < v94)
          goto LABEL_14;
LABEL_95:
        v111 = v72 - 1;
        if (v72 - 1 >= v25)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        v112 = *a1;
        if (!*a1)
          goto LABEL_145;
        v113 = v23;
        v114 = &v70[16 * v111];
        v115 = *(_QWORD *)v114;
        v116 = &v70[16 * v72];
        v117 = *((_QWORD *)v116 + 1);
        sub_21DC35858(v112 + *(_QWORD *)(v138 + 72) * *(_QWORD *)v114, v112 + *(_QWORD *)(v138 + 72) * *(_QWORD *)v116, v112 + *(_QWORD *)(v138 + 72) * v117, v136, v147, v137);
        if (v69)
        {
          v135 = v69;
          goto LABEL_117;
        }
        if (v117 < v115)
          goto LABEL_120;
        if (v72 > *((_QWORD *)v113 + 2))
          goto LABEL_121;
        *(_QWORD *)v114 = v115;
        *(_QWORD *)&v70[16 * v111 + 8] = v117;
        v118 = *((_QWORD *)v113 + 2);
        if (v72 >= v118)
          goto LABEL_122;
        v23 = v113;
        v25 = v118 - 1;
        memmove(&v70[16 * v72], v116 + 16, 16 * (v118 - 1 - v72));
        *((_QWORD *)v113 + 2) = v118 - 1;
        v100 = v118 > 2;
        a1 = v142;
        if (!v100)
          goto LABEL_14;
      }
    }
    v25 = 1;
LABEL_14:
    v135 = v69;
    v16 = a1[1];
    v24 = v146;
    if (v146 >= v16)
      goto LABEL_106;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  result = sub_21DC71FA8();
  __break(1u);
  return result;
}

uint64_t sub_21DC3539C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v33 = a1;
  v37 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v10 = MEMORY[0x24BDAC7A8](v37, v9);
  v38 = (uint64_t)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v34 = (uint64_t)&v31 - v14;
  result = MEMORY[0x24BDAC7A8](v13, v15);
  v19 = (char *)&v31 - v18;
  v36 = a3;
  v32 = a2;
  if (a3 != a2)
  {
    v20 = *(_QWORD *)(v17 + 72);
    v40 = v20 * (v36 - 1);
    v35 = v20;
    v39 = v20 * v36;
LABEL_5:
    v21 = 0;
    v22 = v33;
    while (1)
    {
      v23 = *a4;
      sub_21DC07CC0(v39 + v21 + *a4, (uint64_t)v19, a5);
      v24 = v40 + v21 + v23;
      v25 = v34;
      sub_21DC07CC0(v24, v34, a5);
      v26 = *(int *)(v37 + 48);
      v27 = *(double *)&v19[v26];
      v28 = *(double *)(v25 + v26);
      sub_21DC07C84(v25, a5);
      result = sub_21DC07C84((uint64_t)v19, a5);
      if (v27 >= v28)
      {
LABEL_4:
        v40 += v35;
        v39 += v35;
        if (++v36 == v32)
          return result;
        goto LABEL_5;
      }
      v29 = *a4;
      if (!*a4)
        break;
      v30 = v29 + v40 + v21;
      sub_21DC0C290(v29 + v39 + v21, v38, a5);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_21DC0C290(v38, v30, a5);
      v21 -= v35;
      if (v36 == ++v22)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_21DC355D0(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  double *v18;
  double *v19;
  double *v20;
  double *v21;
  uint64_t result;
  char *v23;
  double *v24;
  double *v25;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v25 = __src;
  v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[2 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v18 = &v4[2 * v13];
      v23 = (char *)v18;
      v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v19 = (double *)(a3 - 16);
        do
        {
          v20 = v19 + 2;
          if (*(v18 - 1) >= *(v6 - 1))
          {
            v23 = (char *)(v18 - 2);
            if (v20 < v18 || v19 >= v18 || v20 != v18)
              *(_OWORD *)v19 = *((_OWORD *)v18 - 1);
            v21 = v6;
            v18 -= 2;
            if (v6 <= v7)
              break;
          }
          else
          {
            v21 = v6 - 2;
            if (v20 != v6 || v19 >= v6)
              *(_OWORD *)v19 = *(_OWORD *)v21;
            v25 = v6 - 2;
            if (v21 <= v7)
              break;
          }
          v19 -= 2;
          v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_44:
      sub_21DC5B4D8((void **)&v25, (const void **)&v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[2 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[2 * v10];
    v23 = (char *)v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      v15 = v4;
      while (1)
      {
        if (v6[1] >= v15[1])
        {
          v4 = v15 + 2;
          v17 = v15;
          v16 = v6;
          if (v7 == v15)
          {
            v15 += 2;
            if (v7 < v4)
              goto LABEL_22;
          }
          else
          {
            v15 += 2;
          }
        }
        else
        {
          v16 = v6 + 2;
          v17 = v6;
          if (v7 == v6 && v7 < v16)
            goto LABEL_22;
        }
        *(_OWORD *)v7 = *(_OWORD *)v17;
LABEL_22:
        v7 += 2;
        if (v15 < v14)
        {
          v6 = v16;
          if ((unint64_t)v16 < a3)
            continue;
        }
        v24 = v4;
        v25 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC35858(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t *a5, void (*a6)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v35;
  unint64_t v37;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  unint64_t v46;
  uint64_t result;
  uint64_t v49;
  void (*v50)(unint64_t *, unint64_t *, unint64_t *);
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;

  v53 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = MEMORY[0x24BDAC7A8](v53, v12);
  v52 = (uint64_t)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v49 - v16;
  v19 = *(_QWORD *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  v20 = a1;
  if (a2 - a1 == 0x8000000000000000 && v19 == -1)
    goto LABEL_70;
  v21 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1)
    goto LABEL_71;
  v22 = (uint64_t)(a2 - a1) / v19;
  v56 = a1;
  v55 = a4;
  v23 = v21 / v19;
  v50 = a6;
  if (v22 >= v21 / v19)
  {
    if ((v23 & 0x8000000000000000) == 0)
    {
      v51 = a1;
      v25 = v23 * v19;
      if (a4 < a2 || a2 + v25 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v37 = a4 + v25;
      v54 = a4 + v25;
      v56 = a2;
      if (v25 >= 1 && v51 < a2)
      {
        v39 = -v19;
        v40 = v52;
        do
        {
          v41 = a3 + v39;
          sub_21DC07CC0(v37 + v39, (uint64_t)v17, a5);
          v42 = a2 + v39;
          sub_21DC07CC0(a2 + v39, v40, a5);
          v43 = *(int *)(v53 + 48);
          v44 = *(double *)&v17[v43];
          v45 = *(double *)(v40 + v43);
          sub_21DC07C84(v40, a5);
          sub_21DC07C84((uint64_t)v17, a5);
          if (v44 >= v45)
          {
            v46 = v54;
            v54 += v39;
            if (a3 < v46 || v41 >= v46)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v46)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v42 = a2;
          }
          else
          {
            if (a3 < a2 || v41 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v56 += v39;
          }
          v37 = v54;
          if (v54 <= a4)
            break;
          a2 = v42;
          a3 += v39;
        }
        while (v42 > v51);
      }
      goto LABEL_68;
    }
  }
  else if ((v22 & 0x8000000000000000) == 0)
  {
    v24 = v22 * v19;
    if (a4 < v20 || v20 + v24 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v20)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v26 = a4 + v24;
    v54 = a4 + v24;
    if (v24 >= 1 && a2 < a3)
    {
      do
      {
        sub_21DC07CC0(a2, (uint64_t)v17, a5);
        v28 = v52;
        sub_21DC07CC0(a4, v52, a5);
        v29 = *(int *)(v53 + 48);
        v30 = *(double *)&v17[v29];
        v31 = *(double *)(v28 + v29);
        sub_21DC07C84(v28, a5);
        sub_21DC07C84((uint64_t)v17, a5);
        v32 = v56;
        if (v30 >= v31)
        {
          v35 = v55 + v19;
          if (v56 < v55 || v56 >= v35)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v56 != v55)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v55 = v35;
          v33 = a2;
        }
        else
        {
          v33 = a2 + v19;
          if (v56 < a2 || v56 >= v33)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v56 == a2)
          {
            v32 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v56 = v32 + v19;
        a4 = v55;
        if (v55 >= v26)
          break;
        a2 = v33;
      }
      while (v33 < a3);
    }
LABEL_68:
    v50(&v56, &v55, &v54);
    return 1;
  }
LABEL_72:
  result = sub_21DC72008();
  __break(1u);
  return result;
}

id sub_21DC35CD4(void *a1, double a2)
{
  char *v2;
  char *v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  objc_super v11;

  *(_QWORD *)&v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams20EventGraphsPublisher_inner] = 0;
  sub_21DC208FC();
  v5 = v2;
  sub_21DC71D80();
  sub_21DC719E4();
  *(_QWORD *)&v5[OBJC_IVAR____TtC26AIMLInstrumentationStreams20EventGraphsPublisher_upstream] = a1;
  *(double *)&v5[OBJC_IVAR____TtC26AIMLInstrumentationStreams20EventGraphsPublisher_windowLength] = a2;
  v6 = a1;
  v7 = sub_21DC719C0();
  v8 = sub_21DC71D14();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v9 = 134217984;
    sub_21DC71DA4();
    _os_log_impl(&dword_21DC05000, v7, v8, "EventGraphPublisher: Constructed with window %f", v9, 0xCu);
    MEMORY[0x22079DA24](v9, -1, -1);
  }

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for EventGraphsPublisher(0);
  return objc_msgSendSuper2(&v11, sel_init);
}

uint64_t type metadata accessor for EventGraphsPublisher.ConnectedComponentGroupsSubscriber(uint64_t a1)
{
  return sub_21DC2F8E8(a1, (uint64_t *)&unk_2553A98E0);
}

uint64_t sub_21DC35E70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = a2;
  v3 = sub_21DC715F4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BEE4AF8];
  v12 = *(_QWORD *)(a1 + 56);
  v30 = a1 + 56;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v31 = (unint64_t)(v13 + 63) >> 6;
  v32 = OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_logicalClockBuilder;
  v16 = a1;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v20 = v19 | (v18 << 6);
      goto LABEL_24;
    }
    v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v31)
      goto LABEL_29;
    v22 = *(_QWORD *)(v30 + 8 * v21);
    ++v18;
    if (!v22)
    {
      v18 = v21 + 1;
      if (v21 + 1 >= v31)
        goto LABEL_29;
      v22 = *(_QWORD *)(v30 + 8 * v18);
      if (!v22)
      {
        v18 = v21 + 2;
        if (v21 + 2 >= v31)
          goto LABEL_29;
        v22 = *(_QWORD *)(v30 + 8 * v18);
        if (!v22)
        {
          v18 = v21 + 3;
          if (v21 + 3 >= v31)
            goto LABEL_29;
          v22 = *(_QWORD *)(v30 + 8 * v18);
          if (!v22)
            break;
        }
      }
    }
LABEL_23:
    v15 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_24:
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v11, *(_QWORD *)(v16 + 48) + *(_QWORD *)(v4 + 72) * v20, v3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v11, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v11, 1, v3) == 1)
      goto LABEL_30;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v11, v3);
    v24 = *(_QWORD *)(v33 + v32);
    swift_beginAccess();
    v25 = *(_QWORD *)(v24 + 24);
    if (*(_QWORD *)(v25 + 16))
    {
      swift_bridgeObjectRetain();
      v26 = sub_21DC0A740((uint64_t)v7);
      v27 = MEMORY[0x24BEE4AF8];
      if ((v28 & 1) != 0)
      {
        v27 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v26);
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v27 = MEMORY[0x24BEE4AF8];
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    result = sub_21DC52E58(v27);
  }
  v23 = v21 + 4;
  if (v23 >= v31)
  {
LABEL_29:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v11, 1, 1, v3);
LABEL_30:
    swift_release();
    return v34;
  }
  v22 = *(_QWORD *)(v30 + 8 * v23);
  if (v22)
  {
    v18 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v31)
      goto LABEL_29;
    v22 = *(_QWORD *)(v30 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_23;
  }
LABEL_32:
  __break(1u);
  return result;
}

id sub_21DC36198(uint64_t a1, double a2)
{
  char *v2;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  objc_super v18;

  v5 = OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_graphBuilder;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9920);
  v6 = (_QWORD *)swift_allocObject();
  v7 = v2;
  v8 = MEMORY[0x24BEE4AF8];
  v6[2] = sub_21DC2A5D0(MEMORY[0x24BEE4AF8]);
  v6[3] = sub_21DC2A6D8(v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9928);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_21DC2A7EC(v8);
  v6[4] = v9;
  v6[5] = sub_21DC2A6E4(v8);
  *(_QWORD *)&v2[v5] = v6;
  v10 = OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_logicalClockBuilder;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9930);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_21DC2A2A8(v8);
  *(_QWORD *)(v11 + 24) = sub_21DC2A43C(v8);
  *(_QWORD *)&v7[v10] = v11;
  v12 = OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_eventTypeBuilder;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9938);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_21DC2A260(v8);
  *(_QWORD *)(v13 + 24) = sub_21DC2A284(v8);
  *(_QWORD *)&v7[v12] = v13;
  *(_QWORD *)&v7[OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_dimExpiryTime] = 0x409C200000000000;
  *(_QWORD *)&v7[OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_latestRecievedTimestamp] = 0;
  v7[OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_upstreamFinished] = 0;
  sub_21DC208FC();
  sub_21DC71D80();
  sub_21DC719E4();
  *(_QWORD *)&v7[OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_downstream] = a1;
  *(double *)&v7[OBJC_IVAR____TtCC26AIMLInstrumentationStreams20EventGraphsPublisher34ConnectedComponentGroupsSubscriber_graphSessionWindowLength] = a2;
  swift_unknownObjectRetain();
  v14 = sub_21DC719C0();
  v15 = sub_21DC71D08();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_21DC05000, v14, v15, "Constructed EventGraphsSubscriber", v16, 2u);
    MEMORY[0x22079DA24](v16, -1, -1);
  }

  v18.receiver = v7;
  v18.super_class = (Class)type metadata accessor for EventGraphsPublisher.ConnectedComponentGroupsSubscriber(0);
  return objc_msgSendSuper2(&v18, sel_init);
}

uint64_t _s26AIMLInstrumentationStreams20EventGraphsPublisherC9publisher4with9upstreams13bookmarkStateSo014BMBookmarkableE0_So12BPSPublisherCyyXlGXcSgSoAH_AKXc_SayAKGSo10BMBookmark_pSgtFZ_0(void *a1, unint64_t a2)
{
  objc_class *v4;
  id v5;
  uint64_t v6;
  uint64_t result;
  id v8;
  void *v9;
  id v10;
  double v11;
  id v12;
  char *v13;
  char *v14;

  swift_getObjectType();
  v4 = (objc_class *)type metadata accessor for EventGraphsPublisher(0);
  v5 = a1;
  if (!swift_dynamicCast())
    return 0;
  if (!(a2 >> 62))
  {
    v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_4;
LABEL_13:

    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  result = sub_21DC71FCC();
  if (!result)
    goto LABEL_13;
LABEL_4:
  if ((a2 & 0xC000000000000001) != 0)
  {
    v8 = (id)MEMORY[0x22079D208](0, a2);
  }
  else
  {
    if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v8 = *(id *)(a2 + 32);
  }
  v9 = v8;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A8930);
  v10 = v9;
  if ((swift_dynamicCast() & 1) == 0)
  {

    return 0;
  }
  v11 = *(double *)&v14[OBJC_IVAR____TtC26AIMLInstrumentationStreams20EventGraphsPublisher_windowLength];
  v12 = objc_allocWithZone(v4);
  v13 = v14;
  sub_21DC35CD4(v13, v11);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA500);
  if (swift_dynamicCast())
    return (uint64_t)v14;
  else
    return 0;
}

uint64_t type metadata accessor for EventGraphsPublisher(uint64_t a1)
{
  return sub_21DC2F8E8(a1, qword_2553A97B8);
}

uint64_t sub_21DC3660C()
{
  return type metadata accessor for EventGraphsPublisher(0);
}

uint64_t sub_21DC36614()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21DC719D8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for EventGraphsPublisher()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EventGraphsPublisher.__allocating_init(events:windowLength:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_21DC366BC()
{
  return type metadata accessor for EventGraphsPublisher.ConnectedComponentGroupsSubscriber(0);
}

uint64_t sub_21DC366C4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21DC719D8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_21DC36768(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(id *, double))
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  double v13;
  id v14;
  char v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v22;
  uint64_t v23;
  id v24;

  v22 = 0;
  v6 = 0;
  v23 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v6 << 6);
      goto LABEL_5;
    }
    v16 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v10)
      goto LABEL_24;
    v17 = *(_QWORD *)(v23 + 8 * v16);
    ++v6;
    if (!v17)
    {
      v6 = v16 + 1;
      if (v16 + 1 >= v10)
        goto LABEL_24;
      v17 = *(_QWORD *)(v23 + 8 * v6);
      if (!v17)
      {
        v6 = v16 + 2;
        if (v16 + 2 >= v10)
          goto LABEL_24;
        v17 = *(_QWORD *)(v23 + 8 * v6);
        if (!v17)
          break;
      }
    }
LABEL_20:
    v9 = (v17 - 1) & v17;
    v12 = __clz(__rbit64(v17)) + (v6 << 6);
LABEL_5:
    v13 = *(double *)(*(_QWORD *)(a3 + 56) + 8 * v12);
    v24 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v12);
    v14 = v24;
    v15 = a4(&v24, v13);

    if ((v15 & 1) != 0)
    {
      *(unint64_t *)((char *)a1 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v22++, 1))
      {
        __break(1u);
LABEL_24:
        sub_21DC5BD6C(a1, a2, v22, a3);
        return;
      }
    }
  }
  v18 = v16 + 3;
  if (v18 >= v10)
    goto LABEL_24;
  v17 = *(_QWORD *)(v23 + 8 * v18);
  if (v17)
  {
    v6 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v6 >= v10)
      goto LABEL_24;
    v17 = *(_QWORD *)(v23 + 8 * v6);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_21DC36944(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, double))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;

  v25 = a2;
  v26 = a1;
  v6 = type metadata accessor for EventTypeIdPair();
  v7 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  v13 = *(_QWORD *)(a3 + 64);
  v27 = 0;
  v28 = a3 + 64;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v29 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_5;
    }
    v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v20 >= v29)
      return sub_21DC5BFE8(v26, v25, v27, (_QWORD *)a3);
    v21 = *(_QWORD *)(v28 + 8 * v20);
    ++v12;
    if (!v21)
    {
      v12 = v20 + 1;
      if (v20 + 1 >= v29)
        return sub_21DC5BFE8(v26, v25, v27, (_QWORD *)a3);
      v21 = *(_QWORD *)(v28 + 8 * v12);
      if (!v21)
      {
        v12 = v20 + 2;
        if (v20 + 2 >= v29)
          return sub_21DC5BFE8(v26, v25, v27, (_QWORD *)a3);
        v21 = *(_QWORD *)(v28 + 8 * v12);
        if (!v21)
          break;
      }
    }
LABEL_20:
    v16 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_5:
    sub_21DC36F18(*(_QWORD *)(a3 + 48) + *(_QWORD *)(v7 + 72) * v18, (uint64_t)v11);
    v19 = a4(v11, *(double *)(*(_QWORD *)(a3 + 56) + 8 * v18));
    result = sub_21DC36FA0((uint64_t)v11);
    if ((v19 & 1) != 0)
    {
      *(unint64_t *)((char *)v26 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      if (__OFADD__(v27++, 1))
      {
        __break(1u);
        return sub_21DC5BFE8(v26, v25, v27, (_QWORD *)a3);
      }
    }
  }
  v22 = v20 + 3;
  if (v22 >= v29)
    return sub_21DC5BFE8(v26, v25, v27, (_QWORD *)a3);
  v21 = *(_QWORD *)(v28 + 8 * v22);
  if (v21)
  {
    v12 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    v12 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v12 >= v29)
      return sub_21DC5BFE8(v26, v25, v27, (_QWORD *)a3);
    v21 = *(_QWORD *)(v28 + 8 * v12);
    ++v22;
    if (v21)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_21DC36B64(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, double))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v23;
  unint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t (*v28)(char *, double);

  v23 = a2;
  v28 = a4;
  v24 = a1;
  v5 = sub_21DC715F4();
  v6 = *(_QWORD *)(v5 - 8);
  result = MEMORY[0x24BDAC7A8](v5, v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  v12 = *(_QWORD *)(a3 + 64);
  v25 = 0;
  v26 = a3 + 64;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v27 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_5;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v19 >= v27)
      return sub_21DC5C368(v24, v23, v25, (_QWORD *)a3);
    v20 = *(_QWORD *)(v26 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v27)
        return sub_21DC5C368(v24, v23, v25, (_QWORD *)a3);
      v20 = *(_QWORD *)(v26 + 8 * v11);
      if (!v20)
      {
        v11 = v19 + 2;
        if (v19 + 2 >= v27)
          return sub_21DC5C368(v24, v23, v25, (_QWORD *)a3);
        v20 = *(_QWORD *)(v26 + 8 * v11);
        if (!v20)
          break;
      }
    }
LABEL_20:
    v15 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v10, *(_QWORD *)(a3 + 48) + *(_QWORD *)(v6 + 72) * v17, v5);
    v18 = v28(v10, *(double *)(*(_QWORD *)(a3 + 56) + 8 * v17));
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    if ((v18 & 1) != 0)
    {
      *(unint64_t *)((char *)v24 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      if (__OFADD__(v25++, 1))
      {
        __break(1u);
        return sub_21DC5C368(v24, v23, v25, (_QWORD *)a3);
      }
    }
  }
  v21 = v19 + 3;
  if (v21 >= v27)
    return sub_21DC5C368(v24, v23, v25, (_QWORD *)a3);
  v20 = *(_QWORD *)(v26 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v27)
      return sub_21DC5C368(v24, v23, v25, (_QWORD *)a3);
    v20 = *(_QWORD *)(v26 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_21DC36D9C(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, unint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v9;
  char v10;
  unint64_t v11;
  size_t v12;
  uint64_t v13;
  void *v14;
  _QWORD v16[2];

  v6 = v4;
  v9 = isStackAllocationSafe;
  v16[1] = *MEMORY[0x24BDAC8D0];
  v10 = *(_BYTE *)(isStackAllocationSafe + 32);
  v11 = (unint64_t)((1 << v10) + 63) >> 6;
  v12 = 8 * v11;
  if ((v10 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, a2);
    bzero((char *)v16 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v12);
    v13 = a4((char *)v16 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v11, v9, a2, a3);
    if (v4)
      swift_willThrow();
    else
      return v13;
  }
  else
  {
    v14 = (void *)swift_slowAlloc();
    bzero(v14, v12);
    v6 = a4((char *)v14, v11, v9, a2, a3);
    MEMORY[0x22079DA24](v14, -1, -1);
  }
  return v6;
}

uint64_t sub_21DC36F18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EventTypeIdPair();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21DC36F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EventTypeIdPair();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21DC36FA0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EventTypeIdPair();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21DC36FE0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  int v61;
  id v62;
  int v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v65 = a8;
  v66 = a7;
  v63 = a6;
  v64 = a5;
  v61 = a4;
  v59 = a1;
  v60 = a3;
  v72 = a9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8198);
  v67 = *(_QWORD *)(v10 - 8);
  v68 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A81A0);
  v70 = *(_QWORD *)(v14 - 8);
  v71 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v69 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A81A8);
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v19, v22);
  v25 = (char *)&v59 - v24;
  v27 = MEMORY[0x24BDAC7A8](v23, v26);
  v29 = (char *)&v59 - v28;
  v31 = MEMORY[0x24BDAC7A8](v27, v30);
  v33 = (char *)&v59 - v32;
  v35 = MEMORY[0x24BDAC7A8](v31, v34);
  v37 = (char *)&v59 - v36;
  MEMORY[0x24BDAC7A8](v35, v38);
  v40 = (char *)&v59 - v39;
  v41 = (id)BiomeLibrary();
  v42 = objc_msgSend(v41, sel_Siri, v59, v60);
  swift_unknownObjectRelease();
  v43 = objc_msgSend(v42, sel_SELFProcessedEvent);
  swift_unknownObjectRelease();
  v62 = v43;
  if ((a2 & 1) != 0)
  {
    v44 = sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v37, 1, 1, v44);
LABEL_6:
    sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v40, 1, 1, v44);
    sub_21DC0892C((uint64_t)v37);
    if ((v61 & 1) != 0)
      goto LABEL_4;
    goto LABEL_7;
  }
  sub_21DC7151C();
  v44 = sub_21DC71588();
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56);
  v46(v37, 0, 1, v44);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v37, 1, v44) == 1)
    goto LABEL_6;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v40, v37, v44);
  v46(v40, 0, 1, v44);
  if ((v61 & 1) != 0)
  {
LABEL_4:
    v47 = sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v29, 1, 1, v47);
LABEL_8:
    sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v33, 1, 1, v47);
    sub_21DC0892C((uint64_t)v29);
    goto LABEL_10;
  }
LABEL_7:
  sub_21DC7151C();
  v47 = sub_21DC71588();
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56);
  v49(v29, 0, 1, v47);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v29, 1, v47) == 1)
    goto LABEL_8;
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v33, v29, v47);
  v49(v33, 0, 1, v47);
LABEL_10:
  sub_21DC0896C((uint64_t)v40, (uint64_t)v25);
  sub_21DC0896C((uint64_t)v33, (uint64_t)v21);
  if ((v63 & 1) != 0)
    v50 = 0;
  else
    v50 = v64;
  if ((v65 & 1) != 0)
    v51 = 0;
  else
    v51 = v66;
  sub_21DC07D04();
  v52 = sub_21DC42828((uint64_t)v25, (uint64_t)v21, v50, v51, 0);
  v53 = v62;
  v54 = objc_msgSend(v62, sel_publisherWithOptions_, v52);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A81C0);
  sub_21DC7166C();
  type metadata accessor for TimestampedOrderedEvent();
  sub_21DC07D84(&qword_2553A8320, &qword_2553A8198, MEMORY[0x24BE0C968]);
  v55 = v68;
  v56 = v69;
  sub_21DC71624();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v13, v55);
  sub_21DC07D84(&qword_2553A99F0, &qword_2553A81A0, MEMORY[0x24BE0C8A8]);
  v57 = v71;
  sub_21DC71618();
  sub_21DC71660();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v56, v57);

  sub_21DC0892C((uint64_t)v33);
  return sub_21DC0892C((uint64_t)v40);
}

uint64_t sub_21DC37504(void *a1)
{
  type metadata accessor for TimestampedOrderedEvent();
  swift_allocObject();
  return TimestampedOrderedEvent.init(biomeStoreEvent:)(a1);
}

uint64_t sub_21DC37540()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SelfProcessedEventStream()
{
  return objc_opt_self();
}

uint64_t sub_21DC37570@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  return sub_21DC36FE0(a1, a2 & 1, a3, a4 & 1, a5, a6 & 1, a7, a8 & 1, a9);
}

void sub_21DC3759C(unint64_t a1, void *a2, double a3)
{
  _QWORD *v3;
  char v4;
  _QWORD *v5;
  _QWORD *v9;
  id v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t inited;
  unint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  id v40;
  char v41;
  _QWORD v42[5];
  uint64_t v43;
  _QWORD v44[4];

  v5 = v3;
  v9 = v5 + 3;
  swift_beginAccess();
  v10 = a2;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v44[0] = v5[3];
  v12 = v44[0];
  v5[3] = 0x8000000000000000;
  v14 = sub_21DC0A4BC((uint64_t)v10);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_19:
    sub_21DC5E478();
    v12 = v44[0];
    goto LABEL_6;
  }
  v4 = v13;
  if (*(_QWORD *)(v12 + 24) >= v17)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_6;
    goto LABEL_19;
  }
  sub_21DC1180C(v17, isUniquelyReferenced_nonNull_native);
  v12 = v44[0];
  v18 = sub_21DC0A4BC((uint64_t)v10);
  if ((v4 & 1) != (v19 & 1))
    goto LABEL_26;
  v14 = v18;
LABEL_6:
  *v9 = v12;
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
  {
    sub_21DC5CEF4(v14, v10, MEMORY[0x24BEE4AF8], *v9);
    v20 = v10;
  }
  sub_21DC52E58(a1);
  swift_endAccess();

  swift_beginAccess();
  v21 = v5[5];
  swift_bridgeObjectRetain();
  v22 = sub_21DC52C2C(v10, v21);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    v23 = v5[4];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9780);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21DC73350;
    *(_QWORD *)(inited + 32) = v10;
    v44[0] = inited;
    swift_retain();
    sub_21DC71B94();
    v25 = v44[0];
    if (v44[0] >> 62)
    {
      v33 = v10;
      swift_bridgeObjectRetain();
      v34 = sub_21DC71FCC();
      swift_bridgeObjectRelease();
      if (v34)
      {
LABEL_12:
        v28 = MEMORY[0x24BEE4B08];
        do
        {
          while (1)
          {
            v29 = swift_bridgeObjectRetain();
            v28 = sub_21DC604D0(v29, v28);
            swift_bridgeObjectRelease();
            v44[0] = v28;
            swift_retain();
            v30 = sub_21DC60024(v25, v23);
            swift_bridgeObjectRelease();
            swift_release();
            v25 = sub_21DC5FD14(v30, v44);
            swift_bridgeObjectRelease();
            if (v25 >> 62)
              break;
            if (!*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_17;
          }
          swift_bridgeObjectRetain();
          v31 = sub_21DC71FCC();
          swift_bridgeObjectRelease();
        }
        while (v31);
LABEL_17:
        swift_bridgeObjectRelease();
        v32 = v44[0];
        goto LABEL_22;
      }
    }
    else
    {
      v26 = *(_QWORD *)((v44[0] & 0xFFFFFFFFFFFFF8) + 0x10);
      v27 = v10;
      if (v26)
        goto LABEL_12;
    }
    swift_bridgeObjectRelease();
    v32 = MEMORY[0x24BEE4B08];
LABEL_22:
    swift_release();
    sub_21DC57810(v32);
    v44[0] = v35;
    MEMORY[0x24BDAC7A8](v35, v36);
    v42[2] = v5;
    v42[3] = v44;
    sub_21DC51688((void (*)(id *))sub_21DC3A428, (uint64_t)v42, v32);
    v37 = (void *)v44[0];
    swift_bridgeObjectRelease();

    goto LABEL_23;
  }

LABEL_23:
  v38 = v5[5];
  swift_bridgeObjectRetain();
  v39 = sub_21DC52C2C(v10, v38);
  swift_bridgeObjectRelease();
  if (v39)
  {
    swift_beginAccess();
    v40 = v39;
    v41 = swift_isUniquelyReferenced_nonNull_native();
    v43 = v5[2];
    v5[2] = 0x8000000000000000;
    sub_21DC3CC20(v40, v41, a3);
    v5[2] = v43;

    swift_bridgeObjectRelease();
    swift_endAccess();

    return;
  }
  __break(1u);
LABEL_26:
  sub_21DC71804();
  sub_21DC720E0();
  __break(1u);
}

uint64_t sub_21DC3799C()
{
  uint64_t v0;

  v0 = sub_21DC719D8();
  __swift_allocate_value_buffer(v0, qword_2553A99F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2553A99F8);
  sub_21DC208FC();
  sub_21DC71D80();
  return sub_21DC719E4();
}

uint64_t sub_21DC37A30(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD **v10;
  id v11;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  double v29;
  char v30;
  char v31;
  uint64_t result;
  uint64_t v33;

  v5 = v4;
  v10 = (_QWORD **)(v5 + 24);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v11 = a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *(_QWORD **)(v5 + 24);
  *(_QWORD *)(v5 + 24) = 0x8000000000000000;
  v15 = sub_21DC0A568(a2, a3);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
LABEL_19:
    sub_21DC71BA0();
    goto LABEL_10;
  }
  v19 = v14;
  if (v13[3] >= v18)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_21DC5DBEC();
  }
  else
  {
    sub_21DC1095C(v18, isUniquelyReferenced_nonNull_native);
    v20 = sub_21DC0A568(a2, a3);
    if ((v19 & 1) != (v21 & 1))
    {
      result = sub_21DC720E0();
      __break(1u);
      return result;
    }
    v15 = v20;
  }
  *v10 = v13;
  v22 = swift_bridgeObjectRelease();
  v23 = (uint64_t)*v10;
  if ((v19 & 1) == 0)
  {
    sub_21DC5CDEC(v15, a2, a3, MEMORY[0x24BEE4AF8], *v10);
    v22 = swift_bridgeObjectRetain();
  }
  v24 = (_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v15);
  MEMORY[0x22079CE84](v22);
  if (*(_QWORD *)((*v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_19;
LABEL_10:
  sub_21DC71BC4();
  sub_21DC71B94();
  swift_endAccess();
  swift_bridgeObjectRelease();
  v25 = (uint64_t *)(v5 + 16);
  swift_beginAccess();
  v26 = *(_QWORD *)(v5 + 16);
  v27 = *(_QWORD *)(v26 + 16);
  swift_bridgeObjectRetain();
  if (v27)
  {
    swift_bridgeObjectRetain();
    v28 = sub_21DC0A568(a2, a3);
    v29 = 0.0;
    if ((v30 & 1) != 0)
      v29 = *(double *)(*(_QWORD *)(v26 + 56) + 8 * v28);
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = 0.0;
  }
  if (v29 > a4)
    a4 = v29;
  swift_beginAccess();
  v31 = swift_isUniquelyReferenced_nonNull_native();
  v33 = *v25;
  *v25 = 0x8000000000000000;
  sub_21DC3C9C4(a2, a3, v31, a4);
  *v25 = v33;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_21DC37CC0(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  _QWORD *v24;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  double v44;
  char v45;
  char v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;

  v4 = v3;
  v8 = sub_21DC715F4();
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v51 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v52 = (char *)&v48 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v18 = (char *)&v48 - v17;
  MEMORY[0x24BDAC7A8](v16, v19);
  v21 = (char *)&v48 - v20;
  v49 = v22;
  v50 = a2;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v23((char *)&v48 - v20, a2, v8);
  v24 = (_QWORD *)(v4 + 24);
  swift_beginAccess();
  v48 = a1;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v54 = *(_QWORD *)(v4 + 24);
  v26 = v54;
  *(_QWORD *)(v4 + 24) = 0x8000000000000000;
  v28 = sub_21DC0A740((uint64_t)v21);
  v29 = *(_QWORD *)(v26 + 16);
  v30 = (v27 & 1) == 0;
  v31 = v29 + v30;
  if (__OFADD__(v29, v30))
  {
    __break(1u);
LABEL_19:
    sub_21DC71BA0();
    goto LABEL_10;
  }
  v32 = v27;
  if (*(_QWORD *)(v26 + 24) >= v31)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_21DC5E6E0();
      v26 = v54;
    }
  }
  else
  {
    sub_21DC12314(v31, isUniquelyReferenced_nonNull_native);
    v26 = v54;
    v33 = sub_21DC0A740((uint64_t)v21);
    if ((v32 & 1) != (v34 & 1))
    {
      result = sub_21DC720E0();
      __break(1u);
      return result;
    }
    v28 = v33;
  }
  isUniquelyReferenced_nonNull_native = v50;
  *v24 = v26;
  v35 = swift_bridgeObjectRelease();
  v36 = (_QWORD *)*v24;
  if ((v32 & 1) == 0)
  {
    v23(v18, (uint64_t)v21, v8);
    v35 = sub_21DC5CFA0(v28, (uint64_t)v18, MEMORY[0x24BEE4AF8], v36);
  }
  v37 = (_QWORD *)(v36[7] + 8 * v28);
  MEMORY[0x22079CE84](v35);
  if (*(_QWORD *)((*v37 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v37 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_19;
LABEL_10:
  sub_21DC71BC4();
  sub_21DC71B94();
  v38 = *(void (**)(char *, uint64_t))(v49 + 8);
  v38(v21, v8);
  swift_endAccess();
  v39 = (uint64_t)v52;
  v23(v52, isUniquelyReferenced_nonNull_native, v8);
  v40 = (uint64_t)v51;
  v23(v51, isUniquelyReferenced_nonNull_native, v8);
  v41 = (uint64_t *)(v4 + 16);
  swift_beginAccess();
  v42 = *(_QWORD *)(v4 + 16);
  if (*(_QWORD *)(v42 + 16))
  {
    swift_bridgeObjectRetain();
    v43 = sub_21DC0A740(v40);
    v44 = 0.0;
    if ((v45 & 1) != 0)
      v44 = *(double *)(*(_QWORD *)(v42 + 56) + 8 * v43);
    swift_bridgeObjectRelease();
  }
  else
  {
    v44 = 0.0;
  }
  v38((char *)v40, v8);
  if (v44 > a3)
    a3 = v44;
  swift_beginAccess();
  v46 = swift_isUniquelyReferenced_nonNull_native();
  v53 = *v41;
  *v41 = 0x8000000000000000;
  sub_21DC3CFA4(v39, v46, a3);
  *v41 = v53;
  swift_bridgeObjectRelease();
  v38((char *)v39, v8);
  return swift_endAccess();
}

uint64_t sub_21DC38020(double a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v7;
  id v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  double v27;
  char v28;
  char v29;
  uint64_t result;
  uint64_t v31;

  v4 = v3;
  v7 = (_QWORD *)(v4 + 24);
  swift_beginAccess();
  v8 = a3;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *(_QWORD *)(v4 + 24);
  *(_QWORD *)(v4 + 24) = 0x8000000000000000;
  v12 = sub_21DC0A4BC((uint64_t)v8);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_19:
    sub_21DC71BA0();
    goto LABEL_10;
  }
  v16 = v11;
  if (*(_QWORD *)(v10 + 24) >= v15)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_21DC5E478();
  }
  else
  {
    sub_21DC1180C(v15, isUniquelyReferenced_nonNull_native);
    v17 = sub_21DC0A4BC((uint64_t)v8);
    if ((v16 & 1) != (v18 & 1))
    {
      sub_21DC71804();
      result = sub_21DC720E0();
      __break(1u);
      return result;
    }
    v12 = v17;
  }
  *v7 = v10;
  v19 = (id)swift_bridgeObjectRelease();
  v20 = *v7;
  if ((v16 & 1) == 0)
  {
    sub_21DC5CEF4(v12, v8, MEMORY[0x24BEE4AF8], *v7);
    v19 = v8;
  }
  v21 = (_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v12);
  MEMORY[0x22079CE84](v19);
  if (*(_QWORD *)((*v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_19;
LABEL_10:
  sub_21DC71BC4();
  sub_21DC71B94();
  swift_endAccess();

  v22 = (uint64_t *)(v4 + 16);
  swift_beginAccess();
  v23 = *(_QWORD *)(v4 + 16);
  v24 = *(_QWORD *)(v23 + 16);
  v25 = v8;
  if (v24)
  {
    swift_bridgeObjectRetain();
    v26 = sub_21DC0A4BC((uint64_t)v25);
    v27 = 0.0;
    if ((v28 & 1) != 0)
      v27 = *(double *)(*(_QWORD *)(v23 + 56) + 8 * v26);
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = 0.0;
  }
  if (v27 > a1)
    a1 = v27;
  swift_beginAccess();
  v29 = swift_isUniquelyReferenced_nonNull_native();
  v31 = *v22;
  *v22 = 0x8000000000000000;
  sub_21DC3CC20(v25, v29, a1);
  *v22 = v31;

  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_21DC38284(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  double v40;
  char v41;
  char v42;
  uint64_t result;
  _QWORD v44[2];
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;

  v4 = v3;
  v44[0] = type metadata accessor for EventTypeIdPair();
  v9 = MEMORY[0x24BDAC7A8](v44[0], v8);
  v11 = (_QWORD *)((char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x24BDAC7A8](v9, v12);
  v45 = (_QWORD *)((char *)v44 - v14);
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v18 = (char *)v44 - v17;
  MEMORY[0x24BDAC7A8](v16, v19);
  v21 = (_QWORD *)((char *)v44 - v20);
  sub_21DC36F18(a2, (uint64_t)v44 - v20);
  v22 = (_QWORD *)(v3 + 24);
  swift_beginAccess();
  v44[1] = a1;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v24 = *(_QWORD *)(v3 + 24);
  v47 = v24;
  *(_QWORD *)(v4 + 24) = 0x8000000000000000;
  v26 = sub_21DC0A6A8(v21);
  v27 = *(_QWORD *)(v24 + 16);
  v28 = (v25 & 1) == 0;
  v29 = v27 + v28;
  if (__OFADD__(v27, v28))
  {
    __break(1u);
LABEL_19:
    sub_21DC71BA0();
    goto LABEL_10;
  }
  v30 = v25;
  if (*(_QWORD *)(v24 + 24) >= v29)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_21DC5E498();
      v24 = v47;
    }
  }
  else
  {
    sub_21DC11BCC(v29, isUniquelyReferenced_nonNull_native);
    v24 = v47;
    v31 = sub_21DC0A6A8(v21);
    if ((v30 & 1) != (v32 & 1))
    {
      result = sub_21DC720E0();
      __break(1u);
      return result;
    }
    v26 = v31;
  }
  *v22 = v24;
  v33 = swift_bridgeObjectRelease();
  v34 = (_QWORD *)*v22;
  if ((v30 & 1) == 0)
  {
    sub_21DC36F18((uint64_t)v21, (uint64_t)v18);
    v33 = sub_21DC5CF88(v26, (uint64_t)v18, MEMORY[0x24BEE4AF8], v34);
  }
  v35 = (_QWORD *)(v34[7] + 8 * v26);
  MEMORY[0x22079CE84](v33);
  if (*(_QWORD *)((*v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_19;
LABEL_10:
  sub_21DC71BC4();
  sub_21DC71B94();
  sub_21DC36FA0((uint64_t)v21);
  swift_endAccess();
  v36 = v45;
  sub_21DC36F18(a2, (uint64_t)v45);
  sub_21DC36F18(a2, (uint64_t)v11);
  v37 = (uint64_t *)(v4 + 16);
  swift_beginAccess();
  v38 = *(_QWORD *)(v4 + 16);
  if (*(_QWORD *)(v38 + 16))
  {
    swift_bridgeObjectRetain();
    v39 = sub_21DC0A6A8(v11);
    v40 = 0.0;
    if ((v41 & 1) != 0)
      v40 = *(double *)(*(_QWORD *)(v38 + 56) + 8 * v39);
    swift_bridgeObjectRelease();
  }
  else
  {
    v40 = 0.0;
  }
  sub_21DC36FA0((uint64_t)v11);
  if (v40 > a3)
    a3 = v40;
  swift_beginAccess();
  v42 = swift_isUniquelyReferenced_nonNull_native();
  v46 = *v37;
  *v37 = 0x8000000000000000;
  sub_21DC3CE54(v36, v42, a3);
  *v37 = v46;
  swift_bridgeObjectRelease();
  sub_21DC36FA0((uint64_t)v36);
  return swift_endAccess();
}

uint64_t sub_21DC385AC(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD v12[2];

  v3 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(isStackAllocationSafe + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, a2);
    bzero((char *)v12 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    sub_21DC38708((_QWORD *)((char *)v12 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3);
    v8 = v7;
    swift_release();
    if (v2)
      swift_willThrow();
  }
  else
  {
    v9 = (void *)swift_slowAlloc();
    bzero(v9, v6);
    sub_21DC38708((unint64_t *)v9, v5, v3);
    v8 = v10;
    swift_release();
    MEMORY[0x22079DA24](v9, -1, -1);
  }
  return v8;
}

void sub_21DC38708(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  int v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v4 = 0;
  v5 = 0;
  v6 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v10)
      goto LABEL_24;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_24;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_24;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v9 = (v16 - 1) & v16;
    v12 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_5:
    v13 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v12);
    v14 = sub_21DC717D4();

    if (v14 == 1)
    {
      *(unint64_t *)((char *)a1 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_21DC388B0(a1, a2, v4, a3);
        return;
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v10)
    goto LABEL_24;
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_24;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_21DC388B0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9A20);
  result = sub_21DC71EB8();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = sub_21DC71D5C();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_21DC38B0C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t inited;
  uint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  __int128 v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  BOOL v38;
  unint64_t v39;
  unint64_t v40;
  double v41;
  id v42;
  void *v43;
  void *v44;
  void *v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  Class v58;
  uint64_t v59;
  int64_t v60;
  id v61;
  void *v62;
  id v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  id v68;
  int64_t v69;
  char v70;
  uint64_t v71;
  id v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  void *v77;
  void *v78;
  id v79;
  void *v80;
  id v81;
  void *v82;
  void *v83;
  uint64_t v84;
  void *v85;
  void *ObjCClassFromObject;
  unsigned int v87;
  void *v88;
  void *v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  void *v93;
  void *v94;
  id v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(NSObject *, uint64_t, uint64_t);
  uint64_t v101;
  void *v102;
  uint64_t ObjectType;
  uint64_t *v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  unint64_t v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  _QWORD *v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  id v125;
  void *v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char v131;
  uint64_t v132;
  unint64_t j;
  uint64_t v134;
  id v135;
  uint64_t v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  void *v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  _QWORD *v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  char v160;
  unint64_t v161;
  BOOL v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  unsigned __int8 v170;
  char v171;
  _QWORD *v172;
  uint64_t v173;
  char v174;
  _QWORD *v175;
  uint64_t v176;
  char v177;
  char v178;
  unsigned __int8 v179;
  void *v180;
  void *v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  unint64_t v185;
  void (*v186)(uint64_t *, _QWORD);
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  _QWORD *v191;
  NSObject *v192;
  _QWORD *v193;
  NSObject *v194;
  _QWORD *v195;
  NSObject *v196;
  NSObject *v197;
  int v198;
  uint64_t v199;
  void *v200;
  void *v201;
  id v202;
  uint64_t v203;
  unint64_t v204;
  unint64_t v205;
  id v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  unint64_t v211;
  NSObject *v212;
  _QWORD *v213;
  _QWORD *v214;
  NSObject *v215;
  uint64_t v216;
  _QWORD *v217;
  uint64_t v218;
  unint64_t v219;
  uint64_t v220;
  uint64_t i;
  id v222;
  void *v223;
  uint64_t v224;
  unint64_t v225;
  char v226;
  unint64_t v227;
  uint64_t v228;
  unint64_t v229;
  char v230;
  double v231;
  char v232;
  unint64_t v233;
  char v234;
  char v235;
  uint64_t *v236;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v238;
  unint64_t v239;
  char v240;
  char v241;
  uint64_t *v242;
  int v243;
  uint64_t v244;
  uint64_t result;
  uint64_t v246;
  uint64_t *v247;
  __int128 v248;
  uint64_t v249;
  uint64_t *v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  char *v254;
  uint64_t v255;
  __int128 v256;
  unint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  void *v265;
  unint64_t v266;
  __int128 v267;
  uint64_t v268;
  void *v269;
  unint64_t v270;
  uint64_t v271;
  uint64_t v272;
  unint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  unint64_t v277;
  uint64_t *v278;
  uint64_t *v279;
  char *v280;
  void *v281;
  uint64_t v282;
  unint64_t v283;
  NSObject *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  _QWORD *v288;
  _QWORD *v289;
  NSObject *v290;
  uint64_t v291[15];
  uint64_t v292;
  uint64_t v293;
  _QWORD *p_isa;
  uint64_t v295;
  unsigned __int8 v296;

  v252 = a4;
  v255 = a3;
  v271 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v253 = (char *)&v246 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v251 = type metadata accessor for EventTypeIdPair();
  v10 = MEMORY[0x24BDAC7A8](v251, v9);
  v250 = (uint64_t *)((char *)&v246 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10, v12);
  v249 = (uint64_t)&v246 - v13;
  v14 = sub_21DC719D8();
  v261 = *(_QWORD *)(v14 - 8);
  v262 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v260 = (char *)&v246 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_21DC715F4();
  v275 = *(_QWORD *)(v17 - 8);
  v276 = v17;
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v21 = ((char *)&v246 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = MEMORY[0x24BDAC7A8](v19, v22);
  v254 = (char *)&v246 - v24;
  MEMORY[0x24BDAC7A8](v23, v25);
  v280 = (char *)&v246 - v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9A10);
  inited = swift_initStackObject();
  v28 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 16) = sub_21DC2A5D0(MEMORY[0x24BEE4AF8]);
  v29 = (uint64_t *)(inited + 16);
  v30 = sub_21DC2A6D8(v28);
  v259 = inited;
  *(_QWORD *)(inited + 24) = v30;
  v278 = (uint64_t *)(inited + 24);
  v273 = a1;
  if (a1 >> 62)
    goto LABEL_172;
  v31 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v32 = v31;
  v279 = v29;
  if (!v31)
  {
LABEL_173:
    v282 = 0;
LABEL_174:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v216 = *v29;
    swift_bridgeObjectRetain_n();
    v217 = sub_21DC09690(v216);
    swift_bridgeObjectRelease();
    p_isa = v217;
    v218 = v282;
    sub_21DC341C8(&p_isa);
    if (v218)
    {
LABEL_218:
      result = swift_release();
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
    v219 = sub_21DC3287C((uint64_t)p_isa);
    swift_release();
    v273 = v219;
    if (!(v219 >> 62))
    {
      v220 = *(_QWORD *)((v219 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v220)
        goto LABEL_210;
      goto LABEL_177;
    }
LABEL_209:
    swift_bridgeObjectRetain();
    v219 = v273;
    v220 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    if (!v220)
      goto LABEL_210;
LABEL_177:
    if (v220 >= 1)
    {
      v290 = (v219 & 0xC000000000000001);
      swift_beginAccess();
      for (i = 0; i != v220; ++i)
      {
        if (v290)
          v222 = (id)MEMORY[0x22079D208](i, v219);
        else
          v222 = *(id *)(v219 + 8 * i + 32);
        v223 = v222;
        v224 = *v278;
        if (*(_QWORD *)(*v278 + 16))
        {
          swift_bridgeObjectRetain();
          v225 = sub_21DC0A4BC((uint64_t)v223);
          if ((v226 & 1) != 0)
          {
            v227 = *(_QWORD *)(*(_QWORD *)(v224 + 56) + 8 * v225);
            swift_bridgeObjectRetain();
          }
          else
          {
            v227 = 0;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          v227 = 0;
        }
        v228 = *v279;
        if (*(_QWORD *)(*v279 + 16))
        {
          swift_bridgeObjectRetain();
          v229 = sub_21DC0A4BC((uint64_t)v223);
          v231 = 0.0;
          if ((v230 & 1) != 0)
            v231 = *(double *)(*(_QWORD *)(v228 + 56) + 8 * v229);
          v232 = v230 ^ 1;
          swift_bridgeObjectRelease();
        }
        else
        {
          v232 = 1;
          v231 = 0.0;
        }
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v233 = sub_21DC0A4BC((uint64_t)v223);
        v235 = v234;
        swift_bridgeObjectRelease();
        if ((v235 & 1) != 0)
        {
          v236 = v278;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v238 = *v236;
          v292 = *v236;
          *v236 = 0x8000000000000000;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_21DC5E478();
            v238 = v292;
          }

          sub_21DC690CC(v233, v238);
          *v236 = v238;
          swift_bridgeObjectRelease();
        }
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v239 = sub_21DC0A4BC((uint64_t)v223);
        v241 = v240;
        swift_bridgeObjectRelease();
        if ((v241 & 1) != 0)
        {
          v242 = v279;
          v243 = swift_isUniquelyReferenced_nonNull_native();
          v244 = *v242;
          v292 = *v242;
          *v242 = 0x8000000000000000;
          if (!v243)
          {
            sub_21DC5E134();
            v244 = v292;
          }

          sub_21DC68F1C(v239, v244);
          *v242 = v244;
          swift_bridgeObjectRelease();
        }
        swift_endAccess();
        if (v227)
        {
          if ((v232 & 1) == 0)
            sub_21DC3759C(v227, v223, v231);

          swift_bridgeObjectRelease();
        }
        else
        {

        }
        v219 = v273;
      }
      goto LABEL_210;
    }
    __break(1u);
LABEL_212:
    __break(1u);
LABEL_213:
    __break(1u);
LABEL_214:
    __break(1u);
LABEL_215:
    swift_release();

    swift_bridgeObjectRelease_n();
    __break(1u);
LABEL_216:
    __break(1u);
LABEL_217:
    __break(1u);
    goto LABEL_218;
  }
LABEL_3:
  v33 = 0;
  v282 = 0;
  v266 = a1 & 0xC000000000000001;
  v257 = a1 + 32;
  v258 = a1 & 0xFFFFFFFFFFFFFF8;
  v247 = &v295;
  v267 = xmmword_21DC73350;
  *((_QWORD *)&v34 + 1) = 5;
  v256 = xmmword_21DC73B80;
  *(_QWORD *)&v34 = 136315906;
  v248 = v34;
  v246 = MEMORY[0x24BEE4AD8] + 8;
  v272 = MEMORY[0x24BEE4AD0] + 8;
  v284 = v21;
  v263 = v32;
  while (1)
  {
    if (!v266)
    {
      if (v33 >= *(_QWORD *)(v258 + 16))
      {
        __break(1u);
LABEL_208:
        __break(1u);
        goto LABEL_209;
      }
      v37 = *(_QWORD *)(v257 + 8 * v33);
      v40 = v33;
      swift_retain();
      v38 = __OFADD__(v40, 1);
      v39 = v40 + 1;
      if (!v38)
        goto LABEL_10;
LABEL_171:
      __break(1u);
LABEL_172:
      swift_bridgeObjectRetain();
      a1 = v273;
      v32 = sub_21DC71FCC();
      v279 = v29;
      if (!v32)
        goto LABEL_173;
      goto LABEL_3;
    }
    v35 = a1;
    v36 = v33;
    v37 = MEMORY[0x22079D208](v33, v35);
    v38 = __OFADD__(v36, 1);
    v39 = v36 + 1;
    if (v38)
      goto LABEL_171;
LABEL_10:
    v270 = v39;
    v41 = *(double *)(v37 + 16);
    v42 = *(id *)(v37 + 24);
    v43 = OrderedEvent.linkedComponentIdentifiers()();
    v45 = v44;

    if (v43)
      break;
    v75 = v37;
    v76 = *(id *)(v37 + 24);
    v77 = (void *)sub_21DC716D8();

    if (!v77)
      goto LABEL_55;
    objc_opt_self();
    v78 = (void *)swift_dynamicCastObjCClass();
    if (!v78 || (v79 = objc_msgSend(v78, sel_requestId, v246, v247)) == 0)
    {
      v81 = v77;
LABEL_54:

LABEL_55:
      v84 = sub_21DC716D8();
      v29 = v279;
      if (!v84)
        goto LABEL_213;
      v85 = (void *)v84;
      ObjCClassFromObject = (void *)swift_getObjCClassFromObject();

      v87 = objc_msgSend(ObjCClassFromObject, sel_joinability);
      if (v87 - 3 < 2)
      {
        v90 = sub_21DC71714();
        if (!v90)
          goto LABEL_214;
        v91 = (void *)v90;
        v92 = (uint64_t)v254;
        sub_21DC7178C();

        sub_21DC37CC0(v75, v92, v41);
        (*(void (**)(uint64_t, uint64_t))(v275 + 8))(v92, v276);
        swift_release();
      }
      else if (v87 == 1)
      {
        v93 = (void *)sub_21DC716D8();
        if (!v93)
          goto LABEL_216;
        v94 = v93;
        v95 = objc_msgSend(v93, sel_getComponentId);

        if (v95)
        {
          v96 = v253;
          sub_21DC71CFC();
          v97 = (uint64_t)v96;
          v98 = v275;
          v99 = v276;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v275 + 48))(v97, 1, v276) == 1)
          {

            sub_21DC19DF4(v97);
          }
          else
          {
            v100 = *(void (**)(NSObject *, uint64_t, uint64_t))(v98 + 32);
            v100(v21, v97, v99);
            v101 = sub_21DC716D8();
            if (!v101)
              goto LABEL_217;
            v102 = (void *)v101;
            ObjectType = swift_getObjectType();

            v104 = v250;
            v100(((char *)v250 + *(int *)(v251 + 20)), (uint64_t)v21, v99);
            *v104 = ObjectType;
            v105 = v249;
            sub_21DC36F5C((uint64_t)v104, v249);
            sub_21DC38284(v75, v105, v41);
            sub_21DC36FA0(v105);
          }
        }
        swift_release();
        v29 = v279;
      }
      else
      {
        if (v87 != 2)
          goto LABEL_170;
        v88 = (void *)sub_21DC71720();
        if (v88)
        {
          v89 = v88;
          sub_21DC38020(v41, v75, v88);
          swift_release();

        }
        else
        {
          swift_release();
        }
        v29 = v279;
      }
      goto LABEL_163;
    }
    v80 = v79;
    objc_allocWithZone((Class)sub_21DC71804());
    v81 = v80;
    v82 = (void *)sub_21DC717E0();
    if (!v82)
    {

      goto LABEL_54;
    }
    v83 = v82;
    sub_21DC520A8(v37, v82, v41);
    swift_release();

    v29 = v279;
LABEL_163:
    v33 = v270;
    a1 = v273;
    if (v270 == v263)
      goto LABEL_174;
  }
  v269 = v45;
  v264 = v37;
  v46 = *(_QWORD *)(v271 + 32);
  v268 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9780);
  v47 = swift_initStackObject();
  *(_OWORD *)(v47 + 16) = v267;
  *(_QWORD *)(v47 + 32) = v43;
  v291[0] = v47;
  v277 = v46;
  swift_retain();
  sub_21DC71B94();
  v48 = v291[0];
  v265 = v43;
  if ((unint64_t)v291[0] >> 62)
  {
    v106 = v43;
    swift_bridgeObjectRetain();
    v107 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    if (!v107)
      goto LABEL_74;
LABEL_13:
    v281 = (void *)MEMORY[0x24BEE4B08];
LABEL_14:
    v51 = swift_bridgeObjectRetain();
    v52 = sub_21DC604D0(v51, (uint64_t)v281);
    swift_bridgeObjectRelease();
    v53 = v277;
    swift_retain();
    v54 = v282;
    v55 = sub_21DC60024(v48, v53);
    v282 = v54;
    v56 = v55;
    swift_bridgeObjectRelease();
    swift_release();
    v291[0] = MEMORY[0x24BEE4AF8];
    if (v56 >> 62)
    {
      v57 = sub_21DC71FCC();
      if (!v57)
      {
LABEL_41:
        v48 = MEMORY[0x24BEE4AF8];
        goto LABEL_42;
      }
    }
    else
    {
      v57 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v57)
        goto LABEL_41;
    }
    v58 = 0;
    v4 = v56 & 0xC000000000000001;
    v283 = v56;
    v289 = (_QWORD *)(v52 & 0xC000000000000001);
    v290 = (v56 & 0xFFFFFFFFFFFFFF8);
    v59 = v52 & 0xFFFFFFFFFFFFFF8;
    if (v52 < 0)
      v59 = v52;
    v287 = v59;
    v288 = (_QWORD *)(v56 + 32);
    v60 = v52 + 56;
    v285 = v4;
    v286 = v57;
    while (1)
    {
      if (v4)
      {
        v61 = (id)MEMORY[0x22079D208](v58, v283);
      }
      else
      {
        if (v58 >= v290[2].isa)
          goto LABEL_166;
        v61 = (id)v288[(_QWORD)v58];
      }
      v62 = v61;
      v38 = __OFADD__(v58, 1);
      v58 = (Class)((char *)v58 + 1);
      if (v38)
      {
        __break(1u);
LABEL_166:
        __break(1u);
LABEL_167:
        __break(1u);
LABEL_168:
        __break(1u);
        goto LABEL_169;
      }
      if (v289)
      {
        swift_bridgeObjectRetain();
        v63 = v62;
        v64 = sub_21DC71E58();
        swift_bridgeObjectRelease();

        if ((v64 & 1) != 0)
        {

          goto LABEL_21;
        }
      }
      else if (*(_QWORD *)(v52 + 16))
      {
        swift_bridgeObjectRetain();
        v65 = sub_21DC71D5C();
        v66 = -1 << *(_BYTE *)(v52 + 32);
        v67 = v65 & ~v66;
        if (((*(_QWORD *)(v60 + ((v67 >> 3) & 0xFFFFFFFFFFFFF8)) >> v67) & 1) != 0)
        {
          sub_21DC71804();
          v68 = *(id *)(*(_QWORD *)(v52 + 48) + 8 * v67);
          v69 = v52;
          v70 = sub_21DC71D68();

          if ((v70 & 1) != 0)
          {

            swift_bridgeObjectRelease();
            v52 = v69;
LABEL_37:
            v4 = v285;
            v57 = v286;
            goto LABEL_21;
          }
          v71 = ~v66;
          while (1)
          {
            v67 = (v67 + 1) & v71;
            v52 = v69;
            if (((*(_QWORD *)(v60 + ((v67 >> 3) & 0xFFFFFFFFFFFFF8)) >> v67) & 1) == 0)
              break;
            v72 = *(id *)(*(_QWORD *)(v69 + 48) + 8 * v67);
            v73 = sub_21DC71D68();

            if ((v73 & 1) != 0)
            {

              v52 = v69;
              swift_bridgeObjectRelease();
              goto LABEL_37;
            }
          }
        }
        swift_bridgeObjectRelease();
        v4 = v285;
        v57 = v286;
      }
      sub_21DC71F00();
      sub_21DC71F30();
      sub_21DC71F3C();
      sub_21DC71F0C();
LABEL_21:
      if (v58 == (Class)v57)
      {
        v48 = v291[0];
        v21 = v284;
LABEL_42:
        v281 = (void *)v52;
        swift_bridgeObjectRelease();
        if ((v48 & 0x8000000000000000) != 0 || (v48 & 0x4000000000000000) != 0)
        {
          swift_bridgeObjectRetain();
          v74 = sub_21DC71FCC();
          swift_release();
          if (!v74)
            goto LABEL_47;
        }
        else if (!*(_QWORD *)(v48 + 16))
        {
LABEL_47:
          swift_release();
          goto LABEL_75;
        }
        goto LABEL_14;
      }
    }
  }
  v49 = *(_QWORD *)((v291[0] & 0xFFFFFFFFFFFFF8) + 0x10);
  v50 = v43;
  if (v49)
    goto LABEL_13;
LABEL_74:
  swift_bridgeObjectRelease();
  v281 = (void *)MEMORY[0x24BEE4B08];
LABEL_75:
  swift_release();
  v108 = *(_QWORD *)(v271 + 32);
  v109 = swift_initStackObject();
  *(_OWORD *)(v109 + 16) = v267;
  v110 = v269;
  *(_QWORD *)(v109 + 32) = v269;
  v291[0] = v109;
  v274 = v108;
  swift_retain();
  sub_21DC71B94();
  v111 = v291[0];
  if ((unint64_t)v291[0] >> 62)
  {
    v137 = v110;
    swift_bridgeObjectRetain();
    v138 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    if (!v138)
      goto LABEL_112;
LABEL_77:
    v114 = MEMORY[0x24BEE4B08];
LABEL_78:
    v115 = swift_bridgeObjectRetain();
    v114 = sub_21DC604D0(v115, v114);
    swift_bridgeObjectRelease();
    v116 = v274;
    swift_retain();
    v117 = v282;
    v118 = sub_21DC60024(v111, v116);
    v282 = v117;
    swift_bridgeObjectRelease();
    swift_release();
    v291[0] = MEMORY[0x24BEE4AF8];
    if (v118 >> 62)
    {
      v119 = sub_21DC71FCC();
      if (!v119)
      {
LABEL_104:
        v111 = MEMORY[0x24BEE4AF8];
        goto LABEL_105;
      }
    }
    else
    {
      v119 = *(_QWORD *)((v118 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v119)
        goto LABEL_104;
    }
    v120 = 0;
    v121 = (_QWORD *)(v118 & 0xFFFFFFFFFFFFFF8);
    v277 = v118;
    v122 = v118 + 32;
    v123 = v118 & 0xC000000000000001;
    v288 = (_QWORD *)(v114 & 0xC000000000000001);
    v289 = v121;
    v124 = v114 & 0xFFFFFFFFFFFFFF8;
    if (v114 < 0)
      v124 = v114;
    v286 = v124;
    v287 = v122;
    v290 = (v114 + 56);
    v285 = v119;
    v283 = v123;
    while (1)
    {
      if (v123)
      {
        v125 = (id)MEMORY[0x22079D208](v120, v277);
      }
      else
      {
        if (v120 >= v289[2])
          goto LABEL_168;
        v125 = *(id *)(v287 + 8 * v120);
      }
      v126 = v125;
      v38 = __OFADD__(v120++, 1);
      if (v38)
        goto LABEL_167;
      if (v288)
      {
        swift_bridgeObjectRetain();
        v127 = v126;
        v4 = sub_21DC71E58();
        swift_bridgeObjectRelease();

        if ((v4 & 1) != 0)
        {

          goto LABEL_85;
        }
      }
      else if (*(_QWORD *)(v114 + 16))
      {
        swift_bridgeObjectRetain();
        v128 = sub_21DC71D5C();
        v129 = -1 << *(_BYTE *)(v114 + 32);
        v130 = v128 & ~v129;
        if (((*(unint64_t *)((char *)&v290->isa + ((v130 >> 3) & 0xFFFFFFFFFFFFF8)) >> v130) & 1) != 0)
        {
          sub_21DC71804();
          v4 = (uint64_t)*(id *)(*(_QWORD *)(v114 + 48) + 8 * v130);
          v131 = sub_21DC71D68();

          if ((v131 & 1) != 0)
          {
LABEL_96:

            swift_bridgeObjectRelease();
            v21 = v284;
            v119 = v285;
            v123 = v283;
            goto LABEL_85;
          }
          v132 = ~v129;
          for (j = v130 + 1; ; j = v134 + 1)
          {
            v134 = j & v132;
            if (((*(unint64_t *)((char *)&v290->isa + (((j & v132) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v132)) & 1) == 0)
              break;
            v135 = *(id *)(*(_QWORD *)(v114 + 48) + 8 * v134);
            v4 = sub_21DC71D68();

            if ((v4 & 1) != 0)
              goto LABEL_96;
          }
        }
        swift_bridgeObjectRelease();
        v21 = v284;
        v119 = v285;
        v123 = v283;
      }
      sub_21DC71F00();
      v4 = *(_QWORD *)(v291[0] + 16);
      sub_21DC71F30();
      sub_21DC71F3C();
      sub_21DC71F0C();
LABEL_85:
      if (v120 == v119)
      {
        v111 = v291[0];
LABEL_105:
        swift_bridgeObjectRelease();
        if ((v111 & 0x8000000000000000) != 0 || (v111 & 0x4000000000000000) != 0)
        {
          swift_bridgeObjectRetain();
          v136 = sub_21DC71FCC();
          swift_release();
          if (!v136)
            goto LABEL_110;
        }
        else if (!*(_QWORD *)(v111 + 16))
        {
LABEL_110:
          swift_release();
          goto LABEL_113;
        }
        goto LABEL_78;
      }
    }
  }
  v112 = *(_QWORD *)((v291[0] & 0xFFFFFFFFFFFFF8) + 0x10);
  v113 = v110;
  if (v112)
    goto LABEL_77;
LABEL_112:
  swift_bridgeObjectRelease();
  v114 = MEMORY[0x24BEE4B08];
LABEL_113:
  swift_release();
  sub_21DC50770(v114, v281);
  v140 = v139;
  v141 = swift_initStackObject();
  *(_OWORD *)(v141 + 16) = v256;
  v142 = v265;
  v143 = v269;
  *(_QWORD *)(v141 + 32) = v265;
  *(_QWORD *)(v141 + 40) = v143;
  v291[0] = v141;
  sub_21DC71B94();
  v144 = v291[0];
  v289 = v142;
  v290 = v143;
  v145 = sub_21DC604D0(v144, v140);
  swift_bridgeObjectRelease();
  if ((v145 & 0xC000000000000001) == 0)
  {
    v164 = v282;
    v147 = sub_21DC385AC(v145, v146);
    v282 = v164;
    v165 = v147 & 0xC000000000000001;
    if ((v147 & 0xC000000000000001) != 0)
      goto LABEL_137;
    goto LABEL_133;
  }
  v147 = MEMORY[0x24BEE4B08];
  v291[0] = MEMORY[0x24BEE4B08];
  sub_21DC71DF8();
  v148 = sub_21DC71E4C();
  if (!v148)
  {
LABEL_136:
    swift_release();
    v165 = v147 & 0xC000000000000001;
    if ((v147 & 0xC000000000000001) != 0)
    {
LABEL_137:
      v166 = sub_21DC71E28();
      if (v166)
        goto LABEL_138;
      goto LABEL_134;
    }
LABEL_133:
    v166 = *(_QWORD *)(v147 + 16);
    if (v166)
    {
LABEL_138:
      v293 = MEMORY[0x24BEE4AF8];
      sub_21DC4BB2C(0, v166 & ~(v166 >> 63), 0);
      if (v165)
      {
        v168 = (_QWORD *)sub_21DC71DEC();
        v170 = 1;
      }
      else
      {
        v168 = (_QWORD *)sub_21DC5FC34(v147);
        v170 = v171 & 1;
      }
      p_isa = v168;
      v295 = v169;
      v296 = v170;
      if (v166 < 0)
        goto LABEL_208;
      do
      {
        while (1)
        {
          sub_21DC5F9EC((uint64_t)p_isa, v295, v296, v147);
          v181 = v180;
          sub_21DC717F8();

          v182 = v293;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_21DC4BB2C(0, *(_QWORD *)(v182 + 16) + 1, 1);
            v182 = v293;
          }
          v183 = v275;
          v185 = *(_QWORD *)(v182 + 16);
          v184 = *(_QWORD *)(v182 + 24);
          if (v185 >= v184 >> 1)
          {
            sub_21DC4BB2C(v184 > 1, v185 + 1, 1);
            v183 = v275;
            v182 = v293;
          }
          *(_QWORD *)(v182 + 16) = v185 + 1;
          (*(void (**)(unint64_t, char *))(v183 + 32))(v182+ ((*(unsigned __int8 *)(v183 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v183 + 80))+ *(_QWORD *)(v183 + 72) * v185, v280);
          v293 = v182;
          if (v165)
            break;
          v172 = p_isa;
          v173 = v295;
          v174 = v296;
          v175 = (_QWORD *)sub_21DC5F904(p_isa, v295, v296, v147);
          v4 = v176;
          v178 = v177;
          sub_21DC3A41C((uint64_t)v172, v173, v174);
          p_isa = v175;
          v295 = v4;
          v179 = v178 & 1;
          v21 = v284;
          v296 = v179;
          if (!--v166)
            goto LABEL_153;
        }
        if ((v296 & 1) == 0)
          goto LABEL_212;
        if (sub_21DC71E04())
          swift_isUniquelyReferenced_nonNull_native();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9A18);
        v186 = (void (*)(uint64_t *, _QWORD))sub_21DC71C78();
        sub_21DC71E64();
        v186(v291, 0);
        --v166;
      }
      while (v166);
LABEL_153:
      sub_21DC3A41C((uint64_t)p_isa, v295, v296);
      swift_release();
      v167 = v293;
      goto LABEL_154;
    }
LABEL_134:
    swift_release();
    v167 = MEMORY[0x24BEE4AF8];
LABEL_154:
    if (*(_QWORD *)(v167 + 16) <= 1uLL)
    {
      swift_bridgeObjectRelease();
      v214 = v289;
      v215 = v290;
      sub_21DC53D68(v264, v214, v215, v41);
      swift_release();

      v29 = v279;
    }
    else
    {
      v188 = v261;
      v187 = v262;
      v189 = v260;
      if (qword_2553A7F00 != -1)
        swift_once();
      v190 = __swift_project_value_buffer(v187, (uint64_t)qword_2553A99F8);
      (*(void (**)(char *, uint64_t, uint64_t))(v188 + 16))(v189, v190, v187);
      v191 = v289;
      v192 = v290;
      v193 = v191;
      v194 = v192;
      v195 = v193;
      v196 = v194;
      swift_retain_n();
      v4 = v195;
      v21 = v196;
      swift_bridgeObjectRetain();
      v197 = sub_21DC719C0();
      v198 = sub_21DC71D20();
      if (os_log_type_enabled(v197, (os_log_type_t)v198))
      {
        LODWORD(v287) = v198;
        v290 = v197;
        v199 = swift_slowAlloc();
        v288 = (_QWORD *)swift_slowAlloc();
        v289 = (_QWORD *)swift_slowAlloc();
        v291[0] = (uint64_t)v289;
        *(_DWORD *)v199 = v248;
        v200 = (void *)sub_21DC716D8();
        if (!v200)
          goto LABEL_215;
        v201 = v200;
        v286 = v199 + 4;
        v202 = objc_msgSend(v200, sel_qualifiedMessageName);

        v203 = sub_21DC71AB0();
        v205 = v204;

        p_isa = (_QWORD *)sub_21DC42180(v203, v205, v291);
        sub_21DC71DA4();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v199 + 12) = 2112;
        p_isa = (_QWORD *)v4;
        v206 = (id)v4;
        sub_21DC71DA4();
        v4 = (uint64_t)v288;
        *v288 = v265;

        *(_WORD *)(v199 + 22) = 2112;
        p_isa = &v21->isa;
        v207 = v21;
        sub_21DC71DA4();
        *(_QWORD *)(v4 + 8) = v269;

        *(_WORD *)(v199 + 32) = 2080;
        v208 = swift_bridgeObjectRetain();
        v209 = MEMORY[0x22079CEB4](v208, v276);
        v211 = v210;
        swift_bridgeObjectRelease();
        p_isa = (_QWORD *)sub_21DC42180(v209, v211, v291);
        sub_21DC71DA4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v212 = v290;
        _os_log_impl(&dword_21DC05000, v290, (os_log_type_t)v287, "Not ingesting linking event because it joins two ORCHESTRATOR Component Identifiers:\n%s\nwith links from %@\nto %@ joins into\nthese ORCH IDs: %s", (uint8_t *)v199, 0x2Au);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8680);
        swift_arrayDestroy();
        MEMORY[0x22079DA24](v4, -1, -1);
        v213 = v289;
        swift_arrayDestroy();
        MEMORY[0x22079DA24](v213, -1, -1);
        MEMORY[0x22079DA24](v199, -1, -1);

        swift_release();
        (*(void (**)(char *, uint64_t))(v261 + 8))(v260, v262);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_release_n();

        (*(void (**)(char *, uint64_t))(v188 + 8))(v189, v187);
      }
      v29 = v279;
      v21 = v284;
    }
    goto LABEL_163;
  }
  v149 = v148;
  sub_21DC71804();
  while (1)
  {
    v293 = v149;
    swift_dynamicCast();
    v150 = sub_21DC717D4();
    v151 = p_isa;
    if (v150 == 1)
      break;

LABEL_117:
    v149 = sub_21DC71E4C();
    if (!v149)
    {
      v147 = v291[0];
      goto LABEL_136;
    }
  }
  v152 = v291[0];
  v153 = *(_QWORD *)(v291[0] + 16);
  if (*(_QWORD *)(v291[0] + 24) <= v153)
  {
    sub_21DC64C7C(v153 + 1);
    v152 = v291[0];
  }
  v154 = sub_21DC71D5C();
  v155 = v152 + 56;
  v156 = -1 << *(_BYTE *)(v152 + 32);
  v157 = v154 & ~v156;
  v158 = v157 >> 6;
  if (((-1 << v157) & ~*(_QWORD *)(v152 + 56 + 8 * (v157 >> 6))) != 0)
  {
    v159 = __clz(__rbit64((-1 << v157) & ~*(_QWORD *)(v152 + 56 + 8 * (v157 >> 6)))) | v157 & 0x7FFFFFFFFFFFFFC0;
LABEL_131:
    *(_QWORD *)(v155 + ((v159 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v159;
    *(_QWORD *)(*(_QWORD *)(v152 + 48) + 8 * v159) = v151;
    ++*(_QWORD *)(v152 + 16);
    goto LABEL_117;
  }
  v160 = 0;
  v161 = (unint64_t)(63 - v156) >> 6;
  while (++v158 != v161 || (v160 & 1) == 0)
  {
    v162 = v158 == v161;
    if (v158 == v161)
      v158 = 0;
    v160 |= v162;
    v163 = *(_QWORD *)(v155 + 8 * v158);
    if (v163 != -1)
    {
      v159 = __clz(__rbit64(~v163)) + (v158 << 6);
      goto LABEL_131;
    }
  }
LABEL_169:
  __break(1u);
  __break(1u);
LABEL_170:
  swift_release();
LABEL_210:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21DC3A41C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_21DC3A428(void **a1)
{
  uint64_t v1;

  return sub_21DC5FCBC(a1, *(_QWORD *)(v1 + 16), *(void ***)(v1 + 24));
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for StreamAccess(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StreamAccess(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_21DC3A4A4(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_21DC3A4C0(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for StreamAccess()
{
  return &type metadata for StreamAccess;
}

uint64_t sub_21DC3A4F0()
{
  uint64_t v0;

  v0 = sub_21DC719D8();
  __swift_allocate_value_buffer(v0, qword_2553A9A28);
  __swift_project_value_buffer(v0, (uint64_t)qword_2553A9A28);
  sub_21DC208FC();
  sub_21DC71D80();
  return sub_21DC719E4();
}

uint64_t sub_21DC3A580()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  size_t v10[2];

  if (qword_2553A7F08 != -1)
    swift_once();
  v0 = sub_21DC719D8();
  __swift_project_value_buffer(v0, (uint64_t)qword_2553A9A28);
  v1 = sub_21DC719C0();
  v2 = sub_21DC71D08();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_21DC05000, v1, v2, "checking for data vault entitlements", v3, 2u);
    MEMORY[0x22079DA24](v3, -1, -1);
  }

  v4 = xpc_copy_entitlement_for_self();
  if (!v4)
    return 2;
  v5 = (void *)v4;
  swift_unknownObjectRetain();
  v6 = sub_21DC719C0();
  v7 = sub_21DC71D08();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v8 = 134217984;
    v10[0] = xpc_dictionary_get_count(v5);
    sub_21DC71DA4();
    swift_unknownObjectRelease();
    _os_log_impl(&dword_21DC05000, v6, v7, "Got entitlement dictionary with %ld entries", v8, 0xCu);
    MEMORY[0x22079DA24](v8, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease();
  }
  sub_21DC71AEC();
  sub_21DC3A784("com.apple.private.security.storage.SiriSELF", v5, (char *)v10);
  swift_release();
  swift_unknownObjectRelease();
  return LOBYTE(v10[0]);
}

void sub_21DC3A784(char *key@<X0>, xpc_object_t xdict@<X2>, char *a3@<X8>)
{
  char v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  if (key)
  {
    v4 = xpc_dictionary_get_BOOL(xdict, key);
    if (qword_2553A7F08 != -1)
      swift_once();
    v5 = sub_21DC719D8();
    __swift_project_value_buffer(v5, (uint64_t)qword_2553A9A28);
    v6 = sub_21DC719C0();
    v7 = sub_21DC71D08();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v8 = 67109120;
      sub_21DC71DA4();
      _os_log_impl(&dword_21DC05000, v6, v7, "Found value %{BOOL}d for data vault entitlement", v8, 8u);
      MEMORY[0x22079DA24](v8, -1, -1);
    }

  }
  else
  {
    v4 = 2;
  }
  *a3 = v4;
}

uint64_t sub_21DC3A8B4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9048);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v8 = sub_21DC71AB0();
    v9 = *(uint64_t **)(*(_QWORD *)(v3 + 64) + 40);
    *v9 = v8;
    v9[1] = v10;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_21DC3A93C()
{
  return swift_task_switch();
}

uint64_t sub_21DC3A950()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;

  if (qword_2553A7F08 != -1)
    swift_once();
  v1 = sub_21DC719D8();
  v0[17] = __swift_project_value_buffer(v1, (uint64_t)qword_2553A9A28);
  v2 = sub_21DC719C0();
  v3 = sub_21DC71D08();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21DC05000, v2, v3, "Starting vending sandbox extension for Unified Message Stream", v4, 2u);
    MEMORY[0x22079DA24](v4, -1, -1);
  }

  v5 = objc_allocWithZone(MEMORY[0x24BE909C0]);
  v6 = (void *)sub_21DC71AA4();
  v7 = objc_msgSend(v5, sel_initWithMachServiceName_, v6);
  v0[18] = v7;

  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_21DC3AAF0;
  v8 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v9 = v0 + 10;
  v9[1] = 0x40000000;
  v9[2] = sub_21DC3A8B4;
  v9[3] = &block_descriptor_0;
  v9[4] = v8;
  objc_msgSend(v7, sel_vendSandboxExtensionWithResource_readonly_completion_, 1, 1, v9);
  return swift_continuation_await();
}

uint64_t sub_21DC3AAF0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

char *sub_21DC3AB50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  char *result;
  int v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_21DC71AEC();
  swift_bridgeObjectRelease();
  v1 = sandbox_extension_consume();
  v2 = swift_release();
  if (v1 < 0)
  {
    v7 = MEMORY[0x22079CD1C](v2);
    result = strerror(v7);
    if (result)
    {
      v8 = sub_21DC71A98();
      v10 = v9;
      swift_bridgeObjectRetain_n();
      v11 = sub_21DC719C0();
      v12 = sub_21DC71D20();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = swift_slowAlloc();
        v20 = swift_slowAlloc();
        v21 = v20;
        *(_DWORD *)v13 = 67109378;
        *(_DWORD *)(v0 + 80) = MEMORY[0x22079CD1C]();
        sub_21DC71DA4();
        *(_WORD *)(v13 + 8) = 2080;
        if (v10)
          v14 = v8;
        else
          v14 = 0;
        if (v10)
          v15 = v10;
        else
          v15 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 80) = sub_21DC42180(v14, v15, &v21);
        sub_21DC71DA4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21DC05000, v11, v12, "Error consuming sandbox extension: %d %s", (uint8_t *)v13, 0x12u);
        swift_arrayDestroy();
        MEMORY[0x22079DA24](v20, -1, -1);
        MEMORY[0x22079DA24](v13, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      v16 = *(void **)(v0 + 144);
      v17 = MEMORY[0x22079CD1C]();
      if (v10)
        v18 = v8;
      else
        v18 = 0;
      if (!v10)
        v10 = 0xE000000000000000;
      sub_21DC3AE94();
      swift_allocError();
      *(_DWORD *)v19 = v17;
      *(_QWORD *)(v19 + 8) = v18;
      *(_QWORD *)(v19 + 16) = v10;
      swift_willThrow();

      return (char *)(*(uint64_t (**)(void))(v0 + 8))();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v3 = sub_21DC719C0();
    v4 = sub_21DC71D08();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v5 = 134217984;
      *(_QWORD *)(v0 + 80) = v1;
      sub_21DC71DA4();
      _os_log_impl(&dword_21DC05000, v3, v4, "Sandbox extension vended and consumed successfully. Handle: %lld", v5, 0xCu);
      MEMORY[0x22079DA24](v5, -1, -1);
    }

    return (char *)(*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
  }
  return result;
}

uint64_t sub_21DC3AE54()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 144);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_21DC3AE94()
{
  unint64_t result;

  result = qword_2553A9A48;
  if (!qword_2553A9A48)
  {
    result = MEMORY[0x22079D964](&unk_21DC74324, &type metadata for StreamAccess.StreamAccessError);
    atomic_store(result, (unint64_t *)&qword_2553A9A48);
  }
  return result;
}

uint64_t destroy for StreamAccess.StreamAccessError()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s26AIMLInstrumentationStreams12StreamAccessO17StreamAccessErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StreamAccess.StreamAccessError(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for StreamAccess.StreamAccessError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StreamAccess.StreamAccessError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StreamAccess.StreamAccessError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StreamAccess.StreamAccessError()
{
  return &type metadata for StreamAccess.StreamAccessError;
}

uint64_t getEnumTagSinglePayload for MessageTypeWrapper(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 8))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageTypeWrapper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageTypeWrapper()
{
  return &type metadata for MessageTypeWrapper;
}

unint64_t sub_21DC3B0DC()
{
  unint64_t result;

  result = qword_2553A9B60;
  if (!qword_2553A9B60)
  {
    result = MEMORY[0x22079D964]("u!S0\\u", &type metadata for MessageTypeWrapper);
    atomic_store(result, (unint64_t *)&qword_2553A9B60);
  }
  return result;
}

BOOL sub_21DC3B120(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_21DC3B134()
{
  sub_21DC72134();
  sub_21DC72140();
  return sub_21DC72158();
}

uint64_t sub_21DC3B178()
{
  return sub_21DC72140();
}

uint64_t sub_21DC3B1A0()
{
  sub_21DC72134();
  sub_21DC72140();
  return sub_21DC72158();
}

unint64_t LogicalTimestamp.dictionaryRepresentation()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  unint64_t v13;

  v0 = sub_21DC715F4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A91A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21DC73E00;
  v12 = 0x6564496B636F6C63;
  v13 = 0xEF7265696669746ELL;
  v6 = MEMORY[0x24BEE0D00];
  sub_21DC71E88();
  sub_21DC7178C();
  v7 = sub_21DC715AC();
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  *(_QWORD *)(inited + 96) = v6;
  *(_QWORD *)(inited + 72) = v7;
  *(_QWORD *)(inited + 80) = v9;
  v12 = 0xD000000000000016;
  v13 = 0x800000021DC76BA0;
  sub_21DC71E88();
  v10 = sub_21DC717BC();
  *(_QWORD *)(inited + 168) = MEMORY[0x24BEE4568];
  *(_QWORD *)(inited + 144) = v10;
  return sub_21DC2A120(inited);
}

uint64_t LogicalTimestamp.init(dictionaryRepresentation:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  char *v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _BYTE v26[40];
  __int128 v27;
  __int128 v28;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21DC715F4();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)&v23 - v13;
  v24 = 0x6564496B636F6C63;
  v25 = 0xEF7265696669746ELL;
  sub_21DC71E88();
  if (*(_QWORD *)(a1 + 16) && (v15 = sub_21DC0A678((uint64_t)v26), (v16 & 1) != 0))
  {
    sub_21DC13D44(*(_QWORD *)(a1 + 56) + 32 * v15, (uint64_t)&v27);
  }
  else
  {
    v27 = 0u;
    v28 = 0u;
  }
  sub_21DC0C310((uint64_t)v26);
  if (!*((_QWORD *)&v28 + 1))
  {
    swift_bridgeObjectRelease();
    v17 = &qword_2553A9B68;
    v18 = (char *)&v27;
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_21DC71594();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    swift_bridgeObjectRelease();
    v17 = (uint64_t *)&unk_2553A98F0;
    v18 = v5;
LABEL_10:
    sub_21DC07C84((uint64_t)v18, v17);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v14, v5, v6);
  v24 = 0xD000000000000016;
  v25 = 0x800000021DC76BA0;
  sub_21DC71E88();
  if (*(_QWORD *)(a1 + 16) && (v19 = sub_21DC0A678((uint64_t)v26), (v20 & 1) != 0))
  {
    sub_21DC13D44(*(_QWORD *)(a1 + 56) + 32 * v19, (uint64_t)&v27);
  }
  else
  {
    v27 = 0u;
    v28 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_21DC0C310((uint64_t)v26);
  if (!*((_QWORD *)&v28 + 1))
  {
    sub_21DC07C84((uint64_t)&v27, &qword_2553A9B68);
    goto LABEL_20;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_20:
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v14, v6);
  v21 = sub_21DC71798();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  return v21;
}

void *OrderedEvent.dictionaryRepresentation()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t inited;
  uint64_t v5;
  void *result;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A91A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21DC743F0;
  v22 = 0x707954746E657665;
  v23 = 0xE900000000000065;
  v5 = MEMORY[0x24BEE0D00];
  sub_21DC71E88();
  result = (void *)sub_21DC716D8();
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  v7 = result;
  v8 = objc_msgSend(result, sel_qualifiedMessageName);

  v9 = sub_21DC71AB0();
  v11 = v10;

  *(_QWORD *)(inited + 96) = v5;
  *(_QWORD *)(inited + 72) = v9;
  *(_QWORD *)(inited + 80) = v11;
  v22 = 0xD000000000000010;
  v23 = 0x800000021DC76C00;
  sub_21DC71E88();
  result = (void *)sub_21DC71714();
  if (!result)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  v12 = result;
  v13 = LogicalTimestamp.dictionaryRepresentation()();

  *(_QWORD *)(inited + 168) = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A91B0);
  *(_QWORD *)(inited + 144) = v13;
  v22 = 0x6449746E657665;
  v23 = 0xE700000000000000;
  sub_21DC71E88();
  *(_QWORD *)(inited + 240) = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A91C0);
  sub_21DC716F0();
  v14 = sub_21DC715F4();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v3, 1, v14) == 1)
  {
    sub_21DC07C84((uint64_t)v3, (uint64_t *)&unk_2553A98F0);
    v16 = 0;
    v17 = 0;
  }
  else
  {
    v16 = sub_21DC715AC();
    v17 = v18;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v3, v14);
  }
  *(_QWORD *)(inited + 216) = v16;
  *(_QWORD *)(inited + 224) = v17;
  v22 = 0x746E657665;
  v23 = 0xE500000000000000;
  sub_21DC71E88();
  result = (void *)sub_21DC716D8();
  if (!result)
    goto LABEL_13;
  v19 = result;
  v20 = objc_msgSend(result, sel_dictionaryRepresentation);

  if (v20)
  {
    v21 = sub_21DC71A20();

  }
  else
  {
    v21 = 0;
  }
  *(_QWORD *)(inited + 312) = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A91B8);
  *(_QWORD *)(inited + 288) = v21;
  return (void *)sub_21DC2A120(inited);
}

id sub_21DC3B96C(void *a1, uint64_t a2)
{
  return sub_21DC3C678(a1, a2, (void (*)(void))OrderedEvent.dictionaryRepresentation());
}

void OrderedEvent.jsonEncoding()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t inited;
  unsigned int v8;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)sub_21DC716D8();
  if (!v4)
  {
    __break(1u);
    goto LABEL_10;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, sel_wrapAsAnyEvent);

  if (!v6)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A91A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21DC743F0;
  strcpy((char *)v26, "anyEventType");
  BYTE5(v26[1]) = 0;
  HIWORD(v26[1]) = -5120;
  sub_21DC71E88();
  v8 = objc_msgSend(v6, sel_anyEventType);
  *(_QWORD *)(inited + 96) = MEMORY[0x24BEE3F88];
  *(_DWORD *)(inited + 72) = v8;
  v26[0] = 0xD000000000000010;
  v26[1] = 0x800000021DC76C00;
  sub_21DC71E88();
  v9 = sub_21DC71714();
  if (!v9)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v10 = (void *)v9;
  v11 = LogicalTimestamp.dictionaryRepresentation()();

  *(_QWORD *)(inited + 168) = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A91B0);
  *(_QWORD *)(inited + 144) = v11;
  strcpy((char *)v26, "eventId");
  v26[1] = 0xE700000000000000;
  sub_21DC71E88();
  *(_QWORD *)(inited + 240) = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A91C0);
  sub_21DC716F0();
  v12 = sub_21DC715F4();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v3, 1, v12) == 1)
  {
    sub_21DC07C84((uint64_t)v3, (uint64_t *)&unk_2553A98F0);
    v14 = 0;
    v15 = 0;
  }
  else
  {
    v14 = sub_21DC715AC();
    v15 = v16;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v3, v12);
  }
  *(_QWORD *)(inited + 216) = v14;
  *(_QWORD *)(inited + 224) = v15;
  strcpy((char *)v26, "payload");
  v26[1] = 0xE700000000000000;
  v17 = MEMORY[0x24BEE0D00];
  sub_21DC71E88();
  v18 = objc_msgSend(v6, sel_payload);
  if (v18)
  {
    v19 = v18;
    v20 = sub_21DC71504();
    v22 = v21;

    v23 = sub_21DC714F8();
    v25 = v24;
    sub_21DC07150(v20, v22);
    *(_QWORD *)(inited + 312) = v17;
    *(_QWORD *)(inited + 288) = v23;
    *(_QWORD *)(inited + 296) = v25;
    sub_21DC2A120(inited);

    return;
  }
LABEL_12:
  __break(1u);
}

uint64_t OrderedEvent.init(jsonEncoding:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  char v17;
  int v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  char *v25;
  uint64_t v26;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  id v43;
  int v44;
  unint64_t v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  _QWORD v52[2];
  _BYTE v53[40];
  __int128 v54;
  __int128 v55;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v47 - v9;
  v11 = sub_21DC715F4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v52, "anyEventType");
  BYTE5(v52[1]) = 0;
  HIWORD(v52[1]) = -5120;
  sub_21DC71E88();
  if (*(_QWORD *)(a1 + 16) && (v16 = sub_21DC0A678((uint64_t)v53), (v17 & 1) != 0))
  {
    sub_21DC13D44(*(_QWORD *)(a1 + 56) + 32 * v16, (uint64_t)&v54);
  }
  else
  {
    v54 = 0u;
    v55 = 0u;
  }
  sub_21DC0C310((uint64_t)v53);
  if (!*((_QWORD *)&v55 + 1))
    goto LABEL_15;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v18 = v52[0];
    strcpy((char *)v52, "payload");
    v52[1] = 0xE700000000000000;
    sub_21DC71E88();
    if (*(_QWORD *)(a1 + 16) && (v19 = sub_21DC0A678((uint64_t)v53), (v20 & 1) != 0))
    {
      sub_21DC13D44(*(_QWORD *)(a1 + 56) + 32 * v19, (uint64_t)&v54);
    }
    else
    {
      v54 = 0u;
      v55 = 0u;
    }
    sub_21DC0C310((uint64_t)v53);
    if (*((_QWORD *)&v55 + 1))
    {
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_14;
      LODWORD(v51) = v18;
      v21 = sub_21DC714E0();
      v23 = v22;
      swift_bridgeObjectRelease();
      if (v23 >> 60 == 15)
        goto LABEL_14;
      v50 = v1;
      v28 = objc_allocWithZone(MEMORY[0x24BE95AA0]);
      sub_21DC0710C(v21, v23);
      v29 = (void *)sub_21DC714EC();
      sub_21DC2FAD0(v21, v23);
      v30 = objc_msgSend(v28, sel_initWithAnyEventType_payload_, v51, v29);

      v31 = objc_msgSend(v30, sel_unwrap);
      if (!v31)
      {

        swift_bridgeObjectRelease();
        v35 = v21;
        v36 = v23;
LABEL_37:
        sub_21DC2FAD0(v35, v36);
        return 0;
      }
      v32 = v31;
      v51 = v23;
      v52[0] = 0xD000000000000010;
      v52[1] = 0x800000021DC76C00;
      sub_21DC71E88();
      if (*(_QWORD *)(a1 + 16))
      {
        v33 = sub_21DC0A678((uint64_t)v53);
        if ((v34 & 1) != 0)
        {
          sub_21DC13D44(*(_QWORD *)(a1 + 56) + 32 * v33, (uint64_t)&v54);
        }
        else
        {
          v54 = 0u;
          v55 = 0u;
        }
      }
      else
      {
        v54 = 0u;
        v55 = 0u;
      }
      sub_21DC0C310((uint64_t)v53);
      if (*((_QWORD *)&v55 + 1))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2553A91B0);
        if ((swift_dynamicCast() & 1) == 0)
        {

          swift_bridgeObjectRelease();
LABEL_36:
          v35 = v21;
          v36 = v51;
          goto LABEL_37;
        }
        v49 = v30;
        v37 = v52[0];
        sub_21DC717C8();
        v38 = LogicalTimestamp.init(dictionaryRepresentation:)(v37);
        if (!v38)
        {
          sub_21DC2FAD0(v21, v51);
          swift_bridgeObjectRelease();

          return 0;
        }
        v39 = (void *)v38;
        strcpy((char *)v52, "eventId");
        v52[1] = 0xE700000000000000;
        sub_21DC71E88();
        v40 = *(_QWORD *)(a1 + 16);
        v48 = v39;
        if (v40 && (v41 = sub_21DC0A678((uint64_t)v53), (v42 & 1) != 0))
        {
          sub_21DC13D44(*(_QWORD *)(a1 + 56) + 32 * v41, (uint64_t)&v54);
        }
        else
        {
          v54 = 0u;
          v55 = 0u;
        }
        v43 = v49;
        swift_bridgeObjectRelease();
        sub_21DC0C310((uint64_t)v53);
        if (*((_QWORD *)&v55 + 1))
        {
          if ((swift_dynamicCast() & 1) != 0)
          {
            sub_21DC71594();
            swift_bridgeObjectRelease();
            v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
            v45 = v51;
            v46 = v48;
            if (v44 != 1)
            {
              (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
              (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v7, v15, v11);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
              v26 = sub_21DC716FC();

              sub_21DC2FAD0(v21, v45);
              (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
              return v26;
            }
            sub_21DC2FAD0(v21, v51);

            v24 = (uint64_t *)&unk_2553A98F0;
            v25 = v10;
            goto LABEL_17;
          }

          goto LABEL_36;
        }

      }
      else
      {

        swift_bridgeObjectRelease();
      }
      sub_21DC2FAD0(v21, v51);
LABEL_16:
      v24 = &qword_2553A9B68;
      v25 = (char *)&v54;
LABEL_17:
      sub_21DC07C84((uint64_t)v25, v24);
      return 0;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t TimestampedOrderedEvent.dictionaryRepresentation()()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;
  _BYTE v9[40];

  v1 = objc_msgSend(*(id *)(v0 + 24), sel_dictionaryRepresentation);
  v2 = sub_21DC71A20();

  *(_QWORD *)&v7 = 0xD000000000000011;
  *((_QWORD *)&v7 + 1) = 0x800000021DC77A80;
  sub_21DC71E88();
  v3 = *(_QWORD *)(v0 + 16);
  v8 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v7 = v3;
  sub_21DC13D80(&v7, v6);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_21DC3CAE8(v6, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_21DC0C310((uint64_t)v9);
  return v2;
}

unint64_t SISchemaProvisionalEvent.dictionaryRepresentation()()
{
  void *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v1 = 0x707974206461623CLL;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A91A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21DC73E10;
  v3 = MEMORY[0x24BEE0D00];
  sub_21DC71E88();
  v4 = objc_msgSend(v0, sel_typeId);
  if (v4)
  {
    v5 = v4;
    v6 = sub_21DC71AB0();
    v8 = v7;

    v9 = (uint64_t *)(inited + 72);
    *(_QWORD *)(inited + 96) = v3;
    if (v8)
    {
      *v9 = v6;
      goto LABEL_6;
    }
  }
  else
  {
    v9 = (uint64_t *)(inited + 72);
    *(_QWORD *)(inited + 96) = v3;
  }
  *v9 = 0x707974206461623CLL;
  v8 = 0xEC0000003E644965;
LABEL_6:
  *(_QWORD *)(inited + 80) = v8;
  sub_21DC71E88();
  v10 = objc_msgSend(v0, sel_version);
  *(_QWORD *)(inited + 168) = MEMORY[0x24BEE4008];
  *(_QWORD *)(inited + 144) = v10;
  sub_21DC71E88();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9B70);
  v11 = swift_initStackObject();
  *(_OWORD *)(v11 + 16) = xmmword_21DC73E00;
  *(_QWORD *)(v11 + 32) = 1701869940;
  *(_QWORD *)(v11 + 40) = 0xE400000000000000;
  v12 = objc_msgSend(v0, sel_anyEvent);
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, sel_anyEventType);

    v1 = sub_21DC71D38();
  }
  else
  {
    v14 = 0xEA00000000003E65;
  }
  v15 = 0xED00003E64616F6CLL;
  v16 = 0x796170206461623CLL;
  *(_QWORD *)(v11 + 48) = v1;
  *(_QWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 64) = 0x64616F6C796170;
  *(_QWORD *)(v11 + 72) = 0xE700000000000000;
  v17 = objc_msgSend(v0, sel_anyEvent);
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v17, sel_payload);

    if (v19)
    {
      v20 = sub_21DC71504();
      v22 = v21;

      v16 = sub_21DC714F8();
      v15 = v23;
      sub_21DC07150(v20, v22);
    }
  }
  *(_QWORD *)(v11 + 80) = v16;
  *(_QWORD *)(v11 + 88) = v15;
  v24 = sub_21DC2A8FC(v11);
  *(_QWORD *)(inited + 240) = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9B78);
  *(_QWORD *)(inited + 216) = v24;
  return sub_21DC2A120(inited);
}

id sub_21DC3C66C(void *a1, uint64_t a2)
{
  return sub_21DC3C678(a1, a2, (void (*)(void))SISchemaProvisionalEvent.dictionaryRepresentation());
}

id sub_21DC3C678(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();

  v5 = (void *)sub_21DC71A14();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_21DC3C6DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, double a6)
{
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  char v23;

  v7 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_21DC0A5CC(a1, a2, a3, a4);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= result && (a5 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        *(double *)(v22[7] + 8 * v16) = a6;
        return result;
      }
      goto LABEL_11;
    }
    if (v21 >= result && (a5 & 1) == 0)
    {
      result = (uint64_t)sub_21DC5D4D4();
      goto LABEL_7;
    }
    sub_21DC0FC48(result, a5 & 1);
    result = sub_21DC0A5CC(a1, a2, a3, a4);
    if ((v20 & 1) == (v23 & 1))
    {
      v16 = result;
      v22 = *v7;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_21DC5CD44(v16, a1, a2, a3, a4, v22, a6);
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_21DC720E0();
  __break(1u);
  return result;
}

uint64_t sub_21DC3C82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  _QWORD *v9;
  _QWORD **v10;
  _QWORD *v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t result;
  unint64_t v27;
  char v28;

  v10 = (_QWORD **)v9;
  v16 = (_QWORD *)*v9;
  v18 = sub_21DC0A5CC(a5, a6, a7, a8);
  v19 = v16[2];
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
  }
  else
  {
    v22 = v17;
    v23 = v16[3];
    if (v23 >= v21 && (a9 & 1) != 0)
    {
LABEL_7:
      v24 = *v10;
      if ((v22 & 1) != 0)
      {
LABEL_8:
        v25 = (uint64_t *)(v24[7] + 32 * v18);
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        *v25 = a1;
        v25[1] = a2;
        v25[2] = a3;
        v25[3] = a4;
        return result;
      }
      goto LABEL_11;
    }
    if (v23 >= v21 && (a9 & 1) == 0)
    {
      sub_21DC5D690();
      goto LABEL_7;
    }
    sub_21DC0FF88(v21, a9 & 1);
    v27 = sub_21DC0A5CC(a5, a6, a7, a8);
    if ((v22 & 1) == (v28 & 1))
    {
      v18 = v27;
      v24 = *v10;
      if ((v22 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_21DC5CD90(v18, a5, a6, a7, a8, a1, a2, a3, a4, v24);
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_21DC720E0();
  __break(1u);
  return result;
}

uint64_t sub_21DC3C9C4(uint64_t a1, uint64_t a2, char a3, double a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_21DC0A568(a1, a2);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= result && (a3 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        *(double *)(v18[7] + 8 * v12) = a4;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= result && (a3 & 1) == 0)
    {
      result = (uint64_t)sub_21DC5DA40();
      goto LABEL_7;
    }
    sub_21DC10658(result, a3 & 1);
    result = sub_21DC0A568(a1, a2);
    if ((v16 & 1) == (v19 & 1))
    {
      v12 = result;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_21DC5CE34(v12, a1, a2, v18, a4);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_21DC720E0();
  __break(1u);
  return result;
}

_OWORD *sub_21DC3CAE8(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_21DC0A678(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
        return sub_21DC13D80(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_21DC5DDA0();
      goto LABEL_7;
    }
    sub_21DC10C70(v13, a3 & 1);
    v19 = sub_21DC0A678(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_21DC0C2D4(a2, (uint64_t)v21);
      return sub_21DC5CE7C(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)sub_21DC720E0();
  __break(1u);
  return result;
}

id sub_21DC3CC20(void *a1, char a2, double a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  id result;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_21DC0A4BC((uint64_t)a1);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  result = (id)(v10 + v11);
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= (uint64_t)result && (a2 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        *(double *)(v15[7] + 8 * v9) = a3;
        return result;
      }
      goto LABEL_11;
    }
    if (v14 >= (uint64_t)result && (a2 & 1) == 0)
    {
      result = sub_21DC5E134();
      goto LABEL_7;
    }
    sub_21DC11270((uint64_t)result, a2 & 1);
    result = (id)sub_21DC0A4BC((uint64_t)a1);
    if ((v13 & 1) == (v16 & 1))
    {
      v9 = (unint64_t)result;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_21DC5CF40(v9, (uint64_t)a1, v15, a3);
      return a1;
    }
  }
  sub_21DC71804();
  result = (id)sub_21DC720E0();
  __break(1u);
  return result;
}

void sub_21DC3CD38(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  id v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_21DC0A4BC((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7];

        *(_QWORD *)(v16 + 8 * v9) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_21DC5E2D4();
      goto LABEL_7;
    }
    sub_21DC1153C(v12, a3 & 1);
    v17 = sub_21DC0A4BC((uint64_t)a2);
    if ((v13 & 1) == (v18 & 1))
    {
      v9 = v17;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_21DC5CEF8(v9, (uint64_t)a2, a1, v15);
      v19 = a2;
      return;
    }
  }
  sub_21DC71804();
  sub_21DC720E0();
  __break(1u);
}

uint64_t sub_21DC3CE54(_QWORD *a1, char a2, double a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for EventTypeIdPair();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_21DC0A6A8(a1);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= result && (a2 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        *(double *)(v20[7] + 8 * v14) = a3;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= result && (a2 & 1) == 0)
    {
      result = (uint64_t)sub_21DC5E484();
      goto LABEL_7;
    }
    sub_21DC11818(result, a2 & 1);
    result = sub_21DC0A6A8(a1);
    if ((v18 & 1) == (v21 & 1))
    {
      v14 = result;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_21DC0C210((uint64_t)a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair);
      return sub_21DC5CF94(v14, (uint64_t)v11, v20, a3);
    }
  }
  result = sub_21DC720E0();
  __break(1u);
  return result;
}

uint64_t sub_21DC3CFA4(uint64_t a1, char a2, double a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t result;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  char v22;
  uint64_t v23;

  v4 = (_QWORD **)v3;
  v8 = sub_21DC715F4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v3;
  v15 = sub_21DC0A740(a1);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  result = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    v19 = v14;
    v20 = v13[3];
    if (v20 >= result && (a2 & 1) != 0)
    {
LABEL_7:
      v21 = *v4;
      if ((v19 & 1) != 0)
      {
LABEL_8:
        *(double *)(v21[7] + 8 * v15) = a3;
        return result;
      }
      goto LABEL_11;
    }
    if (v20 >= result && (a2 & 1) == 0)
    {
      result = (uint64_t)sub_21DC5E4AC();
      goto LABEL_7;
    }
    sub_21DC11F84(result, a2 & 1);
    result = sub_21DC0A740(a1);
    if ((v19 & 1) == (v22 & 1))
    {
      v15 = result;
      v21 = *v4;
      if ((v19 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
      return sub_21DC5D038(v15, (uint64_t)v12, v21, a3);
    }
  }
  result = sub_21DC720E0();
  __break(1u);
  return result;
}

uint64_t sub_21DC3D0FC(uint64_t a1, char a2, double a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_21DC0A7A4(a1);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= result && (a2 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        *(double *)(v20[7] + 8 * v14) = a3;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= result && (a2 & 1) == 0)
    {
      result = (uint64_t)sub_21DC5EAB0();
      goto LABEL_7;
    }
    sub_21DC12984(result, a2 & 1);
    result = sub_21DC0A7A4(a1);
    if ((v18 & 1) == (v21 & 1))
    {
      v14 = result;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_21DC0C210(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      return sub_21DC5D168(v14, (uint64_t)v11, v20, a3);
    }
  }
  result = sub_21DC720E0();
  __break(1u);
  return result;
}

uint64_t sub_21DC3D24C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v3;
  v15 = sub_21DC0A7A4(a2);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    v19 = v14;
    v20 = v13[3];
    if (v20 >= v18 && (a3 & 1) != 0)
    {
LABEL_7:
      v21 = *v4;
      if ((v19 & 1) != 0)
        return sub_21DC3D4F0(a1, v21[7] + *(_QWORD *)(v9 + 72) * v15);
      goto LABEL_11;
    }
    if (v20 >= v18 && (a3 & 1) == 0)
    {
      sub_21DC5ECEC();
      goto LABEL_7;
    }
    sub_21DC12D24(v18, a3 & 1);
    v23 = sub_21DC0A7A4(a2);
    if ((v19 & 1) == (v24 & 1))
    {
      v15 = v23;
      v21 = *v4;
      if ((v19 & 1) != 0)
        return sub_21DC3D4F0(a1, v21[7] + *(_QWORD *)(v9 + 72) * v15);
LABEL_11:
      sub_21DC0C210(a2, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      return sub_21DC5D214(v15, (uint64_t)v12, a1, v21);
    }
  }
  result = sub_21DC720E0();
  __break(1u);
  return result;
}

_OWORD *sub_21DC3D3C0(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_21DC0A568(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_21DC13D80(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_21DC5F178();
      goto LABEL_7;
    }
    sub_21DC134E4(v15, a4 & 1);
    v21 = sub_21DC0A568(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_21DC5D2C0(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_21DC720E0();
  __break(1u);
  return result;
}

uint64_t sub_21DC3D4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t ANCSchemaANCClientEvent_WhichEvent_Type.description.getter(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;

  v1 = 0xD000000000000019;
  v2 = 1701736302;
  if (a1 == 3)
    v2 = 0xD000000000000015;
  if (a1 != 4)
    v1 = v2;
  if (a1 == 2)
    return 0xD000000000000014;
  else
    return v1;
}

unint64_t sub_21DC3D5A4()
{
  uint64_t *v0;

  return ANCSchemaANCClientEvent_WhichEvent_Type.description.getter(*v0);
}

uint64_t ASRSchemaASRClientEvent_WhichEvent_Type.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  v1 = a1 - 101;
  result = 0xD000000000000016;
  switch(v1)
  {
    case 0:
      v3 = 0x616568657270;
      goto LABEL_5;
    case 1:
      v3 = 0x736575716572;
LABEL_5:
      result = v3 & 0xFFFFFFFFFFFFLL | 0x4374000000000000;
      break;
    case 2:
    case 4:
    case 14:
      return result;
    case 3:
      result = 0xD000000000000010;
      break;
    case 5:
      result = 0xD000000000000014;
      break;
    case 6:
      result = 0xD00000000000001ELL;
      break;
    case 7:
      result = 0xD000000000000015;
      break;
    case 8:
      result = 0xD000000000000010;
      break;
    case 9:
      result = 0xD00000000000001ELL;
      break;
    case 10:
      result = 0xD000000000000024;
      break;
    case 11:
      result = 0xD000000000000019;
      break;
    case 12:
      result = 0xD000000000000019;
      break;
    case 13:
      result = 0xD000000000000028;
      break;
    case 15:
      result = 0xD00000000000001DLL;
      break;
    case 16:
      result = 0xD000000000000018;
      break;
    case 17:
      result = 0xD00000000000001DLL;
      break;
    case 18:
      result = 0xD000000000000017;
      break;
    case 19:
      result = 0xD00000000000001ELL;
      break;
    case 20:
      result = 0xD000000000000023;
      break;
    case 21:
      result = 0xD000000000000024;
      break;
    case 22:
      result = 0xD00000000000001BLL;
      break;
    case 23:
      result = 0xD00000000000001CLL;
      break;
    case 24:
      result = 0xD000000000000018;
      break;
    case 25:
      result = 0xD00000000000001ALL;
      break;
    case 26:
      result = 0xD00000000000001FLL;
      break;
    case 27:
      result = 0xD000000000000019;
      break;
    case 28:
      result = 0xD00000000000002BLL;
      break;
    case 29:
      result = 0xD000000000000014;
      break;
    case 30:
      result = 0xD000000000000017;
      break;
    case 31:
      result = 0xD000000000000027;
      break;
    case 32:
      result = 0xD00000000000001FLL;
      break;
    case 33:
      result = 0xD000000000000039;
      break;
    case 34:
      result = 0xD000000000000018;
      break;
    case 35:
      result = 0xD000000000000030;
      break;
    case 36:
      result = 0xD00000000000001DLL;
      break;
    case 37:
      result = 0xD00000000000002DLL;
      break;
    default:
      result = 1701736302;
      break;
  }
  return result;
}

uint64_t sub_21DC3D85C()
{
  uint64_t *v0;

  return ASRSchemaASRClientEvent_WhichEvent_Type.description.getter(*v0);
}

unint64_t CNVSchemaCNVClientEvent_WhichEvent_Type.description.getter(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;

  v1 = a1 - 2;
  result = 0xD000000000000018;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      result = 0xD000000000000010;
      break;
    case 2:
      result = 0xD00000000000001BLL;
      break;
    case 3:
      result = 0xD00000000000001BLL;
      break;
    case 4:
      result = 0xD000000000000019;
      break;
    case 5:
      result = 0xD00000000000001ELL;
      break;
    case 6:
      result = 0xD000000000000018;
      break;
    case 7:
    case 10:
    case 14:
      result = 0xD000000000000015;
      break;
    case 8:
      result = 0xD00000000000001BLL;
      break;
    case 9:
      result = 0xD000000000000017;
      break;
    case 11:
      result = 0x776F6C46646E6966;
      break;
    case 12:
      result = 0xD000000000000016;
      break;
    case 13:
      result = 0xD00000000000001ALL;
      break;
    case 15:
      result = 0xD000000000000016;
      break;
    case 16:
      result = 0xD000000000000016;
      break;
    case 17:
      result = 0xD00000000000001ELL;
      break;
    default:
      result = 1701736302;
      break;
  }
  return result;
}

unint64_t sub_21DC3D9E4()
{
  uint64_t *v0;

  return CNVSchemaCNVClientEvent_WhichEvent_Type.description.getter(*v0);
}

unint64_t SISchemaClientEvent_WhichEvent_Type.description.getter(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;

  v1 = a1 - 101;
  result = 0xD000000000000018;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      result = 0xD000000000000012;
      break;
    case 2:
      result = 0xD000000000000017;
      break;
    case 3:
      result = 0xD000000000000014;
      break;
    case 4:
      result = 0xD000000000000012;
      break;
    case 5:
      result = 0xD000000000000010;
      break;
    case 6:
      result = 0x697461636F766E69;
      break;
    case 7:
      result = 0x6E6F697461636F6CLL;
      break;
    case 8:
      result = 0x74754F68636E7570;
      break;
    case 10:
      result = 0x65754369726973;
      break;
    case 11:
      result = 0x7365725072667575;
      break;
    case 12:
      result = 0xD000000000000013;
      break;
    case 13:
      result = 0xD000000000000011;
      break;
    case 14:
      result = 0x70536F5474786574;
      break;
    case 15:
      result = 0xD000000000000011;
      break;
    case 16:
      result = 0x6C46746E65696C63;
      break;
    case 17:
      result = 0x754F676F6C616964;
      break;
    case 18:
      result = 0xD000000000000015;
      break;
    case 19:
      result = 0xD000000000000017;
      break;
    case 20:
      result = 0xD00000000000001CLL;
      break;
    case 21:
      result = 0xD00000000000001ELL;
      break;
    case 22:
    case 31:
    case 35:
    case 46:
    case 59:
      result = 0xD000000000000016;
      break;
    case 23:
      result = 0x706D6F4372667575;
      break;
    case 24:
    case 47:
      result = 0x776F685372667575;
      break;
    case 25:
      result = 0x6469615372667575;
      break;
    case 26:
      result = 0x6174614672667575;
      break;
    case 27:
      result = 0xD00000000000001BLL;
      break;
    case 28:
      result = 0xD000000000000017;
      break;
    case 29:
      result = 0xD000000000000012;
      break;
    case 30:
      result = 0xD000000000000019;
      break;
    case 32:
      result = 0xD000000000000018;
      break;
    case 33:
      result = 0xD000000000000019;
      break;
    case 34:
      result = 0xD000000000000010;
      break;
    case 36:
      result = 0x5252465555696575;
      break;
    case 37:
      result = 0xD000000000000015;
      break;
    case 38:
      result = 0xD00000000000001ELL;
      break;
    case 39:
      result = 0xD000000000000021;
      break;
    case 40:
      result = 0x6C61746146726E70;
      break;
    case 41:
      result = 0x5245544D6E727574;
      break;
    case 42:
      result = 0xD000000000000011;
      break;
    case 43:
      result = 0xD000000000000017;
      break;
    case 44:
      result = 0xD00000000000001BLL;
      break;
    case 45:
      result = 0xD000000000000022;
      break;
    case 49:
      result = 0xD000000000000020;
      break;
    case 50:
      result = 0xD000000000000020;
      break;
    case 51:
      result = 0xD000000000000022;
      break;
    case 52:
      result = 0xD000000000000021;
      break;
    case 53:
      result = 0xD00000000000001DLL;
      break;
    case 54:
      result = 0xD000000000000020;
      break;
    case 55:
      result = 0xD000000000000022;
      break;
    case 56:
      result = 0xD00000000000001DLL;
      break;
    case 57:
      result = 0x656C655372667575;
      break;
    case 58:
      result = 0xD000000000000028;
      break;
    case 60:
      result = 0xD000000000000021;
      break;
    case 61:
      result = 0xD000000000000018;
      break;
    case 62:
      result = 0xD000000000000019;
      break;
    case 63:
      result = 0xD000000000000015;
      break;
    default:
      result = 1701736302;
      break;
  }
  return result;
}

unint64_t sub_21DC3DF04()
{
  uint64_t *v0;

  return SISchemaClientEvent_WhichEvent_Type.description.getter(*v0);
}

unint64_t DIMSchemaDIMClientEvent_WhichEvent_Type.description.getter(uint64_t a1)
{
  unint64_t v1;

  v1 = 1701736302;
  if (a1 == 102)
    v1 = 0xD000000000000016;
  if (a1 == 101)
    return 0xD000000000000012;
  else
    return v1;
}

unint64_t sub_21DC3DF60()
{
  uint64_t *v0;

  return DIMSchemaDIMClientEvent_WhichEvent_Type.description.getter(*v0);
}

id sub_21DC3DF68()
{
  id *v0;

  return objc_msgSend(*v0, sel_whichEvent_Type);
}

unint64_t FLOWSchemaFLOWClientEvent_WhichEvent_Type.description.getter(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;

  v1 = a1 - 101;
  result = 0xD000000000000016;
  switch(v1)
  {
    case 0:
      result = 0x70657453776F6C66;
      break;
    case 1:
      return result;
    case 2:
    case 7:
      result = 0xD00000000000001ALL;
      break;
    case 3:
      result = 0xD000000000000023;
      break;
    case 4:
      result = 0xD000000000000013;
      break;
    case 5:
      result = 0xD00000000000001FLL;
      break;
    case 6:
      result = 0xD000000000000023;
      break;
    default:
      result = 1701736302;
      break;
  }
  return result;
}

unint64_t sub_21DC3E050()
{
  uint64_t *v0;

  return FLOWSchemaFLOWClientEvent_WhichEvent_Type.description.getter(*v0);
}

unint64_t MHSchemaMHClientEvent_WhichEvent_Type.description.getter(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;

  v1 = a1 - 100;
  result = 0xD00000000000002FLL;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      result = 0xD00000000000002ELL;
      break;
    case 2:
      result = 0xD00000000000002DLL;
      break;
    case 3:
      result = 0xD00000000000001FLL;
      break;
    case 4:
      result = 0xD000000000000018;
      break;
    case 5:
      result = 0xD00000000000001FLL;
      break;
    case 6:
      result = 0xD000000000000024;
      break;
    case 7:
    case 8:
      result = 0xD000000000000022;
      break;
    case 9:
      result = 0xD000000000000029;
      break;
    case 10:
      result = 0xD000000000000028;
      break;
    case 11:
      result = 0xD00000000000002BLL;
      break;
    case 12:
      result = 0xD00000000000002DLL;
      break;
    case 13:
      result = 0xD000000000000025;
      break;
    case 14:
      result = 0xD000000000000024;
      break;
    case 15:
      result = 0xD000000000000031;
      break;
    case 16:
      result = 0xD000000000000026;
      break;
    case 17:
      result = 0xD00000000000002FLL;
      break;
    case 18:
      result = 0xD00000000000002ELL;
      break;
    case 19:
      result = 0xD000000000000030;
      break;
    case 20:
      result = 0xD000000000000035;
      break;
    case 21:
      result = 0xD000000000000021;
      break;
    case 22:
    case 26:
    case 35:
    case 53:
      result = 0xD00000000000001BLL;
      break;
    case 23:
      result = 0xD00000000000002CLL;
      break;
    case 24:
      result = 0xD000000000000013;
      break;
    case 25:
      result = 0xD000000000000010;
      break;
    case 27:
      result = 0xD000000000000010;
      break;
    case 28:
      result = 0xD000000000000019;
      break;
    case 29:
      result = 0xD000000000000017;
      break;
    case 30:
      result = 0x746E696F70646E65;
      break;
    case 31:
      result = 0xD000000000000014;
      break;
    case 32:
      result = 0xD00000000000001DLL;
      break;
    case 33:
      result = 0xD00000000000001CLL;
      break;
    case 34:
      result = 0xD000000000000018;
      break;
    case 36:
      result = 0xD000000000000019;
      break;
    case 37:
      result = 0xD000000000000020;
      break;
    case 38:
      result = 0xD000000000000019;
      break;
    case 39:
      result = 0xD00000000000001CLL;
      break;
    case 40:
      result = 0xD000000000000021;
      break;
    case 41:
      result = 0x6375446F69647561;
      break;
    case 42:
      result = 0xD000000000000014;
      break;
    case 43:
      result = 0xD000000000000016;
      break;
    case 44:
      result = 0x7461657243707274;
      break;
    case 45:
      result = 0xD000000000000013;
      break;
    case 46:
      result = 0xD000000000000012;
      break;
    case 47:
      result = 0xD000000000000015;
      break;
    case 48:
      result = 0xD000000000000025;
      break;
    case 49:
      result = 0xD00000000000001ALL;
      break;
    case 50:
      result = 0xD000000000000010;
      break;
    case 51:
      result = 0x6572506E776F7263;
      break;
    case 52:
      result = 0x6767697254737472;
      break;
    case 54:
      result = 0xD00000000000001FLL;
      break;
    case 55:
      result = 0xD000000000000015;
      break;
    default:
      result = 1701736302;
      break;
  }
  return result;
}

unint64_t sub_21DC3E468()
{
  uint64_t *v0;

  return MHSchemaMHClientEvent_WhichEvent_Type.description.getter(*v0);
}

unint64_t NETSchemaNETClientEvent_WhichEvent_Type.description.getter(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;

  v1 = a1 - 101;
  result = 0xD000000000000022;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      result = 0xD000000000000021;
      break;
    case 2:
      result = 0xD000000000000026;
      break;
    case 3:
      result = 0xD000000000000017;
      break;
    case 4:
      result = 0xD000000000000014;
      break;
    case 5:
      result = 0xD000000000000031;
      break;
    case 6:
      result = 0xD000000000000036;
      break;
    case 7:
      result = 0xD00000000000002BLL;
      break;
    case 8:
      result = 0xD000000000000030;
      break;
    default:
      result = 1701736302;
      break;
  }
  return result;
}

unint64_t sub_21DC3E554()
{
  uint64_t *v0;

  return NETSchemaNETClientEvent_WhichEvent_Type.description.getter(*v0);
}

unint64_t NLXSchemaNLXClientEvent_WhichEvent_Type.description.getter(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;

  v1 = a1 - 101;
  result = 0xD000000000000011;
  switch(v1)
  {
    case 0:
    case 1:
    case 34:
      return result;
    case 2:
    case 10:
    case 20:
    case 24:
    case 35:
      result = 0xD000000000000015;
      break;
    case 3:
      result = 0xD000000000000014;
      break;
    case 4:
      result = 0xD000000000000010;
      break;
    case 5:
      result = 0xD000000000000014;
      break;
    case 6:
      result = 0xD000000000000017;
      break;
    case 7:
      result = 0xD00000000000001ELL;
      break;
    case 8:
      result = 0xD000000000000017;
      break;
    case 9:
      result = 0xD000000000000014;
      break;
    case 11:
      result = 0xD00000000000001FLL;
      break;
    case 12:
      result = 0xD000000000000018;
      break;
    case 13:
      result = 0xD00000000000001FLL;
      break;
    case 14:
      result = 0xD000000000000019;
      break;
    case 15:
      result = 0xD000000000000010;
      break;
    case 16:
      result = 0xD000000000000019;
      break;
    case 17:
      result = 0xD00000000000001ELL;
      break;
    case 18:
      result = 0xD000000000000019;
      break;
    case 19:
      result = 0xD00000000000001ELL;
      break;
    case 21:
      result = 0xD00000000000001ALL;
      break;
    case 22:
      result = 0xD000000000000023;
      break;
    case 23:
      result = 0xD000000000000022;
      break;
    case 25:
      result = 0xD00000000000001FLL;
      break;
    case 26:
      result = 0xD000000000000024;
      break;
    case 27:
      result = 0xD00000000000001CLL;
      break;
    case 28:
      result = 0xD000000000000014;
      break;
    case 29:
      result = 0xD00000000000001DLL;
      break;
    case 30:
      result = 0xD000000000000016;
      break;
    case 31:
      result = 0xD00000000000001BLL;
      break;
    case 32:
      result = 0xD000000000000024;
      break;
    case 33:
      result = 0xD000000000000023;
      break;
    case 36:
      result = 0xD00000000000001BLL;
      break;
    case 37:
      result = 0xD00000000000001FLL;
      break;
    case 38:
      result = 0xD00000000000001ELL;
      break;
    case 39:
      result = 0xD00000000000001ALL;
      break;
    case 40:
      result = 0x70757465536D6463;
      break;
    default:
      result = 1701736302;
      break;
  }
  return result;
}

unint64_t sub_21DC3E838()
{
  uint64_t *v0;

  return NLXSchemaNLXClientEvent_WhichEvent_Type.description.getter(*v0);
}

unint64_t ORCHSchemaORCHClientEvent_WhichEvent_Type.description.getter(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;

  v1 = a1 - 101;
  result = 0xD000000000000010;
  switch(v1)
  {
    case 0:
      result = 0x4374736575716572;
      break;
    case 1:
    case 2:
    case 12:
    case 17:
      return result;
    case 3:
      result = 0xD000000000000016;
      break;
    case 4:
      result = 0xD000000000000015;
      break;
    case 5:
      result = 0xD000000000000013;
      break;
    case 6:
      result = 0x6143746C75736572;
      break;
    case 7:
      result = 0x6553746C75736572;
      break;
    case 8:
      result = 0xD000000000000018;
      break;
    case 9:
      result = 0x6C62616C69617661;
      break;
    case 10:
      result = 0xD000000000000018;
      break;
    case 11:
      result = 0xD000000000000013;
      break;
    case 13:
      result = 0xD000000000000018;
      break;
    case 14:
      result = 0xD000000000000017;
      break;
    case 15:
      result = 0xD000000000000011;
      break;
    case 16:
      result = 0x6C616E6946707274;
      break;
    case 18:
      result = 0xD00000000000001CLL;
      break;
    case 19:
      result = 0xD000000000000013;
      break;
    case 20:
      result = 0xD000000000000014;
      break;
    case 21:
      result = 0xD00000000000001CLL;
      break;
    case 22:
      result = 0xD000000000000011;
      break;
    case 23:
      result = 0xD000000000000017;
      break;
    case 24:
      result = 0xD00000000000001ALL;
      break;
    default:
      result = 1701736302;
      break;
  }
  return result;
}

unint64_t sub_21DC3EA68()
{
  uint64_t *v0;

  return ORCHSchemaORCHClientEvent_WhichEvent_Type.description.getter(*v0);
}

unint64_t POMMESSchemaPOMMESClientEvent_WhichEvent_Type.description.getter(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;

  v1 = a1 - 101;
  result = 0xD000000000000015;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      result = 0xD00000000000001ALL;
      break;
    case 2:
      result = 0xD000000000000024;
      break;
    case 3:
      result = 0xD000000000000014;
      break;
    case 4:
    case 9:
      result = 0xD000000000000013;
      break;
    case 5:
      result = 0xD00000000000001FLL;
      break;
    case 6:
      result = 0xD000000000000018;
      break;
    case 7:
      result = 0xD000000000000017;
      break;
    case 8:
      result = 0xD000000000000012;
      break;
    case 10:
      result = 0xD000000000000018;
      break;
    default:
      result = 1701736302;
      break;
  }
  return result;
}

unint64_t sub_21DC3EB70()
{
  uint64_t *v0;

  return POMMESSchemaPOMMESClientEvent_WhichEvent_Type.description.getter(*v0);
}

unint64_t RFSchemaRFClientEvent_WhichEvent_Type.description.getter(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;

  v1 = a1 - 101;
  result = 0xD000000000000014;
  switch(v1)
  {
    case 0:
      result = 0x456E726574746170;
      break;
    case 1:
      return result;
    case 2:
      result = 0x6E656E6F706D6F63;
      break;
    case 3:
      result = 0xD000000000000017;
      break;
    default:
      result = 1701736302;
      break;
  }
  return result;
}

unint64_t sub_21DC3EC24()
{
  uint64_t *v0;

  return RFSchemaRFClientEvent_WhichEvent_Type.description.getter(*v0);
}

unint64_t RRSchemaRRClientEvent_WhichEvent_Type.description.getter(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;

  v1 = a1 - 2;
  result = 0xD000000000000012;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      result = 0xD000000000000018;
      break;
    case 2:
      result = 0x6172476F73557272;
      break;
    case 3:
      result = 0x6F4372656C6C7570;
      break;
    default:
      result = 1701736302;
      break;
  }
  return result;
}

unint64_t sub_21DC3ECD8()
{
  uint64_t *v0;

  return RRSchemaRRClientEvent_WhichEvent_Type.description.getter(*v0);
}

uint64_t SICSchemaSICClientEvent_WhichEvent_Type.description.getter(uint64_t a1)
{
  if (a1 == 101)
    return 0xD00000000000001BLL;
  else
    return 1701736302;
}

uint64_t sub_21DC3ED14()
{
  uint64_t *v0;

  return SICSchemaSICClientEvent_WhichEvent_Type.description.getter(*v0);
}

unint64_t TTSSchemaTTSClientEvent_WhichEvent_Type.description.getter(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;

  v1 = a1 - 101;
  result = 0xD000000000000014;
  switch(v1)
  {
    case 0:
      result = 0x6F43686365657073;
      break;
    case 1:
      result = 0x5274736575716572;
      break;
    case 2:
      return result;
    case 3:
      result = 0xD000000000000015;
      break;
    case 4:
      result = 0xD000000000000010;
      break;
    default:
      result = 1701736302;
      break;
  }
  return result;
}

unint64_t sub_21DC3EDE8()
{
  uint64_t *v0;

  return TTSSchemaTTSClientEvent_WhichEvent_Type.description.getter(*v0);
}

uint64_t static InstrumentationStreamsFactory.construct(filter:startTime:endTime:maxEvents:lastN:storageURL:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  *(_QWORD *)(v8 + 56) = v10;
  *(_QWORD *)(v8 + 64) = v12;
  *(_BYTE *)(v8 + 107) = v11;
  *(_BYTE *)(v8 + 106) = a8;
  *(_QWORD *)(v8 + 40) = a5;
  *(_QWORD *)(v8 + 48) = a7;
  *(_BYTE *)(v8 + 105) = a6;
  *(_BYTE *)(v8 + 104) = a4;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_21DC3EE38()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD *v3;

  type metadata accessor for UnifiedSourceStream();
  v1 = swift_allocObject();
  *(_QWORD *)(v0 + 72) = v1;
  *(_QWORD *)(v1 + 16) = 0;
  *(_WORD *)(v1 + 24) = 256;
  v2 = sub_21DC3A580();
  *(_BYTE *)(v0 + 108) = v2;
  if ((v2 & 1) != 0)
  {
    *(_QWORD *)(v0 + 80) = 0;
    return swift_task_switch();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v3;
    *v3 = v0;
    v3[1] = sub_21DC3EFC8;
    return sub_21DC3A93C();
  }
}

uint64_t sub_21DC3EED0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t (*v17)(void);

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_BYTE *)(v0 + 108);
  v16 = *(_BYTE *)(v0 + 107);
  v14 = *(_BYTE *)(v0 + 106);
  v3 = *(_QWORD *)(v0 + 64);
  v15 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v6 = *(_BYTE *)(v0 + 105);
  v7 = *(_BYTE *)(v0 + 104);
  v9 = *(void **)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 32);
  v10 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v0 + 80);
  *(_WORD *)(v1 + 24) = v2 & 1;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8CC0);
  sub_21DC3FE28(v3, v10 + *(int *)(v11 + 56));
  *(_QWORD *)v10 = v1;
  *(_QWORD *)(v10 + 8) = v9;
  *(_QWORD *)(v10 + 16) = v8;
  *(_BYTE *)(v10 + 24) = v7 & 1;
  *(_QWORD *)(v10 + 32) = v5;
  *(_BYTE *)(v10 + 40) = v6 & 1;
  *(_QWORD *)(v10 + 48) = v4;
  *(_BYTE *)(v10 + 56) = v14 & 1;
  *(_QWORD *)(v10 + 64) = v15;
  *(_BYTE *)(v10 + 72) = v16 & 1;
  v17 = *(uint64_t (**)(void))(v0 + 8);
  v12 = v9;
  return v17();
}

uint64_t sub_21DC3EFC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 96) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 80) = a1;
  return swift_task_switch();
}

uint64_t static InstrumentationStreamsFactory.construct(filter:startTimeRelativeToNow:storageURL:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 40) = a3;
  *(_QWORD *)(v5 + 48) = v4;
  *(double *)(v5 + 32) = a4;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_21DC3F05C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE60]), sel_initWithTimeIntervalSinceNow_, *(double *)(v0 + 32));
  objc_msgSend(v1, sel_timeIntervalSinceReferenceDate);
  v3 = v2;

  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v4;
  *(_QWORD *)v4 = v0;
  *(_QWORD *)(v4 + 8) = sub_21DC3F110;
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v4 + 56) = 0;
  *(_QWORD *)(v4 + 64) = v5;
  *(_QWORD *)(v4 + 40) = 0;
  *(_QWORD *)(v4 + 48) = 0;
  *(_DWORD *)(v4 + 104) = 16843008;
  *(_QWORD *)(v4 + 32) = v3;
  *(_OWORD *)(v4 + 16) = v6;
  return swift_task_switch();
}

uint64_t sub_21DC3F110()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21DC3F158(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  *(_QWORD *)(v8 + 56) = v10;
  *(_QWORD *)(v8 + 64) = v12;
  *(_BYTE *)(v8 + 107) = v11;
  *(_BYTE *)(v8 + 106) = a8;
  *(_QWORD *)(v8 + 40) = a5;
  *(_QWORD *)(v8 + 48) = a7;
  *(_BYTE *)(v8 + 105) = a6;
  *(_BYTE *)(v8 + 104) = a4;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_21DC3F19C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD *v3;

  type metadata accessor for UnifiedSourceStream();
  v1 = swift_allocObject();
  *(_QWORD *)(v0 + 72) = v1;
  *(_QWORD *)(v1 + 16) = 0;
  *(_WORD *)(v1 + 24) = 256;
  v2 = sub_21DC3A580();
  *(_BYTE *)(v0 + 108) = v2;
  if ((v2 & 1) != 0)
  {
    *(_QWORD *)(v0 + 80) = 0;
    return swift_task_switch();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v3;
    *v3 = v0;
    v3[1] = sub_21DC3F234;
    return sub_21DC3A93C();
  }
}

uint64_t sub_21DC3F234(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 96) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_21DC3F2A8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static InstrumentationStreamsFactory.construct(filter:startTime:endTime:maxEvents:lastN:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;

  *(_QWORD *)(v9 + 56) = v11;
  *(_QWORD *)(v9 + 64) = v8;
  *(_BYTE *)(v9 + 99) = v12;
  *(_BYTE *)(v9 + 98) = a8;
  *(_QWORD *)(v9 + 40) = a5;
  *(_QWORD *)(v9 + 48) = a7;
  *(_BYTE *)(v9 + 97) = a6;
  *(_BYTE *)(v9 + 96) = a4;
  *(_QWORD *)(v9 + 24) = a2;
  *(_QWORD *)(v9 + 32) = a3;
  *(_QWORD *)(v9 + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_253F35F70);
  *(_QWORD *)(v9 + 72) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21DC3F35C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint8x8_t v3;
  uint64_t v4;
  int16x8_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint16x8_t v10;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = sub_21DC714C8();
  v3.i32[0] = *(_DWORD *)(v0 + 96);
  v10 = vmovl_u8(v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v4;
  *(_QWORD *)v4 = v0;
  *(_QWORD *)(v4 + 8) = sub_21DC3F410;
  v5.i64[1] = v10.i64[1];
  v5.i64[0] = v10.i64[0] & 0xFF01FF01FF01FF01;
  v6 = *(_OWORD *)(v0 + 16);
  v7 = *(_OWORD *)(v0 + 32);
  v8 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v4 + 64) = *(_QWORD *)(v0 + 72);
  *(_OWORD *)(v4 + 32) = v7;
  *(_OWORD *)(v4 + 48) = v8;
  *(_DWORD *)(v4 + 104) = vmovn_s16(v5).u32[0];
  *(_OWORD *)(v4 + 16) = v6;
  return swift_task_switch();
}

uint64_t sub_21DC3F410()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 72);
  v3 = *v1;
  *(_QWORD *)(v3 + 88) = v0;
  swift_task_dealloc();
  sub_21DC3FE70(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_21DC3F498()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static InstrumentationStreamsFactory.construct(filter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_253F35F70);
  v3[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21DC3F52C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = sub_21DC714C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v3;
  *(_QWORD *)v3 = v0;
  *(_QWORD *)(v3 + 8) = sub_21DC3F5CC;
  v4 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v3 + 64) = *(_QWORD *)(v0 + 40);
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_DWORD *)(v3 + 104) = 16843009;
  *(_OWORD *)(v3 + 16) = v4;
  return swift_task_switch();
}

uint64_t sub_21DC3F5CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 40);
  v3 = *v1;
  *(_QWORD *)(v3 + 56) = v0;
  swift_task_dealloc();
  sub_21DC3FE70(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_21DC3F654()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static InstrumentationStreamsFactory.construct(filter:startTimeRelativeToNow:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = v3;
  *(double *)(v4 + 32) = a3;
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_253F35F70);
  *(_QWORD *)(v4 + 48) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21DC3F6EC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE60]), sel_initWithTimeIntervalSinceNow_, *(double *)(v0 + 32));
  objc_msgSend(v2, sel_timeIntervalSinceReferenceDate);
  v4 = v3;

  v5 = sub_21DC714C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v1, 1, 1, v5);
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v6;
  *(_QWORD *)v6 = v0;
  *(_QWORD *)(v6 + 8) = sub_21DC3F7D0;
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v6 + 56) = 0;
  *(_QWORD *)(v6 + 64) = v7;
  *(_QWORD *)(v6 + 40) = 0;
  *(_QWORD *)(v6 + 48) = 0;
  *(_DWORD *)(v6 + 104) = 16843008;
  *(_QWORD *)(v6 + 32) = v4;
  *(_OWORD *)(v6 + 16) = v8;
  return swift_task_switch();
}

uint64_t sub_21DC3F7D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 48);
  v3 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  swift_task_dealloc();
  sub_21DC3FE70(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_21DC3F858()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static InstrumentationStreamsFactory.constructSelfProcessedProvider(filter:startTime:endTime:maxEvents:lastN:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v10;
  char v11;

  *(_BYTE *)(v8 + 75) = v11;
  *(_BYTE *)(v8 + 74) = a8;
  *(_QWORD *)(v8 + 48) = a7;
  *(_QWORD *)(v8 + 56) = v10;
  *(_BYTE *)(v8 + 73) = a6;
  *(_BYTE *)(v8 + 72) = a4;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a5;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_253F35F70);
  *(_QWORD *)(v8 + 64) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21DC3F908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  id v12;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;

  v17 = *(_BYTE *)(v0 + 75);
  v15 = *(_BYTE *)(v0 + 74);
  v1 = *(_QWORD *)(v0 + 64);
  v16 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 40);
  v14 = *(_QWORD *)(v0 + 48);
  v3 = *(_BYTE *)(v0 + 73);
  v4 = *(_BYTE *)(v0 + 72);
  v5 = *(void **)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(uint64_t **)(v0 + 16);
  type metadata accessor for SelfProcessedEventStream();
  v8 = swift_allocObject();
  v9 = sub_21DC714C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v1, 1, 1, v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9BB8);
  v7[3] = v10;
  v7[4] = (uint64_t)&off_24E1A61D0;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v7);
  sub_21DC3FE28(v1, (uint64_t)boxed_opaque_existential_1 + *(int *)(v10 + 56));
  *boxed_opaque_existential_1 = v8;
  boxed_opaque_existential_1[1] = (uint64_t)v5;
  boxed_opaque_existential_1[2] = v6;
  *((_BYTE *)boxed_opaque_existential_1 + 24) = v4 & 1;
  boxed_opaque_existential_1[4] = v2;
  *((_BYTE *)boxed_opaque_existential_1 + 40) = v3 & 1;
  boxed_opaque_existential_1[6] = v14;
  *((_BYTE *)boxed_opaque_existential_1 + 56) = v15 & 1;
  boxed_opaque_existential_1[8] = v16;
  *((_BYTE *)boxed_opaque_existential_1 + 72) = v17 & 1;
  v12 = v5;
  sub_21DC3FE70(v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static InstrumentationStreamsFactory.constructRawProvider(filter:startTime:endTime:maxEvents:lastN:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v10;
  char v11;

  *(_BYTE *)(v8 + 99) = v11;
  *(_BYTE *)(v8 + 98) = a8;
  *(_QWORD *)(v8 + 48) = a7;
  *(_QWORD *)(v8 + 56) = v10;
  *(_BYTE *)(v8 + 97) = a6;
  *(_BYTE *)(v8 + 96) = a4;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a5;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_253F35F70);
  *(_QWORD *)(v8 + 64) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21DC3FACC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  type metadata accessor for RawStream();
  v1 = swift_allocObject();
  *(_QWORD *)(v0 + 72) = v1;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  sub_21DC208FC();
  sub_21DC71D80();
  sub_21DC719E4();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v2;
  *v2 = v0;
  v2[1] = sub_21DC3FB98;
  return sub_21DC1B3B4();
}

uint64_t sub_21DC3FB98()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21DC3FBFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  void *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  id v12;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v17 = *(_BYTE *)(v0 + 99);
  v15 = *(_BYTE *)(v0 + 98);
  v16 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v14 = *(_QWORD *)(v0 + 48);
  v4 = *(_BYTE *)(v0 + 97);
  v5 = *(_BYTE *)(v0 + 96);
  v6 = *(void **)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 32);
  v8 = *(uint64_t **)(v0 + 16);
  v9 = sub_21DC714C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v1, 1, 1, v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9BC8);
  v8[3] = v10;
  v8[4] = (uint64_t)&off_24E1A61D0;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v8);
  sub_21DC3FE28(v1, (uint64_t)boxed_opaque_existential_1 + *(int *)(v10 + 56));
  *boxed_opaque_existential_1 = v2;
  boxed_opaque_existential_1[1] = (uint64_t)v6;
  boxed_opaque_existential_1[2] = v7;
  *((_BYTE *)boxed_opaque_existential_1 + 24) = v5 & 1;
  boxed_opaque_existential_1[4] = v3;
  *((_BYTE *)boxed_opaque_existential_1 + 40) = v4 & 1;
  boxed_opaque_existential_1[6] = v14;
  *((_BYTE *)boxed_opaque_existential_1 + 56) = v15 & 1;
  boxed_opaque_existential_1[8] = v16;
  *((_BYTE *)boxed_opaque_existential_1 + 72) = v17 & 1;
  v12 = v6;
  sub_21DC3FE70(v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21DC3FD30()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id InstrumentationStreamsFactory.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id InstrumentationStreamsFactory.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InstrumentationStreamsFactory();
  return objc_msgSendSuper2(&v2, sel_init);
}

id InstrumentationStreamsFactory.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InstrumentationStreamsFactory();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_21DC3FE28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_253F35F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21DC3FE70(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_253F35F70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for InstrumentationStreamsFactory()
{
  return objc_opt_self();
}

_UNKNOWN **sub_21DC3FED0()
{
  return &off_24E1A61D0;
}

uint64_t sub_21DC3FEE0(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  char v15;
  void (*v16)(char *, uint64_t);
  double v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;

  v4 = sub_21DC715F4();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v20 - v11;
  if (a1 && a2)
  {
    v13 = a1;
    v14 = a2;
    sub_21DC7178C();
    sub_21DC7178C();
    v15 = sub_21DC715D0();
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v9, v4);
    v16(v12, v4);
    if ((v15 & 1) != 0)
    {
      v17 = (double)(unint64_t)sub_21DC717BC();
      v18 = sub_21DC717BC();

      *(double *)&result = (v17 - (double)(unint64_t)v18) / 1000000000.0;
      return result;
    }

  }
  *(double *)&result = 0.0;
  return result;
}

uint64_t sub_21DC4002C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t result;

  v6 = sub_21DC71618();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  *a3 = v6;
  return result;
}

void BiomeAsyncSequence.makeAsyncIterator()()
{
  type metadata accessor for BiomeAsyncSequence.BiomeAsyncIterator();
}

void sub_21DC400AC()
{
  swift_allocObject();
  swift_unknownObjectRetain();
  sub_21DC40134();
}

uint64_t sub_21DC400C8()
{
  uint64_t v0;

  return v0;
}

void type metadata accessor for BiomeAsyncSequence.BiomeAsyncIterator()
{
  JUMPOUT(0x22079D8ECLL);
}

void sub_21DC400E8()
{
  swift_allocObject();
  sub_21DC40134();
}

uint64_t sub_21DC40114()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_21DC40124()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_21DC4012C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result;
  return result;
}

void sub_21DC40134()
{
  type metadata accessor for BiomeAsyncSequence.BiomeAsyncSubscriber();
}

uint64_t sub_21DC40164(objc_class *a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  id v4;

  v3 = objc_msgSend(objc_allocWithZone(a1), sel_init);
  *(_QWORD *)(v2 + 16) = v3;
  *(_BYTE *)(v2 + 24) = 0;
  v4 = v3;
  objc_msgSend(v1, sel_subscribe_, v4);

  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_21DC401BC()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  *(_QWORD *)(v1 + 32) = *v0;
  return swift_task_switch();
}

uint64_t sub_21DC401DC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 24);
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  if ((sub_21DC71C48() & 1) != 0)
  {
    *(_BYTE *)(v1 + 24) = 1;
    sub_21DC41454();
    sub_21DC71C18();
    sub_21DC416A4();
    swift_allocError();
    sub_21DC71A08();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v3;
    swift_getAssociatedTypeWitness();
    sub_21DC71D8C();
    *v3 = v0;
    v3[1] = sub_21DC4032C;
    return sub_21DC720C8();
  }
}

uint64_t sub_21DC4032C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21DC40390()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 16))
    *(_BYTE *)(*(_QWORD *)(v0 + 24) + 24) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21DC403B0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21DC403BC(uint64_t a1)
{
  sub_21DC4173C(a1);
}

uint64_t BiomeAsyncSequence.BiomeAsyncIterator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = v0;
  v2 = *(void **)(v0 + 16);
  sub_21DC41454();

  return v1;
}

uint64_t BiomeAsyncSequence.BiomeAsyncIterator.__deallocating_deinit()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  sub_21DC41454();

  return swift_deallocClassInstance();
}

uint64_t sub_21DC4043C(uint64_t a1)
{
  _QWORD **v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_21DC404A8;
  v4[3] = v3;
  v4[4] = *v3;
  return swift_task_switch();
}

uint64_t sub_21DC404A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

void sub_21DC40504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  __int128 v7;

  *(_QWORD *)(v5 + 56) = a4;
  *(_QWORD *)(v5 + 64) = swift_task_alloc();
  v7 = *(_OWORD *)(a5 + 96);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(a5 + 80);
  *(_OWORD *)(v5 + 32) = v7;
  type metadata accessor for BiomeAsyncSequence.BiomeAsyncIterator();
}

uint64_t sub_21DC40570()
{
  uint64_t v0;
  _QWORD *v1;

  *v1 = v0;
  v1[1] = sub_21DC405B4;
  return sub_21DC71C24();
}

uint64_t sub_21DC405B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    **(_QWORD **)(v2 + 56) = *(_QWORD *)(v2 + 48);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

void sub_21DC40610(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x70);
  v3 = *(void **)((char *)v1 + v2);
  *(_QWORD *)((char *)v1 + v2) = a1;
  sub_21DC427D0(v3);
}

uint64_t sub_21DC40638@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  char *v3;
  uint64_t v4;

  v3 = (char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x78);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  sub_21DC71D8C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553A9048);
  sub_21DC71C0C();
  v4 = sub_21DC71D8C();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_21DC40710(uint64_t a1)
{
  _QWORD *v1;
  char *v3;
  uint64_t v4;

  v3 = (char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x78);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  sub_21DC71D8C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553A9048);
  sub_21DC71C0C();
  v4 = sub_21DC71D8C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_21DC407F0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = (_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x80));
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

id sub_21DC40850(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  id v12;
  int v13;
  id result;
  uint64_t v15;

  v3 = *MEMORY[0x24BEE4EA0] & *v1;
  swift_getAssociatedTypeWitness();
  sub_21DC71D8C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553A9048);
  v4 = sub_21DC71C0C();
  v5 = sub_21DC71D8C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v15 - v8;
  v10 = *(_QWORD *)(v3 + 112);
  v11 = *(void **)((char *)v1 + v10);
  *(_QWORD *)((char *)v1 + v10) = a1;
  v12 = a1;
  sub_21DC427D0(v11);
  sub_21DC40638((uint64_t)v9);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v9, 1, v4);
  result = (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  if (v13 != 1)
    return objc_msgSend(v12, sel_requestDemand_, BPSDemandMax());
  return result;
}

void sub_21DC409A4(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_21DC40850(v4);

}

uint64_t sub_21DC409F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t DynamicType;
  uint64_t v28;
  _QWORD v29[4];

  swift_getAssociatedTypeWitness();
  sub_21DC71D8C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553A9048);
  v2 = sub_21DC71C0C();
  v25 = sub_21DC71D8C();
  v3 = *(_QWORD *)(v25 - 8);
  v5 = MEMORY[0x24BDAC7A8](v25, v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v5, v8);
  v11 = (char *)&v25 - v10;
  v12 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v9, v13);
  v26 = (char *)&v25 - v14;
  sub_21DC13D44(a1, (uint64_t)v29);
  if (swift_dynamicCast())
  {
    swift_beginAccess();
    v15 = sub_21DC71BDC();
    swift_unknownObjectRetain();
    sub_21DC71BD0();
    swift_endAccess();
    sub_21DC40638((uint64_t)v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v2) == 1)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v25);
    }
    else
    {
      v22 = v26;
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v26, v11, v2);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v7, 1, 1, v2);
      sub_21DC40710((uint64_t)v7);
      swift_beginAccess();
      MEMORY[0x22079D964](MEMORY[0x24BEE12E8], v15);
      sub_21DC71CF0();
      swift_endAccess();
      v29[0] = v28;
      sub_21DC71C00();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v22, v2);
    }
    v23 = *MEMORY[0x24BE0C988];
    swift_unknownObjectRelease();
  }
  else
  {
    sub_21DC13D44(a1, (uint64_t)v29);
    v16 = sub_21DC719C0();
    v17 = sub_21DC71D20();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v28 = v19;
      *(_DWORD *)v18 = 136315138;
      __swift_project_boxed_opaque_existential_1(v29, v29[3]);
      DynamicType = swift_getDynamicType();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9E38);
      v20 = sub_21DC71AE0();
      DynamicType = sub_21DC42180(v20, v21, &v28);
      sub_21DC71DA4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
      _os_log_impl(&dword_21DC05000, v16, v17, "BiomeAsyncSubscriber ignored unexpected input type %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22079DA24](v19, -1, -1);
      MEMORY[0x22079DA24](v18, -1, -1);

    }
    else
    {

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    }
    return BPSDemandMax();
  }
  return v23;
}

uint64_t sub_21DC40E20(void *a1)
{
  id v2;
  uint64_t v3;
  _BYTE v5[32];

  swift_unknownObjectRetain();
  v2 = a1;
  sub_21DC71DC8();
  swift_unknownObjectRelease();
  v3 = sub_21DC409F8((uint64_t)v5);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v3;
}

void sub_21DC40E88(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  _QWORD *v27;
  id *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  int v33;
  uint64_t v34;
  int v35;
  char *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  id v52;
  unint64_t v53;
  unint64_t v54;

  v2 = v1;
  swift_getAssociatedTypeWitness();
  sub_21DC71D8C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553A9048);
  v4 = sub_21DC71C0C();
  v51 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v48 = (char *)&v48 - v6;
  v49 = sub_21DC71D8C();
  v7 = *(_QWORD *)(v49 - 8);
  v9 = MEMORY[0x24BDAC7A8](v49, v8);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v9, v12);
  v15 = (char *)&v48 - v14;
  v17 = MEMORY[0x24BDAC7A8](v13, v16);
  v19 = (char *)&v48 - v18;
  v21 = MEMORY[0x24BDAC7A8](v17, v20);
  v50 = (char *)&v48 - v22;
  MEMORY[0x24BDAC7A8](v21, v23);
  v25 = (char *)&v48 - v24;
  v26 = objc_msgSend(a1, sel_state);
  if (v26 == (id)1)
  {
    v31 = objc_msgSend(a1, sel_error);
    if (!v31)
    {
      sub_21DC40638((uint64_t)v15);
      v34 = v51;
      v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48))(v15, 1, v4);
      v27 = (_QWORD *)MEMORY[0x24BEE4EA0];
      if (v35)
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v49);
      }
      else
      {
        v42 = v48;
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v48, v15, v4);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v49);
        sub_21DC427E0();
        v43 = swift_allocError();
        *v44 = 0xD00000000000003BLL;
        v44[1] = 0x800000021DC79E60;
        v53 = v43;
        sub_21DC71BF4();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v42, v4);
      }
      v30 = v34;
      goto LABEL_21;
    }
    v32 = v31;
    sub_21DC40638((uint64_t)v19);
    v30 = v51;
    v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48))(v19, 1, v4);
    v27 = (_QWORD *)MEMORY[0x24BEE4EA0];
    if (v33)
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v49);
      goto LABEL_21;
    }
    v41 = v48;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v48, v19, v4);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v49);
    v53 = (unint64_t)v32;
    sub_21DC71BF4();
    goto LABEL_18;
  }
  if (v26)
  {
    sub_21DC40638((uint64_t)v11);
    v30 = v51;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v11, 1, v4))
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v49);
    }
    else
    {
      v36 = v48;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v48, v11, v4);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v49);
      v53 = 0;
      v54 = 0xE000000000000000;
      sub_21DC71EC4();
      swift_bridgeObjectRelease();
      v53 = 0xD00000000000001DLL;
      v54 = 0x800000021DC79E40;
      v52 = objc_msgSend(a1, sel_state);
      type metadata accessor for BPSCompletionState(0);
      sub_21DC71AE0();
      sub_21DC71B10();
      swift_bridgeObjectRelease();
      v37 = v53;
      v38 = v54;
      sub_21DC427E0();
      v39 = swift_allocError();
      *v40 = v37;
      v40[1] = v38;
      v53 = v39;
      sub_21DC71BF4();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v4);
    }
    v27 = (_QWORD *)MEMORY[0x24BEE4EA0];
    goto LABEL_21;
  }
  v27 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v28 = (id *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x80));
  swift_beginAccess();
  v52 = *v28;
  v29 = sub_21DC71BDC();
  MEMORY[0x22079D964](MEMORY[0x24BEE12E0], v29);
  if ((sub_21DC71CD8() & 1) != 0)
  {
    sub_21DC40638((uint64_t)v25);
    v30 = v51;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v25, 1, v4))
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v49);
LABEL_21:
      v45 = (uint64_t)v50;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v50, 1, 1, v4);
      sub_21DC40710(v45);
      goto LABEL_22;
    }
    v41 = v48;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v48, v25, v4);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v49);
    v52 = 0;
    sub_21DC71C00();
LABEL_18:
    (*(void (**)(char *, uint64_t))(v30 + 8))(v41, v4);
    goto LABEL_21;
  }
LABEL_22:
  v46 = *(_QWORD *)((*v27 & *v2) + 0x70);
  v47 = *(void **)((char *)v2 + v46);
  *(_QWORD *)((char *)v2 + v46) = 1;
  sub_21DC427D0(v47);
}

void sub_21DC41400(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_21DC40E88(v4);

}

uint64_t sub_21DC41454()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[2];

  v1 = v0;
  v2 = *MEMORY[0x24BEE4EA0] & *v0;
  v27[0] = swift_getAssociatedTypeWitness();
  sub_21DC71D8C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553A9048);
  v3 = sub_21DC71C0C();
  v4 = sub_21DC71D8C();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v7, v10);
  v13 = (char *)v27 - v12;
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)v27 - v15;
  v17 = 0;
  v18 = *(_QWORD *)(v2 + 112);
  v19 = *(void **)((char *)v0 + v18);
  if ((unint64_t)v19 >= 2)
    v17 = v19;
  *(_QWORD *)((char *)v1 + v18) = 1;
  sub_21DC427D0(v19);
  objc_msgSend(v17, sel_cancel, v27[0]);
  sub_21DC40638((uint64_t)v16);
  v20 = *(_QWORD *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v13, 1, 1, v3);
  sub_21DC40710((uint64_t)v13);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v9, v16, v4);
  v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v9, 1, v3);
  v22 = v5;
  v23 = v4;
  if (v21 != 1)
  {
    sub_21DC71C18();
    sub_21DC416A4();
    v24 = swift_allocError();
    sub_21DC71A08();
    v27[1] = v24;
    sub_21DC71BF4();
    v22 = v20;
    v23 = v3;
  }
  (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v23);
  v25 = sub_21DC71BAC();
  sub_21DC407F0(v25);

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v16, v4);
}

unint64_t sub_21DC416A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2553A9C08[0];
  if (!qword_2553A9C08[0])
  {
    v1 = sub_21DC71C18();
    result = MEMORY[0x22079D964](MEMORY[0x24BEE6848], v1);
    atomic_store(result, qword_2553A9C08);
  }
  return result;
}

uint64_t sub_21DC416EC()
{
  return MEMORY[0x24BEE3F20];
}

void sub_21DC416F8()
{
  JUMPOUT(0x22079D964);
}

void sub_21DC41708(void *a1)
{
  id v1;

  v1 = a1;
  sub_21DC41454();

}

void sub_21DC4173C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  void *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v21 = a1;
  v3 = (_QWORD *)MEMORY[0x24BEE4EA0];
  swift_getAssociatedTypeWitness();
  sub_21DC71D8C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553A9048);
  v4 = sub_21DC71C0C();
  v5 = sub_21DC71D8C();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)&v21 - v12;
  sub_21DC40638((uint64_t)&v21 - v12);
  v14 = *(_QWORD *)(v4 - 8);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
  if (v15 == 1)
  {
    v16 = *(void **)((char *)v2 + *(_QWORD *)((*v3 & *v2) + 0x70));
    if (v16)
    {
      if (v16 == (void *)1)
      {
        v17 = (_QWORD *)((char *)v2 + *(_QWORD *)((*v3 & *v2) + 0x80));
        swift_beginAccess();
        v22 = *v17;
        v18 = sub_21DC71BDC();
        MEMORY[0x22079D964](MEMORY[0x24BEE12E0], v18);
        if ((sub_21DC71CD8() & 1) != 0)
        {
          v22 = 0;
        }
        else
        {
          swift_beginAccess();
          MEMORY[0x22079D964](MEMORY[0x24BEE12E8], v18);
          sub_21DC71CF0();
          swift_endAccess();
          v22 = v23;
        }
        sub_21DC71C00();
      }
      else
      {
        v19 = (_QWORD *)((char *)v2 + *(_QWORD *)((*v3 & *v2) + 0x80));
        swift_beginAccess();
        v22 = *v19;
        sub_21DC427C0(v16);
        v20 = sub_21DC71BDC();
        MEMORY[0x22079D964](MEMORY[0x24BEE12E0], v20);
        if ((sub_21DC71CD8() & 1) != 0)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v10, v21, v4);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v4);
          sub_21DC40710((uint64_t)v10);
          objc_msgSend(v16, sel_requestDemand_, BPSDemandMax());
        }
        else
        {
          swift_beginAccess();
          MEMORY[0x22079D964](MEMORY[0x24BEE12E8], v20);
          sub_21DC71CF0();
          swift_endAccess();
          v22 = v23;
          sub_21DC71C00();
        }
        sub_21DC427D0(v16);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v10, v21, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v4);
      sub_21DC40710((uint64_t)v10);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_21DC41AE4()
{
  sub_21DC41454();
  type metadata accessor for BiomeAsyncSequence.BiomeAsyncSubscriber();
}

id sub_21DC41B20(objc_class *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, objc_super a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  void *v17;
  objc_super v19;

  v19.receiver = v17;
  v19.super_class = a1;
  return -[objc_class dealloc](&v19, sel_dealloc);
}

void sub_21DC41B44(void *a1)
{
  id v1;

  v1 = a1;
  sub_21DC41AE4();
}

uint64_t sub_21DC41B68(_QWORD *a1)
{
  _QWORD *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v2 = (_QWORD *)MEMORY[0x24BEE4EA0];
  sub_21DC427D0(*(id *)((char *)a1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *a1) + 0x70)));
  v3 = (char *)a1 + *(_QWORD *)((*v2 & *a1) + 0x78);
  swift_getAssociatedTypeWitness();
  sub_21DC71D8C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553A9048);
  sub_21DC71C0C();
  v4 = sub_21DC71D8C();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  v5 = (char *)a1 + *(_QWORD *)((*v2 & *a1) + 0x88);
  v6 = sub_21DC719D8();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

void sub_21DC41C7C()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = (_QWORD *)MEMORY[0x24BEE4EA0];
  *(_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x70)) = 0;
  v2 = (char *)v0 + *(_QWORD *)((*v1 & *v0) + 0x78);
  swift_getAssociatedTypeWitness();
  sub_21DC71D8C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553A9048);
  v3 = sub_21DC71C0C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = *(_QWORD *)((*v1 & *v0) + 0x80);
  v5 = v0;
  *(_QWORD *)((char *)v0 + v4) = sub_21DC71BAC();
  sub_21DC208FC();
  sub_21DC71D80();
  sub_21DC719E4();

  type metadata accessor for BiomeAsyncSequence.BiomeAsyncSubscriber();
}

id sub_21DC41DEC(objc_class *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, objc_super a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  void *v23;
  objc_super v25;

  v25.receiver = v23;
  v25.super_class = a1;
  return -[objc_class init](&v25, sel_init);
}

void sub_21DC41E1C()
{
  sub_21DC41C7C();
}

void sub_21DC41E3C()
{
  BiomeAsyncSequence.makeAsyncIterator()();
}

uint64_t sub_21DC41E54(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_unknownObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t sub_21DC41E74()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for BiomeAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BiomeAsyncSequence);
}

uint64_t sub_21DC41E88()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for BiomeAsyncSequence.BiomeAsyncIterator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BiomeAsyncSequence.BiomeAsyncIterator.next()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 160) + *(_QWORD *)(*(_QWORD *)v0 + 160));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21DC0D980;
  return v4();
}

uint64_t sub_21DC41F38()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  swift_getAssociatedTypeWitness();
  sub_21DC71D8C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2553A9048);
  sub_21DC71C0C();
  result = sub_21DC71D8C();
  if (v1 <= 0x3F)
  {
    result = sub_21DC719D8();
    if (v2 <= 0x3F)
      return swift_initClassMetadata2();
  }
  return result;
}

void type metadata accessor for BiomeAsyncSequence.BiomeAsyncSubscriber()
{
  JUMPOUT(0x22079D8ECLL);
}

uint64_t sub_21DC4203C()
{
  return swift_allocateGenericValueMetadata();
}

_QWORD *sub_21DC42044(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void sub_21DC4207C(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **sub_21DC42094(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  v5 = v4;

  return a1;
}

void **sub_21DC42114(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

void type metadata accessor for BiomeAsyncSequence.BiomeAsyncSubscriber.SubscriptionState()
{
  JUMPOUT(0x22079D8ECLL);
}

uint64_t sub_21DC42180(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_21DC42250(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_21DC13D44((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_21DC13D44((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_21DC42250(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_21DC71DB0();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_21DC42408(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_21DC71EF4();
  if (!v8)
  {
    sub_21DC71FA8();
    __break(1u);
LABEL_17:
    result = sub_21DC72008();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_21DC42408(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_21DC4249C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_21DC42674(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_21DC42674(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_21DC4249C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_21DC42610(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_21DC71ED0();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_21DC71FA8();
      __break(1u);
LABEL_10:
      v2 = sub_21DC71B1C();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_21DC72008();
    __break(1u);
LABEL_14:
    result = sub_21DC71FA8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_21DC42610(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9E40);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_21DC42674(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9E40);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_21DC72008();
  __break(1u);
  return result;
}

id sub_21DC427C0(id result)
{
  if ((unint64_t)result >= 2)
    return result;
  return result;
}

void sub_21DC427D0(id a1)
{
  if ((unint64_t)a1 >= 2)

}

unint64_t sub_21DC427E0()
{
  unint64_t result;

  result = qword_2553A9E30;
  if (!qword_2553A9E30)
  {
    result = MEMORY[0x22079D964](&protocol conformance descriptor for InstrumentationStreamsError, &type metadata for InstrumentationStreamsError);
    atomic_store(result, (unint64_t *)&qword_2553A9E30);
  }
  return result;
}

id sub_21DC42828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  void *v13;
  void *v14;
  id v15;

  v10 = sub_21DC71588();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  v13 = 0;
  if (v12(a1, 1, v10) != 1)
  {
    v13 = (void *)sub_21DC71540();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  }
  if (v12(a2, 1, v10) == 1)
  {
    v14 = 0;
  }
  else
  {
    v14 = (void *)sub_21DC71540();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
  }
  v15 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithStartDate_endDate_maxEvents_lastN_reversed_, v13, v14, a3, a4, a5 & 1);

  return v15;
}

uint64_t sub_21DC42938@<X0>(char a1@<W1>, int a2@<W3>, uint64_t a3@<X4>, int a4@<W5>, uint64_t a5@<X6>, int a6@<W7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, _QWORD, uint64_t, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  id v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v53[4];
  char *v54;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[4];

  v59 = a6;
  v60 = a5;
  v56 = a2;
  v57 = a4;
  v58 = a3;
  v62 = a7;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8668);
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61, v10);
  v54 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A81A8);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v14, v17);
  v20 = (char *)v53 - v19;
  v22 = MEMORY[0x24BDAC7A8](v18, v21);
  v24 = (char *)v53 - v23;
  v26 = MEMORY[0x24BDAC7A8](v22, v25);
  v28 = (char *)v53 - v27;
  v30 = MEMORY[0x24BDAC7A8](v26, v29);
  v32 = (char *)v53 - v31;
  MEMORY[0x24BDAC7A8](v30, v33);
  v35 = (char *)v53 - v34;
  v36 = swift_allocObject();
  v53[3] = v36;
  *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
  v53[2] = v36 + 16;
  if ((a1 & 1) != 0)
  {
    v38 = sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v32, 1, 1, v38);
    goto LABEL_5;
  }
  v53[0] = a9;
  v37 = v28;
  sub_21DC7151C();
  v38 = sub_21DC71588();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56);
  v40(v32, 0, 1, v38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38) == 1)
  {
    v28 = v37;
LABEL_5:
    sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v35, 1, 1, v38);
    sub_21DC0892C((uint64_t)v32);
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v35, v32, v38);
  v40(v35, 0, 1, v38);
  v28 = v37;
LABEL_7:
  if ((v56 & 1) != 0)
  {
    v43 = sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v24, 1, 1, v43);
    goto LABEL_11;
  }
  v41 = v35;
  v42 = v28;
  sub_21DC7151C();
  v43 = sub_21DC71588();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56);
  v45(v24, 0, 1, v43);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v24, 1, v43) == 1)
  {
    v28 = v42;
    v35 = v41;
LABEL_11:
    sub_21DC71588();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v28, 1, 1, v43);
    sub_21DC0892C((uint64_t)v24);
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v42, v24, v43);
  v45(v42, 0, 1, v43);
  v28 = v42;
  v35 = v41;
LABEL_13:
  sub_21DC0896C((uint64_t)v35, (uint64_t)v20);
  sub_21DC0896C((uint64_t)v28, (uint64_t)v16);
  if ((v57 & 1) != 0)
    v46 = 0;
  else
    v46 = v58;
  if ((v59 & 1) != 0)
    v47 = 0;
  else
    v47 = v60;
  sub_21DC07D04();
  v48 = sub_21DC42828((uint64_t)v20, (uint64_t)v16, v46, v47, 0);
  sub_21DC71918();
  sub_21DC433B4();
  swift_bridgeObjectRetain();
  sub_21DC7196C();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v63, v63[3]);
  swift_retain();
  sub_21DC719FC();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  v49 = v54;
  v50 = v55;
  swift_beginAccess();
  type metadata accessor for AnteroEvent();
  swift_bridgeObjectRetain();
  sub_21DC71B7C();
  swift_bridgeObjectRelease();
  sub_21DC16C48();
  v51 = v61;
  sub_21DC71618();
  sub_21DC71660();

  (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v51);
  sub_21DC0892C((uint64_t)v28);
  sub_21DC0892C((uint64_t)v35);
  return swift_release();
}

uint64_t sub_21DC42FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2553A9F28);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A81A8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_21DC71588();
  v13 = *(_QWORD *)(v12 - 8);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v18);
  v20 = (char *)&v26 - v19;
  sub_21DC718DC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    return sub_21DC0892C((uint64_t)v11);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v20, v11, v12);
  v22 = sub_21DC7190C();
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v7, a1, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v7, 0, 1, v22);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v20, v12);
  v24 = objc_allocWithZone((Class)type metadata accessor for AnteroEvent());
  AnteroEvent.init(intelligenceFlowEvent:timestamp:)((uint64_t)v7, (uint64_t)v17);
  v25 = swift_beginAccess();
  MEMORY[0x22079CE84](v25);
  if (*(_QWORD *)((*(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_21DC71BA0();
  sub_21DC71BC4();
  sub_21DC71B94();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v20, v12);
}

uint64_t sub_21DC43230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams16TranscriptStream_logger;
  v2 = sub_21DC719D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_21DC43280()
{
  return type metadata accessor for TranscriptStream();
}

uint64_t type metadata accessor for TranscriptStream()
{
  uint64_t result;

  result = qword_2553A9E70;
  if (!qword_2553A9E70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21DC432C4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21DC719D8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_21DC43338(_BYTE *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *(_BYTE *)(*v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams16TranscriptStream_name);
}

uint64_t sub_21DC43350@<X0>(char a1@<W1>, char a2@<W3>, uint64_t a3@<X4>, char a4@<W5>, uint64_t a5@<X6>, char a6@<W7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9)
{
  return sub_21DC42938(a1 & 1, a2 & 1, a3, a4 & 1, a5, a6 & 1, a7, a8, a9);
}

uint64_t sub_21DC43390()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_21DC433B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2553A9F20;
  if (!qword_2553A9F20)
  {
    v1 = sub_21DC71918();
    result = MEMORY[0x22079D964](MEMORY[0x24BE597D8], v1);
    atomic_store(result, (unint64_t *)&qword_2553A9F20);
  }
  return result;
}

uint64_t sub_21DC433FC(uint64_t a1)
{
  uint64_t v1;

  return sub_21DC42FF4(a1, v1);
}

uint64_t sub_21DC43404()
{
  void *v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  id v15;

  v1 = v0;
  v2 = sub_21DC43918();
  v3 = sub_21DC26320();
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_10;
  v4 = sub_21DC0A464(v2);
  if ((v5 & 1) == 0)
    goto LABEL_10;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = sub_21DC089B4(v6);
  swift_bridgeObjectRelease();
  if (!v7)
    return v7;
  v8 = v1;
  v9 = sub_21DC0BFDC(v7, (uint64_t)v8);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(qword_2553A8CD8);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v9;
  v12 = MEMORY[0x24BDAC7A8](inited, v11);
  v13 = sub_21DC43954(v12, (uint64_t (*)(void))sub_21DC43B24);
  if (!(v13 >> 62))
  {
    result = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_6;
LABEL_10:
    swift_bridgeObjectRelease();
    return 0;
  }
  result = sub_21DC71FCC();
  if (!result)
    goto LABEL_10;
LABEL_6:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v15 = (id)MEMORY[0x22079D208](0, v13);
    goto LABEL_9;
  }
  if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(id *)(v13 + 32);
LABEL_9:
    v7 = (uint64_t)v15;
    swift_bridgeObjectRelease();
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC43584()
{
  void *v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  id v15;

  v1 = v0;
  v2 = sub_21DC43918();
  v3 = sub_21DC26320();
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_10;
  v4 = sub_21DC0A464(v2);
  if ((v5 & 1) == 0)
    goto LABEL_10;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = sub_21DC089B4(v6);
  swift_bridgeObjectRelease();
  if (!v7)
    return v7;
  v8 = v1;
  v9 = sub_21DC0BFDC(v7, (uint64_t)v8);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(qword_2553A8CD8);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v9;
  v12 = MEMORY[0x24BDAC7A8](inited, v11);
  v13 = sub_21DC43954(v12, (uint64_t (*)(void))sub_21DC43B00);
  if (!(v13 >> 62))
  {
    result = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_6;
LABEL_10:
    swift_bridgeObjectRelease();
    return 0;
  }
  result = sub_21DC71FCC();
  if (!result)
    goto LABEL_10;
LABEL_6:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v15 = (id)MEMORY[0x22079D208](0, v13);
    goto LABEL_9;
  }
  if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(id *)(v13 + 32);
LABEL_9:
    v7 = (uint64_t)v15;
    swift_bridgeObjectRelease();
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC43704(void *a1, uint64_t a2, SEL *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, sel_cdmRequestContext);
  if (!v9)
    return 0;
  v10 = v9;
  v11 = objc_msgSend(v9, *a3);

  if (!v11)
    return 0;
  v12 = objc_msgSend(a1, sel_eventMetadata);
  if (!v12)
    goto LABEL_7;
  v13 = v12;
  v14 = objc_msgSend(v12, sel_trpId);

  if (!v14)
    goto LABEL_7;
  sub_21DC71CFC();

  v15 = sub_21DC715F4();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15) == 1)
  {
    sub_21DC19DF4((uint64_t)v8);
LABEL_7:
    sub_21DC17048();
    v18 = v17;
    goto LABEL_8;
  }
  v20 = sub_21DC715A0();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v15);
  v23 = sub_21DC17048();
  v18 = v24;
  if (!v22)
  {
LABEL_8:
    if (v18)
    {
      v19 = 0;
LABEL_19:
      swift_bridgeObjectRelease();
      return v19;
    }
    goto LABEL_17;
  }
  if (!v24)
  {
    v19 = 0;
    goto LABEL_19;
  }
  if (v20 == v23 && v24 == v22)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v25 = sub_21DC720A4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = 0;
  if ((v25 & 1) != 0)
  {
LABEL_17:
    sub_21DC17048();
    if (v26)
    {
      v19 = 1;
      goto LABEL_19;
    }
    return 0;
  }
  return v19;
}

unint64_t sub_21DC43918()
{
  unint64_t result;

  result = qword_2553A8490;
  if (!qword_2553A8490)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2553A8490);
  }
  return result;
}

uint64_t sub_21DC43954(uint64_t a1, uint64_t (*a2)(void))
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v15;

  v15 = MEMORY[0x24BEE4AF8];
  swift_beginAccess();
  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (v3 >> 62)
    goto LABEL_17;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      while ((v3 & 0xC000000000000001) != 0)
      {
        v6 = (id)MEMORY[0x22079D208](v5, v3);
LABEL_9:
        v7 = v6;
        v8 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_16;
        sub_21DC43918();
        v9 = sub_21DC71750();
        if (v9 && (v10 = (void *)v9, v11 = a2(), v10, (v11 & 1) != 0))
        {
          sub_21DC71F00();
          sub_21DC71F30();
          sub_21DC71F3C();
          sub_21DC71F0C();
        }
        else
        {

        }
        ++v5;
        if (v8 == v4)
        {
          v12 = v15;
          goto LABEL_19;
        }
      }
      if (v5 < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      swift_bridgeObjectRetain();
      v4 = sub_21DC71FCC();
      swift_bridgeObjectRelease();
      if (!v4)
        goto LABEL_18;
    }
    v6 = *(id *)(v3 + 8 * v5 + 32);
    goto LABEL_9;
  }
LABEL_18:
  v12 = MEMORY[0x24BEE4AF8];
LABEL_19:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_21DC43B00(void *a1)
{
  uint64_t v1;

  return sub_21DC43704(a1, *(_QWORD *)(v1 + 16), (SEL *)&selRef_ended) & 1;
}

uint64_t sub_21DC43B24(void *a1)
{
  uint64_t v1;

  return sub_21DC43704(a1, *(_QWORD *)(v1 + 16), (SEL *)&selRef_startedOrChanged) & 1;
}

uint64_t sub_21DC43B48()
{
  return swift_initClassMetadata2();
}

uint64_t sub_21DC43B8C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for KeyedItemBuilder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for KeyedItemBuilder);
}

uint64_t sub_21DC43BC4(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;

  v11 = MEMORY[0x24BEE4AF8];
  swift_beginAccess();
  v2 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (v2 >> 62)
    goto LABEL_16;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      while ((v2 & 0xC000000000000001) != 0)
      {
        v5 = (id)MEMORY[0x22079D208](v4, v2);
LABEL_9:
        v6 = v5;
        v7 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_15;
        sub_21DC13C88(0, &qword_2553A9FB0);
        v8 = (void *)sub_21DC71750();
        if (v8)
        {

          sub_21DC71F00();
          sub_21DC71F30();
          sub_21DC71F3C();
          sub_21DC71F0C();
        }
        else
        {

        }
        ++v4;
        if (v7 == v3)
        {
          v9 = v11;
          goto LABEL_18;
        }
      }
      if (v4 < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      v3 = sub_21DC71FCC();
      swift_bridgeObjectRelease();
      if (!v3)
        goto LABEL_17;
    }
    v5 = *(id *)(v2 + 8 * v4 + 32);
    goto LABEL_9;
  }
LABEL_17:
  v9 = MEMORY[0x24BEE4AF8];
LABEL_18:
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_21DC43D68@<X0>(uint64_t a1@<X8>)
{
  return sub_21DC43D98(sub_21DC70B90, &qword_2553A9A50, &qword_2553A9A58, a1);
}

uint64_t sub_21DC43D80@<X0>(uint64_t a1@<X8>)
{
  return sub_21DC43D98(sub_21DC70D20, &qword_2553A9A60, &qword_2553A9A68, a1);
}

uint64_t sub_21DC43D98@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  void *v4;
  void *v8;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  uint64_t inited;
  unint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  void *v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t result;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t *v45;

  v8 = v4;
  v10 = a1();
  if (v10)
  {
    v11 = (void *)v10;
    v12 = (void *)sub_21DC71714();

  }
  else
  {
    v12 = 0;
  }
  v13 = sub_21DC13C88(0, (unint64_t *)&qword_2553AA420);
  v14 = sub_21DC26320();
  v45 = a3;
  if (*(_QWORD *)(v14 + 16))
  {
    v15 = sub_21DC0A464(v13);
    if ((v16 & 1) != 0)
    {
      v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v18 = sub_21DC089B4(v17);
      swift_bridgeObjectRelease();
      if (!v18)
        goto LABEL_14;
      v19 = v8;
      v20 = sub_21DC0BFDC(v18, (uint64_t)v19);
      swift_bridgeObjectRelease();

      __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8338);
      inited = swift_initStackObject();
      *(_QWORD *)(inited + 16) = v20;
      v22 = sub_21DC43BC4(inited);
      if (v22 >> 62)
      {
        if (sub_21DC71FCC())
          goto LABEL_9;
      }
      else if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_9:
        if ((v22 & 0xC000000000000001) != 0)
        {
          v23 = (id)MEMORY[0x22079D208](0, v22);
        }
        else
        {
          if (!*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_48;
          }
          v23 = *(id *)(v22 + 32);
        }
        v24 = v23;
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_14:
  v25 = sub_21DC25A4C();
  if (v25)
  {
    v24 = (void *)v25;
LABEL_16:
    v26 = (void *)sub_21DC71714();

    goto LABEL_18;
  }
  v26 = 0;
LABEL_18:
  v19 = (id)sub_21DC3FEE0(v12, v26);
  LOBYTE(v20) = v27;

  v12 = (void *)a1();
  v28 = sub_21DC26320();
  if (!*(_QWORD *)(v28 + 16))
    goto LABEL_30;
  v29 = sub_21DC0A464(v13);
  if ((v30 & 1) == 0)
    goto LABEL_30;
  v31 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v29);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = sub_21DC089B4(v31);
  swift_bridgeObjectRelease();
  if (!v32)
  {
LABEL_31:
    v38 = sub_21DC25A4C();
    goto LABEL_32;
  }
  v33 = v8;
  v34 = sub_21DC0BFDC(v32, (uint64_t)v33);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8338);
  v35 = swift_initStackObject();
  *(_QWORD *)(v35 + 16) = v34;
  v22 = sub_21DC43BC4(v35);
  if (!(v22 >> 62))
  {
    result = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_23;
    goto LABEL_30;
  }
  result = sub_21DC71FCC();
  if (!result)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
LABEL_23:
  if ((v22 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v37 = *(id *)(v22 + 32);
    goto LABEL_26;
  }
LABEL_48:
  v37 = (id)MEMORY[0x22079D208](0, v22);
LABEL_26:
  v38 = (uint64_t)v37;
  swift_bridgeObjectRelease();
LABEL_32:
  v39 = sub_21DC17048();
  v41 = *a2;
  v42 = *v45;
  if ((v20 & 1) != 0)
  {
    v43 = 0xD000000000000015;
    if (v12)
    {
      if (v38)
        v43 = 0xD000000000000016;
      else
        v43 = 0x20676E697373694DLL;
      v44 = 0x800000021DC7A0E0;
      if (!v38)
        v44 = 0xEB00000000646E45;
    }
    else
    {
      if (v38)
        v43 = 0x20676E697373694DLL;
      v44 = 0x800000021DC7A0C0;
      if (v38)
        v44 = 0xED00007472617453;
    }
  }
  else
  {
    v43 = 0;
    v44 = 0;
  }
  *(_QWORD *)a4 = v19;
  *(_BYTE *)(a4 + 8) = v20 & 1;
  *(_QWORD *)(a4 + 16) = v43;
  *(_QWORD *)(a4 + 24) = v44;
  *(_QWORD *)(a4 + 32) = v12;
  *(_QWORD *)(a4 + 40) = v38;
  *(_QWORD *)(a4 + 48) = 0;
  *(_BYTE *)(a4 + 56) = 0;
  *(_QWORD *)(a4 + 64) = v39;
  *(_QWORD *)(a4 + 72) = v40;
  *(_QWORD *)(a4 + 80) = v41;
  *(_QWORD *)(a4 + 88) = v42;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21DC4416C@<X0>(uint64_t a1@<X8>)
{
  return sub_21DC44908(sub_21DC70B90, sub_21DC70D20, &qword_2553A9A80, &qword_2553A9A88, a1);
}

uint64_t sub_21DC4418C@<X0>(uint64_t a1@<X8>)
{
  return sub_21DC44EE0(sub_21DC70E10, (uint64_t (*)(void))sub_21DC4E5E4, &qword_2553A9A70, &qword_2553A9A78, a1);
}

uint64_t sub_21DC441AC@<X0>(uint64_t a1@<X8>)
{
  return sub_21DC44908(sub_21DC70B90, sub_21DC1758C, &qword_2553A9A90, &qword_2553A9A98, a1);
}

uint64_t sub_21DC441CC@<X0>(uint64_t a1@<X8>)
{
  return sub_21DC44908(sub_21DC43404, sub_21DC43584, &qword_2553A9AA0, &qword_2553A9AA8, a1);
}

uint64_t sub_21DC441EC@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  uint64_t result;
  void *v8;
  void *v9;
  char v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  uint64_t inited;
  unint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char v27;
  char v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  char v37;
  BOOL v38;
  void *v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  id v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;

  v2 = v1;
  v4 = (id)sub_21DC174AC();
  v5 = (void *)sub_21DC70D20();
  if (v4)
  {
    if (v5)
    {
      v6 = v5;
      v4 = v4;
      result = sub_21DC71714();
      if (!result)
      {
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
      v8 = (void *)result;
      result = sub_21DC71714();
      if (!result)
      {
LABEL_72:
        __break(1u);
        goto LABEL_73;
      }
      v9 = (void *)result;
      sub_21DC717C8();
      sub_21DC19E34();
      v10 = sub_21DC71A5C();

      if ((v10 & 1) != 0)
      {

      }
      else
      {

        v4 = v6;
      }
    }
  }
  else
  {
    if (!v5)
    {
      v11 = 0;
      goto LABEL_11;
    }
    v4 = v5;
  }
  v11 = (void *)sub_21DC71714();

LABEL_11:
  v12 = sub_21DC13C88(0, (unint64_t *)&qword_2553AA420);
  v13 = sub_21DC26320();
  if (!*(_QWORD *)(v13 + 16) || (v14 = sub_21DC0A464(v12), (v15 & 1) == 0))
  {
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  v16 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = sub_21DC089B4(v16);
  swift_bridgeObjectRelease();
  if (v17)
  {
    v18 = v2;
    v19 = sub_21DC0BFDC(v17, (uint64_t)v18);
    swift_bridgeObjectRelease();

    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8338);
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = v19;
    v21 = sub_21DC43BC4(inited);
    if (v21 >> 62)
    {
      result = sub_21DC71FCC();
      if (result)
        goto LABEL_16;
    }
    else
    {
      result = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (result)
      {
LABEL_16:
        if ((v21 & 0xC000000000000001) != 0)
        {
          v22 = (id)MEMORY[0x22079D208](0, v21);
        }
        else
        {
          if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_70:
            __break(1u);
            goto LABEL_71;
          }
          v22 = *(id *)(v21 + 32);
        }
        v23 = v22;
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
    goto LABEL_22;
  }
LABEL_23:
  v24 = sub_21DC25A4C();
  if (!v24)
  {
    v25 = 0;
    goto LABEL_27;
  }
  v23 = (void *)v24;
LABEL_25:
  v25 = (void *)sub_21DC71714();

LABEL_27:
  v26 = sub_21DC3FEE0(v11, v25);
  v28 = v27;

  v29 = (void *)sub_21DC174AC();
  v30 = (void *)sub_21DC70D20();
  v31 = v30;
  if (v29)
  {
    if (v30)
    {
      v59 = v28;
      v60 = v26;
      v32 = v12;
      v33 = v30;
      v34 = v29;
      result = sub_21DC71714();
      if (!result)
      {
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
      v35 = (void *)result;
      result = sub_21DC71714();
      if (!result)
      {
LABEL_74:
        __break(1u);
        return result;
      }
      v36 = (void *)result;
      sub_21DC717C8();
      sub_21DC19E34();
      v37 = sub_21DC71A5C();

      v38 = (v37 & 1) == 0;
      if ((v37 & 1) != 0)
        v39 = v34;
      else
        v39 = v33;
      if ((v37 & 1) != 0)
        v40 = v33;
      else
        v40 = v34;
      if (!v38)
        v31 = v29;

      v12 = v32;
      v26 = v60;
      v28 = v59;
    }
    else
    {
      v31 = v29;
    }
  }
  v41 = sub_21DC26320();
  if (!*(_QWORD *)(v41 + 16))
    goto LABEL_51;
  v42 = sub_21DC0A464(v12);
  if ((v43 & 1) == 0)
    goto LABEL_51;
  v44 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v42);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v45 = sub_21DC089B4(v44);
  swift_bridgeObjectRelease();
  if (!v45)
  {
LABEL_52:
    v52 = sub_21DC25A4C();
    goto LABEL_53;
  }
  v46 = v28;
  v47 = v2;
  v48 = sub_21DC0BFDC(v45, (uint64_t)v47);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8338);
  v49 = swift_initStackObject();
  *(_QWORD *)(v49 + 16) = v48;
  v50 = sub_21DC43BC4(v49);
  if (!(v50 >> 62))
  {
    result = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
    v28 = v46;
    if (result)
      goto LABEL_46;
    goto LABEL_51;
  }
  result = sub_21DC71FCC();
  v28 = v46;
  if (!result)
  {
LABEL_51:
    swift_bridgeObjectRelease();
    goto LABEL_52;
  }
LABEL_46:
  if ((v50 & 0xC000000000000001) != 0)
  {
    v51 = (id)MEMORY[0x22079D208](0, v50);
    goto LABEL_49;
  }
  if (!*(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_70;
  v51 = *(id *)(v50 + 32);
LABEL_49:
  v52 = (uint64_t)v51;
  swift_bridgeObjectRelease();
LABEL_53:
  v53 = sub_21DC17048();
  v56 = qword_2553A9AB0;
  v55 = unk_2553A9AB8;
  if ((v28 & 1) != 0)
  {
    v57 = 0xD000000000000015;
    if (v31)
    {
      if (v52)
        v57 = 0xD000000000000016;
      else
        v57 = 0x20676E697373694DLL;
      v58 = 0x800000021DC7A0E0;
      if (!v52)
        v58 = 0xEB00000000646E45;
    }
    else
    {
      if (v52)
        v57 = 0x20676E697373694DLL;
      v58 = 0x800000021DC7A0C0;
      if (v52)
        v58 = 0xED00007472617453;
    }
  }
  else
  {
    v57 = 0;
    v58 = 0;
  }
  *(_QWORD *)a1 = v26;
  *(_BYTE *)(a1 + 8) = v28 & 1;
  *(_QWORD *)(a1 + 16) = v57;
  *(_QWORD *)(a1 + 24) = v58;
  *(_QWORD *)(a1 + 32) = v31;
  *(_QWORD *)(a1 + 40) = v52;
  *(_QWORD *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = v53;
  *(_QWORD *)(a1 + 72) = v54;
  *(_QWORD *)(a1 + 80) = v56;
  *(_QWORD *)(a1 + 88) = v55;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21DC44710@<X0>(uint64_t a1@<X8>)
{
  return sub_21DC44EE0(sub_21DC1B07C, sub_21DC70E10, &qword_2553A9AD0, &qword_2553A9AD8, a1);
}

uint64_t sub_21DC44730@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;

  v2 = sub_21DC16F48();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (void *)sub_21DC71714();

  }
  else
  {
    v4 = 0;
  }
  v5 = (void *)sub_21DC170E0();
  v6 = sub_21DC171E0();
  v7 = (void *)v6;
  if (v5)
  {
    if (v6)
    {

      v8 = 0;
      v5 = v7;
LABEL_10:

      goto LABEL_11;
    }
LABEL_9:
    v8 = (void *)sub_21DC71714();
    goto LABEL_10;
  }
  if (v6)
  {
    v5 = (void *)v6;
    goto LABEL_9;
  }
  v8 = 0;
LABEL_11:
  v9 = sub_21DC3FEE0(v4, v8);
  v11 = v10;

  v12 = sub_21DC16F48();
  v13 = (void *)sub_21DC170E0();
  v14 = sub_21DC171E0();
  v15 = (void *)v14;
  if (v13)
  {
    if (v14)
    {

      v15 = 0;
    }
    else
    {
      v15 = v13;
    }
  }
  v16 = sub_21DC17048();
  v19 = qword_2553A9AC0;
  v18 = unk_2553A9AC8;
  if (v15)
    v20 = 0x20676E697373694DLL;
  else
    v20 = 0xD000000000000015;
  v21 = 0x800000021DC7A0C0;
  if (v15)
    v21 = 0xED00007472617453;
  *(_QWORD *)a1 = v9;
  *(_BYTE *)(a1 + 8) = v11 & 1;
  if (v15)
    v22 = 0xD000000000000016;
  else
    v22 = 0x20676E697373694DLL;
  v23 = 0x800000021DC7A0E0;
  if (!v15)
    v23 = 0xEB00000000646E45;
  if (!v12)
  {
    v22 = v20;
    v23 = v21;
  }
  if ((v11 & 1) == 0)
  {
    v22 = 0;
    v23 = 0;
  }
  *(_QWORD *)(a1 + 16) = v22;
  *(_QWORD *)(a1 + 24) = v23;
  *(_QWORD *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 40) = v15;
  *(_QWORD *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = v16;
  *(_QWORD *)(a1 + 72) = v17;
  *(_QWORD *)(a1 + 80) = v19;
  *(_QWORD *)(a1 + 88) = v18;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21DC448E8@<X0>(uint64_t a1@<X8>)
{
  return sub_21DC44908(sub_21DC4E75C, (uint64_t (*)(void))sub_21DC4E8BC, &qword_2553A9AE0, &qword_2553A9AE8, a1);
}

uint64_t sub_21DC44908@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;

  v10 = a1();
  if (v10)
  {
    v11 = (void *)v10;
    v12 = (void *)sub_21DC71714();

  }
  else
  {
    v12 = 0;
  }
  v13 = a2();
  if (v13)
  {
    v14 = (void *)v13;
    v15 = (void *)sub_21DC71714();

  }
  else
  {
    v15 = 0;
  }
  v16 = sub_21DC3FEE0(v12, v15);
  v18 = v17;

  v19 = a1();
  v20 = a2();
  v21 = sub_21DC17048();
  v23 = *a3;
  v24 = *a4;
  if (v20)
    v25 = 0x20676E697373694DLL;
  else
    v25 = 0xD000000000000015;
  v26 = 0x800000021DC7A0C0;
  if (v20)
    v26 = 0xED00007472617453;
  *(_QWORD *)a5 = v16;
  *(_BYTE *)(a5 + 8) = v18 & 1;
  if (v20)
    v27 = 0xD000000000000016;
  else
    v27 = 0x20676E697373694DLL;
  v28 = 0x800000021DC7A0E0;
  if (!v20)
    v28 = 0xEB00000000646E45;
  if (!v19)
  {
    v27 = v25;
    v28 = v26;
  }
  if ((v18 & 1) == 0)
  {
    v27 = 0;
    v28 = 0;
  }
  *(_QWORD *)(a5 + 16) = v27;
  *(_QWORD *)(a5 + 24) = v28;
  *(_QWORD *)(a5 + 32) = v19;
  *(_QWORD *)(a5 + 40) = v20;
  *(_QWORD *)(a5 + 48) = 0;
  *(_BYTE *)(a5 + 56) = 0;
  *(_QWORD *)(a5 + 64) = v21;
  *(_QWORD *)(a5 + 72) = v22;
  *(_QWORD *)(a5 + 80) = v23;
  *(_QWORD *)(a5 + 88) = v24;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21DC44A88@<X0>(uint64_t a1@<X8>)
{
  return sub_21DC44EE0(sub_21DC1B090, sub_21DC1B09C, &qword_2553A9AF0, &qword_2553A9AF8, a1);
}

uint64_t sub_21DC44AA8@<X0>(uint64_t a1@<X8>)
{
  return sub_21DC44AD8(sub_21DC1B054, &qword_2553A9B00, &qword_2553A9B08, a1);
}

uint64_t sub_21DC44AC0@<X0>(uint64_t a1@<X8>)
{
  return sub_21DC44AD8(sub_21DC1B218, &qword_2553A9B10, &qword_2553A9B18, a1);
}

uint64_t sub_21DC44AD8@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  void *v4;
  uint64_t *v5;
  void *v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  uint64_t inited;
  unint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t result;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;

  v8 = v4;
  v10 = sub_21DC13C88(0, (unint64_t *)&qword_2553AA420);
  v11 = sub_21DC26320();
  if (!*(_QWORD *)(v11 + 16) || (v12 = sub_21DC0A464(v10), (v13 & 1) == 0))
  {
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = sub_21DC089B4(v14);
  swift_bridgeObjectRelease();
  if (v15)
  {
    v16 = v8;
    v17 = sub_21DC0BFDC(v15, (uint64_t)v16);
    swift_bridgeObjectRelease();

    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8338);
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = v17;
    v19 = sub_21DC43BC4(inited);
    if (v19 >> 62)
    {
      if (sub_21DC71FCC())
        goto LABEL_6;
    }
    else if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      if ((v19 & 0xC000000000000001) != 0)
      {
        v20 = (id)MEMORY[0x22079D208](0, v19);
      }
      else
      {
        if (!*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_47;
        }
        v20 = *(id *)(v19 + 32);
      }
      v21 = v20;
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    goto LABEL_11;
  }
LABEL_12:
  v22 = sub_21DC25A4C();
  if (!v22)
  {
    v23 = 0;
    goto LABEL_16;
  }
  v21 = (void *)v22;
LABEL_14:
  v23 = (void *)sub_21DC71714();

LABEL_16:
  v24 = a1();
  if (v24)
  {
    v25 = (void *)v24;
    v5 = a3;
    v26 = (void *)sub_21DC71714();

  }
  else
  {
    v5 = a3;
    v26 = 0;
  }
  v17 = sub_21DC3FEE0(v23, v26);
  LOBYTE(a3) = v27;

  v28 = sub_21DC26320();
  if (!*(_QWORD *)(v28 + 16))
    goto LABEL_29;
  v29 = sub_21DC0A464(v10);
  if ((v30 & 1) == 0)
    goto LABEL_29;
  v31 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v29);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = sub_21DC089B4(v31);
  swift_bridgeObjectRelease();
  if (!v32)
  {
LABEL_30:
    v39 = sub_21DC25A4C();
    v38 = v39;
    goto LABEL_31;
  }
  v33 = v8;
  v34 = sub_21DC0BFDC(v32, (uint64_t)v33);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8338);
  v35 = swift_initStackObject();
  *(_QWORD *)(v35 + 16) = v34;
  v19 = sub_21DC43BC4(v35);
  if (!(v19 >> 62))
  {
    result = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_24;
    goto LABEL_29;
  }
  result = sub_21DC71FCC();
  if (!result)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
LABEL_24:
  if ((v19 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v37 = *(id *)(v19 + 32);
    goto LABEL_27;
  }
LABEL_47:
  v37 = (id)MEMORY[0x22079D208](0, v19);
LABEL_27:
  v38 = (uint64_t)v37;
  v39 = swift_bridgeObjectRelease();
LABEL_31:
  v40 = ((uint64_t (*)(uint64_t))a1)(v39);
  v41 = *a2;
  v42 = *v5;
  if ((a3 & 1) != 0)
  {
    v43 = 0xD000000000000015;
    if (v38)
    {
      if (v40)
        v43 = 0xD000000000000016;
      else
        v43 = 0x20676E697373694DLL;
      v44 = 0x800000021DC7A0E0;
      if (!v40)
        v44 = 0xEB00000000646E45;
    }
    else
    {
      if (v40)
        v43 = 0x20676E697373694DLL;
      v44 = 0x800000021DC7A0C0;
      if (v40)
        v44 = 0xED00007472617453;
    }
  }
  else
  {
    v43 = 0;
    v44 = 0;
  }
  *(_QWORD *)a4 = v17;
  *(_BYTE *)(a4 + 8) = a3 & 1;
  *(_QWORD *)(a4 + 16) = v43;
  *(_QWORD *)(a4 + 24) = v44;
  *(_QWORD *)(a4 + 32) = v38;
  *(_QWORD *)(a4 + 40) = v40;
  *(_QWORD *)(a4 + 48) = 0;
  *(_BYTE *)(a4 + 56) = 0;
  *(_QWORD *)(a4 + 64) = 0;
  *(_QWORD *)(a4 + 72) = 0;
  *(_QWORD *)(a4 + 80) = v41;
  *(_QWORD *)(a4 + 88) = v42;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21DC44EA0@<X0>(uint64_t a1@<X8>)
{
  return sub_21DC44EE0(sub_21DC4EA34, sub_21DC4EA50, &qword_2553A9B20, &qword_2553A9B28, a1);
}

uint64_t sub_21DC44EC0@<X0>(uint64_t a1@<X8>)
{
  return sub_21DC44EE0(sub_21DC4EA6C, sub_21DC4EA88, &qword_2553A9B30, &qword_2553A9B38, a1);
}

uint64_t sub_21DC44EE0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;

  v10 = a1();
  if (v10)
  {
    v11 = (void *)v10;
    v12 = (void *)sub_21DC71714();

  }
  else
  {
    v12 = 0;
  }
  v13 = a2();
  if (v13)
  {
    v14 = (void *)v13;
    v15 = (void *)sub_21DC71714();

  }
  else
  {
    v15 = 0;
  }
  v16 = sub_21DC3FEE0(v12, v15);
  v18 = v17;

  v19 = a1();
  v20 = a2();
  v21 = *a3;
  v22 = *a4;
  if (v20)
    v23 = 0x20676E697373694DLL;
  else
    v23 = 0xD000000000000015;
  v24 = 0x800000021DC7A0C0;
  if (v20)
    v24 = 0xED00007472617453;
  *(_QWORD *)a5 = v16;
  *(_BYTE *)(a5 + 8) = v18 & 1;
  if (v20)
    v25 = 0xD000000000000016;
  else
    v25 = 0x20676E697373694DLL;
  v26 = 0x800000021DC7A0E0;
  if (!v20)
    v26 = 0xEB00000000646E45;
  if (!v19)
  {
    v25 = v23;
    v26 = v24;
  }
  if ((v18 & 1) == 0)
  {
    v25 = 0;
    v26 = 0;
  }
  *(_QWORD *)(a5 + 16) = v25;
  *(_QWORD *)(a5 + 24) = v26;
  *(_QWORD *)(a5 + 32) = v19;
  *(_QWORD *)(a5 + 40) = v20;
  *(_QWORD *)(a5 + 48) = 0;
  *(_BYTE *)(a5 + 56) = 0;
  *(_QWORD *)(a5 + 64) = 0;
  *(_QWORD *)(a5 + 72) = 0;
  *(_QWORD *)(a5 + 80) = v21;
  *(_QWORD *)(a5 + 88) = v22;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21DC45058@<X0>(uint64_t a1@<X8>)
{
  return sub_21DC45088((uint64_t (*)(void))sub_21DC17834, (uint64_t *)&unk_2553A9B40, (uint64_t)&unk_2553A9B48, a1);
}

uint64_t sub_21DC45070@<X0>(uint64_t a1@<X8>)
{
  return sub_21DC45088(sub_21DC1B068, (uint64_t *)&unk_2553A9B50, (uint64_t)&unk_2553A9B58, a1);
}

uint64_t sub_21DC45088@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t result;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;

  v38 = a2;
  v39 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = ((uint64_t (*)(uint64_t))a1)(v8);
  if (v11)
  {
    v12 = (void *)v11;
    v13 = (void *)sub_21DC71714();

  }
  else
  {
    v13 = 0;
  }
  v14 = sub_21DC17F0C();
  if (v14)
  {
    v15 = (void *)v14;
    v16 = (void *)sub_21DC71714();

  }
  else
  {
    v16 = 0;
  }
  v37 = sub_21DC3FEE0(v13, v16);
  v18 = v17;

  v19 = a1();
  v20 = sub_21DC17F0C();
  v21 = sub_21DC17F0C();
  if (!v21)
    goto LABEL_14;
  v22 = (void *)v21;
  sub_21DC13C88(0, &qword_2553A8488);
  v23 = (void *)sub_21DC71750();
  if (!v23)
  {

    goto LABEL_14;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, sel_eventMetadata);
  v26 = v25;
  if (!v25)
  {

    goto LABEL_15;
  }
  v27 = objc_msgSend(v25, sel_requestId);

  if (v27)
  {
    sub_21DC71CFC();

    v28 = sub_21DC715F4();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v10, 1, v28) == 1)
    {
      sub_21DC19DF4((uint64_t)v10);

LABEL_14:
      v26 = 0;
LABEL_15:
      v27 = 0;
      goto LABEL_16;
    }
    v36 = v29;
    v26 = (void *)sub_21DC715A0();
    v27 = v35;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v28);

  }
  else
  {

    v26 = 0;
  }
LABEL_16:
  v30 = v37;
  v31 = *v38;
  if ((v18 & 1) != 0)
  {
    if (v19)
    {
      if (v20)
        v32 = 0xD000000000000016;
      else
        v32 = 0x20676E697373694DLL;
      if (v20)
        v33 = 0x800000021DC7A0E0;
      else
        v33 = 0xEB00000000646E45;
    }
    else
    {
      if (v20)
        v32 = 0x20676E697373694DLL;
      else
        v32 = 0xD000000000000015;
      if (v20)
        v33 = 0xED00007472617453;
      else
        v33 = 0x800000021DC7A0C0;
    }
  }
  else
  {
    v32 = 0;
    v33 = 0;
  }
  result = swift_bridgeObjectRetain();
  *(_QWORD *)a4 = v30;
  *(_BYTE *)(a4 + 8) = v18 & 1;
  *(_QWORD *)(a4 + 16) = v32;
  *(_QWORD *)(a4 + 24) = v33;
  *(_QWORD *)(a4 + 32) = v19;
  *(_QWORD *)(a4 + 40) = v20;
  *(_QWORD *)(a4 + 48) = 0;
  *(_BYTE *)(a4 + 56) = 0;
  *(_QWORD *)(a4 + 64) = v26;
  *(_QWORD *)(a4 + 72) = v27;
  *(_QWORD *)(a4 + 80) = v31;
  *(_QWORD *)(a4 + 88) = result;
  return result;
}

uint64_t OrderedEvent.outerType.getter()
{
  uint64_t result;
  void *v1;
  uint64_t ObjectType;

  result = sub_21DC716D8();
  if (result)
  {
    v1 = (void *)result;
    ObjectType = swift_getObjectType();

    return ObjectType;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t OrderedEvent.innerType.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t ObjectType;

  v0 = sub_21DC716E4();
  if (!v0)
    return 0;
  v1 = (void *)v0;
  ObjectType = swift_getObjectType();

  return ObjectType;
}

uint64_t sub_21DC453F0()
{
  uint64_t result;
  void *v1;
  uint64_t ObjectType;

  result = sub_21DC716D8();
  if (result)
  {
    v1 = (void *)result;
    ObjectType = swift_getObjectType();

    return ObjectType;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21DC4542C()
{
  uint64_t v0;
  void *v1;
  uint64_t ObjectType;

  v0 = sub_21DC716E4();
  if (!v0)
    return 0;
  v1 = (void *)v0;
  ObjectType = swift_getObjectType();

  return ObjectType;
}

uint64_t dispatch thunk of FilterableEvent.outerType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FilterableEvent.innerType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

id AnteroEvent.__allocating_init(event:timestamp:)(uint64_t a1, double a2)
{
  objc_class *v2;
  id v5;
  id v6;

  v5 = objc_allocWithZone(v2);
  v6 = sub_21DC47424(a1, a2);
  swift_release();
  return v6;
}

id AnteroEvent.__allocating_init(telemetryEvent:writeTimestamp:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return AnteroEvent.init(telemetryEvent:writeTimestamp:)(a1, a2);
}

uint64_t sub_21DC4550C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a7 == a3 && a8 == a4 || (sub_21DC720A4() & 1) != 0) && a5 == a1 && a6 == a2)
    return 0;
  else
    return sub_21DC720A4();
}

BOOL sub_21DC455DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v12;

  if ((a7 == a3 && a8 == a4 || (sub_21DC720A4() & 1) != 0) && a5 == a1 && a6 == a2)
    v12 = 0;
  else
    v12 = sub_21DC720A4();
  return (v12 & 1) == 0;
}

BOOL sub_21DC456A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v12;

  if ((a3 == a7 && a4 == a8 || (sub_21DC720A4() & 1) != 0) && a1 == a5 && a2 == a6)
    v12 = 0;
  else
    v12 = sub_21DC720A4();
  return (v12 & 1) == 0;
}

id AnteroEvent.__allocating_init(gfiEvent:timestamp:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return AnteroEvent.init(gfiEvent:timestamp:)(a1);
}

id AnteroEvent.__allocating_init(intelligenceFlowEvent:timestamp:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return AnteroEvent.init(intelligenceFlowEvent:timestamp:)(a1, a2);
}

uint64_t sub_21DC457EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  sub_21DC71B10();
  swift_bridgeObjectRetain();
  sub_21DC71B10();
  swift_bridgeObjectRelease();
  return a3;
}

uint64_t sub_21DC45864(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_21DC45894(a1, a2, a3, a4, sub_21DC47354);
}

uint64_t sub_21DC45870(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_21DC45894(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21DC455DC);
}

uint64_t sub_21DC4587C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_21DC45894(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21DC456A4);
}

uint64_t sub_21DC45888(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_21DC45894(a1, a2, a3, a4, sub_21DC4550C);
}

uint64_t sub_21DC45894(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_21DC458B4()
{
  uint64_t *v0;

  return sub_21DC457EC(*v0, v0[1], v0[2]);
}

uint64_t sub_21DC458C0()
{
  sub_21DC72134();
  swift_bridgeObjectRetain();
  sub_21DC71B04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21DC71B04();
  swift_bridgeObjectRelease();
  return sub_21DC72158();
}

uint64_t sub_21DC45944()
{
  swift_bridgeObjectRetain();
  sub_21DC71B04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21DC71B04();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21DC459B4()
{
  sub_21DC72134();
  swift_bridgeObjectRetain();
  sub_21DC71B04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21DC71B04();
  swift_bridgeObjectRelease();
  return sub_21DC72158();
}

uint64_t sub_21DC45A34(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_21DC720A4(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_21DC720A4();
  }
  return result;
}

void sub_21DC45AC4()
{
  strcpy((char *)&qword_2553A9FB8, "RAW_SESSION_ID");
  unk_2553A9FC7 = -18;
}

void sub_21DC45AF4()
{
  strcpy((char *)&qword_2553AC620, "LOGICAL_CLOCK");
  *(_WORD *)&algn_2553AC628[6] = -4864;
}

void sub_21DC45B24()
{
  strcpy((char *)&qword_2553A9FC8, "TELEMETRY_ID");
  unk_2553A9FD5 = 0;
  unk_2553A9FD6 = -5120;
}

id AnteroEvent.init(telemetryEvent:writeTimestamp:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  int v45;
  uint64_t v46;
  void *object;
  Swift::String_optional v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  void *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  unint64_t v88;
  unint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  objc_class *v92;
  id v93;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t countAndFlagsBits;
  objc_super v111;

  v105 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9FD8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v104 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9FE0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v97 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v98 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_21DC715F4();
  v99 = *(_QWORD *)(v13 - 8);
  v100 = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v96 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8688);
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v109 = (uint64_t)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)&v95 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A81A8);
  MEMORY[0x24BDAC7A8](v23, v24);
  v26 = (char *)&v95 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = &v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_transcriptProto];
  v28 = type metadata accessor for TranscriptProtoEvent();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
  v29 = &v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_link];
  *(_OWORD *)v29 = 0u;
  *((_OWORD *)v29 + 1) = 0u;
  v30 = &v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_joiningLinks];
  *(_QWORD *)&v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_joiningLinks] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_selfEvent] = 0;
  v31 = &v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_timestamp];
  *(_QWORD *)v31 = 0;
  v31[8] = 1;
  v32 = &v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_gfiEvent];
  v33 = sub_21DC719B4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 1, 1, v33);
  v34 = (uint64_t)&v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_telemetryEvent];
  v35 = sub_21DC718A0();
  v103 = *(_QWORD *)(v35 - 8);
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 56);
  v106 = v35;
  v36(v34, 1, 1);
  v102 = a2;
  sub_21DC07CC0(a2, (uint64_t)v26, (uint64_t *)&unk_2553A81A8);
  v37 = sub_21DC71588();
  v38 = *(_QWORD *)(v37 - 8);
  LODWORD(a2) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48))(v26, 1, v37);
  v101 = v2;
  if ((_DWORD)a2 == 1)
  {
    sub_21DC07C84((uint64_t)v26, (uint64_t *)&unk_2553A81A8);
    v39 = 0;
  }
  else
  {
    sub_21DC71528();
    v39 = v40;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v37);
  }
  *(_QWORD *)v31 = v39;
  v31[8] = 0;
  swift_beginAccess();
  v41 = v105;
  sub_21DC478EC(v105, v34);
  swift_endAccess();
  sub_21DC07CC0(v41, (uint64_t)v22, &qword_2553A8688);
  v42 = v103;
  v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v103 + 48);
  v44 = v106;
  v45 = v43(v22, 1, v106);
  v46 = v100;
  if (v45 == 1)
  {
    sub_21DC07C84((uint64_t)v22, &qword_2553A8688);
    countAndFlagsBits = 0;
    object = 0;
LABEL_11:
    v107 = 0;
    v50 = 0;
    goto LABEL_12;
  }
  v48 = IntelligenceFlowTelemetry.contextId()();
  countAndFlagsBits = v48.value._countAndFlagsBits;
  object = v48.value._object;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v22, v44);
  if (!v48.value._object)
  {
    countAndFlagsBits = 0;
    goto LABEL_11;
  }
  if (qword_2553A7F20 != -1)
    swift_once();
  v49 = qword_2553A9FC8;
  v50 = unk_2553A9FD0;
  v52 = *(_QWORD *)v29;
  v51 = *((_QWORD *)v29 + 1);
  v53 = (void *)*((_QWORD *)v29 + 3);
  v107 = qword_2553A9FC8;
  v108 = v53;
  *(_QWORD *)v29 = countAndFlagsBits;
  *((_QWORD *)v29 + 1) = v48.value._object;
  *((_QWORD *)v29 + 2) = v49;
  *((_QWORD *)v29 + 3) = v50;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_21DC20194(v52, v51);
LABEL_12:
  v54 = v109;
  sub_21DC07CC0(v41, v109, &qword_2553A8688);
  v55 = v106;
  v56 = v43((char *)v54, 1, v106);
  v57 = (uint64_t)v98;
  v108 = object;
  v109 = v50;
  if (v56 == 1)
  {
    v58 = &qword_2553A8688;
LABEL_16:
    sub_21DC07C84(v54, v58);
    v62 = v46;
LABEL_17:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v99 + 56))(v57, 1, 1, v62);
    goto LABEL_18;
  }
  v59 = v54;
  sub_21DC7187C();
  v54 = (uint64_t)v104;
  (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v59, v55);
  v60 = sub_21DC71870();
  v61 = *(_QWORD *)(v60 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v54, 1, v60) == 1)
  {
    v58 = &qword_2553A9FD8;
    goto LABEL_16;
  }
  v78 = (uint64_t)v97;
  sub_21DC71864();
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v54, v60);
  v79 = sub_21DC718C4();
  v80 = *(_QWORD *)(v79 - 8);
  v62 = v46;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79) == 1)
  {
    sub_21DC07C84(v78, &qword_2553A9FE0);
    goto LABEL_17;
  }
  sub_21DC718B8();
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v78, v79);
  v81 = v99;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v99 + 56))(v57, 0, 1, v62);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v57, 1, v62) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v81 + 32))(v96, v57, v62);
    v82 = sub_21DC715A0();
    v84 = v83;
    if (qword_2553A7F10 != -1)
      swift_once();
    v85 = qword_2553A9FB8;
    v86 = unk_2553A9FC0;
    swift_bridgeObjectRetain();
    v87 = sub_21DC14E84(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v89 = v87[2];
    v88 = v87[3];
    if (v89 >= v88 >> 1)
      v87 = sub_21DC14E84((_QWORD *)(v88 > 1), v89 + 1, 1, v87);
    v87[2] = v89 + 1;
    v90 = &v87[4 * v89];
    v90[4] = v82;
    v90[5] = v84;
    v90[6] = v85;
    v90[7] = v86;
    v91 = v87;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v96, v62);
    v63 = v91;
    if (v108)
      goto LABEL_19;
LABEL_35:
    swift_bridgeObjectRelease();
    v77 = v101;

    goto LABEL_36;
  }
LABEL_18:
  sub_21DC07C84(v57, (uint64_t *)&unk_2553A98F0);
  v63 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (!object)
    goto LABEL_35;
LABEL_19:
  v106 = (uint64_t)v63;
  v64 = v63[2];
  if (v64)
  {
    v65 = (uint64_t *)(v106 + 56);
    do
    {
      v67 = *(v65 - 3);
      v66 = *(v65 - 2);
      v69 = *(v65 - 1);
      v68 = *v65;
      swift_beginAccess();
      v70 = *(_QWORD **)v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)v30 = v70;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v70 = sub_21DC14948(0, v70[2] + 1, 1, v70);
        *(_QWORD *)v30 = v70;
      }
      v73 = v70[2];
      v72 = v70[3];
      if (v73 >= v72 >> 1)
      {
        v70 = sub_21DC14948((_QWORD *)(v72 > 1), v73 + 1, 1, v70);
        *(_QWORD *)v30 = v70;
      }
      v65 += 4;
      v70[2] = v73 + 1;
      v74 = &v70[8 * v73];
      v75 = v109;
      v76 = v108;
      v74[4] = countAndFlagsBits;
      v74[5] = v76;
      v74[6] = v107;
      v74[7] = v75;
      v74[8] = v67;
      v74[9] = v66;
      v74[10] = v69;
      v74[11] = v68;
      swift_endAccess();
      --v64;
    }
    while (v64);
  }
  swift_bridgeObjectRelease();
  v77 = v101;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v41 = v105;
LABEL_36:
  v92 = (objc_class *)type metadata accessor for AnteroEvent();
  v111.receiver = v77;
  v111.super_class = v92;
  v93 = objc_msgSendSuper2(&v111, sel_init);
  sub_21DC07C84(v102, (uint64_t *)&unk_2553A81A8);
  sub_21DC07C84(v41, &qword_2553A8688);
  return v93;
}

id AnteroEvent.init(gfiEvent:timestamp:)(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  int v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  unint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _QWORD *v73;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v75;
  unint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  objc_class *v79;
  id v80;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  objc_super v100;

  v2 = v1;
  v95 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v97 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21DC71990();
  v89 = *(_QWORD *)(v6 - 8);
  v90 = v6;
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v93 = (uint64_t *)((char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8, v10);
  v88 = (char *)&v82 - v11;
  v96 = sub_21DC715F4();
  v98 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96, v12);
  v86 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_21DC71588();
  v91 = *(_QWORD *)(v14 - 8);
  v92 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v94 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8FB8);
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v87 = (char *)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v21);
  v23 = (char *)&v82 - v22;
  v24 = sub_21DC719B4();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v26);
  v28 = (char *)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = &v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_transcriptProto];
  v30 = type metadata accessor for TranscriptProtoEvent();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
  v31 = &v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_link];
  *(_OWORD *)v31 = 0u;
  *((_OWORD *)v31 + 1) = 0u;
  v99 = &v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_joiningLinks];
  *(_QWORD *)&v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_joiningLinks] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_selfEvent] = 0;
  v32 = &v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_timestamp];
  *(_QWORD *)v32 = 0;
  v32[8] = 1;
  v33 = (uint64_t)&v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_gfiEvent];
  v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
  v34(&v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_gfiEvent], 1, 1, v24);
  v35 = &v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_telemetryEvent];
  v36 = sub_21DC718A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 1, 1, v36);
  sub_21DC07CC0(v95, (uint64_t)v23, &qword_2553A8FB8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v28, v23, v24);
    v84 = v2;
    v83 = v2;
    sub_21DC71558();
    sub_21DC71528();
    *(_QWORD *)v32 = v38;
    v32[8] = 0;
    v39 = (uint64_t)v87;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v87, v28, v24);
    v34((char *)v39, 0, 1, v24);
    swift_beginAccess();
    sub_21DC47970(v39, v33, &qword_2553A8FB8);
    swift_endAccess();
    v40 = v88;
    v87 = v28;
    sub_21DC7199C();
    v41 = (uint64_t)v97;
    sub_21DC71984();
    v42 = v90;
    v43 = *(void (**)(char *, uint64_t))(v89 + 8);
    v43(v40, v90);
    v44 = v96;
    v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v41, 1, v96);
    v85 = v25;
    if (v45 == 1)
    {
      v46 = v25;
      sub_21DC07C84(v41, (uint64_t *)&unk_2553A98F0);
      v97 = 0;
      v98 = 0;
      v96 = 0;
      v47 = 0;
    }
    else
    {
      v48 = v98;
      v49 = v86;
      (*(void (**)(char *, uint64_t, uint64_t))(v98 + 32))(v86, v41, v44);
      v50 = sub_21DC715A0();
      v51 = v24;
      v53 = v52;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v44);
      v54 = *(_QWORD *)v31;
      v55 = *((_QWORD *)v31 + 1);
      v97 = (char *)v50;
      v98 = v53;
      *(_QWORD *)v31 = v50;
      *((_QWORD *)v31 + 1) = v53;
      v47 = 0x800000021DC7A120;
      *((_QWORD *)v31 + 2) = 0xD000000000000011;
      *((_QWORD *)v31 + 3) = 0x800000021DC7A120;
      v24 = v51;
      v46 = v85;
      swift_bridgeObjectRetain();
      sub_21DC20194(v54, v55);
      v96 = 0xD000000000000011;
    }
    v56 = (char *)v93;
    v57 = v87;
    sub_21DC7199C();
    v58 = sub_21DC71978();
    v60 = v59;
    v43(v56, v42);
    if (v60)
    {
      v61 = sub_21DC14E84(0, 1, 1, MEMORY[0x24BEE4AF8]);
      v63 = v61[2];
      v62 = v61[3];
      v93 = v61;
      if (v63 >= v62 >> 1)
        v93 = sub_21DC14E84((_QWORD *)(v62 > 1), v63 + 1, 1, v93);
      v64 = v93;
      v93[2] = v63 + 1;
      v65 = &v64[4 * v63];
      v65[4] = v58;
      v65[5] = v60;
      v65[6] = 0xD000000000000013;
      v65[7] = 0x800000021DC7A100;
      if (v98)
        goto LABEL_10;
    }
    else
    {
      v93 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v98)
      {
LABEL_10:
        v90 = v24;
        v66 = v93[2];
        if (v66)
        {
          v67 = v93 + 7;
          do
          {
            v68 = *(v67 - 3);
            v69 = *(v67 - 2);
            v71 = *(v67 - 1);
            v70 = *v67;
            v72 = v99;
            swift_beginAccess();
            v73 = *(_QWORD **)v72;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)v72 = v73;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v73 = sub_21DC14948(0, v73[2] + 1, 1, v73);
              *(_QWORD *)v99 = v73;
            }
            v76 = v73[2];
            v75 = v73[3];
            if (v76 >= v75 >> 1)
            {
              v73 = sub_21DC14948((_QWORD *)(v75 > 1), v76 + 1, 1, v73);
              *(_QWORD *)v99 = v73;
            }
            v67 += 4;
            v73[2] = v76 + 1;
            v77 = &v73[8 * v76];
            v78 = v98;
            v77[4] = v97;
            v77[5] = v78;
            v77[6] = v96;
            v77[7] = v47;
            v77[8] = v68;
            v77[9] = v69;
            v77[10] = v71;
            v77[11] = v70;
            swift_endAccess();
            --v66;
          }
          while (v66);
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v24 = v90;
        v46 = v85;
        v57 = v87;
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease();

LABEL_20:
    (*(void (**)(char *, uint64_t))(v91 + 8))(v94, v92);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v57, v24);
    v37 = v95;
    v2 = v84;
    goto LABEL_21;
  }
  sub_21DC07C84((uint64_t)v23, &qword_2553A8FB8);
  v37 = v95;
LABEL_21:
  v79 = (objc_class *)type metadata accessor for AnteroEvent();
  v100.receiver = v2;
  v100.super_class = v79;
  v80 = objc_msgSendSuper2(&v100, sel_init);
  sub_21DC07C84(v37, &qword_2553A8FB8);
  return v80;
}

id AnteroEvent.init(intelligenceFlowEvent:timestamp:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  int v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  objc_class *v69;
  id v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  objc_super v86;

  v81 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9FE8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v85 = (uint64_t)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2553A9F28);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_21DC7190C();
  v12 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v82 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v16);
  v79 = (char *)&v73 - v17;
  v18 = (uint64_t)&v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_transcriptProto];
  v19 = type metadata accessor for TranscriptProtoEvent();
  v83 = *(_QWORD *)(v19 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56))(v18, 1, 1, v19);
  v20 = &v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_link];
  *(_OWORD *)v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  v84 = &v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_joiningLinks];
  *(_QWORD *)&v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_joiningLinks] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_selfEvent] = 0;
  v21 = &v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_timestamp];
  *(_QWORD *)v21 = 0;
  v21[8] = 1;
  v22 = &v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_gfiEvent];
  v23 = sub_21DC719B4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v24 = &v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_telemetryEvent];
  v25 = sub_21DC718A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  v80 = a1;
  sub_21DC07CC0(a1, (uint64_t)v10, qword_2553A9F28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    v28 = v79;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v79, v10, v11);
    v78 = v2;
    v29 = v2;
    sub_21DC71528();
    *(_QWORD *)v21 = v30;
    v21[8] = 0;
    v31 = (uint64_t)v82;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v82, v28, v11);
    v32 = v85;
    sub_21DC2157C(v31, v85);
    swift_beginAccess();
    sub_21DC47970(v32, v18, &qword_2553A9FE8);
    swift_endAccess();
    v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v83 + 48);
    v34 = v33(v18, 1, v19);
    v35 = v28;
    v36 = v19;
    v77 = v29;
    if (v34)
    {
      v82 = 0;
      v83 = 0;
      v85 = 0;
      v37 = 0;
    }
    else
    {
      v75 = v19;
      v76 = (_QWORD *)v18;
      v38 = (uint64_t *)(v18 + *(int *)(v19 + 20));
      v40 = *v38;
      v39 = v38[1];
      v41 = qword_2553A7F10;
      swift_bridgeObjectRetain();
      if (v41 != -1)
        swift_once();
      v42 = qword_2553A9FB8;
      v37 = unk_2553A9FC0;
      v43 = *(_QWORD *)v20;
      v44 = *((_QWORD *)v20 + 1);
      v73 = *((_QWORD *)v20 + 3);
      v74 = v43;
      v82 = (char *)qword_2553A9FB8;
      v83 = v40;
      *(_QWORD *)v20 = v40;
      *((_QWORD *)v20 + 1) = v39;
      *((_QWORD *)v20 + 2) = v42;
      *((_QWORD *)v20 + 3) = v37;
      swift_bridgeObjectRetain_n();
      v85 = v39;
      swift_bridgeObjectRetain();
      sub_21DC20194(v74, v44);
      v36 = v75;
      v18 = (uint64_t)v76;
      v29 = v77;
    }
    if (v33(v18, 1, v36))
      goto LABEL_9;
    v61 = (uint64_t *)(v18 + *(int *)(v36 + 24));
    v63 = *v61;
    v62 = v61[1];
    v64 = HIBYTE(v62) & 0xF;
    if ((v62 & 0x2000000000000000) == 0)
      v64 = v63 & 0xFFFFFFFFFFFFLL;
    if (!v64)
    {
LABEL_9:
      v45 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (!v85)
      {
LABEL_24:
        swift_bridgeObjectRelease();

LABEL_25:
        (*(void (**)(char *, uint64_t))(v12 + 8))(v35, v11);
        v27 = v80;
        v26 = v81;
        v2 = v78;
        goto LABEL_26;
      }
    }
    else
    {
      v65 = v12;
      swift_bridgeObjectRetain();
      v45 = sub_21DC14E84(0, 1, 1, MEMORY[0x24BEE4AF8]);
      v67 = v45[2];
      v66 = v45[3];
      if (v67 >= v66 >> 1)
        v45 = sub_21DC14E84((_QWORD *)(v66 > 1), v67 + 1, 1, v45);
      v45[2] = v67 + 1;
      v68 = &v45[4 * v67];
      v68[4] = v63;
      v68[5] = v62;
      v68[6] = 0xD000000000000013;
      v68[7] = 0x800000021DC7A100;
      v12 = v65;
      if (!v85)
        goto LABEL_24;
    }
    v74 = v12;
    v75 = v11;
    v76 = v45;
    v46 = v45[2];
    if (v46)
    {
      v47 = v76 + 7;
      do
      {
        v49 = *(v47 - 3);
        v48 = *(v47 - 2);
        v51 = *(v47 - 1);
        v50 = *v47;
        v52 = v84;
        swift_beginAccess();
        v53 = *(_QWORD **)v52;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)v52 = v53;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v53 = sub_21DC14948(0, v53[2] + 1, 1, v53);
          *(_QWORD *)v84 = v53;
        }
        v56 = v53[2];
        v55 = v53[3];
        v57 = v83;
        if (v56 >= v55 >> 1)
        {
          v60 = sub_21DC14948((_QWORD *)(v55 > 1), v56 + 1, 1, v53);
          v57 = v83;
          v53 = v60;
          *(_QWORD *)v84 = v60;
        }
        v47 += 4;
        v53[2] = v56 + 1;
        v58 = &v53[8 * v56];
        v59 = v85;
        v58[4] = v57;
        v58[5] = v59;
        v58[6] = v82;
        v58[7] = v37;
        v58[8] = v49;
        v58[9] = v48;
        v58[10] = v51;
        v58[11] = v50;
        swift_endAccess();
        --v46;
      }
      while (v46);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = v74;
    v11 = v75;
    v35 = v79;
    goto LABEL_25;
  }
  sub_21DC07C84((uint64_t)v10, qword_2553A9F28);
  v27 = v80;
  v26 = v81;
LABEL_26:
  v69 = (objc_class *)type metadata accessor for AnteroEvent();
  v86.receiver = v2;
  v86.super_class = v69;
  v70 = objc_msgSendSuper2(&v86, sel_init);
  v71 = sub_21DC71588();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 8))(v26, v71);
  sub_21DC07C84(v27, qword_2553A9F28);
  return v70;
}

id AnteroEvent.init(event:timestamp:)(uint64_t a1, double a2)
{
  id v2;

  v2 = sub_21DC47424(a1, a2);
  swift_release();
  return v2;
}

uint64_t sub_21DC47164@<X0>(uint64_t a1@<X8>)
{
  return sub_21DC4718C(&OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_transcriptProto, &qword_2553A9FE8, a1);
}

uint64_t sub_21DC47178@<X0>(uint64_t a1@<X8>)
{
  return sub_21DC4718C(&OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_gfiEvent, &qword_2553A8FB8, a1);
}

uint64_t sub_21DC4718C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = v3 + *a1;
  swift_beginAccess();
  return sub_21DC07CC0(v6, a3, a2);
}

uint64_t sub_21DC471E8@<X0>(uint64_t a1@<X8>)
{
  return sub_21DC4718C(&OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_telemetryEvent, &qword_2553A8688, a1);
}

uint64_t sub_21DC471FC()
{
  return swift_retain();
}

id AnteroEvent.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AnteroEvent.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AnteroEvent.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnteroEvent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_21DC47354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a3 == a7 && a4 == a8 || (sub_21DC720A4() & 1) != 0) && a1 == a5 && a2 == a6)
    return 0;
  else
    return sub_21DC720A4();
}

id sub_21DC47424(uint64_t a1, double a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  id result;
  void *v50;
  void *ObjCClassFromObject;
  unsigned int v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  objc_class *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  objc_super v79;

  v5 = sub_21DC715F4();
  v77 = *(_QWORD *)(v5 - 8);
  v78 = v5;
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v72 - v11;
  v13 = &v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_transcriptProto];
  v14 = type metadata accessor for TranscriptProtoEvent();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = &v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_link];
  *(_OWORD *)v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  v16 = &v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_joiningLinks];
  *(_QWORD *)&v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_joiningLinks] = MEMORY[0x24BEE4AF8];
  v17 = OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_selfEvent;
  *(_QWORD *)&v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_selfEvent] = 0;
  v18 = &v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_timestamp];
  *(_QWORD *)v18 = 0;
  v18[8] = 1;
  v19 = &v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_gfiEvent];
  v20 = sub_21DC719B4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = &v2[OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_telemetryEvent];
  v22 = sub_21DC718A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  *(_QWORD *)&v2[v17] = a1;
  v23 = v2;
  swift_retain();
  swift_release();
  *(double *)v18 = a2;
  v18[8] = 0;
  if (!a1)
  {
LABEL_18:

    v71 = (objc_class *)type metadata accessor for AnteroEvent();
    v79.receiver = v23;
    v79.super_class = v71;
    return objc_msgSendSuper2(&v79, sel_init);
  }
  v24 = *(id *)(a1 + 24);
  v25 = OrderedEvent.linkedComponentIdentifiers()();
  v27 = v26;

  if (v25)
  {
    v28 = v25;
    sub_21DC717F8();

    v29 = sub_21DC715A0();
    v75 = v30;
    v76 = v29;
    v31 = v78;
    v32 = *(void (**)(char *, uint64_t))(v77 + 8);
    v32(v12, v78);
    v33 = v28;
    sub_21DC717D4();

    v77 = sub_21DC71D44();
    v74 = v34;
    v35 = v27;
    sub_21DC717F8();

    v73 = sub_21DC715A0();
    v37 = v36;
    v32(v12, v31);
    v38 = v35;
    sub_21DC717D4();

    v39 = sub_21DC71D44();
    v41 = v40;
    swift_beginAccess();
    v42 = *(_QWORD **)v16;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v16 = v42;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v42 = sub_21DC14948(0, v42[2] + 1, 1, v42);
      *(_QWORD *)v16 = v42;
    }
    v45 = v42[2];
    v44 = v42[3];
    if (v45 >= v44 >> 1)
    {
      v42 = sub_21DC14948((_QWORD *)(v44 > 1), v45 + 1, 1, v42);
      *(_QWORD *)v16 = v42;
    }
    v42[2] = v45 + 1;
    v46 = &v42[8 * v45];
    v47 = v75;
    v46[4] = v76;
    v46[5] = v47;
    v48 = v74;
    v46[6] = v77;
    v46[7] = v48;
    v46[8] = v73;
    v46[9] = v37;
    v46[10] = v39;
    v46[11] = v41;
    swift_endAccess();

    goto LABEL_18;
  }
  swift_retain();
  result = (id)sub_21DC716D8();
  if (!result)
  {
    __break(1u);
    goto LABEL_20;
  }
  v50 = result;
  ObjCClassFromObject = (void *)swift_getObjCClassFromObject();

  v52 = objc_msgSend(ObjCClassFromObject, sel_joinability);
  if (v52 - 3 >= 2)
  {
    if (v52 == 2 && (v61 = sub_21DC71720()) != 0)
    {
      v62 = (void *)v61;
      sub_21DC717F8();
      v63 = sub_21DC715A0();
      v65 = v64;
      (*(void (**)(char *, uint64_t))(v77 + 8))(v12, v78);
      sub_21DC717D4();
      v66 = sub_21DC71D44();
      v68 = v67;
      swift_release();

      v69 = *(_QWORD *)v15;
      v70 = *((_QWORD *)v15 + 1);
      *(_QWORD *)v15 = v63;
      *((_QWORD *)v15 + 1) = v65;
      *((_QWORD *)v15 + 2) = v66;
      *((_QWORD *)v15 + 3) = v68;
      sub_21DC20194(v69, v70);
    }
    else
    {
      swift_release();
    }
    goto LABEL_18;
  }
  result = (id)sub_21DC71714();
  if (result)
  {
    v53 = result;
    sub_21DC7178C();

    v54 = sub_21DC715A0();
    v56 = v55;
    if (qword_2553A7F18 != -1)
      swift_once();
    v58 = qword_2553AC620;
    v57 = *(_QWORD *)algn_2553AC628;
    swift_bridgeObjectRetain();
    swift_release();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v9, v78);
    v59 = *(_QWORD *)v15;
    v60 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v15 = v54;
    *((_QWORD *)v15 + 1) = v56;
    *((_QWORD *)v15 + 2) = v58;
    *((_QWORD *)v15 + 3) = v57;
    sub_21DC20194(v59, v60);
    goto LABEL_18;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_21DC478EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8688);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for AnteroEvent()
{
  uint64_t result;

  result = qword_2553AA018;
  if (!qword_2553AA018)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21DC47970(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_21DC479B4()
{
  return type metadata accessor for AnteroEvent();
}

void sub_21DC479BC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_21DC47B54(319, &qword_2553AA028, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEvent);
  if (v0 <= 0x3F)
  {
    sub_21DC47B54(319, &qword_2553AA030, (void (*)(uint64_t))MEMORY[0x24BE5A510]);
    if (v1 <= 0x3F)
    {
      sub_21DC47B54(319, &qword_2553AA038, (void (*)(uint64_t))MEMORY[0x24BE587A0]);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for AnteroEvent()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnteroEvent.__allocating_init(telemetryEvent:writeTimestamp:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of AnteroEvent.__allocating_init(gfiEvent:timestamp:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 312))();
}

uint64_t dispatch thunk of AnteroEvent.__allocating_init(intelligenceFlowEvent:timestamp:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 320))();
}

uint64_t dispatch thunk of AnteroEvent.__allocating_init(event:timestamp:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 328))();
}

uint64_t dispatch thunk of AnteroEvent.getTranscriptProto()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of AnteroEvent.getGfiEvent()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x158))();
}

uint64_t dispatch thunk of AnteroEvent.getTelemetryEvent()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x160))();
}

uint64_t dispatch thunk of AnteroEvent.getSelfEvent()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x168))();
}

void sub_21DC47B54(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_21DC71D8C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t destroy for AnteroJoiningLink()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AnteroJoiningLink(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AnteroJoiningLink(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for AnteroJoiningLink(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnteroJoiningLink(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnteroJoiningLink(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnteroJoiningLink()
{
  return &type metadata for AnteroJoiningLink;
}

uint64_t initializeBufferWithCopyOfBuffer for AnteroLink(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for AnteroLink()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AnteroLink(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AnteroLink(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for AnteroLink(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnteroLink(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnteroLink(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnteroLink()
{
  return &type metadata for AnteroLink;
}

unint64_t sub_21DC47FF4()
{
  unint64_t result;

  result = qword_2553AA040;
  if (!qword_2553AA040)
  {
    result = MEMORY[0x22079D964](&unk_21DC75760, &type metadata for AnteroLink);
    atomic_store(result, (unint64_t *)&qword_2553AA040);
  }
  return result;
}

unint64_t SiriTurn.performanceRepresentation()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  _QWORD v20[12];
  _QWORD v21[12];
  _QWORD v22[12];
  _QWORD v23[12];
  _QWORD v24[12];
  _QWORD v25[12];
  _QWORD v26[12];
  _QWORD v27[12];
  _QWORD v28[12];
  _QWORD v29[12];
  _QWORD v30[12];
  _QWORD v31[12];
  _QWORD v32[12];
  _QWORD v33[12];
  _QWORD v34[12];
  _QWORD v35[12];
  _QWORD v36[12];

  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A91A0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_21DC75840;
  v36[0] = 7631475;
  v36[1] = 0xE300000000000000;
  sub_21DC71E88();
  sub_21DC43D68((uint64_t)v20);
  v1 = sub_21DC20C38();
  sub_21DC48658(v20);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A91B0);
  *(_QWORD *)(v0 + 96) = v2;
  *(_QWORD *)(v0 + 72) = v1;
  v36[0] = 1919317365;
  v36[1] = 0xE400000000000000;
  sub_21DC71E88();
  sub_21DC43D80((uint64_t)v21);
  v3 = sub_21DC20C38();
  sub_21DC48658(v21);
  *(_QWORD *)(v0 + 168) = v2;
  *(_QWORD *)(v0 + 144) = v3;
  v36[0] = 6582373;
  v36[1] = 0xE300000000000000;
  sub_21DC71E88();
  sub_21DC4416C((uint64_t)v22);
  v4 = sub_21DC20C38();
  sub_21DC48658(v22);
  *(_QWORD *)(v0 + 240) = v2;
  *(_QWORD *)(v0 + 216) = v4;
  strcpy((char *)v36, "asrAudioLag");
  HIDWORD(v36[1]) = -352321536;
  sub_21DC71E88();
  sub_21DC4418C((uint64_t)v23);
  v5 = sub_21DC20C38();
  sub_21DC48658(v23);
  *(_QWORD *)(v0 + 312) = v2;
  *(_QWORD *)(v0 + 288) = v5;
  strcpy((char *)v36, "asrTime");
  v36[1] = 0xE700000000000000;
  sub_21DC71E88();
  sub_21DC441AC((uint64_t)v24);
  v6 = sub_21DC20C38();
  sub_21DC48658(v24);
  *(_QWORD *)(v0 + 384) = v2;
  *(_QWORD *)(v0 + 360) = v6;
  strcpy((char *)v36, "nlxTime");
  v36[1] = 0xE700000000000000;
  sub_21DC71E88();
  sub_21DC441CC((uint64_t)v25);
  v7 = sub_21DC20C38();
  sub_21DC48658(v25);
  *(_QWORD *)(v0 + 456) = v2;
  *(_QWORD *)(v0 + 432) = v7;
  strcpy((char *)v36, "execution");
  WORD1(v36[1]) = 0;
  HIDWORD(v36[1]) = -385875968;
  sub_21DC71E88();
  sub_21DC441EC((uint64_t)v26);
  v8 = sub_21DC20C38();
  sub_21DC48658(v26);
  *(_QWORD *)(v0 + 528) = v2;
  *(_QWORD *)(v0 + 504) = v8;
  strcpy((char *)v36, "userSpeech");
  BYTE3(v36[1]) = 0;
  HIDWORD(v36[1]) = -369098752;
  sub_21DC71E88();
  sub_21DC44710((uint64_t)v27);
  v9 = sub_21DC20C38();
  sub_21DC48658(v27);
  *(_QWORD *)(v0 + 600) = v2;
  *(_QWORD *)(v0 + 576) = v9;
  v36[0] = 0xD000000000000012;
  v36[1] = 0x800000021DC7A1F0;
  sub_21DC71E88();
  sub_21DC44730((uint64_t)v28);
  v10 = sub_21DC20C38();
  sub_21DC48658(v28);
  *(_QWORD *)(v0 + 672) = v2;
  *(_QWORD *)(v0 + 648) = v10;
  strcpy((char *)v36, "asrEager");
  BYTE1(v36[1]) = 0;
  WORD1(v36[1]) = 0;
  HIDWORD(v36[1]) = -402653184;
  sub_21DC71E88();
  sub_21DC448E8((uint64_t)v29);
  v11 = sub_21DC20C38();
  sub_21DC48658(v29);
  *(_QWORD *)(v0 + 744) = v2;
  *(_QWORD *)(v0 + 720) = v11;
  v36[0] = 0x68636E75616CLL;
  v36[1] = 0xE600000000000000;
  sub_21DC71E88();
  sub_21DC44A88((uint64_t)v30);
  v12 = sub_21DC20C38();
  sub_21DC48658(v30);
  *(_QWORD *)(v0 + 816) = v2;
  *(_QWORD *)(v0 + 792) = v12;
  strcpy((char *)v36, "uiRender");
  BYTE1(v36[1]) = 0;
  WORD1(v36[1]) = 0;
  HIDWORD(v36[1]) = -402653184;
  sub_21DC71E88();
  sub_21DC44AA8((uint64_t)v31);
  v13 = sub_21DC20C38();
  sub_21DC48658(v31);
  *(_QWORD *)(v0 + 888) = v2;
  *(_QWORD *)(v0 + 864) = v13;
  strcpy((char *)v36, "ttsWait");
  v36[1] = 0xE700000000000000;
  sub_21DC71E88();
  sub_21DC44AC0((uint64_t)v32);
  v14 = sub_21DC20C38();
  sub_21DC48658(v32);
  *(_QWORD *)(v0 + 960) = v2;
  *(_QWORD *)(v0 + 936) = v14;
  strcpy((char *)v36, "asrInitTime");
  HIDWORD(v36[1]) = -352321536;
  sub_21DC71E88();
  sub_21DC44EA0((uint64_t)v33);
  v15 = sub_21DC20C38();
  sub_21DC48658(v33);
  *(_QWORD *)(v0 + 1032) = v2;
  *(_QWORD *)(v0 + 1008) = v15;
  strcpy((char *)v36, "asrLoadTime");
  HIDWORD(v36[1]) = -352321536;
  sub_21DC71E88();
  sub_21DC44EC0((uint64_t)v34);
  v16 = sub_21DC20C38();
  sub_21DC48658(v34);
  *(_QWORD *)(v0 + 1104) = v2;
  *(_QWORD *)(v0 + 1080) = v16;
  strcpy((char *)v36, "selectedRcTime");
  HIBYTE(v36[1]) = -18;
  sub_21DC71E88();
  sub_21DC45058((uint64_t)v35);
  v17 = sub_21DC20C38();
  sub_21DC48658(v35);
  *(_QWORD *)(v0 + 1176) = v2;
  *(_QWORD *)(v0 + 1152) = v17;
  strcpy((char *)v36, "audioStop");
  WORD1(v36[1]) = 0;
  HIDWORD(v36[1]) = -385875968;
  sub_21DC71E88();
  sub_21DC45070((uint64_t)v36);
  v18 = sub_21DC20C38();
  sub_21DC48658(v36);
  *(_QWORD *)(v0 + 1248) = v2;
  *(_QWORD *)(v0 + 1224) = v18;
  return sub_21DC2A120(v0);
}

_QWORD *sub_21DC48658(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)a1[4];
  v3 = (void *)a1[5];
  v4 = (void *)a1[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_21DC486B8(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v21;
  unint64_t v22;

  swift_beginAccess();
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >> 62)
    goto LABEL_19;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_21DC71FCC())
  {
    v22 = v2 & 0xC000000000000001;
    v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v5 = 4;
    v21 = v2;
    while (1)
    {
      v6 = v22 ? (id)MEMORY[0x22079D208](v5 - 4, v2) : *(id *)(v2 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      sub_21DC13C88(0, &qword_2553AA058);
      v9 = (void *)sub_21DC71750();
      if (v9)
      {
        v10 = v9;
        v11 = objc_msgSend(v9, sel_previousTurnID);
        if (v11)
        {
          v12 = v11;
          v13 = v3;
          v14 = sub_21DC71504();
          v16 = v15;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v4 = sub_21DC14D78(0, v4[2] + 1, 1, v4);
          v18 = v4[2];
          v17 = v4[3];
          if (v18 >= v17 >> 1)
            v4 = sub_21DC14D78((_QWORD *)(v17 > 1), v18 + 1, 1, v4);
          v4[2] = v18 + 1;
          v19 = &v4[2 * v18];
          v19[4] = v14;
          v19[5] = v16;
          v3 = v13;
          v2 = v21;
        }
        else
        {

        }
      }
      else
      {

      }
      ++v5;
      if (v8 == v3)
        goto LABEL_21;
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
  v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_21:
  swift_bridgeObjectRelease();
  return v4;
}

_QWORD *sub_21DC488B0(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  swift_beginAccess();
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >> 62)
    goto LABEL_17;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_21DC71FCC())
  {
    v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v5 = 4;
    while (1)
    {
      v6 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x22079D208](v5 - 4, v2) : *(id *)(v2 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      sub_21DC13C88(0, &qword_2553AA050);
      v9 = (void *)sub_21DC71750();
      if (v9)
      {
        v10 = v9;
        objc_msgSend(v9, sel_timeIntervalSince1970);
        v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v4 = sub_21DC14C6C(0, v4[2] + 1, 1, v4);
        v14 = v4[2];
        v13 = v4[3];
        if (v14 >= v13 >> 1)
          v4 = sub_21DC14C6C((_QWORD *)(v13 > 1), v14 + 1, 1, v4);
        v4[2] = v14 + 1;
        v4[v14 + 4] = v12;
      }
      else
      {

      }
      ++v5;
      if (v8 == v3)
        goto LABEL_19;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_19:
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_21DC48A70(uint64_t a1, unint64_t *a2, uint64_t a3, SEL *a4, uint64_t (*a5)(BOOL, uint64_t, uint64_t, uint64_t))
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(BOOL, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  void *v13;
  void *v14;
  unsigned int v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t (*v19)(BOOL, uint64_t, uint64_t, uint64_t);

  swift_beginAccess();
  v7 = *(_QWORD *)(a1 + 16);
  if (v7 >> 62)
    goto LABEL_17;
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; v8 = sub_21DC71FCC())
  {
    v19 = a5;
    v9 = MEMORY[0x24BEE4AF8];
    v10 = 4;
    while (1)
    {
      v11 = (v7 & 0xC000000000000001) != 0
          ? (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))MEMORY[0x22079D208](v10 - 4, v7)
          : (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))*(id *)(v7 + 8 * v10);
      a5 = v11;
      v12 = v10 - 3;
      if (__OFADD__(v10 - 4, 1))
        break;
      sub_21DC13C88(0, a2);
      v13 = (void *)sub_21DC71750();
      if (v13)
      {
        v14 = v13;
        v15 = objc_msgSend(v13, *a4);

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = v19(0, *(_QWORD *)(v9 + 16) + 1, 1, v9);
        v17 = *(_QWORD *)(v9 + 16);
        v16 = *(_QWORD *)(v9 + 24);
        if (v17 >= v16 >> 1)
          v9 = v19(v16 > 1, v17 + 1, 1, v9);
        *(_QWORD *)(v9 + 16) = v17 + 1;
        *(_DWORD *)(v9 + 4 * v17 + 32) = v15;
      }
      else
      {

      }
      ++v10;
      if (v12 == v8)
        goto LABEL_19;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  v9 = MEMORY[0x24BEE4AF8];
LABEL_19:
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t ComponentGroup<>.previousTurnId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_21DC486B8(v2);
  if (v8[2])
  {
    v9 = v8[4];
    v10 = v8[5];
    sub_21DC0710C(v9, v10);
    swift_bridgeObjectRelease();
    v11 = objc_allocWithZone(MEMORY[0x24BDBCE50]);
    sub_21DC0710C(v9, v10);
    v12 = (void *)sub_21DC714EC();
    v13 = objc_msgSend(v11, sel_initWithData_, v12);
    sub_21DC07150(v9, v10);

    v14 = objc_msgSend(v13, sel_si_asNSUUID);
    if (v14)
    {
      v15 = v14;
      sub_21DC715DC();

      v16 = sub_21DC715F4();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 0, 1, v16);
    }
    else
    {

      v19 = sub_21DC715F4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v7, 1, 1, v19);
    }
    sub_21DC2FA74((uint64_t)v7, a1);
    return sub_21DC07150(v9, v10);
  }
  else
  {
    swift_bridgeObjectRelease();
    v17 = sub_21DC715F4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
}

uint64_t ComponentGroup<>.timeIntervalSince1970.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = sub_21DC488B0(v0);
  if (v1[2])
    v2 = v1[4];
  else
    v2 = 0;
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t ComponentGroup<>.requestStatus.getter()
{
  return sub_21DC48E98(&qword_2553AA048, 0x24BE95BF8, (SEL *)&selRef_requestStatus, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_21DC150B0);
}

unint64_t ComponentGroup<>.invocationSource.getter()
{
  return sub_21DC48E98(&qword_2553A8508, 0x24BE95B28, (SEL *)&selRef_invocationSource, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_21DC150BC);
}

unint64_t sub_21DC48E98(unint64_t *a1, uint64_t a2, SEL *a3, uint64_t (*a4)(BOOL, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = sub_21DC48A70(v4, a1, a2, a3, a4);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = *(unsigned int *)(v5 + 32);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = 0;
  }
  return v7 | ((unint64_t)(v6 == 0) << 32);
}

uint64_t InstrumentationStreamsProviderProtocol.eventGraphs()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(a2 + 136))(900.0);
}

uint64_t InstrumentationStreamsProviderProtocol.connectedComponentGroups(windowLength:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t InstrumentationStreamsProviderProtocol.searchForEventGraph(componentIdentifier:windowLength:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 + 80) = a3;
  *(_QWORD *)(v5 + 88) = v4;
  *(_QWORD *)(v5 + 72) = a2;
  *(double *)(v5 + 64) = a4;
  *(_QWORD *)(v5 + 56) = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A83D0);
  *(_QWORD *)(v5 + 96) = v6;
  *(_QWORD *)(v5 + 104) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 112) = swift_task_alloc();
  *(_QWORD *)(v5 + 120) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21DC48FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t inited;
  id v8;
  id v9;
  id v10;
  id v11;
  _QWORD *v12;
  uint64_t (__cdecl *v14)();

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  (*(void (**)(_QWORD, double))(*(_QWORD *)(v0 + 80) + 136))(*(_QWORD *)(v0 + 72), *(double *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  sub_21DC07D84(&qword_2553A9628, &qword_2553A83D0, MEMORY[0x24BE0C940]);
  v5 = (void *)sub_21DC71618();
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v6(v2, v3);
  v6(v1, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA068);
  inited = swift_initStackObject();
  *(_QWORD *)(v0 + 128) = inited;
  v8 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_2553AA070));
  v9 = v5;
  v10 = objc_msgSend(v8, sel_init);
  *(_QWORD *)(inited + 16) = v10;
  *(_BYTE *)(inited + 24) = 0;
  v11 = v10;
  objc_msgSend(v9, sel_subscribe_, v11);

  v14 = (uint64_t (__cdecl *)())((char *)&dword_2553AA078 + dword_2553AA078);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v12;
  *v12 = v0;
  v12[1] = sub_21DC49114;
  return v14();
}

uint64_t sub_21DC49114(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
    *(_QWORD *)(v4 + 152) = v1;
  else
    *(_QWORD *)(v4 + 144) = a1;
  return swift_task_switch();
}

uint64_t sub_21DC49188()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  uint64_t (__cdecl *v7)();

  v1 = *(void **)(v0 + 144);
  if (v1
    && (v2 = *(void **)(v0 + 56),
        v3 = sub_21DC2630C(),
        sub_21DC49578(v3),
        LOBYTE(v2) = sub_21DC4971C(v2, v4),
        swift_bridgeObjectRelease(),
        (v2 & 1) == 0))
  {

    v7 = (uint64_t (__cdecl *)())((char *)&dword_2553AA078 + dword_2553AA078);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v6;
    *v6 = v0;
    v6[1] = sub_21DC49320;
    return v7();
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 144));
  }
}

uint64_t sub_21DC49260()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 152);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9048);
  swift_willThrowTypedImpl();
  return swift_task_switch();
}

uint64_t sub_21DC492C0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 128);
  swift_setDeallocating();
  v2 = *(void **)(v1 + 16);
  sub_21DC49B1C();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21DC49320(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
    *(_QWORD *)(v4 + 152) = v1;
  else
    *(_QWORD *)(v4 + 144) = a1;
  return swift_task_switch();
}

uint64_t InstrumentationStreamsProviderProtocol.searchForEventGraph(componentIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_21DC235E0;
  return InstrumentationStreamsProviderProtocol.searchForEventGraph(componentIdentifier:windowLength:)(a1, a2, a3, 900.0);
}

uint64_t sub_21DC49404(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_21DC4A940();
  result = sub_21DC71C6C();
  v3 = 0;
  v15 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    result = sub_21DC63B88(&v14, *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10));
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_21DC49578(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  id v13[2];

  sub_21DC71804();
  sub_21DC13D04((unint64_t *)&unk_2553AA580, (uint64_t (*)(uint64_t))MEMORY[0x24BE94860], MEMORY[0x24BEE5BD8]);
  v2 = 0;
  v13[1] = (id)sub_21DC71C6C();
  v3 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      goto LABEL_23;
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        goto LABEL_23;
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          goto LABEL_23;
        v11 = *(_QWORD *)(v3 + 8 * v2);
        if (!v11)
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            goto LABEL_23;
          v11 = *(_QWORD *)(v3 + 8 * v2);
          if (!v11)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    sub_21DC63CA4(v13, *(id *)(*(_QWORD *)(a1 + 48) + 8 * v9));

  }
  v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      goto LABEL_23;
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_21DC4971C(void *a1, uint64_t a2)
{
  id v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  id v15;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v3 = a1;
    v4 = sub_21DC71E58();

    return v4 & 1;
  }
  if (!*(_QWORD *)(a2 + 16)
    || (v6 = sub_21DC71D5C(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        v9 = a2 + 56,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    v12 = 0;
    return v12 & 1;
  }
  sub_21DC71804();
  v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v8);
  v11 = sub_21DC71D68();

  if ((v11 & 1) == 0)
  {
    v13 = ~v7;
    v14 = (v8 + 1) & v13;
    if (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
    {
      do
      {
        v15 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v14);
        v12 = sub_21DC71D68();

        if ((v12 & 1) != 0)
          break;
        v14 = (v14 + 1) & v13;
      }
      while (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  v12 = 1;
  return v12 & 1;
}

BOOL sub_21DC49868(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 result;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  sub_21DC72134();
  sub_21DC72140();
  v4 = sub_21DC72158();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v9 = ~v5;
  v10 = (v6 + 1) & v9;
  if (((*(_QWORD *)(v7 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
    return 0;
  do
  {
    v11 = *(_QWORD *)(v8 + 8 * v10);
    result = v11 == a1;
    if (v11 == a1)
      break;
    v10 = (v10 + 1) & v9;
  }
  while (((*(_QWORD *)(v7 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  return result;
}

uint64_t sub_21DC49954()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_21DC4996C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 24);
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  if ((sub_21DC71C48() & 1) != 0)
  {
    *(_BYTE *)(v1 + 24) = 1;
    sub_21DC49B1C();
    sub_21DC71C18();
    sub_21DC13D04(qword_2553A9C08, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_21DC71A08();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 32) = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA0B0);
    *v3 = v0;
    v3[1] = sub_21DC49AAC;
    return sub_21DC720C8();
  }
}

uint64_t sub_21DC49AAC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21DC49B10()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21DC49B1C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD v24[3];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA0A0);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v4, v7);
  v10 = (char *)v24 - v9;
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)v24 - v12;
  v14 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v15 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x70);
  v16 = *(void **)((char *)v1 + v15);
  if ((unint64_t)v16 >= 2)
    v17 = v16;
  else
    v17 = 0;
  *(_QWORD *)((char *)v1 + v15) = 1;
  sub_21DC427D0(v16);
  objc_msgSend(v17, sel_cancel);
  v18 = (uint64_t)v1 + *(_QWORD *)((*v14 & *v1) + 0x78);
  swift_beginAccess();
  sub_21DC4A984(v18, (uint64_t)v13);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA0A8);
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v10, 1, 1, v19);
  swift_beginAccess();
  sub_21DC4A9CC((uint64_t)v10, v18);
  swift_endAccess();
  sub_21DC4A984((uint64_t)v13, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v6, 1, v19) == 1)
  {
    sub_21DC4AA14((uint64_t)v6);
  }
  else
  {
    sub_21DC71C18();
    sub_21DC13D04(qword_2553A9C08, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v21 = swift_allocError();
    sub_21DC71A08();
    v24[0] = v21;
    sub_21DC71BF4();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v19);
  }
  v22 = (_QWORD *)((char *)v1 + *(_QWORD *)((*v14 & *v1) + 0x80));
  swift_beginAccess();
  *v22 = MEMORY[0x24BEE4AF8];

  swift_bridgeObjectRelease();
  return sub_21DC4AA14((uint64_t)v13);
}

void sub_21DC49D94(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  uint64_t v17;
  id *v18;
  uint64_t *v19;
  uint64_t v20;
  id *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA0A0);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v30 - v9;
  v11 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v12 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x78);
  swift_beginAccess();
  sub_21DC4A984(v12, (uint64_t)v10);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA0A8);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13);
  sub_21DC4AA14((uint64_t)v10);
  if (v15 != 1)
  {
    __break(1u);
    goto LABEL_30;
  }
  v16 = *(uint64_t *)((char *)v1 + *(_QWORD *)((*v11 & *v1) + 0x70));
  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v7, a1, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
    swift_beginAccess();
    sub_21DC4A9CC((uint64_t)v7, v12);
    swift_endAccess();
    return;
  }
  if (v16 == 1)
  {
    v1 = (uint64_t *)((char *)v1 + *(_QWORD *)((*v11 & *v1) + 0x80));
    swift_beginAccess();
    if (!((unint64_t)*v1 >> 62))
    {
      if (*(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_6;
      goto LABEL_31;
    }
LABEL_30:
    swift_bridgeObjectRetain();
    v23 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    if (v23)
    {
LABEL_6:
      swift_beginAccess();
      v16 = *v1;
      if ((unint64_t)*v1 >> 62)
      {
        swift_bridgeObjectRetain();
        v25 = sub_21DC71FCC();
        swift_bridgeObjectRelease();
        if (v25)
        {
LABEL_8:
          v16 = *v1;
          if (!((unint64_t)*v1 >> 62))
          {
            v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v17)
              goto LABEL_10;
            goto LABEL_40;
          }
LABEL_39:
          swift_bridgeObjectRetain();
          v17 = sub_21DC71FCC();
          swift_bridgeObjectRelease();
          if (v17)
          {
LABEL_10:
            if ((v16 & 0xC000000000000001) == 0)
            {
              if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_48;
              }
              v18 = (id *)*(id *)(v16 + 32);
LABEL_13:
              v16 = (unint64_t)v18;
              v17 = *v1;
              if (!((unint64_t)*v1 >> 62))
              {
                if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
LABEL_15:
                  sub_21DC20938(0, 1);
                  swift_endAccess();
                  v31 = v16;
LABEL_32:
                  sub_21DC71C00();
                  return;
                }
                goto LABEL_49;
              }
LABEL_48:
              swift_bridgeObjectRetain();
              v28 = sub_21DC71FCC();
              swift_bridgeObjectRelease();
              if (v28)
                goto LABEL_15;
LABEL_49:
              __break(1u);
              goto LABEL_50;
            }
LABEL_41:
            v18 = (id *)MEMORY[0x22079D208](0, v16);
            goto LABEL_13;
          }
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
      }
      else if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_8;
      }
      __break(1u);
      goto LABEL_39;
    }
LABEL_31:
    v31 = 0;
    goto LABEL_32;
  }
  v19 = (uint64_t *)((char *)v1 + *(_QWORD *)((*v11 & *v1) + 0x80));
  swift_beginAccess();
  if (!((unint64_t)*v19 >> 62))
  {
    v20 = *(_QWORD *)((*v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    v21 = (id *)(id)v16;
    if (v20)
      goto LABEL_19;
LABEL_34:
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v7, a1, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
    swift_beginAccess();
    sub_21DC4A9CC((uint64_t)v7, v12);
    swift_endAccess();
    objc_msgSend((id)v16, sel_requestDemand_, BPSDemandMax());
    goto LABEL_35;
  }
  sub_21DC427C0((id)v16);
  swift_bridgeObjectRetain();
  v24 = sub_21DC71FCC();
  swift_bridgeObjectRelease();
  if (!v24)
    goto LABEL_34;
LABEL_19:
  swift_beginAccess();
  v17 = *v19;
  if (!((unint64_t)*v19 >> 62))
  {
    if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_21;
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  swift_bridgeObjectRetain();
  v26 = sub_21DC71FCC();
  swift_bridgeObjectRelease();
  if (!v26)
    goto LABEL_43;
LABEL_21:
  v17 = *v19;
  if (!((unint64_t)*v19 >> 62))
  {
    if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_23;
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
LABEL_44:
  swift_bridgeObjectRetain();
  v27 = sub_21DC71FCC();
  swift_bridgeObjectRelease();
  if (!v27)
    goto LABEL_45;
LABEL_23:
  if ((v17 & 0xC000000000000001) != 0)
  {
LABEL_46:
    v22 = (id)MEMORY[0x22079D208](0, v17);
    goto LABEL_26;
  }
  if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v22 = *(id *)(v17 + 32);
LABEL_26:
  v17 = (uint64_t)v22;
  if (!((unint64_t)*v19 >> 62))
  {
    if (!*(_QWORD *)((*v19 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_52:
      __break(1u);
      return;
    }
    goto LABEL_28;
  }
LABEL_51:
  swift_bridgeObjectRetain();
  v29 = sub_21DC71FCC();
  swift_bridgeObjectRelease();
  if (!v29)
    goto LABEL_52;
LABEL_28:
  sub_21DC20938(0, 1);
  swift_endAccess();
  v31 = v17;
  sub_21DC71C00();
LABEL_35:
  sub_21DC427D0((id)v16);
}

uint64_t InstrumentationStreamsProviderProtocol.events()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD v16[2];

  v16[1] = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A83B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA088);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 128))(a1, a2);
  sub_21DC71774();
  sub_21DC07D84((unint64_t *)&qword_2553A83C8, &qword_2553A83B8, MEMORY[0x24BE0C940]);
  sub_21DC71630();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  sub_21DC07D84(&qword_2553AA090, &qword_2553AA088, MEMORY[0x24BE0C860]);
  sub_21DC71618();
  sub_21DC71660();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

id sub_21DC4A480(uint64_t a1)
{
  return *(id *)(a1 + 24);
}

uint64_t dispatch thunk of InstrumentationStreamsProviderProtocol.filter.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of InstrumentationStreamsProviderProtocol.filter.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of InstrumentationStreamsProviderProtocol.filter.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of InstrumentationStreamsProviderProtocol.startTime.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of InstrumentationStreamsProviderProtocol.startTime.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 40))(a1, a2 & 1);
}

uint64_t dispatch thunk of InstrumentationStreamsProviderProtocol.startTime.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of InstrumentationStreamsProviderProtocol.endTime.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of InstrumentationStreamsProviderProtocol.endTime.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 64))(a1, a2 & 1);
}

uint64_t dispatch thunk of InstrumentationStreamsProviderProtocol.endTime.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of InstrumentationStreamsProviderProtocol.maxEvents.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of InstrumentationStreamsProviderProtocol.maxEvents.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 88))(a1, a2 & 1);
}

uint64_t dispatch thunk of InstrumentationStreamsProviderProtocol.maxEvents.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of InstrumentationStreamsProviderProtocol.lastN.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of InstrumentationStreamsProviderProtocol.lastN.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 112))(a1, a2 & 1);
}

uint64_t dispatch thunk of InstrumentationStreamsProviderProtocol.lastN.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of InstrumentationStreamsProviderProtocol.timestampedEvents()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of InstrumentationStreamsProviderProtocol.eventGraphs(windowLength:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of InstrumentationStreamsProviderProtocol.siriTurns()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of InstrumentationStreamsProviderProtocol.siriConversations()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t sub_21DC4A5A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_21DC4A940();
  result = sub_21DC71C6C();
  v7 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_21DC63B88(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_21DC4A610(unint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t i;
  void *v6;
  void **v7;
  void *v8;
  id v9;
  uint64_t v10;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_21DC71FCC();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for ComponentIdentifierBridge();
  sub_21DC13D04(&qword_2553A84E0, (uint64_t (*)(uint64_t))type metadata accessor for ComponentIdentifierBridge, MEMORY[0x24BEE5BD8]);
  result = sub_21DC71C6C();
  v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v4 = sub_21DC71FCC();
    result = swift_bridgeObjectRelease();
    if (!v4)
      return v10;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      return v10;
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        v6 = (void *)MEMORY[0x22079D208](i, a1);
        sub_21DC63CB8(&v9, v6);

      }
    }
    else
    {
      v7 = (void **)(a1 + 32);
      do
      {
        v8 = *v7++;
        sub_21DC63CB8(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC4A770(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;

  v2 = sub_21DC715F4();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v4 = *(_QWORD *)(v2 - 8);
  v6 = MEMORY[0x24BDAC7A8](v2, v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v21 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a1 + 16);
  sub_21DC13D04((unint64_t *)&qword_2553AA410, v3, MEMORY[0x24BDCEA88]);
  v22 = sub_21DC71C6C();
  if (v16)
  {
    v17 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v21 = *(_QWORD *)(v4 + 72);
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v18(v15, v17, v2);
      v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v19(v15, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v15, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v8, v15, v2);
      sub_21DC6419C((uint64_t)v11, v8);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v11, v2);
      v17 += v21;
      if (!--v16)
        goto LABEL_7;
    }
  }
  else
  {
    v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v19(v15, 1, 1, v2);
  }
  return v22;
}

unint64_t sub_21DC4A940()
{
  unint64_t result;

  result = qword_2553AA098;
  if (!qword_2553AA098)
  {
    result = MEMORY[0x22079D964](&unk_21DC74384, &type metadata for MessageTypeWrapper);
    atomic_store(result, (unint64_t *)&qword_2553AA098);
  }
  return result;
}

uint64_t sub_21DC4A984(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA0A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21DC4A9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA0A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21DC4AA14(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA0A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_21DC4AA54(uint64_t a1)
{
  sub_21DC49D94(a1);
}

void sub_21DC4AA74()
{
  unint64_t v0;
  uint64_t inited;
  unint64_t v2;
  objc_class *v3;
  char *v4;
  id v5;
  id v6;
  objc_super v7;

  v0 = sub_21DC0BE64();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8568);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21DC73650;
  *(_QWORD *)(inited + 32) = v0;
  *(_QWORD *)(inited + 40) = 0;
  v2 = sub_21DC2BC0C((_QWORD *)inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8570);
  swift_arrayDestroy();
  v3 = (objc_class *)type metadata accessor for EventFilter();
  v4 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v4[OBJC_IVAR___ISEventFilter_filter] = v2;
  v7.receiver = v4;
  v7.super_class = v3;
  v5 = objc_msgSendSuper2(&v7, sel_init);
  if (qword_2553A7EF0 != -1)
    swift_once();
  v6 = _s26AIMLInstrumentationStreams11EventFilterC1poiyA2C_ACtFZ_0((uint64_t)v5, qword_2553AC588);

  qword_2553AC668 = (uint64_t)v6;
}

uint64_t BiomeInstrumentationStreamsProvider.startTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t BiomeInstrumentationStreamsProvider.startTime.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 8) = result;
  *(_BYTE *)(v2 + 16) = a2 & 1;
  return result;
}

uint64_t (*BiomeInstrumentationStreamsProvider.startTime.modify())()
{
  return nullsub_1;
}

uint64_t BiomeInstrumentationStreamsProvider.endTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t BiomeInstrumentationStreamsProvider.endTime.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = result;
  *(_BYTE *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*BiomeInstrumentationStreamsProvider.endTime.modify())()
{
  return nullsub_1;
}

uint64_t BiomeInstrumentationStreamsProvider.maxEvents.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t BiomeInstrumentationStreamsProvider.maxEvents.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = result;
  *(_BYTE *)(v2 + 48) = a2 & 1;
  return result;
}

uint64_t (*BiomeInstrumentationStreamsProvider.maxEvents.modify())()
{
  return nullsub_1;
}

uint64_t BiomeInstrumentationStreamsProvider.lastN.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t BiomeInstrumentationStreamsProvider.lastN.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = result;
  *(_BYTE *)(v2 + 64) = a2 & 1;
  return result;
}

uint64_t (*BiomeInstrumentationStreamsProvider.lastN.modify())()
{
  return nullsub_1;
}

uint64_t BiomeInstrumentationStreamsProvider.useCase.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BiomeInstrumentationStreamsProvider.useCase.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return result;
}

uint64_t (*BiomeInstrumentationStreamsProvider.useCase.modify())()
{
  return nullsub_1;
}

uint64_t BiomeInstrumentationStreamsProvider.transcriptEvents()@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = *v1;
  v27 = v1[1];
  v26 = *((unsigned __int8 *)v1 + 16);
  v25 = v1[3];
  v24 = *((unsigned __int8 *)v1 + 32);
  v23 = v1[5];
  v22 = *((unsigned __int8 *)v1 + 48);
  v21 = v1[7];
  v20 = *((unsigned __int8 *)v1 + 64);
  v18 = v1[10];
  v19 = v1[9];
  v4 = MEMORY[0x24BEE4AF8];
  v34 = MEMORY[0x24BEE4AF8];
  v5 = *(_QWORD *)(v3 + 16);
  result = swift_bridgeObjectRetain();
  if (v5)
  {
    v7 = 0;
    v8 = v3 + 32;
    v9 = MEMORY[0x24BEE4AF8];
    while (v7 < *(_QWORD *)(v3 + 16))
    {
      sub_21DC24E88(v8, (uint64_t)&v31);
      v10 = v32;
      v11 = v33;
      __swift_project_boxed_opaque_existential_1(&v31, v32);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v11 + 8))(&v28, v10, v11);
      if ((_BYTE)v28)
      {
        result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
      }
      else
      {
        sub_21DC2FAE4(&v31, (uint64_t)&v28);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_21DC4BB84(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v34;
        v13 = *(_QWORD *)(v34 + 16);
        v12 = *(_QWORD *)(v34 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_21DC4BB84(v12 > 1, v13 + 1, 1);
          v9 = v34;
        }
        *(_QWORD *)(v9 + 16) = v13 + 1;
        result = sub_21DC2FAE4(&v28, v9 + 40 * v13 + 32);
      }
      ++v7;
      v8 += 40;
      if (v5 == v7)
      {
        v4 = v34;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v4 + 16))
    {
      sub_21DC24E88(v4 + 32, (uint64_t)&v28);
    }
    else
    {
      v30 = 0;
      v28 = 0u;
      v29 = 0u;
    }
    swift_release();
    if (*((_QWORD *)&v29 + 1))
    {
      sub_21DC2FAE4(&v28, (uint64_t)&v31);
      v14 = v32;
      v15 = v33;
      __swift_project_boxed_opaque_existential_1(&v31, v32);
      (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16))(v27, v26, v25, v24, v23, v22, v21, v20, v19, v18, v14, v15);
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8548);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 0, 1, v16);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
    }
    else
    {
      sub_21DC4BBA0((uint64_t)&v28);
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8548);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 1, 1, v17);
    }
  }
  return result;
}

uint64_t BiomeInstrumentationStreamsProvider.gfiEvents()@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = *v1;
  v27 = v1[1];
  v26 = *((unsigned __int8 *)v1 + 16);
  v25 = v1[3];
  v24 = *((unsigned __int8 *)v1 + 32);
  v23 = v1[5];
  v22 = *((unsigned __int8 *)v1 + 48);
  v21 = v1[7];
  v20 = *((unsigned __int8 *)v1 + 64);
  v18 = v1[10];
  v19 = v1[9];
  v4 = MEMORY[0x24BEE4AF8];
  v34 = MEMORY[0x24BEE4AF8];
  v5 = *(_QWORD *)(v3 + 16);
  result = swift_bridgeObjectRetain();
  if (v5)
  {
    v7 = 0;
    v8 = v3 + 32;
    v9 = MEMORY[0x24BEE4AF8];
    while (v7 < *(_QWORD *)(v3 + 16))
    {
      sub_21DC24E88(v8, (uint64_t)&v31);
      v10 = v32;
      v11 = v33;
      __swift_project_boxed_opaque_existential_1(&v31, v32);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v11 + 8))(&v28, v10, v11);
      if (v28 == 1)
      {
        sub_21DC2FAE4(&v31, (uint64_t)&v28);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_21DC4BB84(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v34;
        v13 = *(_QWORD *)(v34 + 16);
        v12 = *(_QWORD *)(v34 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_21DC4BB84(v12 > 1, v13 + 1, 1);
          v9 = v34;
        }
        *(_QWORD *)(v9 + 16) = v13 + 1;
        result = sub_21DC2FAE4(&v28, v9 + 40 * v13 + 32);
      }
      else
      {
        result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
      }
      ++v7;
      v8 += 40;
      if (v5 == v7)
      {
        v4 = v34;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v4 + 16))
    {
      sub_21DC24E88(v4 + 32, (uint64_t)&v28);
    }
    else
    {
      v30 = 0;
      v28 = 0u;
      v29 = 0u;
    }
    swift_release();
    if (*((_QWORD *)&v29 + 1))
    {
      sub_21DC2FAE4(&v28, (uint64_t)&v31);
      v14 = v32;
      v15 = v33;
      __swift_project_boxed_opaque_existential_1(&v31, v32);
      (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16))(v27, v26, v25, v24, v23, v22, v21, v20, v19, v18, v14, v15);
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8548);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 0, 1, v16);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
    }
    else
    {
      sub_21DC4BBA0((uint64_t)&v28);
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8548);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 1, 1, v17);
    }
  }
  return result;
}

uint64_t BiomeInstrumentationStreamsProvider.telemetryEvents()@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = *v1;
  v27 = v1[1];
  v26 = *((unsigned __int8 *)v1 + 16);
  v25 = v1[3];
  v24 = *((unsigned __int8 *)v1 + 32);
  v23 = v1[5];
  v22 = *((unsigned __int8 *)v1 + 48);
  v21 = v1[7];
  v20 = *((unsigned __int8 *)v1 + 64);
  v18 = v1[10];
  v19 = v1[9];
  v4 = MEMORY[0x24BEE4AF8];
  v34 = MEMORY[0x24BEE4AF8];
  v5 = *(_QWORD *)(v3 + 16);
  result = swift_bridgeObjectRetain();
  if (v5)
  {
    v7 = 0;
    v8 = v3 + 32;
    v9 = MEMORY[0x24BEE4AF8];
    while (v7 < *(_QWORD *)(v3 + 16))
    {
      sub_21DC24E88(v8, (uint64_t)&v31);
      v10 = v32;
      v11 = v33;
      __swift_project_boxed_opaque_existential_1(&v31, v32);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v11 + 8))(&v28, v10, v11);
      if (v28 == 2)
      {
        sub_21DC2FAE4(&v31, (uint64_t)&v28);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_21DC4BB84(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v34;
        v13 = *(_QWORD *)(v34 + 16);
        v12 = *(_QWORD *)(v34 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_21DC4BB84(v12 > 1, v13 + 1, 1);
          v9 = v34;
        }
        *(_QWORD *)(v9 + 16) = v13 + 1;
        result = sub_21DC2FAE4(&v28, v9 + 40 * v13 + 32);
      }
      else
      {
        result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
      }
      ++v7;
      v8 += 40;
      if (v5 == v7)
      {
        v4 = v34;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v4 + 16))
    {
      sub_21DC24E88(v4 + 32, (uint64_t)&v28);
    }
    else
    {
      v30 = 0;
      v28 = 0u;
      v29 = 0u;
    }
    swift_release();
    if (*((_QWORD *)&v29 + 1))
    {
      sub_21DC2FAE4(&v28, (uint64_t)&v31);
      v14 = v32;
      v15 = v33;
      __swift_project_boxed_opaque_existential_1(&v31, v32);
      (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16))(v27, v26, v25, v24, v23, v22, v21, v20, v19, v18, v14, v15);
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8548);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 0, 1, v16);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
    }
    else
    {
      sub_21DC4BBA0((uint64_t)&v28);
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8548);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 1, 1, v17);
    }
  }
  return result;
}

uint64_t BiomeInstrumentationStreamsProvider.selfEvents()@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  unsigned __int8 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v3 = *v1;
  v31 = v1[1];
  v30 = *((unsigned __int8 *)v1 + 16);
  v29 = v1[3];
  v28 = *((unsigned __int8 *)v1 + 32);
  v27 = v1[5];
  v26 = *((unsigned __int8 *)v1 + 48);
  v25 = v1[7];
  v24 = *((unsigned __int8 *)v1 + 64);
  v22 = v1[10];
  v23 = v1[9];
  v4 = MEMORY[0x24BEE4AF8];
  v39 = MEMORY[0x24BEE4AF8];
  v5 = *(_QWORD *)(v3 + 16);
  result = swift_bridgeObjectRetain();
  if (v5)
  {
    v7 = 0;
    v8 = v3 + 32;
    v9 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      if (v7 >= *(_QWORD *)(v3 + 16))
      {
        __break(1u);
        return result;
      }
      sub_21DC24E88(v8, (uint64_t)&v36);
      v10 = v37;
      v11 = v38;
      __swift_project_boxed_opaque_existential_1(&v36, v37);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v11 + 8))(&v33, v10, v11);
      v12 = v33;
      sub_21DC24E88((uint64_t)&v36, (uint64_t)&v33);
      if (v12 == 3)
        break;
      v13 = *((_QWORD *)&v34 + 1);
      v14 = v35;
      __swift_project_boxed_opaque_existential_1(&v33, *((uint64_t *)&v34 + 1));
      (*(void (**)(unsigned __int8 *__return_ptr, uint64_t, uint64_t))(v14 + 8))(&v32, v13, v14);
      v15 = v32;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
      if (v15 == 4)
        goto LABEL_9;
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
LABEL_4:
      ++v7;
      v8 += 40;
      if (v5 == v7)
      {
        v4 = v39;
        goto LABEL_15;
      }
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
LABEL_9:
    sub_21DC2FAE4(&v36, (uint64_t)&v33);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_21DC4BB84(0, *(_QWORD *)(v9 + 16) + 1, 1);
    v9 = v39;
    v17 = *(_QWORD *)(v39 + 16);
    v16 = *(_QWORD *)(v39 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_21DC4BB84(v16 > 1, v17 + 1, 1);
      v9 = v39;
    }
    *(_QWORD *)(v9 + 16) = v17 + 1;
    result = sub_21DC2FAE4(&v33, v9 + 40 * v17 + 32);
    goto LABEL_4;
  }
LABEL_15:
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v4 + 16))
  {
    sub_21DC24E88(v4 + 32, (uint64_t)&v33);
  }
  else
  {
    v35 = 0;
    v33 = 0u;
    v34 = 0u;
  }
  swift_release();
  if (*((_QWORD *)&v34 + 1))
  {
    sub_21DC2FAE4(&v33, (uint64_t)&v36);
    v18 = v37;
    v19 = v38;
    __swift_project_boxed_opaque_existential_1(&v36, v37);
    (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 16))(v31, v30, v29, v28, v27, v26, v25, v24, v23, v22, v18, v19);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8548);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
  }
  else
  {
    sub_21DC4BBA0((uint64_t)&v33);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8548);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 1, 1, v21);
  }
}

uint64_t BiomeInstrumentationStreamsProvider.eventGraphs(windowLength:)@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _OWORD v30[5];
  uint64_t v31;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8548);
  v26 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_OWORD *)(v2 + 48);
  v30[2] = *(_OWORD *)(v2 + 32);
  v30[3] = v9;
  v30[4] = *(_OWORD *)(v2 + 64);
  v31 = *(_QWORD *)(v2 + 80);
  v10 = *(_OWORD *)(v2 + 16);
  v30[0] = *(_OWORD *)v2;
  v30[1] = v10;
  sub_21DC4CA14((uint64_t)v30);
  v11 = swift_bridgeObjectRetain();
  v12 = sub_21DC4C7D0(v11, (uint64_t)v30);
  sub_21DC4CA48((uint64_t)v30);
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v25 = a1;
    v29 = MEMORY[0x24BEE4AF8];
    sub_21DC71F24();
    v14 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    v24 = v12;
    v15 = v12 + v14;
    v16 = *(_QWORD *)(v26 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v26 + 16);
    do
    {
      v17(v8, v15, v5);
      v18 = sub_21DC71648();
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA0C0);
      v27 = v18;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A8930);
      swift_dynamicCast();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v5);
      sub_21DC71F00();
      sub_21DC71F30();
      sub_21DC71F3C();
      sub_21DC71F0C();
      v15 += v16;
      --v13;
    }
    while (v13);
    v19 = v29;
    swift_bridgeObjectRelease();
    a1 = v25;
  }
  else
  {
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x24BEE4AF8];
  }
  v20 = objc_allocWithZone((Class)type metadata accessor for BiomeEventGraphsPublisher());
  if (BiomeEventGraphsPublisher.init(streams:windowLength:)(v19, a2))
  {
    type metadata accessor for BiomeEventGraph();
    sub_21DC71654();
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA0C8);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 0, 1, v21);
  }
  else
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA0C8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a1, 1, 1, v23);
  }
}

uint64_t sub_21DC4BA30()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_21DC4BA3C(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 8) = result;
  *(_BYTE *)(v2 + 16) = a2 & 1;
  return result;
}

uint64_t (*sub_21DC4BA4C())()
{
  return nullsub_1;
}

uint64_t sub_21DC4BA5C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_21DC4BA68(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = result;
  *(_BYTE *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*sub_21DC4BA78())()
{
  return nullsub_1;
}

uint64_t sub_21DC4BA88()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t sub_21DC4BA94(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = result;
  *(_BYTE *)(v2 + 48) = a2 & 1;
  return result;
}

uint64_t (*sub_21DC4BAA4())()
{
  return nullsub_1;
}

uint64_t sub_21DC4BAB4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t sub_21DC4BAC0(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = result;
  *(_BYTE *)(v2 + 64) = a2 & 1;
  return result;
}

uint64_t (*sub_21DC4BAD0())()
{
  return nullsub_1;
}

uint64_t sub_21DC4BAF4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21DC4BC0C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_21DC4BB10(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21DC4BD68(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_21DC4BB2C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21DC4C5F0(a1, a2, a3, (_QWORD *)*v3, &qword_2553A8520, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
  *v3 = result;
  return result;
}

uint64_t sub_21DC4BB58(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21DC4C5F0(a1, a2, a3, (_QWORD *)*v3, &qword_2553AA0D0, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair);
  *v3 = result;
  return result;
}

uint64_t sub_21DC4BB84(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21DC4C220(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_21DC4BBA0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA0B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21DC4BBE0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21DC4C5F0(a1, a2, a3, (_QWORD *)*v3, &qword_2553A8518, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  *v3 = result;
  return result;
}

uint64_t sub_21DC4BC0C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA0E8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC4BD68(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A8A90);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC4BED0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A83A0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8AA0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC4C070(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8398);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A9910);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC4C1F8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_21DC4C3D4(a1, a2, a3, a4, &qword_2553A8390, (uint64_t *)&unk_2553AA530);
}

uint64_t sub_21DC4C20C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_21DC4C3D4(a1, a2, a3, a4, &qword_2553A8388, &qword_2553A8380);
}

uint64_t sub_21DC4C220(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA0D8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA0E0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC4C3C0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_21DC4C3D4(a1, a2, a3, a4, &qword_2553A8370, &qword_2553A8368);
}

uint64_t sub_21DC4C3D4(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC4C5B4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_21DC4C5F0(a1, a2, a3, a4, &qword_2553A8538, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptProtoEvent);
}

uint64_t sub_21DC4C5C8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_21DC4C5F0(a1, a2, a3, a4, &qword_2553A8530, (uint64_t (*)(_QWORD))MEMORY[0x24BE5A510]);
}

uint64_t sub_21DC4C5DC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_21DC4C5F0(a1, a2, a3, a4, &qword_2553A8528, (uint64_t (*)(_QWORD))MEMORY[0x24BE587A0]);
}

uint64_t sub_21DC4C5F0(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_21DC72008();
  __break(1u);
  return result;
}

unint64_t sub_21DC4C7D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;

  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8548);
  v5 = *(_QWORD *)(v36 - 8);
  v7 = MEMORY[0x24BDAC7A8](v36, v6);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)v25 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    return MEMORY[0x24BEE4AF8];
  v25[1] = v2;
  v14 = (_QWORD *)(a1 + 32);
  v35 = *(_QWORD *)(a2 + 8);
  v34 = *(unsigned __int8 *)(a2 + 16);
  v33 = *(_QWORD *)(a2 + 24);
  v32 = *(unsigned __int8 *)(a2 + 32);
  v31 = *(_QWORD *)(a2 + 40);
  v30 = *(unsigned __int8 *)(a2 + 48);
  v29 = *(_QWORD *)(a2 + 56);
  v28 = *(unsigned __int8 *)(a2 + 64);
  v15 = *(_QWORD *)(a2 + 72);
  v26 = *(_QWORD *)(a2 + 80);
  v27 = v15;
  v25[0] = a1;
  swift_bridgeObjectRetain();
  v16 = MEMORY[0x24BEE4AF8];
  v17 = v36;
  do
  {
    v18 = v14[3];
    v19 = v14[4];
    __swift_project_boxed_opaque_existential_1(v14, v18);
    (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 16))(v35, v34, v33, v32, v31, v30, v29, v28, v27, v26, v18, v19);
    v20 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v20(v9, v12, v17);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_21DC151D0(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
    v22 = *(_QWORD *)(v16 + 16);
    v21 = *(_QWORD *)(v16 + 24);
    if (v22 >= v21 >> 1)
      v16 = sub_21DC151D0(v21 > 1, v22 + 1, 1, v16);
    *(_QWORD *)(v16 + 16) = v22 + 1;
    v23 = v16
        + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
        + *(_QWORD *)(v5 + 72) * v22;
    v17 = v36;
    v20((char *)v23, v9, v36);
    v14 += 5;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_21DC4CA14(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21DC4CA48(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for BiomeInstrumentationStreamsProvider()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BiomeInstrumentationStreamsProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v4 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BiomeInstrumentationStreamsProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for BiomeInstrumentationStreamsProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v4 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BiomeInstrumentationStreamsProvider(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BiomeInstrumentationStreamsProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BiomeInstrumentationStreamsProvider()
{
  return &type metadata for BiomeInstrumentationStreamsProvider;
}

BOOL static GenerativeFunctionsInstrumentationEvent.< infix(_:_:)()
{
  double v0;
  double v1;
  double v2;

  sub_21DC719A8();
  v1 = v0;
  sub_21DC719A8();
  return v1 < v2;
}

unint64_t sub_21DC4CD54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2553AA0F0[0];
  if (!qword_2553AA0F0[0])
  {
    v1 = sub_21DC719B4();
    result = MEMORY[0x22079D964](MEMORY[0x24BE5A548], v1);
    atomic_store(result, qword_2553AA0F0);
  }
  return result;
}

BOOL sub_21DC4CD9C()
{
  double v0;
  double v1;
  double v2;

  sub_21DC719A8();
  v1 = v0;
  sub_21DC719A8();
  return v1 < v2;
}

BOOL sub_21DC4CDDC()
{
  double v0;
  double v1;
  double v2;

  sub_21DC719A8();
  v1 = v0;
  sub_21DC719A8();
  return v1 >= v2;
}

BOOL sub_21DC4CE1C()
{
  double v0;
  double v1;
  double v2;

  sub_21DC719A8();
  v1 = v0;
  sub_21DC719A8();
  return v1 >= v2;
}

BOOL sub_21DC4CE5C()
{
  double v0;
  double v1;
  double v2;

  sub_21DC719A8();
  v1 = v0;
  sub_21DC719A8();
  return v1 < v2;
}

uint64_t ComponentGroup.__allocating_init(unchecked:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t sub_21DC4CECC()
{
  sub_21DC4D4A4();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21DC4CEE0(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_21DC4CF24())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t ComponentGroup.__allocating_init(_:)(unint64_t a1)
{
  swift_allocObject();
  return ComponentGroup.init(_:)(a1);
}

unint64_t ComponentGroup.init(_:)(unint64_t result)
{
  uint64_t **v1;
  uint64_t i;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;

  i = (uint64_t)v1;
  v3 = result;
  v4 = *v1;
  if (result >> 62)
    goto LABEL_22;
  v5 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      v17 = v4;
      if ((v3 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v6 = (id)MEMORY[0x22079D208](0, v3);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return result;
        }
        v6 = *(id *)(v3 + 32);
      }
      v4 = (uint64_t *)sub_21DC71720();

      if (!v4)
        break;
      v16 = i;
      swift_bridgeObjectRetain();
      for (i = 4; ; ++i)
      {
        v7 = (v3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x22079D208](i - 4, v3) : *(id *)(v3 + 8 * i);
        v8 = v7;
        v9 = i - 3;
        if (__OFADD__(i - 4, 1))
          break;
        v10 = sub_21DC71720();
        if (!v10)
        {
          swift_bridgeObjectRelease_n();

LABEL_19:
          goto LABEL_20;
        }
        v11 = (void *)v10;
        sub_21DC71804();
        v12 = v4;
        v13 = v11;
        LOBYTE(v11) = sub_21DC71D68();

        if ((v11 & 1) == 0)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_19;
        }
        if (v9 == v5)
        {

          swift_bridgeObjectRelease();
          result = v16;
          *(_QWORD *)(v16 + 16) = v3;
          return result;
        }
      }
      __break(1u);
LABEL_22:
      swift_bridgeObjectRetain();
      v5 = sub_21DC71FCC();
      result = swift_bridgeObjectRelease();
      if (!v5)
        goto LABEL_23;
    }
    swift_bridgeObjectRelease();
LABEL_20:
    v4 = v17;
  }
  else
  {
LABEL_23:
    swift_bridgeObjectRelease();
  }
  type metadata accessor for ComponentGroup(0, v4[10], v14, v15);
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t ComponentGroup.init(unchecked:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_21DC4D1AC()
{
  sub_21DC4D4E0();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21DC4D1D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  id v8;
  id v9;

  v5 = type metadata accessor for ComponentGroup(0, *(_QWORD *)(*(_QWORD *)v4 + 80), a3, a4);
  sub_21DC71804();
  MEMORY[0x22079D964](&protocol conformance descriptor for ComponentGroup<A>, v5);
  v6 = sub_21DC71B28();
  if (!(v6 >> 62))
  {
    result = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_9;
  }
  result = sub_21DC71FCC();
  if (!result)
    goto LABEL_8;
LABEL_3:
  if ((v6 & 0xC000000000000001) != 0)
  {
LABEL_9:
    v8 = (id)MEMORY[0x22079D208](0, v6);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(v6 + 32);
LABEL_6:
    v9 = v8;
    swift_bridgeObjectRelease();
    return (uint64_t)v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC4D2CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21DC71720();
  *a1 = result;
  return result;
}

uint64_t ComponentGroup.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ComponentGroup.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_21DC4D344@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = sub_21DC4D4E0();
  v4 = v3;
  swift_bridgeObjectRetain();
  result = swift_release();
  *a1 = v2;
  a1[1] = v4;
  return result;
}

uint64_t sub_21DC4D388()
{
  return 0;
}

uint64_t sub_21DC4D390()
{
  return 2;
}

uint64_t sub_21DC4D398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for ComponentGroup(0, *(_QWORD *)(a1 + 80), a3, a4);
  v4 = sub_21DC4D628();
  swift_release();
  return v4;
}

void sub_21DC4D3E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for ComponentGroup(0, *(_QWORD *)(a4 + 80), a3, a4);
  JUMPOUT(0x22079CE60);
}

uint64_t sub_21DC4D438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for ComponentGroup(0, *(_QWORD *)(a4 + 80), a3, a4);
  return sub_21DC71B40();
}

uint64_t sub_21DC4D4A4()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 16);
}

uint64_t type metadata accessor for ComponentGroup(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ComponentGroup);
}

uint64_t sub_21DC4D4E0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 16);
}

void sub_21DC4D514()
{
  JUMPOUT(0x22079D964);
}

uint64_t sub_21DC4D524@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_21DC4D4A4();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21DC4D54C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_21DC4CEE0(v0);
}

uint64_t sub_21DC4D574()
{
  return 8;
}

_QWORD *sub_21DC4D580(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_21DC4D58C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for ComponentGroup()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ComponentGroup.events.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ComponentGroup.events.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ComponentGroup.events.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ComponentGroup.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of ComponentGroup.__allocating_init(unchecked:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of ComponentGroup.makeIterator()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ComponentGroup.componentIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

double TimestampedEventBridge.timestamp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___ISTimestampedEvent_timestamp);
}

id TimestampedEventBridge.orderedEvent.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___ISTimestampedEvent_orderedEvent);
}

id TimestampedEventBridge.__allocating_init(_:)(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  char *v4;
  void *v5;
  char *v6;
  id v7;
  id v8;
  objc_super v10;

  v2 = v1;
  v4 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v4[OBJC_IVAR___ISTimestampedEvent_timestamp] = *(_QWORD *)(a1 + 16);
  sub_21DC4D7B8();
  v5 = *(void **)(a1 + 24);
  v6 = v4;
  v7 = v5;
  *(_QWORD *)&v6[OBJC_IVAR___ISTimestampedEvent_orderedEvent] = sub_21DC71D2C();

  v10.receiver = v6;
  v10.super_class = v2;
  v8 = objc_msgSendSuper2(&v10, sel_init);
  swift_release();
  return v8;
}

id TimestampedEventBridge.init(_:)(uint64_t a1)
{
  char *v1;
  void *v3;
  char *v4;
  id v5;
  id v6;
  objc_super v8;

  *(_QWORD *)&v1[OBJC_IVAR___ISTimestampedEvent_timestamp] = *(_QWORD *)(a1 + 16);
  sub_21DC4D7B8();
  v3 = *(void **)(a1 + 24);
  v4 = v1;
  v5 = v3;
  *(_QWORD *)&v4[OBJC_IVAR___ISTimestampedEvent_orderedEvent] = sub_21DC71D2C();

  v8.receiver = v4;
  v8.super_class = (Class)type metadata accessor for TimestampedEventBridge();
  v6 = objc_msgSendSuper2(&v8, sel_init);
  swift_release();
  return v6;
}

unint64_t sub_21DC4D7B8()
{
  unint64_t result;

  result = qword_2553A8478;
  if (!qword_2553A8478)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2553A8478);
  }
  return result;
}

uint64_t type metadata accessor for TimestampedEventBridge()
{
  return objc_opt_self();
}

unint64_t sub_21DC4D814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  unint64_t v37;
  id v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v55 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v6);
  v56 = (uint64_t)&v53 - v7;
  v8 = sub_21DC715F4();
  v57 = *(_QWORD *)(v8 - 8);
  v58 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_21DC4DDEC(v1);
  v53 = v13;
  v54 = (void (*)(char *, uint64_t))v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A91A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21DC759F0;
  v59[0] = 0xD000000000000011;
  v59[1] = 0x800000021DC77A80;
  v15 = MEMORY[0x24BEE0D00];
  sub_21DC71E88();
  v16 = *(_QWORD *)(v1 + OBJC_IVAR___ISTimestampedEvent_timestamp);
  *(_QWORD *)(inited + 96) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(inited + 72) = v16;
  strcpy((char *)v59, "eventType");
  WORD1(v59[1]) = 0;
  HIDWORD(v59[1]) = -385875968;
  sub_21DC71E88();
  v17 = *(void **)(v1 + OBJC_IVAR___ISTimestampedEvent_orderedEvent);
  v18 = objc_msgSend(v17, sel_topLevelUnionType);
  v19 = objc_msgSend(v18, sel_qualifiedMessageName);

  v20 = sub_21DC71AB0();
  v22 = v21;

  *(_QWORD *)(inited + 168) = v15;
  *(_QWORD *)(inited + 144) = v20;
  *(_QWORD *)(inited + 152) = v22;
  strcpy((char *)v59, "eventClassName");
  HIBYTE(v59[1]) = -18;
  sub_21DC71E88();
  v23 = objc_msgSend(v17, sel_topLevelUnionType);
  ObjectType = swift_getObjectType();

  v59[0] = ObjectType;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA188);
  v25 = sub_21DC71AE0();
  *(_QWORD *)(inited + 240) = v15;
  *(_QWORD *)(inited + 216) = v25;
  *(_QWORD *)(inited + 224) = v26;
  v59[0] = 0xD000000000000013;
  v59[1] = 0x800000021DC7A210;
  sub_21DC71E88();
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A91C0);
  *(_QWORD *)(inited + 312) = v27;
  v28 = v53;
  *(_QWORD *)(inited + 288) = v54;
  *(_QWORD *)(inited + 296) = v28;
  v59[0] = 0xD000000000000010;
  v59[1] = 0x800000021DC76C00;
  sub_21DC71E88();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA190);
  v29 = swift_initStackObject();
  *(_OWORD *)(v29 + 16) = xmmword_21DC73E00;
  *(_QWORD *)(v29 + 32) = 0x6564496B636F6C63;
  *(_QWORD *)(v29 + 40) = 0xEF7265696669746ELL;
  v30 = objc_msgSend(v17, sel_logicalTimestamp);
  v31 = objc_msgSend(v30, sel_clockIdentifier);

  sub_21DC715DC();
  v32 = sub_21DC715AC();
  v34 = v33;
  v54 = *(void (**)(char *, uint64_t))(v57 + 8);
  v54(v11, v58);
  *(_QWORD *)(v29 + 48) = v32;
  *(_QWORD *)(v29 + 56) = v34;
  *(_QWORD *)(v29 + 72) = v15;
  *(_QWORD *)(v29 + 80) = 0xD000000000000016;
  *(_QWORD *)(v29 + 88) = 0x800000021DC76BA0;
  v35 = objc_msgSend(v17, sel_logicalTimestamp);
  v36 = objc_msgSend(v35, sel_nanoSecondsSinceBoot);

  *(_QWORD *)(v29 + 120) = MEMORY[0x24BEE4568];
  *(_QWORD *)(v29 + 96) = v36;
  v37 = sub_21DC2AA1C(v29);
  *(_QWORD *)(inited + 384) = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA198);
  *(_QWORD *)(inited + 360) = v37;
  strcpy((char *)v59, "eventId");
  v59[1] = 0xE700000000000000;
  sub_21DC71E88();
  *(_QWORD *)(inited + 456) = v27;
  v38 = objc_msgSend(v17, sel_messageUUID);
  if (v38)
  {
    v39 = v38;
    v40 = v55;
    sub_21DC715DC();

    v41 = 0;
  }
  else
  {
    v41 = 1;
    v40 = v55;
  }
  v43 = v57;
  v42 = v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56))(v40, v41, 1, v58);
  v44 = (uint64_t)v40;
  v45 = v56;
  sub_21DC2FA74(v44, v56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v45, 1, v42) == 1)
  {
    sub_21DC19DF4(v45);
    v46 = 0;
    v47 = 0;
  }
  else
  {
    v46 = sub_21DC715AC();
    v47 = v48;
    v54((char *)v45, v42);
  }
  *(_QWORD *)(inited + 432) = v46;
  *(_QWORD *)(inited + 440) = v47;
  v59[0] = 0x746E657665;
  v59[1] = 0xE500000000000000;
  sub_21DC71E88();
  v49 = objc_msgSend(v17, sel_topLevelUnionType);
  v50 = objc_msgSend(v49, sel_dictionaryRepresentation);

  if (v50)
  {
    v51 = sub_21DC71A20();

  }
  else
  {
    v51 = 0;
  }
  *(_QWORD *)(inited + 528) = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A91B8);
  *(_QWORD *)(inited + 504) = v51;
  return sub_21DC2A120(inited);
}

uint64_t sub_21DC4DDEC(uint64_t a1)
{
  id v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;

  v1 = objc_msgSend(*(id *)(a1 + OBJC_IVAR___ISTimestampedEvent_orderedEvent), sel_topLevelUnionType);
  v2 = (void *)swift_dynamicCastObjCProtocolConditional();
  if (v2 && (v3 = objc_msgSend(v2, sel_innerEvent)) != 0)
  {
    v4 = v3;
    swift_getObjectType();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8EC0);
    v5 = sub_21DC71AE0();

  }
  else
  {

    return 0;
  }
  return v5;
}

id TimestampedEventBridge.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void TimestampedEventBridge.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id TimestampedEventBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TimestampedEventBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for TimestampedEventBridge()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TimestampedEventBridge.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of TimestampedEventBridge.dictionaryRepresentation()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

id sub_21DC4E000(uint64_t a1)
{
  objc_class *v2;
  char *v3;
  void *v4;
  char *v5;
  id v6;
  id v7;
  objc_super v9;

  v2 = (objc_class *)type metadata accessor for TimestampedEventBridge();
  v3 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v3[OBJC_IVAR___ISTimestampedEvent_timestamp] = *(_QWORD *)(a1 + 16);
  sub_21DC4D7B8();
  v4 = *(void **)(a1 + 24);
  swift_retain();
  v5 = v3;
  v6 = v4;
  *(_QWORD *)&v5[OBJC_IVAR___ISTimestampedEvent_orderedEvent] = sub_21DC71D2C();

  v9.receiver = v5;
  v9.super_class = v2;
  v7 = objc_msgSendSuper2(&v9, sel_init);
  swift_release();
  return v7;
}

uint64_t sub_21DC4E0B4(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;

  v11 = MEMORY[0x24BEE4AF8];
  swift_beginAccess();
  v2 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (v2 >> 62)
    goto LABEL_16;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      while ((v2 & 0xC000000000000001) != 0)
      {
        v5 = (id)MEMORY[0x22079D208](v4, v2);
LABEL_9:
        v6 = v5;
        v7 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_15;
        sub_21DC13C88(0, &qword_2553AA240);
        v8 = (void *)sub_21DC71750();
        if (v8)
        {

          sub_21DC71F00();
          sub_21DC71F30();
          sub_21DC71F3C();
          sub_21DC71F0C();
        }
        else
        {

        }
        ++v4;
        if (v7 == v3)
        {
          v9 = v11;
          goto LABEL_18;
        }
      }
      if (v4 < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      v3 = sub_21DC71FCC();
      swift_bridgeObjectRelease();
      if (!v3)
        goto LABEL_17;
    }
    v5 = *(id *)(v2 + 8 * v4 + 32);
    goto LABEL_9;
  }
LABEL_17:
  v9 = MEMORY[0x24BEE4AF8];
LABEL_18:
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_21DC4E258(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  void *v8;
  void *v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v13;

  v13 = MEMORY[0x24BEE4AF8];
  swift_beginAccess();
  v2 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (v2 >> 62)
    goto LABEL_17;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      while ((v2 & 0xC000000000000001) != 0)
      {
        v5 = (id)MEMORY[0x22079D208](v4, v2);
LABEL_9:
        v6 = v5;
        v7 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_16;
        sub_21DC13C88(0, &qword_2553AA238);
        v8 = (void *)sub_21DC71750();
        if (v8 && (v9 = v8, v10 = objc_msgSend(v8, sel_isFinal), v9, (v10 & 1) != 0))
        {
          sub_21DC71F00();
          sub_21DC71F30();
          sub_21DC71F3C();
          sub_21DC71F0C();
        }
        else
        {

        }
        ++v4;
        if (v7 == v3)
        {
          v11 = v13;
          goto LABEL_19;
        }
      }
      if (v4 < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      swift_bridgeObjectRetain();
      v3 = sub_21DC71FCC();
      swift_bridgeObjectRelease();
      if (!v3)
        goto LABEL_18;
    }
    v5 = *(id *)(v2 + 8 * v4 + 32);
    goto LABEL_9;
  }
LABEL_18:
  v11 = MEMORY[0x24BEE4AF8];
LABEL_19:
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_21DC4E414(uint64_t a1, unint64_t *a2, uint64_t a3, SEL *a4)
{
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  unint64_t v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v19;

  v19 = MEMORY[0x24BEE4AF8];
  swift_beginAccess();
  v5 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (v5 >> 62)
    goto LABEL_18;
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      v7 = 0;
      while ((v5 & 0xC000000000000001) != 0)
      {
        v8 = (id)MEMORY[0x22079D208](v7, v5);
LABEL_9:
        v9 = v8;
        v10 = v7 + 1;
        if (__OFADD__(v7, 1))
          goto LABEL_17;
        sub_21DC13C88(0, a2);
        v11 = (void *)sub_21DC71750();
        if (v11)
        {
          v12 = v11;
          v13 = objc_msgSend(v11, *a4);
          if (v13)
          {
            v14 = v13;

            sub_21DC71F00();
            sub_21DC71F30();
            sub_21DC71F3C();
            sub_21DC71F0C();
          }
          else
          {

          }
        }
        else
        {

        }
        ++v7;
        if (v10 == v6)
        {
          v15 = v19;
          goto LABEL_20;
        }
      }
      if (v7 < *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      swift_bridgeObjectRetain();
      v6 = sub_21DC71FCC();
      swift_bridgeObjectRelease();
      if (!v6)
        goto LABEL_19;
    }
    v8 = *(id *)(v5 + 8 * v7 + 32);
    goto LABEL_9;
  }
LABEL_19:
  v15 = MEMORY[0x24BEE4AF8];
LABEL_20:
  swift_bridgeObjectRelease();
  return v15;
}

unint64_t sub_21DC4E5E4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t inited;
  unint64_t v11;
  uint64_t v12;
  BOOL v13;
  unint64_t result;
  id v15;

  v1 = v0;
  v2 = sub_21DC13C88(0, &qword_2553A8498);
  v3 = sub_21DC26320();
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_12;
  v4 = sub_21DC0A464(v2);
  if ((v5 & 1) == 0)
    goto LABEL_12;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = sub_21DC089B4(v6);
  swift_bridgeObjectRelease();
  if (!v7)
    return v7;
  v8 = v1;
  v9 = sub_21DC0BFDC(v7, (uint64_t)v8);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8CD0);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v9;
  v11 = sub_21DC4E0B4(inited);
  if (!(v11 >> 62))
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12)
      goto LABEL_6;
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  v12 = sub_21DC71FCC();
  if (!v12)
    goto LABEL_12;
LABEL_6:
  v13 = __OFSUB__(v12, 1);
  result = v12 - 1;
  if (v13)
  {
    __break(1u);
    goto LABEL_17;
  }
  if ((v11 & 0xC000000000000001) != 0)
  {
LABEL_17:
    v15 = (id)MEMORY[0x22079D208](result, v11);
    goto LABEL_11;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(id *)(v11 + 8 * result + 32);
LABEL_11:
    v7 = (uint64_t)v15;
    swift_bridgeObjectRelease();
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC4E75C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t inited;
  unint64_t v11;
  uint64_t result;
  id v13;

  v1 = v0;
  v2 = sub_21DC13C88(0, &qword_2553A8498);
  v3 = sub_21DC26320();
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_10;
  v4 = sub_21DC0A464(v2);
  if ((v5 & 1) == 0)
    goto LABEL_10;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = sub_21DC089B4(v6);
  swift_bridgeObjectRelease();
  if (!v7)
    return v7;
  v8 = v1;
  v9 = sub_21DC0BFDC(v7, (uint64_t)v8);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8CD0);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v9;
  v11 = sub_21DC4E0B4(inited);
  if (!(v11 >> 62))
  {
    result = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_6;
LABEL_10:
    swift_bridgeObjectRelease();
    return 0;
  }
  result = sub_21DC71FCC();
  if (!result)
    goto LABEL_10;
LABEL_6:
  if ((v11 & 0xC000000000000001) != 0)
  {
    v13 = (id)MEMORY[0x22079D208](0, v11);
    goto LABEL_9;
  }
  if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(id *)(v11 + 32);
LABEL_9:
    v7 = (uint64_t)v13;
    swift_bridgeObjectRelease();
    return v7;
  }
  __break(1u);
  return result;
}

unint64_t sub_21DC4E8BC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t inited;
  unint64_t v11;
  uint64_t v12;
  BOOL v13;
  unint64_t result;
  id v15;

  v1 = v0;
  v2 = sub_21DC13C88(0, &qword_2553A8498);
  v3 = sub_21DC26320();
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_12;
  v4 = sub_21DC0A464(v2);
  if ((v5 & 1) == 0)
    goto LABEL_12;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = sub_21DC089B4(v6);
  swift_bridgeObjectRelease();
  if (!v7)
    return v7;
  v8 = v1;
  v9 = sub_21DC0BFDC(v7, (uint64_t)v8);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8CD0);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v9;
  v11 = sub_21DC4E258(inited);
  if (!(v11 >> 62))
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12)
      goto LABEL_6;
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  v12 = sub_21DC71FCC();
  if (!v12)
    goto LABEL_12;
LABEL_6:
  v13 = __OFSUB__(v12, 1);
  result = v12 - 1;
  if (v13)
  {
    __break(1u);
    goto LABEL_17;
  }
  if ((v11 & 0xC000000000000001) != 0)
  {
LABEL_17:
    v15 = (id)MEMORY[0x22079D208](result, v11);
    goto LABEL_11;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(id *)(v11 + 8 * result + 32);
LABEL_11:
    v7 = (uint64_t)v15;
    swift_bridgeObjectRelease();
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC4EA34()
{
  return sub_21DC4EAA4(&qword_2553AA230, 0x24BE949B0, (SEL *)&selRef_startedOrChanged);
}

uint64_t sub_21DC4EA50()
{
  return sub_21DC4EAA4(&qword_2553AA230, 0x24BE949B0, (SEL *)&selRef_ended);
}

uint64_t sub_21DC4EA6C()
{
  return sub_21DC4EAA4(&qword_2553AA228, 0x24BE94998, (SEL *)&selRef_startedOrChanged);
}

uint64_t sub_21DC4EA88()
{
  return sub_21DC4EAA4(&qword_2553AA228, 0x24BE94998, (SEL *)&selRef_ended);
}

uint64_t sub_21DC4EAA4(unint64_t *a1, uint64_t a2, SEL *a3)
{
  void *v3;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  uint64_t inited;
  unint64_t v17;
  uint64_t result;
  id v19;

  v7 = v3;
  v8 = sub_21DC13C88(0, &qword_2553A8498);
  v9 = sub_21DC26320();
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_10;
  v10 = sub_21DC0A464(v8);
  if ((v11 & 1) == 0)
    goto LABEL_10;
  v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = sub_21DC089B4(v12);
  swift_bridgeObjectRelease();
  if (!v13)
    return v13;
  v14 = v7;
  v15 = sub_21DC0BFDC(v13, (uint64_t)v14);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8CD0);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v15;
  v17 = sub_21DC4E414(inited, a1, a2, a3);
  if (!(v17 >> 62))
  {
    result = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_6;
LABEL_10:
    swift_bridgeObjectRelease();
    return 0;
  }
  result = sub_21DC71FCC();
  if (!result)
    goto LABEL_10;
LABEL_6:
  if ((v17 & 0xC000000000000001) != 0)
  {
    v19 = (id)MEMORY[0x22079D208](0, v17);
    goto LABEL_9;
  }
  if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v19 = *(id *)(v17 + 32);
LABEL_9:
    v13 = (uint64_t)v19;
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

id sub_21DC4EC30(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  ComponentIdentifier.description.getter();

  v2 = (void *)sub_21DC71AA4();
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t ComponentIdentifier.description.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v7;
  unint64_t v8;

  v0 = sub_21DC715F4();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = 0;
  v8 = 0xE000000000000000;
  sub_21DC71EC4();
  swift_bridgeObjectRelease();
  v7 = 0xD00000000000001ALL;
  v8 = 0x800000021DC7A2D0;
  sub_21DC717D4();
  sub_21DC71D44();
  sub_21DC71B10();
  swift_bridgeObjectRelease();
  sub_21DC71B10();
  sub_21DC717F8();
  sub_21DC13D04(&qword_2553AA248, v1, MEMORY[0x24BDCEAB8]);
  sub_21DC72074();
  sub_21DC71B10();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v0);
  sub_21DC71B10();
  return v7;
}

uint64_t sub_21DC4EDD8()
{
  return _s19SiriInstrumentation19ComponentIdentifierC26AIMLInstrumentationStreamsE1loiySbAC_ACtFZ_0();
}

uint64_t _s19SiriInstrumentation19ComponentIdentifierC26AIMLInstrumentationStreamsE1loiySbAC_ACtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  char v10;
  void (*v11)(char *, uint64_t);
  int v12;
  uint64_t v14;

  v0 = sub_21DC715F4();
  v1 = *(_QWORD *)(v0 - 8);
  v3 = MEMORY[0x24BDAC7A8](v0, v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v6);
  v8 = (char *)&v14 - v7;
  v9 = sub_21DC717D4();
  if (v9 == sub_21DC717D4())
  {
    sub_21DC717F8();
    sub_21DC717F8();
    v10 = MEMORY[0x22079C8F0](v8, v5);
    v11 = *(void (**)(char *, uint64_t))(v1 + 8);
    v11(v5, v0);
    v11(v8, v0);
  }
  else
  {
    v12 = sub_21DC717D4();
    v10 = v12 < (int)sub_21DC717D4();
  }
  return v10 & 1;
}

uint64_t sub_21DC4EEF8()
{
  return sub_21DC13D04((unint64_t *)&unk_2553AA250, (uint64_t (*)(uint64_t))MEMORY[0x24BE94860], MEMORY[0x24BEE5BE0]);
}

uint64_t sub_21DC4EF24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = sub_21DC715F4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x24BEE4AF8];
  if (v8)
  {
    v16 = v1;
    v18 = MEMORY[0x24BEE4AF8];
    sub_21DC4BB2C(0, v8, 0);
    v9 = v18;
    v10 = *(_QWORD *)(type metadata accessor for SiriConversationPublisher.GraphUUID() - 8);
    v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v17 = *(_QWORD *)(v10 + 72);
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    do
    {
      v12(v7, v11, v3);
      v18 = v9;
      v14 = *(_QWORD *)(v9 + 16);
      v13 = *(_QWORD *)(v9 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_21DC4BB2C(v13 > 1, v14 + 1, 1);
        v9 = v18;
      }
      *(_QWORD *)(v9 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v14, v7, v3);
      v11 += v17;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_21DC4F08C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD v16[2];
  uint64_t v17;

  v3 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x24BEE4AF8];
  if (v8)
  {
    v16[1] = v1;
    v17 = MEMORY[0x24BEE4AF8];
    sub_21DC4BBE0(0, v8, 0);
    v9 = v17;
    v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2553A8368) - 8);
    v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v12 = *(_QWORD *)(v10 + 72);
    do
    {
      sub_21DC0C210(v11, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      v17 = v9;
      v14 = *(_QWORD *)(v9 + 16);
      v13 = *(_QWORD *)(v9 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_21DC4BBE0(v13 > 1, v14 + 1, 1);
        v9 = v17;
      }
      *(_QWORD *)(v9 + 16) = v14 + 1;
      sub_21DC13CC0((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v14, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      v11 += v12;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_21DC4F1EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  uint64_t (*v20)();
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD v35[2];
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v41 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA430);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v8 = *(_QWORD *)(v42 - 8);
  v10 = MEMORY[0x24BDAC7A8](v42, v9);
  v43 = (uint64_t)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v15 = (char *)v35 - v14;
  result = MEMORY[0x24BDAC7A8](v13, v16);
  v45 = (uint64_t)v35 - v18;
  v46 = MEMORY[0x24BEE4AF8];
  v40 = *(_QWORD *)(a1 + 16);
  if (v40)
  {
    v35[1] = v2;
    v36 = v7;
    v19 = 0;
    v20 = type metadata accessor for SiriConversationPublisher.GraphUUID;
    v37 = a1;
    v39 = v8;
    while (1)
    {
      if (v19 >= *(_QWORD *)(a1 + 16))
      {
        __break(1u);
        return result;
      }
      v21 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v22 = *(_QWORD *)(v8 + 72);
      sub_21DC0C210(a1 + v21 + v22 * v19, (uint64_t)v7, (uint64_t (*)(_QWORD))v20);
      v23 = v42;
      v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v38(v7, 0, 1, v42);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v23) == 1)
        goto LABEL_21;
      v44 = v21;
      v24 = v45;
      v25 = v20;
      sub_21DC13CC0((uint64_t)v7, v45, (uint64_t (*)(_QWORD))v20);
      v26 = *v41;
      if (*(_QWORD *)(*v41 + 16))
      {
        sub_21DC72134();
        sub_21DC715F4();
        sub_21DC13D04((unint64_t *)&qword_2553AA410, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        swift_bridgeObjectRetain();
        sub_21DC71A44();
        v27 = sub_21DC72158();
        v24 = v45;
        v28 = -1 << *(_BYTE *)(v26 + 32);
        v29 = v27 & ~v28;
        if (((*(_QWORD *)(v26 + 56 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) != 0)
        {
          v30 = ~v28;
          while (1)
          {
            sub_21DC0C210(*(_QWORD *)(v26 + 48) + v29 * v22, (uint64_t)v15, (uint64_t (*)(_QWORD))v25);
            v31 = sub_21DC715D0();
            sub_21DC5FCD8((uint64_t)v15);
            if ((v31 & 1) != 0)
              break;
            v29 = (v29 + 1) & v30;
            v24 = v45;
            if (((*(_QWORD *)(v26 + 56 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
              goto LABEL_12;
          }
          swift_bridgeObjectRelease();
          result = sub_21DC5FCD8(v45);
          v7 = v36;
          a1 = v37;
          v20 = v25;
          goto LABEL_4;
        }
LABEL_12:
        swift_bridgeObjectRelease();
        v7 = v36;
        a1 = v37;
      }
      sub_21DC13CC0(v24, v43, (uint64_t (*)(_QWORD))v25);
      v32 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21DC4BBE0(0, *(_QWORD *)(v32 + 16) + 1, 1);
        v32 = v46;
      }
      v34 = *(_QWORD *)(v32 + 16);
      v33 = *(_QWORD *)(v32 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_21DC4BBE0(v33 > 1, v34 + 1, 1);
        v32 = v46;
      }
      *(_QWORD *)(v32 + 16) = v34 + 1;
      v20 = v25;
      result = sub_21DC13CC0(v43, v32 + v44 + v34 * v22, (uint64_t (*)(_QWORD))v25);
LABEL_4:
      ++v19;
      v8 = v39;
      if (v19 == v40)
      {
        v38(v7, 1, 1, v42);
        goto LABEL_21;
      }
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v7, 1, 1, v42);
LABEL_21:
  swift_bridgeObjectRelease();
  sub_21DC07C84((uint64_t)v7, &qword_2553AA430);
  return v46;
}

uint64_t sub_21DC4F5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (a2)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v8;
    *v8 = 0x8000000000000000;
    sub_21DC3C82C(a1, a2, a3, a4, a5, a6, a7, a8, isUniquelyReferenced_nonNull_native);
    *v8 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v19 = sub_21DC6838C(a5, a6, a7, a8);
    v21 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_21DC20194(v19, v21);
  }
}

uint64_t sub_21DC4F6DC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA430);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_21DC07C84(a1, &qword_2553AA430);
    sub_21DC688E0(a2, (uint64_t)v9);
    sub_21DC5FCD8(a2);
    return sub_21DC07C84((uint64_t)v9, &qword_2553AA430);
  }
  else
  {
    sub_21DC13CC0(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_21DC3D24C((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    swift_bridgeObjectRelease();
    return sub_21DC5FCD8(a2);
  }
}

uint64_t sub_21DC4F834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;

  v9 = v8;
  v16 = (uint64_t *)(v8 + 16);
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v18 = *(_QWORD *)(v8 + 16);
  v48 = (_QWORD *)v18;
  *(_QWORD *)(v9 + 16) = 0x8000000000000000;
  v46 = a1;
  v47 = a3;
  v20 = sub_21DC0A5CC(a1, a2, a3, a4);
  v21 = *(_QWORD *)(v18 + 16);
  v22 = (v19 & 1) == 0;
  v23 = v21 + v22;
  if (__OFADD__(v21, v22))
  {
    __break(1u);
    goto LABEL_19;
  }
  LOBYTE(a3) = v19;
  if (*(_QWORD *)(v18 + 24) < v23)
  {
    sub_21DC10300(v23, isUniquelyReferenced_nonNull_native);
    v18 = (uint64_t)v48;
    v24 = sub_21DC0A5CC(a1, a2, v47, a4);
    a1 = a7;
    if ((a3 & 1) == (v25 & 1))
    {
      v20 = v24;
      goto LABEL_6;
    }
    goto LABEL_24;
  }
  a1 = a7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_20;
  while (1)
  {
LABEL_6:
    *v16 = v18;
    swift_bridgeObjectRelease();
    v26 = (_QWORD *)*v16;
    if ((a3 & 1) == 0)
    {
      v26[(v20 >> 6) + 8] |= 1 << v20;
      v27 = (uint64_t *)(v26[6] + 32 * v20);
      *v27 = v46;
      v27[1] = a2;
      v27[2] = v47;
      v27[3] = a4;
      *(_QWORD *)(v26[7] + 8 * v20) = MEMORY[0x24BEE4B08];
      v28 = v26[2];
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
LABEL_22:
        sub_21DC5D87C(&qword_2553A84D8);
        v32 = (uint64_t)v48;
        goto LABEL_14;
      }
      v26[2] = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    LOBYTE(a3) = a5;
    sub_21DC63F78((uint64_t *)&v48, a5, a6, a1, a8);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v31 = swift_isUniquelyReferenced_nonNull_native();
    v48 = (_QWORD *)*v16;
    v32 = (uint64_t)v48;
    *v16 = 0x8000000000000000;
    v20 = sub_21DC0A5CC(a5, a6, a1, a8);
    v34 = *(_QWORD *)(v32 + 16);
    v35 = (v33 & 1) == 0;
    v36 = v34 + v35;
    if (!__OFADD__(v34, v35))
      break;
LABEL_19:
    __break(1u);
LABEL_20:
    sub_21DC5D87C(&qword_2553A84D8);
    v18 = (uint64_t)v48;
  }
  LOBYTE(a3) = v33;
  if (*(_QWORD *)(v32 + 24) >= v36)
  {
    if ((v31 & 1) != 0)
      goto LABEL_14;
    goto LABEL_22;
  }
  sub_21DC10300(v36, v31);
  v32 = (uint64_t)v48;
  v37 = sub_21DC0A5CC(a5, a6, a1, a8);
  if ((a3 & 1) != (v38 & 1))
    goto LABEL_24;
  v20 = v37;
LABEL_14:
  *v16 = v32;
  swift_bridgeObjectRelease();
  v39 = (_QWORD *)*v16;
  if ((a3 & 1) != 0)
  {
LABEL_17:
    sub_21DC63F78((uint64_t *)&v48, v46, a2, v47, a4);
    swift_endAccess();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v39[(v20 >> 6) + 8] |= 1 << v20;
    v40 = (uint64_t *)(v39[6] + 32 * v20);
    *v40 = a5;
    v40[1] = a6;
    v40[2] = a1;
    v40[3] = a8;
    *(_QWORD *)(v39[7] + 8 * v20) = MEMORY[0x24BEE4B08];
    v41 = v39[2];
    v29 = __OFADD__(v41, 1);
    v42 = v41 + 1;
    if (!v29)
    {
      v39[2] = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_17;
    }
    __break(1u);
LABEL_24:
    result = sub_21DC720E0();
    __break(1u);
  }
  return result;
}

void sub_21DC4FC6C(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v14;
  unint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  char v32;
  _QWORD *v33;
  char v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  _QWORD *v46;

  v3 = v2;
  v6 = (_QWORD *)(v3 + 16);
  swift_beginAccess();
  v7 = a1;
  v8 = a2;
  v9 = v7;
  v10 = v8;
  v11 = v9;
  v12 = v10;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v46 = *(_QWORD **)(v3 + 16);
  v14 = v46;
  *(_QWORD *)(v3 + 16) = 0x8000000000000000;
  v15 = sub_21DC0A4BC((uint64_t)v11);
  v17 = v16;
  v18 = v14[2];
  v19 = (v16 & 1) == 0;
  sub_21DC71804();
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v14[3] < v20)
  {
    sub_21DC126A8(v20, isUniquelyReferenced_nonNull_native);
    v14 = v46;
    v21 = sub_21DC0A4BC((uint64_t)v11);
    if ((v17 & 1) == (v22 & 1))
    {
      v15 = v21;
      goto LABEL_6;
    }
    goto LABEL_24;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_20;
  while (1)
  {
LABEL_6:
    *v6 = v14;
    swift_bridgeObjectRelease();
    v23 = (_QWORD *)*v6;
    if ((v17 & 1) == 0)
    {
      v23[(v15 >> 6) + 8] |= 1 << v15;
      v24 = 8 * v15;
      *(_QWORD *)(v23[6] + v24) = v11;
      *(_QWORD *)(v23[7] + v24) = MEMORY[0x24BEE4B08];
      v25 = v23[2];
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
      {
        __break(1u);
LABEL_22:
        sub_21DC5E910(&qword_2553A84B0);
        v33 = v46;
        goto LABEL_14;
      }
      v23[2] = v27;
      v28 = v11;
    }
    sub_21DC63CA4(&v46, v12);
    v29 = v46;
    swift_endAccess();

    swift_beginAccess();
    v30 = v11;
    v31 = v12;
    v11 = v30;
    v12 = v31;
    v32 = swift_isUniquelyReferenced_nonNull_native();
    v46 = (_QWORD *)*v6;
    v33 = v46;
    *v6 = 0x8000000000000000;
    v15 = sub_21DC0A4BC((uint64_t)v12);
    v35 = v33[2];
    v36 = (v34 & 1) == 0;
    v37 = v35 + v36;
    if (!__OFADD__(v35, v36))
      break;
LABEL_19:
    __break(1u);
LABEL_20:
    sub_21DC5E910(&qword_2553A84B0);
    v14 = v46;
  }
  v17 = v34;
  if (v33[3] >= v37)
  {
    if ((v32 & 1) != 0)
      goto LABEL_14;
    goto LABEL_22;
  }
  sub_21DC126A8(v37, v32);
  v33 = v46;
  v38 = sub_21DC0A4BC((uint64_t)v12);
  if ((v17 & 1) != (v39 & 1))
    goto LABEL_24;
  v15 = v38;
LABEL_14:
  *v6 = v33;
  swift_bridgeObjectRelease();
  v40 = (_QWORD *)*v6;
  if ((v17 & 1) != 0)
  {
LABEL_17:
    sub_21DC63CA4(&v46, v11);
    v45 = v46;
    swift_endAccess();

  }
  else
  {
    v40[(v15 >> 6) + 8] |= 1 << v15;
    v41 = 8 * v15;
    *(_QWORD *)(v40[6] + v41) = v12;
    *(_QWORD *)(v40[7] + v41) = MEMORY[0x24BEE4B08];
    v42 = v40[2];
    v26 = __OFADD__(v42, 1);
    v43 = v42 + 1;
    if (!v26)
    {
      v40[2] = v43;
      v44 = v12;
      goto LABEL_17;
    }
    __break(1u);
LABEL_24:
    sub_21DC720E0();
    __break(1u);
  }
}

uint64_t sub_21DC4FFB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  _BOOL8 v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char v51;
  uint64_t v52;
  _BOOL8 v53;
  uint64_t v54;
  char v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t result;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;

  v3 = v2;
  v62 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v7 = MEMORY[0x24BDAC7A8](v62, v6);
  v63 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v64 = (uint64_t)&v62 - v11;
  MEMORY[0x24BDAC7A8](v10, v12);
  v67 = (uint64_t)&v62 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA438);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v68 = (uint64_t)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v69 = (uint64_t)&v62 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19, v21);
  v24 = (char *)&v62 - v23;
  v26 = MEMORY[0x24BDAC7A8](v22, v25);
  v28 = (char *)&v62 - v27;
  v30 = MEMORY[0x24BDAC7A8](v26, v29);
  v32 = (char *)&v62 - v31;
  v33 = (uint64_t)&v62 + *(int *)(v30 + 48) - v31;
  sub_21DC0C210(a1, (uint64_t)&v62 - v31, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  sub_21DC0C210(a2, v33, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  v34 = (uint64_t)&v28[*(int *)(v14 + 48)];
  sub_21DC0C210((uint64_t)v32, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  v66 = v34;
  sub_21DC0C210(v33, v34, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  v35 = (uint64_t)&v24[*(int *)(v14 + 48)];
  sub_21DC0C210((uint64_t)v32, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  v65 = v35;
  sub_21DC0C210(v33, v35, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  v36 = (_QWORD *)(v3 + 16);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v70 = *(_QWORD **)(v3 + 16);
  v38 = v70;
  *(_QWORD *)(v3 + 16) = 0x8000000000000000;
  v40 = sub_21DC0A7A4((uint64_t)v28);
  v41 = v38[2];
  v42 = (v39 & 1) == 0;
  v43 = v41 + v42;
  if (__OFADD__(v41, v42))
  {
    __break(1u);
    goto LABEL_18;
  }
  LOBYTE(v3) = v39;
  if (v38[3] >= v43)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      goto LABEL_19;
  }
  else
  {
    sub_21DC1311C(v43, isUniquelyReferenced_nonNull_native);
    v38 = v70;
    v44 = sub_21DC0A7A4((uint64_t)v28);
    if ((v3 & 1) != (v45 & 1))
      goto LABEL_20;
    v40 = v44;
  }
  while (1)
  {
    *v36 = v38;
    swift_bridgeObjectRelease();
    v46 = (_QWORD *)*v36;
    if ((v3 & 1) == 0)
    {
      v47 = v64;
      sub_21DC0C210((uint64_t)v28, v64, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      sub_21DC5D0D0(v40, v47, MEMORY[0x24BEE4B08], v46, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    }
    v48 = v67;
    sub_21DC643F0(v67, v65);
    sub_21DC5FCD8(v48);
    swift_endAccess();
    sub_21DC5FCD8((uint64_t)v24);
    sub_21DC5FCD8(v66);
    sub_21DC5FCD8((uint64_t)v28);
    v3 = v69;
    v28 = (char *)(v69 + *(int *)(v14 + 48));
    sub_21DC0C210((uint64_t)v32, v69, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    sub_21DC0C210(v33, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    v49 = *(int *)(v14 + 48);
    v14 = v68;
    v40 = v68 + v49;
    sub_21DC0C210((uint64_t)v32, v68, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    sub_21DC0C210(v33, v40, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    swift_beginAccess();
    v33 = swift_isUniquelyReferenced_nonNull_native();
    v70 = (_QWORD *)*v36;
    v50 = v70;
    *v36 = 0x8000000000000000;
    v24 = (char *)sub_21DC0A7A4((uint64_t)v28);
    v52 = v50[2];
    v53 = (v51 & 1) == 0;
    v54 = v52 + v53;
    if (!__OFADD__(v52, v53))
      break;
LABEL_18:
    __break(1u);
LABEL_19:
    sub_21DC5EF48((uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID, &qword_2553A84A0);
    v38 = v70;
  }
  v55 = v51;
  if (v50[3] >= v54)
  {
    if ((v33 & 1) == 0)
    {
      sub_21DC5EF48((uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID, &qword_2553A84A0);
      v50 = v70;
    }
    goto LABEL_14;
  }
  sub_21DC1311C(v54, v33);
  v50 = v70;
  v56 = sub_21DC0A7A4((uint64_t)v28);
  if ((v55 & 1) != (v57 & 1))
  {
LABEL_20:
    result = sub_21DC720E0();
    __break(1u);
    return result;
  }
  v24 = (char *)v56;
LABEL_14:
  v58 = (uint64_t)v63;
  *v36 = v50;
  swift_bridgeObjectRelease();
  v59 = (_QWORD *)*v36;
  if ((v55 & 1) == 0)
  {
    v60 = v64;
    sub_21DC0C210((uint64_t)v28, v64, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    sub_21DC5D0D0((unint64_t)v24, v60, MEMORY[0x24BEE4B08], v59, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  }
  sub_21DC643F0(v58, v14);
  sub_21DC5FCD8(v58);
  swift_endAccess();
  sub_21DC07C84((uint64_t)v32, &qword_2553AA438);
  sub_21DC5FCD8(v40);
  sub_21DC5FCD8((uint64_t)v28);
  return sub_21DC5FCD8(v3);
}

uint64_t sub_21DC504C0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = result;
  v3 = 0;
  v15 = a2;
  v4 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    result = sub_21DC63B88(&v14, *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v10));
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_21DC50618(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = result;
  v3 = 0;
  v15 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    result = sub_21DC63B88(&v14, *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v10));
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_21DC50770(unint64_t a1, void *a2)
{
  unint64_t v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  _QWORD *v17;
  id v18[7];

  v2 = a1;
  v18[1] = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_21DC71DF8();
    sub_21DC71804();
    sub_21DC13D04((unint64_t *)&unk_2553AA580, (uint64_t (*)(uint64_t))MEMORY[0x24BE94860], MEMORY[0x24BEE5BD8]);
    sub_21DC71C84();
    v2 = (unint64_t)v18[2];
    v17 = v18[3];
    v3 = (uint64_t)v18[4];
    v4 = v18[5];
    v5 = (unint64_t)v18[6];
  }
  else
  {
    v4 = 0;
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v17 = (_QWORD *)(a1 + 56);
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
  }
  v9 = (unint64_t)(v3 + 64) >> 6;
  if ((v2 & 0x8000000000000000) != 0)
    goto LABEL_10;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | ((_QWORD)v4 << 6);
      v12 = (char *)v4;
      goto LABEL_29;
    }
    v14 = (uint64_t)v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v14 >= v9)
      goto LABEL_32;
    v15 = v17[v14];
    v12 = (char *)v4 + 1;
    if (!v15)
    {
      v12 = (char *)v4 + 2;
      if ((uint64_t)v4 + 2 >= v9)
        goto LABEL_32;
      v15 = v17[(_QWORD)v12];
      if (!v15)
      {
        v12 = (char *)v4 + 3;
        if ((uint64_t)v4 + 3 >= v9)
          goto LABEL_32;
        v15 = v17[(_QWORD)v12];
        if (!v15)
        {
          v12 = (char *)v4 + 4;
          if ((uint64_t)v4 + 4 >= v9)
            goto LABEL_32;
          v15 = v17[(_QWORD)v12];
          if (!v15)
          {
            v12 = (char *)v4 + 5;
            if ((uint64_t)v4 + 5 >= v9)
              goto LABEL_32;
            v15 = v17[(_QWORD)v12];
            if (!v15)
            {
              v16 = (char *)v4 + 6;
              while ((char *)v9 != v16)
              {
                v15 = v17[(_QWORD)v16++];
                if (v15)
                {
                  v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_21DC0C1C4();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v10 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + ((_QWORD)v12 << 6);
LABEL_29:
    v13 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v11);
    if (!v13)
      goto LABEL_32;
    while (1)
    {
      sub_21DC63CA4(v18, v13);

      v4 = v12;
      v5 = v10;
      if ((v2 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_21DC71E4C())
      {
        sub_21DC71804();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v13 = v18[0];
        swift_unknownObjectRelease();
        v12 = (char *)v4;
        v10 = v5;
        if (v13)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_21DC50A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  int v19;
  int v20;
  char v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  swift_beginAccess();
  v10 = *(_QWORD *)(a5 + 16);
  v11 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11 && (v12 = sub_21DC0A5CC(a1, a2, a3, a4), (v13 & 1) != 0))
  {
    v14 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = MEMORY[0x24BEE4B08];
  }
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v34 = MEMORY[0x24BEE4AF8];
    sub_21DC4BB10(0, v15, 0);
    v16 = v34;
    result = sub_21DC5F864(v14);
    v18 = result;
    v20 = v19;
    v22 = v21 & 1;
    while ((v18 & 0x8000000000000000) == 0 && v18 < 1 << *(_BYTE *)(v14 + 32))
    {
      if (((*(_QWORD *)(v14 + 56 + (((unint64_t)v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
        goto LABEL_18;
      if (*(_DWORD *)(v14 + 36) != v20)
        goto LABEL_19;
      v33 = v22;
      v23 = (uint64_t *)(*(_QWORD *)(v14 + 48) + 32 * v18);
      v24 = v23[1];
      v25 = v23[3];
      v31 = v23[2];
      v32 = *v23;
      v27 = *(_QWORD *)(v34 + 16);
      v26 = *(_QWORD *)(v34 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v27 >= v26 >> 1)
        sub_21DC4BB10(v26 > 1, v27 + 1, 1);
      *(_QWORD *)(v34 + 16) = v27 + 1;
      v28 = (_QWORD *)(v34 + 32 * v27);
      v28[4] = v32;
      v28[5] = v24;
      v28[6] = v31;
      v28[7] = v25;
      result = sub_21DC5F908(v18, v20, v33 & 1, v14);
      v18 = result;
      v20 = v29;
      v22 = v30 & 1;
      if (!--v15)
      {
        sub_21DC3A41C(result, v29, v22);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v16;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_21DC50C60(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  int64_t v20;
  uint64_t v21;
  char v22;
  uint64_t result;
  void (*v24)(_BYTE *, _QWORD);
  uint64_t v25;
  void *v26;
  _BYTE v27[32];
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  swift_beginAccess();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 + 16);
  v6 = a1;
  swift_bridgeObjectRetain();
  v26 = v6;
  if (v5 && (v7 = sub_21DC0A4BC((uint64_t)v6), (v8 & 1) != 0))
  {
    v9 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v7);
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = MEMORY[0x24BEE4B08];
  }
  swift_bridgeObjectRelease();
  if ((v9 & 0xC000000000000001) != 0)
  {
    v10 = sub_21DC71E28();
    if (!v10)
      goto LABEL_19;
    v11 = v10;
    v31 = MEMORY[0x24BEE4AF8];
    sub_21DC71F24();
    v28 = sub_21DC71DEC();
    v29 = v12;
    v30 = 1;
    if ((v11 & 0x8000000000000000) == 0)
      goto LABEL_13;
    __break(1u);
  }
  v11 = *(_QWORD *)(v9 + 16);
  if (!v11)
  {
LABEL_19:

    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  v31 = MEMORY[0x24BEE4AF8];
  sub_21DC71F24();
  v28 = sub_21DC5FC34(v9);
  v29 = v13;
  v30 = v14 & 1;
  while (1)
  {
LABEL_13:
    while (1)
    {
      v20 = v28;
      v21 = v29;
      v22 = v30;
      sub_21DC5F9EC(v28, v29, v30, v9);
      sub_21DC71F00();
      sub_21DC71F30();
      sub_21DC71F3C();
      result = sub_21DC71F0C();
      if ((v9 & 0xC000000000000001) != 0)
        break;
      v15 = sub_21DC5F908(v20, v21, v22, v9);
      v17 = v16;
      v19 = v18;
      sub_21DC3A41C(v20, v21, v22);
      v28 = v15;
      v29 = v17;
      v30 = v19 & 1;
      if (!--v11)
        goto LABEL_18;
    }
    if ((v22 & 1) == 0)
      break;
    if (sub_21DC71E04())
      swift_isUniquelyReferenced_nonNull_native();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9A18);
    v24 = (void (*)(_BYTE *, _QWORD))sub_21DC71C78();
    sub_21DC71E64();
    v24(v27, 0);
    if (!--v11)
    {
LABEL_18:
      sub_21DC3A41C(v28, v29, v30);
      v25 = v31;

      swift_bridgeObjectRelease();
      return v25;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC50EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  int64_t v24;
  char v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  char *v37;
  int64_t v38;
  uint64_t v39;

  v3 = v2;
  v6 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v37 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v32 - v12;
  sub_21DC0C210(a1, (uint64_t)&v32 - v12, v14);
  swift_beginAccess();
  v15 = *(_QWORD *)(a2 + 16);
  v16 = *(_QWORD *)(v15 + 16);
  swift_bridgeObjectRetain();
  if (v16 && (v17 = sub_21DC0A7A4((uint64_t)v13), (v18 & 1) != 0))
  {
    v19 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v17);
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = MEMORY[0x24BEE4B08];
  }
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    v33 = v13;
    v34 = v3;
    v39 = MEMORY[0x24BEE4AF8];
    v38 = v20;
    sub_21DC4BBE0(0, v20, 0);
    v21 = v39;
    result = sub_21DC5F864(v19);
    v24 = result;
    v26 = v25 & 1;
    v35 = v19 + 56;
    v27 = (uint64_t)v37;
    while ((v24 & 0x8000000000000000) == 0 && v24 < 1 << *(_BYTE *)(v19 + 32))
    {
      if (((*(_QWORD *)(v35 + (((unint64_t)v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
        goto LABEL_18;
      if (*(_DWORD *)(v19 + 36) != (_DWORD)v23)
        goto LABEL_19;
      v36 = v26;
      v37 = (char *)v23;
      v28 = *(_QWORD *)(v7 + 72);
      sub_21DC0C210(*(_QWORD *)(v19 + 48) + v28 * v24, v27, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      v39 = v21;
      v30 = *(_QWORD *)(v21 + 16);
      v29 = *(_QWORD *)(v21 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_21DC4BBE0(v29 > 1, v30 + 1, 1);
        v21 = v39;
      }
      *(_QWORD *)(v21 + 16) = v30 + 1;
      sub_21DC13CC0(v27, v21 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + v30 * v28, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      result = sub_21DC5F908(v24, (int)v37, v36 & 1, v19);
      v24 = result;
      v26 = v31 & 1;
      if (!--v38)
      {
        sub_21DC3A41C(result, v23, v26);
        swift_bridgeObjectRelease();
        v13 = v33;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x24BEE4AF8];
LABEL_16:
    sub_21DC5FCD8((uint64_t)v13);
    return v21;
  }
  return result;
}

uint64_t sub_21DC51184(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v3 = (uint64_t *)(v1 + 16);
    v4 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
    do
    {
      v5 = *(v4 - 3);
      v6 = *(v4 - 2);
      v8 = *(v4 - 1);
      v7 = *v4;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v9 = sub_21DC0A5CC(v5, v6, v8, v7);
      v11 = v10;
      swift_bridgeObjectRelease();
      if ((v11 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v13 = *v3;
        v14 = *v3;
        *v3 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_21DC5D87C(&qword_2553A84D8);
          v13 = v14;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21DC68F18(v9, v13);
        *v3 = v13;
        swift_bridgeObjectRelease();
      }
      v4 += 4;
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21DC512EC(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t *v6;
  id v7;
  void *v8;
  unint64_t v9;
  char v10;
  char v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;

  if (!(a1 >> 62))
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_21DC71FCC();
  v3 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    v6 = (uint64_t *)(v1 + 16);
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x22079D208](v5, a1);
      else
        v7 = *(id *)(a1 + 8 * v5 + 32);
      v8 = v7;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v9 = sub_21DC0A4BC((uint64_t)v8);
      v11 = v10;
      swift_bridgeObjectRelease();
      if ((v11 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v13 = *v6;
        v14 = *v6;
        *v6 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_21DC5E910(&qword_2553A84B0);
          v13 = v14;
        }

        sub_21DC690CC(v9, v13);
        *v6 = v13;
        swift_bridgeObjectRelease();
      }
      ++v5;
      swift_endAccess();

      swift_bridgeObjectRelease();
    }
    while (v3 != v5);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC514A0(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  unint64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[4];
  int64_t v22;

  v6 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v22 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v11 = 0;
  if (!v9)
    goto LABEL_5;
LABEL_4:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 32 * i);
    v18 = v17[1];
    v19 = v17[2];
    v20 = v17[3];
    v21[0] = *v17;
    v21[1] = v18;
    v21[2] = v19;
    v21[3] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a1(v21);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v11 >= v22)
      return swift_release();
    v15 = *(_QWORD *)(v6 + 8 * v11);
    if (!v15)
      break;
LABEL_17:
    v9 = (v15 - 1) & v15;
  }
  v16 = v11 + 1;
  if (v11 + 1 >= v22)
    return swift_release();
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
    goto LABEL_16;
  v16 = v11 + 2;
  if (v11 + 2 >= v22)
    return swift_release();
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
    goto LABEL_16;
  v16 = v11 + 3;
  if (v11 + 3 >= v22)
    return swift_release();
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
    goto LABEL_16;
  v16 = v11 + 4;
  if (v11 + 4 >= v22)
    return swift_release();
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
LABEL_16:
    v11 = v16;
    goto LABEL_17;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v22)
      return swift_release();
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_21DC51688(void (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  id v28;

  v4 = v3;
  v5 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_21DC71DF8();
    sub_21DC71804();
    sub_21DC13D04((unint64_t *)&unk_2553AA580, (uint64_t (*)(uint64_t))MEMORY[0x24BE94860], MEMORY[0x24BEE5BD8]);
    sub_21DC71C84();
    v5 = v23;
    v22 = v24;
    v7 = v25;
    v8 = v26;
    v9 = v27;
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a3 + 32);
    v22 = a3 + 56;
    v11 = ~v10;
    v12 = -v10;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v9 = v13 & *(_QWORD *)(a3 + 56);
    swift_bridgeObjectRetain();
    v7 = v11;
    v8 = 0;
  }
  v21 = (unint64_t)(v7 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  if (sub_21DC71E4C())
  {
    sub_21DC71804();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v14 = v28;
    swift_unknownObjectRelease();
    v15 = v8;
    v16 = v9;
    while (v14)
    {
      v28 = v14;
      a1(&v28);

      if (v4)
        break;
      v8 = v15;
      v9 = v16;
      if (v5 < 0)
        goto LABEL_8;
LABEL_11:
      if (v9)
      {
        v16 = (v9 - 1) & v9;
        v17 = __clz(__rbit64(v9)) | (v8 << 6);
        v15 = v8;
      }
      else
      {
        v15 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          return;
        }
        if (v15 >= v21)
          break;
        v18 = *(_QWORD *)(v22 + 8 * v15);
        if (!v18)
        {
          v19 = v8 + 2;
          if (v8 + 2 >= v21)
            break;
          v18 = *(_QWORD *)(v22 + 8 * v19);
          if (v18)
            goto LABEL_22;
          v19 = v8 + 3;
          if (v8 + 3 >= v21)
            break;
          v18 = *(_QWORD *)(v22 + 8 * v19);
          if (v18)
            goto LABEL_22;
          v19 = v8 + 4;
          if (v8 + 4 >= v21)
            break;
          v18 = *(_QWORD *)(v22 + 8 * v19);
          if (v18)
          {
LABEL_22:
            v15 = v19;
          }
          else
          {
            v15 = v8 + 5;
            if (v8 + 5 >= v21)
              break;
            v18 = *(_QWORD *)(v22 + 8 * v15);
            if (!v18)
            {
              v20 = v8 + 6;
              while (v21 != v20)
              {
                v18 = *(_QWORD *)(v22 + 8 * v20++);
                if (v18)
                {
                  v15 = v20 - 1;
                  goto LABEL_23;
                }
              }
              break;
            }
          }
        }
LABEL_23:
        v16 = (v18 - 1) & v18;
        v17 = __clz(__rbit64(v18)) + (v15 << 6);
      }
      v14 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v17);
    }
  }
  sub_21DC0C1C4();
}

uint64_t sub_21DC5197C(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  void (*v28)(char *);
  uint64_t v29;

  v28 = a1;
  v5 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA430);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a3 + 56);
  v26 = a3 + 56;
  v15 = 1 << *(_BYTE *)(a3 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v27 = (unint64_t)(v15 + 63) >> 6;
  v29 = a3;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v21 = v20 | (v19 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v19++, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v19 >= v27)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v19);
    if (!v23)
      break;
LABEL_18:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_19:
    sub_21DC0C210(*(_QWORD *)(v29 + 48) + *(_QWORD *)(v6 + 72) * v21, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v13, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v13, 1, v5) != 1)
    {
      sub_21DC13CC0((uint64_t)v13, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      v28(v9);
      result = sub_21DC5FCD8((uint64_t)v9);
      if (!v3)
        continue;
    }
    return swift_release();
  }
  v24 = v19 + 1;
  if (v19 + 1 >= v27)
    goto LABEL_26;
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
    goto LABEL_17;
  v24 = v19 + 2;
  if (v19 + 2 >= v27)
    goto LABEL_26;
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
    goto LABEL_17;
  v24 = v19 + 3;
  if (v19 + 3 >= v27)
    goto LABEL_26;
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
    goto LABEL_17;
  v24 = v19 + 4;
  if (v19 + 4 >= v27)
  {
LABEL_26:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v13, 1, 1, v5);
    return swift_release();
  }
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
LABEL_17:
    v19 = v24;
    goto LABEL_18;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v27)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v19);
    ++v24;
    if (v23)
      goto LABEL_18;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_21DC51C28(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t inited;
  _QWORD *v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  _QWORD *v32;
  id v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t result;
  _QWORD v49[4];
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9780);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21DC73350;
  *(_QWORD *)(inited + 32) = a1;
  v51 = inited + 32;
  v15 = v7 + 3;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v50 = a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v58 = v7[3];
  v17 = v58;
  v7[3] = 0x8000000000000000;
  v52 = a2;
  v18 = a2;
  v19 = a4;
  v21 = sub_21DC0A5CC(v18, a3, a4, a5);
  v22 = *(_QWORD *)(v17 + 16);
  v23 = (v20 & 1) == 0;
  v24 = v22 + v23;
  if (__OFADD__(v22, v23))
  {
    __break(1u);
    goto LABEL_17;
  }
  LOBYTE(a4) = v20;
  if (*(_QWORD *)(v17 + 24) >= v24)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      goto LABEL_19;
    while (1)
    {
LABEL_6:
      *v15 = v17;
      swift_bridgeObjectRelease();
      v27 = (_QWORD *)*v15;
      v15 = (_QWORD *)v19;
      if ((a4 & 1) == 0)
      {
        v27[(v21 >> 6) + 8] |= 1 << v21;
        v28 = (_QWORD *)(v27[6] + 32 * v21);
        *v28 = v52;
        v28[1] = a3;
        v28[2] = v19;
        v28[3] = a5;
        *(_QWORD *)(v27[7] + 8 * v21) = MEMORY[0x24BEE4AF8];
        v29 = v27[2];
        v30 = __OFADD__(v29, 1);
        v31 = v29 + 1;
        if (v30)
        {
          __break(1u);
          goto LABEL_21;
        }
        v27[2] = v31;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v32 = (_QWORD *)(v27[7] + 8 * v21);
      v33 = v50;
      LOBYTE(a4) = (_BYTE)v33;
      MEMORY[0x22079CE84]();
      if (*(_QWORD *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_17:
        sub_21DC71BA0();
      sub_21DC71BC4();
      sub_21DC71B94();
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      swift_arrayDestroy();
      v19 = (uint64_t)(v7 + 5);
      swift_beginAccess();
      v21 = v52;
      if (!*(_QWORD *)(v7[5] + 16)
        || (swift_bridgeObjectRetain(),
            sub_21DC0A5CC(v21, a3, (uint64_t)v15, a5),
            v35 = v34,
            swift_bridgeObjectRelease(),
            (v35 & 1) == 0))
      {
        swift_retain();
        a4 = sub_21DC1DFDC(v21, a3, (uint64_t)v15, a5);
        swift_release();
        v54 = sub_21DC574BC(a4);
        v55 = v36;
        v56 = v37;
        v57 = v38;
        MEMORY[0x24BDAC7A8](v54, v36);
        v49[2] = v7;
        v49[3] = &v54;
        sub_21DC514A0((void (*)(_QWORD *))sub_21DC60F1C, (uint64_t)v49, a4);
        sub_21DC20194(v54, v55);
        swift_bridgeObjectRelease();
      }
      v39 = *(_QWORD *)v19;
      if (*(_QWORD *)(*(_QWORD *)v19 + 16))
        break;
      __break(1u);
LABEL_19:
      sub_21DC5D87C(&qword_2553AA5B0);
      v17 = v58;
    }
    swift_bridgeObjectRetain();
    v40 = sub_21DC0A5CC(v21, a3, (uint64_t)v15, a5);
    if ((v41 & 1) != 0)
    {
      v42 = (uint64_t *)(*(_QWORD *)(v39 + 56) + 32 * v40);
      v44 = *v42;
      v43 = v42[1];
      v46 = v42[2];
      v45 = v42[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v47 = swift_isUniquelyReferenced_nonNull_native();
      v53 = v7[2];
      v7[2] = 0x8000000000000000;
      sub_21DC3C6DC(v44, v43, v46, v45, v47, a6);
      v7[2] = v53;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
LABEL_21:
    swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    sub_21DC1030C(v24, isUniquelyReferenced_nonNull_native);
    v17 = v58;
    v25 = sub_21DC0A5CC(v52, a3, v19, a5);
    if ((a4 & 1) == (v26 & 1))
    {
      v21 = v25;
      goto LABEL_6;
    }
  }
  swift_release();
  result = sub_21DC720E0();
  __break(1u);
  return result;
}

void sub_21DC520A8(uint64_t a1, void *a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t inited;
  uint64_t v9;
  unint64_t *v10;
  id v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  id v47;
  char v48;
  _QWORD v49[4];
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[4];

  v4 = v3;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9780);
  inited = swift_initStackObject();
  v50 = xmmword_21DC73350;
  *(_OWORD *)(inited + 16) = xmmword_21DC73350;
  *(_QWORD *)(inited + 32) = a1;
  v9 = inited + 32;
  v10 = v4 + 3;
  swift_beginAccess();
  v11 = a2;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v53[0] = v4[3];
  v13 = v53[0];
  v4[3] = 0x8000000000000000;
  v15 = sub_21DC0A4BC((uint64_t)v11);
  v16 = *(_QWORD *)(v13 + 16);
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
LABEL_22:
    sub_21DC71BA0();
    goto LABEL_11;
  }
  v19 = v14;
  if (*(_QWORD *)(v13 + 24) >= v18)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_21DC5E910((uint64_t *)&unk_2553AA560);
      v13 = v53[0];
    }
  }
  else
  {
    sub_21DC1180C(v18, isUniquelyReferenced_nonNull_native);
    v13 = v53[0];
    v20 = sub_21DC0A4BC((uint64_t)v11);
    if ((v19 & 1) != (v21 & 1))
      goto LABEL_30;
    v15 = v20;
  }
  *v10 = v13;
  swift_bridgeObjectRelease();
  v22 = *v10;
  if ((v19 & 1) == 0)
  {
    *(_QWORD *)(v22 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    v23 = 8 * v15;
    *(_QWORD *)(*(_QWORD *)(v22 + 48) + v23) = v11;
    *(_QWORD *)(*(_QWORD *)(v22 + 56) + v23) = MEMORY[0x24BEE4AF8];
    v24 = *(_QWORD *)(v22 + 16);
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
      goto LABEL_24;
    }
    *(_QWORD *)(v22 + 16) = v26;
    v27 = v11;
  }
  v28 = (_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v15);
  v29 = swift_retain();
  MEMORY[0x22079CE84](v29);
  if (*(_QWORD *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_22;
LABEL_11:
  sub_21DC71BC4();
  sub_21DC71B94();
  swift_endAccess();

  swift_setDeallocating();
  swift_arrayDestroy();
  inited = (uint64_t)(v4 + 5);
  swift_beginAccess();
  v30 = v4[5];
  swift_bridgeObjectRetain();
  v31 = sub_21DC52C2C(v11, v30);
  swift_bridgeObjectRelease();
  if (!v31)
  {
    v9 = v4[4];
    v32 = swift_initStackObject();
    *(_OWORD *)(v32 + 16) = v50;
    *(_QWORD *)(v32 + 32) = v11;
    v53[0] = v32;
    swift_retain();
    sub_21DC71B94();
    v22 = v53[0];
    if (!(v53[0] >> 62))
    {
      v33 = *(_QWORD *)((v53[0] & 0xFFFFFFFFFFFFF8) + 0x10);
      v34 = v11;
      if (v33)
        goto LABEL_15;
      goto LABEL_25;
    }
LABEL_24:
    v40 = v11;
    swift_bridgeObjectRetain();
    v41 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    if (v41)
    {
LABEL_15:
      v35 = MEMORY[0x24BEE4B08];
      do
      {
        while (1)
        {
          v36 = swift_bridgeObjectRetain();
          v35 = sub_21DC604D0(v36, v35);
          swift_bridgeObjectRelease();
          v53[0] = v35;
          swift_retain();
          v37 = sub_21DC60024(v22, v9);
          swift_bridgeObjectRelease();
          swift_release();
          v22 = sub_21DC5FD14(v37, v53);
          swift_bridgeObjectRelease();
          if (v22 >> 62)
            break;
          if (!*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_20;
        }
        swift_bridgeObjectRetain();
        v38 = sub_21DC71FCC();
        swift_bridgeObjectRelease();
      }
      while (v38);
LABEL_20:
      swift_bridgeObjectRelease();
      v39 = v53[0];
      goto LABEL_26;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    v39 = MEMORY[0x24BEE4B08];
LABEL_26:
    swift_release();
    sub_21DC57810(v39);
    v53[0] = v42;
    MEMORY[0x24BDAC7A8](v42, v43);
    v49[2] = v4;
    v49[3] = v53;
    sub_21DC51688((void (*)(id *))sub_21DC60F74, (uint64_t)v49, v39);
    v44 = (void *)v53[0];
    swift_bridgeObjectRelease();

    goto LABEL_27;
  }

LABEL_27:
  v45 = *(_QWORD *)inited;
  swift_bridgeObjectRetain();
  v46 = sub_21DC52C2C(v11, v45);
  swift_bridgeObjectRelease();
  if (v46)
  {
    swift_beginAccess();
    v47 = v46;
    v48 = swift_isUniquelyReferenced_nonNull_native();
    v52 = v4[2];
    v4[2] = 0x8000000000000000;
    sub_21DC3CC20(v47, v48, a3);
    v4[2] = v52;

    swift_bridgeObjectRelease();
    swift_endAccess();

    return;
  }
  __break(1u);
LABEL_30:
  swift_release();
  sub_21DC71804();
  sub_21DC720E0();
  __break(1u);
}

uint64_t sub_21DC52584(void *a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(_QWORD);
  uint64_t inited;
  uint64_t *v28;
  id v29;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  id v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  void (*v52)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)();
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t result;
  uint64_t (*v71)();
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80[4];

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA430);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v75 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v71 = (uint64_t (*)())((char *)&v71 - v14);
  MEMORY[0x24BDAC7A8](v13, v15);
  v73 = (uint64_t)&v71 - v16;
  v74 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v77 = *(_QWORD *)(v74 - 8);
  v18 = MEMORY[0x24BDAC7A8](v74, v17);
  v72 = (uint64_t)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18, v20);
  v76 = (uint64_t)&v71 - v22;
  MEMORY[0x24BDAC7A8](v21, v23);
  v25 = (char *)&v71 - v24;
  v78 = a2;
  sub_21DC0C210(a2, (uint64_t)&v71 - v24, v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9780);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21DC73350;
  *(_QWORD *)(inited + 32) = a1;
  v28 = (uint64_t *)(v4 + 24);
  swift_beginAccess();
  v29 = a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v80[0] = *(_QWORD *)(v4 + 24);
  v31 = v80[0];
  *(_QWORD *)(v4 + 24) = 0x8000000000000000;
  v33 = sub_21DC0A7A4((uint64_t)v25);
  v34 = *(_QWORD *)(v31 + 16);
  v35 = (v32 & 1) == 0;
  v36 = v34 + v35;
  if (__OFADD__(v34, v35))
  {
    __break(1u);
LABEL_27:
    sub_21DC71BA0();
    goto LABEL_10;
  }
  v37 = v32;
  if (*(_QWORD *)(v31 + 24) >= v36)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_21DC5EF48((uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID, &qword_2553AA460);
      v31 = v80[0];
    }
  }
  else
  {
    sub_21DC13110(v36, isUniquelyReferenced_nonNull_native);
    v31 = v80[0];
    v38 = sub_21DC0A7A4((uint64_t)v25);
    if ((v37 & 1) != (v39 & 1))
      goto LABEL_30;
    v33 = v38;
  }
  *v28 = v31;
  swift_bridgeObjectRelease();
  v40 = (_QWORD *)*v28;
  if ((v37 & 1) == 0)
  {
    v41 = v76;
    sub_21DC0C210((uint64_t)v25, v76, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    sub_21DC5D0D0(v33, v41, MEMORY[0x24BEE4AF8], v40, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  }
  v42 = (_QWORD *)(v40[7] + 8 * v33);
  v43 = v29;
  MEMORY[0x22079CE84]();
  if (*(_QWORD *)((*v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_27;
LABEL_10:
  sub_21DC71BC4();
  sub_21DC71B94();
  sub_21DC5FCD8((uint64_t)v25);
  swift_endAccess();
  swift_setDeallocating();
  swift_arrayDestroy();
  v44 = (uint64_t *)(v4 + 40);
  swift_beginAccess();
  v45 = *(_QWORD *)(v4 + 40);
  if (!*(_QWORD *)(v45 + 16))
  {
    v49 = v77;
    v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56);
    v50 = v73;
    v48 = v74;
    v52(v73, 1, 1, v74);
    v47 = (uint64_t)v75;
LABEL_16:
    sub_21DC07C84(v50, &qword_2553AA430);
    v53 = *(_QWORD *)(v4 + 32);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8518);
    v54 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
    v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_21DC73650;
    sub_21DC0C210(v78, v55 + v54, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    swift_retain();
    v56 = MEMORY[0x24BEE4B08];
    do
    {
      v57 = swift_bridgeObjectRetain();
      v56 = sub_21DC605AC(v57, v56);
      swift_bridgeObjectRelease();
      v80[0] = v56;
      swift_retain();
      v58 = sub_21DC60180(v55, v53);
      swift_bridgeObjectRelease();
      swift_release();
      v55 = sub_21DC4F1EC(v58, v80);
    }
    while (*(_QWORD *)(v55 + 16));
    swift_release();
    swift_bridgeObjectRelease();
    v59 = v80[0];
    v60 = v71;
    v61 = sub_21DC57D48(v80[0], v71);
    MEMORY[0x24BDAC7A8](v61, v62);
    *(&v71 - 2) = (uint64_t (*)())v4;
    *(&v71 - 1) = v60;
    sub_21DC5197C((void (*)(char *))sub_21DC60F8C, (uint64_t)(&v71 - 4), v59);
    sub_21DC07C84((uint64_t)v60, &qword_2553AA430);
    swift_bridgeObjectRelease();
    v49 = v77;
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  v46 = sub_21DC0A7A4(v78);
  v48 = v74;
  v47 = (uint64_t)v75;
  v49 = v77;
  v50 = v73;
  if ((v51 & 1) != 0)
  {
    sub_21DC0C210(*(_QWORD *)(v45 + 56) + *(_QWORD *)(v77 + 72) * v46, v73, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56);
    v52(v50, 0, 1, v48);
  }
  else
  {
    v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56);
    v52(v73, 1, 1, v74);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v50, 1, v48) == 1)
    goto LABEL_16;
  sub_21DC07C84(v50, &qword_2553AA430);
LABEL_20:
  v63 = *v44;
  if (*(_QWORD *)(*v44 + 16))
  {
    swift_bridgeObjectRetain();
    v64 = sub_21DC0A7A4(v78);
    if ((v65 & 1) != 0)
    {
      sub_21DC0C210(*(_QWORD *)(v63 + 56) + *(_QWORD *)(v49 + 72) * v64, v47, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      v66 = 0;
    }
    else
    {
      v66 = 1;
    }
    v52(v47, v66, 1, v48);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48) != 1)
    {
      v67 = v72;
      sub_21DC13CC0(v47, v72, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      v68 = v76;
      sub_21DC0C210(v67, v76, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      swift_beginAccess();
      v69 = swift_isUniquelyReferenced_nonNull_native();
      v79 = *(_QWORD *)(v4 + 16);
      *(_QWORD *)(v4 + 16) = 0x8000000000000000;
      sub_21DC3D0FC(v68, v69, a3);
      *(_QWORD *)(v4 + 16) = v79;
      swift_bridgeObjectRelease();
      sub_21DC5FCD8(v68);
      swift_endAccess();
      return sub_21DC5FCD8(v67);
    }
  }
  else
  {
    v52(v47, 1, 1, v48);
  }
  __break(1u);
LABEL_30:
  swift_release();
  result = sub_21DC720E0();
  __break(1u);
  return result;
}

void *sub_21DC52C2C(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  char v7;
  id v8;
  void *v10;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v6 = sub_21DC0A4BC((uint64_t)a1);
      if ((v7 & 1) != 0)
      {
        v5 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v6);
        v8 = v5;
        return v5;
      }
    }
    return 0;
  }
  v3 = a1;
  v4 = sub_21DC71F90();

  if (!v4)
    return 0;
  sub_21DC71804();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v5 = v10;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_21DC52CF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_21DC14B60(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), 8 * v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC52E34(unint64_t a1)
{
  return sub_21DC53010(a1, (unint64_t *)type metadata accessor for AnteroEvent, (unint64_t *)&unk_2553AA5C0, &qword_2553AA5B8, (uint64_t *)sub_21DC0BCCC);
}

uint64_t sub_21DC52E58(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x22079D214](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_21DC5F380(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_21DC71B94();
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC53010(unint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  unint64_t *v5;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = *v5;
  if (*v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    v14 = v13 + v11;
    if (!__OFADD__(v13, v11))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
    goto LABEL_23;
LABEL_5:
  v12 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v5 = v12;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v13 = 1;
  }
  v23 = v11;
  v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if (v12 >> 62)
    goto LABEL_25;
  v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14)
      v17 = v14;
    swift_bridgeObjectRetain();
    v12 = MEMORY[0x22079D214](v13, v17, 1, v12);
    swift_bridgeObjectRelease();
    *v5 = v12;
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    v11 = v23;
LABEL_15:
    result = sub_21DC5F5A8(v16 + 8 * *(_QWORD *)(v16 + 16) + 32, (*(_QWORD *)(v16 + 24) >> 1) - *(_QWORD *)(v16 + 16), a1, (void (*)(_QWORD))a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v17 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
  }
  if (v19 < 1)
    goto LABEL_19;
  v20 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = __OFADD__(v20, v19);
  v22 = v20 + v19;
  if (!v21)
  {
    *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_21DC71B94();
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC53220(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t inited;
  _QWORD *v21;
  _QWORD *v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  _QWORD *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t *v55;
  uint64_t v56;
  void *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  double v77;
  char v78;
  char v79;
  uint64_t result;
  uint64_t v81;
  char v82;
  _QWORD v83[5];
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v94 = a6;
  v16 = a10;
  v95 = a5;
  v98 = a10;
  v92 = a4;
  if (a8 == a4 && a10 == a5 || (sub_21DC720A4() & 1) != 0)
  {
    if (v94 == a2 && a7 == a3)
      goto LABEL_7;
    v17 = v94;
    v18 = a7;
    v16 = v98;
    v19 = a8;
    if ((sub_21DC720A4() & 1) == 0)
      goto LABEL_7;
  }
  else
  {
    v18 = a7;
    v17 = v94;
    v19 = a8;
    if ((sub_21DC720A4() & 1) == 0)
    {
LABEL_7:
      v18 = a3;
      v16 = v95;
      v17 = a2;
      v19 = v92;
    }
  }
  v91 = a8;
  v93 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9780);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21DC73350;
  *(_QWORD *)(inited + 32) = a1;
  v90 = inited + 32;
  v21 = (_QWORD *)a7;
  v22 = v97 + 3;
  swift_beginAccess();
  v96 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v86 = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v89 = a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v104 = v97[3];
  v24 = v104;
  v97[3] = 0x8000000000000000;
  v26 = sub_21DC0A5CC(v17, v18, v19, v16);
  v27 = *(_QWORD *)(v24 + 16);
  v28 = (v25 & 1) == 0;
  v29 = v27 + v28;
  if (__OFADD__(v27, v28))
  {
    __break(1u);
LABEL_54:
    sub_21DC71BA0();
    goto LABEL_18;
  }
  v30 = v25;
  if (*(_QWORD *)(v24 + 24) >= v29)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_21DC5D87C(&qword_2553AA5B0);
      v24 = v104;
    }
  }
  else
  {
    sub_21DC1030C(v29, isUniquelyReferenced_nonNull_native);
    v24 = v104;
    v31 = sub_21DC0A5CC(v17, v18, v19, v16);
    if ((v30 & 1) != (v32 & 1))
    {
LABEL_58:
      swift_release();
      result = sub_21DC720E0();
      __break(1u);
      return result;
    }
    v26 = v31;
  }
  *v22 = v24;
  swift_bridgeObjectRelease();
  v33 = (_QWORD *)*v22;
  v22 = v96;
  if ((v30 & 1) == 0)
  {
    v33[(v26 >> 6) + 8] |= 1 << v26;
    v34 = (uint64_t *)(v33[6] + 32 * v26);
    *v34 = v17;
    v34[1] = v18;
    v34[2] = v19;
    v34[3] = v16;
    *(_QWORD *)(v33[7] + 8 * v26) = MEMORY[0x24BEE4AF8];
    v35 = v33[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
    {
      __break(1u);
      goto LABEL_56;
    }
    v33[2] = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v38 = (_QWORD *)(v33[7] + 8 * v26);
  v39 = v89;
  MEMORY[0x22079CE84]();
  if (*(_QWORD *)((*v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_54;
LABEL_18:
  sub_21DC71BC4();
  sub_21DC71B94();
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  v40 = v86;
  swift_bridgeObjectRetain();
  v41 = v95;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v42 = v92;
  sub_21DC4F834(v93, v86, v92, v95, v94, (uint64_t)v22, v91, v98);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v43 = v97 + 5;
  swift_beginAccess();
  v44 = v97[5];
  if (*(_QWORD *)(v44 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v45 = sub_21DC0A5CC(v93, v86, v92, v95);
    if ((v46 & 1) != 0)
    {
      v47 = (uint64_t *)(*(_QWORD *)(v44 + 56) + 32 * v45);
      v49 = *v47;
      v48 = v47[1];
      v50 = (void *)v47[3];
      v90 = v47[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v49 = 0;
      v48 = 0;
      v90 = 0;
      v50 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v49 = 0;
    v48 = 0;
    v90 = 0;
    v50 = 0;
  }
  v88 = v50;
  v51 = *v43;
  v52 = *(_QWORD *)(*v43 + 16);
  v85 = v49;
  v84 = v48;
  if (!v52)
  {
    v89 = 0;
    v91 = 0;
    v87 = 0;
    v94 = 0;
LABEL_37:
    swift_retain();
    v59 = sub_21DC1DFDC(v93, v86, v92, v95);
    swift_release();
    v100 = sub_21DC574BC(v59);
    v101 = v60;
    v102 = v61;
    v103 = v62;
    MEMORY[0x24BDAC7A8](v100, v60);
    v83[2] = v97;
    v83[3] = &v100;
    sub_21DC514A0((void (*)(_QWORD *))sub_21DC60FA0, (uint64_t)v83, v59);
    sub_21DC20194(v100, v101);
    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v53 = sub_21DC0A5CC(v94, (uint64_t)v22, v91, v98);
  if ((v54 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v58 = 0;
    v91 = 0;
    v87 = 0;
    v94 = 0;
LABEL_36:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v89 = v58;
    goto LABEL_37;
  }
  v55 = (uint64_t *)(*(_QWORD *)(v51 + 56) + 32 * v53);
  v56 = v55[1];
  v94 = *v55;
  v57 = (void *)v55[3];
  v91 = v55[2];
  swift_bridgeObjectRetain();
  v89 = v57;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v87 = v56;
  if (!v48 || !v56)
    goto LABEL_37;
  if ((v49 != v94 || v48 != v56) && (sub_21DC720A4() & 1) == 0)
  {
    sub_21DC20164(v49, v48);
    sub_21DC20164(v94, v56);
    v58 = v89;
    goto LABEL_36;
  }
  if (v90 == v91 && v88 == v89)
  {
    sub_21DC20164(v49, v48);
    sub_21DC20164(v94, v87);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v89 = v88;
    v91 = v90;
    goto LABEL_38;
  }
  v81 = v48;
  v82 = sub_21DC720A4();
  sub_21DC20164(v49, v81);
  sub_21DC20164(v94, v87);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v82 & 1) == 0)
    goto LABEL_37;
LABEL_38:
  v63 = *v43;
  v64 = *(_QWORD *)(*v43 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v64)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  swift_bridgeObjectRetain();
  v65 = sub_21DC0A5CC(v93, v40, v42, v41);
  if ((v66 & 1) == 0)
  {
LABEL_56:
    swift_bridgeObjectRelease();
    goto LABEL_57;
  }
  v67 = (uint64_t *)(*(_QWORD *)(v63 + 56) + 32 * v65);
  v69 = *v67;
  v68 = v67[1];
  v71 = v67[2];
  v70 = v67[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v72 = v97;
  v73 = v97 + 2;
  swift_beginAccess();
  v74 = v72[2];
  v75 = *(_QWORD *)(v74 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v75)
  {
    swift_bridgeObjectRetain();
    v76 = sub_21DC0A5CC(v69, v68, v71, v70);
    v77 = 0.0;
    if ((v78 & 1) != 0)
      v77 = *(double *)(*(_QWORD *)(v74 + 56) + 8 * v76);
    swift_bridgeObjectRelease();
  }
  else
  {
    v77 = 0.0;
  }
  if (v77 > a9)
    a9 = v77;
  swift_beginAccess();
  v79 = swift_isUniquelyReferenced_nonNull_native();
  v99 = *v73;
  *v73 = 0x8000000000000000;
  sub_21DC3C6DC(v69, v68, v71, v70, v79, a9);
  *v73 = v99;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21DC20194(v94, v87);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_21DC20194(v85, v84);
}

void sub_21DC53D68(uint64_t a1, void *a2, void *a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v9;
  uint64_t inited;
  _QWORD *v11;
  id v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  unint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  id v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  id v58;
  id v59;
  void *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  unint64_t v65;
  double v66;
  char v67;
  char v68;
  _QWORD v69[4];
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[4];

  v5 = v4;
  v73 = a2;
  v74 = a3;
  v9 = (void *)sub_21DC60760((uint64_t)v73, (uint64_t)v74);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9780);
  inited = swift_initStackObject();
  v70 = xmmword_21DC73350;
  *(_OWORD *)(inited + 16) = xmmword_21DC73350;
  *(_QWORD *)(inited + 32) = a1;
  v72 = inited + 32;
  v11 = (_QWORD *)(v5 + 24);
  swift_beginAccess();
  v12 = v9;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v77[0] = *(_QWORD *)(v5 + 24);
  v14 = v77[0];
  v75 = v5;
  *(_QWORD *)(v5 + 24) = 0x8000000000000000;
  v15 = sub_21DC0A4BC((uint64_t)v12);
  v17 = v16;
  v18 = *(_QWORD *)(v14 + 16);
  v19 = (v16 & 1) == 0;
  sub_21DC71804();
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
LABEL_23:
    sub_21DC71BA0();
    goto LABEL_11;
  }
  if (*(_QWORD *)(v14 + 24) >= v20)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_21DC5E910((uint64_t *)&unk_2553AA560);
      v14 = v77[0];
    }
  }
  else
  {
    sub_21DC1180C(v20, isUniquelyReferenced_nonNull_native);
    v14 = v77[0];
    v21 = sub_21DC0A4BC((uint64_t)v12);
    if ((v17 & 1) != (v22 & 1))
    {
LABEL_38:
      swift_release();
      sub_21DC720E0();
      __break(1u);
      return;
    }
    v15 = v21;
  }
  *v11 = v14;
  swift_bridgeObjectRelease();
  v23 = (_QWORD *)*v11;
  if ((v17 & 1) == 0)
  {
    v23[(v15 >> 6) + 8] |= 1 << v15;
    v24 = 8 * v15;
    *(_QWORD *)(v23[6] + v24) = v12;
    *(_QWORD *)(v23[7] + v24) = MEMORY[0x24BEE4AF8];
    v25 = v23[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
    {
      __break(1u);
      goto LABEL_37;
    }
    v23[2] = v27;
    v28 = v12;
  }
  v29 = (_QWORD *)(v23[7] + 8 * v15);
  v30 = swift_retain();
  MEMORY[0x22079CE84](v30);
  if (*(_QWORD *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_23;
LABEL_11:
  sub_21DC71BC4();
  sub_21DC71B94();
  swift_endAccess();

  swift_setDeallocating();
  swift_arrayDestroy();
  v31 = v75;
  v32 = v73;
  v33 = v74;
  swift_retain();
  sub_21DC4FC6C(v32, v33);
  swift_release();
  v34 = (uint64_t *)(v75 + 40);
  swift_beginAccess();
  v35 = *(_QWORD *)(v75 + 40);
  swift_bridgeObjectRetain();
  v36 = sub_21DC52C2C(v32, v35);
  swift_bridgeObjectRelease();
  v37 = *(_QWORD *)(v75 + 40);
  swift_bridgeObjectRetain();
  v38 = sub_21DC52C2C(v33, v37);

  swift_bridgeObjectRelease();
  if (!v36
    || !v38
    || (v39 = v36,
        v40 = v38,
        v41 = sub_21DC71D68(),
        v39,
        v40,
        (v41 & 1) == 0))
  {
    v74 = v38;
    v42 = *(_QWORD *)(v75 + 32);
    v43 = swift_initStackObject();
    *(_OWORD *)(v43 + 16) = v70;
    *(_QWORD *)(v43 + 32) = v32;
    v77[0] = v43;
    swift_retain();
    sub_21DC71B94();
    v44 = v77[0];
    if (v77[0] >> 62)
    {
      v52 = v32;
      swift_bridgeObjectRetain();
      v53 = sub_21DC71FCC();
      swift_bridgeObjectRelease();
      if (v53)
      {
LABEL_16:
        v47 = MEMORY[0x24BEE4B08];
        do
        {
          while (1)
          {
            v48 = swift_bridgeObjectRetain();
            v47 = sub_21DC604D0(v48, v47);
            swift_bridgeObjectRelease();
            v77[0] = v47;
            swift_retain();
            v49 = sub_21DC60024(v44, v42);
            swift_bridgeObjectRelease();
            swift_release();
            v44 = sub_21DC5FD14(v49, v77);
            swift_bridgeObjectRelease();
            if (v44 >> 62)
              break;
            if (!*(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_21;
          }
          swift_bridgeObjectRetain();
          v50 = sub_21DC71FCC();
          swift_bridgeObjectRelease();
        }
        while (v50);
LABEL_21:
        swift_bridgeObjectRelease();
        v51 = v77[0];
        v31 = v75;
        goto LABEL_26;
      }
    }
    else
    {
      v45 = *(_QWORD *)((v77[0] & 0xFFFFFFFFFFFFF8) + 0x10);
      v46 = v32;
      if (v45)
        goto LABEL_16;
    }
    swift_bridgeObjectRelease();
    v51 = MEMORY[0x24BEE4B08];
LABEL_26:
    swift_release();
    sub_21DC57810(v51);
    v77[0] = v54;
    MEMORY[0x24BDAC7A8](v54, v55);
    v69[2] = v31;
    v69[3] = v77;
    sub_21DC51688((void (*)(id *))sub_21DC60EFC, (uint64_t)v69, v51);
    v56 = (void *)v77[0];
    swift_bridgeObjectRelease();

    v38 = v74;
  }
  v57 = *v34;
  v58 = v32;
  v59 = v33;
  swift_bridgeObjectRetain();
  v60 = sub_21DC52C2C(v58, v57);
  swift_bridgeObjectRelease();
  if (!v60)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }

  v61 = (uint64_t *)(v31 + 16);
  swift_beginAccess();
  v62 = *(_QWORD *)(v31 + 16);
  v63 = *(_QWORD *)(v62 + 16);
  v64 = v60;
  if (v63)
  {
    swift_bridgeObjectRetain();
    v65 = sub_21DC0A4BC((uint64_t)v64);
    v66 = 0.0;
    if ((v67 & 1) != 0)
      v66 = *(double *)(*(_QWORD *)(v62 + 56) + 8 * v65);
    swift_bridgeObjectRelease();
  }
  else
  {
    v66 = 0.0;
  }
  if (v66 > a4)
    a4 = v66;
  swift_beginAccess();
  v68 = swift_isUniquelyReferenced_nonNull_native();
  v76 = *v61;
  *v61 = 0x8000000000000000;
  sub_21DC3CC20(v64, v68, a4);
  *v61 = v76;

  swift_bridgeObjectRelease();
  swift_endAccess();

}

uint64_t sub_21DC543DC(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char v71;
  uint64_t v72;
  uint64_t inited;
  uint64_t *v74;
  id v75;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v77;
  char v78;
  unint64_t v79;
  uint64_t v80;
  _BOOL8 v81;
  uint64_t v82;
  char v83;
  unint64_t v84;
  char v85;
  _QWORD *v86;
  void (*v87)(_QWORD, _QWORD, _QWORD, _QWORD);
  _QWORD *v88;
  id v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(uint64_t, uint64_t, uint64_t);
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t (*v129)();
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  unint64_t v145;
  double v146;
  char v147;
  char v148;
  uint64_t result;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t (*v160)();
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  _QWORD *v173;
  uint64_t *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182[4];

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA430);
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v158 = (uint64_t)&v158 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v171 = (char *)&v158 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15, v17);
  v160 = (uint64_t (*)())((char *)&v158 - v19);
  v21 = MEMORY[0x24BDAC7A8](v18, v20);
  v159 = (uint64_t)&v158 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21, v23);
  v166 = (uint64_t)&v158 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v168 = (uint64_t)&v158 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27, v29);
  v165 = (uint64_t)&v158 - v31;
  v33 = MEMORY[0x24BDAC7A8](v30, v32);
  v169 = (char *)&v158 - v34;
  MEMORY[0x24BDAC7A8](v33, v35);
  v170 = (uint64_t)&v158 - v36;
  v176 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v180 = *(_QWORD *)(v176 - 8);
  v38 = MEMORY[0x24BDAC7A8](v176, v37);
  v161 = (uint64_t)&v158 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x24BDAC7A8](v38, v40);
  v162 = (uint64_t)&v158 - v42;
  v44 = MEMORY[0x24BDAC7A8](v41, v43);
  v163 = (uint64_t)&v158 - v45;
  v47 = MEMORY[0x24BDAC7A8](v44, v46);
  v174 = (uint64_t *)((char *)&v158 - v48);
  MEMORY[0x24BDAC7A8](v47, v49);
  v51 = (char *)&v158 - v50;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA438);
  v54 = MEMORY[0x24BDAC7A8](v52, v53);
  v167 = (char *)&v158 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = MEMORY[0x24BDAC7A8](v54, v56);
  v164 = (char *)&v158 - v58;
  v60 = MEMORY[0x24BDAC7A8](v57, v59);
  v175 = (uint64_t)&v158 - v61;
  v63 = MEMORY[0x24BDAC7A8](v60, v62);
  v65 = (char *)&v158 - v64;
  v67 = MEMORY[0x24BDAC7A8](v63, v66);
  v69 = (char *)&v158 - v68;
  v179 = v67;
  v70 = (char *)&v158 + *(int *)(v67 + 48) - v68;
  sub_21DC0C210(a2, (uint64_t)&v158 - v68, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  sub_21DC0C210(a3, (uint64_t)v70, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  v71 = MEMORY[0x22079C8F0](v70, v69);
  v177 = v69;
  v178 = v70;
  if ((v71 & 1) != 0)
    v72 = (uint64_t)v70;
  else
    v72 = (uint64_t)v69;
  sub_21DC0C210(v72, (uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9780);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21DC73350;
  *(_QWORD *)(inited + 32) = a1;
  v74 = (uint64_t *)(v5 + 24);
  swift_beginAccess();
  v75 = a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v182[0] = *(_QWORD *)(v5 + 24);
  v77 = v182[0];
  v172 = v5;
  *(_QWORD *)(v5 + 24) = 0x8000000000000000;
  v79 = sub_21DC0A7A4((uint64_t)v51);
  v80 = *(_QWORD *)(v77 + 16);
  v81 = (v78 & 1) == 0;
  v82 = v80 + v81;
  if (__OFADD__(v80, v81))
  {
    __break(1u);
LABEL_50:
    sub_21DC71BA0();
    goto LABEL_13;
  }
  v83 = v78;
  if (*(_QWORD *)(v77 + 24) >= v82)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_21DC5EF48((uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID, &qword_2553AA460);
      v77 = v182[0];
    }
  }
  else
  {
    sub_21DC13110(v82, isUniquelyReferenced_nonNull_native);
    v77 = v182[0];
    v84 = sub_21DC0A7A4((uint64_t)v51);
    if ((v83 & 1) != (v85 & 1))
    {
LABEL_55:
      swift_release();
      result = sub_21DC720E0();
      __break(1u);
      return result;
    }
    v79 = v84;
  }
  *v74 = v77;
  swift_bridgeObjectRelease();
  v86 = (_QWORD *)*v74;
  if ((v83 & 1) == 0)
  {
    v87 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v174;
    sub_21DC0C210((uint64_t)v51, (uint64_t)v174, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    sub_21DC5D0D0(v79, (uint64_t)v87, MEMORY[0x24BEE4AF8], v86, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  }
  v88 = (_QWORD *)(v86[7] + 8 * v79);
  v89 = v75;
  MEMORY[0x22079CE84]();
  if (*(_QWORD *)((*v88 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v88 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_50;
LABEL_13:
  sub_21DC71BC4();
  sub_21DC71B94();
  sub_21DC5FCD8((uint64_t)v51);
  swift_endAccess();
  swift_setDeallocating();
  swift_arrayDestroy();
  v90 = (_QWORD *)v172;
  v91 = v179;
  v92 = (uint64_t)&v65[*(int *)(v179 + 48)];
  v93 = (uint64_t)v177;
  sub_21DC0C210((uint64_t)v177, (uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  v94 = (uint64_t)v178;
  sub_21DC0C210((uint64_t)v178, v92, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  swift_retain();
  sub_21DC4FFB4((uint64_t)v65, v92);
  swift_release();
  sub_21DC5FCD8(v92);
  sub_21DC5FCD8((uint64_t)v65);
  v95 = v175;
  v96 = v175 + *(int *)(v91 + 48);
  sub_21DC0C210(v93, v175, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  sub_21DC0C210(v94, v96, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  v173 = v90 + 5;
  swift_beginAccess();
  v97 = v90[5];
  v98 = (uint64_t)v169;
  v99 = v176;
  v100 = v168;
  if (*(_QWORD *)(v97 + 16))
  {
    swift_bridgeObjectRetain();
    v101 = sub_21DC0A7A4(v95);
    v102 = v170;
    v103 = (uint64_t)v171;
    if ((v104 & 1) != 0)
    {
      v105 = v180;
      sub_21DC0C210(*(_QWORD *)(v97 + 56) + *(_QWORD *)(v180 + 72) * v101, v170, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      v106 = *(uint64_t **)(v105 + 56);
      v107 = v102;
      v108 = 0;
    }
    else
    {
      v106 = *(uint64_t **)(v180 + 56);
      v107 = v170;
      v108 = 1;
    }
    v174 = v106;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v106)(v107, v108, 1, v99);
    swift_bridgeObjectRelease();
  }
  else
  {
    v102 = v170;
    v174 = *(uint64_t **)(v180 + 56);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v174)(v170, 1, 1, v176);
    v103 = (uint64_t)v171;
  }
  v109 = (uint64_t)v164;
  sub_21DC5FCD8(v96);
  sub_21DC5FCD8(v175);
  v110 = v109 + *(int *)(v179 + 48);
  sub_21DC0C210(v93, v109, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  sub_21DC0C210((uint64_t)v178, v110, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  v111 = *v173;
  if (*(_QWORD *)(*v173 + 16))
  {
    swift_bridgeObjectRetain();
    v112 = sub_21DC0A7A4(v110);
    if ((v113 & 1) != 0)
    {
      sub_21DC0C210(*(_QWORD *)(v111 + 56) + *(_QWORD *)(v180 + 72) * v112, v98, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      v114 = v98;
      v115 = 0;
    }
    else
    {
      v114 = v98;
      v115 = 1;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v174)(v114, v115, 1, v99);
    swift_bridgeObjectRelease();
  }
  else
  {
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v174)(v98, 1, 1, v99);
  }
  sub_21DC5FCD8(v110);
  sub_21DC5FCD8(v109);
  v116 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v180 + 48);
  v117 = v116(v102, 1, v99);
  v118 = v165;
  sub_21DC07CC0(v98, v165, &qword_2553AA430);
  if (v117 == 1)
  {
    sub_21DC07C84(v118, &qword_2553AA430);
    sub_21DC07CC0(v102, v100, &qword_2553AA430);
    v119 = v166;
    sub_21DC07CC0(v98, v166, &qword_2553AA430);
    v120 = (uint64_t)v167;
LABEL_28:
    sub_21DC07C84(v119, &qword_2553AA430);
    sub_21DC07C84(v100, &qword_2553AA430);
LABEL_29:
    v122 = v90[4];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8518);
    v123 = (*(unsigned __int8 *)(v180 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v180 + 80);
    v124 = swift_allocObject();
    *(_OWORD *)(v124 + 16) = xmmword_21DC73650;
    sub_21DC0C210(v93, v124 + v123, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    swift_retain();
    v125 = MEMORY[0x24BEE4B08];
    do
    {
      v126 = swift_bridgeObjectRetain();
      v125 = sub_21DC605AC(v126, v125);
      swift_bridgeObjectRelease();
      v182[0] = v125;
      swift_retain();
      v127 = sub_21DC60180(v124, v122);
      swift_bridgeObjectRelease();
      swift_release();
      v124 = sub_21DC4F1EC(v127, v182);
    }
    while (*(_QWORD *)(v124 + 16));
    swift_release();
    swift_bridgeObjectRelease();
    v128 = v182[0];
    v129 = v160;
    v130 = sub_21DC57D48(v182[0], v160);
    MEMORY[0x24BDAC7A8](v130, v131);
    v90 = (_QWORD *)v172;
    *(&v158 - 2) = v172;
    *(&v158 - 1) = (uint64_t)v129;
    sub_21DC5197C((void (*)(char *))sub_21DC60748, (uint64_t)(&v158 - 4), v128);
    sub_21DC07C84((uint64_t)v129, &qword_2553AA430);
    swift_bridgeObjectRelease();
    v103 = (uint64_t)v171;
    v93 = (uint64_t)v177;
    goto LABEL_32;
  }
  v121 = v116(v118, 1, v99);
  sub_21DC07C84(v118, &qword_2553AA430);
  sub_21DC07CC0(v102, v100, &qword_2553AA430);
  v119 = v166;
  sub_21DC07CC0(v98, v166, &qword_2553AA430);
  v120 = (uint64_t)v167;
  if (v121 == 1)
    goto LABEL_28;
  v150 = v159;
  sub_21DC07CC0(v100, v159, &qword_2553AA430);
  v151 = v150;
  v152 = v176;
  if (v116(v151, 1, v176) == 1)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v153 = v119;
  v154 = v119;
  v155 = v158;
  sub_21DC07CC0(v153, v158, &qword_2553AA430);
  if (v116(v155, 1, v152) == 1)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v156 = v159;
  v157 = sub_21DC715D0();
  sub_21DC07C84(v154, &qword_2553AA430);
  sub_21DC07C84(v168, &qword_2553AA430);
  sub_21DC5FCD8(v155);
  sub_21DC5FCD8(v156);
  v98 = (uint64_t)v169;
  v102 = v170;
  if ((v157 & 1) == 0)
    goto LABEL_29;
LABEL_32:
  v132 = v120 + *(int *)(v179 + 48);
  sub_21DC0C210(v93, v120, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  sub_21DC0C210((uint64_t)v178, v132, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  v133 = *v173;
  if (!*(_QWORD *)(*v173 + 16))
  {
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v174)(v103, 1, 1, v176);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  swift_bridgeObjectRetain();
  v134 = sub_21DC0A7A4(v120);
  v135 = v102;
  if ((v136 & 1) != 0)
  {
    sub_21DC0C210(*(_QWORD *)(v133 + 56) + *(_QWORD *)(v180 + 72) * v134, v103, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    v137 = 0;
  }
  else
  {
    v137 = 1;
  }
  v138 = v176;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v174)(v103, v137, 1, v176);
  swift_bridgeObjectRelease();
  if (v116(v103, 1, v138) == 1)
    goto LABEL_52;
  v139 = v103;
  v140 = v163;
  sub_21DC13CC0(v139, v163, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  sub_21DC5FCD8(v132);
  sub_21DC5FCD8(v120);
  v141 = v162;
  sub_21DC0C210(v140, v162, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  v142 = v161;
  sub_21DC0C210(v140, v161, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  v143 = v90 + 2;
  swift_beginAccess();
  v144 = v90[2];
  if (*(_QWORD *)(v144 + 16))
  {
    swift_bridgeObjectRetain();
    v145 = sub_21DC0A7A4(v142);
    v146 = 0.0;
    if ((v147 & 1) != 0)
      v146 = *(double *)(*(_QWORD *)(v144 + 56) + 8 * v145);
    swift_bridgeObjectRelease();
  }
  else
  {
    v146 = 0.0;
  }
  sub_21DC5FCD8(v142);
  if (v146 > a4)
    a4 = v146;
  swift_beginAccess();
  v148 = swift_isUniquelyReferenced_nonNull_native();
  v181 = *v143;
  *v143 = 0x8000000000000000;
  sub_21DC3D0FC(v141, v148, a4);
  *v143 = v181;
  swift_bridgeObjectRelease();
  sub_21DC5FCD8(v141);
  swift_endAccess();
  sub_21DC5FCD8(v140);
  sub_21DC07C84(v98, &qword_2553AA430);
  sub_21DC07C84((uint64_t)v177, &qword_2553AA438);
  return sub_21DC07C84(v135, &qword_2553AA430);
}

uint64_t sub_21DC55190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t result;
  int64_t v25;
  int v26;
  int v27;
  char v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  int64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v79;
  unint64_t v80;
  char v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t *v87;
  unint64_t v88;
  char v89;
  char v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;

  v9 = (uint64_t *)(v4 + 40);
  swift_beginAccess();
  v95 = v4;
  v10 = *(_QWORD *)(v4 + 40);
  if (!*(_QWORD *)(v10 + 16))
    return 0;
  swift_bridgeObjectRetain();
  v11 = sub_21DC0A5CC(a1, a2, a3, a4);
  if ((v12 & 1) == 0)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  v13 = (uint64_t *)(*(_QWORD *)(v10 + 56) + 32 * v11);
  v15 = *v13;
  v14 = v13[1];
  v16 = v13[2];
  v17 = v13[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v94 = (uint64_t *)(v95 + 16);
  swift_beginAccess();
  v18 = *(_QWORD *)(v95 + 16);
  if (!*(_QWORD *)(v18 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  v19 = sub_21DC0A5CC(v15, v14, v16, v17);
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v93 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19);
  swift_bridgeObjectRelease();
  swift_retain();
  v21 = sub_21DC1DFDC(a1, a2, a3, a4);
  swift_release();
  v22 = *(_QWORD *)(v21 + 16);
  v97 = v9;
  if (!v22)
  {
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x24BEE4AF8];
LABEL_20:
    v39 = *(_QWORD *)(v23 + 16);
    if (v39)
    {
      v40 = (uint64_t *)(v95 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_beginAccess();
      v104 = v23;
      v41 = (uint64_t *)(v23 + 56);
      v42 = MEMORY[0x24BEE4AF8];
      do
      {
        v43 = *v40;
        if (*(_QWORD *)(*v40 + 16))
        {
          v44 = *(v41 - 1);
          v45 = *v41;
          v46 = *(v41 - 3);
          v47 = *(v41 - 2);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          v48 = sub_21DC0A5CC(v46, v47, v44, v45);
          v49 = v42;
          if ((v50 & 1) != 0)
          {
            v49 = *(_QWORD *)(*(_QWORD *)(v43 + 56) + 8 * v48);
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
        }
        else
        {
          v49 = v42;
        }
        sub_21DC53010(v49, (unint64_t *)type metadata accessor for AnteroEvent, (unint64_t *)&unk_2553AA5C0, &qword_2553AA5B8, (uint64_t *)sub_21DC0BCCC);
        v41 += 4;
        --v39;
      }
      while (v39);
      v51 = v95;
      swift_release();
      swift_bridgeObjectRelease();
      v52 = *(_QWORD *)(v104 + 16);
      if (v52)
      {
        sub_21DC4BB10(0, v52, 0);
        v53 = (uint64_t *)(v104 + 56);
        do
        {
          v55 = *(v53 - 3);
          v54 = *(v53 - 2);
          v57 = *(v53 - 1);
          v56 = *v53;
          v59 = *(_QWORD *)(v42 + 16);
          v58 = *(_QWORD *)(v42 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v59 >= v58 >> 1)
            sub_21DC4BB10(v58 > 1, v59 + 1, 1);
          v53 += 4;
          *(_QWORD *)(v42 + 16) = v59 + 1;
          v60 = (_QWORD *)(v42 + 32 * v59);
          v60[4] = v55;
          v60[5] = v54;
          v60[6] = v57;
          v60[7] = v56;
          --v52;
        }
        while (v52);
        swift_bridgeObjectRelease();
        v51 = v95;
        v9 = v97;
        goto LABEL_37;
      }
      v9 = v97;
    }
    else
    {
      v51 = v95;
    }
    swift_bridgeObjectRelease();
    v42 = MEMORY[0x24BEE4AF8];
LABEL_37:
    swift_retain();
    sub_21DC51184(v42);
    swift_release();
    v61 = *(_QWORD *)(v42 + 16);
    if (v61)
    {
      swift_bridgeObjectRetain();
      v62 = (uint64_t *)(v42 + 56);
      v96 = (uint64_t *)(v51 + 24);
      do
      {
        v100 = v61;
        v63 = *(v62 - 3);
        v64 = *(v62 - 2);
        v66 = *(v62 - 1);
        v65 = *v62;
        v67 = *v9;
        v68 = *(_QWORD *)(*v9 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v102 = v66;
        v105 = v63;
        if (v68)
        {
          swift_bridgeObjectRetain();
          v69 = sub_21DC0A5CC(v63, v64, v66, v65);
          if ((v70 & 1) != 0)
          {
            v71 = (uint64_t *)(*(_QWORD *)(v67 + 56) + 32 * v69);
            v72 = *v71;
            v73 = v71[1];
            v74 = v71[2];
            v75 = v71[3];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_beginAccess();
            swift_bridgeObjectRetain();
            v76 = sub_21DC0A5CC(v72, v73, v74, v75);
            LOBYTE(v72) = v77;
            swift_bridgeObjectRelease();
            if ((v72 & 1) != 0)
            {
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v79 = *v94;
              v106 = *v94;
              *v94 = 0x8000000000000000;
              if (!isUniquelyReferenced_nonNull_native)
              {
                sub_21DC5D4D4();
                v79 = v106;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_21DC68AF8(v76, v79);
              *v94 = v79;
              swift_bridgeObjectRelease();
            }
            swift_endAccess();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v66 = v102;
            v63 = v105;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v80 = sub_21DC0A5CC(v63, v64, v66, v65);
        v82 = v81;
        swift_bridgeObjectRelease();
        v83 = 0;
        v84 = 0;
        if ((v82 & 1) != 0)
        {
          v85 = swift_isUniquelyReferenced_nonNull_native();
          v86 = *v97;
          v107 = *v97;
          *v97 = 0x8000000000000000;
          if (!v85)
          {
            sub_21DC5D690();
            v86 = v107;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v87 = (uint64_t *)(*(_QWORD *)(v86 + 56) + 32 * v80);
          v83 = *v87;
          v84 = v87[1];
          sub_21DC68D08(v80, v86);
          *v97 = v86;
          swift_bridgeObjectRelease();
        }
        swift_endAccess();
        sub_21DC20194(v83, v84);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v88 = sub_21DC0A5CC(v105, v64, v102, v65);
        v90 = v89;
        swift_bridgeObjectRelease();
        v9 = v97;
        if ((v90 & 1) != 0)
        {
          v91 = swift_isUniquelyReferenced_nonNull_native();
          v92 = *v96;
          v108 = *v96;
          *v96 = 0x8000000000000000;
          if (!v91)
          {
            sub_21DC5D87C(&qword_2553AA5B0);
            v92 = v108;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_21DC68F18(v88, v92);
          *v96 = v92;
          swift_bridgeObjectRelease();
        }
        v62 += 4;
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v61 = v100 - 1;
      }
      while (v100 != 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v93;
  }
  v109 = MEMORY[0x24BEE4AF8];
  sub_21DC4BB10(0, v22, 0);
  v23 = v109;
  result = sub_21DC5F864(v21);
  v25 = result;
  v27 = v26;
  v29 = v28 & 1;
  v98 = v21 + 56;
  while ((v25 & 0x8000000000000000) == 0 && v25 < 1 << *(_BYTE *)(v21 + 32))
  {
    if (((*(_QWORD *)(v98 + (((unint64_t)v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
      goto LABEL_60;
    if (*(_DWORD *)(v21 + 36) != v27)
      goto LABEL_61;
    v103 = v29;
    v30 = (uint64_t *)(*(_QWORD *)(v21 + 48) + 32 * v25);
    v31 = v30[1];
    v32 = v30[3];
    v99 = v30[2];
    v101 = *v30;
    v33 = v21;
    v35 = *(_QWORD *)(v109 + 16);
    v34 = *(_QWORD *)(v109 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v35 >= v34 >> 1)
      sub_21DC4BB10(v34 > 1, v35 + 1, 1);
    *(_QWORD *)(v109 + 16) = v35 + 1;
    v36 = (_QWORD *)(v109 + 32 * v35);
    v36[4] = v101;
    v36[5] = v31;
    v36[6] = v99;
    v36[7] = v32;
    result = sub_21DC5F908(v25, v27, v103 & 1, v33);
    v25 = result;
    v27 = v37;
    v29 = v38 & 1;
    --v22;
    v21 = v33;
    if (!v22)
    {
      sub_21DC3A41C(result, v37, v29);
      swift_bridgeObjectRelease();
      v9 = v97;
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
  return result;
}

uint64_t sub_21DC55A3C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t inited;
  unint64_t v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  int64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(_QWORD *, _QWORD);
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  id v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void **v53;
  void *v54;
  id v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  _QWORD v61[4];
  _QWORD *v62;
  uint64_t v63;
  char v64;
  _QWORD *v65;

  v2 = v1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 40);
  swift_bridgeObjectRetain();
  v5 = sub_21DC52C2C(a1, v4);
  swift_bridgeObjectRelease();
  if (!v5)
    return 0;
  swift_beginAccess();
  v6 = *(_QWORD *)(v2 + 16);
  if (!*(_QWORD *)(v6 + 16))
  {

    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_21DC0A4BC((uint64_t)v5);
  if ((v8 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    return 0;
  }
  v58 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
  v59 = v5;
  swift_bridgeObjectRelease();
  v60 = v2;
  v9 = *(_QWORD *)(v2 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9780);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21DC73350;
  *(_QWORD *)(inited + 32) = a1;
  v61[0] = inited;
  swift_retain();
  sub_21DC71B94();
  v11 = v61[0];
  if (!(v61[0] >> 62))
  {
    v12 = *(_QWORD *)((v61[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    v13 = a1;
    if (v12)
      goto LABEL_6;
LABEL_16:
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x24BEE4B08];
    goto LABEL_17;
  }
  v20 = a1;
  swift_bridgeObjectRetain();
  v21 = sub_21DC71FCC();
  swift_bridgeObjectRelease();
  if (!v21)
    goto LABEL_16;
LABEL_6:
  v14 = MEMORY[0x24BEE4B08];
  do
  {
    while (1)
    {
      v15 = swift_bridgeObjectRetain();
      v14 = sub_21DC604D0(v15, v14);
      swift_bridgeObjectRelease();
      v61[0] = v14;
      swift_retain();
      v16 = sub_21DC60024(v11, v9);
      swift_bridgeObjectRelease();
      swift_release();
      v11 = sub_21DC5FD14(v16, v61);
      swift_bridgeObjectRelease();
      if (v11 >> 62)
        break;
      if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_11;
    }
    swift_bridgeObjectRetain();
    v17 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
  }
  while (v17);
LABEL_11:
  swift_bridgeObjectRelease();
  v18 = v61[0];
LABEL_17:
  swift_release();
  v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if ((v18 & 0xC000000000000001) != 0)
  {
    v23 = sub_21DC71E28();
    if (!v23)
    {
LABEL_31:
      swift_bridgeObjectRelease();
      v37 = MEMORY[0x24BEE4AF8];
      goto LABEL_32;
    }
    v24 = v23;
    v65 = v22;
    v22 = &v65;
    sub_21DC71F24();
    v62 = (_QWORD *)sub_21DC71DEC();
    v63 = v25;
    v64 = 1;
    if ((v24 & 0x8000000000000000) == 0)
      goto LABEL_25;
    __break(1u);
  }
  v24 = *(_QWORD *)(v18 + 16);
  if (!v24)
    goto LABEL_31;
  v65 = v22;
  sub_21DC71F24();
  v62 = (_QWORD *)sub_21DC5FC34(v18);
  v63 = v26;
  v64 = v27 & 1;
  do
  {
LABEL_25:
    while (1)
    {
      v33 = (int64_t)v62;
      v34 = v63;
      v35 = v64;
      sub_21DC5F9EC((uint64_t)v62, v63, v64, v18);
      sub_21DC71F00();
      sub_21DC71F30();
      sub_21DC71F3C();
      result = sub_21DC71F0C();
      if ((v18 & 0xC000000000000001) != 0)
        break;
      v28 = sub_21DC5F908(v33, v34, v35, v18);
      v30 = v29;
      v32 = v31;
      sub_21DC3A41C(v33, v34, v35);
      v62 = (_QWORD *)v28;
      v63 = v30;
      v64 = v32 & 1;
      if (!--v24)
        goto LABEL_30;
    }
    if ((v35 & 1) == 0)
      goto LABEL_64;
    if (sub_21DC71E04())
      swift_isUniquelyReferenced_nonNull_native();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9A18);
    v36 = (void (*)(_QWORD *, _QWORD))sub_21DC71C78();
    sub_21DC71E64();
    v36(v61, 0);
    --v24;
  }
  while (v24);
LABEL_30:
  sub_21DC3A41C((uint64_t)v62, v63, v64);
  v37 = (unint64_t)v65;
  swift_bridgeObjectRelease();
  v2 = v60;
  v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_32:
  v62 = v22;
  v38 = v37 >> 62;
  if (v37 >> 62)
  {
LABEL_58:
    swift_retain();
    swift_bridgeObjectRetain();
    v39 = sub_21DC71FCC();
    if (v39)
      goto LABEL_34;
LABEL_59:
    swift_release();
    swift_bridgeObjectRelease();
    if (!v38)
      goto LABEL_48;
LABEL_60:
    swift_bridgeObjectRetain();
    v50 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    if (!v50)
      goto LABEL_61;
LABEL_49:
    v62 = (_QWORD *)MEMORY[0x24BEE4AF8];
    result = sub_21DC71F24();
    if ((v50 & 0x8000000000000000) == 0)
    {
      if ((v37 & 0xC000000000000001) != 0)
      {
        v51 = 0;
        do
        {
          v52 = v51 + 1;
          MEMORY[0x22079D208]();
          sub_21DC71F00();
          sub_21DC71F30();
          sub_21DC71F3C();
          sub_21DC71F0C();
          v51 = v52;
        }
        while (v50 != v52);
      }
      else
      {
        v53 = (void **)(v37 + 32);
        do
        {
          v54 = *v53++;
          v55 = v54;
          sub_21DC71F00();
          sub_21DC71F30();
          sub_21DC71F3C();
          sub_21DC71F0C();
          --v50;
        }
        while (v50);
      }
      v56 = (unint64_t)v62;
      swift_bridgeObjectRelease();
      goto LABEL_62;
    }
    __break(1u);
LABEL_64:
    __break(1u);
    return result;
  }
  v39 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  swift_bridgeObjectRetain();
  if (!v39)
    goto LABEL_59;
LABEL_34:
  v57 = v38;
  v38 = v37 & 0xC000000000000001;
  v40 = v2 + 24;
  swift_beginAccess();
  v41 = 4;
  v42 = MEMORY[0x24BEE4AF8];
  do
  {
    v44 = v41 - 4;
    if (v38)
    {
      v45 = (id)MEMORY[0x22079D208](v41 - 4, v37);
      v2 = v41 - 3;
      if (__OFADD__(v44, 1))
        goto LABEL_57;
    }
    else
    {
      v45 = *(id *)(v37 + 8 * v41);
      v2 = v41 - 3;
      if (__OFADD__(v44, 1))
      {
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
    }
    v46 = *(_QWORD *)v40;
    if (!*(_QWORD *)(*(_QWORD *)v40 + 16))
    {

LABEL_36:
      v43 = v42;
      goto LABEL_37;
    }
    v47 = v45;
    swift_bridgeObjectRetain();
    v48 = sub_21DC0A4BC((uint64_t)v47);
    if ((v49 & 1) == 0)
    {

      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    v43 = *(_QWORD *)(*(_QWORD *)(v46 + 56) + 8 * v48);
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
LABEL_37:
    sub_21DC52E58(v43);
    ++v41;
  }
  while (v2 != v39);
  swift_release();
  swift_bridgeObjectRelease();
  if (v57)
    goto LABEL_60;
LABEL_48:
  v50 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v50)
    goto LABEL_49;
LABEL_61:
  swift_bridgeObjectRelease();
  v56 = MEMORY[0x24BEE4AF8];
LABEL_62:
  sub_21DC5702C(v56);

  swift_bridgeObjectRelease();
  return v58;
}

uint64_t sub_21DC56124(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  void (*v55)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t result;
  int64_t v75;
  int v76;
  int v77;
  char v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  char v100;
  int64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  char v121;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char v136;
  char v137;
  uint64_t *v138;
  int v139;
  uint64_t v140;
  uint64_t *v141;
  unint64_t v142;
  char v143;
  char v144;
  int v145;
  uint64_t v146;
  uint64_t *v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  char v154;
  char v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t *v160;
  char *v161;
  char *v162;
  char *v163;
  char *v164;
  uint64_t *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  unsigned int (*v178)(char *, uint64_t, uint64_t);
  uint64_t v179;
  void (*v180)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v181;
  char *v182;
  uint64_t v183[4];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA430);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v167 = (uint64_t)&v158 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v10 = (char *)&v158 - v9;
  v12 = MEMORY[0x24BDAC7A8](v8, v11);
  v14 = (char *)&v158 - v13;
  v16 = MEMORY[0x24BDAC7A8](v12, v15);
  v18 = (char *)&v158 - v17;
  v20 = MEMORY[0x24BDAC7A8](v16, v19);
  v168 = (char *)&v158 - v21;
  MEMORY[0x24BDAC7A8](v20, v22);
  v24 = (char *)&v158 - v23;
  v25 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v26 = *(_QWORD *)(v25 - 8);
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  v162 = (char *)&v158 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v28, v30);
  v33 = (char *)&v158 - v32;
  v35 = MEMORY[0x24BDAC7A8](v31, v34);
  v175 = (uint64_t)&v158 - v36;
  v38 = MEMORY[0x24BDAC7A8](v35, v37);
  v172 = (uint64_t)&v158 - v39;
  v41 = MEMORY[0x24BDAC7A8](v38, v40);
  v163 = (char *)&v158 - v42;
  v44 = MEMORY[0x24BDAC7A8](v41, v43);
  v174 = (char *)&v158 - v45;
  v47 = MEMORY[0x24BDAC7A8](v44, v46);
  v171 = (uint64_t)&v158 - v48;
  MEMORY[0x24BDAC7A8](v47, v49);
  v51 = (char *)&v158 - v50;
  v173 = v1 + 5;
  swift_beginAccess();
  v165 = v1;
  v52 = v1[5];
  if (!*(_QWORD *)(v52 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v24, 1, 1, v25);
LABEL_7:
    sub_21DC07C84((uint64_t)v24, &qword_2553AA430);
    return 0;
  }
  swift_bridgeObjectRetain();
  v53 = sub_21DC0A7A4(a1);
  if ((v54 & 1) != 0)
  {
    sub_21DC0C210(*(_QWORD *)(v52 + 56) + *(_QWORD *)(v26 + 72) * v53, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    v55 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56);
    v56 = v24;
    v57 = 0;
  }
  else
  {
    v55 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56);
    v56 = v24;
    v57 = 1;
  }
  v180 = v55;
  v55((uint64_t)v56, v57, 1, v25);
  swift_bridgeObjectRelease();
  v178 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v178(v24, 1, v25) == 1)
    goto LABEL_7;
  v164 = v18;
  sub_21DC13CC0((uint64_t)v24, (uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  v58 = v165;
  v59 = v165 + 2;
  swift_beginAccess();
  v60 = v58[2];
  if (!*(_QWORD *)(v60 + 16))
  {
LABEL_23:
    sub_21DC5FCD8((uint64_t)v51);
    return 0;
  }
  swift_bridgeObjectRetain();
  v61 = sub_21DC0A7A4((uint64_t)v51);
  if ((v62 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  v159 = v51;
  v161 = v33;
  v169 = v10;
  v170 = v14;
  v158 = *(_QWORD *)(*(_QWORD *)(v60 + 56) + 8 * v61);
  swift_bridgeObjectRelease();
  v63 = v165[4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8518);
  v64 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v179 = *(_QWORD *)(v26 + 72);
  v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_21DC73650;
  v177 = v64;
  sub_21DC0C210(a1, v65 + v64, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  swift_retain();
  v66 = MEMORY[0x24BEE4B08];
  do
  {
    v67 = swift_bridgeObjectRetain();
    v66 = sub_21DC605AC(v67, v66);
    swift_bridgeObjectRelease();
    v183[0] = v66;
    swift_retain();
    v68 = sub_21DC60180(v65, v63);
    swift_bridgeObjectRelease();
    swift_release();
    v65 = sub_21DC4F1EC(v68, v183);
  }
  while (*(_QWORD *)(v65 + 16));
  v160 = v59;
  swift_release();
  swift_bridgeObjectRelease();
  v69 = v183[0];
  v70 = *(_QWORD *)(v183[0] + 16);
  v71 = (char *)MEMORY[0x24BEE4AF8];
  v176 = v25;
  v72 = (uint64_t)v163;
  if (!v70)
  {
    swift_bridgeObjectRelease();
    v88 = MEMORY[0x24BEE4AF8];
    v87 = (uint64_t)v174;
LABEL_26:
    v182 = v71;
    v89 = *(_QWORD *)(v88 + 16);
    v90 = (uint64_t)v168;
    v91 = v88;
    if (v89)
    {
      v92 = v88 + v177;
      v93 = v165 + 3;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_beginAccess();
      v94 = MEMORY[0x24BEE4AF8];
      while (1)
      {
        sub_21DC0C210(v92, v90, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
        v180(v90, 0, 1, v25);
        if (v178((char *)v90, 1, v25) == 1)
          break;
        v95 = v90;
        v96 = v171;
        sub_21DC13CC0(v95, v171, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
        sub_21DC0C210(v96, v87, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
        v97 = *v93;
        if (*(_QWORD *)(*v93 + 16))
        {
          swift_bridgeObjectRetain();
          v98 = sub_21DC0A7A4(v87);
          v99 = v94;
          if ((v100 & 1) != 0)
          {
            v99 = *(_QWORD *)(*(_QWORD *)(v97 + 56) + 8 * v98);
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          v99 = v94;
        }
        sub_21DC5FCD8(v87);
        sub_21DC5FCD8(v171);
        sub_21DC53010(v99, (unint64_t *)type metadata accessor for SiriTurn, (unint64_t *)&unk_2553AA470, &qword_2553AA468, (uint64_t *)sub_21DC0BCCC);
        v92 += v179;
        --v89;
        v90 = (uint64_t)v168;
        if (!v89)
          goto LABEL_36;
      }
    }
    else
    {
      swift_retain();
      swift_bridgeObjectRetain();
LABEL_36:
      v180(v90, 1, 1, v25);
    }
    swift_release();
    swift_bridgeObjectRelease();
    v174 = v182;
    v101 = *(_QWORD *)(v91 + 16);
    if (v101)
    {
      v182 = (char *)MEMORY[0x24BEE4AF8];
      sub_21DC4BBE0(0, v101, 0);
      v102 = v179;
      v103 = v182;
      v104 = v91 + v177;
      v105 = (uint64_t)v162;
      do
      {
        sub_21DC0C210(v104, v105, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
        v182 = v103;
        v107 = *((_QWORD *)v103 + 2);
        v106 = *((_QWORD *)v103 + 3);
        if (v107 >= v106 >> 1)
        {
          sub_21DC4BBE0(v106 > 1, v107 + 1, 1);
          v102 = v179;
          v103 = v182;
        }
        *((_QWORD *)v103 + 2) = v107 + 1;
        sub_21DC13CC0(v105, (uint64_t)&v103[v177 + v107 * v102], (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
        v104 += v102;
        --v101;
      }
      while (v101);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v103 = (char *)MEMORY[0x24BEE4AF8];
    }
    v108 = v165[4];
    v109 = *((_QWORD *)v103 + 2);
    v110 = (uint64_t)v170;
    v111 = (uint64_t)v169;
    v112 = v175;
    v171 = v108;
    if (v109)
    {
      v113 = (uint64_t)&v103[v177];
      v114 = (uint64_t *)(v108 + 16);
      swift_retain();
      swift_bridgeObjectRetain();
      while (1)
      {
        v115 = (uint64_t)v164;
        sub_21DC0C210(v113, (uint64_t)v164, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
        v116 = v176;
        v180(v115, 0, 1, v176);
        if (v178((char *)v115, 1, v116) == 1)
          break;
        v117 = v115;
        v118 = v172;
        sub_21DC13CC0(v117, v172, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v119 = sub_21DC0A7A4(v118);
        v121 = v120;
        swift_bridgeObjectRelease();
        if ((v121 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v123 = *v114;
          v181 = *v114;
          *v114 = 0x8000000000000000;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_21DC5EF48((uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID, &qword_2553A84A0);
            v123 = v181;
          }
          sub_21DC5FCD8(*(_QWORD *)(v123 + 48) + v119 * v179);
          sub_21DC69BC0(v119, v123);
          *v114 = v123;
          swift_bridgeObjectRelease();
        }
        swift_endAccess();
        swift_bridgeObjectRelease();
        sub_21DC5FCD8(v172);
        v113 += v179;
        --v109;
        v110 = (uint64_t)v170;
        v111 = (uint64_t)v169;
        v112 = v175;
        if (!v109)
          goto LABEL_53;
      }
    }
    else
    {
      swift_retain();
      swift_bridgeObjectRetain();
LABEL_53:
      v180((uint64_t)v164, 1, 1, v176);
    }
    swift_release();
    swift_bridgeObjectRelease();
    v124 = *((_QWORD *)v103 + 2);
    if (!v124)
    {
      swift_bridgeObjectRetain();
LABEL_80:
      v180(v110, 1, 1, v176);
LABEL_81:
      swift_bridgeObjectRelease_n();
      sub_21DC5FCD8((uint64_t)v159);
      return v158;
    }
    v125 = (uint64_t)&v103[v177];
    v126 = v165 + 3;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_21DC0C210(v125, v110, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      v127 = v176;
      v180(v110, 0, 1, v176);
      if (v178((char *)v110, 1, v127) == 1)
        goto LABEL_81;
      sub_21DC13CC0(v110, v112, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      v128 = *v173;
      if (*(_QWORD *)(*v173 + 16))
      {
        swift_bridgeObjectRetain();
        v129 = sub_21DC0A7A4(v112);
        if ((v130 & 1) != 0)
        {
          sub_21DC0C210(*(_QWORD *)(v128 + 56) + v129 * v179, v111, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
          v131 = 0;
        }
        else
        {
          v131 = 1;
        }
        v132 = v176;
        v180(v111, v131, 1, v176);
        swift_bridgeObjectRelease();
        if (v178((char *)v111, 1, v132) != 1)
        {
          v133 = v111;
          v134 = (uint64_t)v161;
          sub_21DC13CC0(v133, (uint64_t)v161, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
          swift_beginAccess();
          swift_bridgeObjectRetain();
          v135 = sub_21DC0A7A4(v134);
          v137 = v136;
          swift_bridgeObjectRelease();
          if ((v137 & 1) != 0)
          {
            v138 = v160;
            v139 = swift_isUniquelyReferenced_nonNull_native();
            v140 = *v138;
            v181 = *v138;
            *v138 = 0x8000000000000000;
            if (!v139)
            {
              sub_21DC5EAC4((uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID, &qword_2553AA440);
              v140 = v181;
            }
            sub_21DC5FCD8(*(_QWORD *)(v140 + 48) + v135 * v179);
            sub_21DC69630(v135, v140);
            *v138 = v140;
            swift_bridgeObjectRelease();
          }
          swift_endAccess();
          sub_21DC5FCD8((uint64_t)v161);
          goto LABEL_71;
        }
      }
      else
      {
        v180(v111, 1, 1, v176);
      }
      sub_21DC07C84(v111, &qword_2553AA430);
LABEL_71:
      v141 = v173;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v142 = sub_21DC0A7A4(v112);
      v144 = v143;
      swift_bridgeObjectRelease();
      if ((v144 & 1) != 0)
      {
        v145 = swift_isUniquelyReferenced_nonNull_native();
        v146 = *v141;
        v181 = *v141;
        *v141 = 0x8000000000000000;
        v147 = v141;
        if (!v145)
        {
          sub_21DC5ECEC();
          v146 = v181;
        }
        v148 = v142 * v179;
        sub_21DC5FCD8(*(_QWORD *)(v146 + 48) + v142 * v179);
        v149 = *(_QWORD *)(v146 + 56) + v148;
        v150 = v167;
        sub_21DC13CC0(v149, v167, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
        sub_21DC698EC(v142, v146);
        *v147 = v146;
        swift_bridgeObjectRelease();
        v151 = 0;
      }
      else
      {
        v151 = 1;
        v150 = v167;
      }
      v152 = v175;
      v180(v150, v151, 1, v176);
      sub_21DC07C84(v150, &qword_2553AA430);
      swift_endAccess();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v153 = sub_21DC0A7A4(v152);
      v155 = v154;
      swift_bridgeObjectRelease();
      if ((v155 & 1) != 0)
      {
        v156 = swift_isUniquelyReferenced_nonNull_native();
        v157 = *v126;
        v181 = *v126;
        *v126 = 0x8000000000000000;
        if (!v156)
        {
          sub_21DC5EF48((uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID, &qword_2553AA460);
          v157 = v181;
        }
        sub_21DC5FCD8(*(_QWORD *)(v157 + 48) + v153 * v179);
        sub_21DC69BC0(v153, v157);
        *v126 = v157;
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      v112 = v175;
      sub_21DC5FCD8(v175);
      v125 += v179;
      --v124;
      v110 = (uint64_t)v170;
      v111 = (uint64_t)v169;
      if (!v124)
        goto LABEL_80;
    }
  }
  v183[0] = MEMORY[0x24BEE4AF8];
  sub_21DC4BBE0(0, v70, 0);
  v73 = v183[0];
  result = sub_21DC5F864(v69);
  v75 = result;
  v77 = v76;
  v79 = v78 & 1;
  v166 = v69 + 56;
  v80 = v179;
  while ((v75 & 0x8000000000000000) == 0 && v75 < 1 << *(_BYTE *)(v69 + 32))
  {
    if (((*(_QWORD *)(v166 + (((unint64_t)v75 >> 3) & 0xFFFFFFFFFFFFF8)) >> v75) & 1) == 0)
      goto LABEL_83;
    if (*(_DWORD *)(v69 + 36) != v77)
      goto LABEL_84;
    sub_21DC0C210(*(_QWORD *)(v69 + 48) + v75 * v80, v72, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    v81 = v73;
    v183[0] = v73;
    v82 = v72;
    v84 = *(_QWORD *)(v73 + 16);
    v83 = *(_QWORD *)(v73 + 24);
    if (v84 >= v83 >> 1)
    {
      sub_21DC4BBE0(v83 > 1, v84 + 1, 1);
      v80 = v179;
      v81 = v183[0];
    }
    *(_QWORD *)(v81 + 16) = v84 + 1;
    v73 = v81;
    sub_21DC13CC0(v82, v81 + v177 + v84 * v80, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    result = sub_21DC5F908(v75, v77, v79 & 1, v69);
    v75 = result;
    v77 = v85;
    v79 = v86 & 1;
    --v70;
    v87 = (uint64_t)v174;
    v72 = v82;
    if (!v70)
    {
      sub_21DC3A41C(result, v85, v86 & 1);
      swift_bridgeObjectRelease();
      v25 = v176;
      v71 = (char *)MEMORY[0x24BEE4AF8];
      v88 = v73;
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_21DC5702C(unint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t result;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  char v17;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  unint64_t v32;
  char v33;
  char v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;

  v2 = v1;
  swift_retain();
  sub_21DC512EC(a1);
  swift_release();
  if (a1 >> 62)
  {
LABEL_40:
    swift_bridgeObjectRetain();
    result = sub_21DC71FCC();
    v4 = result;
    if (result)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v4)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v4 >= 1)
  {
    v6 = v2 + 5;
    v7 = v2 + 2;
    v2 += 3;
    swift_beginAccess();
    v8 = 0;
    v37 = v4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x22079D208](v8, a1);
      else
        v9 = *(id *)(a1 + 8 * v8 + 32);
      v10 = v9;
      v11 = *v6;
      if ((*v6 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        if (!sub_21DC71F90())
          goto LABEL_22;
        sub_21DC71804();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v12 = v41;
        swift_unknownObjectRelease();
      }
      else
      {
        if (!*(_QWORD *)(v11 + 16))
          goto LABEL_23;
        swift_bridgeObjectRetain();
        v13 = sub_21DC0A4BC((uint64_t)v10);
        if ((v14 & 1) == 0)
        {
LABEL_22:
          swift_bridgeObjectRelease();
          goto LABEL_23;
        }
        v12 = *(id *)(*(_QWORD *)(v11 + 56) + 8 * v13);
      }
      swift_bridgeObjectRelease();
      if (v12)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v15 = sub_21DC0A4BC((uint64_t)v12);
        v17 = v16;
        swift_bridgeObjectRelease();
        if ((v17 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v19 = *v7;
          v38 = *v7;
          *v7 = 0x8000000000000000;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_21DC5E134();
            v19 = v38;
          }

          sub_21DC68F1C(v15, v19);
          *v7 = v19;
          swift_bridgeObjectRelease();
        }
        swift_endAccess();

      }
LABEL_23:
      swift_beginAccess();
      v20 = *v6;
      if ((*v6 & 0xC000000000000001) != 0)
      {
        if (v20 < 0)
          v21 = *v6;
        else
          v21 = v20 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v22 = v10;
        v23 = (void *)sub_21DC71F90();

        if (!v23)
          goto LABEL_34;
        swift_unknownObjectRelease();
        v24 = sub_21DC71E28();
        v25 = sub_21DC5CAD8(v21, v24);
        swift_retain();
        v26 = sub_21DC0A4BC((uint64_t)v22);
        v28 = v27;
        swift_release();
        if ((v28 & 1) == 0)
        {
          __break(1u);
          goto LABEL_40;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        v26 = sub_21DC0A4BC((uint64_t)v10);
        v30 = v29;
        swift_bridgeObjectRelease();
        if ((v30 & 1) == 0)
        {
          v23 = 0;
          goto LABEL_35;
        }
        v31 = swift_isUniquelyReferenced_nonNull_native();
        v25 = *v6;
        v39 = *v6;
        *v6 = 0x8000000000000000;
        if ((v31 & 1) == 0)
        {
          sub_21DC5E2D4();
          v25 = v39;
        }
      }

      v23 = *(void **)(*(_QWORD *)(v25 + 56) + 8 * v26);
      sub_21DC68F1C(v26, v25);
      *v6 = v25;
LABEL_34:
      swift_bridgeObjectRelease();
LABEL_35:
      swift_endAccess();

      swift_beginAccess();
      swift_bridgeObjectRetain();
      v32 = sub_21DC0A4BC((uint64_t)v10);
      v34 = v33;
      swift_bridgeObjectRelease();
      if ((v34 & 1) != 0)
      {
        v35 = swift_isUniquelyReferenced_nonNull_native();
        v36 = *v2;
        v40 = *v2;
        *v2 = 0x8000000000000000;
        if (!v35)
        {
          sub_21DC5E910((uint64_t *)&unk_2553AA560);
          v36 = v40;
        }

        sub_21DC690CC(v32, v36);
        *v2 = v36;
        swift_bridgeObjectRelease();
      }
      ++v8;
      swift_endAccess();

      swift_bridgeObjectRelease();
      if (v37 == v8)
        return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC574BC(uint64_t a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;

  v31 = a1 + 56;
  v1 = *(_BYTE *)(a1 + 32);
  v2 = 1 << v1;
  v3 = -1;
  if (1 << v1 < 64)
    v3 = ~(-1 << (1 << v1));
  v4 = v3 & *(_QWORD *)(a1 + 56);
  if (v4)
  {
    v5 = 0;
    v6 = __clz(__rbit64(v4));
    v7 = (v4 - 1) & v4;
    v32 = (unint64_t)(v2 + 63) >> 6;
  }
  else
  {
    v13 = v1 & 0x3F;
    if (v13 <= 6)
      return 0;
    v32 = (unint64_t)(v2 + 63) >> 6;
    v26 = *(_QWORD *)(a1 + 64);
    if (v26)
    {
      v5 = 1;
    }
    else
    {
      if (v13 < 8)
        return 0;
      v26 = *(_QWORD *)(a1 + 72);
      if (v26)
      {
        v5 = 2;
      }
      else
      {
        v26 = *(_QWORD *)(a1 + 80);
        if (v26)
        {
          v5 = 3;
        }
        else
        {
LABEL_48:
          if (v13 < 9)
            return 0;
          v26 = *(_QWORD *)(a1 + 88);
          if (v26)
          {
            v5 = 4;
          }
          else
          {
            v26 = *(_QWORD *)(a1 + 96);
            if (!v26)
              goto LABEL_54;
            v5 = 5;
          }
        }
      }
    }
LABEL_41:
    v7 = (v26 - 1) & v26;
    v6 = __clz(__rbit64(v26)) + (v5 << 6);
  }
  v8 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 32 * v6);
  v10 = *v8;
  v9 = v8[1];
  v12 = v8[2];
  v11 = v8[3];
  v33 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  while (v7)
  {
    v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v15 = v14 | (v5 << 6);
    a1 = v33;
LABEL_26:
    v19 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 32 * v15);
    v20 = *v19;
    v21 = v19[1];
    v22 = v19[2];
    v23 = v19[3];
    v24 = v22 == v12 && v23 == v11;
    if ((v24 || (sub_21DC720A4() & 1) != 0) && v20 == v10 && v21 == v9)
      continue;
    if ((sub_21DC720A4() & 1) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = v23;
      v12 = v22;
      v9 = v21;
      v10 = v20;
    }
  }
  v16 = v5 + 1;
  a1 = v33;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v16 >= v32)
    goto LABEL_37;
  v17 = *(_QWORD *)(v31 + 8 * v16);
  ++v5;
  if (v17)
    goto LABEL_25;
  v5 = v16 + 1;
  if (v16 + 1 >= v32)
    goto LABEL_37;
  v17 = *(_QWORD *)(v31 + 8 * v5);
  if (v17)
    goto LABEL_25;
  v5 = v16 + 2;
  if (v16 + 2 >= v32)
    goto LABEL_37;
  v17 = *(_QWORD *)(v31 + 8 * v5);
  if (v17)
    goto LABEL_25;
  v5 = v16 + 3;
  if (v16 + 3 >= v32)
    goto LABEL_37;
  v17 = *(_QWORD *)(v31 + 8 * v5);
  if (v17)
  {
LABEL_25:
    v13 = v17 - 1;
    v7 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v5 << 6);
    goto LABEL_26;
  }
  v18 = v16 + 4;
  if (v18 >= v32)
  {
LABEL_37:
    swift_release();
    return v10;
  }
  v17 = *(_QWORD *)(v31 + 8 * v18);
  if (v17)
  {
    v5 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v5 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v5 >= v32)
      goto LABEL_37;
    v17 = *(_QWORD *)(v31 + 8 * v5);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
  __break(1u);
LABEL_54:
  v27 = 0;
  v28 = 6;
  if (v32 > 6)
    v28 = v32;
  v29 = v28 - 6;
  while (v29 != v27)
  {
    v26 = *(_QWORD *)(a1 + 104 + 8 * v27++);
    if (v26)
    {
      v5 = v27 + 5;
      goto LABEL_41;
    }
  }
  return 0;
}

void sub_21DC57810(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  int v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  char v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  int64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;

  v2 = sub_21DC715F4();
  v46 = *(_QWORD *)(v2 - 8);
  v47 = v2;
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = (char *)&v40 - v8;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_21DC71DF8();
    sub_21DC71804();
    sub_21DC13D04((unint64_t *)&unk_2553AA580, (uint64_t (*)(uint64_t))MEMORY[0x24BE94860], MEMORY[0x24BEE5BD8]);
    sub_21DC71C84();
    a1 = v51;
    v45 = v52;
    v10 = v53;
    v11 = v54;
    v12 = v55;
    if (v51 < 0)
    {
      v38 = sub_21DC71E4C();
      if (!v38)
        goto LABEL_60;
      v41 = v10;
      v48 = a1;
      v49 = v38;
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v16 = v50;
      swift_unknownObjectRelease();
      v17 = 0;
      v15 = v11;
      v13 = v12;
      if (!v16)
        goto LABEL_60;
LABEL_6:
      v44 = v48 & 0x7FFFFFFFFFFFFFFFLL;
      v42 = (unint64_t)(v41 + 64) >> 6;
      v43 = MEMORY[0x24BEE4AD0] + 8;
      if (v17)
        goto LABEL_10;
LABEL_7:
      v18 = sub_21DC71E4C();
      if (!v18)
        goto LABEL_60;
      v49 = v18;
      sub_21DC71804();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v19 = v50;
      swift_unknownObjectRelease();
      v20 = v15;
      v21 = v13;
      if (!v19)
      {
LABEL_60:
        sub_21DC0C1C4();
        return;
      }
      while (1)
      {
        v26 = sub_21DC717D4();
        if (v26 == sub_21DC717D4())
        {
          sub_21DC717F8();
          sub_21DC717F8();
          v27 = MEMORY[0x22079C8F0](v9, v6);
          v28 = v47;
          v29 = *(void (**)(char *, uint64_t))(v46 + 8);
          v29(v6, v47);
          v29(v9, v28);
          if ((v27 & 1) == 0)
            goto LABEL_31;
        }
        else
        {
          v30 = sub_21DC717D4();
          if (v30 >= (int)sub_21DC717D4())
          {
LABEL_31:

            goto LABEL_32;
          }
        }

        v16 = v19;
LABEL_32:
        v15 = v20;
        v13 = v21;
        if (!v17)
          goto LABEL_7;
LABEL_10:
        if (v13)
        {
          v21 = (v13 - 1) & v13;
          v22 = __clz(__rbit64(v13)) | (v15 << 6);
          v20 = v15;
        }
        else
        {
          v23 = v15 + 1;
          if (__OFADD__(v15, 1))
          {
            __break(1u);
            goto LABEL_62;
          }
          if (v23 >= v42)
            goto LABEL_60;
          v24 = *(_QWORD *)(v45 + 8 * v23);
          v20 = v15 + 1;
          if (!v24)
          {
            v20 = v15 + 2;
            if (v15 + 2 >= v42)
              goto LABEL_60;
            v24 = *(_QWORD *)(v45 + 8 * v20);
            if (!v24)
            {
              v20 = v15 + 3;
              if (v15 + 3 >= v42)
                goto LABEL_60;
              v24 = *(_QWORD *)(v45 + 8 * v20);
              if (!v24)
              {
                v20 = v15 + 4;
                if (v15 + 4 >= v42)
                  goto LABEL_60;
                v24 = *(_QWORD *)(v45 + 8 * v20);
                if (!v24)
                {
                  v20 = v15 + 5;
                  if (v15 + 5 >= v42)
                    goto LABEL_60;
                  v24 = *(_QWORD *)(v45 + 8 * v20);
                  if (!v24)
                  {
                    v25 = v15 + 6;
                    while (v42 != v25)
                    {
                      v24 = *(_QWORD *)(v45 + 8 * v25++);
                      if (v24)
                      {
                        v20 = v25 - 1;
                        goto LABEL_27;
                      }
                    }
                    goto LABEL_60;
                  }
                }
              }
            }
          }
LABEL_27:
          v21 = (v24 - 1) & v24;
          v22 = __clz(__rbit64(v24)) + (v20 << 6);
        }
        v19 = *(id *)(*(_QWORD *)(v48 + 48) + 8 * v22);
        if (!v19)
          goto LABEL_60;
      }
    }
    if (v55)
      goto LABEL_4;
  }
  else
  {
    v31 = -1 << *(_BYTE *)(a1 + 32);
    v32 = *(_QWORD *)(a1 + 56);
    v45 = a1 + 56;
    v10 = ~v31;
    v33 = -v31;
    if (v33 < 64)
      v34 = ~(-1 << v33);
    else
      v34 = -1;
    v12 = v34 & v32;
    swift_bridgeObjectRetain();
    v11 = 0;
    if (v12)
    {
LABEL_4:
      v41 = v10;
      v13 = (v12 - 1) & v12;
      v14 = __clz(__rbit64(v12)) | (v11 << 6);
      v15 = v11;
      goto LABEL_5;
    }
  }
  v35 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    v36 = (unint64_t)(v10 + 64) >> 6;
    if (v35 >= v36)
      goto LABEL_60;
    v37 = *(_QWORD *)(v45 + 8 * v35);
    v15 = v11 + 1;
    if (!v37)
    {
      v15 = v11 + 2;
      if (v11 + 2 >= v36)
        goto LABEL_60;
      v37 = *(_QWORD *)(v45 + 8 * v15);
      if (!v37)
      {
        v15 = v11 + 3;
        if (v11 + 3 >= v36)
          goto LABEL_60;
        v37 = *(_QWORD *)(v45 + 8 * v15);
        if (!v37)
        {
          v15 = v11 + 4;
          if (v11 + 4 >= v36)
            goto LABEL_60;
          v37 = *(_QWORD *)(v45 + 8 * v15);
          if (!v37)
          {
            v15 = v11 + 5;
            if (v11 + 5 >= v36)
              goto LABEL_60;
            v37 = *(_QWORD *)(v45 + 8 * v15);
            if (!v37)
            {
              v39 = v11 + 6;
              do
              {
                if (v36 == v39)
                  goto LABEL_60;
                v37 = *(_QWORD *)(v45 + 8 * v39++);
              }
              while (!v37);
              v15 = v39 - 1;
            }
          }
        }
      }
    }
    v41 = v10;
    v13 = (v37 - 1) & v37;
    v14 = __clz(__rbit64(v37)) + (v15 << 6);
LABEL_5:
    v48 = a1;
    v16 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v14);
    v17 = 1;
    if (!v16)
      goto LABEL_60;
    goto LABEL_6;
  }
LABEL_62:
  __break(1u);
}

uint64_t sub_21DC57D48@<X0>(uint64_t a1@<X0>, uint64_t (*a2)()@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t result;
  unint64_t v35;
  unint64_t v36;
  int64_t v37;
  unint64_t v38;
  int64_t v39;
  unsigned int v40;
  unint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t (*v47)();
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t, uint64_t);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA430);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (uint64_t)&v47 - v10;
  v12 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v13 = *(_QWORD *)(v12 - 8);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v18);
  v20 = (char *)&v47 - v19;
  v21 = *(_QWORD *)(a1 + 56);
  v51 = a1 + 56;
  v22 = *(_BYTE *)(a1 + 32);
  v23 = 1 << v22;
  v24 = -1;
  if (1 << v22 < 64)
    v24 = ~(-1 << (1 << v22));
  v25 = v24 & v21;
  if (!v25)
  {
    v40 = v22 & 0x3F;
    if (v40 > 6)
    {
      v41 = *(_QWORD *)(a1 + 64);
      if (v41)
      {
        v50 = v23;
        v26 = v11;
        v11 = 1;
        goto LABEL_34;
      }
      if (v40 >= 8)
      {
        v41 = *(_QWORD *)(a1 + 72);
        v50 = v23;
        if (v41)
        {
          v26 = v11;
          v11 = 2;
          goto LABEL_34;
        }
        v41 = *(_QWORD *)(a1 + 80);
        if (v41)
        {
          v26 = v11;
          v11 = 3;
          goto LABEL_34;
        }
        if (v40 >= 9)
        {
          v41 = *(_QWORD *)(a1 + 88);
          if (!v41)
            goto LABEL_47;
          v26 = v11;
          v11 = 4;
          goto LABEL_34;
        }
      }
    }
LABEL_55:
    v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v32(v11, 1, 1, v12);
    goto LABEL_56;
  }
  v50 = 1 << v22;
  v26 = v11;
  v11 = 0;
  v27 = __clz(__rbit64(v25));
  v28 = (v25 - 1) & v25;
  while (1)
  {
    v29 = *(_QWORD *)(a1 + 48);
    v30 = *(_QWORD *)(v13 + 72);
    v48 = a1;
    v49 = v30;
    v31 = v26;
    sub_21DC0C210(v29 + v30 * v27, v26, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v32(v31, 0, 1, v12);
    v13 = *(_QWORD *)(v13 + 48);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v13)(v31, 1, v12) == 1)
    {
      v11 = v31;
LABEL_56:
      sub_21DC07C84(v11, &qword_2553AA430);
      return ((uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))v32)(a2, 1, 1, v12);
    }
    v52 = v32;
    v47 = a2;
    a2 = type metadata accessor for SiriConversationPublisher.GraphUUID;
    sub_21DC13CC0(v31, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    v50 = (unint64_t)(v50 + 63) >> 6;
    v33 = v48;
    result = swift_bridgeObjectRetain();
    a1 = v49;
    if (v28)
    {
      while (1)
      {
        v35 = __clz(__rbit64(v28));
        v28 &= v28 - 1;
        v36 = v35 | (v11 << 6);
LABEL_27:
        sub_21DC0C210(*(_QWORD *)(v33 + 48) + v36 * a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
        v52((uint64_t)v8, 0, 1, v12);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(v8, 1, v12) == 1)
          break;
        sub_21DC13CC0((uint64_t)v8, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
        if ((MEMORY[0x22079C8F0](v17, v20) & 1) != 0)
        {
          sub_21DC5FCD8((uint64_t)v20);
          result = sub_21DC13CC0((uint64_t)v17, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
          if (!v28)
            goto LABEL_11;
        }
        else
        {
          result = sub_21DC5FCD8((uint64_t)v17);
          if (!v28)
            goto LABEL_11;
        }
      }
      swift_release();
      v42 = v52;
      goto LABEL_37;
    }
LABEL_11:
    v37 = v11 + 1;
    if (!__OFADD__(v11, 1))
      break;
    __break(1u);
LABEL_47:
    v41 = *(_QWORD *)(a1 + 96);
    if (v41)
    {
      v26 = v11;
      v11 = 5;
    }
    else
    {
      v44 = 0;
      v45 = (unint64_t)(v23 + 63) >> 6;
      if (v45 <= 6)
        v45 = 6;
      v46 = v45 - 6;
      do
      {
        if (v46 == v44)
          goto LABEL_55;
        v41 = *(_QWORD *)(a1 + 104 + 8 * v44++);
      }
      while (!v41);
      v26 = v11;
      v11 = v44 + 5;
    }
LABEL_34:
    v28 = (v41 - 1) & v41;
    v27 = __clz(__rbit64(v41)) + (v11 << 6);
  }
  if (v37 >= v50)
    goto LABEL_36;
  v38 = *(_QWORD *)(v51 + 8 * v37);
  ++v11;
  if (v38)
  {
LABEL_26:
    v28 = (v38 - 1) & v38;
    v36 = __clz(__rbit64(v38)) + (v11 << 6);
    goto LABEL_27;
  }
  v11 = v37 + 1;
  if (v37 + 1 >= v50)
  {
LABEL_36:
    v42 = v52;
    v52((uint64_t)v8, 1, 1, v12);
    swift_release();
LABEL_37:
    sub_21DC07C84((uint64_t)v8, &qword_2553AA430);
    v43 = (uint64_t)v47;
    sub_21DC13CC0((uint64_t)v20, (uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v42)(v43, 0, 1, v12);
  }
  v38 = *(_QWORD *)(v51 + 8 * v11);
  if (v38)
    goto LABEL_26;
  v11 = v37 + 2;
  if (v37 + 2 >= v50)
    goto LABEL_36;
  v38 = *(_QWORD *)(v51 + 8 * v11);
  if (v38)
    goto LABEL_26;
  v11 = v37 + 3;
  if (v37 + 3 >= v50)
    goto LABEL_36;
  v38 = *(_QWORD *)(v51 + 8 * v11);
  if (v38)
    goto LABEL_26;
  v39 = v37 + 4;
  if (v39 >= v50)
    goto LABEL_36;
  v38 = *(_QWORD *)(v51 + 8 * v39);
  if (v38)
  {
    v11 = v39;
    goto LABEL_26;
  }
  while (1)
  {
    v11 = v39 + 1;
    if (__OFADD__(v39, 1))
      break;
    if (v11 >= v50)
      goto LABEL_36;
    v38 = *(_QWORD *)(v51 + 8 * v11);
    ++v39;
    if (v38)
      goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC58238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v15;
  char v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v15 = (uint64_t *)(a5 + 40);
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(a5 + 40) + 16))
    goto LABEL_27;
  swift_bridgeObjectRetain();
  sub_21DC0A5CC(a1, a2, a3, a4);
  v17 = v16;
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
    goto LABEL_27;
  v39 = a1;
  v40 = a3;
  v18 = *v15;
  if (!*(_QWORD *)(*v15 + 16))
  {
    sub_21DC20164(a6, a7);
    if (!a7)
      goto LABEL_27;
LABEL_20:
    v28 = 0;
    v23 = 0;
LABEL_22:
    sub_21DC20194(v28, v23);
    sub_21DC20194(a6, a7);
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  sub_21DC20164(a6, a7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = sub_21DC0A5CC(a1, a2, a3, a4);
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!a7)
    {
LABEL_27:
      swift_beginAccess();
      sub_21DC20164(a6, a7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_21DC4F5A8(a6, a7, a8, a9, a1, a2, a3, a4);
      return swift_endAccess();
    }
    goto LABEL_20;
  }
  v21 = (uint64_t *)(*(_QWORD *)(v18 + 56) + 32 * v19);
  v22 = *v21;
  v23 = v21[1];
  v24 = v21[3];
  v37 = v21[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!a7)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 = v22;
    goto LABEL_22;
  }
  v25 = v22 == a6 && v23 == a7;
  if (v25 || (sub_21DC720A4() & 1) != 0)
  {
    if (v37 == a8 && v24 == a9)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    v27 = sub_21DC720A4();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = v39;
    a3 = v40;
    if ((v27 & 1) != 0)
      goto LABEL_27;
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_23:
  v29 = *v15;
  if (*(_QWORD *)(*v15 + 16))
  {
    swift_bridgeObjectRetain();
    v30 = sub_21DC0A5CC(v39, a2, v40, a4);
    if ((v31 & 1) != 0)
    {
      v32 = (uint64_t *)(*(_QWORD *)(v29 + 56) + 32 * v30);
      v34 = *v32;
      v33 = v32[1];
      v35 = v32[3];
      v38 = v32[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      sub_21DC68294(v34, v33, v38, v35);
      swift_endAccess();
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      a1 = v39;
      a3 = v40;
      goto LABEL_27;
    }
  }
  else
  {
    __break(1u);
  }
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_21DC58670(void *a1, uint64_t a2, void *a3)
{
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  char v15;
  uint64_t v16;
  void *v17;
  uint64_t result;
  id v19;
  id v20;

  v6 = (uint64_t *)(a2 + 40);
  swift_beginAccess();
  v7 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  v8 = sub_21DC52C2C(a1, v7);
  swift_bridgeObjectRelease();

  if (!v8)
  {
LABEL_12:
    swift_beginAccess();
    if (a3)
    {
      v13 = a3;
      goto LABEL_14;
    }
LABEL_15:
    v20 = a1;
    v19 = (id)sub_21DC68578((unint64_t)v20);

    goto LABEL_16;
  }
  v9 = *v6;
  v10 = a3;
  v11 = a1;
  swift_bridgeObjectRetain();
  v12 = sub_21DC52C2C(v11, v9);
  swift_bridgeObjectRelease();
  if (!v12)
  {

    if (!a3)
    {
      swift_beginAccess();
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  if (!a3)
  {

    v10 = v12;
LABEL_9:

    goto LABEL_10;
  }
  sub_21DC71804();
  v13 = v10;
  v14 = v12;
  v15 = sub_21DC71D68();

  if ((v15 & 1) != 0)
  {
    swift_beginAccess();
LABEL_14:
    v19 = a1;
    sub_21DC5CA38((uint64_t)v13, v19);
LABEL_16:

    return swift_endAccess();
  }
LABEL_10:
  v16 = *v6;
  swift_bridgeObjectRetain();
  v17 = sub_21DC52C2C(v11, v16);
  result = swift_bridgeObjectRelease();
  if (v17)
  {
    swift_beginAccess();
    sub_21DC684A8((uint64_t)v17);
    swift_endAccess();

    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC58890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t);
  int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t result;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v79 = a3;
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA448);
  MEMORY[0x24BDAC7A8](v75, v5);
  v81 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v78 = (uint64_t)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v71 = (uint64_t)&v70 - v14;
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v70 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA430);
  v20 = MEMORY[0x24BDAC7A8](v18, v19);
  v74 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v77 = (uint64_t)&v70 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23, v25);
  v76 = (uint64_t)&v70 - v27;
  v29 = MEMORY[0x24BDAC7A8](v26, v28);
  v31 = (char *)&v70 - v30;
  v33 = MEMORY[0x24BDAC7A8](v29, v32);
  v35 = (char *)&v70 - v34;
  MEMORY[0x24BDAC7A8](v33, v36);
  v38 = (char *)&v70 - v37;
  v39 = (uint64_t *)(a2 + 40);
  swift_beginAccess();
  v73 = a2;
  v40 = *(_QWORD *)(a2 + 40);
  v41 = *(_QWORD *)(v40 + 16);
  v80 = a1;
  if (!v41)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v38, 1, 1, v7);
LABEL_7:
    sub_21DC07C84((uint64_t)v38, &qword_2553AA430);
    v49 = v80;
    sub_21DC0C210(v80, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    v50 = v79;
    sub_21DC07CC0(v79, (uint64_t)v35, &qword_2553AA430);
    sub_21DC07C84((uint64_t)v35, &qword_2553AA430);
LABEL_26:
    sub_21DC5FCD8((uint64_t)v17);
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  v42 = sub_21DC0A7A4(a1);
  if ((v43 & 1) != 0)
  {
    sub_21DC0C210(*(_QWORD *)(v40 + 56) + *(_QWORD *)(v8 + 72) * v42, (uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v45 = v38;
    v46 = 0;
  }
  else
  {
    v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v45 = v38;
    v46 = 1;
  }
  v72 = v44;
  v44(v45, v46, 1, v7);
  v47 = v81;
  swift_bridgeObjectRelease();
  v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v48(v38, 1, v7) == 1)
    goto LABEL_7;
  v70 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v48;
  sub_21DC07C84((uint64_t)v38, &qword_2553AA430);
  sub_21DC0C210(v80, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  sub_21DC07CC0(v79, (uint64_t)v35, &qword_2553AA430);
  v51 = *v39;
  if (*(_QWORD *)(*v39 + 16))
  {
    swift_bridgeObjectRetain();
    v52 = sub_21DC0A7A4((uint64_t)v17);
    if ((v53 & 1) != 0)
    {
      sub_21DC0C210(*(_QWORD *)(v51 + 56) + *(_QWORD *)(v8 + 72) * v52, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      v54 = v31;
      v55 = 0;
    }
    else
    {
      v54 = v31;
      v55 = 1;
    }
    v72(v54, v55, 1, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    v72(v31, 1, 1, v7);
  }
  v56 = v47 + *(int *)(v75 + 48);
  sub_21DC07CC0((uint64_t)v31, v81, &qword_2553AA430);
  v57 = v81;
  sub_21DC07CC0((uint64_t)v35, v56, &qword_2553AA430);
  v58 = v70;
  if (v70(v57, 1, v7) == 1)
  {
    sub_21DC07C84((uint64_t)v31, &qword_2553AA430);
    v57 = v81;
    sub_21DC07C84((uint64_t)v35, &qword_2553AA430);
    sub_21DC5FCD8((uint64_t)v17);
    v59 = v58(v56, 1, v7);
    v50 = v79;
    if (v59 == 1)
    {
      sub_21DC07C84(v57, &qword_2553AA430);
      v49 = v80;
LABEL_27:
      v65 = v78;
      sub_21DC0C210(v49, v78, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      v66 = v77;
      sub_21DC07CC0(v50, v77, &qword_2553AA430);
      swift_beginAccess();
      sub_21DC4F6DC(v66, v65);
      return swift_endAccess();
    }
    goto LABEL_19;
  }
  sub_21DC07CC0(v57, v76, &qword_2553AA430);
  if (v58(v56, 1, v7) == 1)
  {
    sub_21DC07C84((uint64_t)v31, &qword_2553AA430);
    sub_21DC07C84((uint64_t)v35, &qword_2553AA430);
    sub_21DC5FCD8((uint64_t)v17);
    sub_21DC5FCD8(v76);
    v50 = v79;
LABEL_19:
    sub_21DC07C84(v57, &qword_2553AA448);
    v49 = v80;
    goto LABEL_20;
  }
  v67 = v56;
  v68 = v71;
  sub_21DC13CC0(v67, v71, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  v69 = v76;
  LODWORD(v75) = sub_21DC715D0();
  sub_21DC5FCD8(v68);
  sub_21DC07C84((uint64_t)v31, &qword_2553AA430);
  sub_21DC07C84((uint64_t)v35, &qword_2553AA430);
  sub_21DC5FCD8((uint64_t)v17);
  sub_21DC5FCD8(v69);
  sub_21DC07C84(v57, &qword_2553AA430);
  v50 = v79;
  v49 = v80;
  if ((v75 & 1) != 0)
    goto LABEL_27;
LABEL_20:
  v60 = *v39;
  if (*(_QWORD *)(*v39 + 16))
  {
    swift_bridgeObjectRetain();
    v61 = sub_21DC0A7A4(v49);
    if ((v62 & 1) != 0)
    {
      v17 = v74;
      sub_21DC0C210(*(_QWORD *)(v60 + 56) + *(_QWORD *)(v8 + 72) * v61, (uint64_t)v74, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      v63 = 0;
    }
    else
    {
      v63 = 1;
      v17 = v74;
    }
    v72(v17, v63, 1, v7);
    swift_bridgeObjectRelease();
    result = v70((uint64_t)v17, 1, v7);
    if ((_DWORD)result != 1)
    {
      swift_beginAccess();
      sub_21DC687C0((uint64_t)v17);
      swift_endAccess();
      goto LABEL_26;
    }
  }
  else
  {
    result = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v72)(v74, 1, 1, v7);
  }
  __break(1u);
  return result;
}

void sub_21DC58F20()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;

  v1 = v0;
  v2 = objc_allocWithZone((Class)type metadata accessor for SiriConversationPublisher.SiriConversationSubscriber());
  v3 = swift_unknownObjectRetain();
  v4 = sub_21DC60878(v3);
  swift_unknownObjectRelease();
  v5 = OBJC_IVAR____TtC26AIMLInstrumentationStreams25SiriConversationPublisher_inner;
  v6 = *(void **)(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams25SiriConversationPublisher_inner);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams25SiriConversationPublisher_inner) = v4;

  if (*(_QWORD *)(v1 + v5))
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams25SiriConversationPublisher_upstream), sel_subscribe_);
  else
    __break(1u);
}

uint64_t sub_21DC59048()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams25SiriConversationPublisher_upstream);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A8930);
  v2 = v1;
  if (!swift_dynamicCast())
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9780);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_21DC73350;
  *(_QWORD *)(v3 + 32) = v5;
  v6 = v3;
  sub_21DC71B94();
  return v6;
}

uint64_t sub_21DC59178()
{
  sub_21DC72134();
  sub_21DC715F4();
  sub_21DC13D04((unint64_t *)&qword_2553AA410, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_21DC71A44();
  return sub_21DC72158();
}

uint64_t sub_21DC591E4()
{
  sub_21DC715F4();
  sub_21DC13D04((unint64_t *)&qword_2553AA410, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_21DC71A44();
}

uint64_t sub_21DC5923C()
{
  sub_21DC72134();
  sub_21DC715F4();
  sub_21DC13D04((unint64_t *)&qword_2553AA410, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_21DC71A44();
  return sub_21DC72158();
}

BOOL sub_21DC592A8(uint64_t a1, uint64_t a2)
{
  return (MEMORY[0x22079C8F0](a2, a1) & 1) == 0;
}

BOOL sub_21DC592D0()
{
  return (MEMORY[0x22079C8F0]() & 1) == 0;
}

void sub_21DC592EC()
{
  JUMPOUT(0x22079C8F0);
}

uint64_t sub_21DC59490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD v13[5];
  _QWORD *v14[2];

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC26AIMLInstrumentationStreams25SiriConversationPublisher26SiriConversationSubscriber_graphBuilder);
  if (*(_BYTE *)(v0
                + OBJC_IVAR____TtCC26AIMLInstrumentationStreams25SiriConversationPublisher26SiriConversationSubscriber_upstreamFinished) == 1)
  {
    swift_beginAccess();
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain_n();
    swift_retain();
    v3 = (_QWORD *)sub_21DC09800(v2);
    swift_bridgeObjectRelease();
    v14[0] = v3;
    sub_21DC5A174(v14);
    swift_bridgeObjectRelease();
    v4 = sub_21DC4F08C((uint64_t)v14[0]);
    swift_release();
    swift_release();
  }
  else
  {
    v5 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtCC26AIMLInstrumentationStreams25SiriConversationPublisher26SiriConversationSubscriber_lastReceivedTimestamp);
    v6 = swift_beginAccess();
    MEMORY[0x24BDAC7A8](v6, v7);
    v13[2] = v5;
    swift_retain();
    v8 = swift_bridgeObjectRetain();
    sub_21DC60D44(v8, (uint64_t (*)(char *, double))sub_21DC201FC, (uint64_t)v13);
    swift_bridgeObjectRelease();
    v9 = swift_bridgeObjectRetain();
    v10 = (_QWORD *)sub_21DC09800(v9);
    swift_release();
    v14[0] = v10;
    sub_21DC5A174(v14);
    swift_release();
    v4 = sub_21DC4F08C((uint64_t)v14[0]);
    swift_release();
    swift_release();
  }
  v11 = sub_21DC4EF24(v4);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_21DC59668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  objc_class *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  id v25;
  uint64_t result;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  objc_super v33;
  uint64_t v34;

  v1 = v0;
  v2 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  MEMORY[0x24BDAC7A8](v2, v3);
  v32 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21DC715F4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = OBJC_IVAR____TtCC26AIMLInstrumentationStreams25SiriConversationPublisher26SiriConversationSubscriber_downstream;
  v31 = OBJC_IVAR____TtCC26AIMLInstrumentationStreams25SiriConversationPublisher26SiriConversationSubscriber_graphBuilder;
  while (1)
  {
    v14 = sub_21DC59490();
    if (*(_QWORD *)(v14 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v8, v14 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v9);
      v15 = 0;
    }
    else
    {
      v15 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v15, 1, v9);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      return sub_21DC07C84((uint64_t)v8, (uint64_t *)&unk_2553A98F0);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
    v16 = (uint64_t)v32;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v32, v13, v9);
    swift_retain();
    sub_21DC56124(v16);
    v18 = v17;
    swift_release();
    sub_21DC5FCD8(v16);
    if (!v18)
      break;
    v19 = v1;
    v20 = (objc_class *)type metadata accessor for SiriConversation();
    v21 = (char *)objc_allocWithZone(v20);
    v22 = v21;
    if (v18 >> 62)
    {
      v27 = v21;
      v28 = swift_bridgeObjectRetain();
      v23 = (uint64_t)sub_21DC0947C(v28);
      swift_bridgeObjectRelease();
    }
    else
    {
      v23 = v18 & 0xFFFFFFFFFFFFFF8;
      v24 = v21;
      swift_bridgeObjectRetain();
    }
    v34 = v23;
    sub_21DC09A5C(&v34);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v22[OBJC_IVAR___ISSiriConversation_turns] = v34;

    v33.receiver = v22;
    v33.super_class = v20;
    v25 = objc_msgSendSuper2(&v33, sel_init);
    result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    if (!v25)
      return result;
    v1 = v19;
    objc_msgSend(*(id *)(v19 + v30), sel_receiveInput_, v25);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_21DC59940(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  double v24;
  double v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  char *v41;
  unint64_t v42;
  int v43;
  uint64_t v44;
  char *v45;
  void (*v46)(uint64_t, char *, uint64_t);
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;

  v2 = v1;
  v4 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v49 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_21DC715F4();
  v17 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v51 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v21);
  v23 = (char *)&v49 - v22;
  v24 = *(double *)&a1[OBJC_IVAR___ISEventGraph_timestamp];
  v25 = *(double *)(v1
                  + OBJC_IVAR____TtCC26AIMLInstrumentationStreams25SiriConversationPublisher26SiriConversationSubscriber_lastReceivedTimestamp);
  if (v24 > v25)
    v25 = *(double *)&a1[OBJC_IVAR___ISEventGraph_timestamp];
  *(double *)(v1
            + OBJC_IVAR____TtCC26AIMLInstrumentationStreams25SiriConversationPublisher26SiriConversationSubscriber_lastReceivedTimestamp) = v25;
  v26 = sub_21DC0BE64();
  v27 = sub_21DC26320();
  if (!*(_QWORD *)(v27 + 16) || (v28 = sub_21DC0A464(v26), (v29 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v52 = v2;
  v53 = v11;
  v50 = v8;
  v30 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v28);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = sub_21DC089B4(v30);
  swift_bridgeObjectRelease();
  if (!v31)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    result = swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v32 = a1;
  v33 = sub_21DC0BFDC(v31, (uint64_t)v32);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8338);
  *(_QWORD *)(swift_initStackObject() + 16) = v33;
  v34 = (void *)sub_21DC09288();
  swift_release();
  sub_21DC717F8();

  v35 = sub_21DC26320();
  if (!*(_QWORD *)(v35 + 16))
    goto LABEL_14;
  v36 = sub_21DC0A464(v26);
  if ((v37 & 1) == 0)
    goto LABEL_14;
  v38 = *(_QWORD *)(*(_QWORD *)(v35 + 56) + 8 * v36);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39 = sub_21DC089B4(v38);
  result = swift_bridgeObjectRelease();
  if (!v39)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  v41 = v32;
  v42 = sub_21DC0BFDC(v39, (uint64_t)v41);
  swift_bridgeObjectRelease();

  *(_QWORD *)(swift_initStackObject() + 16) = v42;
  ComponentGroup<>.previousTurnId.getter((uint64_t)v15);
  swift_release();
  v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  v44 = (uint64_t)v53;
  if (v43 == 1)
  {
    sub_21DC07C84((uint64_t)v15, (uint64_t *)&unk_2553A98F0);
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v44, v23, v16);
    swift_retain();
    sub_21DC52584(v41, v44, v24);
    swift_release();
    sub_21DC5FCD8(v44);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v23, v16);
  }
  else
  {
    v45 = v51;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v51, v15, v16);
    v46 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 16);
    v46(v44, v23, v16);
    v47 = (uint64_t)v50;
    v46((uint64_t)v50, v45, v16);
    swift_retain();
    sub_21DC543DC(v41, v44, v47, v24);
    swift_release();
    sub_21DC5FCD8(v47);
    sub_21DC5FCD8(v44);
    v48 = *(void (**)(char *, uint64_t))(v17 + 8);
    v48(v45, v16);
    return ((uint64_t (*)(char *, uint64_t))v48)(v23, v16);
  }
}

id sub_21DC59D6C()
{
  return sub_21DC59DE8(type metadata accessor for SiriConversationPublisher.SiriConversationSubscriber);
}

id sub_21DC59DDC()
{
  return sub_21DC59DE8(type metadata accessor for SiriConversationPublisher);
}

id sub_21DC59DE8(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for SiriConversationPublisher()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SiriConversationPublisher.SiriConversationSubscriber()
{
  return objc_opt_self();
}

uint64_t sub_21DC59E90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21DC715F4();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_21DC59ECC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21DC715F4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_21DC59F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21DC715F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_21DC59F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21DC715F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_21DC59F88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21DC715F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_21DC59FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21DC715F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_21DC5A010()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21DC5A01C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21DC715F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_21DC5A058()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21DC5A064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21DC715F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SiriConversationPublisher.GraphUUID()
{
  uint64_t result;

  result = qword_2553AA3D0;
  if (!qword_2553AA3D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21DC5A0E0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21DC715F4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21DC5A148()
{
  return sub_21DC13D04(&qword_2553AA408, (uint64_t (*)(uint64_t))type metadata accessor for SiriConversationPublisher.GraphUUID, (uint64_t)&unk_21DC75AF4);
}

uint64_t sub_21DC5A174(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2553A8368) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_21DC5F814(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_21DC5A1F8(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_21DC5A1F8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BOOL4 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  char *v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  char v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8368);
  v130 = *(_QWORD *)(v137 - 8);
  v4 = MEMORY[0x24BDAC7A8](v137, v3);
  v127 = (uint64_t)&v123 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v138 = (uint64_t)&v123 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v135 = (uint64_t)&v123 - v11;
  MEMORY[0x24BDAC7A8](v10, v12);
  v134 = (uint64_t)&v123 - v13;
  v14 = a1[1];
  result = sub_21DC72068();
  if (result >= v14)
  {
    if (v14 < 0)
      goto LABEL_139;
    if (v14)
      return sub_21DC5ABC0(0, v14, 1, a1);
    return result;
  }
  if (v14 >= 0)
    v16 = v14;
  else
    v16 = v14 + 1;
  if (v14 < -1)
    goto LABEL_147;
  v136 = a1;
  v124 = result;
  v131 = v1;
  if (v14 < 2)
  {
    v20 = (char *)MEMORY[0x24BEE4AF8];
    v129 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80));
    v123 = MEMORY[0x24BEE4AF8];
    if (v14 != 1)
    {
      v22 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_105:
      v115 = v20;
      if (v22 >= 2)
      {
        v116 = *v136;
        do
        {
          v117 = v22 - 2;
          if (v22 < 2)
            goto LABEL_134;
          if (!v116)
            goto LABEL_146;
          v118 = *(_QWORD *)&v115[16 * v117 + 32];
          v119 = *(_QWORD *)&v115[16 * v22 + 24];
          v120 = v131;
          sub_21DC5ADF4(v116 + *(_QWORD *)(v130 + 72) * v118, v116 + *(_QWORD *)(v130 + 72) * *(_QWORD *)&v115[16 * v22 + 16], v116 + *(_QWORD *)(v130 + 72) * v119, v129);
          v131 = v120;
          if (v120)
            break;
          if (v119 < v118)
            goto LABEL_135;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v115 = sub_21DC5B7D4((uint64_t)v115);
          if (v117 >= *((_QWORD *)v115 + 2))
            goto LABEL_136;
          v121 = &v115[16 * v117 + 32];
          *(_QWORD *)v121 = v118;
          *((_QWORD *)v121 + 1) = v119;
          v122 = *((_QWORD *)v115 + 2);
          if (v22 > v122)
            goto LABEL_137;
          memmove(&v115[16 * v22 + 16], &v115[16 * v22 + 32], 16 * (v122 - v22));
          *((_QWORD *)v115 + 2) = v122 - 1;
          v22 = v122 - 1;
        }
        while (v122 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v123 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v17 = v16 >> 1;
    v18 = sub_21DC71BB8();
    *(_QWORD *)(v18 + 16) = v17;
    v19 = *(unsigned __int8 *)(v130 + 80);
    v123 = v18;
    v129 = v18 + ((v19 + 32) & ~v19);
  }
  v21 = 0;
  v20 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v23 = v21;
    v24 = v21 + 1;
    if (v21 + 1 >= v14)
    {
      ++v21;
      v25 = v136;
    }
    else
    {
      v25 = v136;
      v26 = *v136;
      v27 = *(_QWORD *)(v130 + 72);
      v28 = *v136 + v27 * v24;
      v128 = v21;
      v29 = v134;
      sub_21DC07CC0(v28, v134, &qword_2553A8368);
      v30 = v135;
      sub_21DC07CC0(v26 + v27 * v128, v135, &qword_2553A8368);
      v31 = *(int *)(v137 + 48);
      v32 = *(double *)(v29 + v31);
      v33 = *(double *)(v30 + v31);
      sub_21DC07C84(v30, &qword_2553A8368);
      v34 = v29;
      v23 = v128;
      sub_21DC07C84(v34, &qword_2553A8368);
      v21 = v23 + 2;
      v132 = v26;
      v139 = v27;
      if (v23 + 2 >= v14)
      {
        v42 = v27;
        if (v32 >= v33)
          goto LABEL_39;
      }
      else
      {
        v125 = v20;
        v133 = v27 * v24;
        v35 = v26;
        v36 = v27 * v21;
        while (1)
        {
          v37 = v14;
          v38 = v21;
          v39 = v134;
          sub_21DC07CC0(v35 + v36, v134, &qword_2553A8368);
          v40 = v135;
          sub_21DC07CC0(v35 + v133, v135, &qword_2553A8368);
          v41 = *(double *)(v39 + *(int *)(v137 + 48)) >= *(double *)(v40 + *(int *)(v137 + 48));
          sub_21DC07C84(v40, &qword_2553A8368);
          sub_21DC07C84(v39, &qword_2553A8368);
          if (v32 < v33 == v41)
            break;
          ++v21;
          v42 = v139;
          v35 += v139;
          v14 = v37;
          if (v37 == v38 + 1)
          {
            v21 = v37;
            v25 = v136;
            v20 = v125;
            v23 = v128;
            if (v32 < v33)
              goto LABEL_26;
            goto LABEL_39;
          }
        }
        v25 = v136;
        v20 = v125;
        v23 = v128;
        v14 = v37;
        v42 = v139;
        if (v32 >= v33)
          goto LABEL_39;
      }
LABEL_26:
      if (v21 < v23)
        goto LABEL_140;
      if (v23 < v21)
      {
        v133 = v14;
        v125 = v20;
        v43 = 0;
        v44 = v42 * (v21 - 1);
        v45 = v21 * v42;
        v46 = v23 * v42;
        do
        {
          if (v23 != v21 + v43 - 1)
          {
            v47 = v132;
            if (!v132)
              goto LABEL_145;
            v48 = v132 + v46;
            sub_21DC60EB4(v132 + v46, v127);
            if (v46 < v44 || v48 >= v47 + v45)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v46 != v44)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            sub_21DC60EB4(v127, v47 + v44);
            v25 = v136;
            v42 = v139;
          }
          ++v23;
          --v43;
          v44 -= v42;
          v45 -= v42;
          v46 += v42;
        }
        while (v23 < v21 + v43);
        v20 = v125;
        v14 = v133;
        v23 = v128;
      }
    }
LABEL_39:
    if (v21 >= v14)
      goto LABEL_57;
    if (__OFSUB__(v21, v23))
      goto LABEL_138;
    if (v21 - v23 >= v124)
      goto LABEL_57;
    if (__OFADD__(v23, v124))
      goto LABEL_141;
    v49 = v23 + v124 >= v14 ? v14 : v23 + v124;
    if (v49 < v23)
      break;
    if (v21 != v49)
    {
      v125 = v20;
      v126 = v49;
      v50 = *(_QWORD *)(v130 + 72);
      v139 = v50 * (v21 - 1);
      v132 = v50;
      v51 = v21 * v50;
      v128 = v23;
      do
      {
        v53 = 0;
        v133 = v21;
        while (1)
        {
          v54 = *v25;
          v55 = v134;
          sub_21DC07CC0(v51 + v53 + *v25, v134, &qword_2553A8368);
          v56 = v139 + v53 + v54;
          v57 = v135;
          sub_21DC07CC0(v56, v135, &qword_2553A8368);
          v58 = *(int *)(v137 + 48);
          v59 = *(double *)(v55 + v58);
          v60 = *(double *)(v57 + v58);
          sub_21DC07C84(v57, &qword_2553A8368);
          sub_21DC07C84(v55, &qword_2553A8368);
          if (v59 >= v60)
            break;
          v61 = *v25;
          if (!*v25)
            goto LABEL_143;
          v62 = v61 + v139 + v53;
          sub_21DC60EB4(v61 + v51 + v53, v138);
          swift_arrayInitWithTakeFrontToBack();
          sub_21DC60EB4(v138, v62);
          v52 = v133;
          v53 -= v132;
          ++v23;
          v25 = v136;
          if (v133 == v23)
            goto LABEL_50;
        }
        v52 = v133;
LABEL_50:
        v21 = v52 + 1;
        v139 += v132;
        v51 += v132;
        v23 = v128;
      }
      while (v21 != v126);
      v21 = v126;
      v20 = v125;
    }
LABEL_57:
    if (v21 < v23)
      goto LABEL_133;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v20 = sub_21DC5B27C(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
    v64 = *((_QWORD *)v20 + 2);
    v63 = *((_QWORD *)v20 + 3);
    v22 = v64 + 1;
    if (v64 >= v63 >> 1)
      v20 = sub_21DC5B27C((char *)(v63 > 1), v64 + 1, 1, v20);
    *((_QWORD *)v20 + 2) = v22;
    v65 = v20 + 32;
    v66 = &v20[16 * v64 + 32];
    *(_QWORD *)v66 = v23;
    *((_QWORD *)v66 + 1) = v21;
    if (v64)
    {
      while (1)
      {
        v67 = v22 - 1;
        if (v22 >= 4)
        {
          v72 = &v65[16 * v22];
          v73 = *((_QWORD *)v72 - 8);
          v74 = *((_QWORD *)v72 - 7);
          v78 = __OFSUB__(v74, v73);
          v75 = v74 - v73;
          if (v78)
            goto LABEL_122;
          v77 = *((_QWORD *)v72 - 6);
          v76 = *((_QWORD *)v72 - 5);
          v78 = __OFSUB__(v76, v77);
          v70 = v76 - v77;
          v71 = v78;
          if (v78)
            goto LABEL_123;
          v79 = v22 - 2;
          v80 = &v65[16 * v22 - 32];
          v82 = *(_QWORD *)v80;
          v81 = *((_QWORD *)v80 + 1);
          v78 = __OFSUB__(v81, v82);
          v83 = v81 - v82;
          if (v78)
            goto LABEL_125;
          v78 = __OFADD__(v70, v83);
          v84 = v70 + v83;
          if (v78)
            goto LABEL_128;
          if (v84 >= v75)
          {
            v102 = &v65[16 * v67];
            v104 = *(_QWORD *)v102;
            v103 = *((_QWORD *)v102 + 1);
            v78 = __OFSUB__(v103, v104);
            v105 = v103 - v104;
            if (v78)
              goto LABEL_132;
            v95 = v70 < v105;
            goto LABEL_94;
          }
        }
        else
        {
          if (v22 != 3)
          {
            v96 = *((_QWORD *)v20 + 4);
            v97 = *((_QWORD *)v20 + 5);
            v78 = __OFSUB__(v97, v96);
            v89 = v97 - v96;
            v90 = v78;
            goto LABEL_88;
          }
          v69 = *((_QWORD *)v20 + 4);
          v68 = *((_QWORD *)v20 + 5);
          v78 = __OFSUB__(v68, v69);
          v70 = v68 - v69;
          v71 = v78;
        }
        if ((v71 & 1) != 0)
          goto LABEL_124;
        v79 = v22 - 2;
        v85 = &v65[16 * v22 - 32];
        v87 = *(_QWORD *)v85;
        v86 = *((_QWORD *)v85 + 1);
        v88 = __OFSUB__(v86, v87);
        v89 = v86 - v87;
        v90 = v88;
        if (v88)
          goto LABEL_127;
        v91 = &v65[16 * v67];
        v93 = *(_QWORD *)v91;
        v92 = *((_QWORD *)v91 + 1);
        v78 = __OFSUB__(v92, v93);
        v94 = v92 - v93;
        if (v78)
          goto LABEL_130;
        if (__OFADD__(v89, v94))
          goto LABEL_131;
        if (v89 + v94 >= v70)
        {
          v95 = v70 < v94;
LABEL_94:
          if (v95)
            v67 = v79;
          goto LABEL_96;
        }
LABEL_88:
        if ((v90 & 1) != 0)
          goto LABEL_126;
        v98 = &v65[16 * v67];
        v100 = *(_QWORD *)v98;
        v99 = *((_QWORD *)v98 + 1);
        v78 = __OFSUB__(v99, v100);
        v101 = v99 - v100;
        if (v78)
          goto LABEL_129;
        if (v101 < v89)
          goto LABEL_14;
LABEL_96:
        v106 = v20;
        v107 = v67 - 1;
        if (v67 - 1 >= v22)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!*v136)
          goto LABEL_144;
        v108 = v21;
        v109 = &v65[16 * v107];
        v110 = *(_QWORD *)v109;
        v111 = &v65[16 * v67];
        v112 = *((_QWORD *)v111 + 1);
        v113 = v131;
        sub_21DC5ADF4(*v136 + *(_QWORD *)(v130 + 72) * *(_QWORD *)v109, *v136 + *(_QWORD *)(v130 + 72) * *(_QWORD *)v111, *v136 + *(_QWORD *)(v130 + 72) * v112, v129);
        v131 = v113;
        if (v113)
          goto LABEL_116;
        if (v112 < v110)
          goto LABEL_119;
        if (v67 > *((_QWORD *)v106 + 2))
          goto LABEL_120;
        *(_QWORD *)v109 = v110;
        *(_QWORD *)&v65[16 * v107 + 8] = v112;
        v114 = *((_QWORD *)v106 + 2);
        if (v67 >= v114)
          goto LABEL_121;
        v20 = v106;
        v22 = v114 - 1;
        memmove(&v65[16 * v67], v111 + 16, 16 * (v114 - 1 - v67));
        *((_QWORD *)v106 + 2) = v114 - 1;
        v95 = v114 > 2;
        v21 = v108;
        if (!v95)
          goto LABEL_14;
      }
    }
    v22 = 1;
LABEL_14:
    v14 = v136[1];
    if (v21 >= v14)
      goto LABEL_105;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  result = sub_21DC71FA8();
  __break(1u);
  return result;
}

uint64_t sub_21DC5ABC0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v31 = a1;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8368);
  v8 = MEMORY[0x24BDAC7A8](v34, v7);
  v35 = (uint64_t)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (char *)&v29 - v12;
  result = MEMORY[0x24BDAC7A8](v11, v14);
  v18 = (char *)&v29 - v17;
  v33 = a3;
  v30 = a2;
  if (a3 != a2)
  {
    v19 = *(_QWORD *)(v16 + 72);
    v37 = v19 * (v33 - 1);
    v32 = v19;
    v36 = v19 * v33;
LABEL_5:
    v20 = 0;
    v21 = v31;
    while (1)
    {
      v22 = *a4;
      sub_21DC07CC0(v36 + v20 + *a4, (uint64_t)v18, &qword_2553A8368);
      sub_21DC07CC0(v37 + v20 + v22, (uint64_t)v13, &qword_2553A8368);
      v23 = *(int *)(v34 + 48);
      v24 = *(double *)&v18[v23];
      v25 = *(double *)&v13[v23];
      sub_21DC07C84((uint64_t)v13, &qword_2553A8368);
      result = sub_21DC07C84((uint64_t)v18, &qword_2553A8368);
      if (v24 >= v25)
      {
LABEL_4:
        v37 += v32;
        v36 += v32;
        if (++v33 == v30)
          return result;
        goto LABEL_5;
      }
      v26 = *a4;
      if (!*a4)
        break;
      v27 = a4;
      v28 = v26 + v37 + v20;
      sub_21DC60EB4(v26 + v36 + v20, v35);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_21DC60EB4(v35, v28);
      v20 -= v32;
      ++v21;
      a4 = v27;
      if (v33 == v21)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_21DC5ADF4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  double v24;
  double v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v29;
  unint64_t v31;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  unint64_t v39;
  uint64_t result;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;

  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8368);
  v9 = MEMORY[0x24BDAC7A8](v44, v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)&v42 - v13;
  v16 = *(_QWORD *)(v15 + 72);
  if (!v16)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v16 == -1)
    goto LABEL_70;
  v17 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v16 == -1)
    goto LABEL_71;
  v18 = (uint64_t)(a2 - a1) / v16;
  v47 = a1;
  v46 = a4;
  v19 = v17 / v16;
  if (v18 >= v17 / v16)
  {
    if ((v19 & 0x8000000000000000) == 0)
    {
      v21 = v19 * v16;
      if (a4 < a2 || a2 + v21 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v31 = a4 + v21;
      v45 = a4 + v21;
      v47 = a2;
      v43 = a1;
      if (v21 >= 1 && a1 < a2)
      {
        v33 = -v16;
        do
        {
          v34 = a3 + v33;
          sub_21DC07CC0(v31 + v33, (uint64_t)v14, &qword_2553A8368);
          v35 = a2 + v33;
          sub_21DC07CC0(a2 + v33, (uint64_t)v11, &qword_2553A8368);
          v36 = *(int *)(v44 + 48);
          v37 = *(double *)&v14[v36];
          v38 = *(double *)&v11[v36];
          sub_21DC07C84((uint64_t)v11, &qword_2553A8368);
          sub_21DC07C84((uint64_t)v14, &qword_2553A8368);
          if (v37 >= v38)
          {
            v39 = v45;
            v45 += v33;
            if (a3 < v39 || v34 >= v39)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v39)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v35 = a2;
          }
          else
          {
            if (a3 < a2 || v34 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v47 += v33;
          }
          v31 = v45;
          if (v45 <= a4)
            break;
          a2 = v35;
          a3 += v33;
        }
        while (v35 > v43);
      }
      goto LABEL_68;
    }
  }
  else if ((v18 & 0x8000000000000000) == 0)
  {
    v20 = v18 * v16;
    if (a4 < a1 || a1 + v20 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v43 = a4 + v20;
    v45 = a4 + v20;
    if (v20 >= 1 && a2 < a3)
    {
      do
      {
        sub_21DC07CC0(a2, (uint64_t)v14, &qword_2553A8368);
        sub_21DC07CC0(a4, (uint64_t)v11, &qword_2553A8368);
        v23 = *(int *)(v44 + 48);
        v24 = *(double *)&v14[v23];
        v25 = *(double *)&v11[v23];
        sub_21DC07C84((uint64_t)v11, &qword_2553A8368);
        sub_21DC07C84((uint64_t)v14, &qword_2553A8368);
        v26 = v47;
        if (v24 >= v25)
        {
          v29 = v46 + v16;
          if (v47 < v46 || v47 >= v29)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 != v46)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v46 = v29;
          v27 = a2;
        }
        else
        {
          v27 = a2 + v16;
          if (v47 < a2 || v47 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 == a2)
          {
            v26 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v47 = v26 + v16;
        a4 = v46;
        if (v46 >= v43)
          break;
        a2 = v27;
      }
      while (v27 < a3);
    }
LABEL_68:
    sub_21DC5B598(&v47, &v46, (uint64_t *)&v45, &qword_2553A8368);
    return 1;
  }
LABEL_72:
  result = sub_21DC72008();
  __break(1u);
  return result;
}

char *sub_21DC5B27C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA480);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_21DC5B378(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_21DC72008();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_21DC5B420(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -40)
  {
    result = (char *)sub_21DC72008();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
      return (char *)memmove(result, v3, 40 * v6);
  }
  return result;
}

char *sub_21DC5B4D8(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_21DC72008();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

uint64_t sub_21DC5B580(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_21DC5B598(a1, a2, a3, (uint64_t *)&unk_2553AA530);
}

uint64_t sub_21DC5B58C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_21DC5B598(a1, a2, a3, &qword_2553A8380);
}

uint64_t sub_21DC5B598(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = *a2;
  v6 = *a3;
  result = __swift_instantiateConcreteTypeFromMangledName(a4);
  v8 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1)
    goto LABEL_14;
  if (v9 / v8 < 0)
  {
LABEL_15:
    result = sub_21DC72008();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
    return swift_arrayInitWithTakeFrontToBack();
  if (v4 != v5)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

uint64_t sub_21DC5B6A4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_21DC5B6C8(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptProtoEvent);
}

uint64_t sub_21DC5B6B0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_21DC5B6C8(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE5A510]);
}

uint64_t sub_21DC5B6BC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_21DC5B6C8(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE587A0]);
}

uint64_t sub_21DC5B6C8(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = *a2;
  v6 = *a3;
  result = a4(0);
  v8 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1)
    goto LABEL_14;
  if (v9 / v8 < 0)
  {
LABEL_15:
    result = sub_21DC72008();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
    return swift_arrayInitWithTakeFrontToBack();
  if (v4 != v5)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_21DC5B7D4(uint64_t a1)
{
  return sub_21DC5B27C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_21DC5B7E8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8500);
  result = sub_21DC71FFC();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v30)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v30)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v10 = v14 + 2;
          if (v14 + 2 >= v30)
            return v8;
          v15 = a1[v10];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v30)
              return v8;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v10 >= v30)
                  return v8;
                v15 = a1[v10];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v10 = v16;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    v17 = 8 * v13;
    v18 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + v17);
    v19 = *(id *)(*(_QWORD *)(v4 + 48) + v17);
    swift_bridgeObjectRetain();
    result = sub_21DC71D5C();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = 8 * v23;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v28) = v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v28) = v18;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_21DC5BA7C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v36;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84D0);
  result = sub_21DC71FFC();
  v8 = result;
  v34 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  v36 = v4;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v34)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v34)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v10 = v14 + 2;
          if (v14 + 2 >= v34)
            return v8;
          v15 = a1[v10];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v34)
              return v8;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v10 >= v34)
                  return v8;
                v15 = a1[v10];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v10 = v16;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    v17 = *(_QWORD *)(v4 + 56);
    v18 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 32 * v13);
    v20 = *v18;
    v19 = v18[1];
    v22 = v18[2];
    v21 = v18[3];
    v23 = *(_QWORD *)(v17 + 8 * v13);
    sub_21DC72134();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_21DC71B04();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21DC71B04();
    swift_bridgeObjectRelease();
    result = sub_21DC72158();
    v24 = -1 << *(_BYTE *)(v8 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v30 = v26 == v29;
        if (v26 == v29)
          v26 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v26);
      }
      while (v31 == -1);
      v27 = __clz(__rbit64(~v31)) + (v26 << 6);
    }
    *(_QWORD *)(v11 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    v32 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 32 * v27);
    *v32 = v20;
    v32[1] = v19;
    v32[2] = v22;
    v32[3] = v21;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v27) = v23;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    v4 = v36;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_21DC5BD6C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v31;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA550);
  result = sub_21DC71FFC();
  v9 = result;
  v31 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= a2)
        return v9;
      v16 = v31[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= a2)
          return v9;
        v16 = v31[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= a2)
            return v9;
          v16 = v31[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= a2)
              return v9;
            v16 = v31[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= a2)
                  return v9;
                v16 = v31[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = 8 * v14;
    v19 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    v20 = *(id *)(*(_QWORD *)(v4 + 48) + v18);
    result = sub_21DC71D5C();
    v21 = -1 << *(_BYTE *)(v9 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(_QWORD *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = 8 * v24;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + v29) = v20;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + v29) = v19;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_21DC5BFE8(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  unint64_t *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v8 = type metadata accessor for EventTypeIdPair();
  v44 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13);
  v43 = (uint64_t)&v40 - v14;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84C0);
  result = sub_21DC71FFC();
  v16 = result;
  v40 = a1;
  v41 = a2;
  if (a2 < 1)
    v17 = 0;
  else
    v17 = *a1;
  v18 = 0;
  v19 = result + 64;
  v42 = v12;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v46 = v18;
      v21 = v20 | (v18 << 6);
    }
    else
    {
      v22 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_40;
      if (v22 >= v41)
        return v16;
      v23 = v40[v22];
      v24 = v18 + 1;
      if (!v23)
      {
        v24 = v18 + 2;
        if (v18 + 2 >= v41)
          return v16;
        v23 = v40[v24];
        if (!v23)
        {
          v24 = v18 + 3;
          if (v18 + 3 >= v41)
            return v16;
          v23 = v40[v24];
          if (!v23)
          {
            v25 = v18 + 4;
            if (v18 + 4 >= v41)
              return v16;
            v23 = v40[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_41;
                if (v24 >= v41)
                  return v16;
                v23 = v40[v24];
                ++v25;
                if (v23)
                  goto LABEL_24;
              }
            }
            v24 = v18 + 4;
          }
        }
      }
LABEL_24:
      v17 = (v23 - 1) & v23;
      v46 = v24;
      v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    v26 = v43;
    v27 = *(_QWORD *)(v44 + 72);
    sub_21DC0C210(a4[6] + v27 * v21, v43, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair);
    v28 = *(_QWORD *)(a4[7] + 8 * v21);
    v29 = v26;
    v30 = (uint64_t)v42;
    sub_21DC13CC0(v29, (uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair);
    sub_21DC72134();
    sub_21DC72140();
    sub_21DC715F4();
    sub_21DC13D04((unint64_t *)&qword_2553AA410, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_21DC71A44();
    result = sub_21DC72158();
    v31 = -1 << *(_BYTE *)(v16 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v19 + 8 * (v32 >> 6))) != 0)
    {
      v34 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v19 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v37 = v33 == v36;
        if (v33 == v36)
          v33 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v19 + 8 * v33);
      }
      while (v38 == -1);
      v34 = __clz(__rbit64(~v38)) + (v33 << 6);
    }
    *(_QWORD *)(v19 + ((v34 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v34;
    result = sub_21DC13CC0(v30, *(_QWORD *)(v16 + 48) + v34 * v27, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair);
    *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v34) = v28;
    ++*(_QWORD *)(v16 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    v18 = v46;
    if (!a3)
      return v16;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_21DC5C368(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v40;
  unint64_t *v41;
  _QWORD *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v41 = a1;
  v47 = sub_21DC715F4();
  v45 = *(_QWORD *)(v47 - 8);
  v8 = MEMORY[0x24BDAC7A8](v47, v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v11);
  v44 = (char *)&v40 - v12;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA510);
  result = sub_21DC71FFC();
  v14 = result;
  v40 = a2;
  if (a2 < 1)
    v15 = 0;
  else
    v15 = *v41;
  v16 = 0;
  v17 = result + 64;
  v42 = a4;
  v43 = v10;
  v18 = v44;
  v19 = v47;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v46 = v16;
      v21 = v20 | (v16 << 6);
    }
    else
    {
      v22 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_40;
      if (v22 >= v40)
        return v14;
      v23 = v41[v22];
      v24 = v16 + 1;
      if (!v23)
      {
        v24 = v16 + 2;
        if (v16 + 2 >= v40)
          return v14;
        v23 = v41[v24];
        if (!v23)
        {
          v24 = v16 + 3;
          if (v16 + 3 >= v40)
            return v14;
          v23 = v41[v24];
          if (!v23)
          {
            v25 = v16 + 4;
            if (v16 + 4 >= v40)
              return v14;
            v23 = v41[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_41;
                if (v24 >= v40)
                  return v14;
                v23 = v41[v24];
                ++v25;
                if (v23)
                  goto LABEL_24;
              }
            }
            v24 = v16 + 4;
          }
        }
      }
LABEL_24:
      v15 = (v23 - 1) & v23;
      v46 = v24;
      v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    v26 = v45;
    v27 = *(_QWORD *)(v45 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v18, a4[6] + v27 * v21, v19);
    v28 = *(_QWORD *)(a4[7] + 8 * v21);
    v29 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    v30 = v43;
    v29(v43, v18, v19);
    sub_21DC13D04((unint64_t *)&qword_2553AA410, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_21DC71A38();
    v31 = -1 << *(_BYTE *)(v14 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v17 + 8 * (v32 >> 6))) != 0)
    {
      v34 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v17 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v37 = v33 == v36;
        if (v33 == v36)
          v33 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v17 + 8 * v33);
      }
      while (v38 == -1);
      v34 = __clz(__rbit64(~v38)) + (v33 << 6);
    }
    *(_QWORD *)(v17 + ((v34 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v34;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v29)(*(_QWORD *)(v14 + 48) + v34 * v27, v30, v47);
    *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v34) = v28;
    ++*(_QWORD *)(v14 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v42;
    v16 = v46;
    if (!a3)
      return v14;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_21DC5C6CC(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v40;
  unint64_t *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v8 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v45 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13);
  v44 = (uint64_t)&v40 - v14;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA440);
  result = sub_21DC71FFC();
  v16 = result;
  v41 = a1;
  v42 = a2;
  if (a2 < 1)
    v17 = 0;
  else
    v17 = *a1;
  v18 = 0;
  v19 = result + 64;
  v43 = v12;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v46 = v18;
      v21 = v20 | (v18 << 6);
    }
    else
    {
      v22 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_40;
      if (v22 >= v42)
        return v16;
      v23 = v41[v22];
      v24 = v18 + 1;
      if (!v23)
      {
        v24 = v18 + 2;
        if (v18 + 2 >= v42)
          return v16;
        v23 = v41[v24];
        if (!v23)
        {
          v24 = v18 + 3;
          if (v18 + 3 >= v42)
            return v16;
          v23 = v41[v24];
          if (!v23)
          {
            v25 = v18 + 4;
            if (v18 + 4 >= v42)
              return v16;
            v23 = v41[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_41;
                if (v24 >= v42)
                  return v16;
                v23 = v41[v24];
                ++v25;
                if (v23)
                  goto LABEL_24;
              }
            }
            v24 = v18 + 4;
          }
        }
      }
LABEL_24:
      v17 = (v23 - 1) & v23;
      v46 = v24;
      v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    v26 = v44;
    v27 = *(_QWORD *)(v45 + 72);
    sub_21DC0C210(a4[6] + v27 * v21, v44, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    v28 = *(_QWORD *)(a4[7] + 8 * v21);
    v29 = v26;
    v30 = (uint64_t)v43;
    sub_21DC13CC0(v29, (uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    sub_21DC72134();
    sub_21DC715F4();
    sub_21DC13D04((unint64_t *)&qword_2553AA410, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_21DC71A44();
    result = sub_21DC72158();
    v31 = -1 << *(_BYTE *)(v16 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v19 + 8 * (v32 >> 6))) != 0)
    {
      v34 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v19 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v37 = v33 == v36;
        if (v33 == v36)
          v33 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v19 + 8 * v33);
      }
      while (v38 == -1);
      v34 = __clz(__rbit64(~v38)) + (v33 << 6);
    }
    *(_QWORD *)(v19 + ((v34 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v34;
    result = sub_21DC13CC0(v30, *(_QWORD *)(v16 + 48) + v34 * v27, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v34) = v28;
    ++*(_QWORD *)(v16 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    v18 = v46;
    if (!a3)
      return v16;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_21DC5CA38(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
    goto LABEL_7;
  if (v6 < 0)
    v7 = *v2;
  else
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
  result = sub_21DC71E28();
  if (!__OFADD__(result, 1))
  {
    *v3 = sub_21DC5CAD8(v7, result + 1);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v3;
    *v3 = 0x8000000000000000;
    sub_21DC3CD38(a1, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v10;
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC5CAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84A8);
    v2 = sub_21DC71FF0();
    v18 = v2;
    sub_21DC71F78();
    v3 = sub_21DC71F9C();
    if (v3)
    {
      v4 = v3;
      sub_21DC71804();
      do
      {
        swift_dynamicCast();
        swift_dynamicCast();
        v2 = v18;
        v12 = *(_QWORD *)(v18 + 16);
        if (*(_QWORD *)(v18 + 24) <= v12)
        {
          sub_21DC1153C(v12 + 1, 1);
          v2 = v18;
        }
        result = sub_21DC71D5C();
        v6 = v2 + 64;
        v7 = -1 << *(_BYTE *)(v2 + 32);
        v8 = result & ~v7;
        v9 = v8 >> 6;
        if (((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          v10 = __clz(__rbit64((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v13 = 0;
          v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v15 = v9 == v14;
            if (v9 == v14)
              v9 = 0;
            v13 |= v15;
            v16 = *(_QWORD *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(_QWORD *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v11 = 8 * v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v11) = v17;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v11) = v4;
        ++*(_QWORD *)(v2 + 16);
        v4 = sub_21DC71F9C();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B00];
  }
  return v2;
}

unint64_t sub_21DC5CCF8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a7[(result >> 6) + 8] |= 1 << result;
  v7 = (_QWORD *)(a7[6] + 32 * result);
  *v7 = a2;
  v7[1] = a3;
  v7[2] = a4;
  v7[3] = a5;
  *(_QWORD *)(a7[7] + 8 * result) = a6;
  v8 = a7[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a7[2] = v10;
  return result;
}

unint64_t sub_21DC5CD44(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, double a7)
{
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v7 = (_QWORD *)(a6[6] + 32 * result);
  *v7 = a2;
  v7[1] = a3;
  v7[2] = a4;
  v7[3] = a5;
  *(double *)(a6[7] + 8 * result) = a7;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

unint64_t sub_21DC5CD90(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10)
{
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a10[(result >> 6) + 8] |= 1 << result;
  v10 = (_QWORD *)(a10[6] + 32 * result);
  *v10 = a2;
  v10[1] = a3;
  v10[2] = a4;
  v10[3] = a5;
  v11 = (_QWORD *)(a10[7] + 32 * result);
  *v11 = a6;
  v11[1] = a7;
  v11[2] = a8;
  v11[3] = a9;
  v12 = a10[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a10[2] = v14;
  return result;
}

unint64_t sub_21DC5CDEC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_21DC5CE34(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4, double a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a4[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(double *)(a4[7] + 8 * result) = a5;
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

_OWORD *sub_21DC5CE7C(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_21DC13D80(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

unint64_t sub_21DC5CEF8(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

unint64_t sub_21DC5CF40(unint64_t result, uint64_t a2, _QWORD *a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a3[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a3[6] + v4) = a2;
  *(double *)(a3[7] + v4) = a4;
  v5 = a3[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a3[2] = v7;
  return result;
}

uint64_t sub_21DC5CF88(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_21DC5D0D0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair);
}

uint64_t sub_21DC5CF94(unint64_t a1, uint64_t a2, _QWORD *a3, double a4)
{
  return sub_21DC5D174(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair, a4);
}

uint64_t sub_21DC5CFA0(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_21DC715F4();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_21DC5D038(unint64_t a1, uint64_t a2, _QWORD *a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a3[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a3[6];
  v9 = sub_21DC715F4();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(double *)(a3[7] + 8 * a1) = a4;
  v11 = a3[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a3[2] = v13;
  return result;
}

uint64_t sub_21DC5D0D0(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a4[6];
  v11 = a5(0);
  result = sub_21DC13CC0(a2, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a5);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_21DC5D168(unint64_t a1, uint64_t a2, _QWORD *a3, double a4)
{
  return sub_21DC5D174(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID, a4);
}

uint64_t sub_21DC5D174(unint64_t a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(_QWORD), double a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a3[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a3[6];
  v11 = a4(0);
  result = sub_21DC13CC0(a2, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a4);
  *(double *)(a3[7] + 8 * a1) = a5;
  v13 = a3[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a3[2] = v15;
  return result;
}

uint64_t sub_21DC5D214(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v7 = a4[6];
  v8 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for SiriConversationPublisher.GraphUUID() - 8) + 72) * a1;
  sub_21DC13CC0(a2, v7 + v8, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  result = sub_21DC13CC0(a3, a4[7] + v8, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

_OWORD *sub_21DC5D2C0(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_21DC13D80(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

void *sub_21DC5D328()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84F0);
  v2 = *v0;
  v3 = sub_21DC71FD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)sub_21DC13D90(v17);
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21DC5D4C8()
{
  return sub_21DC5DF9C((uint64_t *)&unk_2553AA5F0);
}

void *sub_21DC5D4D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84D0);
  v2 = *v0;
  v3 = sub_21DC71FD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 32 * v15);
    v18 = v17[1];
    v19 = v17[2];
    v20 = v17[3];
    v21 = 8 * v15;
    v22 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v21);
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = *v17;
    v23[1] = v18;
    v23[2] = v19;
    v23[3] = v20;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21DC5D690()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA5A0);
  v2 = *v0;
  v3 = sub_21DC71FD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      v9 = v29 + 1;
      if (v29 + 1 >= v13)
        goto LABEL_26;
      v30 = *(_QWORD *)(v6 + 8 * v9);
      if (!v30)
        break;
    }
LABEL_25:
    v12 = (v30 - 1) & v30;
    v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = v17[2];
    v21 = v17[3];
    v22 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v23 = *v22;
    v24 = v22[1];
    v25 = v22[2];
    v26 = v22[3];
    v27 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v27 = v19;
    v27[1] = v18;
    v27[2] = v20;
    v27[3] = v21;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v28 = v23;
    v28[1] = v24;
    v28[2] = v25;
    v28[3] = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v31 = v29 + 2;
  if (v31 >= v13)
    goto LABEL_26;
  v30 = *(_QWORD *)(v6 + 8 * v31);
  if (v30)
  {
    v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v9);
    ++v31;
    if (v30)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21DC5D870()
{
  return sub_21DC5D87C(&qword_2553AA5B0);
}

void *sub_21DC5D87C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_21DC71FD8();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v25 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v14)
      goto LABEL_26;
    v26 = *(_QWORD *)(v7 + 8 * v25);
    ++v10;
    if (!v26)
    {
      v10 = v25 + 1;
      if (v25 + 1 >= v14)
        goto LABEL_26;
      v26 = *(_QWORD *)(v7 + 8 * v10);
      if (!v26)
        break;
    }
LABEL_25:
    v13 = (v26 - 1) & v26;
    v16 = __clz(__rbit64(v26)) + (v10 << 6);
LABEL_12:
    v17 = 32 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 32 * v16);
    v19 = v18[1];
    v20 = v18[2];
    v21 = v18[3];
    v22 = 8 * v16;
    v23 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v22);
    v24 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v24 = *v18;
    v24[1] = v19;
    v24[2] = v20;
    v24[3] = v21;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v14)
    goto LABEL_26;
  v26 = *(_QWORD *)(v7 + 8 * v27);
  if (v26)
  {
    v10 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v26 = *(_QWORD *)(v7 + 8 * v10);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21DC5DA40()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84C8);
  v2 = *v0;
  v3 = sub_21DC71FD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21DC5DBEC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA590);
  v2 = *v0;
  v3 = sub_21DC71FD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21DC5DDA0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA5E0);
  v2 = *v0;
  v3 = sub_21DC71FD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_21DC0C2D4(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_21DC13D44(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_21DC13D80(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21DC5DF84()
{
  return sub_21DC5E910(&qword_2553A8500);
}

void *sub_21DC5DF90()
{
  return sub_21DC5DF9C((uint64_t *)&unk_2553AA600);
}

void *sub_21DC5DF9C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_21DC71FD8();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_21DC5E134()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA550);
  v2 = *v0;
  v3 = sub_21DC71FD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_21DC5E2D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84A8);
  v2 = *v0;
  v3 = sub_21DC71FD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21DC5E478()
{
  return sub_21DC5E910((uint64_t *)&unk_2553AA560);
}

void *sub_21DC5E484()
{
  return sub_21DC5EAC4((uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair, &qword_2553A84C0);
}

void *sub_21DC5E498()
{
  return sub_21DC5EF48((uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair, (uint64_t *)&unk_2553AA540);
}

void *sub_21DC5E4AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *result;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v1 = v0;
  v2 = sub_21DC715F4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA510);
  v7 = *v0;
  v8 = sub_21DC71FD8();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v9;
    return result;
  }
  v26 = v1;
  result = (void *)(v8 + 64);
  v11 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11)
    result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  v27 = v7 + 64;
  v13 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v14 = 1 << *(_BYTE *)(v7 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v7 + 64);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v17)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v13;
    if (!v24)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v17)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v13);
      if (!v24)
        break;
    }
LABEL_25:
    v16 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(_QWORD *)(v7 + 48) + v20, v2);
    v21 = 8 * v19;
    v22 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + v21);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v20, v6, v2);
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + v21) = v22;
  }
  v25 = v23 + 2;
  if (v25 >= v17)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v13 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v13 >= v17)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v13);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_21DC5E6E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int64_t v27;

  v1 = sub_21DC715F4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84B8);
  v25 = v0;
  v6 = *v0;
  v7 = sub_21DC71FD8();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v25 = v8;
    return result;
  }
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v26 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v27 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v27)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v27)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v2 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v5, *(_QWORD *)(v6 + 48) + v18, v1);
    v19 = 8 * v17;
    v20 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v8 + 48) + v18, v5, v1);
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v27)
    goto LABEL_26;
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v27)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21DC5E910(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_21DC71FD8();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v19;
    v20 = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21DC5EAB0()
{
  return sub_21DC5EAC4((uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID, &qword_2553AA440);
}

void *sub_21DC5EAC4(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *result;
  uint64_t v14;
  unint64_t v15;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v5 = v2;
  v6 = a1(0);
  v31 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v30 - v8;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v10 = *v2;
  v11 = sub_21DC71FD8();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v5 = v12;
    return result;
  }
  v30 = v5;
  result = (void *)(v11 + 64);
  v14 = v10 + 64;
  v15 = (unint64_t)((1 << *(_BYTE *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 64 + 8 * v15)
    result = memmove(result, (const void *)(v10 + 64), 8 * v15);
  v17 = 0;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v10 + 16);
  v18 = 1 << *(_BYTE *)(v10 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & *(_QWORD *)(v10 + 64);
  v21 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      v22 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v23 = v22 | (v17 << 6);
      goto LABEL_12;
    }
    v27 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v27 >= v21)
      goto LABEL_26;
    v28 = *(_QWORD *)(v14 + 8 * v27);
    ++v17;
    if (!v28)
    {
      v17 = v27 + 1;
      if (v27 + 1 >= v21)
        goto LABEL_26;
      v28 = *(_QWORD *)(v14 + 8 * v17);
      if (!v28)
        break;
    }
LABEL_25:
    v20 = (v28 - 1) & v28;
    v23 = __clz(__rbit64(v28)) + (v17 << 6);
LABEL_12:
    v24 = *(_QWORD *)(v31 + 72) * v23;
    sub_21DC0C210(*(_QWORD *)(v10 + 48) + v24, (uint64_t)v9, a1);
    v25 = 8 * v23;
    v26 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + v25);
    result = (void *)sub_21DC13CC0((uint64_t)v9, *(_QWORD *)(v12 + 48) + v24, a1);
    *(_QWORD *)(*(_QWORD *)(v12 + 56) + v25) = v26;
  }
  v29 = v27 + 2;
  if (v29 >= v21)
  {
LABEL_26:
    result = (void *)swift_release();
    v5 = v30;
    goto LABEL_28;
  }
  v28 = *(_QWORD *)(v14 + 8 * v29);
  if (v28)
  {
    v17 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v17 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v17 >= v21)
      goto LABEL_26;
    v28 = *(_QWORD *)(v14 + 8 * v17);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_21DC5ECEC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *result;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v28 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = (char *)&v27 - v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA450);
  v10 = *v0;
  v11 = sub_21DC71FD8();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
  {
    result = (void *)swift_release();
LABEL_25:
    *v1 = v12;
    return result;
  }
  v27 = v1;
  result = (void *)(v11 + 64);
  v14 = v10 + 64;
  v15 = (unint64_t)((1 << *(_BYTE *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v14 + 8 * v15)
    result = memmove(result, (const void *)(v10 + 64), 8 * v15);
  v16 = 0;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v10 + 16);
  v17 = 1 << *(_BYTE *)(v10 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v10 + 64);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_9;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v20)
      goto LABEL_23;
    v25 = *(_QWORD *)(v14 + 8 * v24);
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_23;
      v25 = *(_QWORD *)(v14 + 8 * v16);
      if (!v25)
        break;
    }
LABEL_22:
    v19 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_9:
    v23 = *(_QWORD *)(v28 + 72) * v22;
    sub_21DC0C210(*(_QWORD *)(v10 + 48) + v23, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    sub_21DC0C210(*(_QWORD *)(v10 + 56) + v23, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    sub_21DC13CC0((uint64_t)v9, *(_QWORD *)(v12 + 48) + v23, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    result = (void *)sub_21DC13CC0((uint64_t)v6, *(_QWORD *)(v12 + 56) + v23, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
  }
  v26 = v24 + 2;
  if (v26 >= v20)
  {
LABEL_23:
    result = (void *)swift_release();
    v1 = v27;
    goto LABEL_25;
  }
  v25 = *(_QWORD *)(v14 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v20)
      goto LABEL_23;
    v25 = *(_QWORD *)(v14 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_21DC5EF48(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *result;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  v5 = v2;
  v6 = a1(0);
  v32 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v29 - v8;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v10 = *v2;
  v11 = sub_21DC71FD8();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v5 = v12;
    return result;
  }
  v30 = v5;
  result = (void *)(v11 + 64);
  v14 = (unint64_t)((1 << *(_BYTE *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 64 + 8 * v14)
    result = memmove(result, (const void *)(v10 + 64), 8 * v14);
  v31 = v10 + 64;
  v16 = 0;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v10 + 16);
  v17 = 1 << *(_BYTE *)(v10 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v10 + 64);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    v26 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v20)
      goto LABEL_26;
    v27 = *(_QWORD *)(v31 + 8 * v26);
    ++v16;
    if (!v27)
    {
      v16 = v26 + 1;
      if (v26 + 1 >= v20)
        goto LABEL_26;
      v27 = *(_QWORD *)(v31 + 8 * v16);
      if (!v27)
        break;
    }
LABEL_25:
    v19 = (v27 - 1) & v27;
    v22 = __clz(__rbit64(v27)) + (v16 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v32 + 72) * v22;
    sub_21DC0C210(*(_QWORD *)(v10 + 48) + v23, (uint64_t)v9, a1);
    v24 = 8 * v22;
    v25 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v22);
    sub_21DC13CC0((uint64_t)v9, *(_QWORD *)(v12 + 48) + v23, a1);
    *(_QWORD *)(*(_QWORD *)(v12 + 56) + v24) = v25;
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v20)
  {
LABEL_26:
    result = (void *)swift_release();
    v5 = v30;
    goto LABEL_28;
  }
  v27 = *(_QWORD *)(v31 + 8 * v28);
  if (v27)
  {
    v16 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v16 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v16 >= v20)
      goto LABEL_26;
    v27 = *(_QWORD *)(v31 + 8 * v16);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_21DC5F178()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A84E8);
  v2 = *v0;
  v3 = sub_21DC71FD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_21DC13D44(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_21DC13D80(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_21DC5F35C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_21DC5F5A8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for SiriTurn, (unint64_t *)&unk_2553AA470, &qword_2553AA468, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_21DC0BCCC);
}

uint64_t sub_21DC5F380(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_21DC60F34(&qword_2553AA528, &qword_2553AA520);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA520);
          v12 = sub_21DC0BD24(v16, i, a3);
          v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for TimestampedOrderedEvent();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC5F584(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_21DC5F5A8(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x24BE947E8], &qword_2553AA5D8, &qword_2553AA5D0, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_21DC0BD78);
}

uint64_t sub_21DC5F5A8(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  void (*v22)(_BYTE *, _QWORD);
  id *v23;
  id v24;
  uint64_t result;
  _BYTE v26[32];

  v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    v18 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        v19 = sub_21DC60F34(a5, a6);
        swift_bridgeObjectRetain();
        for (i = 0; i != v15; ++i)
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName(a6);
          v22 = (void (*)(_BYTE *, _QWORD))a7(v26, i, a3, v21, v19);
          v24 = *v23;
          v22(v26, 0);
          *(_QWORD *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_21DC72008();
  __break(1u);
  return result;
}

void sub_21DC5F7B0()
{
  JUMPOUT(0x22079D388);
}

uint64_t sub_21DC5F7C4(_QWORD *a1)
{
  return sub_21DC4BED0(0, a1[2], 0, a1);
}

uint64_t sub_21DC5F7D8(_QWORD *a1)
{
  return sub_21DC4C070(0, a1[2], 0, a1);
}

uint64_t sub_21DC5F7EC(_QWORD *a1)
{
  return sub_21DC4C1F8(0, a1[2], 0, a1);
}

uint64_t sub_21DC5F800(_QWORD *a1)
{
  return sub_21DC4C20C(0, a1[2], 0, a1);
}

uint64_t sub_21DC5F814(_QWORD *a1)
{
  return sub_21DC4C3C0(0, a1[2], 0, a1);
}

uint64_t sub_21DC5F828(_QWORD *a1)
{
  return sub_21DC4C5B4(0, a1[2], 0, a1);
}

uint64_t sub_21DC5F83C(_QWORD *a1)
{
  return sub_21DC4C5C8(0, a1[2], 0, a1);
}

uint64_t sub_21DC5F850(_QWORD *a1)
{
  return sub_21DC4C5DC(0, a1[2], 0, a1);
}

uint64_t sub_21DC5F864(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_21DC5F908(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_21DC5F9EC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  id v15;
  void *v16;

  v6 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_21DC71E10() == *(_DWORD *)(a4 + 36))
      {
        sub_21DC71E1C();
        sub_21DC71804();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v4 = v16;
        swift_unknownObjectRelease();
        v8 = sub_21DC71D5C();
        v9 = -1 << *(_BYTE *)(a4 + 32);
        v6 = v8 & ~v9;
        if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
        {
          v10 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          v11 = sub_21DC71D68();

          if ((v11 & 1) == 0)
          {
            v12 = ~v9;
            do
            {
              v6 = (v6 + 1) & v12;
              if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
                goto LABEL_24;
              v13 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
              v14 = sub_21DC71D68();

            }
            while ((v14 & 1) == 0);
          }

LABEL_20:
          v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v7 = a4;
  else
    v7 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x22079D16C](a1, a2, v7);
  sub_21DC71804();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_21DC5FC34(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_21DC5FCBC(void **a1, uint64_t a2, void **a3)
{
  return sub_21DC58670(*a1, a2, *a3);
}

uint64_t sub_21DC5FCD8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21DC5FD14(unint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = a1;
  v27 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_25;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v21 = v3;
      v5 = 0;
      v6 = v3 & 0xC000000000000001;
      v25 = v3 + 32;
      v26 = v3 & 0xFFFFFFFFFFFFFF8;
      v23 = v4;
      v24 = a2;
      v22 = v3 & 0xC000000000000001;
      while (v6)
      {
        v7 = (id)MEMORY[0x22079D208](v5, v21);
LABEL_10:
        v8 = v7;
        if (__OFADD__(v5++, 1))
          goto LABEL_24;
        v10 = *a2;
        if ((*a2 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v3 = v8;
          v11 = sub_21DC71E58();
          swift_bridgeObjectRelease();

          if ((v11 & 1) != 0)
          {

            goto LABEL_6;
          }
        }
        else if (*(_QWORD *)(v10 + 16))
        {
          swift_bridgeObjectRetain();
          v12 = sub_21DC71D5C();
          v13 = -1 << *(_BYTE *)(v10 + 32);
          v14 = v12 & ~v13;
          if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
          {
            v3 = sub_21DC71804();
            v15 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v14);
            v16 = sub_21DC71D68();

            if ((v16 & 1) != 0)
            {
LABEL_20:

              swift_bridgeObjectRelease();
              v4 = v23;
              a2 = v24;
              v6 = v22;
              goto LABEL_6;
            }
            v17 = ~v13;
            while (1)
            {
              v14 = (v14 + 1) & v17;
              if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
                break;
              v18 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v14);
              v19 = sub_21DC71D68();

              if ((v19 & 1) != 0)
                goto LABEL_20;
            }
          }
          swift_bridgeObjectRelease();
          v4 = v23;
          a2 = v24;
          v6 = v22;
        }
        sub_21DC71F00();
        sub_21DC71F30();
        sub_21DC71F3C();
        v3 = (uint64_t)&v27;
        sub_21DC71F0C();
LABEL_6:
        if (v5 == v4)
          return v27;
      }
      if (v5 < *(_QWORD *)(v26 + 16))
        break;
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      v4 = sub_21DC71FCC();
      if (!v4)
        return MEMORY[0x24BEE4AF8];
    }
    v7 = *(id *)(v25 + 8 * v5);
    goto LABEL_10;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_21DC5FF84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v10 = a2;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = (uint64_t *)(a1 + 56);
    do
    {
      v4 = *(v3 - 3);
      v5 = *(v3 - 2);
      v6 = *(v3 - 1);
      v7 = *v3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_21DC63F78(&v9, v4, v5, v6, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 += 4;
      --v2;
    }
    while (v2);
    return v10;
  }
  return a2;
}

uint64_t sub_21DC60024(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v13 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_13;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_21DC71FCC())
  {
    for (i = 4; ; ++i)
    {
      v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x22079D208](i - 4, a1) : *(id *)(a1 + 8 * i);
      v8 = v7;
      v9 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v10 = sub_21DC50C60(v7, a2);
      if (v2)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }
      v11 = v10;

      sub_21DC53010(v11, (unint64_t *)MEMORY[0x24BE94860], &qword_2553AA578, &qword_2553AA570, (uint64_t *)sub_21DC0BCCC);
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_21DC60180(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t (*v17)();
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)();
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int64_t v26;
  int64_t v27;
  char isUniquelyReferenced_nonNull_native;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v3 = v2;
  v43 = a2;
  v45 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v5 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45, v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA430);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v14 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v38 = a1;
    v39 = v14;
    v15 = a1 + v14;
    v44 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain();
    v16 = MEMORY[0x24BEE4AF8];
    v17 = type metadata accessor for SiriConversationPublisher.GraphUUID;
    v41 = v5;
    v42 = v12;
    while (1)
    {
      sub_21DC0C210(v15, (uint64_t)v12, (uint64_t (*)(_QWORD))v17);
      v19 = v45;
      v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v40(v12, 0, 1, v45);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v19) == 1)
        break;
      sub_21DC13CC0((uint64_t)v12, (uint64_t)v8, (uint64_t (*)(_QWORD))v17);
      v20 = sub_21DC50EF4((uint64_t)v8, v43);
      if (v3)
      {
        sub_21DC5FCD8((uint64_t)v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v16;
      }
      v21 = v20;
      v46 = v15;
      v22 = v17;
      v23 = v13;
      v24 = v8;
      sub_21DC5FCD8((uint64_t)v8);
      v25 = *(_QWORD *)(v21 + 16);
      v26 = *(_QWORD *)(v16 + 16);
      v27 = v26 + v25;
      if (__OFADD__(v26, v25))
      {
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        swift_release();
        result = sub_21DC72008();
        __break(1u);
        return result;
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0 || v27 > *(_QWORD *)(v16 + 24) >> 1)
      {
        if (v26 <= v27)
          v29 = v26 + v25;
        else
          v29 = v26;
        v16 = sub_21DC153E0(isUniquelyReferenced_nonNull_native, v29, 1, v16);
      }
      v8 = v24;
      v30 = v23;
      if (*(_QWORD *)(v21 + 16))
      {
        v31 = *(_QWORD *)(v16 + 16);
        if ((*(_QWORD *)(v16 + 24) >> 1) - v31 < v25)
          goto LABEL_29;
        v17 = v22;
        v32 = v16 + v39 + v31 * v44;
        if (v21 + v39 < v32 + v25 * v44 && v32 < v21 + v39 + v25 * v44)
          goto LABEL_31;
        swift_arrayInitWithCopy();
        v18 = v46;
        if (v25)
        {
          v33 = *(_QWORD *)(v16 + 16);
          v34 = __OFADD__(v33, v25);
          v35 = v33 + v25;
          if (v34)
            goto LABEL_30;
          *(_QWORD *)(v16 + 16) = v35;
        }
      }
      else
      {
        v17 = v22;
        v18 = v46;
        if (v25)
          goto LABEL_28;
      }
      swift_bridgeObjectRelease();
      v15 = v18 + v44;
      v13 = v30 - 1;
      v3 = 0;
      v5 = v41;
      v12 = v42;
      if (!v13)
      {
        v40(v42, 1, 1, v45);
        break;
      }
    }
  }
  else
  {
    v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain();
    v16 = MEMORY[0x24BEE4AF8];
    v36(v12, 1, 1, v45);
  }
  swift_bridgeObjectRelease();
  return v16;
}

unint64_t sub_21DC604D0(unint64_t result, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t i;
  void *v5;
  void **v6;
  void *v7;
  id v8;
  uint64_t v9;

  v2 = result;
  v9 = a2;
  if (!(result >> 62))
  {
    v3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
    return v9;
  }
  result = sub_21DC71FCC();
  v3 = result;
  if (!result)
    return v9;
LABEL_3:
  if (v3 >= 1)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v3; ++i)
      {
        v5 = (void *)MEMORY[0x22079D208](i, v2);
        sub_21DC63CA4(&v8, v5);

      }
    }
    else
    {
      v6 = (void **)(v2 + 32);
      do
      {
        v7 = *v6++;
        sub_21DC63CA4(&v8, v7);

        --v3;
      }
      while (v3);
    }
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC605AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;

  v4 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v21 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA430);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a2;
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v18 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v21 = *(_QWORD *)(v5 + 72);
    while (1)
    {
      sub_21DC0C210(v18, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v19(v16, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v16, 1, v4) == 1)
        break;
      sub_21DC13CC0((uint64_t)v16, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      sub_21DC643F0((uint64_t)v12, (uint64_t)v9);
      sub_21DC5FCD8((uint64_t)v12);
      v18 += v21;
      if (!--v17)
        goto LABEL_7;
    }
  }
  else
  {
    v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
LABEL_7:
    v19(v16, 1, 1, v4);
  }
  return v22;
}

uint64_t sub_21DC60748(uint64_t a1)
{
  uint64_t v1;

  return sub_21DC58890(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_21DC60760(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  char v14;
  void (*v15)(char *, uint64_t);
  int v16;
  uint64_t v18;

  v4 = sub_21DC715F4();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v18 - v11;
  v13 = sub_21DC717D4();
  if (v13 == sub_21DC717D4())
  {
    sub_21DC717F8();
    sub_21DC717F8();
    v14 = MEMORY[0x22079C8F0](v12, v9);
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v9, v4);
    v15(v12, v4);
  }
  else
  {
    v16 = sub_21DC717D4();
    v14 = v16 < (int)sub_21DC717D4();
  }
  if ((v14 & 1) != 0)
    return a2;
  else
    return a1;
}

id sub_21DC60878(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v9;

  *(_QWORD *)&v1[OBJC_IVAR____TtCC26AIMLInstrumentationStreams25SiriConversationPublisher26SiriConversationSubscriber_lastReceivedTimestamp] = 0;
  v3 = OBJC_IVAR____TtCC26AIMLInstrumentationStreams25SiriConversationPublisher26SiriConversationSubscriber_graphBuilder;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA490);
  v4 = (_QWORD *)swift_allocObject();
  v5 = v1;
  v6 = MEMORY[0x24BEE4AF8];
  v4[2] = sub_21DC2AB50(MEMORY[0x24BEE4AF8]);
  v4[3] = sub_21DC2AD08(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA498);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_21DC2B068(v6);
  v4[4] = v7;
  v4[5] = sub_21DC2AEC0(v6);
  *(_QWORD *)&v1[v3] = v4;
  v5[OBJC_IVAR____TtCC26AIMLInstrumentationStreams25SiriConversationPublisher26SiriConversationSubscriber_upstreamFinished] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtCC26AIMLInstrumentationStreams25SiriConversationPublisher26SiriConversationSubscriber_downstream] = a1;
  swift_unknownObjectRetain();

  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for SiriConversationPublisher.SiriConversationSubscriber();
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t sub_21DC60984(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  id v4;
  void *v5;
  id v6;
  void *v7;
  objc_class *v8;
  char *v9;
  id v10;
  id v11;
  objc_super v12;
  void *v13;
  id v14;
  uint64_t v15;

  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  result = sub_21DC71FCC();
  if (!result)
    goto LABEL_12;
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x22079D208](0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v4 = *(id *)(a1 + 32);
  }
  v5 = v4;
  swift_bridgeObjectRelease();
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A8930);
  v14 = v5;
  v6 = v5;
  if ((swift_dynamicCast() & 1) == 0)
  {

    return 0;
  }
  v7 = v13;
  v8 = (objc_class *)type metadata accessor for SiriConversationPublisher();
  v9 = (char *)objc_allocWithZone(v8);
  *(_QWORD *)&v9[OBJC_IVAR____TtC26AIMLInstrumentationStreams25SiriConversationPublisher_inner] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC26AIMLInstrumentationStreams25SiriConversationPublisher_upstream] = v7;
  v12.receiver = v9;
  v12.super_class = v8;
  v10 = v7;
  v11 = objc_msgSendSuper2(&v12, sel_init);
  v15 = (uint64_t)v8;
  v14 = v11;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA500);
  if (swift_dynamicCast())
    return (uint64_t)v13;
  else
    return 0;
}

uint64_t sub_21DC60B1C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, double))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;

  v25 = a2;
  v26 = a1;
  v6 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v7 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  v13 = *(_QWORD *)(a3 + 64);
  v27 = 0;
  v28 = a3 + 64;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v29 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_5;
    }
    v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v20 >= v29)
      return sub_21DC5C6CC(v26, v25, v27, (_QWORD *)a3);
    v21 = *(_QWORD *)(v28 + 8 * v20);
    ++v12;
    if (!v21)
    {
      v12 = v20 + 1;
      if (v20 + 1 >= v29)
        return sub_21DC5C6CC(v26, v25, v27, (_QWORD *)a3);
      v21 = *(_QWORD *)(v28 + 8 * v12);
      if (!v21)
      {
        v12 = v20 + 2;
        if (v20 + 2 >= v29)
          return sub_21DC5C6CC(v26, v25, v27, (_QWORD *)a3);
        v21 = *(_QWORD *)(v28 + 8 * v12);
        if (!v21)
          break;
      }
    }
LABEL_20:
    v16 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_5:
    sub_21DC0C210(*(_QWORD *)(a3 + 48) + *(_QWORD *)(v7 + 72) * v18, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    v19 = a4(v11, *(double *)(*(_QWORD *)(a3 + 56) + 8 * v18));
    result = sub_21DC5FCD8((uint64_t)v11);
    if ((v19 & 1) != 0)
    {
      *(unint64_t *)((char *)v26 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      if (__OFADD__(v27++, 1))
      {
        __break(1u);
        return sub_21DC5C6CC(v26, v25, v27, (_QWORD *)a3);
      }
    }
  }
  v22 = v20 + 3;
  if (v22 >= v29)
    return sub_21DC5C6CC(v26, v25, v27, (_QWORD *)a3);
  v21 = *(_QWORD *)(v28 + 8 * v22);
  if (v21)
  {
    v12 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    v12 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v12 >= v29)
      return sub_21DC5C6CC(v26, v25, v27, (_QWORD *)a3);
    v21 = *(_QWORD *)(v28 + 8 * v12);
    ++v22;
    if (v21)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_21DC60D44(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, double), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x24BDAC8D0];
  v7 = *(_BYTE *)(isStackAllocationSafe + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, a2);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_21DC60B1C((_QWORD *)((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, v6, a2);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_21DC60B1C((unint64_t *)v11, v8, v6, a2);
    MEMORY[0x22079DA24](v11, -1, -1);
  }
  return a3;
}

uint64_t sub_21DC60EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8368);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21DC60EFC(void **a1)
{
  uint64_t v1;

  return sub_21DC58670(*a1, *(_QWORD *)(v1 + 16), **(void ***)(v1 + 24));
}

uint64_t sub_21DC60F1C(uint64_t *a1)
{
  uint64_t v1;

  return sub_21DC1F860(a1, *(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_21DC60F34(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x22079D964](MEMORY[0x24BEE12E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21DC60F74(void **a1)
{
  return sub_21DC60EFC(a1);
}

uint64_t sub_21DC60F8C(uint64_t a1)
{
  return sub_21DC60748(a1);
}

uint64_t sub_21DC60FA0(uint64_t *a1)
{
  return sub_21DC60F1C(a1);
}

id sub_21DC60FB4()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  sub_21DC716C0();
  sub_21DC716A8();
  sub_21DC714BC();
  v0 = objc_allocWithZone(MEMORY[0x24BE0C9C0]);
  v1 = (void *)sub_21DC71AA4();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithStoreBasePath_segmentSize_protectionClass_, v1, 0x100000, 3);

  sub_21DC4D7B8();
  v3 = objc_allocWithZone(MEMORY[0x24BE0CD88]);
  v4 = (void *)sub_21DC71AA4();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithPrivateStreamIdentifier_storeConfig_eventDataClass_, v4, v2, swift_getObjCClassFromMetadata());

  return v5;
}

uint64_t sub_21DC610BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21DC714C8();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_21DC610F8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21DC714C8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_21DC6112C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21DC714C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_21DC61170(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21DC714C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_21DC611B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21DC714C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_21DC611F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21DC714C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_21DC6123C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21DC61248(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21DC714C8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_21DC61284()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21DC61290(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21DC714C8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for UnifiedBiomeStream()
{
  uint64_t result;

  result = qword_2553AA668;
  if (!qword_2553AA668)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21DC6130C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21DC714C8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_21DC61374(unint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char *v5;
  id result;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  void *v10;
  id v11;
  uint64_t v12;
  char *v13;
  objc_super v14;
  uint64_t v15;

  v2 = v1;
  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v5 = v1;
    if (v4)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x24BEE4AF8];
LABEL_13:
    *(_QWORD *)&v2[OBJC_IVAR___ISComponentGroup_eventsInternal] = v12;

    v14.receiver = v2;
    v14.super_class = (Class)type metadata accessor for ComponentGroupBridge();
    return objc_msgSendSuper2(&v14, sel_init);
  }
  v13 = v1;
  v4 = sub_21DC71FCC();
  if (!v4)
    goto LABEL_12;
LABEL_3:
  v15 = MEMORY[0x24BEE4AF8];
  result = (id)sub_21DC71F24();
  if ((v4 & 0x8000000000000000) == 0)
  {
    sub_21DC4D7B8();
    if ((a1 & 0xC000000000000001) != 0)
    {
      v7 = 0;
      do
      {
        v8 = v7 + 1;
        MEMORY[0x22079D208]();
        sub_21DC71D2C();
        sub_21DC71F00();
        sub_21DC71F30();
        sub_21DC71F3C();
        sub_21DC71F0C();
        v7 = v8;
      }
      while (v4 != v8);
    }
    else
    {
      v9 = (void **)(a1 + 32);
      do
      {
        v10 = *v9++;
        v11 = v10;
        sub_21DC71D2C();
        sub_21DC71F00();
        sub_21DC71F30();
        sub_21DC71F3C();
        sub_21DC71F0C();
        --v4;
      }
      while (v4);
    }
    v12 = v15;
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

id ComponentGroupBridge.__allocating_init(eventsBridge:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___ISComponentGroup_eventsInternal] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id ComponentGroupBridge.init(eventsBridge:)(uint64_t a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR___ISComponentGroup_eventsInternal] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for ComponentGroupBridge();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for ComponentGroupBridge()
{
  return objc_opt_self();
}

uint64_t sub_21DC61674()
{
  return swift_bridgeObjectRetain();
}

void sub_21DC616B4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  objc_class *v7;
  char *v8;
  objc_super v9;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___ISComponentGroup_eventsInternal);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  if (!sub_21DC71FCC())
    goto LABEL_9;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_10:
    v3 = (id)MEMORY[0x22079D208](0, v1);
    goto LABEL_6;
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_12;
  }
  v3 = *(id *)(v1 + 32);
LABEL_6:
  v4 = v3;
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v4, sel_topLevelUnionType);

  v6 = sub_21DC71D50();
  if (v6)
  {
    v7 = (objc_class *)type metadata accessor for ComponentIdentifierBridge();
    v8 = (char *)objc_allocWithZone(v7);
    *(_QWORD *)&v8[OBJC_IVAR___ISComponentIdentifier_componentIdentifier] = v6;
    v9.receiver = v8;
    v9.super_class = v7;
    objc_msgSendSuper2(&v9, sel_init);
    return;
  }
LABEL_12:
  __break(1u);
}

id ComponentGroupBridge.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ComponentGroupBridge.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ComponentGroupBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ComponentGroupBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for ComponentGroupBridge()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ComponentGroupBridge.__allocating_init(eventsBridge:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ComponentGroupBridge.events.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ComponentGroupBridge.componentIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of BiomeInstrumentationStreamsProviderProtocol.startTime.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BiomeInstrumentationStreamsProviderProtocol.startTime.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 16))(a1, a2 & 1);
}

uint64_t dispatch thunk of BiomeInstrumentationStreamsProviderProtocol.startTime.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of BiomeInstrumentationStreamsProviderProtocol.endTime.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of BiomeInstrumentationStreamsProviderProtocol.endTime.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 40))(a1, a2 & 1);
}

uint64_t dispatch thunk of BiomeInstrumentationStreamsProviderProtocol.endTime.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of BiomeInstrumentationStreamsProviderProtocol.maxEvents.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of BiomeInstrumentationStreamsProviderProtocol.maxEvents.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 64))(a1, a2 & 1);
}

uint64_t dispatch thunk of BiomeInstrumentationStreamsProviderProtocol.maxEvents.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of BiomeInstrumentationStreamsProviderProtocol.lastN.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of BiomeInstrumentationStreamsProviderProtocol.lastN.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 88))(a1, a2 & 1);
}

uint64_t dispatch thunk of BiomeInstrumentationStreamsProviderProtocol.lastN.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of BiomeInstrumentationStreamsProviderProtocol.transcriptEvents()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of BiomeInstrumentationStreamsProviderProtocol.gfiEvents()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of BiomeInstrumentationStreamsProviderProtocol.telemetryEvents()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of BiomeInstrumentationStreamsProviderProtocol.selfEvents()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of BiomeInstrumentationStreamsProviderProtocol.eventGraphs(windowLength:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t static BiomeInstrumentationStreamsFactory.constructRawJoinableProvider(startTime:endTime:maxEvents:lastN:useCase:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  char v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v8 + 56) = v11;
  *(_QWORD *)(v8 + 64) = v12;
  *(_BYTE *)(v8 + 155) = v10;
  *(_QWORD *)(v8 + 40) = a6;
  *(_QWORD *)(v8 + 48) = a8;
  *(_BYTE *)(v8 + 154) = a7;
  *(_BYTE *)(v8 + 153) = a5;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a4;
  *(_BYTE *)(v8 + 152) = a3;
  *(_QWORD *)(v8 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_21DC61A28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v0[9] = type metadata accessor for TranscriptStream();
  v1 = swift_allocObject();
  v0[10] = v1;
  sub_21DC719CC();
  *(_BYTE *)(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams16TranscriptStream_name) = 0;
  v0[11] = type metadata accessor for RawJoinableStream();
  v2 = swift_allocObject();
  v0[12] = v2;
  *(_BYTE *)(v2 + 16) = 3;
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 32) = 0;
  sub_21DC208FC();
  sub_21DC71D80();
  sub_21DC719E4();
  v0[13] = type metadata accessor for GMSStream();
  v3 = swift_allocObject();
  v0[14] = v3;
  sub_21DC719CC();
  *(_BYTE *)(v3 + OBJC_IVAR____TtC26AIMLInstrumentationStreams9GMSStream_name) = 1;
  v0[15] = type metadata accessor for TelemetryStream();
  v4 = swift_allocObject();
  v0[16] = v4;
  sub_21DC719CC();
  *(_BYTE *)(v4 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15TelemetryStream_name) = 2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[17] = v5;
  *v5 = v0;
  v5[1] = sub_21DC61C50;
  return sub_21DC2C530();
}

uint64_t sub_21DC61C50()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21DC61CB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t (*v22)(void);

  v17 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 96);
  v12 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 72);
  v20 = *(_BYTE *)(v0 + 155);
  v21 = *(_QWORD *)(v0 + 56);
  v18 = *(_QWORD *)(v0 + 48);
  v19 = *(_QWORD *)(v0 + 128);
  v16 = *(_BYTE *)(v0 + 154);
  v13 = *(_BYTE *)(v0 + 153);
  v6 = *(_QWORD *)(v0 + 32);
  v14 = *(_QWORD *)(v0 + 40);
  v15 = *(_QWORD *)(v0 + 112);
  v7 = *(_BYTE *)(v0 + 152);
  v9 = *(_QWORD *)(v0 + 16);
  v8 = *(_QWORD *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA0D8);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_21DC743F0;
  *(_QWORD *)(v10 + 56) = v5;
  *(_QWORD *)(v10 + 64) = &off_24E1A6D90;
  *(_QWORD *)(v10 + 32) = v3;
  *(_QWORD *)(v10 + 96) = v2;
  *(_QWORD *)(v10 + 104) = &off_24E1A5F68;
  *(_QWORD *)(v10 + 72) = v1;
  *(_QWORD *)(v10 + 136) = v12;
  *(_QWORD *)(v10 + 144) = &off_24E1A5E00;
  *(_QWORD *)(v10 + 112) = v15;
  *(_QWORD *)(v10 + 176) = v17;
  *(_QWORD *)(v10 + 184) = &off_24E1A5548;
  *(_QWORD *)(v10 + 152) = v19;
  *(_QWORD *)v9 = v10;
  *(_QWORD *)(v9 + 8) = v8;
  *(_BYTE *)(v9 + 16) = v7 & 1;
  *(_QWORD *)(v9 + 24) = v6;
  *(_BYTE *)(v9 + 32) = v13 & 1;
  *(_QWORD *)(v9 + 40) = v14;
  *(_BYTE *)(v9 + 48) = v16 & 1;
  *(_QWORD *)(v9 + 56) = v18;
  *(_BYTE *)(v9 + 64) = v20 & 1;
  *(_QWORD *)(v9 + 72) = v21;
  *(_QWORD *)(v9 + 80) = v4;
  v22 = *(uint64_t (**)(void))(v0 + 8);
  swift_bridgeObjectRetain();
  return v22();
}

uint64_t sub_21DC61E28()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static BiomeInstrumentationStreamsFactory.constructProcessedJoinableProvider(startTime:endTime:maxEvents:lastN:useCase:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  char v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v8 + 56) = v11;
  *(_QWORD *)(v8 + 64) = v12;
  *(_BYTE *)(v8 + 75) = v10;
  *(_QWORD *)(v8 + 40) = a6;
  *(_QWORD *)(v8 + 48) = a8;
  *(_BYTE *)(v8 + 74) = a7;
  *(_BYTE *)(v8 + 73) = a5;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a4;
  *(_BYTE *)(v8 + 72) = a3;
  *(_QWORD *)(v8 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_21DC61EC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  uint64_t v22;

  v19 = *(_BYTE *)(v0 + 75);
  v20 = *(_QWORD *)(v0 + 56);
  v22 = *(_QWORD *)(v0 + 64);
  v18 = *(_QWORD *)(v0 + 48);
  v17 = *(_BYTE *)(v0 + 74);
  v15 = *(_BYTE *)(v0 + 73);
  v16 = *(_QWORD *)(v0 + 40);
  v14 = *(_QWORD *)(v0 + 32);
  v13 = *(_BYTE *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 16);
  v12 = *(_QWORD *)(v0 + 24);
  v2 = type metadata accessor for TranscriptStream();
  v3 = swift_allocObject();
  sub_21DC719CC();
  *(_BYTE *)(v3 + OBJC_IVAR____TtC26AIMLInstrumentationStreams16TranscriptStream_name) = 0;
  v11 = type metadata accessor for SelfProcessedEventJoinableStream();
  v4 = swift_allocObject();
  *(_BYTE *)(v4 + 16) = 4;
  v5 = type metadata accessor for GMSStream();
  v6 = swift_allocObject();
  sub_21DC719CC();
  *(_BYTE *)(v6 + OBJC_IVAR____TtC26AIMLInstrumentationStreams9GMSStream_name) = 1;
  v7 = type metadata accessor for TelemetryStream();
  v8 = swift_allocObject();
  sub_21DC719CC();
  *(_BYTE *)(v8 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15TelemetryStream_name) = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA0D8);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_21DC743F0;
  *(_QWORD *)(v9 + 56) = v2;
  *(_QWORD *)(v9 + 64) = &off_24E1A6D90;
  *(_QWORD *)(v9 + 32) = v3;
  *(_QWORD *)(v9 + 96) = v11;
  *(_QWORD *)(v9 + 104) = &off_24E1A53D8;
  *(_QWORD *)(v9 + 72) = v4;
  *(_QWORD *)(v9 + 136) = v5;
  *(_QWORD *)(v9 + 144) = &off_24E1A5E00;
  *(_QWORD *)(v9 + 112) = v6;
  *(_QWORD *)(v9 + 176) = v7;
  *(_QWORD *)(v9 + 184) = &off_24E1A5548;
  *(_QWORD *)(v9 + 152) = v8;
  *(_QWORD *)v1 = v9;
  *(_QWORD *)(v1 + 8) = v12;
  *(_BYTE *)(v1 + 16) = v13 & 1;
  *(_QWORD *)(v1 + 24) = v14;
  *(_BYTE *)(v1 + 32) = v15 & 1;
  *(_QWORD *)(v1 + 40) = v16;
  *(_BYTE *)(v1 + 48) = v17 & 1;
  *(_QWORD *)(v1 + 56) = v18;
  *(_BYTE *)(v1 + 64) = v19 & 1;
  *(_QWORD *)(v1 + 72) = v20;
  *(_QWORD *)(v1 + 80) = v22;
  v21 = *(uint64_t (**)(void))(v0 + 8);
  swift_bridgeObjectRetain();
  return v21();
}

id BiomeInstrumentationStreamsFactory.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id BiomeInstrumentationStreamsFactory.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BiomeInstrumentationStreamsFactory();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for BiomeInstrumentationStreamsFactory()
{
  return objc_opt_self();
}

id BiomeInstrumentationStreamsFactory.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BiomeInstrumentationStreamsFactory();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_UNKNOWN **sub_21DC6227C()
{
  return &protocol witness table for BiomeInstrumentationStreamsProvider;
}

uint64_t SiriIdentifiers.userEphemeralId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SiriIdentifiers.homeEphemeralId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SiriIdentifiers.secondsSinceEphemeralIdCreation.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t SiriIdentifiers.siriDeviceId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SiriIdentifiers.siriSpeechId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SiriIdentifiers.siriUserId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SiriIdentifiers.turnId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SiriIdentifiers.logicalClockIds.getter()
{
  return swift_bridgeObjectRetain();
}

void SiriIdentifiers.init(graph:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  void (**v4)(char *, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  id v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  id v53;
  unint64_t v54;
  id v55;
  void *v56;
  id v57;
  void *v58;
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  id v64;
  void *v65;
  uint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  id v75;
  void *v76;
  uint64_t v77;
  void *v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  void (*v84)(char *, uint64_t);
  void (*v85)(char *, uint64_t);
  void (*v86)(char *, uint64_t);
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  id v92;
  id v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  unint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  id v105;
  unint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD v117[2];
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  id v132;
  uint64_t v133;
  char *v134;
  void (**v135)(char *, uint64_t);
  void (**v136)(char *, uint64_t);
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;

  v138 = sub_21DC715F4();
  v4 = *(void (***)(char *, uint64_t))(v138 - 8);
  v6 = MEMORY[0x24BDAC7A8](v138, v5);
  v8 = (char *)v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v6, v9);
  v134 = (char *)v117 - v11;
  MEMORY[0x24BDAC7A8](v10, v12);
  v135 = (void (**)(char *, uint64_t))((char *)v117 - v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v137 = (char *)v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v21 = (char *)v117 - v20;
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)v117 - v23;
  v25 = sub_21DC13C88(0, &qword_2553AA708);
  v26 = sub_21DC262F8();
  if (*(_QWORD *)(v26 + 16) && (v27 = sub_21DC0A464(v25), (v28 & 1) != 0))
  {
    v29 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v27);
    swift_bridgeObjectRetain();
  }
  else
  {
    v29 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v30 = a1;
  v31 = sub_21DC0BFDC(v29, (uint64_t)v30);
  swift_bridgeObjectRelease();

  if (v31 >> 62)
  {
    v46 = sub_21DC71FCC();
    v133 = a2;
    if (v46)
      goto LABEL_7;
LABEL_24:
    swift_bridgeObjectRelease();
    v131 = 0;
    v128 = 0;
    v127 = 0;
    v130 = 0;
    v129 = 0;
    v132 = 0;
    goto LABEL_25;
  }
  v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  v133 = a2;
  if (!v32)
    goto LABEL_24;
LABEL_7:
  if ((v31 & 0xC000000000000001) != 0)
  {
    v33 = (id)MEMORY[0x22079D208](0, v31);
  }
  else
  {
    if (!*(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_84;
    }
    v33 = *(id *)(v31 + 32);
  }
  v34 = v33;
  swift_bridgeObjectRelease();
  v35 = v34;
  v36 = (void *)sub_21DC71750();

  v132 = v35;
  if (v36)
  {
    v37 = objc_msgSend(v36, sel_userEphemeralId);
    if (v37)
    {
      v38 = v37;
      sub_21DC71CFC();

      v39 = v138;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v4[6])(v24, 1, v138) != 1)
      {
        v129 = sub_21DC715A0();
        v130 = v40;
        v4[1](v24, v39);
LABEL_17:
        v41 = objc_msgSend(v36, sel_homeEphemeralId);
        if (v41)
        {
          v42 = v41;
          sub_21DC71CFC();

          v43 = v138;
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v4[6])(v21, 1, v138) != 1)
          {
            v127 = sub_21DC715A0();
            v128 = v44;
            v4[1](v21, v43);
            goto LABEL_22;
          }
          sub_21DC07C84((uint64_t)v21, (uint64_t *)&unk_2553A98F0);
        }
        v128 = 0;
        v127 = 0;
LABEL_22:
        v131 = objc_msgSend(v36, sel_secondsSinceEphemeralIdCreation);

        v45 = 0;
        goto LABEL_26;
      }
      sub_21DC07C84((uint64_t)v24, (uint64_t *)&unk_2553A98F0);
    }
    v130 = 0;
    v129 = 0;
    goto LABEL_17;
  }
  v131 = 0;
  v128 = 0;
  v127 = 0;
  v130 = 0;
  v129 = 0;
LABEL_25:
  v45 = 1;
LABEL_26:
  v141 = v45;
  v47 = sub_21DC13C88(0, &qword_2553AA710);
  v48 = sub_21DC262F8();
  v49 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(v48 + 16))
  {
    v50 = sub_21DC0A464(v47);
    if ((v51 & 1) != 0)
    {
      v52 = *(_QWORD *)(*(_QWORD *)(v48 + 56) + 8 * v50);
      swift_bridgeObjectRetain();
    }
    else
    {
      v52 = MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    v52 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v53 = v30;
  v54 = sub_21DC0BFDC(v52, (uint64_t)v53);
  swift_bridgeObjectRelease();

  if (!(v54 >> 62))
  {
    if (*(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_33;
LABEL_49:
    swift_bridgeObjectRelease();
    v120 = 0;
    v122 = 0;
    v121 = 0;
    v62 = 0;
    v123 = 0;
    v119 = 0;
    v57 = 0;
    goto LABEL_50;
  }
  if (!sub_21DC71FCC())
    goto LABEL_49;
LABEL_33:
  if ((v54 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v55 = *(id *)(v54 + 32);
      goto LABEL_36;
    }
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    swift_bridgeObjectRelease();
    goto LABEL_88;
  }
  v55 = (id)MEMORY[0x22079D208](0, v54);
LABEL_36:
  v56 = v55;
  swift_bridgeObjectRelease();
  v57 = v56;
  v58 = (void *)sub_21DC71750();

  if (!v58)
  {
    v120 = 0;
    v122 = 0;
    v121 = 0;
    v62 = 0;
    v63 = &v143;
LABEL_47:
    *(v63 - 32) = 0;
    v119 = 0;
    goto LABEL_50;
  }
  v59 = objc_msgSend(v58, sel_siriDeviceId);
  if (v59)
  {
    v60 = v59;
    v123 = sub_21DC71AB0();
    v62 = v61;

  }
  else
  {
    v62 = 0;
    v123 = 0;
  }
  v64 = objc_msgSend(v58, sel_siriSpeechId);
  if (v64)
  {
    v65 = v64;
    v121 = sub_21DC71AB0();
    v122 = v66;

  }
  else
  {
    v122 = 0;
    v121 = 0;
  }
  v67 = objc_msgSend(v58, sel_siriUserId);
  if (!v67)
  {

    v63 = &v142;
    goto LABEL_47;
  }
  v68 = v67;
  v120 = sub_21DC71AB0();
  v119 = v69;

LABEL_50:
  v125 = v53;
  v70 = swift_bridgeObjectRetain();
  v71 = sub_21DC0DEB8(v70);
  v117[1] = 0;
  swift_bridgeObjectRelease();
  if (v71 >> 62)
    goto LABEL_80;
  v72 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v73 = v137;
    v118 = v8;
    v124 = v62;
    v126 = v57;
    if (!v72)
      break;
    v139 = v49;
    sub_21DC4BB2C(0, v72 & ~(v72 >> 63), 0);
    if (v72 < 0)
      goto LABEL_85;
    v136 = v4;
    v74 = 0;
    v62 = v139;
    v57 = (id)v71;
    v8 = (char *)(v71 & 0xC000000000000001);
    v4 = v135;
    while (v72 != v74)
    {
      if (v8)
        v75 = (id)MEMORY[0x22079D208](v74, v57);
      else
        v75 = *((id *)v57 + v74 + 4);
      v76 = v75;
      v77 = sub_21DC71714();
      if (!v77)
        goto LABEL_86;
      v78 = (void *)v77;
      sub_21DC7178C();

      v139 = v62;
      v80 = *(_QWORD *)(v62 + 16);
      v79 = *(_QWORD *)(v62 + 24);
      v49 = v80 + 1;
      if (v80 >= v79 >> 1)
      {
        sub_21DC4BB2C(v79 > 1, v80 + 1, 1);
        v62 = v139;
      }
      ++v74;
      *(_QWORD *)(v62 + 16) = v49;
      v81 = v62
          + ((*((unsigned __int8 *)v136 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v136 + 80))
          + (_QWORD)v136[9] * v80;
      v71 = v138;
      ((void (*)(unint64_t, void (**)(char *, uint64_t), uint64_t))v136[4])(v81, v4, v138);
      if (v72 == v74)
      {
        swift_bridgeObjectRelease();
        v4 = v136;
        goto LABEL_65;
      }
    }
    __break(1u);
LABEL_80:
    swift_bridgeObjectRetain();
    v72 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v62 = MEMORY[0x24BEE4AF8];
  v71 = v138;
LABEL_65:
  v140 = MEMORY[0x24BEE4B08];
  v82 = *(_QWORD *)(v62 + 16);
  if (v82)
  {
    v83 = v62 + ((*((unsigned __int8 *)v4 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v4 + 80));
    v84 = v4[9];
    v85 = v4[2];
    swift_bridgeObjectRetain();
    while (1)
    {
      ((void (*)(char *, unint64_t, unint64_t))v85)(v73, v83, v71);
      v86 = v4[7];
      ((void (*)(char *, _QWORD, uint64_t, unint64_t))v86)(v73, 0, 1, v71);
      if (((unsigned int (*)(char *, uint64_t, unint64_t))v4[6])(v73, 1, v71) == 1)
        break;
      v87 = v134;
      ((void (*)(char *, char *, unint64_t))v4[4])(v134, v137, v71);
      v88 = sub_21DC715A0();
      sub_21DC64634(&v139, v88, v89);
      swift_bridgeObjectRelease();
      v90 = v87;
      v73 = v137;
      v4[1](v90, v71);
      v83 += (unint64_t)v84;
      if (!--v82)
        goto LABEL_71;
    }
  }
  else
  {
    v86 = v4[7];
    swift_bridgeObjectRetain();
LABEL_71:
    ((void (*)(char *, uint64_t, uint64_t, unint64_t))v86)(v73, 1, 1, v71);
  }
  swift_bridgeObjectRelease_n();
  v91 = v140;
  v92 = objc_allocWithZone((Class)type metadata accessor for SiriTurn());
  v93 = v125;
  v94 = SiriTurn.init(eventGraph:)(v93);
  if (!v94)
  {

    v108 = 0;
    v110 = 0;
    v98 = v133;
    goto LABEL_78;
  }
  v95 = (void *)v94;
  v96 = sub_21DC13C88(0, (unint64_t *)&qword_2553AA420);
  v97 = sub_21DC26320();
  v98 = v133;
  v99 = v126;
  if (!*(_QWORD *)(v97 + 16))
    goto LABEL_87;
  v100 = sub_21DC0A464(v96);
  if ((v101 & 1) == 0)
    goto LABEL_87;
  v102 = *(_QWORD *)(*(_QWORD *)(v97 + 56) + 8 * v100);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v103 = sub_21DC089B4(v102);
  swift_bridgeObjectRelease();
  v104 = v118;
  if (v103)
  {
    v105 = v95;
    v106 = sub_21DC0BFDC(v103, (uint64_t)v105);
    swift_bridgeObjectRelease();

    __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8338);
    *(_QWORD *)(swift_initStackObject() + 16) = v106;
    v107 = (void *)sub_21DC09288();
    swift_release();
    sub_21DC717F8();

    v108 = sub_21DC715A0();
    v110 = v109;

    v4[1](v104, v138);
LABEL_78:
    v111 = v141;
    v112 = v130;
    *(_QWORD *)v98 = v129;
    *(_QWORD *)(v98 + 8) = v112;
    v113 = v128;
    *(_QWORD *)(v98 + 16) = v127;
    *(_QWORD *)(v98 + 24) = v113;
    *(_QWORD *)(v98 + 32) = v131;
    *(_BYTE *)(v98 + 40) = v111;
    v114 = v124;
    *(_QWORD *)(v98 + 48) = v123;
    *(_QWORD *)(v98 + 56) = v114;
    v115 = v122;
    *(_QWORD *)(v98 + 64) = v121;
    *(_QWORD *)(v98 + 72) = v115;
    v116 = v119;
    *(_QWORD *)(v98 + 80) = v120;
    *(_QWORD *)(v98 + 88) = v116;
    *(_QWORD *)(v98 + 96) = v108;
    *(_QWORD *)(v98 + 104) = v110;
    *(_QWORD *)(v98 + 112) = v91;
    return;
  }
LABEL_88:
  __break(1u);
}

uint64_t SiriIdentifiers.dictioaryRepresentation()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  _OWORD v34[2];
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[3];
  v29 = v0[4];
  v30 = v0[2];
  v4 = *((_BYTE *)v0 + 40);
  v5 = v0[7];
  v33 = *((_OWORD *)v0 + 4);
  v6 = v0[11];
  v31 = v0[6];
  v32 = v0[10];
  v8 = v0[12];
  v7 = v0[13];
  v9 = swift_bridgeObjectRetain();
  v10 = sub_21DC09958(v9);
  swift_bridgeObjectRelease();
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8D60);
  *(_QWORD *)&v35 = v10;
  sub_21DC13D80(&v35, v34);
  v11 = MEMORY[0x24BEE4B00];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_21DC3D3C0(v34, 0x436C616369676F6CLL, 0xEF7364496B636F6CLL, isUniquelyReferenced_nonNull_native);
  v37 = v11;
  swift_bridgeObjectRelease();
  v13 = MEMORY[0x24BEE0D00];
  if (v7)
  {
    v36 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v35 = v8;
    *((_QWORD *)&v35 + 1) = v7;
    sub_21DC13D80(&v35, v34);
    swift_bridgeObjectRetain();
    v14 = swift_isUniquelyReferenced_nonNull_native();
    sub_21DC3D3C0(v34, 0x64496E727574, 0xE600000000000000, v14);
    v37 = v11;
    swift_bridgeObjectRelease();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    sub_21DC68A08(0x64496E727574, 0xE600000000000000, &v35);
    sub_21DC07C84((uint64_t)&v35, &qword_2553A9B68);
    if (v2)
    {
LABEL_3:
      v36 = v13;
      *(_QWORD *)&v35 = v1;
      *((_QWORD *)&v35 + 1) = v2;
      sub_21DC13D80(&v35, v34);
      swift_bridgeObjectRetain();
      v15 = v37;
      v16 = swift_isUniquelyReferenced_nonNull_native();
      sub_21DC3D3C0(v34, 0x6568704572657375, 0xEF64496C6172656DLL, v16);
      v37 = v15;
      swift_bridgeObjectRelease();
      if (v3)
        goto LABEL_4;
LABEL_8:
      sub_21DC68A08(0x65687045656D6F68, 0xEF64496C6172656DLL, &v35);
      sub_21DC07C84((uint64_t)&v35, &qword_2553A9B68);
      if ((v4 & 1) != 0)
        goto LABEL_5;
      goto LABEL_9;
    }
  }
  sub_21DC68A08(0x6568704572657375, 0xEF64496C6172656DLL, &v35);
  sub_21DC07C84((uint64_t)&v35, &qword_2553A9B68);
  if (!v3)
    goto LABEL_8;
LABEL_4:
  v36 = v13;
  *(_QWORD *)&v35 = v30;
  *((_QWORD *)&v35 + 1) = v3;
  sub_21DC13D80(&v35, v34);
  swift_bridgeObjectRetain();
  v17 = v37;
  v18 = swift_isUniquelyReferenced_nonNull_native();
  sub_21DC3D3C0(v34, 0x65687045656D6F68, 0xEF64496C6172656DLL, v18);
  v37 = v17;
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
  {
LABEL_5:
    sub_21DC68A08(0xD00000000000001FLL, 0x800000021DC7A560, &v35);
    sub_21DC07C84((uint64_t)&v35, &qword_2553A9B68);
    goto LABEL_10;
  }
LABEL_9:
  v36 = MEMORY[0x24BEE4568];
  *(_QWORD *)&v35 = v29;
  sub_21DC13D80(&v35, v34);
  v19 = v37;
  v20 = swift_isUniquelyReferenced_nonNull_native();
  sub_21DC3D3C0(v34, 0xD00000000000001FLL, 0x800000021DC7A560, v20);
  v37 = v19;
  swift_bridgeObjectRelease();
LABEL_10:
  if (v5)
  {
    v36 = v13;
    *(_QWORD *)&v35 = v31;
    *((_QWORD *)&v35 + 1) = v5;
    sub_21DC13D80(&v35, v34);
    swift_bridgeObjectRetain();
    v21 = v37;
    v22 = swift_isUniquelyReferenced_nonNull_native();
    sub_21DC3D3C0(v34, 0x6976654469726973, 0xEC00000064496563, v22);
    v37 = v21;
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_12;
LABEL_15:
    sub_21DC68A08(0x7265735569726973, 0xEA00000000006449, &v35);
    sub_21DC07C84((uint64_t)&v35, &qword_2553A9B68);
    if (*((_QWORD *)&v33 + 1))
      goto LABEL_13;
LABEL_16:
    sub_21DC68A08(0x6565705369726973, 0xEC00000064496863, &v35);
    sub_21DC07C84((uint64_t)&v35, &qword_2553A9B68);
    v25 = v37;
    goto LABEL_17;
  }
  sub_21DC68A08(0x6976654469726973, 0xEC00000064496563, &v35);
  sub_21DC07C84((uint64_t)&v35, &qword_2553A9B68);
  if (!v6)
    goto LABEL_15;
LABEL_12:
  v36 = v13;
  *(_QWORD *)&v35 = v32;
  *((_QWORD *)&v35 + 1) = v6;
  sub_21DC13D80(&v35, v34);
  swift_bridgeObjectRetain();
  v23 = v37;
  v24 = swift_isUniquelyReferenced_nonNull_native();
  sub_21DC3D3C0(v34, 0x7265735569726973, 0xEA00000000006449, v24);
  v37 = v23;
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v33 + 1))
    goto LABEL_16;
LABEL_13:
  v36 = v13;
  v35 = v33;
  sub_21DC13D80(&v35, v34);
  swift_bridgeObjectRetain();
  v25 = v37;
  v26 = swift_isUniquelyReferenced_nonNull_native();
  sub_21DC3D3C0(v34, 0x6565705369726973, 0xEC00000064496863, v26);
  swift_bridgeObjectRelease();
LABEL_17:
  v27 = sub_21DC6346C(v25);
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_21DC6346C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553AA5E0);
    v2 = sub_21DC71FFC();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_21DC13D44(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_21DC13D80(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_21DC13D80(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_21DC13D80(v36, v37);
    sub_21DC13D80(v37, &v33);
    result = sub_21DC71E70();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_21DC13D80(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_21DC0C1C4();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

Swift::String __swiftcall SiriIdentifiers.print()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  Swift::String result;
  char v4;

  v4 = *(_BYTE *)(v0 + 40);
  sub_21DC71EC4();
  sub_21DC71B10();
  swift_bridgeObjectRetain();
  sub_21DC71C60();
  sub_21DC71B10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21DC71B10();
  swift_bridgeObjectRetain();
  sub_21DC71B10();
  swift_bridgeObjectRelease();
  sub_21DC71B10();
  swift_bridgeObjectRetain();
  sub_21DC71B10();
  swift_bridgeObjectRelease();
  sub_21DC71B10();
  swift_bridgeObjectRetain();
  sub_21DC71B10();
  swift_bridgeObjectRelease();
  sub_21DC71B10();
  if ((v4 & 1) == 0)
  {
    sub_21DC69D98();
    sub_21DC71DBC();
  }
  sub_21DC71B10();
  swift_bridgeObjectRelease();
  sub_21DC71B10();
  swift_bridgeObjectRetain();
  sub_21DC71B10();
  swift_bridgeObjectRelease();
  sub_21DC71B10();
  swift_bridgeObjectRetain();
  sub_21DC71B10();
  swift_bridgeObjectRelease();
  sub_21DC71B10();
  swift_bridgeObjectRetain();
  sub_21DC71B10();
  swift_bridgeObjectRelease();
  v1 = 0;
  v2 = (void *)0xE000000000000000;
  result._object = v2;
  result._countAndFlagsBits = v1;
  return result;
}

uint64_t sub_21DC63B88(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  sub_21DC72134();
  sub_21DC72140();
  v6 = sub_21DC72158();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_21DC65C80(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(_QWORD *)(v9 + 8 * v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v9 + 8 * v8) != a2);
  }
  result = 0;
  a2 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_21DC63CA4(_QWORD *a1, void *a2)
{
  return sub_21DC63CCC(a1, a2, (void (*)(_QWORD))MEMORY[0x24BE94860], &qword_2553A9A20);
}

uint64_t sub_21DC63CB8(_QWORD *a1, void *a2)
{
  return sub_21DC63CCC(a1, a2, (void (*)(_QWORD))type metadata accessor for ComponentIdentifierBridge, &qword_2553AA748);
}

uint64_t sub_21DC63CCC(_QWORD *a1, void *a2, void (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v7;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  id v21;
  char v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  char isUniquelyReferenced_nonNull_native;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v7 = v4;
  v10 = *v4;
  if ((*v4 & 0xC000000000000001) != 0)
  {
    if (v10 < 0)
      v11 = *v4;
    else
      v11 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = a2;
    v13 = sub_21DC71E34();

    if (v13)
    {
      swift_bridgeObjectRelease();

      a3(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v35;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_21DC71E28();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v25 = sub_21DC647E0(v11, result + 1, a4, a3);
    v36 = v25;
    v26 = *(_QWORD *)(v25 + 16);
    if (*(_QWORD *)(v25 + 24) <= v26)
    {
      v31 = v26 + 1;
      v32 = v12;
      sub_21DC64C88(v31, a4);
      v27 = v36;
    }
    else
    {
      v27 = v25;
      v28 = v12;
    }
    sub_21DC65C00((uint64_t)v12, v27);
    *v7 = v27;
    swift_bridgeObjectRelease();
    *a1 = v12;
  }
  else
  {
    swift_bridgeObjectRetain();
    v15 = sub_21DC71D5C();
    v16 = -1 << *(_BYTE *)(v10 + 32);
    v17 = v15 & ~v16;
    if (((*(_QWORD *)(v10 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
    {
      a3(0);
      v18 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v17);
      v19 = sub_21DC71D68();

      if ((v19 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v23 = *(void **)(*(_QWORD *)(*v4 + 48) + 8 * v17);
        *a1 = v23;
        v24 = v23;
        return 0;
      }
      v20 = ~v16;
      while (1)
      {
        v17 = (v17 + 1) & v20;
        if (((*(_QWORD *)(v10 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
          break;
        v21 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v17);
        v22 = sub_21DC71D68();

        if ((v22 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v37 = *v4;
    *v4 = 0x8000000000000000;
    v30 = a2;
    sub_21DC65DCC((uint64_t)v30, v17, isUniquelyReferenced_nonNull_native, a4, a3);
    *v4 = v37;
    swift_bridgeObjectRelease();
    *a1 = v30;
  }
  return 1;
}

uint64_t sub_21DC63F78(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  BOOL v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v28;
  uint64_t v30;

  v10 = *v5;
  sub_21DC72134();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21DC71B04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21DC71B04();
  swift_bridgeObjectRelease();
  v11 = sub_21DC72158();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  v14 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v15 = ~v12;
    v16 = *(_QWORD *)(v10 + 48);
    while (1)
    {
      v17 = (_QWORD *)(v16 + 32 * v13);
      v18 = v17[2];
      v19 = v17[3];
      v20 = *v17 == a2 && v17[1] == a3;
      if (v20 || (sub_21DC720A4() & 1) != 0)
      {
        v21 = v18 == a4 && v19 == a5;
        if (v21 || (sub_21DC720A4() & 1) != 0)
          break;
      }
      v13 = (v13 + 1) & v15;
      if (((*(_QWORD *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_15;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = (uint64_t *)(*(_QWORD *)(*v28 + 48) + 32 * v13);
    v23 = v22[1];
    v24 = v22[2];
    v25 = v22[3];
    *a1 = *v22;
    a1[1] = v23;
    a1[2] = v24;
    a1[3] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v28;
    *v28 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21DC65F50(a2, a3, a4, a5, v13, isUniquelyReferenced_nonNull_native);
    *v28 = v30;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    result = 1;
    a1[2] = a4;
    a1[3] = a5;
  }
  return result;
}

uint64_t sub_21DC6419C(uint64_t a1, char *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD, _QWORD, _QWORD);
  uint64_t v20;
  void (*v21)(_QWORD, _QWORD, _QWORD);
  char v22;
  void (*v23)(char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_21DC715F4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  sub_21DC0C1D0((unint64_t *)&qword_2553AA410, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_21DC71A38();
  v13 = -1 << *(_BYTE *)(v11 + 32);
  v14 = v12 & ~v13;
  v15 = v11;
  v16 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v2;
    v28 = a1;
    v29 = ~v13;
    v17 = v7;
    v18 = *(_QWORD *)(v7 + 72);
    v30 = v17;
    v19 = *(void (**)(_QWORD, _QWORD, _QWORD))(v17 + 16);
    while (1)
    {
      v20 = v15;
      v21 = v19;
      v19(v10, *(_QWORD *)(v15 + 48) + v18 * v14, v6);
      sub_21DC0C1D0(&qword_2553A8378, MEMORY[0x24BDCEA98]);
      v22 = sub_21DC71A8C();
      v23 = *(void (**)(char *, uint64_t))(v30 + 8);
      v23(v10, v6);
      if ((v22 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v20;
      v19 = v21;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v7 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v23(v31, v6);
    v21(v28, *(_QWORD *)(*v27 + 48) + v18 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v19 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v19(v10, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_21DC66134((uint64_t)v10, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_21DC643F0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v6 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v26 = (uint64_t)&v24 - v13;
  v14 = *v2;
  sub_21DC72134();
  sub_21DC715F4();
  sub_21DC0C1D0((unint64_t *)&qword_2553AA410, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  sub_21DC71A44();
  v15 = sub_21DC72158();
  v16 = -1 << *(_BYTE *)(v14 + 32);
  v17 = v15 & ~v16;
  if (((*(_QWORD *)(v14 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
  {
    v24 = v2;
    v25 = a1;
    v18 = ~v16;
    v19 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_21DC0C210(*(_QWORD *)(v14 + 48) + v19 * v17, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      v20 = sub_21DC715D0();
      sub_21DC0C254((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
      if ((v20 & 1) != 0)
        break;
      v17 = (v17 + 1) & v18;
      if (((*(_QWORD *)(v14 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v24;
        a1 = v25;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_21DC0C254(a2, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    sub_21DC0C210(*(_QWORD *)(*v24 + 48) + v19 * v17, v25, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = v26;
    sub_21DC0C210(a2, v26, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    v27 = *v3;
    *v3 = 0x8000000000000000;
    sub_21DC66328(v22, v17, isUniquelyReferenced_nonNull_native);
    *v3 = v27;
    swift_bridgeObjectRelease();
    sub_21DC6A178(a2, a1);
    return 1;
  }
}

uint64_t sub_21DC64634(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_21DC72134();
  swift_bridgeObjectRetain();
  sub_21DC71B04();
  v8 = sub_21DC72158();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_21DC720A4() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_21DC720A4() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_21DC66528(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_21DC647E0(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v6 = sub_21DC71EAC();
    v19 = v6;
    sub_21DC71DF8();
    if (sub_21DC71E4C())
    {
      a4(0);
      do
      {
        swift_dynamicCast();
        v6 = v19;
        v13 = *(_QWORD *)(v19 + 16);
        if (*(_QWORD *)(v19 + 24) <= v13)
        {
          sub_21DC64C88(v13 + 1, a3);
          v6 = v19;
        }
        result = sub_21DC71D5C();
        v8 = v6 + 56;
        v9 = -1 << *(_BYTE *)(v6 + 32);
        v10 = result & ~v9;
        v11 = v10 >> 6;
        if (((-1 << v10) & ~*(_QWORD *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          v12 = __clz(__rbit64((-1 << v10) & ~*(_QWORD *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v14 = 0;
          v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v16 = v11 == v15;
            if (v11 == v15)
              v11 = 0;
            v14 |= v16;
            v17 = *(_QWORD *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(_QWORD *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
        ++*(_QWORD *)(v6 + 16);
      }
      while (sub_21DC71E4C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v6;
}

uint64_t sub_21DC649D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA740);
  result = sub_21DC71EA0();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_21DC72134();
      sub_21DC72140();
      result = sub_21DC72158();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_21DC64C7C(uint64_t a1)
{
  return sub_21DC64C88(a1, &qword_2553A9A20);
}

uint64_t sub_21DC64C88(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_21DC71EA0();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v8 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_33;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_33;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_33;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                v3 = v30;
                v29 = 1 << *(_BYTE *)(v4 + 32);
                if (v29 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v11)
                    goto LABEL_33;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      result = sub_21DC71D5C();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_21DC64F20()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA730);
  v3 = sub_21DC71EA0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v33 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v32 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v32)
          goto LABEL_33;
        v16 = v33[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v32)
            goto LABEL_33;
          v16 = v33[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v32)
              goto LABEL_33;
            v16 = v33[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v31 = 1 << *(_BYTE *)(v2 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v10 >= v32)
                    goto LABEL_33;
                  v16 = v33[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = v2;
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v14);
      v20 = *v19;
      v21 = v19[1];
      v22 = v19[2];
      v23 = v19[3];
      sub_21DC72134();
      swift_bridgeObjectRetain();
      sub_21DC71B04();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_21DC71B04();
      swift_bridgeObjectRelease();
      result = sub_21DC72158();
      v24 = -1 << *(_BYTE *)(v4 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v8 + 8 * v26);
        }
        while (v30 == -1);
        v11 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v11);
      *v12 = v20;
      v12[1] = v21;
      v12[2] = v22;
      v12[3] = v23;
      ++*(_QWORD *)(v4 + 16);
      v2 = v18;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_21DC65258()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t);
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v1 = v0;
  v2 = sub_21DC715F4();
  v37 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA728);
  v7 = sub_21DC71EA0();
  v8 = v7;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 1 << *(_BYTE *)(v6 + 32);
    v10 = *(_QWORD *)(v6 + 56);
    v36 = (_QWORD *)(v6 + 56);
    if (v9 < 64)
      v11 = ~(-1 << v9);
    else
      v11 = -1;
    v12 = v11 & v10;
    v34 = v0;
    v35 = (unint64_t)(v9 + 63) >> 6;
    v13 = v7 + 56;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v15 << 6);
      }
      else
      {
        v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v35)
          goto LABEL_33;
        v20 = v36[v19];
        ++v15;
        if (!v20)
        {
          v15 = v19 + 1;
          if (v19 + 1 >= v35)
            goto LABEL_33;
          v20 = v36[v15];
          if (!v20)
          {
            v15 = v19 + 2;
            if (v19 + 2 >= v35)
              goto LABEL_33;
            v20 = v36[v15];
            if (!v20)
            {
              v21 = v19 + 3;
              if (v21 >= v35)
              {
LABEL_33:
                swift_release();
                v1 = v34;
                v33 = 1 << *(_BYTE *)(v6 + 32);
                if (v33 > 63)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v6 + 16) = 0;
                break;
              }
              v20 = v36[v21];
              if (!v20)
              {
                while (1)
                {
                  v15 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_39;
                  if (v15 >= v35)
                    goto LABEL_33;
                  v20 = v36[v15];
                  ++v21;
                  if (v20)
                    goto LABEL_23;
                }
              }
              v15 = v21;
            }
          }
        }
LABEL_23:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      v22 = v6;
      v23 = *(_QWORD *)(v37 + 72);
      v24 = *(_QWORD *)(v6 + 48) + v23 * v18;
      v25 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 32);
      v25(v5, v24, v2);
      sub_21DC0C1D0((unint64_t *)&qword_2553AA410, MEMORY[0x24BDCEA88]);
      result = sub_21DC71A38();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v13 + 8 * (v27 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v13 + 8 * v28);
        }
        while (v32 == -1);
        v16 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(_QWORD *)(v8 + 48) + v16 * v23, v5, v2);
      ++*(_QWORD *)(v8 + 16);
      v6 = v22;
    }
  }
  result = swift_release();
  *v1 = v8;
  return result;
}

uint64_t sub_21DC655BC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD *v34;
  uint64_t v35;

  v1 = v0;
  v2 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v35 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA720);
  v7 = sub_21DC71EA0();
  v8 = v7;
  if (*(_QWORD *)(v6 + 16))
  {
    v32 = v0;
    v9 = 1 << *(_BYTE *)(v6 + 32);
    v10 = *(_QWORD *)(v6 + 56);
    v34 = (_QWORD *)(v6 + 56);
    if (v9 < 64)
      v11 = ~(-1 << v9);
    else
      v11 = -1;
    v12 = v11 & v10;
    v33 = (unint64_t)(v9 + 63) >> 6;
    v13 = v7 + 56;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v15 << 6);
      }
      else
      {
        v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v33)
          goto LABEL_33;
        v20 = v34[v19];
        ++v15;
        if (!v20)
        {
          v15 = v19 + 1;
          if (v19 + 1 >= v33)
            goto LABEL_33;
          v20 = v34[v15];
          if (!v20)
          {
            v15 = v19 + 2;
            if (v19 + 2 >= v33)
              goto LABEL_33;
            v20 = v34[v15];
            if (!v20)
            {
              v21 = v19 + 3;
              if (v21 >= v33)
              {
LABEL_33:
                swift_release();
                v1 = v32;
                v30 = 1 << *(_BYTE *)(v6 + 32);
                if (v30 > 63)
                  bzero(v34, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v30;
                *(_QWORD *)(v6 + 16) = 0;
                break;
              }
              v20 = v34[v21];
              if (!v20)
              {
                while (1)
                {
                  v15 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_39;
                  if (v15 >= v33)
                    goto LABEL_33;
                  v20 = v34[v15];
                  ++v21;
                  if (v20)
                    goto LABEL_23;
                }
              }
              v15 = v21;
            }
          }
        }
LABEL_23:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      v22 = *(_QWORD *)(v35 + 72);
      sub_21DC6A178(*(_QWORD *)(v6 + 48) + v22 * v18, (uint64_t)v5);
      sub_21DC72134();
      sub_21DC715F4();
      sub_21DC0C1D0((unint64_t *)&qword_2553AA410, MEMORY[0x24BDCEA88]);
      sub_21DC71A44();
      result = sub_21DC72158();
      v23 = -1 << *(_BYTE *)(v8 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v13 + 8 * v25);
        }
        while (v29 == -1);
        v16 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      result = sub_21DC6A178((uint64_t)v5, *(_QWORD *)(v8 + 48) + v16 * v22);
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v1 = v8;
  return result;
}

uint64_t sub_21DC65924()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA738);
  v3 = sub_21DC71EA0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_21DC72134();
      sub_21DC71B04();
      result = sub_21DC72158();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_21DC65C00(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_21DC71D5C();
  result = sub_21DC71DE0();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_21DC65C80(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_21DC649D4();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_21DC666C0();
      goto LABEL_14;
    }
    sub_21DC671A4();
  }
  v8 = *v3;
  sub_21DC72134();
  sub_21DC72140();
  result = sub_21DC72158();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_21DC720D4();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void sub_21DC65DCC(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, void (*a5)(_QWORD))
{
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v9 = *(_QWORD *)(*v5 + 16);
  v10 = *(_QWORD *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0)
    goto LABEL_14;
  v11 = v9 + 1;
  if ((a3 & 1) != 0)
  {
    sub_21DC64C88(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_21DC66854(a4);
      goto LABEL_14;
    }
    sub_21DC6741C(v11, a4);
  }
  v12 = *v5;
  v13 = sub_21DC71D5C();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    a5(0);
    v15 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
    v16 = sub_21DC71D68();

    if ((v16 & 1) != 0)
    {
LABEL_13:
      sub_21DC720D4();
      __break(1u);
    }
    else
    {
      v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v18 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
        v19 = sub_21DC71D68();

        if ((v19 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * a2) = a1;
  v21 = *(_QWORD *)(v20 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v23;
}

uint64_t sub_21DC65F50(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t *v6;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v11 = result;
  v12 = *(_QWORD *)(*v6 + 16);
  v13 = *(_QWORD *)(*v6 + 24);
  if (v13 > v12 && (a6 & 1) != 0)
    goto LABEL_22;
  if ((a6 & 1) != 0)
  {
    sub_21DC64F20();
  }
  else
  {
    if (v13 > v12)
    {
      result = (uint64_t)sub_21DC669F4();
      goto LABEL_22;
    }
    sub_21DC67690();
  }
  v14 = *v6;
  sub_21DC72134();
  swift_bridgeObjectRetain();
  sub_21DC71B04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21DC71B04();
  swift_bridgeObjectRelease();
  result = sub_21DC72158();
  v15 = -1 << *(_BYTE *)(v14 + 32);
  a5 = result & ~v15;
  v16 = v14 + 56;
  if (((*(_QWORD *)(v14 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) != 0)
  {
    v17 = ~v15;
    v18 = *(_QWORD *)(v14 + 48);
    while (1)
    {
      v19 = (_QWORD *)(v18 + 32 * a5);
      v20 = v19[2];
      v21 = v19[3];
      v22 = *v19 == v11 && v19[1] == a2;
      if (v22 || (result = sub_21DC720A4(), (result & 1) != 0))
      {
        if (v20 == a3 && v21 == a4)
          break;
        result = sub_21DC720A4();
        if ((result & 1) != 0)
          break;
      }
      a5 = (a5 + 1) & v17;
      if (((*(_QWORD *)(v16 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) == 0)
        goto LABEL_22;
    }
    result = sub_21DC720D4();
    __break(1u);
  }
LABEL_22:
  v24 = *v29;
  *(_QWORD *)(*v29 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  v25 = (uint64_t *)(*(_QWORD *)(v24 + 48) + 32 * a5);
  *v25 = v11;
  v25[1] = a2;
  v25[2] = a3;
  v25[3] = a4;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v28;
  return result;
}

uint64_t sub_21DC66134(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_21DC715F4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_21DC65258();
  }
  else
  {
    if (v12 > v11)
    {
      sub_21DC66BB4();
      goto LABEL_12;
    }
    sub_21DC67994();
  }
  v13 = *v3;
  sub_21DC0C1D0((unint64_t *)&qword_2553AA410, MEMORY[0x24BDCEA88]);
  v14 = sub_21DC71A38();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v10, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_21DC0C1D0(&qword_2553A8378, MEMORY[0x24BDCEA98]);
      v19 = sub_21DC71A8C();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_21DC720D4();
  __break(1u);
  return result;
}

uint64_t sub_21DC66328(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[2];
  uint64_t *v27;

  v7 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(*v3 + 16);
  v13 = *(_QWORD *)(*v3 + 24);
  v27 = v3;
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    v14 = v8;
    goto LABEL_14;
  }
  if ((a3 & 1) != 0)
  {
    sub_21DC655BC();
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_21DC67CB4();
LABEL_8:
    v15 = *v3;
    sub_21DC72134();
    sub_21DC715F4();
    sub_21DC0C1D0((unint64_t *)&qword_2553AA410, MEMORY[0x24BDCEA88]);
    sub_21DC71A44();
    v16 = sub_21DC72158();
    v17 = -1 << *(_BYTE *)(v15 + 32);
    a2 = v16 & ~v17;
    if (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v26[1] = v7;
      v18 = ~v17;
      v14 = v8;
      v19 = *(_QWORD *)(v8 + 72);
      while (1)
      {
        sub_21DC0C210(*(_QWORD *)(v15 + 48) + v19 * a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
        v20 = sub_21DC715D0();
        sub_21DC0C254((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
        if ((v20 & 1) != 0)
          goto LABEL_17;
        a2 = (a2 + 1) & v18;
        if (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          goto LABEL_14;
      }
    }
    goto LABEL_13;
  }
  v14 = v8;
  sub_21DC66DD8();
LABEL_14:
  v21 = *v27;
  *(_QWORD *)(*v27 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_21DC6A178(a1, *(_QWORD *)(v21 + 48) + *(_QWORD *)(v14 + 72) * a2);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  result = sub_21DC720D4();
  __break(1u);
  return result;
}

uint64_t sub_21DC66528(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_21DC65924();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_21DC66FF4();
      goto LABEL_22;
    }
    sub_21DC67FE8();
  }
  v11 = *v4;
  sub_21DC72134();
  sub_21DC71B04();
  result = sub_21DC72158();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_21DC720A4(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_21DC720D4();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_21DC720A4();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void *sub_21DC666C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA740);
  v2 = *v0;
  v3 = sub_21DC71E94();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_21DC66854(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_21DC71E94();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_21DC669F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA730);
  v2 = *v0;
  v3 = sub_21DC71E94();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_28;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_28;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = v17[2];
    v20 = v17[3];
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    v21[2] = v19;
    v21[3] = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 3;
  if (v24 >= v13)
    goto LABEL_28;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_21DC66BB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *result;
  uint64_t v11;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = sub_21DC715F4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA728);
  v7 = *v0;
  v8 = sub_21DC71E94();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v9;
    return result;
  }
  v26 = v1;
  result = (void *)(v8 + 56);
  v11 = v7 + 56;
  v12 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 56 + 8 * v12)
    result = memmove(result, (const void *)(v7 + 56), 8 * v12);
  v14 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v15 = 1 << *(_BYTE *)(v7 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v7 + 56);
  v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v18)
      goto LABEL_28;
    v23 = *(_QWORD *)(v11 + 8 * v22);
    ++v14;
    if (!v23)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v18)
        goto LABEL_28;
      v23 = *(_QWORD *)(v11 + 8 * v14);
      if (!v23)
      {
        v14 = v22 + 2;
        if (v22 + 2 >= v18)
          goto LABEL_28;
        v23 = *(_QWORD *)(v11 + 8 * v14);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v17 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_12:
    v21 = *(_QWORD *)(v3 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(_QWORD *)(v7 + 48) + v21, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v21, v6, v2);
  }
  v24 = v22 + 3;
  if (v24 >= v18)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v26;
    goto LABEL_30;
  }
  v23 = *(_QWORD *)(v11 + 8 * v24);
  if (v23)
  {
    v14 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v14 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v14 >= v18)
      goto LABEL_28;
    v23 = *(_QWORD *)(v11 + 8 * v14);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_21DC66DD8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *result;
  uint64_t v11;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA720);
  v7 = *v0;
  v8 = sub_21DC71E94();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v9;
    return result;
  }
  v26 = v1;
  result = (void *)(v8 + 56);
  v11 = v7 + 56;
  v12 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 56 + 8 * v12)
    result = memmove(result, (const void *)(v7 + 56), 8 * v12);
  v14 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v15 = 1 << *(_BYTE *)(v7 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v7 + 56);
  v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v18)
      goto LABEL_28;
    v23 = *(_QWORD *)(v11 + 8 * v22);
    ++v14;
    if (!v23)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v18)
        goto LABEL_28;
      v23 = *(_QWORD *)(v11 + 8 * v14);
      if (!v23)
      {
        v14 = v22 + 2;
        if (v22 + 2 >= v18)
          goto LABEL_28;
        v23 = *(_QWORD *)(v11 + 8 * v14);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v17 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_12:
    v21 = *(_QWORD *)(v3 + 72) * v20;
    sub_21DC0C210(*(_QWORD *)(v7 + 48) + v21, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    result = (void *)sub_21DC6A178((uint64_t)v6, *(_QWORD *)(v9 + 48) + v21);
  }
  v24 = v22 + 3;
  if (v24 >= v18)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v26;
    goto LABEL_30;
  }
  v23 = *(_QWORD *)(v11 + 8 * v24);
  if (v23)
  {
    v14 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v14 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v14 >= v18)
      goto LABEL_28;
    v23 = *(_QWORD *)(v11 + 8 * v14);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_21DC66FF4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA738);
  v2 = *v0;
  v3 = sub_21DC71E94();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_21DC671A4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA740);
  result = sub_21DC71EA0();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_21DC72134();
    sub_21DC72140();
    result = sub_21DC72158();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21DC6741C(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_21DC71EA0();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v29 = v2;
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v8 = v4 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v4 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_33;
      v19 = *(_QWORD *)(v8 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v11)
          goto LABEL_33;
        v19 = *(_QWORD *)(v8 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    v21 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    result = sub_21DC71D5C();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    result = swift_release_n();
    v3 = v29;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21DC67690()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA730);
  v3 = sub_21DC71EA0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v30 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v31 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v31)
      goto LABEL_33;
    v16 = *(_QWORD *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v31)
        goto LABEL_33;
      v16 = *(_QWORD *)(v30 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v31)
          goto LABEL_33;
        v16 = *(_QWORD *)(v30 + 8 * v10);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v14);
    v19 = *v18;
    v20 = v18[1];
    v21 = v18[2];
    v22 = v18[3];
    sub_21DC72134();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_21DC71B04();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21DC71B04();
    swift_bridgeObjectRelease();
    result = sub_21DC72158();
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v11);
    *v12 = v19;
    v12[1] = v20;
    v12[2] = v21;
    v12[3] = v22;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v30 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v31)
      goto LABEL_33;
    v16 = *(_QWORD *)(v30 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21DC67994()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  int64_t v34;

  v1 = v0;
  v2 = sub_21DC715F4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA728);
  v8 = sub_21DC71EA0();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v9;
    return result;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 56);
  v32 = v0;
  v33 = v7 + 56;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v34 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 56;
  result = swift_retain();
  v16 = 0;
  while (1)
  {
    if (v13)
    {
      v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v34)
      goto LABEL_33;
    v21 = *(_QWORD *)(v33 + 8 * v20);
    ++v16;
    if (!v21)
    {
      v16 = v20 + 1;
      if (v20 + 1 >= v34)
        goto LABEL_33;
      v21 = *(_QWORD *)(v33 + 8 * v16);
      if (!v21)
      {
        v16 = v20 + 2;
        if (v20 + 2 >= v34)
          goto LABEL_33;
        v21 = *(_QWORD *)(v33 + 8 * v16);
        if (!v21)
          break;
      }
    }
LABEL_23:
    v13 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    v23 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(_QWORD *)(v7 + 48) + v23 * v19, v2);
    sub_21DC0C1D0((unint64_t *)&qword_2553AA410, MEMORY[0x24BDCEA88]);
    result = sub_21DC71A38();
    v24 = -1 << *(_BYTE *)(v9 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v14 + 8 * v26);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v17 * v23, v6, v2);
    ++*(_QWORD *)(v9 + 16);
  }
  v22 = v20 + 3;
  if (v22 >= v34)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v32;
    goto LABEL_35;
  }
  v21 = *(_QWORD *)(v33 + 8 * v22);
  if (v21)
  {
    v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v16 >= v34)
      goto LABEL_33;
    v21 = *(_QWORD *)(v33 + 8 * v16);
    ++v22;
    if (v21)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21DC67CB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;

  v1 = v0;
  v2 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v34 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA720);
  v7 = sub_21DC71EA0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v34 + 72);
    sub_21DC0C210(*(_QWORD *)(v6 + 48) + v22 * v18, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    sub_21DC72134();
    sub_21DC715F4();
    sub_21DC0C1D0((unint64_t *)&qword_2553AA410, MEMORY[0x24BDCEA88]);
    sub_21DC71A44();
    result = sub_21DC72158();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = sub_21DC6A178((uint64_t)v5, *(_QWORD *)(v8 + 48) + v16 * v22);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21DC67FE8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553AA738);
  v3 = sub_21DC71EA0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_21DC72134();
    swift_bridgeObjectRetain();
    sub_21DC71B04();
    result = sub_21DC72158();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21DC68294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v10;
  char v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v5 = v4;
  swift_bridgeObjectRetain();
  v10 = sub_21DC0A5CC(a1, a2, a3, a4);
  LOBYTE(a3) = v11;
  swift_bridgeObjectRelease();
  if ((a3 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v5;
  v16 = *v5;
  *v5 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_21DC5D4D4();
    v13 = v16;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v10);
  sub_21DC68AF8(v10, v13);
  *v5 = v13;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_21DC6838C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v10;
  char v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v5 = v4;
  swift_bridgeObjectRetain();
  v10 = sub_21DC0A5CC(a1, a2, a3, a4);
  LOBYTE(a4) = v11;
  swift_bridgeObjectRelease();
  if ((a4 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v5;
  v16 = *v5;
  *v5 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_21DC5D690();
    v13 = v16;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 32 * v10);
  sub_21DC68D08(v10, v13);
  *v5 = v13;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_21DC684A8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_21DC0A4BC(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_21DC5E134();
    v7 = v10;
  }

  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_21DC68F1C(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_21DC68578(unint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    a1 = sub_21DC0A4BC(a1);
    v13 = v12;
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v9 = *v2;
      v17 = *v2;
      *v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_21DC5E2D4();
        v9 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0)
    v5 = v4;
  else
    v5 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v6 = (id)a1;
  v7 = sub_21DC71F90();

  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  v8 = sub_21DC71E28();
  v9 = sub_21DC5CAD8(v5, v8);
  swift_retain();
  a1 = sub_21DC0A4BC((uint64_t)v6);
  v11 = v10;
  swift_release();
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  v15 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * a1);
  sub_21DC68F1C(a1, v9);
  *v2 = v9;
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_21DC686C4(uint64_t a1)
{
  return sub_21DC687E4(a1, (uint64_t (*)(uint64_t))sub_21DC0A6A8, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair, (void (*)(uint64_t, uint64_t))sub_21DC690D0, (void (*)(void))sub_21DC5E484);
}

uint64_t sub_21DC686E8(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_21DC0A6A8(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_21DC5E498();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = type metadata accessor for EventTypeIdPair();
  sub_21DC0C254(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_21DC690D0(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_21DC687C0(uint64_t a1)
{
  return sub_21DC687E4(a1, (uint64_t (*)(uint64_t))sub_21DC0A7A4, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID, (void (*)(uint64_t, uint64_t))sub_21DC69630, (void (*)(void))sub_21DC5EAB0);
}

uint64_t sub_21DC687E4(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(_QWORD), void (*a4)(uint64_t, uint64_t), void (*a5)(void))
{
  uint64_t *v5;
  uint64_t *v10;
  uint64_t v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v10 = v5;
  swift_bridgeObjectRetain();
  v12 = a2(a1);
  LOBYTE(a2) = v13;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = *v10;
  v20 = *v10;
  *v10 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a5();
    v15 = v20;
  }
  v16 = *(_QWORD *)(v15 + 48);
  v17 = a3(0);
  sub_21DC0C254(v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * v12, a3);
  v18 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v12);
  a4(v12, v15);
  *v10 = v15;
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_21DC688E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_21DC0A7A4(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v16 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_21DC5ECEC();
      v9 = v16;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = type metadata accessor for SiriConversationPublisher.GraphUUID();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(_QWORD *)(v12 + 72) * v6;
    sub_21DC0C254(v10 + v13, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
    sub_21DC6A178(*(_QWORD *)(v9 + 56) + v13, a2);
    sub_21DC698EC(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
  }
  else
  {
    v15 = type metadata accessor for SiriConversationPublisher.GraphUUID();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 1, 1, v15);
  }
}

double sub_21DC68A08@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_21DC0A568(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_21DC5F178();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_21DC13D80((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_21DC69BC4(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

unint64_t sub_21DC68AF8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_21DC71DD4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_21DC72134();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21DC71B04();
        swift_bridgeObjectRetain();
        sub_21DC71B04();
        swift_bridgeObjectRelease();
        v9 = sub_21DC72158();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 32 * v3);
          v13 = (_OWORD *)(v11 + 32 * v6);
          if (v3 != v6 || v12 >= v13 + 2)
          {
            v14 = v13[1];
            *v12 = *v13;
            v12[1] = v14;
          }
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_QWORD *)(v15 + 8 * v3);
          v17 = (_QWORD *)(v15 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
          {
            *v16 = *v17;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21DC68D08(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_21DC71DD4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_21DC72134();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21DC71B04();
        swift_bridgeObjectRetain();
        sub_21DC71B04();
        swift_bridgeObjectRelease();
        v10 = sub_21DC72158();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 32 * v3);
          v14 = (_OWORD *)(v12 + 32 * v6);
          if (v3 != v6 || v13 >= v14 + 2)
          {
            v15 = v14[1];
            *v13 = *v14;
            v13[1] = v15;
          }
          v16 = *(_QWORD *)(a2 + 56);
          v17 = (_OWORD *)(v16 + 32 * v3);
          v18 = (_OWORD *)(v16 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= v18 + 2))
          {
            v9 = v18[1];
            *v17 = *v18;
            v17[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_21DC68F1C(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_21DC71DD4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v11 = sub_21DC71D5C();

        v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(a2 + 48);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1)
              *v16 = *v17;
            v18 = *(_QWORD *)(a2 + 56);
            v19 = (_QWORD *)(v18 + 8 * v3);
            v20 = (_QWORD *)(v18 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v19 >= v20 + 1))
            {
              *v19 = *v20;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v23 = *v21;
    v22 = (-1 << a1) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_21DC690D0(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v33 = type metadata accessor for EventTypeIdPair();
  v4 = *(_QWORD *)(v33 - 8);
  result = MEMORY[0x24BDAC7A8](v33, v5);
  v31 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_21DC71DD4();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v30 = (result + 1) & v11;
      v12 = *(_QWORD *)(v4 + 72);
      v32 = v11;
      v13 = (uint64_t)v31;
      do
      {
        v14 = v12;
        v15 = v12 * v10;
        sub_21DC0C210(*(_QWORD *)(a2 + 48) + v12 * v10, v13, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair);
        sub_21DC72134();
        sub_21DC72140();
        sub_21DC715F4();
        sub_21DC0C1D0((unint64_t *)&qword_2553AA410, MEMORY[0x24BDCEA88]);
        sub_21DC71A44();
        v16 = sub_21DC72158();
        result = sub_21DC0C254(v13, (uint64_t (*)(_QWORD))type metadata accessor for EventTypeIdPair);
        v17 = v32;
        v18 = v16 & v32;
        if (a1 >= (uint64_t)v30)
        {
          if (v18 < v30)
          {
            v12 = v14;
          }
          else
          {
            v12 = v14;
            if (a1 >= (uint64_t)v18)
              goto LABEL_12;
          }
        }
        else
        {
          v12 = v14;
          if (v18 >= v30 || a1 >= (uint64_t)v18)
          {
LABEL_12:
            v19 = *(_QWORD *)(a2 + 48);
            result = v19 + v12 * a1;
            if (v12 * a1 < v15 || result >= v19 + v15 + v12)
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_17:
              v17 = v32;
            }
            else if (v12 * a1 != v15)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_17;
            }
            v20 = *(_QWORD *)(a2 + 56);
            v21 = (_QWORD *)(v20 + 8 * a1);
            v22 = (_QWORD *)(v20 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v21 >= v22 + 1))
            {
              *v21 = *v22;
              a1 = v10;
            }
          }
        }
        v10 = (v10 + 1) & v17;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v23 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v24 = *v23;
    v25 = (-1 << a1) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v25 = *v23;
    v24 = (-1 << a1) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21DC693A4(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = sub_21DC715F4();
  v35 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2 + 64;
  v10 = -1 << *(_BYTE *)(a2 + 32);
  v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(_QWORD *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    v12 = ~v10;
    result = sub_21DC71DD4();
    if ((*(_QWORD *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      v34 = (result + 1) & v12;
      v13 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v14 = v12;
      do
      {
        v15 = v13;
        v16 = v13 * v11;
        v17 = v14;
        v33(v8, *(_QWORD *)(a2 + 48) + v13 * v11, v4);
        sub_21DC0C1D0((unint64_t *)&qword_2553AA410, MEMORY[0x24BDCEA88]);
        v18 = sub_21DC71A38();
        result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v8, v4);
        v14 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_17:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            if (v15 * a1 < v16 || (v13 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_22:
              v14 = v17;
              v13 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_22;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_QWORD *)(v23 + 8 * a1);
            v25 = (_QWORD *)(v23 + 8 * v11);
            if (a1 != v11 || (a1 = v11, v24 >= v25 + 1))
            {
              *v24 = *v25;
              a1 = v11;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_17;
        }
        v13 = v15;
LABEL_5:
        v11 = (v11 + 1) & v14;
      }
      while (((*(_QWORD *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    v26 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21DC69630(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v29 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v4 = *(_QWORD *)(v29 - 8);
  result = MEMORY[0x24BDAC7A8](v29, v5);
  v31 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v32 = a2 + 64;
    result = sub_21DC71DD4();
    v11 = v32;
    if ((*(_QWORD *)(v32 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (result + 1) & v10;
      v13 = *(_QWORD *)(v4 + 72);
      v30 = v13;
      v14 = (uint64_t)v31;
      do
      {
        v15 = v13 * v9;
        sub_21DC0C210(*(_QWORD *)(a2 + 48) + v13 * v9, v14, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
        sub_21DC72134();
        sub_21DC715F4();
        sub_21DC0C1D0((unint64_t *)&qword_2553AA410, MEMORY[0x24BDCEA88]);
        sub_21DC71A44();
        v16 = sub_21DC72158();
        result = sub_21DC0C254(v14, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
        v17 = v16 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v17 < v12)
          {
            v11 = v32;
            v13 = v30;
            goto LABEL_5;
          }
          v13 = v30;
          if (a1 >= (uint64_t)v17)
            goto LABEL_12;
        }
        else
        {
          v13 = v30;
          if (v17 >= v12 || a1 >= (uint64_t)v17)
          {
LABEL_12:
            v18 = *(_QWORD *)(a2 + 48);
            result = v18 + v13 * a1;
            if (v13 * a1 < v15 || result >= v18 + v15 + v13)
            {
              result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v13 * a1 != v15)
            {
              result = swift_arrayInitWithTakeBackToFront();
            }
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_QWORD *)(v19 + 8 * a1);
            v21 = (_QWORD *)(v19 + 8 * v9);
            v11 = v32;
            if (a1 != v9 || (a1 = v9, v20 >= v21 + 1))
            {
              *v20 = *v21;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        v11 = v32;
LABEL_5:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v11 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v22 = (uint64_t *)(v11 + 8 * ((unint64_t)a1 >> 6));
    v23 = *v22;
    v24 = (-1 << a1) - 1;
  }
  else
  {
    v22 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    v24 = *v22;
    v23 = (-1 << a1) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21DC698EC(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;

  v26 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  v4 = *(_QWORD *)(v26 - 8);
  result = MEMORY[0x24BDAC7A8](v26, v5);
  v29 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_21DC71DD4();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v27 = a2;
      v28 = (result + 1) & v11;
      v12 = *(_QWORD *)(v4 + 72);
      v13 = (uint64_t)v29;
      do
      {
        v14 = v12 * v10;
        sub_21DC0C210(*(_QWORD *)(a2 + 48) + v12 * v10, v13, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
        sub_21DC72134();
        sub_21DC715F4();
        sub_21DC0C1D0((unint64_t *)&qword_2553AA410, MEMORY[0x24BDCEA88]);
        sub_21DC71A44();
        v15 = sub_21DC72158();
        result = sub_21DC0C254(v13, (uint64_t (*)(_QWORD))type metadata accessor for SiriConversationPublisher.GraphUUID);
        v16 = v15 & v11;
        if (a1 >= (uint64_t)v28)
        {
          if (v16 >= v28 && a1 >= (uint64_t)v16)
          {
LABEL_12:
            a2 = v27;
            v17 = v12 * a1;
            if (v12 * a1 < v14
              || *(_QWORD *)(v27 + 48) + v12 * a1 >= (unint64_t)(*(_QWORD *)(v27 + 48) + v14 + v12))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v17 != v14)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v18 = *(_QWORD *)(a2 + 56);
            result = v18 + v17;
            if (v17 < v14 || result >= v18 + v14 + v12)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
            }
            else
            {
              a1 = v10;
              if (v17 != v14)
              {
                result = swift_arrayInitWithTakeBackToFront();
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v16 >= v28 || a1 >= (uint64_t)v16)
        {
          goto LABEL_12;
        }
        a2 = v27;
LABEL_5:
        v10 = (v10 + 1) & v11;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v19 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v20 = *v19;
    v21 = (-1 << a1) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v21 = *v19;
    v20 = (-1 << a1) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21DC69BC4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_21DC71DD4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_21DC72134();
        swift_bridgeObjectRetain();
        sub_21DC71B04();
        v10 = sub_21DC72158();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21DC69D98()
{
  unint64_t result;

  result = qword_2553AA718;
  if (!qword_2553AA718)
  {
    result = MEMORY[0x22079D964](MEMORY[0x24BEE45A0], MEMORY[0x24BEE4568]);
    atomic_store(result, (unint64_t *)&qword_2553AA718);
  }
  return result;
}

uint64_t destroy for SiriIdentifiers()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SiriIdentifiers(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SiriIdentifiers(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for SiriIdentifiers(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriIdentifiers(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 112);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriIdentifiers(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 112) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriIdentifiers()
{
  return &type metadata for SiriIdentifiers;
}

uint64_t sub_21DC6A178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SiriConversationPublisher.GraphUUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id BiomeEventGraph.__allocating_init(timestamp:events:)(uint64_t a1, double a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return BiomeEventGraph.init(timestamp:events:)(a1, a2);
}

double BiomeEventGraph.timestamp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph_timestamp);
}

uint64_t sub_21DC6A20C()
{
  return sub_21DC7151C();
}

id BiomeEventGraph.init(timestamp:events:)(uint64_t a1, double a2)
{
  void *v2;
  char *v5;
  objc_super v7;

  sub_21DC208FC();
  v5 = v2;
  sub_21DC71D80();
  sub_21DC719E4();
  *(_QWORD *)&v5[OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___events] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___selfEvents] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___transcriptEvents] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___gfiEvents] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___telemetryEvents] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___selfEventGraphs] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___siriTurns] = 0;
  *(double *)&v5[OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph_timestamp] = a2;
  *(_QWORD *)&v5[OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph_eventsInternal] = a1;

  v7.receiver = v5;
  v7.super_class = (Class)type metadata accessor for BiomeEventGraph();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t type metadata accessor for BiomeEventGraph()
{
  uint64_t result;

  result = qword_2553AA7C8;
  if (!qword_2553AA7C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21DC6A38C()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___events))
  {
    v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___events);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph_eventsInternal);
    *(_QWORD *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___events) = v1;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_21DC6A3EC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___events) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_21DC6A404(uint64_t *a1))(_QWORD *a1, uint64_t a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_21DC6A38C();
  return sub_21DC6A438;
}

uint64_t sub_21DC6A438(_QWORD *a1, uint64_t a2)
{
  return sub_21DC6BB98(a1, a2, &OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___events);
}

uint64_t sub_21DC6A444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;

  v1 = v0;
  v2 = OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___selfEvents;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___selfEvents);
  if (v3)
  {
    swift_bridgeObjectRetain();
    return v3;
  }
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph_eventsInternal);
  v15 = MEMORY[0x24BEE4AF8];
  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v5)
      goto LABEL_5;
LABEL_20:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15 < 0 || (v15 & 0x4000000000000000) != 0)
    {
      v14 = swift_bridgeObjectRetain();
      v12 = (uint64_t)sub_21DC09488(v14);
      swift_bridgeObjectRelease();
    }
    else
    {
      v12 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    v15 = v12;
    sub_21DC280E8(&v15);
    swift_bridgeObjectRelease();
    v3 = v15;
    *(_QWORD *)(v1 + v2) = v15;
    swift_retain();
    swift_bridgeObjectRelease();
    return v3;
  }
  swift_bridgeObjectRetain_n();
  v5 = sub_21DC71FCC();
  if (!v5)
    goto LABEL_20;
LABEL_5:
  if (v5 >= 1)
  {
    if ((v4 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v5; ++i)
      {
        v7 = *(_QWORD *)(MEMORY[0x22079D208](i, v4) + OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_selfEvent);
        swift_retain();
        v8 = swift_unknownObjectRelease();
        if (v7)
        {
          MEMORY[0x22079CE84](v8);
          if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_21DC71BA0();
          sub_21DC71BC4();
          sub_21DC71B94();
        }
      }
    }
    else
    {
      v9 = 0;
      v10 = OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_selfEvent;
      do
      {
        if (*(_QWORD *)(*(_QWORD *)(v4 + 8 * v9 + 32) + v10))
        {
          v11 = swift_retain();
          MEMORY[0x22079CE84](v11);
          if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_21DC71BA0();
          sub_21DC71BC4();
          sub_21DC71B94();
          v10 = OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_selfEvent;
        }
        ++v9;
      }
      while (v5 != v9);
    }
    goto LABEL_20;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_21DC6A6C8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___selfEvents) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_21DC6A6E0(uint64_t *a1))(_QWORD *a1, uint64_t a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_21DC6A444();
  return sub_21DC6A714;
}

uint64_t sub_21DC6A714(_QWORD *a1, uint64_t a2)
{
  return sub_21DC6BB98(a1, a2, &OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___selfEvents);
}

uint64_t sub_21DC6A720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9FE8);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoEvent();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)&v26 - v12;
  v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___transcriptEvents);
  if (v14)
  {
    swift_bridgeObjectRetain();
    return v14;
  }
  v27 = OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___transcriptEvents;
  v15 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph_eventsInternal);
  if (!(v15 >> 62))
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    v28 = v0;
    if (v16)
      goto LABEL_5;
LABEL_19:
    v18 = MEMORY[0x24BEE4AF8];
LABEL_20:
    swift_bridgeObjectRelease_n();
    v31 = v18;
    swift_bridgeObjectRetain();
    sub_21DC6BD18((uint64_t *)&v31, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptProtoEvent, (uint64_t (*)(uint64_t))sub_21DC5F828, sub_21DC6BDA8);
    swift_bridgeObjectRelease();
    v14 = v31;
    *(_QWORD *)(v28 + v27) = v31;
    swift_retain();
    swift_bridgeObjectRelease();
    return v14;
  }
  swift_bridgeObjectRetain_n();
  v16 = sub_21DC71FCC();
  v28 = v0;
  if (!v16)
    goto LABEL_19;
LABEL_5:
  v29 = v13;
  v30 = v5;
  if (v16 >= 1)
  {
    v17 = 0;
    v18 = MEMORY[0x24BEE4AF8];
    do
    {
      if ((v15 & 0xC000000000000001) != 0)
        v19 = (id)MEMORY[0x22079D208](v17, v15);
      else
        v19 = *(id *)(v15 + 8 * v17 + 32);
      v20 = v19;
      v21 = (uint64_t)v19 + OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_transcriptProto;
      swift_beginAccess();
      sub_21DC07CC0(v21, (uint64_t)v4, &qword_2553A9FE8);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v30) == 1)
      {
        sub_21DC07C84((uint64_t)v4, &qword_2553A9FE8);
      }
      else
      {
        v22 = (uint64_t)v29;
        sub_21DC22CA0((uint64_t)v4, (uint64_t)v29);
        sub_21DC22CA0(v22, (uint64_t)v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = sub_21DC15600(0, *(_QWORD *)(v18 + 16) + 1, 1, v18);
        v24 = *(_QWORD *)(v18 + 16);
        v23 = *(_QWORD *)(v18 + 24);
        if (v24 >= v23 >> 1)
          v18 = sub_21DC15600(v23 > 1, v24 + 1, 1, v18);
        *(_QWORD *)(v18 + 16) = v24 + 1;
        sub_21DC22CA0((uint64_t)v10, v18+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v24);
      }
      ++v17;
    }
    while (v16 != v17);
    goto LABEL_20;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_21DC6AA44(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___transcriptEvents) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_21DC6AA5C(uint64_t *a1))(_QWORD *a1, uint64_t a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_21DC6A720();
  return sub_21DC6AA90;
}

uint64_t sub_21DC6AA90(_QWORD *a1, uint64_t a2)
{
  return sub_21DC6BB98(a1, a2, &OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___transcriptEvents);
}

uint64_t sub_21DC6AA9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8FB8);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21DC719B4();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)&v30 - v11;
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___gfiEvents);
  if (v13)
  {
    swift_bridgeObjectRetain();
    return v13;
  }
  v33 = v10;
  v30 = OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___gfiEvents;
  v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph_eventsInternal);
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v15 = sub_21DC71FCC();
  }
  else
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
  }
  v16 = v33;
  v31 = v0;
  if (!v15)
  {
    v19 = MEMORY[0x24BEE4AF8];
LABEL_20:
    swift_bridgeObjectRelease_n();
    v35 = v19;
    swift_bridgeObjectRetain();
    sub_21DC6BD18((uint64_t *)&v35, (uint64_t (*)(_QWORD))MEMORY[0x24BE5A510], (uint64_t (*)(uint64_t))sub_21DC5F83C, sub_21DC6C738);
    swift_bridgeObjectRelease();
    v13 = v35;
    *(_QWORD *)(v31 + v30) = v35;
    swift_retain();
    swift_bridgeObjectRelease();
    return v13;
  }
  v32 = v12;
  v34 = v15;
  if (v15 >= 1)
  {
    v17 = 0;
    v18 = v14 & 0xC000000000000001;
    v19 = MEMORY[0x24BEE4AF8];
    v20 = v14;
    do
    {
      if (v18)
        v21 = (id)MEMORY[0x22079D208](v17, v14);
      else
        v21 = *(id *)(v14 + 8 * v17 + 32);
      v22 = v21;
      v23 = (uint64_t)v21 + OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_gfiEvent;
      swift_beginAccess();
      sub_21DC07CC0(v23, (uint64_t)v4, &qword_2553A8FB8);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        sub_21DC07C84((uint64_t)v4, &qword_2553A8FB8);
      }
      else
      {
        v24 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v25 = v32;
        v24(v32, v4, v5);
        v24(v16, v25, v5);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v19 = sub_21DC15614(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
        v27 = *(_QWORD *)(v19 + 16);
        v26 = *(_QWORD *)(v19 + 24);
        if (v27 >= v26 >> 1)
          v19 = sub_21DC15614(v26 > 1, v27 + 1, 1, v19);
        *(_QWORD *)(v19 + 16) = v27 + 1;
        v28 = v19
            + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
            + *(_QWORD *)(v6 + 72) * v27;
        v16 = v33;
        v24((char *)v28, v33, v5);
      }
      ++v17;
      v14 = v20;
    }
    while (v34 != v17);
    goto LABEL_20;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_21DC6ADE8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___gfiEvents) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_21DC6AE00(uint64_t *a1))(_QWORD *a1, uint64_t a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_21DC6AA9C();
  return sub_21DC6AE34;
}

uint64_t sub_21DC6AE34(_QWORD *a1, uint64_t a2)
{
  return sub_21DC6BB98(a1, a2, &OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___gfiEvents);
}

uint64_t sub_21DC6AE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8688);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21DC718A0();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)&v30 - v11;
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___telemetryEvents);
  if (v13)
  {
    swift_bridgeObjectRetain();
    return v13;
  }
  v33 = v10;
  v30 = OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___telemetryEvents;
  v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph_eventsInternal);
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v15 = sub_21DC71FCC();
  }
  else
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
  }
  v16 = v33;
  v31 = v0;
  if (!v15)
  {
    v19 = MEMORY[0x24BEE4AF8];
LABEL_20:
    swift_bridgeObjectRelease_n();
    v35 = v19;
    swift_bridgeObjectRetain();
    sub_21DC6BD18((uint64_t *)&v35, (uint64_t (*)(_QWORD))MEMORY[0x24BE587A0], (uint64_t (*)(uint64_t))sub_21DC5F850, sub_21DC6D184);
    swift_bridgeObjectRelease();
    v13 = v35;
    *(_QWORD *)(v31 + v30) = v35;
    swift_retain();
    swift_bridgeObjectRelease();
    return v13;
  }
  v32 = v12;
  v34 = v15;
  if (v15 >= 1)
  {
    v17 = 0;
    v18 = v14 & 0xC000000000000001;
    v19 = MEMORY[0x24BEE4AF8];
    v20 = v14;
    do
    {
      if (v18)
        v21 = (id)MEMORY[0x22079D208](v17, v14);
      else
        v21 = *(id *)(v14 + 8 * v17 + 32);
      v22 = v21;
      v23 = (uint64_t)v21 + OBJC_IVAR____TtC26AIMLInstrumentationStreams11AnteroEvent_telemetryEvent;
      swift_beginAccess();
      sub_21DC07CC0(v23, (uint64_t)v4, &qword_2553A8688);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        sub_21DC07C84((uint64_t)v4, &qword_2553A8688);
      }
      else
      {
        v24 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v25 = v32;
        v24(v32, v4, v5);
        v24(v16, v25, v5);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v19 = sub_21DC15628(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
        v27 = *(_QWORD *)(v19 + 16);
        v26 = *(_QWORD *)(v19 + 24);
        if (v27 >= v26 >> 1)
          v19 = sub_21DC15628(v26 > 1, v27 + 1, 1, v19);
        *(_QWORD *)(v19 + 16) = v27 + 1;
        v28 = v19
            + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
            + *(_QWORD *)(v6 + 72) * v27;
        v16 = v33;
        v24((char *)v28, v33, v5);
      }
      ++v17;
      v14 = v20;
    }
    while (v34 != v17);
    goto LABEL_20;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_21DC6B18C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___telemetryEvents) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_21DC6B1A4(uint64_t *a1))(_QWORD *a1, uint64_t a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_21DC6AE40();
  return sub_21DC6B1D8;
}

uint64_t sub_21DC6B1D8(_QWORD *a1, uint64_t a2)
{
  return sub_21DC6BB98(a1, a2, &OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___telemetryEvents);
}

uint64_t sub_21DC6B1E4()
{
  return sub_21DC26334(&OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___selfEventGraphs, (uint64_t (*)(uint64_t))sub_21DC6B1F8);
}

uint64_t sub_21DC6B1F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  id v30;
  id v31;
  id v32;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  double v59;
  id v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  unint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21DC715F4();
  v64 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v65 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v8);
  v63 = (char *)&v50 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9920);
  inited = swift_initStackObject();
  v11 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 16) = sub_21DC2A5D0(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(inited + 24) = sub_21DC2A6D8(v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9928);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_21DC2A7EC(v11);
  *(_QWORD *)(inited + 32) = v12;
  *(_QWORD *)(inited + 40) = sub_21DC2A6E4(v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9930);
  v13 = swift_initStackObject();
  *(_QWORD *)(v13 + 16) = sub_21DC2A2A8(v11);
  v14 = sub_21DC2A43C(v11);
  v57 = v13;
  *(_QWORD *)(v13 + 24) = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A9938);
  v15 = swift_initStackObject();
  *(_QWORD *)(v15 + 16) = sub_21DC2A260(v11);
  v16 = sub_21DC2A284(v11);
  v51 = v15;
  *(_QWORD *)(v15 + 24) = v16;
  v17 = sub_21DC6A444();
  v69 = v11;
  if (!(v17 >> 62))
  {
    if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_41:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
LABEL_40:
  if (!sub_21DC71FCC())
    goto LABEL_41;
LABEL_3:
  sub_21DC38B0C(v17, inited, v57, v51);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v18 = *(_QWORD *)(inited + 16);
  swift_bridgeObjectRetain_n();
  v19 = sub_21DC09690(v18);
  swift_bridgeObjectRelease();
  v68 = v19;
  v20 = 0;
  sub_21DC341B4(&v68);
  swift_bridgeObjectRelease();
  v17 = (unint64_t)v68;
  v21 = sub_21DC32868((uint64_t)v68);
  swift_release();
  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v17 = v21;
    else
      v17 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v22 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
    if (v22)
      goto LABEL_5;
    goto LABEL_46;
  }
  v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v22)
  {
LABEL_46:
    swift_release();
    swift_bridgeObjectRelease();
    v48 = MEMORY[0x24BEE4AF8];
LABEL_47:
    swift_release();
    swift_release();
    return v48;
  }
LABEL_5:
  v23 = 0;
  v58 = v21 & 0xC000000000000001;
  v53 = v21 & 0xFFFFFFFFFFFFFF8;
  v52 = v21 + 32;
  v56 = inited;
  v55 = v21;
  v54 = v22;
  v67 = v4;
  while (1)
  {
    if (v58)
    {
      v32 = (id)MEMORY[0x22079D208](v23, v21);
    }
    else
    {
      if (v23 >= *(_QWORD *)(v53 + 16))
        goto LABEL_39;
      v32 = *(id *)(v52 + 8 * v23);
    }
    v31 = v32;
    if (__OFADD__(v23++, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v17 = inited;
    v34 = sub_21DC55A3C(v32);
    if (v35)
      break;
LABEL_10:

    if (v23 == v22)
    {
      swift_release();
      swift_bridgeObjectRelease();
      v48 = v69;
      goto LABEL_47;
    }
  }
  v36 = v35;
  v59 = *(double *)&v34;
  if (v35 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v37 = sub_21DC71FCC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v37 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v60 = v31;
  v61 = v23;
  v62 = v20;
  if (!v37)
  {
    v24 = MEMORY[0x24BEE4AF8];
LABEL_7:
    v25 = v59;
    swift_bridgeObjectRelease();
    v26 = sub_21DC4A770(v24);
    swift_bridgeObjectRelease();
    v27 = v57;
    swift_retain();
    v20 = v62;
    v28 = sub_21DC700A0(v26, v27);
    swift_bridgeObjectRelease();
    swift_release();
    v68 = (_QWORD *)v36;
    sub_21DC52E58(v28);
    v29 = v68;
    v30 = objc_allocWithZone((Class)type metadata accessor for EventGraph());
    v31 = EventGraph.init(timestamp:events:)((uint64_t)v29, v25);
    v17 = (unint64_t)&v69;
    MEMORY[0x22079CE84]();
    if (*(_QWORD *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_21DC71BA0();
    sub_21DC71BC4();
    sub_21DC71B94();

    inited = v56;
    v21 = v55;
    v22 = v54;
    v23 = v61;
    goto LABEL_10;
  }
  v4 = v37;
  v66 = v36 & 0xC000000000000001;
  v38 = 4;
  v24 = MEMORY[0x24BEE4AF8];
  inited = v64;
  while (1)
  {
    v17 = v38 - 4;
    if (v66)
    {
      MEMORY[0x22079D208](v38 - 4, v36);
      v39 = v38 - 3;
      if (__OFADD__(v17, 1))
        goto LABEL_37;
    }
    else
    {
      swift_retain();
      v39 = v38 - 3;
      if (__OFADD__(v17, 1))
      {
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
    }
    v40 = sub_21DC71714();
    if (!v40)
      break;
    v41 = (void *)v40;
    sub_21DC7178C();

    v42 = v67;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(inited + 56))(v3, 0, 1, v67);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(inited + 48))(v3, 1, v42) == 1)
    {
      sub_21DC07C84((uint64_t)v3, (uint64_t *)&unk_2553A98F0);
    }
    else
    {
      v43 = *(void (**)(char *, char *, uint64_t))(inited + 32);
      v44 = v63;
      v43(v63, v3, v42);
      v43(v65, v44, v42);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v24 = sub_21DC1509C(0, *(_QWORD *)(v24 + 16) + 1, 1, v24);
      v46 = *(_QWORD *)(v24 + 16);
      v45 = *(_QWORD *)(v24 + 24);
      if (v46 >= v45 >> 1)
        v24 = sub_21DC1509C(v45 > 1, v46 + 1, 1, v24);
      *(_QWORD *)(v24 + 16) = v46 + 1;
      v47 = v24
          + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))
          + *(_QWORD *)(v64 + 72) * v46;
      inited = v64;
      v43((char *)v47, v65, v67);
    }
    ++v38;
    if (v39 == v4)
      goto LABEL_7;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_21DC6B95C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___selfEventGraphs) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_21DC6B974(uint64_t *a1))(_QWORD *a1, uint64_t a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_21DC6B1E4();
  return sub_21DC6B9A8;
}

uint64_t sub_21DC6B9A8(_QWORD *a1, uint64_t a2)
{
  return sub_21DC6BB98(a1, a2, &OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___selfEventGraphs);
}

uint64_t sub_21DC6B9B4()
{
  return sub_21DC26334(&OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___siriTurns, (uint64_t (*)(uint64_t))sub_21DC6B9C8);
}

uint64_t sub_21DC6B9C8()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t i;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v0 = sub_21DC6B1E4();
  v1 = v0;
  v9 = MEMORY[0x24BEE4AF8];
  if (!(v0 >> 62))
  {
    v2 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x24BEE4AF8];
LABEL_16:
    swift_bridgeObjectRelease();
    return v8;
  }
  swift_bridgeObjectRetain();
  result = sub_21DC71FCC();
  v2 = result;
  if (!result)
    goto LABEL_15;
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x22079D208](i, v1);
      else
        v5 = *(id *)(v1 + 8 * i + 32);
      v6 = v5;
      v7 = objc_allocWithZone((Class)type metadata accessor for SiriTurn());
      if (SiriTurn.init(eventGraph:)(v6))
      {
        MEMORY[0x22079CE84]();
        if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_21DC71BA0();
        sub_21DC71BC4();
        sub_21DC71B94();
      }
    }
    swift_bridgeObjectRelease();
    v8 = v9;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC6BB40(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___siriTurns) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_21DC6BB58(uint64_t *a1))(_QWORD *a1, uint64_t a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_21DC6B9B4();
  return sub_21DC6BB8C;
}

uint64_t sub_21DC6BB8C(_QWORD *a1, uint64_t a2)
{
  return sub_21DC6BB98(a1, a2, &OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___siriTurns);
}

uint64_t sub_21DC6BB98(_QWORD *a1, uint64_t a2, _QWORD *a3)
{
  *(_QWORD *)(a1[1] + *a3) = *a1;
  return swift_bridgeObjectRelease();
}

id BiomeEventGraph.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BiomeEventGraph.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BiomeEventGraph.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BiomeEventGraph();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_21DC6BD18(uint64_t *a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t), uint64_t (*a4)(_QWORD *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v7 = *(_QWORD *)(a2(0) - 8);
  v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v8 = a3(v8);
  v9 = *(_QWORD *)(v8 + 16);
  v11[0] = v8 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v11[1] = v9;
  result = a4(v11);
  *a1 = v8;
  return result;
}

uint64_t sub_21DC6BDA8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v69;
  unint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  char v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  BOOL v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  unint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;

  v2 = v1;
  v4 = type metadata accessor for TranscriptProtoEvent();
  v137 = *(_QWORD *)(v4 - 8);
  v138 = v4;
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v134 = (uint64_t)&v129 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v144 = (uint64_t)&v129 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v141 = (uint64_t)&v129 - v13;
  MEMORY[0x24BDAC7A8](v12, v14);
  v140 = (uint64_t)&v129 - v15;
  v16 = a1[1];
  result = sub_21DC72068();
  if (result >= v16)
  {
    if (v16 < 0)
      goto LABEL_142;
    if (v16)
      return sub_21DC6E1C0(0, v16, 1, a1);
    return result;
  }
  if (v16 >= 0)
    v18 = v16;
  else
    v18 = v16 + 1;
  if (v16 < -1)
    goto LABEL_150;
  v131 = result;
  if (v16 < 2)
  {
    v22 = MEMORY[0x24BEE4AF8];
    v136 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v137 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80));
    if (v16 != 1)
    {
      v25 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v24 = (char *)MEMORY[0x24BEE4AF8];
LABEL_107:
      v130 = v22;
      if (v25 >= 2)
      {
        v121 = *a1;
        do
        {
          v122 = v25 - 2;
          if (v25 < 2)
            goto LABEL_137;
          if (!v121)
            goto LABEL_149;
          v123 = v24;
          v124 = v24 + 32;
          v125 = *(_QWORD *)&v24[16 * v122 + 32];
          v126 = *(_QWORD *)&v24[16 * v25 + 24];
          sub_21DC6EA50(v121 + *(_QWORD *)(v137 + 72) * v125, v121 + *(_QWORD *)(v137 + 72) * *(_QWORD *)&v124[16 * v25 - 16], v121 + *(_QWORD *)(v137 + 72) * v126, v136);
          if (v2)
            break;
          if (v126 < v125)
            goto LABEL_138;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v123 = sub_21DC5B7D4((uint64_t)v123);
          if (v122 >= *((_QWORD *)v123 + 2))
            goto LABEL_139;
          v127 = &v123[16 * v122 + 32];
          *(_QWORD *)v127 = v125;
          *((_QWORD *)v127 + 1) = v126;
          v128 = *((_QWORD *)v123 + 2);
          if (v25 > v128)
            goto LABEL_140;
          v24 = v123;
          memmove(&v123[16 * v25 + 16], &v123[16 * v25 + 32], 16 * (v128 - v25));
          *((_QWORD *)v123 + 2) = v128 - 1;
          v25 = v128 - 1;
        }
        while (v128 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v130 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v130 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v19 = v18 >> 1;
    v20 = sub_21DC71BB8();
    *(_QWORD *)(v20 + 16) = v19;
    v21 = *(unsigned __int8 *)(v137 + 80);
    v130 = v20;
    v136 = v20 + ((v21 + 32) & ~v21);
  }
  v23 = 0;
  v24 = (char *)MEMORY[0x24BEE4AF8];
  v143 = a1;
  while (1)
  {
    v26 = v23;
    v27 = v23 + 1;
    if (v23 + 1 >= v16)
    {
      v44 = v23 + 1;
      goto LABEL_59;
    }
    v132 = v2;
    v28 = *a1;
    v29 = *(_QWORD *)(v137 + 72);
    v30 = *a1 + v29 * v27;
    v135 = v23;
    v31 = v140;
    sub_21DC21FF0(v30, v140);
    v32 = v141;
    sub_21DC21FF0(v28 + v29 * v135, v141);
    LODWORD(v142) = _s26AIMLInstrumentationStreams20TranscriptProtoEventV1loiySbAC_ACtFZ_0();
    sub_21DC22034(v32);
    v33 = v31;
    v26 = v135;
    sub_21DC22034(v33);
    v34 = v26 + 2;
    v139 = v28;
    v145 = v29;
    if (v26 + 2 >= v16)
    {
      v37 = v26 + 2;
      v43 = v29;
      if ((v142 & 1) == 0)
        goto LABEL_38;
    }
    else
    {
      v35 = v29 * v27;
      v36 = v28;
      v37 = v34;
      v38 = v29 * v34;
      do
      {
        v39 = v16;
        v40 = v140;
        sub_21DC21FF0(v36 + v38, v140);
        v41 = v141;
        sub_21DC21FF0(v36 + v35, v141);
        v42 = _s26AIMLInstrumentationStreams20TranscriptProtoEventV1loiySbAC_ACtFZ_0();
        sub_21DC22034(v41);
        sub_21DC22034(v40);
        if (((v142 ^ v42) & 1) != 0)
        {
          a1 = v143;
          v26 = v135;
          v16 = v39;
          v43 = v145;
          if ((v142 & 1) == 0)
            goto LABEL_38;
          goto LABEL_25;
        }
        v43 = v145;
        v36 += v145;
        ++v37;
        v16 = v39;
      }
      while (v39 != v37);
      v37 = v39;
      a1 = v143;
      v26 = v135;
      if ((v142 & 1) == 0)
      {
LABEL_38:
        v44 = v37;
        goto LABEL_39;
      }
    }
LABEL_25:
    if (v37 < v26)
      goto LABEL_143;
    v44 = v37;
    if (v26 < v37)
      break;
LABEL_39:
    v2 = v132;
    if (v44 < v16)
      goto LABEL_42;
LABEL_59:
    if (v44 < v26)
      goto LABEL_136;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v142 = v44;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v24 = sub_21DC5B27C(0, *((_QWORD *)v24 + 2) + 1, 1, v24);
    v70 = *((_QWORD *)v24 + 2);
    v69 = *((_QWORD *)v24 + 3);
    v25 = v70 + 1;
    if (v70 >= v69 >> 1)
      v24 = sub_21DC5B27C((char *)(v69 > 1), v70 + 1, 1, v24);
    *((_QWORD *)v24 + 2) = v25;
    v71 = v24 + 32;
    v72 = &v24[16 * v70 + 32];
    v73 = v142;
    *(_QWORD *)v72 = v26;
    *((_QWORD *)v72 + 1) = v73;
    if (v70)
    {
      while (1)
      {
        v74 = v25 - 1;
        if (v25 >= 4)
        {
          v79 = &v71[16 * v25];
          v80 = *((_QWORD *)v79 - 8);
          v81 = *((_QWORD *)v79 - 7);
          v85 = __OFSUB__(v81, v80);
          v82 = v81 - v80;
          if (v85)
            goto LABEL_125;
          v84 = *((_QWORD *)v79 - 6);
          v83 = *((_QWORD *)v79 - 5);
          v85 = __OFSUB__(v83, v84);
          v77 = v83 - v84;
          v78 = v85;
          if (v85)
            goto LABEL_126;
          v86 = v25 - 2;
          v87 = &v71[16 * v25 - 32];
          v89 = *(_QWORD *)v87;
          v88 = *((_QWORD *)v87 + 1);
          v85 = __OFSUB__(v88, v89);
          v90 = v88 - v89;
          if (v85)
            goto LABEL_128;
          v85 = __OFADD__(v77, v90);
          v91 = v77 + v90;
          if (v85)
            goto LABEL_131;
          if (v91 >= v82)
          {
            v109 = &v71[16 * v74];
            v111 = *(_QWORD *)v109;
            v110 = *((_QWORD *)v109 + 1);
            v85 = __OFSUB__(v110, v111);
            v112 = v110 - v111;
            if (v85)
              goto LABEL_135;
            v102 = v77 < v112;
            goto LABEL_96;
          }
        }
        else
        {
          if (v25 != 3)
          {
            v103 = *((_QWORD *)v24 + 4);
            v104 = *((_QWORD *)v24 + 5);
            v85 = __OFSUB__(v104, v103);
            v96 = v104 - v103;
            v97 = v85;
            goto LABEL_90;
          }
          v76 = *((_QWORD *)v24 + 4);
          v75 = *((_QWORD *)v24 + 5);
          v85 = __OFSUB__(v75, v76);
          v77 = v75 - v76;
          v78 = v85;
        }
        if ((v78 & 1) != 0)
          goto LABEL_127;
        v86 = v25 - 2;
        v92 = &v71[16 * v25 - 32];
        v94 = *(_QWORD *)v92;
        v93 = *((_QWORD *)v92 + 1);
        v95 = __OFSUB__(v93, v94);
        v96 = v93 - v94;
        v97 = v95;
        if (v95)
          goto LABEL_130;
        v98 = &v71[16 * v74];
        v100 = *(_QWORD *)v98;
        v99 = *((_QWORD *)v98 + 1);
        v85 = __OFSUB__(v99, v100);
        v101 = v99 - v100;
        if (v85)
          goto LABEL_133;
        if (__OFADD__(v96, v101))
          goto LABEL_134;
        if (v96 + v101 >= v77)
        {
          v102 = v77 < v101;
LABEL_96:
          if (v102)
            v74 = v86;
          goto LABEL_98;
        }
LABEL_90:
        if ((v97 & 1) != 0)
          goto LABEL_129;
        v105 = &v71[16 * v74];
        v107 = *(_QWORD *)v105;
        v106 = *((_QWORD *)v105 + 1);
        v85 = __OFSUB__(v106, v107);
        v108 = v106 - v107;
        if (v85)
          goto LABEL_132;
        if (v108 < v96)
          goto LABEL_15;
LABEL_98:
        v113 = v74 - 1;
        if (v74 - 1 >= v25)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        v114 = *a1;
        if (!*a1)
          goto LABEL_147;
        v115 = v24;
        v116 = &v71[16 * v113];
        v117 = *(_QWORD *)v116;
        v118 = &v71[16 * v74];
        v119 = *((_QWORD *)v118 + 1);
        sub_21DC6EA50(v114 + *(_QWORD *)(v137 + 72) * *(_QWORD *)v116, v114 + *(_QWORD *)(v137 + 72) * *(_QWORD *)v118, v114 + *(_QWORD *)(v137 + 72) * v119, v136);
        if (v2)
          goto LABEL_118;
        if (v119 < v117)
          goto LABEL_122;
        if (v74 > *((_QWORD *)v115 + 2))
          goto LABEL_123;
        *(_QWORD *)v116 = v117;
        *(_QWORD *)&v71[16 * v113 + 8] = v119;
        v120 = *((_QWORD *)v115 + 2);
        if (v74 >= v120)
          goto LABEL_124;
        v24 = v115;
        v25 = v120 - 1;
        memmove(&v71[16 * v74], v118 + 16, 16 * (v120 - 1 - v74));
        *((_QWORD *)v115 + 2) = v120 - 1;
        a1 = v143;
        if (v120 <= 2)
          goto LABEL_15;
      }
    }
    v25 = 1;
LABEL_15:
    v16 = a1[1];
    v23 = v142;
    if (v142 >= v16)
    {
      v22 = v130;
      goto LABEL_107;
    }
  }
  v142 = v16;
  v129 = v24;
  v45 = 0;
  v46 = v43 * (v37 - 1);
  v47 = v37 * v43;
  v48 = v26 * v43;
  do
  {
    if (v26 != v44 + v45 - 1)
    {
      v49 = v139;
      if (!v139)
        goto LABEL_148;
      v50 = v139 + v48;
      sub_21DC22CA0(v139 + v48, v134);
      if (v48 < v46 || v50 >= v49 + v47)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v48 != v46)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      sub_21DC22CA0(v134, v49 + v46);
      a1 = v143;
      v44 = v37;
      v43 = v145;
    }
    ++v26;
    --v45;
    v46 -= v43;
    v47 -= v43;
    v48 += v43;
  }
  while (v26 < v44 + v45);
  v24 = v129;
  v2 = v132;
  v26 = v135;
  v16 = v142;
  if (v44 >= v142)
    goto LABEL_59;
LABEL_42:
  if (__OFSUB__(v44, v26))
    goto LABEL_141;
  if (v44 - v26 >= v131)
    goto LABEL_59;
  if (__OFADD__(v26, v131))
    goto LABEL_144;
  if (v26 + v131 >= v16)
    v51 = v16;
  else
    v51 = v26 + v131;
  if (v51 >= v26)
  {
    if (v44 != v51)
    {
      v135 = v26;
      v129 = v24;
      v132 = v2;
      v133 = v51;
      v52 = *(_QWORD *)(v137 + 72);
      v53 = v52 * (v44 - 1);
      v139 = v52;
      v54 = v44 * v52;
      do
      {
        v56 = 0;
        v57 = v135;
        v142 = v44;
        while (1)
        {
          v145 = v57;
          v58 = *a1;
          v59 = v54;
          v60 = v54 + v56 + *a1;
          v61 = a1;
          v62 = v140;
          sub_21DC21FF0(v60, v140);
          v63 = v53;
          v64 = v53 + v56 + v58;
          v65 = v141;
          sub_21DC21FF0(v64, v141);
          LOBYTE(v58) = _s26AIMLInstrumentationStreams20TranscriptProtoEventV1loiySbAC_ACtFZ_0();
          sub_21DC22034(v65);
          sub_21DC22034(v62);
          if ((v58 & 1) == 0)
            break;
          v66 = *v61;
          if (!*v61)
            goto LABEL_146;
          v54 = v59;
          v53 = v63;
          v67 = v66 + v63 + v56;
          sub_21DC22CA0(v66 + v59 + v56, v144);
          swift_arrayInitWithTakeFrontToBack();
          sub_21DC22CA0(v144, v67);
          v56 -= v139;
          v57 = v145 + 1;
          v55 = v142;
          a1 = v143;
          if (v142 == v145 + 1)
            goto LABEL_52;
        }
        v55 = v142;
        a1 = v61;
        v53 = v63;
        v54 = v59;
LABEL_52:
        v44 = v55 + 1;
        v53 += v139;
        v54 += v139;
      }
      while (v44 != v133);
      v44 = v133;
      v2 = v132;
      v24 = v129;
      v26 = v135;
    }
    goto LABEL_59;
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  result = sub_21DC71FA8();
  __break(1u);
  return result;
}

uint64_t sub_21DC6C738(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  double v36;
  double v37;
  double v38;
  double v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  double v49;
  double v50;
  double v51;
  _BOOL4 v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t *v73;
  void (*v74)(char *, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  char *v78;
  double v79;
  double v80;
  double v81;
  double v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t, uint64_t);
  uint64_t *v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t *v90;
  char *v91;
  char *v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  BOOL v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  BOOL v114;
  uint64_t v115;
  char v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  BOOL v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  unint64_t v155;
  void (*v156)(_QWORD, _QWORD, _QWORD);
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;

  v2 = v1;
  v4 = sub_21DC719B4();
  v167 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v153 = (char *)&v147 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v164 = (char *)&v147 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v159 = (char *)&v147 - v13;
  MEMORY[0x24BDAC7A8](v12, v14);
  v161 = (char *)&v147 - v15;
  v16 = a1;
  v17 = a1[1];
  result = sub_21DC72068();
  if (result < v17)
  {
    if (v17 >= 0)
      v19 = v17;
    else
      v19 = v17 + 1;
    if (v17 >= -1)
    {
      v149 = result;
      if (v17 < 2)
      {
        v24 = (char *)MEMORY[0x24BEE4AF8];
        v23 = MEMORY[0x24BEE4AF8]
            + ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80));
        v148 = MEMORY[0x24BEE4AF8];
        if (v17 != 1)
        {
          v26 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
          v90 = v16;
          if (v26 < 2)
            goto LABEL_117;
          goto LABEL_104;
        }
      }
      else
      {
        v20 = v19 >> 1;
        v21 = sub_21DC71BB8();
        *(_QWORD *)(v21 + 16) = v20;
        v22 = (*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80);
        v148 = v21;
        v23 = v21 + v22;
      }
      v25 = 0;
      v24 = (char *)MEMORY[0x24BEE4AF8];
      v155 = v23;
      v162 = v16;
      v163 = v4;
      while (1)
      {
        v27 = v25;
        v28 = v25 + 1;
        v154 = v25;
        if (v25 + 1 >= v17)
        {
          v43 = v25 + 1;
          v53 = v162;
        }
        else
        {
          v29 = *v162;
          v157 = v29;
          v30 = v167;
          v31 = *(_QWORD *)(v167 + 72);
          v165 = v17;
          v166 = v31;
          v32 = *(void (**)(_QWORD, _QWORD, _QWORD))(v167 + 16);
          v32(v161, v29 + v31 * v28, v4);
          v33 = v29 + v31 * v27;
          v34 = v159;
          v32(v159, v33, v4);
          v35 = v161;
          sub_21DC719A8();
          v37 = v36;
          sub_21DC719A8();
          v39 = v38;
          v40 = *(void (**)(_QWORD, _QWORD))(v30 + 8);
          v41 = v34;
          v27 = v154;
          v40(v41, v4);
          v40(v35, v4);
          v42 = v166;
          v43 = v27 + 2;
          if (v27 + 2 >= v165)
          {
            v17 = v165;
          }
          else
          {
            v150 = v24;
            v151 = v2;
            v160 = v166 * v28;
            v44 = v157;
            v158 = v166 * v43;
            while (1)
            {
              v45 = v43;
              v46 = v161;
              v47 = v163;
              v32(v161, v44 + v158, v163);
              v48 = v159;
              v32(v159, v44 + v160, v47);
              sub_21DC719A8();
              v50 = v49;
              sub_21DC719A8();
              v52 = v50 >= v51;
              v40(v48, v47);
              v40(v46, v47);
              if (v37 < v39 == v52)
                break;
              v43 = v45 + 1;
              v42 = v166;
              v44 += v166;
              if (v165 == v45 + 1)
              {
                v17 = v165;
                v43 = v165;
                v24 = v150;
                v2 = v151;
                v4 = v163;
                v27 = v154;
                goto LABEL_24;
              }
            }
            v4 = v163;
            v43 = v45;
            v24 = v150;
            v2 = v151;
            v27 = v154;
            v17 = v165;
            v42 = v166;
          }
LABEL_24:
          v53 = v162;
          if (v37 < v39)
          {
            if (v43 < v27)
              goto LABEL_141;
            if (v27 < v43)
            {
              v150 = v24;
              v151 = v2;
              v54 = 0;
              v55 = v42 * (v43 - 1);
              v56 = v27;
              v57 = v43 * v42;
              v58 = v56;
              v59 = v56 * v42;
              do
              {
                if (v58 != v43 + v54 - 1)
                {
                  v60 = v157;
                  if (!v157)
                    goto LABEL_146;
                  v61 = v43;
                  v62 = v157 + v59;
                  v63 = v157 + v55;
                  v160 = *(_QWORD *)(v167 + 32);
                  ((void (*)(char *, uint64_t, uint64_t))v160)(v153, v157 + v59, v163);
                  if (v59 < v55 || v62 >= v60 + v57)
                  {
                    v4 = v163;
                    swift_arrayInitWithTakeFrontToBack();
                  }
                  else
                  {
                    v4 = v163;
                    if (v59 != v55)
                      swift_arrayInitWithTakeBackToFront();
                  }
                  ((void (*)(uint64_t, char *, uint64_t))v160)(v63, v153, v4);
                  v53 = v162;
                  v43 = v61;
                  v42 = v166;
                }
                ++v58;
                --v54;
                v55 -= v42;
                v57 -= v42;
                v59 += v42;
              }
              while (v58 < v43 + v54);
              v24 = v150;
              v2 = v151;
              v27 = v154;
              v17 = v165;
            }
          }
        }
        if (v43 < v17)
        {
          if (__OFSUB__(v43, v27))
            goto LABEL_139;
          if (v43 - v27 < v149)
          {
            if (__OFADD__(v27, v149))
              goto LABEL_142;
            if (v27 + v149 >= v17)
              v64 = v17;
            else
              v64 = v27 + v149;
            if (v64 < v27)
            {
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
              break;
            }
            if (v43 != v64)
            {
              v150 = v24;
              v151 = v2;
              v65 = *(_QWORD *)(v167 + 72);
              v156 = *(void (**)(_QWORD, _QWORD, _QWORD))(v167 + 16);
              v157 = v65;
              v66 = v65 * (v43 - 1);
              v67 = v43 * v65;
              v152 = v64;
              do
              {
                v69 = 0;
                v160 = v43;
                v158 = v67;
                while (1)
                {
                  v70 = *v53;
                  v165 = v67 + v69;
                  v166 = v27;
                  v71 = v67 + v69 + v70;
                  v72 = v161;
                  v73 = v53;
                  v74 = v156;
                  v156(v161, v71, v4);
                  v75 = v66;
                  v76 = v66 + v69 + v70;
                  v77 = v73;
                  v78 = v159;
                  v74(v159, v76, v4);
                  sub_21DC719A8();
                  v80 = v79;
                  sub_21DC719A8();
                  v82 = v81;
                  v83 = *(void (**)(_QWORD, _QWORD))(v167 + 8);
                  v83(v78, v4);
                  v83(v72, v4);
                  if (v80 >= v82)
                    break;
                  v84 = *v77;
                  if (!*v77)
                    goto LABEL_144;
                  v67 = v158;
                  v66 = v75;
                  v85 = v84 + v75 + v69;
                  v86 = *(void (**)(_QWORD, _QWORD, _QWORD))(v167 + 32);
                  v4 = v163;
                  v86(v164, v84 + v158 + v69, v163);
                  swift_arrayInitWithTakeFrontToBack();
                  v86(v85, v164, v4);
                  v69 -= v157;
                  v27 = v166 + 1;
                  v68 = v160;
                  v53 = v162;
                  if (v160 == v166 + 1)
                    goto LABEL_49;
                }
                v4 = v163;
                v68 = v160;
                v53 = v77;
                v66 = v75;
                v67 = v158;
LABEL_49:
                v43 = v68 + 1;
                v66 += v157;
                v67 += v157;
                v27 = v154;
              }
              while (v43 != v152);
              v43 = v152;
              v24 = v150;
              v2 = v151;
            }
          }
        }
        if (v43 < v27)
          goto LABEL_134;
        v87 = v53;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v24 = sub_21DC5B27C(0, *((_QWORD *)v24 + 2) + 1, 1, v24);
        v89 = *((_QWORD *)v24 + 2);
        v88 = *((_QWORD *)v24 + 3);
        v26 = v89 + 1;
        if (v89 >= v88 >> 1)
          v24 = sub_21DC5B27C((char *)(v88 > 1), v89 + 1, 1, v24);
        v90 = v87;
        *((_QWORD *)v24 + 2) = v26;
        v91 = v24 + 32;
        v92 = &v24[16 * v89 + 32];
        *(_QWORD *)v92 = v27;
        *((_QWORD *)v92 + 1) = v43;
        v160 = v43;
        if (v89)
        {
          while (1)
          {
            v93 = v26 - 1;
            if (v26 >= 4)
            {
              v98 = &v91[16 * v26];
              v99 = *((_QWORD *)v98 - 8);
              v100 = *((_QWORD *)v98 - 7);
              v104 = __OFSUB__(v100, v99);
              v101 = v100 - v99;
              if (v104)
                goto LABEL_123;
              v103 = *((_QWORD *)v98 - 6);
              v102 = *((_QWORD *)v98 - 5);
              v104 = __OFSUB__(v102, v103);
              v96 = v102 - v103;
              v97 = v104;
              if (v104)
                goto LABEL_124;
              v105 = v26 - 2;
              v106 = &v91[16 * v26 - 32];
              v108 = *(_QWORD *)v106;
              v107 = *((_QWORD *)v106 + 1);
              v104 = __OFSUB__(v107, v108);
              v109 = v107 - v108;
              if (v104)
                goto LABEL_126;
              v104 = __OFADD__(v96, v109);
              v110 = v96 + v109;
              if (v104)
                goto LABEL_129;
              if (v110 >= v101)
              {
                v128 = &v91[16 * v93];
                v130 = *(_QWORD *)v128;
                v129 = *((_QWORD *)v128 + 1);
                v104 = __OFSUB__(v129, v130);
                v131 = v129 - v130;
                if (v104)
                  goto LABEL_133;
                v121 = v96 < v131;
                goto LABEL_93;
              }
            }
            else
            {
              if (v26 != 3)
              {
                v122 = *((_QWORD *)v24 + 4);
                v123 = *((_QWORD *)v24 + 5);
                v104 = __OFSUB__(v123, v122);
                v115 = v123 - v122;
                v116 = v104;
                goto LABEL_87;
              }
              v95 = *((_QWORD *)v24 + 4);
              v94 = *((_QWORD *)v24 + 5);
              v104 = __OFSUB__(v94, v95);
              v96 = v94 - v95;
              v97 = v104;
            }
            if ((v97 & 1) != 0)
              goto LABEL_125;
            v105 = v26 - 2;
            v111 = &v91[16 * v26 - 32];
            v113 = *(_QWORD *)v111;
            v112 = *((_QWORD *)v111 + 1);
            v114 = __OFSUB__(v112, v113);
            v115 = v112 - v113;
            v116 = v114;
            if (v114)
              goto LABEL_128;
            v117 = &v91[16 * v93];
            v119 = *(_QWORD *)v117;
            v118 = *((_QWORD *)v117 + 1);
            v104 = __OFSUB__(v118, v119);
            v120 = v118 - v119;
            if (v104)
              goto LABEL_131;
            if (__OFADD__(v115, v120))
              goto LABEL_132;
            if (v115 + v120 >= v96)
            {
              v121 = v96 < v120;
LABEL_93:
              if (v121)
                v93 = v105;
              goto LABEL_95;
            }
LABEL_87:
            if ((v116 & 1) != 0)
              goto LABEL_127;
            v124 = &v91[16 * v93];
            v126 = *(_QWORD *)v124;
            v125 = *((_QWORD *)v124 + 1);
            v104 = __OFSUB__(v125, v126);
            v127 = v125 - v126;
            if (v104)
              goto LABEL_130;
            if (v127 < v115)
              goto LABEL_14;
LABEL_95:
            v132 = v93 - 1;
            if (v93 - 1 >= v26)
            {
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
              goto LABEL_143;
            }
            if (!*v90)
              goto LABEL_145;
            v133 = v24;
            v134 = &v91[16 * v132];
            v135 = *(_QWORD *)v134;
            v136 = &v91[16 * v93];
            v137 = *((_QWORD *)v136 + 1);
            sub_21DC6EE90(*v90 + *(_QWORD *)(v167 + 72) * *(_QWORD *)v134, *v90 + *(_QWORD *)(v167 + 72) * *(_QWORD *)v136, *v90 + *(_QWORD *)(v167 + 72) * v137, v155);
            if (v2)
              goto LABEL_117;
            if (v137 < v135)
              goto LABEL_120;
            if (v93 > *((_QWORD *)v133 + 2))
              goto LABEL_121;
            *(_QWORD *)v134 = v135;
            *(_QWORD *)&v91[16 * v132 + 8] = v137;
            v138 = *((_QWORD *)v133 + 2);
            if (v93 >= v138)
              goto LABEL_122;
            v24 = v133;
            v26 = v138 - 1;
            memmove(&v91[16 * v93], v136 + 16, 16 * (v138 - 1 - v93));
            *((_QWORD *)v133 + 2) = v138 - 1;
            v90 = v162;
            v4 = v163;
            if (v138 <= 2)
              goto LABEL_14;
          }
        }
        v26 = 1;
LABEL_14:
        v17 = v90[1];
        v25 = v160;
        if (v160 >= v17)
        {
          v23 = v155;
          if (v26 < 2)
          {
LABEL_117:
            swift_bridgeObjectRelease();
            *(_QWORD *)(v148 + 16) = 0;
            return swift_bridgeObjectRelease();
          }
LABEL_104:
          v139 = *v90;
          while (1)
          {
            v140 = v26 - 2;
            if (v26 < 2)
              goto LABEL_135;
            if (!v139)
              goto LABEL_147;
            v141 = v24;
            v142 = v24 + 32;
            v143 = *(_QWORD *)&v24[16 * v140 + 32];
            v144 = *(_QWORD *)&v24[16 * v26 + 24];
            sub_21DC6EE90(v139 + *(_QWORD *)(v167 + 72) * v143, v139 + *(_QWORD *)(v167 + 72) * *(_QWORD *)&v142[16 * v26 - 16], v139 + *(_QWORD *)(v167 + 72) * v144, v23);
            if (v2)
              goto LABEL_117;
            if (v144 < v143)
              goto LABEL_136;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v141 = sub_21DC5B7D4((uint64_t)v141);
            if (v140 >= *((_QWORD *)v141 + 2))
              goto LABEL_137;
            v145 = &v141[16 * v140 + 32];
            *(_QWORD *)v145 = v143;
            *((_QWORD *)v145 + 1) = v144;
            v146 = *((_QWORD *)v141 + 2);
            if (v26 > v146)
              goto LABEL_138;
            v24 = v141;
            memmove(&v141[16 * v26 + 16], &v141[16 * v26 + 32], 16 * (v146 - v26));
            *((_QWORD *)v141 + 2) = v146 - 1;
            v26 = v146 - 1;
            if (v146 <= 2)
              goto LABEL_117;
          }
        }
      }
    }
    result = sub_21DC71FA8();
    __break(1u);
    return result;
  }
  if (v17 < 0)
    goto LABEL_140;
  if (v17)
    return sub_21DC6E3C4(0, v17, 1, v16);
  return result;
}

uint64_t sub_21DC6D184(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t result;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  void (*v92)(char *, uint64_t);
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(char *, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unsigned int (*v124)(uint64_t, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  char v130;
  char *v131;
  char v132;
  void (*v133)(char *, uint64_t);
  void (*v134)(char *, uint64_t);
  uint64_t v135;
  char *v136;
  void (*v137)(char *, uint64_t, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v139;
  unint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  BOOL v155;
  unint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  BOOL v165;
  uint64_t v166;
  char v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  BOOL v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  char *v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  char *v200;
  char *v201;
  char *v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  void (*v210)(char *, uint64_t, uint64_t);
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  unint64_t v219;
  void (*v220)(char *, uint64_t, uint64_t);
  char *v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  char *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t *v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A81A8);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v223 = (char *)&v196 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)&v196 - v10;
  v13 = MEMORY[0x24BDAC7A8](v9, v12);
  v15 = (char *)&v196 - v14;
  v17 = MEMORY[0x24BDAC7A8](v13, v16);
  v19 = (char *)&v196 - v18;
  v21 = MEMORY[0x24BDAC7A8](v17, v20);
  v201 = (char *)&v196 - v22;
  MEMORY[0x24BDAC7A8](v21, v23);
  v200 = (char *)&v196 - v24;
  v225 = sub_21DC71588();
  v25 = *(_QWORD *)(v225 - 8);
  v27 = MEMORY[0x24BDAC7A8](v225, v26);
  v222 = (char *)&v196 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v27, v29);
  v229 = (char *)&v196 - v31;
  v33 = MEMORY[0x24BDAC7A8](v30, v32);
  v35 = (char *)&v196 - v34;
  v37 = MEMORY[0x24BDAC7A8](v33, v36);
  v218 = (char *)&v196 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37, v39);
  v42 = (char *)&v196 - v41;
  MEMORY[0x24BDAC7A8](v40, v43);
  v202 = (char *)&v196 - v44;
  v226 = sub_21DC718A0();
  v233 = *(_QWORD *)(v226 - 8);
  v46 = MEMORY[0x24BDAC7A8](v226, v45);
  v212 = (char *)&v196 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = MEMORY[0x24BDAC7A8](v46, v48);
  v227 = (char *)&v196 - v50;
  v52 = MEMORY[0x24BDAC7A8](v49, v51);
  v235 = (char *)&v196 - v53;
  v55 = MEMORY[0x24BDAC7A8](v52, v54);
  v228 = (char *)&v196 - v56;
  v58 = MEMORY[0x24BDAC7A8](v55, v57);
  v213 = (char *)&v196 - v59;
  v61 = MEMORY[0x24BDAC7A8](v58, v60);
  v217 = (char *)&v196 - v62;
  v64 = MEMORY[0x24BDAC7A8](v61, v63);
  v204 = (char *)&v196 - v65;
  MEMORY[0x24BDAC7A8](v64, v66);
  v203 = (char *)&v196 - v67;
  v232 = a1;
  v68 = a1[1];
  result = sub_21DC72068();
  if (result < v68)
  {
    if (v68 >= 0)
      v70 = v68;
    else
      v70 = v68 + 1;
    if (v68 >= -1)
    {
      v221 = v11;
      v199 = result;
      if (v68 < 2)
      {
        v219 = MEMORY[0x24BEE4AF8]
             + ((*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80));
        if (v68 != 1)
        {
          v76 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
          v75 = (char *)MEMORY[0x24BEE4AF8];
          v189 = MEMORY[0x24BEE4AF8];
          if (v76 < 2)
            goto LABEL_124;
          goto LABEL_127;
        }
        v197 = MEMORY[0x24BEE4AF8];
      }
      else
      {
        v71 = v70 >> 1;
        v72 = sub_21DC71BB8();
        *(_QWORD *)(v72 + 16) = v71;
        v73 = *(unsigned __int8 *)(v233 + 80);
        v197 = v72;
        v219 = v72 + ((v73 + 32) & ~v73);
      }
      v74 = 0;
      v75 = (char *)MEMORY[0x24BEE4AF8];
      v216 = v15;
      v209 = v19;
      v234 = v25;
      v208 = v35;
      v198 = v42;
      while (1)
      {
        v77 = v74;
        v78 = v74 + 1;
        v214 = v74;
        v215 = v75;
        if (v74 + 1 >= v68)
        {
          v88 = v226;
        }
        else
        {
          v224 = v68;
          v79 = *v232;
          v80 = *(_QWORD *)(v233 + 72);
          v207 = v74 + 1;
          v81 = v79 + v80 * v78;
          v82 = *(void (**)(char *, uint64_t, uint64_t))(v233 + 16);
          v83 = v226;
          v82(v203, v81, v226);
          v205 = v79;
          v230 = v80;
          v210 = v82;
          v82(v204, v79 + v80 * v77, v83);
          v84 = (uint64_t)v200;
          sub_21DC7184C();
          v85 = v225;
          v231 = *(_QWORD *)(v25 + 48);
          v86 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v231)(v84, 1, v225);
          v87 = (uint64_t)v201;
          if (v86 == 1)
          {
            sub_21DC71558();
            sub_21DC07C84(v84, (uint64_t *)&unk_2553A81A8);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v202, v84, v85);
          }
          v89 = v198;
          sub_21DC7184C();
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v231)(v87, 1, v85) == 1)
          {
            sub_21DC71558();
            sub_21DC07C84(v87, (uint64_t *)&unk_2553A81A8);
            v90 = v234;
          }
          else
          {
            v90 = v234;
            (*(void (**)(char *, uint64_t, uint64_t))(v234 + 32))(v89, v87, v85);
          }
          v91 = v202;
          LODWORD(v220) = _s26AIMLInstrumentationStreams20TranscriptProtoEventV1loiySbAC_ACtFZ_0();
          v92 = *(void (**)(char *, uint64_t))(v90 + 8);
          v92(v89, v85);
          v92(v91, v85);
          v93 = *(void (**)(char *, uint64_t))(v233 + 8);
          v94 = v226;
          v93(v204, v226);
          v93(v203, v94);
          v78 = v214 + 2;
          if (v214 + 2 >= v224)
          {
            v88 = v226;
          }
          else
          {
            v211 = v2;
            v207 *= v230;
            v95 = v205;
            v206 = v230 * v78;
            v88 = v226;
            v96 = v213;
            while (1)
            {
              v97 = v78;
              v98 = v210;
              v210(v217, v95 + v206, v88);
              v98(v96, v95 + v207, v88);
              v99 = (uint64_t)v209;
              sub_21DC7184C();
              v100 = v225;
              if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v231)(v99, 1, v225) == 1)
              {
                sub_21DC71558();
                sub_21DC07C84(v99, (uint64_t *)&unk_2553A81A8);
              }
              else
              {
                (*(void (**)(char *, uint64_t, uint64_t))(v234 + 32))(v218, v99, v100);
              }
              v101 = v100;
              sub_21DC7184C();
              if (((unsigned int (*)(char *, uint64_t, uint64_t))v231)(v15, 1, v100) == 1)
              {
                v102 = v208;
                sub_21DC71558();
                sub_21DC07C84((uint64_t)v15, (uint64_t *)&unk_2553A81A8);
              }
              else
              {
                v102 = v208;
                (*(void (**)(char *, char *, uint64_t))(v234 + 32))(v208, v15, v100);
              }
              v103 = v218;
              v104 = _s26AIMLInstrumentationStreams20TranscriptProtoEventV1loiySbAC_ACtFZ_0();
              v92(v102, v101);
              v92(v103, v101);
              v96 = v213;
              v88 = v226;
              v93(v213, v226);
              v93(v217, v88);
              if (((v220 ^ v104) & 1) != 0)
                break;
              v78 = v97 + 1;
              v95 += v230;
              v75 = v215;
              if (v224 == v97 + 1)
              {
                v68 = v224;
                v78 = v224;
                v2 = v211;
                goto LABEL_38;
              }
            }
            v75 = v215;
            v78 = v97;
            v2 = v211;
          }
          v68 = v224;
LABEL_38:
          v25 = v234;
          v77 = v214;
          if ((v220 & 1) != 0)
          {
            if (v78 < v214)
              goto LABEL_162;
            if (v214 < v78)
            {
              v105 = 0;
              v106 = v230 * (v78 - 1);
              v107 = v78 * v230;
              v108 = v214;
              v109 = v214 * v230;
              do
              {
                if (v108 != v78 + v105 - 1)
                {
                  if (!v205)
                    goto LABEL_167;
                  v211 = v2;
                  v111 = v205 + v109;
                  v112 = v205 + v106;
                  v113 = v205;
                  v231 = *(_QWORD *)(v233 + 32);
                  ((void (*)(char *, uint64_t, uint64_t))v231)(v212, v205 + v109, v226);
                  if (v109 < v106 || v111 >= v113 + v107)
                  {
                    v110 = v226;
                    swift_arrayInitWithTakeFrontToBack();
                  }
                  else
                  {
                    v110 = v226;
                    if (v109 != v106)
                      swift_arrayInitWithTakeBackToFront();
                  }
                  ((void (*)(uint64_t, char *, uint64_t))v231)(v112, v212, v110);
                  v25 = v234;
                  v2 = v211;
                  v75 = v215;
                }
                ++v108;
                --v105;
                v106 -= v230;
                v107 -= v230;
                v109 += v230;
              }
              while (v108 < v78 + v105);
              v15 = v216;
              v88 = v226;
              v77 = v214;
              v68 = v224;
            }
          }
        }
        if (v78 < v68)
        {
          if (__OFSUB__(v78, v77))
            goto LABEL_160;
          if (v78 - v77 < v199)
          {
            if (__OFADD__(v77, v199))
              goto LABEL_163;
            if (v77 + v199 >= v68)
              v114 = (void (*)(char *, uint64_t, uint64_t))v68;
            else
              v114 = (void (*)(char *, uint64_t, uint64_t))(v77 + v199);
            if ((uint64_t)v114 < v77)
            {
LABEL_164:
              __break(1u);
LABEL_165:
              __break(1u);
LABEL_166:
              __break(1u);
LABEL_167:
              __break(1u);
LABEL_168:
              __break(1u);
              break;
            }
            if ((void (*)(char *, uint64_t, uint64_t))v78 != v114)
            {
              v211 = v2;
              v115 = *(_QWORD *)(v233 + 72);
              v220 = *(void (**)(char *, uint64_t, uint64_t))(v233 + 16);
              v224 = v115;
              v230 = v78 * v115;
              v231 = v115 * (v78 - 1);
              v210 = v114;
              do
              {
                v116 = 0;
                v117 = v77;
                while (1)
                {
                  v118 = v78;
                  v119 = *v232;
                  v120 = v220;
                  v220(v228, v230 + v116 + *v232, v88);
                  v120(v235, v231 + v116 + v119, v88);
                  v121 = (uint64_t)v221;
                  sub_21DC7184C();
                  v122 = v121;
                  v123 = v234;
                  v124 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v234 + 48);
                  v125 = v225;
                  if (v124(v122, 1, v225) == 1)
                  {
                    sub_21DC71558();
                    sub_21DC07C84(v122, (uint64_t *)&unk_2553A81A8);
                  }
                  else
                  {
                    (*(void (**)(char *, uint64_t, uint64_t))(v123 + 32))(v229, v122, v125);
                  }
                  v126 = (uint64_t)v223;
                  sub_21DC7184C();
                  if (v124(v126, 1, v125) == 1)
                  {
                    v127 = v222;
                    sub_21DC71558();
                    sub_21DC07C84(v126, (uint64_t *)&unk_2553A81A8);
                    v128 = v234;
                  }
                  else
                  {
                    v128 = v234;
                    v127 = v222;
                    (*(void (**)(char *, uint64_t, uint64_t))(v234 + 32))(v222, v126, v125);
                  }
                  v129 = v229;
                  v130 = _s26AIMLInstrumentationStreams20TranscriptProtoEventV1loiySbAC_ACtFZ_0();
                  v131 = v127;
                  v132 = v130;
                  v133 = *(void (**)(char *, uint64_t))(v128 + 8);
                  v133(v131, v125);
                  v133(v129, v125);
                  v134 = *(void (**)(char *, uint64_t))(v233 + 8);
                  v88 = v226;
                  v134(v235, v226);
                  v134(v228, v88);
                  if ((v132 & 1) == 0)
                    break;
                  v135 = *v232;
                  if (!*v232)
                    goto LABEL_165;
                  v136 = (char *)(v135 + v231 + v116);
                  v137 = *(void (**)(char *, uint64_t, uint64_t))(v233 + 32);
                  v137(v227, v135 + v230 + v116, v88);
                  swift_arrayInitWithTakeFrontToBack();
                  v137(v136, (uint64_t)v227, v88);
                  v116 -= v224;
                  ++v117;
                  v78 = v118;
                  if (v118 == v117)
                    goto LABEL_63;
                }
                v78 = v118;
LABEL_63:
                ++v78;
                v231 += v224;
                v230 += v224;
                v77 = v214;
              }
              while ((void (*)(char *, uint64_t, uint64_t))v78 != v210);
              v78 = (uint64_t)v210;
              v2 = v211;
              v75 = v215;
              v15 = v216;
              v25 = v234;
            }
          }
        }
        if (v78 < v77)
          goto LABEL_155;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v231 = v78;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v75 = sub_21DC5B27C(0, *((_QWORD *)v75 + 2) + 1, 1, v75);
        v140 = *((_QWORD *)v75 + 2);
        v139 = *((_QWORD *)v75 + 3);
        v76 = v140 + 1;
        if (v140 >= v139 >> 1)
          v75 = sub_21DC5B27C((char *)(v139 > 1), v140 + 1, 1, v75);
        *((_QWORD *)v75 + 2) = v76;
        v141 = v75 + 32;
        v142 = &v75[16 * v140 + 32];
        v143 = v231;
        *(_QWORD *)v142 = v77;
        *((_QWORD *)v142 + 1) = v143;
        if (v140)
        {
          while (1)
          {
            v144 = v76 - 1;
            if (v76 >= 4)
            {
              v149 = &v141[16 * v76];
              v150 = *((_QWORD *)v149 - 8);
              v151 = *((_QWORD *)v149 - 7);
              v155 = __OFSUB__(v151, v150);
              v152 = v151 - v150;
              if (v155)
                goto LABEL_144;
              v154 = *((_QWORD *)v149 - 6);
              v153 = *((_QWORD *)v149 - 5);
              v155 = __OFSUB__(v153, v154);
              v147 = v153 - v154;
              v148 = v155;
              if (v155)
                goto LABEL_145;
              v156 = v76 - 2;
              v157 = &v141[16 * v76 - 32];
              v159 = *(_QWORD *)v157;
              v158 = *((_QWORD *)v157 + 1);
              v155 = __OFSUB__(v158, v159);
              v160 = v158 - v159;
              if (v155)
                goto LABEL_147;
              v155 = __OFADD__(v147, v160);
              v161 = v147 + v160;
              if (v155)
                goto LABEL_150;
              if (v161 >= v152)
              {
                v179 = &v141[16 * v144];
                v181 = *(_QWORD *)v179;
                v180 = *((_QWORD *)v179 + 1);
                v155 = __OFSUB__(v180, v181);
                v182 = v180 - v181;
                if (v155)
                  goto LABEL_154;
                v172 = v147 < v182;
                goto LABEL_113;
              }
            }
            else
            {
              if (v76 != 3)
              {
                v173 = *((_QWORD *)v75 + 4);
                v174 = *((_QWORD *)v75 + 5);
                v155 = __OFSUB__(v174, v173);
                v166 = v174 - v173;
                v167 = v155;
                goto LABEL_107;
              }
              v146 = *((_QWORD *)v75 + 4);
              v145 = *((_QWORD *)v75 + 5);
              v155 = __OFSUB__(v145, v146);
              v147 = v145 - v146;
              v148 = v155;
            }
            if ((v148 & 1) != 0)
              goto LABEL_146;
            v156 = v76 - 2;
            v162 = &v141[16 * v76 - 32];
            v164 = *(_QWORD *)v162;
            v163 = *((_QWORD *)v162 + 1);
            v165 = __OFSUB__(v163, v164);
            v166 = v163 - v164;
            v167 = v165;
            if (v165)
              goto LABEL_149;
            v168 = &v141[16 * v144];
            v170 = *(_QWORD *)v168;
            v169 = *((_QWORD *)v168 + 1);
            v155 = __OFSUB__(v169, v170);
            v171 = v169 - v170;
            if (v155)
              goto LABEL_152;
            if (__OFADD__(v166, v171))
              goto LABEL_153;
            if (v166 + v171 >= v147)
            {
              v172 = v147 < v171;
LABEL_113:
              if (v172)
                v144 = v156;
              goto LABEL_115;
            }
LABEL_107:
            if ((v167 & 1) != 0)
              goto LABEL_148;
            v175 = &v141[16 * v144];
            v177 = *(_QWORD *)v175;
            v176 = *((_QWORD *)v175 + 1);
            v155 = __OFSUB__(v176, v177);
            v178 = v176 - v177;
            if (v155)
              goto LABEL_151;
            if (v178 < v166)
              goto LABEL_15;
LABEL_115:
            v183 = v144 - 1;
            if (v144 - 1 >= v76)
            {
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
              goto LABEL_164;
            }
            if (!*v232)
              goto LABEL_166;
            v184 = &v141[16 * v183];
            v185 = *(_QWORD *)v184;
            v186 = &v141[16 * v144];
            v187 = *((_QWORD *)v186 + 1);
            sub_21DC6F368(*v232 + *(_QWORD *)(v233 + 72) * *(_QWORD *)v184, *v232 + *(_QWORD *)(v233 + 72) * *(_QWORD *)v186, *v232 + *(_QWORD *)(v233 + 72) * v187, v219);
            if (v2)
            {
              v189 = v197;
              goto LABEL_124;
            }
            if (v187 < v185)
              goto LABEL_141;
            if (v144 > *((_QWORD *)v75 + 2))
              goto LABEL_142;
            *(_QWORD *)v184 = v185;
            *(_QWORD *)&v141[16 * v183 + 8] = v187;
            v188 = *((_QWORD *)v75 + 2);
            if (v144 >= v188)
              goto LABEL_143;
            v76 = v188 - 1;
            memmove(&v141[16 * v144], v186 + 16, 16 * (v188 - 1 - v144));
            *((_QWORD *)v75 + 2) = v188 - 1;
            v15 = v216;
            v25 = v234;
            if (v188 <= 2)
              goto LABEL_15;
          }
        }
        v76 = 1;
LABEL_15:
        v68 = v232[1];
        v74 = v231;
        if (v231 >= v68)
        {
          v189 = v197;
          if (v76 < 2)
          {
LABEL_124:
            swift_bridgeObjectRelease();
            *(_QWORD *)(v189 + 16) = 0;
            return swift_bridgeObjectRelease();
          }
LABEL_127:
          v190 = *v232;
          while (1)
          {
            v191 = v76 - 2;
            if (v76 < 2)
              goto LABEL_156;
            if (!v190)
              goto LABEL_168;
            v192 = *(_QWORD *)&v75[16 * v191 + 32];
            v193 = *(_QWORD *)&v75[16 * v76 + 24];
            sub_21DC6F368(v190 + *(_QWORD *)(v233 + 72) * v192, v190 + *(_QWORD *)(v233 + 72) * *(_QWORD *)&v75[16 * v76 + 16], v190 + *(_QWORD *)(v233 + 72) * v193, v219);
            if (v2)
              goto LABEL_124;
            if (v193 < v192)
              goto LABEL_157;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v75 = sub_21DC5B7D4((uint64_t)v75);
            if (v191 >= *((_QWORD *)v75 + 2))
              goto LABEL_158;
            v194 = &v75[16 * v191 + 32];
            *(_QWORD *)v194 = v192;
            *((_QWORD *)v194 + 1) = v193;
            v195 = *((_QWORD *)v75 + 2);
            if (v76 > v195)
              goto LABEL_159;
            memmove(&v75[16 * v76 + 16], &v75[16 * v76 + 32], 16 * (v195 - v76));
            *((_QWORD *)v75 + 2) = v195 - 1;
            v76 = v195 - 1;
            if (v195 <= 2)
              goto LABEL_124;
          }
        }
      }
    }
    result = sub_21DC71FA8();
    __break(1u);
    return result;
  }
  if (v68 < 0)
    goto LABEL_161;
  if (v68)
    return sub_21DC6E638(0, v68, 1, v232);
  return result;
}

uint64_t sub_21DC6E1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v27 = a1;
  v28 = type metadata accessor for TranscriptProtoEvent();
  v8 = MEMORY[0x24BDAC7A8](v28, v7);
  v31 = (uint64_t)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (char *)&v25 - v12;
  result = MEMORY[0x24BDAC7A8](v11, v14);
  v18 = (char *)&v25 - v17;
  v30 = a3;
  v26 = a2;
  if (a3 != a2)
  {
    v19 = *(_QWORD *)(v16 + 72);
    v33 = v19 * (v30 - 1);
    v29 = v19;
    v32 = v19 * v30;
LABEL_5:
    v20 = 0;
    v21 = v27;
    while (1)
    {
      v22 = *a4;
      sub_21DC21FF0(v32 + v20 + *a4, (uint64_t)v18);
      sub_21DC21FF0(v33 + v20 + v22, (uint64_t)v13);
      LOBYTE(v22) = _s26AIMLInstrumentationStreams20TranscriptProtoEventV1loiySbAC_ACtFZ_0();
      sub_21DC22034((uint64_t)v13);
      result = sub_21DC22034((uint64_t)v18);
      if ((v22 & 1) == 0)
      {
LABEL_4:
        v33 += v29;
        v32 += v29;
        if (++v30 == v26)
          return result;
        goto LABEL_5;
      }
      v23 = *a4;
      if (!*a4)
        break;
      v24 = v23 + v33 + v20;
      sub_21DC22CA0(v23 + v32 + v20, v31);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_21DC22CA0(v31, v24);
      v20 -= v29;
      if (v30 == ++v21)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_21DC6E3C4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  void (*v25)(char *, uint64_t, uint64_t);
  char *v26;
  double v27;
  double v28;
  double v29;
  double v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;

  v39 = a1;
  v7 = sub_21DC719B4();
  v8 = *(_QWORD **)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v46 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v42 = (char *)&v37 - v14;
  result = MEMORY[0x24BDAC7A8](v13, v15);
  v41 = (char *)&v37 - v17;
  v45 = a3;
  v38 = a2;
  if (a3 != a2)
  {
    v18 = v8[9];
    v40 = (void (*)(char *, uint64_t, uint64_t))v8[2];
    v49 = v18 * (v45 - 1);
    v43 = v18;
    v19 = v18 * v45;
    v47 = a4;
LABEL_5:
    v20 = 0;
    v48 = v39;
    v44 = v19;
    while (1)
    {
      v21 = *a4;
      v22 = v19 + v20 + *a4;
      v23 = v41;
      v24 = v8;
      v25 = v40;
      v40(v41, v22, v7);
      v26 = v42;
      v25(v42, v49 + v20 + v21, v7);
      v8 = v24;
      v19 = v44;
      sub_21DC719A8();
      v28 = v27;
      sub_21DC719A8();
      v30 = v29;
      v31 = (void (*)(char *, uint64_t))v8[1];
      v31(v26, v7);
      v32 = v23;
      a4 = v47;
      result = ((uint64_t (*)(char *, uint64_t))v31)(v32, v7);
      if (v28 >= v30)
      {
LABEL_4:
        v49 += v43;
        v19 += v43;
        if (++v45 == v38)
          return result;
        goto LABEL_5;
      }
      v33 = *a4;
      if (!*a4)
        break;
      v34 = v33 + v49 + v20;
      v35 = v8;
      v36 = (void (*)(char *, uint64_t, uint64_t))v8[4];
      v36(v46, v33 + v19 + v20, v7);
      swift_arrayInitWithTakeFrontToBack();
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v36)(v34, v46, v7);
      v20 -= v43;
      a4 = v47;
      ++v48;
      v8 = v35;
      if (v45 == v48)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_21DC6E638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char v43;
  char *v44;
  char v45;
  void (*v46)(char *, uint64_t);
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  _QWORD *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;

  v64 = a4;
  v53 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A81A8);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v56 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v57 = (char *)&v51 - v11;
  v12 = sub_21DC71588();
  v13 = *(_QWORD *)(v12 - 8);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v55 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v17);
  v67 = (char *)&v51 - v18;
  v19 = sub_21DC718A0();
  v65 = *(_QWORD **)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v61 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21, v23);
  v69 = (char *)&v51 - v25;
  result = MEMORY[0x24BDAC7A8](v24, v26);
  v66 = (char *)&v51 - v28;
  v60 = a3;
  v52 = a2;
  if (a3 != a2)
  {
    v29 = v65[9];
    v54 = (void (*)(char *, uint64_t, uint64_t))v65[2];
    v68 = v29 * (v60 - 1);
    v58 = v29;
    v30 = v29 * v60;
    v63 = v13;
LABEL_5:
    v31 = 0;
    v32 = v53;
    v59 = v30;
    while (1)
    {
      v33 = *v64;
      v62 = v30 + v31;
      v34 = v54;
      v54(v66, v30 + v31 + v33, v19);
      v34(v69, v68 + v31 + v33, v19);
      v35 = v57;
      sub_21DC7184C();
      v36 = (uint64_t)v35;
      v37 = v13;
      v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
      if (v38(v36, 1, v12) == 1)
      {
        sub_21DC71558();
        sub_21DC07C84(v36, (uint64_t *)&unk_2553A81A8);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v67, v36, v12);
      }
      v39 = (uint64_t)v56;
      sub_21DC7184C();
      if (v38(v39, 1, v12) == 1)
      {
        v40 = v55;
        sub_21DC71558();
        sub_21DC07C84(v39, (uint64_t *)&unk_2553A81A8);
        v13 = v63;
      }
      else
      {
        v13 = v63;
        v40 = v55;
        (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v55, v39, v12);
      }
      v41 = v12;
      v42 = v67;
      v43 = _s26AIMLInstrumentationStreams20TranscriptProtoEventV1loiySbAC_ACtFZ_0();
      v44 = v40;
      v45 = v43;
      v46 = *(void (**)(char *, uint64_t))(v13 + 8);
      v46(v44, v41);
      v46(v42, v41);
      v47 = (void (*)(char *, uint64_t))v65[1];
      v47(v69, v19);
      result = ((uint64_t (*)(char *, uint64_t))v47)(v66, v19);
      v12 = v41;
      v30 = v59;
      if ((v45 & 1) == 0)
      {
LABEL_4:
        v68 += v58;
        v30 += v58;
        if (++v60 == v52)
          return result;
        goto LABEL_5;
      }
      v48 = *v64;
      if (!*v64)
        break;
      v49 = v48 + v68 + v31;
      v50 = (void (*)(char *, uint64_t, uint64_t))v65[4];
      v50(v61, v48 + v59 + v31, v19);
      swift_arrayInitWithTakeFrontToBack();
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v50)(v49, v61, v19);
      v31 -= v58;
      ++v32;
      v13 = v63;
      if (v60 == v32)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_21DC6EA50(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t result;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;

  v38 = type metadata accessor for TranscriptProtoEvent();
  v9 = MEMORY[0x24BDAC7A8](v38, v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)&v36 - v13;
  v16 = *(_QWORD *)(v15 + 72);
  if (!v16)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v16 == -1)
    goto LABEL_61;
  v17 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v16 == -1)
    goto LABEL_62;
  v18 = (uint64_t)(a2 - a1) / v16;
  v41 = a1;
  v40 = a4;
  v19 = v17 / v16;
  if (v18 >= v17 / v16)
  {
    if ((v19 & 0x8000000000000000) == 0)
    {
      v21 = v19 * v16;
      if (a4 < a2 || a2 + v21 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v28 = a4 + v21;
      v39 = a4 + v21;
      v41 = a2;
      v37 = a1;
      if (v21 >= 1 && a1 < a2)
      {
        v30 = -v16;
        do
        {
          v31 = a3 + v30;
          sub_21DC21FF0(v28 + v30, (uint64_t)v14);
          v32 = a2 + v30;
          sub_21DC21FF0(a2 + v30, (uint64_t)v11);
          v33 = _s26AIMLInstrumentationStreams20TranscriptProtoEventV1loiySbAC_ACtFZ_0();
          sub_21DC22034((uint64_t)v11);
          sub_21DC22034((uint64_t)v14);
          if ((v33 & 1) != 0)
          {
            if (a3 < a2 || v31 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v41 += v30;
          }
          else
          {
            v34 = v39;
            v39 += v30;
            if (a3 < v34 || v31 >= v34)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v34)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v32 = a2;
          }
          v28 = v39;
          if (v39 <= a4)
            break;
          a2 = v32;
          a3 += v30;
        }
        while (v32 > v37);
      }
      goto LABEL_59;
    }
  }
  else if ((v18 & 0x8000000000000000) == 0)
  {
    v20 = v18 * v16;
    if (a4 < a1 || a1 + v20 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v22 = a4 + v20;
    v39 = a4 + v20;
    if (v20 >= 1 && a2 < a3)
    {
      do
      {
        sub_21DC21FF0(a2, (uint64_t)v14);
        sub_21DC21FF0(a4, (uint64_t)v11);
        v24 = _s26AIMLInstrumentationStreams20TranscriptProtoEventV1loiySbAC_ACtFZ_0();
        sub_21DC22034((uint64_t)v11);
        sub_21DC22034((uint64_t)v14);
        v25 = v41;
        if ((v24 & 1) != 0)
        {
          v26 = a2 + v16;
          if (v41 < a2 || v41 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v41 == a2)
          {
            v25 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v27 = v40 + v16;
          if (v41 < v40 || v41 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v41 != v40)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v40 = v27;
          v26 = a2;
        }
        v41 = v25 + v16;
        a4 = v40;
        if (v40 >= v22)
          break;
        a2 = v26;
      }
      while (v26 < a3);
    }
LABEL_59:
    sub_21DC5B6A4(&v41, &v40, (uint64_t *)&v39);
    return 1;
  }
LABEL_63:
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC6EE90(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v23)(char *, unint64_t, uint64_t);
  char *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  void (*v29)(char *, uint64_t);
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v35;
  void (*v36)(char *, unint64_t, uint64_t);
  unint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  unint64_t v39;
  unint64_t v40;
  char *v41;
  char *v42;
  double v43;
  double v44;
  double v45;
  double v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  BOOL v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t result;
  uint64_t v53;
  unint64_t v54;
  void (*v55)(char *, unint64_t, uint64_t);
  unint64_t v56;
  char *v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;

  v8 = sub_21DC719B4();
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v57 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v53 - v13;
  v58 = v15;
  v16 = *(_QWORD *)(v15 + 72);
  if (!v16)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v16 == -1)
    goto LABEL_62;
  v17 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v16 == -1)
    goto LABEL_63;
  v18 = (uint64_t)(a2 - a1) / v16;
  v61 = a1;
  v60 = a4;
  v19 = v17 / v16;
  if (v18 >= v17 / v16)
  {
    if ((v19 & 0x8000000000000000) == 0)
    {
      v21 = v19 * v16;
      if (a4 < a2 || a2 + v21 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v33 = a4 + v21;
      v59 = a4 + v21;
      v61 = a2;
      v56 = a1;
      if (v21 >= 1 && a1 < a2)
      {
        v35 = -v16;
        v36 = *(void (**)(char *, unint64_t, uint64_t))(v58 + 16);
        v54 = a4;
        v55 = v36;
        do
        {
          v37 = a3 + v35;
          v38 = v55;
          v55(v14, v33 + v35, v8);
          v39 = a2 + v35;
          v40 = a3;
          v41 = v14;
          v42 = v57;
          v38(v57, a2 + v35, v8);
          sub_21DC719A8();
          v44 = v43;
          sub_21DC719A8();
          v46 = v45;
          v47 = *(void (**)(char *, uint64_t))(v58 + 8);
          v48 = v42;
          v14 = v41;
          v47(v48, v8);
          v47(v41, v8);
          if (v44 >= v46)
          {
            v51 = v59;
            v59 += v35;
            if (v40 < v51 || v37 >= v51)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v40 != v51)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v39 = a2;
            v50 = v54;
          }
          else
          {
            if (v40 < a2 || v37 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v50 = v54;
            }
            else
            {
              v49 = v40 == a2;
              v50 = v54;
              if (!v49)
                swift_arrayInitWithTakeBackToFront();
            }
            v61 += v35;
          }
          v33 = v59;
          if (v59 <= v50)
            break;
          a2 = v39;
          a3 = v37;
        }
        while (v39 > v56);
      }
      goto LABEL_60;
    }
  }
  else if ((v18 & 0x8000000000000000) == 0)
  {
    v20 = v18 * v16;
    if (a4 < a1 || a1 + v20 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v56 = a4 + v20;
    v59 = a4 + v20;
    if (v20 >= 1 && a2 < a3)
    {
      v23 = *(void (**)(char *, unint64_t, uint64_t))(v58 + 16);
      do
      {
        v23(v14, a2, v8);
        v24 = v57;
        v23(v57, a4, v8);
        sub_21DC719A8();
        v26 = v25;
        sub_21DC719A8();
        v28 = v27;
        v29 = *(void (**)(char *, uint64_t))(v58 + 8);
        v29(v24, v8);
        v29(v14, v8);
        v30 = v61;
        if (v26 >= v28)
        {
          v32 = v60 + v16;
          if (v61 < v60 || v61 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v61 != v60)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v60 = v32;
          v31 = a2;
        }
        else
        {
          v31 = a2 + v16;
          if (v61 < a2 || v61 >= v31)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v61 == a2)
          {
            v30 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v61 = v30 + v16;
        a4 = v60;
        if (v60 >= v56)
          break;
        a2 = v31;
      }
      while (v31 < a3);
    }
LABEL_60:
    sub_21DC5B6B0(&v61, &v60, (uint64_t *)&v59);
    return 1;
  }
LABEL_64:
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC6F368(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char v62;
  void (*v63)(char *, uint64_t);
  void (*v64)(char *, uint64_t);
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v70;
  void (*v71)(char *, unint64_t, uint64_t);
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  unsigned int v79;
  char *v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char v86;
  char *v87;
  char v88;
  void (*v89)(char *, uint64_t);
  void (*v90)(char *, uint64_t);
  BOOL v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t result;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  char *v98;
  void (*v99)(char *, unint64_t, uint64_t);
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;

  v110 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A81A8);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v102 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v101 = (char *)&v95 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v100 = (char *)&v95 - v16;
  MEMORY[0x24BDAC7A8](v15, v17);
  v99 = (void (*)(char *, unint64_t, uint64_t))((char *)&v95 - v18);
  v19 = sub_21DC71588();
  v20 = *(_QWORD *)(v19 - 8);
  v22 = MEMORY[0x24BDAC7A8](v19, v21);
  v98 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v105 = (char *)&v95 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  v97 = (char *)&v95 - v29;
  MEMORY[0x24BDAC7A8](v28, v30);
  v104 = (uint64_t)&v95 - v31;
  v32 = sub_21DC718A0();
  v34 = MEMORY[0x24BDAC7A8](v32, v33);
  v109 = (char *)&v95 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x24BDAC7A8](v34, v36);
  v103 = (char *)&v95 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37, v39);
  v42 = (char *)&v95 - v41;
  MEMORY[0x24BDAC7A8](v40, v43);
  v45 = (char *)&v95 - v44;
  v47 = *(_QWORD *)(v46 + 72);
  v106 = v46;
  v107 = v47;
  if (!v47)
  {
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  if (a2 - a1 == 0x8000000000000000 && v107 == -1)
    goto LABEL_74;
  v48 = v110 - a2;
  if (v110 - a2 == 0x8000000000000000 && v107 == -1)
    goto LABEL_75;
  v49 = (uint64_t)(a2 - a1) / v107;
  v113 = a1;
  v112 = a4;
  v50 = v48 / v107;
  v108 = v20;
  if (v49 >= v48 / v107)
  {
    if ((v50 & 0x8000000000000000) == 0)
    {
      v52 = v50 * v107;
      if (a4 < a2 || a2 + v52 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v68 = a4 + v52;
      v111 = a4 + v52;
      v113 = a2;
      v100 = (char *)a1;
      if (v52 >= 1 && a1 < a2)
      {
        v70 = -v107;
        v99 = *(void (**)(char *, unint64_t, uint64_t))(v106 + 16);
        v96 = a4;
        v104 = -v107;
        do
        {
          v71 = v99;
          v99(v103, v68 + v70, v32);
          v72 = a2 + v70;
          v71(v109, a2 + v70, v32);
          v73 = v101;
          sub_21DC7184C();
          v74 = (uint64_t)v73;
          v75 = v108;
          v76 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v108 + 48);
          if (v76(v74, 1, v19) == 1)
          {
            sub_21DC71558();
            sub_21DC07C84(v74, (uint64_t *)&unk_2553A81A8);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v75 + 32))(v105, v74, v19);
          }
          v77 = v32;
          v78 = (uint64_t)v102;
          sub_21DC7184C();
          v79 = v76(v78, 1, v19);
          v107 = a2;
          v80 = v98;
          if (v79 == 1)
          {
            sub_21DC71558();
            sub_21DC07C84(v78, (uint64_t *)&unk_2553A81A8);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v75 + 32))(v98, v78, v19);
          }
          v81 = v110;
          v82 = v19;
          v84 = v104;
          v83 = v105;
          v85 = (char *)(v110 + v104);
          v86 = _s26AIMLInstrumentationStreams20TranscriptProtoEventV1loiySbAC_ACtFZ_0();
          v87 = v80;
          v88 = v86;
          v89 = *(void (**)(char *, uint64_t))(v75 + 8);
          v89(v87, v82);
          v89(v83, v82);
          v90 = *(void (**)(char *, uint64_t))(v106 + 8);
          v90(v109, v77);
          v90(v103, v77);
          v19 = v82;
          if ((v88 & 1) != 0)
          {
            if (v81 < v107 || (unint64_t)v85 >= v107)
            {
              v32 = v77;
              swift_arrayInitWithTakeFrontToBack();
              v92 = v96;
              v70 = v104;
            }
            else
            {
              v91 = v81 == v107;
              v92 = v96;
              v32 = v77;
              v70 = v104;
              if (!v91)
                swift_arrayInitWithTakeBackToFront();
            }
            v113 += v70;
          }
          else
          {
            v93 = v111;
            v111 += v84;
            v70 = v84;
            if (v81 < v93 || (unint64_t)v85 >= v93)
            {
              v32 = v77;
              swift_arrayInitWithTakeFrontToBack();
              v72 = v107;
            }
            else
            {
              v32 = v77;
              v72 = v107;
              if (v81 != v93)
                swift_arrayInitWithTakeBackToFront();
            }
            v92 = v96;
          }
          v68 = v111;
          if (v111 <= v92)
            break;
          a2 = v72;
          v110 = (unint64_t)v85;
        }
        while (v72 > (unint64_t)v100);
      }
      goto LABEL_72;
    }
  }
  else if ((v49 & 0x8000000000000000) == 0)
  {
    v51 = v49 * v107;
    if (a4 < a1 || a1 + v51 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v109 = (char *)(a4 + v51);
    v111 = a4 + v51;
    if (v51 >= 1 && a2 < v110)
    {
      v105 = *(char **)(v106 + 16);
      v54 = (char *)v104;
      do
      {
        v55 = v105;
        ((void (*)(char *, unint64_t, uint64_t))v105)(v45, a2, v32);
        ((void (*)(char *, unint64_t, uint64_t))v55)(v42, a4, v32);
        v56 = (uint64_t)v99;
        sub_21DC7184C();
        v57 = v108;
        v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v108 + 48);
        if (v58(v56, 1, v19) == 1)
        {
          sub_21DC71558();
          sub_21DC07C84(v56, (uint64_t *)&unk_2553A81A8);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v104, v56, v19);
        }
        v59 = (uint64_t)v100;
        sub_21DC7184C();
        if (v58(v59, 1, v19) == 1)
        {
          v60 = v97;
          sub_21DC71558();
          sub_21DC07C84(v59, (uint64_t *)&unk_2553A81A8);
          v61 = v108;
        }
        else
        {
          v61 = v108;
          v60 = v97;
          (*(void (**)(char *, uint64_t, uint64_t))(v108 + 32))(v97, v59, v19);
        }
        v62 = _s26AIMLInstrumentationStreams20TranscriptProtoEventV1loiySbAC_ACtFZ_0();
        v63 = *(void (**)(char *, uint64_t))(v61 + 8);
        v63(v60, v19);
        v63(v54, v19);
        v64 = *(void (**)(char *, uint64_t))(v106 + 8);
        v64(v42, v32);
        v64(v45, v32);
        v65 = v113;
        if ((v62 & 1) != 0)
        {
          v66 = a2 + v107;
          if (v113 < a2 || v113 >= v66)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v113 == a2)
          {
            v65 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v67 = v112 + v107;
          if (v113 < v112 || v113 >= v67)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v113 != v112)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v112 = v67;
          v66 = a2;
        }
        v113 = v65 + v107;
        a4 = v112;
        if (v112 >= (unint64_t)v109)
          break;
        a2 = v66;
      }
      while (v66 < v110);
    }
LABEL_72:
    sub_21DC5B6BC(&v113, &v112, (uint64_t *)&v111);
    return 1;
  }
LABEL_76:
  result = sub_21DC72008();
  __break(1u);
  return result;
}

uint64_t sub_21DC6FBE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21DC6A38C();
  *a1 = result;
  return result;
}

uint64_t sub_21DC6FC08(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___events);
}

uint64_t sub_21DC6FC14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21DC6A444();
  *a1 = result;
  return result;
}

uint64_t sub_21DC6FC3C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___selfEvents);
}

uint64_t sub_21DC6FC48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21DC6A720();
  *a1 = result;
  return result;
}

uint64_t sub_21DC6FC70(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___transcriptEvents);
}

uint64_t sub_21DC6FC7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21DC6AA9C();
  *a1 = result;
  return result;
}

uint64_t sub_21DC6FCA4(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___gfiEvents);
}

uint64_t sub_21DC6FCB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21DC6AE40();
  *a1 = result;
  return result;
}

uint64_t sub_21DC6FCD8(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___telemetryEvents);
}

uint64_t sub_21DC6FCE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21DC6B1E4();
  *a1 = result;
  return result;
}

uint64_t sub_21DC6FD0C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___selfEventGraphs);
}

uint64_t sub_21DC6FD18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21DC6B9B4();
  *a1 = result;
  return result;
}

uint64_t sub_21DC6FD40(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC26AIMLInstrumentationStreams15BiomeEventGraph____lazy_storage___siriTurns);
}

uint64_t keypath_setTm(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  *(_QWORD *)(*a2 + *a5) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21DC6FD80()
{
  return type metadata accessor for BiomeEventGraph();
}

uint64_t sub_21DC6FD88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21DC719D8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for BiomeEventGraph()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BiomeEventGraph.date.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of BiomeEventGraph.__allocating_init(timestamp:events:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of BiomeEventGraph.events.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of BiomeEventGraph.events.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of BiomeEventGraph.events.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of BiomeEventGraph.selfEvents.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of BiomeEventGraph.selfEvents.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of BiomeEventGraph.selfEvents.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of BiomeEventGraph.transcriptEvents.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of BiomeEventGraph.transcriptEvents.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of BiomeEventGraph.transcriptEvents.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of BiomeEventGraph.gfiEvents.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of BiomeEventGraph.gfiEvents.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of BiomeEventGraph.gfiEvents.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of BiomeEventGraph.telemetryEvents.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of BiomeEventGraph.telemetryEvents.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of BiomeEventGraph.telemetryEvents.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of BiomeEventGraph.selfEventGraphs.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of BiomeEventGraph.selfEventGraphs.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of BiomeEventGraph.selfEventGraphs.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x140))();
}

uint64_t dispatch thunk of BiomeEventGraph.siriTurns.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of BiomeEventGraph.siriTurns.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of BiomeEventGraph.siriTurns.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x158))();
}

uint64_t sub_21DC700A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = sub_21DC715F4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BEE4AF8];
  v13 = *(_QWORD *)(a1 + 56);
  v30 = a1 + 56;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v17 = (uint64_t *)(a2 + 24);
  v32 = a1;
  swift_bridgeObjectRetain();
  result = swift_beginAccess();
  v19 = 0;
  v31 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v20 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v21 = v20 | (v19 << 6);
      goto LABEL_24;
    }
    v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v31)
      goto LABEL_29;
    v23 = *(_QWORD *)(v30 + 8 * v22);
    ++v19;
    if (!v23)
    {
      v19 = v22 + 1;
      if (v22 + 1 >= v31)
        goto LABEL_29;
      v23 = *(_QWORD *)(v30 + 8 * v19);
      if (!v23)
      {
        v19 = v22 + 2;
        if (v22 + 2 >= v31)
          goto LABEL_29;
        v23 = *(_QWORD *)(v30 + 8 * v19);
        if (!v23)
        {
          v19 = v22 + 3;
          if (v22 + 3 >= v31)
            goto LABEL_29;
          v23 = *(_QWORD *)(v30 + 8 * v19);
          if (!v23)
            break;
        }
      }
    }
LABEL_23:
    v16 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_24:
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v12, *(_QWORD *)(v32 + 48) + *(_QWORD *)(v5 + 72) * v21, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v12, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) == 1)
      goto LABEL_30;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v12, v4);
    v25 = *v17;
    if (*(_QWORD *)(*v17 + 16))
    {
      swift_bridgeObjectRetain();
      v26 = sub_21DC0A740((uint64_t)v8);
      v27 = MEMORY[0x24BEE4AF8];
      if ((v28 & 1) != 0)
      {
        v27 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v26);
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v27 = MEMORY[0x24BEE4AF8];
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    result = sub_21DC52E58(v27);
  }
  v24 = v22 + 4;
  if (v24 >= v31)
  {
LABEL_29:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v12, 1, 1, v4);
LABEL_30:
    swift_release();
    return v33;
  }
  v23 = *(_QWORD *)(v30 + 8 * v24);
  if (v23)
  {
    v19 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v31)
      goto LABEL_29;
    v23 = *(_QWORD *)(v30 + 8 * v19);
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_32:
  __break(1u);
  return result;
}

_QWORD *sub_21DC703C0(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;

  swift_beginAccess();
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    v3 = sub_21DC71FCC();
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if (v3)
  {
    v22 = v2;
    v23 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v24 = v2 & 0xC000000000000001;
    v4 = 4;
    while (1)
    {
      if (v24)
        v5 = (id)MEMORY[0x22079D208](v4 - 4, v2);
      else
        v5 = *(id *)(v2 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_21DC13C88(0, &qword_2553A8488);
      sub_21DC13C88(0, &qword_2553A8690);
      v8 = (void *)sub_21DC7175C();
      if (v8)
      {
        v10 = v8;
        v11 = v9;
        v12 = objc_msgSend(v8, sel_eventMetadata);
        if (v12)
        {
          v13 = v12;
          v14 = objc_msgSend(v12, sel_resultCandidateId);

          if (v14)
          {
            v15 = sub_21DC71AB0();
            v17 = v16;

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v23 = sub_21DC14F90(0, v23[2] + 1, 1, v23);
            v19 = v23[2];
            v18 = v23[3];
            if (v19 >= v18 >> 1)
              v23 = sub_21DC14F90((_QWORD *)(v18 > 1), v19 + 1, 1, v23);
            v23[2] = v19 + 1;
            v20 = &v23[2 * v19];
            v20[4] = v15;
            v20[5] = v17;
            v2 = v22;
            goto LABEL_7;
          }
        }

      }
LABEL_7:
      ++v4;
      if (v7 == v3)
        goto LABEL_21;
    }
  }
  v23 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_21:
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t ComponentGroup<>.selectedResultCandidateId.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = sub_21DC703C0(v0);
  if (v1[2])
  {
    v2 = v1[4];
    swift_bridgeObjectRetain();
  }
  else
  {
    v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t ComponentGroup<>.eventsWithSelectedResultCandidateId.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (sub_21DC703C0(v0)[2])
    swift_bridgeObjectRetain();
  v1 = swift_bridgeObjectRelease();
  MEMORY[0x24BDAC7A8](v1, v2);
  v3 = swift_retain();
  v4 = sub_21DC70800(v3, (uint64_t (*)(void))sub_21DC707F8);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_21DC70714(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v5 = objc_msgSend(a1, sel_eventMetadata);
  if (!v5)
    return a3 == 0;
  v6 = v5;
  v7 = objc_msgSend(v5, sel_resultCandidateId);

  if (!v7)
    return a3 == 0;
  v8 = sub_21DC71AB0();
  v10 = v9;

  if (a3)
  {
    if (v8 == a2 && v10 == a3)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v12 = sub_21DC720A4();
      swift_bridgeObjectRelease();
      return v12 & 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_21DC707F8(void *a1)
{
  uint64_t v1;

  return sub_21DC70714(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_21DC70800(uint64_t a1, uint64_t (*a2)(void))
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v15;

  v15 = MEMORY[0x24BEE4AF8];
  swift_beginAccess();
  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (v3 >> 62)
    goto LABEL_17;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      while ((v3 & 0xC000000000000001) != 0)
      {
        v6 = (id)MEMORY[0x22079D208](v5, v3);
LABEL_9:
        v7 = v6;
        v8 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_16;
        sub_21DC13C88(0, &qword_2553A8488);
        v9 = sub_21DC71750();
        if (v9 && (v10 = (void *)v9, v11 = a2(), v10, (v11 & 1) != 0))
        {
          sub_21DC71F00();
          sub_21DC71F30();
          sub_21DC71F3C();
          sub_21DC71F0C();
        }
        else
        {

        }
        ++v5;
        if (v8 == v4)
        {
          v12 = v15;
          goto LABEL_19;
        }
      }
      if (v5 < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      swift_bridgeObjectRetain();
      v4 = sub_21DC71FCC();
      swift_bridgeObjectRelease();
      if (!v4)
        goto LABEL_18;
    }
    v6 = *(id *)(v3 + 8 * v5 + 32);
    goto LABEL_9;
  }
LABEL_18:
  v12 = MEMORY[0x24BEE4AF8];
LABEL_19:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_21DC709BC(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;

  v14 = MEMORY[0x24BEE4AF8];
  swift_beginAccess();
  v2 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (v2 >> 62)
    goto LABEL_18;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      while ((v2 & 0xC000000000000001) != 0)
      {
        v5 = (id)MEMORY[0x22079D208](v4, v2);
LABEL_9:
        v6 = v5;
        v7 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_17;
        sub_21DC13C88(0, &qword_2553AA7D8);
        v8 = (void *)sub_21DC71750();
        if (v8)
        {
          v9 = v8;
          v10 = objc_msgSend(v8, sel_ended);
          if (v10)
          {
            v11 = v10;

            sub_21DC71F00();
            sub_21DC71F30();
            sub_21DC71F3C();
            sub_21DC71F0C();
          }
          else
          {

          }
        }
        else
        {

        }
        ++v4;
        if (v7 == v3)
        {
          v12 = v14;
          goto LABEL_20;
        }
      }
      if (v4 < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      swift_bridgeObjectRetain();
      v3 = sub_21DC71FCC();
      swift_bridgeObjectRelease();
      if (!v3)
        goto LABEL_19;
    }
    v5 = *(id *)(v2 + 8 * v4 + 32);
    goto LABEL_9;
  }
LABEL_19:
  v12 = MEMORY[0x24BEE4AF8];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_21DC70B90()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  id v15;

  v1 = v0;
  v2 = sub_21DC13C88(0, &qword_2553A8DC0);
  v3 = sub_21DC26320();
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_10;
  v4 = sub_21DC0A464(v2);
  if ((v5 & 1) == 0)
    goto LABEL_10;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = sub_21DC089B4(v6);
  swift_bridgeObjectRelease();
  if (!v7)
    return v7;
  v8 = v1;
  v9 = sub_21DC0BFDC(v7, (uint64_t)v8);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8DC8);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v9;
  v12 = MEMORY[0x24BDAC7A8](inited, v11);
  v13 = sub_21DC712B0(v12, (uint64_t (*)(void))sub_21DC7146C);
  if (!(v13 >> 62))
  {
    result = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_6;
LABEL_10:
    swift_bridgeObjectRelease();
    return 0;
  }
  result = sub_21DC71FCC();
  if (!result)
    goto LABEL_10;
LABEL_6:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v15 = (id)MEMORY[0x22079D208](0, v13);
    goto LABEL_9;
  }
  if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(id *)(v13 + 32);
LABEL_9:
    v7 = (uint64_t)v15;
    swift_bridgeObjectRelease();
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC70D20()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t result;
  id v4;
  id v5;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_21DC0DEB8(v0);
  swift_bridgeObjectRelease();
  v2 = sub_21DC7113C(v1, (uint64_t (*)(void))sub_21DC19EE8);
  swift_bridgeObjectRelease();
  if (!(v2 >> 62))
  {
    result = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  result = sub_21DC71FCC();
  if (!result)
    goto LABEL_8;
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x22079D208](0, v2);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(v2 + 32);
LABEL_6:
    v5 = v4;
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC70E10()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t inited;
  unint64_t v11;
  uint64_t result;
  id v13;

  v1 = v0;
  v2 = sub_21DC13C88(0, &qword_2553A8DC0);
  v3 = sub_21DC26320();
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_10;
  v4 = sub_21DC0A464(v2);
  if ((v5 & 1) == 0)
    goto LABEL_10;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = sub_21DC089B4(v6);
  swift_bridgeObjectRelease();
  if (!v7)
    return v7;
  v8 = v1;
  v9 = sub_21DC0BFDC(v7, (uint64_t)v8);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&qword_2553A8DC8);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v9;
  v11 = sub_21DC709BC(inited);
  if (!(v11 >> 62))
  {
    result = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_6;
LABEL_10:
    swift_bridgeObjectRelease();
    return 0;
  }
  result = sub_21DC71FCC();
  if (!result)
    goto LABEL_10;
LABEL_6:
  if ((v11 & 0xC000000000000001) != 0)
  {
    v13 = (id)MEMORY[0x22079D208](0, v11);
    goto LABEL_9;
  }
  if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(id *)(v11 + 32);
LABEL_9:
    v7 = (uint64_t)v13;
    swift_bridgeObjectRelease();
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_21DC70F70(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v23;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2553A98F0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(a1, sel_ended);

  if (!v6)
    return 0;
  v7 = objc_msgSend(a1, sel_trpId);
  if (!v7)
    goto LABEL_5;
  v8 = v7;
  sub_21DC71CFC();

  v9 = sub_21DC715F4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v9) == 1)
  {
    sub_21DC19DF4((uint64_t)v5);
LABEL_5:
    sub_21DC17048();
    v12 = v11;
    goto LABEL_6;
  }
  v14 = sub_21DC715A0();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v9);
  v17 = sub_21DC17048();
  v12 = v18;
  if (v16)
  {
    if (!v18)
    {
      v13 = 0;
      goto LABEL_20;
    }
    if (v14 == v17 && v18 == v16)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = sub_21DC720A4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = 0;
      if ((v20 & 1) == 0)
        return v13;
    }
    goto LABEL_18;
  }
LABEL_6:
  if (!v12)
  {
LABEL_18:
    sub_21DC17048();
    if (v21)
    {
      v13 = 1;
      goto LABEL_20;
    }
    return 0;
  }
  v13 = 0;
LABEL_20:
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_21DC7113C(unint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;
  uint64_t v13;

  v13 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_17;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v5 = (id)MEMORY[0x22079D208](v4, a1);
LABEL_9:
        v6 = v5;
        v7 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_16;
        sub_21DC13C88(0, (unint64_t *)&unk_2553AA7E0);
        v8 = sub_21DC71750();
        if (v8 && (v9 = (void *)v8, v10 = a2(), v9, (v10 & 1) != 0))
        {
          sub_21DC71F00();
          sub_21DC71F30();
          sub_21DC71F3C();
          sub_21DC71F0C();
        }
        else
        {

        }
        ++v4;
        if (v7 == v3)
          return v13;
      }
      if (v4 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      v3 = sub_21DC71FCC();
      if (!v3)
        return MEMORY[0x24BEE4AF8];
    }
    v5 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_21DC712B0(uint64_t a1, uint64_t (*a2)(void))
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v15;

  v15 = MEMORY[0x24BEE4AF8];
  swift_beginAccess();
  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (v3 >> 62)
    goto LABEL_17;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      while ((v3 & 0xC000000000000001) != 0)
      {
        v6 = (id)MEMORY[0x22079D208](v5, v3);
LABEL_9:
        v7 = v6;
        v8 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_16;
        sub_21DC13C88(0, &qword_2553AA7D8);
        v9 = sub_21DC71750();
        if (v9 && (v10 = (void *)v9, v11 = a2(), v10, (v11 & 1) != 0))
        {
          sub_21DC71F00();
          sub_21DC71F30();
          sub_21DC71F3C();
          sub_21DC71F0C();
        }
        else
        {

        }
        ++v5;
        if (v8 == v4)
        {
          v12 = v15;
          goto LABEL_19;
        }
      }
      if (v5 < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      swift_bridgeObjectRetain();
      v4 = sub_21DC71FCC();
      swift_bridgeObjectRelease();
      if (!v4)
        goto LABEL_18;
    }
    v6 = *(id *)(v3 + 8 * v5 + 32);
    goto LABEL_9;
  }
LABEL_18:
  v12 = MEMORY[0x24BEE4AF8];
LABEL_19:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_21DC7146C(void *a1)
{
  return sub_21DC70F70(a1);
}

uint64_t sub_21DC71474()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_21DC71480()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_21DC7148C()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_21DC71498()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_21DC714A4()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_21DC714B0()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_21DC714BC()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t sub_21DC714C8()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_21DC714D4()
{
  return MEMORY[0x24BDCDBF8]();
}

uint64_t sub_21DC714E0()
{
  return MEMORY[0x24BDCDC08]();
}

uint64_t sub_21DC714EC()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_21DC714F8()
{
  return MEMORY[0x24BDCDCA8]();
}

uint64_t sub_21DC71504()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_21DC71510()
{
  return MEMORY[0x24BDCDD78]();
}

uint64_t sub_21DC7151C()
{
  return MEMORY[0x24BDCDE78]();
}

uint64_t sub_21DC71528()
{
  return MEMORY[0x24BDCDE90]();
}

uint64_t sub_21DC71534()
{
  return MEMORY[0x24BDCE2D0]();
}

uint64_t sub_21DC71540()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t _s26AIMLInstrumentationStreams20TranscriptProtoEventV1loiySbAC_ACtFZ_0()
{
  return MEMORY[0x24BDCE5F0]();
}

uint64_t sub_21DC71558()
{
  return MEMORY[0x24BDCE778]();
}

uint64_t sub_21DC71564()
{
  return MEMORY[0x24BDCE780]();
}

uint64_t sub_21DC71570()
{
  return MEMORY[0x24BDCE858]();
}

uint64_t sub_21DC7157C()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_21DC71588()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_21DC71594()
{
  return MEMORY[0x24BDCE998]();
}

uint64_t sub_21DC715A0()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_21DC715AC()
{
  return MEMORY[0x24BDCE9B8]();
}

uint64_t sub_21DC715B8()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t sub_21DC715C4()
{
  return MEMORY[0x24BDCE9D8]();
}

uint64_t sub_21DC715D0()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_21DC715DC()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_21DC715E8()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_21DC715F4()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_21DC71600()
{
  return MEMORY[0x24BE0C850]();
}

uint64_t sub_21DC7160C()
{
  return MEMORY[0x24BE0C878]();
}

uint64_t sub_21DC71618()
{
  return MEMORY[0x24BE0C8D8]();
}

uint64_t sub_21DC71624()
{
  return MEMORY[0x24BE0C8E0]();
}

uint64_t sub_21DC71630()
{
  return MEMORY[0x24BE0C8E8]();
}

uint64_t sub_21DC7163C()
{
  return MEMORY[0x24BE0C900]();
}

uint64_t sub_21DC71648()
{
  return MEMORY[0x24BE0C918]();
}

uint64_t sub_21DC71654()
{
  return MEMORY[0x24BE0C928]();
}

uint64_t sub_21DC71660()
{
  return MEMORY[0x24BE0C938]();
}

uint64_t sub_21DC7166C()
{
  return MEMORY[0x24BE0C960]();
}

uint64_t sub_21DC71678()
{
  return MEMORY[0x24BE908F0]();
}

uint64_t sub_21DC71684()
{
  return MEMORY[0x24BE90900]();
}

uint64_t sub_21DC71690()
{
  return MEMORY[0x24BE90938]();
}

uint64_t sub_21DC7169C()
{
  return MEMORY[0x24BE90948]();
}

uint64_t sub_21DC716A8()
{
  return MEMORY[0x24BE90970]();
}

uint64_t sub_21DC716B4()
{
  return MEMORY[0x24BE90978]();
}

uint64_t sub_21DC716C0()
{
  return MEMORY[0x24BE90980]();
}

uint64_t sub_21DC716CC()
{
  return MEMORY[0x24BE94778]();
}

uint64_t sub_21DC716D8()
{
  return MEMORY[0x24BE94780]();
}

uint64_t sub_21DC716E4()
{
  return MEMORY[0x24BE94788]();
}

uint64_t sub_21DC716F0()
{
  return MEMORY[0x24BE94790]();
}

uint64_t sub_21DC716FC()
{
  return MEMORY[0x24BE94798]();
}

uint64_t sub_21DC71708()
{
  return MEMORY[0x24BE947A0]();
}

uint64_t sub_21DC71714()
{
  return MEMORY[0x24BE947A8]();
}

uint64_t sub_21DC71720()
{
  return MEMORY[0x24BE947B0]();
}

uint64_t sub_21DC7172C()
{
  return MEMORY[0x24BE947B8]();
}

uint64_t sub_21DC71738()
{
  return MEMORY[0x24BE947C0]();
}

uint64_t sub_21DC71744()
{
  return MEMORY[0x24BE947C8]();
}

uint64_t sub_21DC71750()
{
  return MEMORY[0x24BE947D0]();
}

uint64_t sub_21DC7175C()
{
  return MEMORY[0x24BE947D8]();
}

uint64_t sub_21DC71768()
{
  return MEMORY[0x24BE947E0]();
}

uint64_t sub_21DC71774()
{
  return MEMORY[0x24BE947E8]();
}

uint64_t sub_21DC71780()
{
  return MEMORY[0x24BE947F8]();
}

uint64_t sub_21DC7178C()
{
  return MEMORY[0x24BE94800]();
}

uint64_t sub_21DC71798()
{
  return MEMORY[0x24BE94808]();
}

uint64_t sub_21DC717A4()
{
  return MEMORY[0x24BE94810]();
}

uint64_t sub_21DC717B0()
{
  return MEMORY[0x24BE94818]();
}

uint64_t sub_21DC717BC()
{
  return MEMORY[0x24BE94820]();
}

uint64_t sub_21DC717C8()
{
  return MEMORY[0x24BE94828]();
}

uint64_t sub_21DC717D4()
{
  return MEMORY[0x24BE94840]();
}

uint64_t sub_21DC717E0()
{
  return MEMORY[0x24BE94848]();
}

uint64_t sub_21DC717EC()
{
  return MEMORY[0x24BE94850]();
}

uint64_t sub_21DC717F8()
{
  return MEMORY[0x24BE94858]();
}

uint64_t sub_21DC71804()
{
  return MEMORY[0x24BE94860]();
}

uint64_t sub_21DC71810()
{
  return MEMORY[0x24BE94878]();
}

uint64_t sub_21DC7181C()
{
  return MEMORY[0x24BE94880]();
}

uint64_t sub_21DC71828()
{
  return MEMORY[0x24BE94888]();
}

uint64_t sub_21DC71834()
{
  return MEMORY[0x24BE58598]();
}

uint64_t sub_21DC71840()
{
  return MEMORY[0x24BE586C8]();
}

uint64_t sub_21DC7184C()
{
  return MEMORY[0x24BE586E8]();
}

uint64_t sub_21DC71858()
{
  return MEMORY[0x24BE58700]();
}

uint64_t sub_21DC71864()
{
  return MEMORY[0x24BE58710]();
}

uint64_t sub_21DC71870()
{
  return MEMORY[0x24BE58730]();
}

uint64_t sub_21DC7187C()
{
  return MEMORY[0x24BE58740]();
}

uint64_t sub_21DC71888()
{
  return MEMORY[0x24BE58770]();
}

uint64_t sub_21DC71894()
{
  return MEMORY[0x24BE58780]();
}

uint64_t sub_21DC718A0()
{
  return MEMORY[0x24BE587A0]();
}

uint64_t sub_21DC718AC()
{
  return MEMORY[0x24BE587C0]();
}

uint64_t sub_21DC718B8()
{
  return MEMORY[0x24BE58800]();
}

uint64_t sub_21DC718C4()
{
  return MEMORY[0x24BE58818]();
}

uint64_t sub_21DC718D0()
{
  return MEMORY[0x24BE59760]();
}

uint64_t sub_21DC718DC()
{
  return MEMORY[0x24BE59768]();
}

uint64_t sub_21DC718E8()
{
  return MEMORY[0x24BE59770]();
}

uint64_t sub_21DC718F4()
{
  return MEMORY[0x24BE59778]();
}

uint64_t sub_21DC71900()
{
  return MEMORY[0x24BE59780]();
}

uint64_t sub_21DC7190C()
{
  return MEMORY[0x24BE59788]();
}

uint64_t sub_21DC71918()
{
  return MEMORY[0x24BE597E0]();
}

uint64_t sub_21DC71924()
{
  return MEMORY[0x24BE59830]();
}

uint64_t sub_21DC71930()
{
  return MEMORY[0x24BE59840]();
}

uint64_t sub_21DC7193C()
{
  return MEMORY[0x24BE59910]();
}

uint64_t sub_21DC71948()
{
  return MEMORY[0x24BE59920]();
}

uint64_t sub_21DC71954()
{
  return MEMORY[0x24BE59930]();
}

uint64_t sub_21DC71960()
{
  return MEMORY[0x24BE59948]();
}

uint64_t sub_21DC7196C()
{
  return MEMORY[0x24BE59A90]();
}

uint64_t sub_21DC71978()
{
  return MEMORY[0x24BE5A290]();
}

uint64_t sub_21DC71984()
{
  return MEMORY[0x24BE5A330]();
}

uint64_t sub_21DC71990()
{
  return MEMORY[0x24BE5A350]();
}

uint64_t sub_21DC7199C()
{
  return MEMORY[0x24BE5A378]();
}

uint64_t sub_21DC719A8()
{
  return MEMORY[0x24BE5A390]();
}

uint64_t sub_21DC719B4()
{
  return MEMORY[0x24BE5A510]();
}

uint64_t sub_21DC719C0()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_21DC719CC()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_21DC719D8()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_21DC719E4()
{
  return MEMORY[0x24BEE78E8]();
}

uint64_t sub_21DC719F0()
{
  return MEMORY[0x24BEE76B0]();
}

uint64_t sub_21DC719FC()
{
  return MEMORY[0x24BDB9FB0]();
}

uint64_t sub_21DC71A08()
{
  return MEMORY[0x24BEE67F8]();
}

uint64_t sub_21DC71A14()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_21DC71A20()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_21DC71A2C()
{
  return MEMORY[0x24BEE0460]();
}

uint64_t sub_21DC71A38()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_21DC71A44()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_21DC71A50()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_21DC71A5C()
{
  return MEMORY[0x24BEE07E0]();
}

uint64_t sub_21DC71A68()
{
  return MEMORY[0x24BEE07F8]();
}

uint64_t sub_21DC71A74()
{
  return MEMORY[0x24BEE0800]();
}

uint64_t sub_21DC71A80()
{
  return MEMORY[0x24BEE0808]();
}

uint64_t sub_21DC71A8C()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_21DC71A98()
{
  return MEMORY[0x24BDCF880]();
}

uint64_t sub_21DC71AA4()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_21DC71AB0()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_21DC71ABC()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_21DC71AC8()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_21DC71AD4()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_21DC71AE0()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_21DC71AEC()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_21DC71AF8()
{
  return MEMORY[0x24BEE0AD0]();
}

uint64_t sub_21DC71B04()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_21DC71B10()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_21DC71B1C()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_21DC71B28()
{
  return MEMORY[0x24BEE0E40]();
}

uint64_t sub_21DC71B34()
{
  return MEMORY[0x24BEE0E50]();
}

uint64_t sub_21DC71B40()
{
  return MEMORY[0x24BEE0E70]();
}

uint64_t sub_21DC71B4C()
{
  return MEMORY[0x24BEE0EA0]();
}

uint64_t sub_21DC71B58()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_21DC71B64()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_21DC71B70()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_21DC71B7C()
{
  return MEMORY[0x24BE0C978]();
}

uint64_t sub_21DC71B88()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_21DC71B94()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_21DC71BA0()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_21DC71BAC()
{
  return MEMORY[0x24BEE1180]();
}

uint64_t sub_21DC71BB8()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_21DC71BC4()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_21DC71BD0()
{
  return MEMORY[0x24BEE11F8]();
}

uint64_t sub_21DC71BDC()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_21DC71BE8()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_21DC71BF4()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_21DC71C00()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_21DC71C0C()
{
  return MEMORY[0x24BEE6830]();
}

uint64_t sub_21DC71C18()
{
  return MEMORY[0x24BEE6838]();
}

uint64_t sub_21DC71C24()
{
  return MEMORY[0x24BEE6908]();
}

uint64_t sub_21DC71C30()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_21DC71C3C()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_21DC71C48()
{
  return MEMORY[0x24BEE6B10]();
}

uint64_t sub_21DC71C54()
{
  return MEMORY[0x24BDCFCC0]();
}

uint64_t sub_21DC71C60()
{
  return MEMORY[0x24BEE1598]();
}

uint64_t sub_21DC71C6C()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_21DC71C78()
{
  return MEMORY[0x24BEE1608]();
}

uint64_t sub_21DC71C84()
{
  return MEMORY[0x24BEE1678]();
}

uint64_t sub_21DC71C90()
{
  return MEMORY[0x24BEE16D8]();
}

uint64_t sub_21DC71C9C()
{
  return MEMORY[0x24BDCFD28]();
}

uint64_t sub_21DC71CA8()
{
  return MEMORY[0x24BEE18A0]();
}

uint64_t sub_21DC71CB4()
{
  return MEMORY[0x24BEE18D0]();
}

uint64_t sub_21DC71CC0()
{
  return MEMORY[0x24BEE1918]();
}

uint64_t sub_21DC71CCC()
{
  return MEMORY[0x24BEE1980]();
}

uint64_t sub_21DC71CD8()
{
  return MEMORY[0x24BEE19B8]();
}

uint64_t sub_21DC71CE4()
{
  return MEMORY[0x24BEE1A28]();
}

uint64_t sub_21DC71CF0()
{
  return MEMORY[0x24BEE1A78]();
}

uint64_t sub_21DC71CFC()
{
  return MEMORY[0x24BE948A0]();
}

uint64_t sub_21DC71D08()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_21DC71D14()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_21DC71D20()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_21DC71D2C()
{
  return MEMORY[0x24BE948B0]();
}

uint64_t sub_21DC71D38()
{
  return MEMORY[0x24BE948F0]();
}

uint64_t sub_21DC71D44()
{
  return MEMORY[0x24BE948F8]();
}

uint64_t sub_21DC71D50()
{
  return MEMORY[0x24BE94918]();
}

uint64_t sub_21DC71D5C()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_21DC71D68()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_21DC71D74()
{
  return MEMORY[0x24BEE5BC8]();
}

uint64_t sub_21DC71D80()
{
  return MEMORY[0x24BEE79A0]();
}

uint64_t sub_21DC71D8C()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_21DC71D98()
{
  return MEMORY[0x24BDD0498]();
}

uint64_t sub_21DC71DA4()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_21DC71DB0()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_21DC71DBC()
{
  return MEMORY[0x24BEE2090]();
}

uint64_t sub_21DC71DC8()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_21DC71DD4()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_21DC71DE0()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_21DC71DEC()
{
  return MEMORY[0x24BEE22F8]();
}

uint64_t sub_21DC71DF8()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_21DC71E04()
{
  return MEMORY[0x24BEE2308]();
}

uint64_t sub_21DC71E10()
{
  return MEMORY[0x24BEE2320]();
}

uint64_t sub_21DC71E1C()
{
  return MEMORY[0x24BEE2328]();
}

uint64_t sub_21DC71E28()
{
  return MEMORY[0x24BEE2330]();
}

uint64_t sub_21DC71E34()
{
  return MEMORY[0x24BEE2340]();
}

uint64_t sub_21DC71E40()
{
  return MEMORY[0x24BEE2348]();
}

uint64_t sub_21DC71E4C()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_21DC71E58()
{
  return MEMORY[0x24BEE2360]();
}

uint64_t sub_21DC71E64()
{
  return MEMORY[0x24BEE2370]();
}

uint64_t sub_21DC71E70()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_21DC71E7C()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_21DC71E88()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_21DC71E94()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_21DC71EA0()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_21DC71EAC()
{
  return MEMORY[0x24BEE24C8]();
}

uint64_t sub_21DC71EB8()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_21DC71EC4()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_21DC71ED0()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_21DC71EDC()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_21DC71EE8()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_21DC71EF4()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_21DC71F00()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_21DC71F0C()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_21DC71F18()
{
  return MEMORY[0x24BEE2950]();
}

uint64_t sub_21DC71F24()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_21DC71F30()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_21DC71F3C()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_21DC71F48()
{
  return MEMORY[0x24BEE29C0]();
}

uint64_t sub_21DC71F54()
{
  return MEMORY[0x24BEE2A00]();
}

uint64_t sub_21DC71F60()
{
  return MEMORY[0x24BEE2A08]();
}

uint64_t sub_21DC71F6C()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_21DC71F78()
{
  return MEMORY[0x24BEE2EA8]();
}

uint64_t sub_21DC71F84()
{
  return MEMORY[0x24BEE2EE0]();
}

uint64_t sub_21DC71F90()
{
  return MEMORY[0x24BEE2F08]();
}

uint64_t sub_21DC71F9C()
{
  return MEMORY[0x24BEE2F18]();
}

uint64_t sub_21DC71FA8()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_21DC71FB4()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_21DC71FC0()
{
  return MEMORY[0x24BEE2F58]();
}

uint64_t sub_21DC71FCC()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_21DC71FD8()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_21DC71FE4()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_21DC71FF0()
{
  return MEMORY[0x24BEE3090]();
}

uint64_t sub_21DC71FFC()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_21DC72008()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_21DC72014()
{
  return MEMORY[0x24BEE30E0]();
}

uint64_t sub_21DC72020()
{
  return MEMORY[0x24BEE30E8]();
}

uint64_t sub_21DC7202C()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_21DC72038()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_21DC72044()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_21DC72050()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_21DC7205C()
{
  return MEMORY[0x24BEE3540]();
}

uint64_t sub_21DC72068()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_21DC72074()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_21DC72080()
{
  return MEMORY[0x24BEE3938]();
}

uint64_t sub_21DC7208C()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_21DC72098()
{
  return MEMORY[0x24BEE3A28]();
}

uint64_t sub_21DC720A4()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_21DC720B0()
{
  return MEMORY[0x24BEE3B90]();
}

uint64_t sub_21DC720BC()
{
  return MEMORY[0x24BEE3D38]();
}

uint64_t sub_21DC720C8()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_21DC720D4()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_21DC720E0()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_21DC720EC()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_21DC720F8()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_21DC72104()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_21DC72110()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_21DC7211C()
{
  return MEMORY[0x24BDD0730]();
}

uint64_t sub_21DC72128()
{
  return MEMORY[0x24BDD0738]();
}

uint64_t sub_21DC72134()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_21DC72140()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_21DC7214C()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_21DC72158()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_21DC72164()
{
  return MEMORY[0x24BDD0810]();
}

uint64_t sub_21DC72170()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_21DC7217C()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_21DC72188()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_21DC72194()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t BPSDemandMax()
{
  return MEMORY[0x24BE0C980]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x24BE0C258]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t sandbox_extension_consume()
{
  return MEMORY[0x24BDAFC00]();
}

uint64_t sandbox_extension_release()
{
  return MEMORY[0x24BDAFC20]();
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x24BDAFF18](*(_QWORD *)&__errnum);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x24BEE4C70]();
}

uint64_t swift_dynamicCastUnknownClass()
{
  return MEMORY[0x24BEE4C88]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x24BEE4CE8]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x24BEE4D00]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassFromObject()
{
  return MEMORY[0x24BEE4DA8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x24BEE4E60]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x24BEE5058]();
}

uint64_t xpc_copy_entitlement_for_self()
{
  return MEMORY[0x24BDB0828]();
}

BOOL xpc_dictionary_get_BOOL(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x24BDB0908](xdict, key);
}

